openapi: 3.0.1
info:
  description: Azure Bot Service is a platform for creating smart conversational agents.
  title: Azure Bot Service
  version: 2017-12-01
  x-apisguru-categories:
  - cloud
  x-logo:
    url: https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png
  x-origin:
  - format: swagger
    url: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/botservice/resource-manager/Microsoft.BotService/preview/2017-12-01/botservice.json
    version: "2.0"
  x-preferred: false
  x-providerName: azure.com
  x-serviceName: botservice
  x-tags:
  - Azure
  - Microsoft
servers:
- url: https://management.azure.com/
paths:
  /providers/Microsoft.BotService/botServices/checkNameAvailability:
    get:
      description: Check whether a bot name is available.
      operationId: Bots_GetCheckNameAvailability
      parameters:
      - description: Version of the API to be used with the client request. Current
          version is 2017-12-01
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckNameAvailabilityRequestBody'
        description: The request body parameters to provide for the check name availability
          request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckNameAvailabilityResponseBody'
          description: "The resource provider should return 200 (OK) to indicate that\
            \ the operation completed successfully. For other errors (e.g. internal\
            \ errors) use the appropriate HTTP error code.\nThe nextLink field is\
            \ expected to point to the URL the client should use to fetch the next\
            \ page (per server side paging). This matches the OData guidelines for\
            \ paged responses. If a resource provider does not support paging, it\
            \ should return the same body but leave nextLink empty for future compatibility.\n\
            For a detailed explanation of each field in the response body, please\
            \ refer to the request body description in the PUT resource section. "
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response describing why the operation failed
      tags:
      - Bot
      x-ms-examples:
        List Bots by Subscription:
          parameters:
            api-version: 2017-01-01
            parameters:
              name: testbotname
              type: string
          responses:
            "200":
              body:
                message: custom message from server
                valid: true
      x-codegen-request-body-name: parameters
      x-content-type: application/json
      x-accepts:
      - application/json
  /providers/Microsoft.BotService/operations:
    get:
      deprecated: false
      description: Lists all the available BotService operations.
      operationId: Operations_List
      parameters:
      - description: Version of the API to be used with the client request. Current
          version is 2017-12-01
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationEntityListResult'
          description: OK.
      tags:
      - Operations
      x-ms-examples:
        Get Operations:
          parameters:
            api-version: 2017-04-18
          responses:
            "200":
              body:
                value:
                - display:
                    description: Read Bot Service
                    operation: Read Bot Service
                    provider: Microsoft Bot Service
                    resource: Bot Service
                  name: Microsoft.BotService/botService/read
                  origin: "user,system"
                - display:
                    description: Writes Bot Service
                    operation: Write Bot Service
                    provider: Microsoft Bot Service
                    resource: Bot Service
                  name: Microsoft.BotService/botService/write
                  origin: "user,system"
                - display:
                    description: Deletes Bot Service
                    operation: Delete Bot Service
                    provider: Microsoft Bot Service
                    resource: Bot Service
                  name: Microsoft.BotService/botService/delete
                  origin: "user,system"
                - display:
                    description: Check bot name availability
                    operation: Check bot name availability
                    provider: Microsoft Bot Service
                    resource: Bot Service name availability
                  name: Microsoft.BotService/botService/botName/read
                  origin: "user,system"
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
  /subscriptions/{subscriptionId}/providers/Microsoft.BotService/botServices:
    get:
      description: Returns all the resources of a particular type belonging to a subscription.
      operationId: Bots_List
      parameters:
      - description: Version of the API to be used with the client request. Current
          version is 2017-12-01
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Azure Subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BotResponseList'
          description: "The resource provider should return 200 (OK) to indicate that\
            \ the operation completed successfully. For other errors (e.g. internal\
            \ errors) use the appropriate HTTP error code.\nThe nextLink field is\
            \ expected to point to the URL the client should use to fetch the next\
            \ page (per server side paging). This matches the OData guidelines for\
            \ paged responses. If a resource provider does not support paging, it\
            \ should return the same body but leave nextLink empty for future compatibility.\n\
            For a detailed explanation of each field in the response body, please\
            \ refer to the request body description in the PUT resource section. "
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response describing why the operation failed
      tags:
      - Bot
      x-ms-examples:
        List Bots by Subscription:
          parameters:
            api-version: 2017-01-01
            subscriptionId: subscription-id
          responses:
            "200":
              body:
                value:
                - etag: etag1
                  id: someid
                  kind: sdk
                  location: West US
                  name: samplename
                  properties:
                    configuredChannels:
                    - facebook
                    - groupme
                    description: The description of the bot
                    developerAppInsightKey: appinsightskey
                    developerAppInsightsApplicationId: appinsightsappid
                    displayName: The Name of the bot
                    enabledChannels:
                    - facebook
                    endpoint: http://mybot.coffee
                    endpointVersion: version
                    iconUrl: http://myicon
                    luisAppIds:
                    - luisappid1
                    - luisappid2
                    msaAppId: msaappid
                  tags:
                    tag1: value1
                    tag2: value2
                  type: sampletype
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
  /subscriptions/{subscriptionId}/providers/Microsoft.BotService/listAuthServiceProviders:
    post:
      description: Lists the available Service Providers for creating Connection Settings
      operationId: BotConnection_ListServiceProviders
      parameters:
      - description: Version of the API to be used with the client request. Current
          version is 2017-12-01
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Azure Subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceProviderResponseList'
          description: "If resource is retrieved successfully, the service should\
            \ return 200 (OK)."
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response describing why the operation failed
      tags:
      - ListServiceProviders
      x-ms-examples:
        List Auth Service Providers:
          parameters:
            api-version: 2017-01-01
            subscriptionId: subscription-id
          responses:
            "200":
              body:
                value:
                - properties:
                    devPortalUrl: sampleDevPortalUrl
                    displayName: sample display name
                    iconUrl: sampleIconUrl
                    id: sampleId
                    parameters:
                    - default: sampleDefaultValue
                      description: sampleDescription
                      displayName: sampleDisplayName
                      helpUrl: sampleHelpUrl
                      name: sampleParameterName
                      type: sampleParameterType
                    serviceProviderName: sampleServiceProvider
      x-accepts:
      - application/json
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices:
    get:
      description: Returns all the resources of a particular type belonging to a resource
        group
      operationId: Bots_ListByResourceGroup
      parameters:
      - description: The name of the Bot resource group in the user subscription.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 64
          minLength: 2
          pattern: "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Azure Subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Version of the API to be used with the client request. Current
          version is 2017-12-01
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BotResponseList'
          description: "The resource provider should return 200 (OK) to indicate that\
            \ the operation completed successfully. For other errors (e.g. internal\
            \ errors) use the appropriate HTTP error code.\nThe nextLink field is\
            \ expected to point to the URL the client should use to fetch the next\
            \ page (per server side paging). This matches the OData guidelines for\
            \ paged responses here. If a resource provider does not support paging,\
            \ it should return the same body (JSON object with \"value\" property)\
            \ but omit nextLink entirely (or set to null, *not* empty string) for\
            \ future compatibility.\nThe nextLink should be implemented using following\
            \ query parameters:\n· skipToken: opaque token that allows the resource\
            \ provider to skip resources already enumerated. This value is defined\
            \ and returned by the RP after first request via nextLink.\n· top: the\
            \ optional client query parameter which defines the maximum number of\
            \ records to be returned by the server.\nImplementation details:\n· NextLink\
            \ may include all the query parameters (specifically OData $filter) used\
            \ by the client in the first query. \n· Server may return less records\
            \ than requested with nextLink. Returning zero records with NextLink is\
            \ an acceptable response. \nClients must fetch records until the nextLink\
            \ is not returned back / null. Clients should never rely on number of\
            \ returned records to determinate if pagination is completed."
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Error response describing why the operation failed. If the\
            \ resource group does not exist, 404 (NotFound) will be returned."
      tags:
      - Bot
      x-ms-examples:
        List Bots by Resource Group:
          parameters:
            api-version: 2017-01-01
            resourceGroupName: OneResourceGroupName
            subscriptionId: subscription-id
          responses:
            "200":
              body:
                value:
                - etag: etag1
                  id: someid
                  kind: sdk
                  location: West US
                  name: samplename
                  properties:
                    configuredChannels:
                    - facebook
                    - groupme
                    description: The description of the bot
                    developerAppInsightKey: appinsightskey
                    developerAppInsightsApplicationId: appinsightsappid
                    displayName: The Name of the bot
                    enabledChannels:
                    - facebook
                    endpoint: http://mybot.coffee
                    endpointVersion: version
                    iconUrl: http://myicon
                    luisAppIds:
                    - luisappid1
                    - luisappid2
                    msaAppId: msaappid
                  tags:
                    tag1: value1
                    tag2: value2
                  type: sampletype
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}:
    delete:
      description: 'Deletes a Bot Service from the resource group. '
      operationId: Bots_Delete
      parameters:
      - description: The name of the Bot resource group in the user subscription.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 64
          minLength: 2
          pattern: "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the Bot resource.
        in: path
        name: resourceName
        required: true
        schema:
          maxLength: 64
          minLength: 2
          pattern: "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. Current
          version is 2017-12-01
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Azure Subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: A 200 (OK) should be returned if the object exists and was
            deleted successfully;
        "204":
          content: {}
          description: a 204 (NoContent) should be used if the resource does not exist
            and the request is well formed.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response describing why the operation failed
      tags:
      - Bot
      x-ms-examples:
        Delete Bot:
          parameters:
            api-version: 2017-01-01
            resourceGroupName: OneResourceGroupName
            resourceName: samplebotname
            subscriptionId: subscription-id
          responses:
            "200": {}
            "204": {}
      x-accepts:
      - application/json
    get:
      description: Returns a BotService specified by the parameters.
      operationId: Bots_Get
      parameters:
      - description: The name of the Bot resource group in the user subscription.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 64
          minLength: 2
          pattern: "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the Bot resource.
        in: path
        name: resourceName
        required: true
        schema:
          maxLength: 64
          minLength: 2
          pattern: "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. Current
          version is 2017-12-01
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Azure Subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bot'
          description: 'The resource provider should return 200 (OK) to indicate that
            the operation completed successfully. '
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Error response describing why the operation failed. If the\
            \ resource group *or* resource does not exist, 404 (NotFound) should be\
            \ returned."
      tags:
      - Bot
      x-ms-examples:
        Get Bot:
          parameters:
            api-version: 2017-01-01
            resourceGroupName: OneResourceGroupName
            resourceName: samplebotname
            subscriptionId: subscription-id
          responses:
            "200":
              body:
                etag: etag1
                id: someid
                kind: sdk
                location: West US
                name: samplename
                properties:
                  configuredChannels:
                  - facebook
                  - groupme
                  description: The description of the bot
                  developerAppInsightKey: appinsightskey
                  developerAppInsightsApplicationId: appinsightsappid
                  displayName: The Name of the bot
                  enabledChannels:
                  - facebook
                  endpoint: http://mybot.coffee
                  endpointVersion: version
                  iconUrl: http://myicon
                  luisAppIds:
                  - luisappid1
                  - luisappid2
                  msaAppId: msaappid
                tags:
                  tag1: value1
                  tag2: value2
                type: sampletype
      x-accepts:
      - application/json
    patch:
      description: Updates a Bot Service
      operationId: Bots_Update
      parameters:
      - description: The name of the Bot resource group in the user subscription.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 64
          minLength: 2
          pattern: "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the Bot resource.
        in: path
        name: resourceName
        required: true
        schema:
          maxLength: 64
          minLength: 2
          pattern: "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. Current
          version is 2017-12-01
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Azure Subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bot'
        description: The parameters to provide for the created bot.
        required: true
        x-ms-client-flatten: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bot'
          description: 'The resource provider should return 200 (OK) to indicate that
            the operation completed successfully. '
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bot'
          description: "If resource is updated successfully, the service should return\
            \ 201 (Created). Execution to continue asynchronously."
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Error response describing why the operation failed. If the\
            \ resource group *or* resource does not exist, 404 (NotFound) should be\
            \ returned."
      tags:
      - Bot
      x-ms-examples:
        Update Bot:
          parameters:
            api-version: 2017-01-01
            parameters:
              etag: etag1
              id: someid
              kind: sdk
              location: West US
              name: samplename
              properties:
                description: The description of the bot
                developerAppInsightKey: appinsightskey
                developerAppInsightsApiKey: appinsightsapikey
                developerAppInsightsApplicationId: appinsightsappid
                displayName: The Name of the bot
                endpoint: http://mybot.coffee
                iconUrl: http://myicon
                luisAppIds:
                - luisappid1
                - luisappid2
                luisKey: luiskey
                msaAppId: msaappid
              sku:
                name: S1
              tags:
                tag1: value1
                tag2: value2
              type: sampletype
            resourceGroupName: OneResourceGroupName
            resourceName: samplebotname
            subscriptionId: subscription-id
          responses:
            "200":
              body:
                etag: etag1
                id: someid
                kind: sdk
                location: West US
                name: samplename
                properties:
                  configuredChannels:
                  - facebook
                  - groupme
                  description: The description of the bot
                  developerAppInsightKey: appinsightskey
                  developerAppInsightsApplicationId: appinsightsappid
                  displayName: The Name of the bot
                  enabledChannels:
                  - facebook
                  endpoint: http://mybot.coffee
                  endpointVersion: version
                  iconUrl: http://myicon
                  luisAppIds:
                  - luisappid1
                  - luisappid2
                  msaAppId: msaappid
                tags:
                  tag1: value1
                  tag2: value2
                type: sampletype
            "201":
              body:
                etag: etag1
                id: someid
                kind: sdk
                location: West US
                name: samplename
                properties:
                  configuredChannels:
                  - facebook
                  - groupme
                  description: The description of the bot
                  developerAppInsightKey: appinsightskey
                  developerAppInsightsApplicationId: appinsightsappid
                  displayName: The Name of the bot
                  enabledChannels:
                  - facebook
                  endpoint: http://mybot.coffee
                  endpointVersion: version
                  iconUrl: http://myicon
                  luisAppIds:
                  - luisappid1
                  - luisappid2
                  msaAppId: msaappid
                tags:
                  tag1: value1
                  tag2: value2
                type: sampletype
      x-codegen-request-body-name: parameters
      x-content-type: application/json
      x-accepts:
      - application/json
    put:
      description: Creates a Bot Service. Bot Service is a resource group wide resource
        type.
      operationId: Bots_Create
      parameters:
      - description: The name of the Bot resource group in the user subscription.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 64
          minLength: 2
          pattern: "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the Bot resource.
        in: path
        name: resourceName
        required: true
        schema:
          maxLength: 64
          minLength: 2
          pattern: "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. Current
          version is 2017-12-01
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Azure Subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bot'
        description: The parameters to provide for the created bot.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bot'
          description: "If resource is created successfully or already existed, the\
            \ service should return 200 (OK)."
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bot'
          description: "If resource is created successfully, the service should return\
            \ 201 (Created). Execution to continue asynchronously."
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response describing why the operation failed
      tags:
      - Bot
      x-ms-examples:
        Create Bot:
          parameters:
            api-version: 2017-01-01
            parameters:
              etag: etag1
              id: someid
              kind: sdk
              location: West US
              name: samplename
              properties:
                description: The description of the bot
                developerAppInsightKey: appinsightskey
                developerAppInsightsApiKey: appinsightsapikey
                developerAppInsightsApplicationId: appinsightsappid
                displayName: The Name of the bot
                endpoint: http://mybot.coffee
                iconUrl: http://myicon
                luisAppIds:
                - luisappid1
                - luisappid2
                luisKey: luiskey
                msaAppId: exampleappid
              sku:
                name: S1
              tags:
                tag1: value1
                tag2: value2
              type: sampletype
            resourceGroupName: OneResourceGroupName
            resourceName: samplebotname
            subscriptionId: subscription-id
          responses:
            "200":
              body:
                etag: etag1
                id: someid
                kind: sdk
                location: West US
                name: samplename
                properties:
                  configuredChannels:
                  - facebook
                  - groupme
                  description: The description of the bot
                  developerAppInsightKey: appinsightskey
                  developerAppInsightsApplicationId: appinsightsappid
                  displayName: The Name of the bot
                  enabledChannels:
                  - facebook
                  endpoint: http://mybot.coffee
                  endpointVersion: version
                  iconUrl: http://myicon
                  luisAppIds:
                  - luisappid1
                  - luisappid2
                  msaAppId: msaappid
                tags:
                  tag1: value1
                  tag2: value2
                type: sampletype
            "201":
              body:
                id: someid
                kind: sdk
                location: West US
                name: samplename
                properties:
                  configuredChannels:
                  - facebook
                  - groupme
                  description: The description of the bot
                  developerAppInsightsApplicationId: appinsightsappid
                  displayName: The Name of the bot
                  enabledChannels:
                  - facebook
                  endpoint: http://mybot.coffee
                  endpointVersion: version
                  iconUrl: http://myicon
                  luisAppIds:
                  - luisappid1
                  - luisappid2
                  msaAppId: msaappid
                tags:
                  tag1: value1
                  tag2: value2
                type: sampletype
      x-codegen-request-body-name: parameters
      x-content-type: application/json
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/Connections/{connectionName}
  : delete:
      description: Deletes a Connection Setting registration for a Bot Service
      operationId: BotConnection_Delete
      parameters:
      - description: The name of the Bot resource group in the user subscription.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 64
          minLength: 2
          pattern: "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the Bot resource.
        in: path
        name: resourceName
        required: true
        schema:
          maxLength: 64
          minLength: 2
          pattern: "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the Bot Service Connection Setting resource
        in: path
        name: connectionName
        required: true
        schema:
          maxLength: 64
          minLength: 2
          pattern: "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. Current
          version is 2017-12-01
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Azure Subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: A 200 (OK) should be returned if the object exists and was
            deleted successfully;
        "204":
          content: {}
          description: a 204 (NoContent) should be used if the resource does not exist
            and the request is well formed.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response describing why the operation failed
      tags:
      - BotConnection
      x-ms-examples:
        Update Connection Setting:
          parameters:
            api-version: 2017-01-01
            connectionName: sampleConnection
            resourceGroupName: OneResourceGroupName
            resourceName: samplebotname
            subscriptionId: subscription-id
          responses:
            "200": {}
            "204": {}
      x-accepts:
      - application/json
    get:
      description: Get a Connection Setting registration for a Bot Service
      operationId: BotConnection_Get
      parameters:
      - description: The name of the Bot resource group in the user subscription.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 64
          minLength: 2
          pattern: "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the Bot resource.
        in: path
        name: resourceName
        required: true
        schema:
          maxLength: 64
          minLength: 2
          pattern: "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the Bot Service Connection Setting resource
        in: path
        name: connectionName
        required: true
        schema:
          maxLength: 64
          minLength: 2
          pattern: "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. Current
          version is 2017-12-01
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Azure Subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionSetting'
          description: 'The resource provider should return 200 (OK) to indicate that
            the operation completed successfully. '
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Error response describing why the operation failed. If the\
            \ resource group *or* resource does not exist, 404 (NotFound) should be\
            \ returned."
      tags:
      - BotConnection
      x-ms-examples:
        Update Connection Setting:
          parameters:
            api-version: 2017-01-01
            connectionName: sampleConnection
            resourceGroupName: OneResourceGroupName
            resourceName: samplebotname
            subscriptionId: subscription-id
          responses:
            "200":
              body:
                etag: etag1
                id: someid
                location: global
                name: The Name of the Connection Setting
                properties:
                  clientId: sampleclientid
                  clientSecret: samplesecret
                  parameters:
                  - key: key1
                    value: value1
                  - key: key2
                    value: value2
                  scopes: samplescope
                  serviceProviderDisplayName: serviceProviderDisplayName
                  serviceProviderId: serviceproviderid
      x-accepts:
      - application/json
    patch:
      description: Updates a Connection Setting registration for a Bot Service
      operationId: BotConnection_Update
      parameters:
      - description: The name of the Bot resource group in the user subscription.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 64
          minLength: 2
          pattern: "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the Bot resource.
        in: path
        name: resourceName
        required: true
        schema:
          maxLength: 64
          minLength: 2
          pattern: "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the Bot Service Connection Setting resource
        in: path
        name: connectionName
        required: true
        schema:
          maxLength: 64
          minLength: 2
          pattern: "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. Current
          version is 2017-12-01
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Azure Subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionSetting'
        description: The parameters to provide for updating the Connection Setting.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionSetting'
          description: "If resource is created successfully or already existed, the\
            \ service should return 200 (OK)."
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionSetting'
          description: "If resource is created successfully, the service should return\
            \ 201 (Created). Execution to continue asynchronously."
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response describing why the operation failed
      tags:
      - BotConnection
      x-ms-examples:
        Update Connection Setting:
          parameters:
            api-version: 2017-01-01
            connectionName: sampleConnection
            parameters:
              etag: etag1
              id: someid
              location: global
              name: The Name of the Connection Setting
              properties:
                clientId: sampleclientid
                clientSecret: samplesecret
                parameters:
                - key: key1
                  value: value1
                - key: key2
                  value: value2
                scopes: samplescope
                serviceProviderDisplayName: serviceProviderDisplayName
                serviceProviderId: serviceproviderid
            resourceGroupName: OneResourceGroupName
            resourceName: samplebotname
            subscriptionId: subscription-id
          responses:
            "200":
              body:
                id: someid
                location: global
                name: The Name of the Connection Setting
                properties:
                  clientId: sampleclientid
                  clientSecret: samplesecret
                  parameters:
                  - key: key1
                    value: value1
                  - key: key2
                    value: value2
                  scopes: samplescope
                  serviceProviderDisplayName: serviceProviderDisplayName
                  serviceProviderId: serviceproviderid
            "201":
              body:
                etag: etag1
                id: someid
                location: global
                name: The Name of the Connection Setting
                properties:
                  clientId: sampleclientid
                  clientSecret: samplesecret
                  parameters:
                  - key: key1
                    value: value1
                  - key: key2
                    value: value2
                  scopes: samplescope
                  serviceProviderDisplayName: serviceProviderDisplayName
                  serviceProviderId: serviceproviderid
      x-codegen-request-body-name: parameters
      x-content-type: application/json
      x-accepts:
      - application/json
    put:
      description: Register a new Auth Connection for a Bot Service
      operationId: BotConnection_Create
      parameters:
      - description: The name of the Bot resource group in the user subscription.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 64
          minLength: 2
          pattern: "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the Bot resource.
        in: path
        name: resourceName
        required: true
        schema:
          maxLength: 64
          minLength: 2
          pattern: "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the Bot Service Connection Setting resource
        in: path
        name: connectionName
        required: true
        schema:
          maxLength: 64
          minLength: 2
          pattern: "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. Current
          version is 2017-12-01
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Azure Subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionSetting'
        description: The parameters to provide for creating the Connection Setting.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionSetting'
          description: "If resource is created successfully or already existed, the\
            \ service should return 200 (OK)."
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionSetting'
          description: "If resource is created successfully, the service should return\
            \ 201 (Created). Execution to continue asynchronously."
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response describing why the operation failed
      tags:
      - BotConnection
      x-ms-examples:
        Create Connection Setting:
          parameters:
            api-version: 2017-01-01
            connectionName: sampleConnection
            parameters:
              etag: etag1
              id: someid
              location: West US
              name: samplename
              properties:
                clientId: sampleclientid
                clientSecret: samplesecret
                parameters:
                - key: key1
                  value: value1
                - key: key2
                  value: value2
                scopes: samplescope
                serviceProviderId: serviceproviderid
              type: sampletype
            resourceGroupName: OneResourceGroupName
            resourceName: samplebotname
            subscriptionId: subscription-id
          responses:
            "200":
              body:
                etag: etag1
                id: someid
                location: global
                name: The Name of the Connection Setting
                properties:
                  clientId: sampleclientid
                  clientSecret: samplesecret
                  parameters:
                  - key: key1
                    value: value1
                  - key: key2
                    value: value2
                  scopes: samplescope
                  serviceProviderDisplayName: serviceProviderDisplayName
                  serviceProviderId: serviceproviderid
            "201":
              body:
                etag: etag1
                id: someid
                location: global
                name: The Name of the Connection Setting
                properties:
                  clientId: sampleclientid
                  clientSecret: samplesecret
                  parameters:
                  - key: key1
                    value: value1
                  - key: key2
                    value: value2
                  scopes: samplescope
                  serviceProviderDisplayName: serviceProviderDisplayName
                  serviceProviderId: serviceproviderid
      x-codegen-request-body-name: parameters
      x-content-type: application/json
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/Connections/{connectionName}/listWithSecrets
  : post:
      description: Get a Connection Setting registration for a Bot Service
      operationId: BotConnection_ListWithSecrets
      parameters:
      - description: The name of the Bot resource group in the user subscription.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 64
          minLength: 2
          pattern: "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the Bot resource.
        in: path
        name: resourceName
        required: true
        schema:
          maxLength: 64
          minLength: 2
          pattern: "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the Bot Service Connection Setting resource
        in: path
        name: connectionName
        required: true
        schema:
          maxLength: 64
          minLength: 2
          pattern: "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. Current
          version is 2017-12-01
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Azure Subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionSetting'
          description: 'The resource provider should return 200 (OK) to indicate that
            the operation completed successfully. '
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Error response describing why the operation failed. If the\
            \ resource group *or* resource does not exist, 404 (NotFound) should be\
            \ returned."
      tags:
      - BotConnection
      x-ms-examples:
        Update Connection Setting:
          parameters:
            api-version: 2017-01-01
            connectionName: sampleConnection
            resourceGroupName: OneResourceGroupName
            resourceName: samplebotname
            subscriptionId: subscription-id
          responses:
            "200":
              body:
                etag: etag1
                id: someid
                location: global
                name: The Name of the Connection Setting
                properties:
                  clientId: sampleclientid
                  clientSecret: samplesecret
                  parameters:
                  - key: key1
                    value: value1
                  - key: key2
                    value: value2
                  scopes: samplescope
                  serviceProviderDisplayName: serviceProviderDisplayName
                  serviceProviderId: serviceproviderid
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/channels
  : get:
      description: Returns all the Channel registrations of a particular BotService
        resource
      operationId: Channels_ListByResourceGroup
      parameters:
      - description: The name of the Bot resource group in the user subscription.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 64
          minLength: 2
          pattern: "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the Bot resource.
        in: path
        name: resourceName
        required: true
        schema:
          maxLength: 64
          minLength: 2
          pattern: "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Azure Subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Version of the API to be used with the client request. Current
          version is 2017-12-01
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelResponseList'
          description: "The resource provider should return 200 (OK) to indicate that\
            \ the operation completed successfully. For other errors (e.g. internal\
            \ errors) use the appropriate HTTP error code.\nThe nextLink field is\
            \ expected to point to the URL the client should use to fetch the next\
            \ page (per server side paging). This matches the OData guidelines for\
            \ paged responses here. If a resource provider does not support paging,\
            \ it should return the same body (JSON object with \"value\" property)\
            \ but omit nextLink entirely (or set to null, *not* empty string) for\
            \ future compatibility.\nThe nextLink should be implemented using following\
            \ query parameters:\n· skipToken: opaque token that allows the resource\
            \ provider to skip resources already enumerated. This value is defined\
            \ and returned by the RP after first request via nextLink.\n· top: the\
            \ optional client query parameter which defines the maximum number of\
            \ records to be returned by the server.\nImplementation details:\n· NextLink\
            \ may include all the query parameters (specifically OData $filter) used\
            \ by the client in the first query. \n· Server may return less records\
            \ than requested with nextLink. Returning zero records with NextLink is\
            \ an acceptable response. \nClients must fetch records until the nextLink\
            \ is not returned back / null. Clients should never rely on number of\
            \ returned records to determinate if pagination is completed."
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Error response describing why the operation failed. If the\
            \ resource group does not exist, 404 (NotFound) will be returned."
      tags:
      - Channel
      x-ms-examples:
        List Bots by Resource Group:
          parameters:
            api-version: 2017-01-01
            resourceGroupName: OneResourceGroupName
            resourceName: samplebotname
            subscriptionId: subscription-id
          responses:
            "200":
              body:
                value:
                - location: global
                  properties:
                    channelName: EmailChannel
                    properties:
                      emailAddress: a@b.com
                      isEnabled: true
                      password: pwd
                - location: global
                  properties:
                    channelName: FacebookChannel
                    properties:
                      appId: id
                      appSecret: secret
                      callbackUrl: appid
                      isEnabled: true
                      pages:
                      - accessToken: token
                        id: id
                      verifyToken: othertoken
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/channels/{channelName}
  : delete:
      description: Deletes a Channel registration from a Bot Service
      operationId: Channels_Delete
      parameters:
      - description: The name of the Bot resource group in the user subscription.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 64
          minLength: 2
          pattern: "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the Bot resource.
        in: path
        name: resourceName
        required: true
        schema:
          maxLength: 64
          minLength: 2
          pattern: "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the Bot resource.
        in: path
        name: channelName
        required: true
        schema:
          maxLength: 64
          minLength: 2
          pattern: "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          type: string
      - description: Version of the API to be used with the client request. Current
          version is 2017-12-01
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Azure Subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: A 200 (OK) should be returned if the object exists and was
            deleted successfully;
        "204":
          content: {}
          description: a 204 (NoContent) should be used if the resource does not exist
            and the request is well formed.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response describing why the operation failed
      tags:
      - Channel
      x-ms-examples:
        Delete Bot:
          parameters:
            api-version: 2017-01-01
            channelName: EmailChannel
            resourceGroupName: OneResourceGroupName
            resourceName: samplebotname
            subscriptionId: subscription-id
          responses:
            "200": {}
            "204": {}
      x-accepts:
      - application/json
    get:
      description: Returns a BotService Channel registration specified by the parameters.
      operationId: Channels_Get
      parameters:
      - description: The name of the Bot resource group in the user subscription.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 64
          minLength: 2
          pattern: "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the Bot resource.
        in: path
        name: resourceName
        required: true
        schema:
          maxLength: 64
          minLength: 2
          pattern: "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the Bot resource.
        in: path
        name: channelName
        required: true
        schema:
          maxLength: 64
          minLength: 2
          pattern: "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          type: string
      - description: Version of the API to be used with the client request. Current
          version is 2017-12-01
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Azure Subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BotChannel'
          description: 'The resource provider should return 200 (OK) to indicate that
            the operation completed successfully. '
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Error response describing why the operation failed. If the\
            \ resource group *or* resource does not exist, 404 (NotFound) should be\
            \ returned."
      tags:
      - Channel
      x-ms-examples:
        Get Bot:
          parameters:
            api-version: 2017-01-01
            channelName: EmailChannel
            resourceGroupName: OneResourceGroupName
            resourceName: samplebotname
            subscriptionId: subscription-id
          responses:
            "200":
              body:
                location: global
                properties:
                  channelName: EmailChannel
                  properties:
                    emailAddress: a@b.com
                    isEnabled: true
                    password: pwd
      x-accepts:
      - application/json
    patch:
      description: Updates a Channel registration for a Bot Service
      operationId: Channels_Update
      parameters:
      - description: The name of the Bot resource group in the user subscription.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 64
          minLength: 2
          pattern: "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the Bot resource.
        in: path
        name: resourceName
        required: true
        schema:
          maxLength: 64
          minLength: 2
          pattern: "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the Channel resource.
        in: path
        name: channelName
        required: true
        schema:
          enum:
          - FacebookChannel
          - EmailChannel
          - KikChannel
          - TelegramChannel
          - SlackChannel
          - MsTeamsChannel
          - SkypeChannel
          - WebChatChannel
          - DirectLineChannel
          - SmsChannel
          type: string
          x-ms-enum:
            modelAsString: false
            name: channelName
            values:
            - value: FacebookChannel
            - value: EmailChannel
            - value: KikChannel
            - value: TelegramChannel
            - value: SlackChannel
            - value: MsTeamsChannel
            - value: SkypeChannel
            - value: WebChatChannel
            - value: DirectLineChannel
            - value: SmsChannel
          x-ms-parameter-location: method
        x-ms-enum:
          modelAsString: false
          name: channelName
          values:
          - value: FacebookChannel
          - value: EmailChannel
          - value: KikChannel
          - value: TelegramChannel
          - value: SlackChannel
          - value: MsTeamsChannel
          - value: SkypeChannel
          - value: WebChatChannel
          - value: DirectLineChannel
          - value: SmsChannel
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. Current
          version is 2017-12-01
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Azure Subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BotChannel'
        description: The parameters to provide for the created bot.
        required: true
        x-ms-client-flatten: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BotChannel'
          description: 'The resource provider should return 200 (OK) to indicate that
            the operation completed successfully. '
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BotChannel'
          description: "If resource is updated successfully, the service should return\
            \ 201 (Created). Execution to continue asynchronously."
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Error response describing why the operation failed. If the\
            \ resource group *or* resource does not exist, 404 (NotFound) should be\
            \ returned."
      tags:
      - Channel
      x-ms-examples:
        Update Bot:
          parameters:
            api-version: 2017-01-01
            channelName: EmailChannel
            parameters:
              location: global
              properties:
                channelName: EmailChannel
                properties:
                  emailAddress: a@b.com
                  isEnabled: true
                  password: pwd
            resourceGroupName: OneResourceGroupName
            resourceName: samplebotname
            subscriptionId: subscription-id
          responses:
            "200":
              body:
                location: global
                properties:
                  channelName: EmailChannel
                  properties:
                    emailAddress: a@b.com
                    isEnabled: true
                    password: pwd
            "201":
              body:
                location: global
                properties:
                  channelName: EmailChannel
                  properties:
                    emailAddress: a@b.com
                    isEnabled: true
                    password: pwd
      x-codegen-request-body-name: parameters
      x-content-type: application/json
      x-accepts:
      - application/json
    put:
      description: Creates a Channel registration for a Bot Service
      operationId: Channels_Create
      parameters:
      - description: The name of the Bot resource group in the user subscription.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 64
          minLength: 2
          pattern: "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the Bot resource.
        in: path
        name: resourceName
        required: true
        schema:
          maxLength: 64
          minLength: 2
          pattern: "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the Channel resource.
        in: path
        name: channelName
        required: true
        schema:
          enum:
          - FacebookChannel
          - EmailChannel
          - KikChannel
          - TelegramChannel
          - SlackChannel
          - MsTeamsChannel
          - SkypeChannel
          - WebChatChannel
          - DirectLineChannel
          - SmsChannel
          type: string
          x-ms-enum:
            modelAsString: false
            name: channelName
            values:
            - value: FacebookChannel
            - value: EmailChannel
            - value: KikChannel
            - value: TelegramChannel
            - value: SlackChannel
            - value: MsTeamsChannel
            - value: SkypeChannel
            - value: WebChatChannel
            - value: DirectLineChannel
            - value: SmsChannel
          x-ms-parameter-location: method
        x-ms-enum:
          modelAsString: false
          name: channelName
          values:
          - value: FacebookChannel
          - value: EmailChannel
          - value: KikChannel
          - value: TelegramChannel
          - value: SlackChannel
          - value: MsTeamsChannel
          - value: SkypeChannel
          - value: WebChatChannel
          - value: DirectLineChannel
          - value: SmsChannel
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. Current
          version is 2017-12-01
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Azure Subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BotChannel'
        description: The parameters to provide for the created bot.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BotChannel'
          description: "If resource is created successfully or already existed, the\
            \ service should return 200 (OK)."
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BotChannel'
          description: "If resource is created successfully, the service should return\
            \ 201 (Created). Execution to continue asynchronously."
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response describing why the operation failed
      tags:
      - Channel
      x-ms-examples:
        Create Bot:
          parameters:
            api-version: 2017-01-01
            channelName: EmailChannel
            parameters:
              location: global
              properties:
                channelName: EmailChannel
                properties:
                  emailAddress: a@b.com
                  isEnabled: true
                  password: pwd
            resourceGroupName: OneResourceGroupName
            resourceName: samplebotname
            subscriptionId: subscription-id
          responses:
            "200":
              body:
                location: global
                properties:
                  channelName: EmailChannel
                  properties:
                    emailAddress: a@b.com
                    isEnabled: true
                    password: pwd
            "201":
              body:
                location: global
                properties:
                  channelName: EmailChannel
                  properties:
                    emailAddress: a@b.com
                    isEnabled: true
                    password: pwd
      x-codegen-request-body-name: parameters
      x-content-type: application/json
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/channels/{channelName}/listChannelWithKeys
  : post:
      description: Lists a Channel registration for a Bot Service including secrets
      operationId: Channels_ListWithKeys
      parameters:
      - description: The name of the Bot resource group in the user subscription.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 64
          minLength: 2
          pattern: "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the Bot resource.
        in: path
        name: resourceName
        required: true
        schema:
          maxLength: 64
          minLength: 2
          pattern: "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the Channel resource.
        in: path
        name: channelName
        required: true
        schema:
          enum:
          - FacebookChannel
          - EmailChannel
          - KikChannel
          - TelegramChannel
          - SlackChannel
          - MsTeamsChannel
          - SkypeChannel
          - WebChatChannel
          - DirectLineChannel
          - SmsChannel
          type: string
          x-ms-enum:
            modelAsString: false
            name: channelName
            values:
            - value: FacebookChannel
            - value: EmailChannel
            - value: KikChannel
            - value: TelegramChannel
            - value: SlackChannel
            - value: MsTeamsChannel
            - value: SkypeChannel
            - value: WebChatChannel
            - value: DirectLineChannel
            - value: SmsChannel
          x-ms-parameter-location: method
        x-ms-enum:
          modelAsString: false
          name: channelName
          values:
          - value: FacebookChannel
          - value: EmailChannel
          - value: KikChannel
          - value: TelegramChannel
          - value: SlackChannel
          - value: MsTeamsChannel
          - value: SkypeChannel
          - value: WebChatChannel
          - value: DirectLineChannel
          - value: SmsChannel
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. Current
          version is 2017-12-01
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Azure Subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BotChannel'
          description: "If resource is retrieved successfully, the service should\
            \ return 200 (OK)."
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response describing why the operation failed
      tags:
      - Channel
      x-ms-examples:
        List Channel:
          parameters:
            api-version: 2017-01-01
            channelName: EmailChannel
            parameters:
              location: global
            resourceGroupName: OneResourceGroupName
            resourceName: samplebotname
            subscriptionId: subscription-id
          responses:
            "200":
              body:
                location: global
                properties:
                  channelName: EmailChannel
                  properties:
                    emailAddress: a@b.com
                    isEnabled: true
                    password: pwd
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/connections
  : get:
      description: Returns all the Connection Settings registered to a particular
        BotService resource
      operationId: BotConnection_ListByBotService
      parameters:
      - description: The name of the Bot resource group in the user subscription.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 64
          minLength: 2
          pattern: "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the Bot resource.
        in: path
        name: resourceName
        required: true
        schema:
          maxLength: 64
          minLength: 2
          pattern: "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Azure Subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Version of the API to be used with the client request. Current
          version is 2017-12-01
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionSettingResponseList'
          description: "The resource provider should return 200 (OK) to indicate that\
            \ the operation completed successfully. For other errors (e.g. internal\
            \ errors) use the appropriate HTTP error code.\nThe nextLink field is\
            \ expected to point to the URL the client should use to fetch the next\
            \ page (per server side paging). This matches the OData guidelines for\
            \ paged responses here. If a resource provider does not support paging,\
            \ it should return the same body (JSON object with \"value\" property)\
            \ but omit nextLink entirely (or set to null, *not* empty string) for\
            \ future compatibility.\nThe nextLink should be implemented using following\
            \ query parameters:\n· skipToken: opaque token that allows the resource\
            \ provider to skip resources already enumerated. This value is defined\
            \ and returned by the RP after first request via nextLink.\n· top: the\
            \ optional client query parameter which defines the maximum number of\
            \ records to be returned by the server.\nImplementation details:\n· NextLink\
            \ may include all the query parameters (specifically OData $filter) used\
            \ by the client in the first query. \n· Server may return less records\
            \ than requested with nextLink. Returning zero records with NextLink is\
            \ an acceptable response. \nClients must fetch records until the nextLink\
            \ is not returned back / null. Clients should never rely on number of\
            \ returned records to determinate if pagination is completed."
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Error response describing why the operation failed. If the\
            \ resource group does not exist, 404 (NotFound) will be returned."
      tags:
      - BotConnection
      x-ms-examples:
        List Connection Settings:
          parameters:
            api-version: 2017-01-01
            resourceGroupName: OneResourceGroupName
            resourceName: samplebotname
            subscriptionId: subscription-id
          responses:
            "200":
              body:
                value:
                - name: The Name of the Connection Setting
                  properties:
                    clientId: sampleclientid
                    clientSecret: samplesecret
                    parameters:
                    - key: key1
                      value: value1
                    - key: key2
                      value: value2
                    scopes: samplescope
                    serviceProviderId: serviceproviderid
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
components:
  parameters:
    apiVersionParameter:
      description: Version of the API to be used with the client request. Current
        version is 2017-12-01
      in: query
      name: api-version
      required: true
      schema:
        type: string
    channelNameParameter:
      description: The name of the Channel resource.
      in: path
      name: channelName
      required: true
      schema:
        enum:
        - FacebookChannel
        - EmailChannel
        - KikChannel
        - TelegramChannel
        - SlackChannel
        - MsTeamsChannel
        - SkypeChannel
        - WebChatChannel
        - DirectLineChannel
        - SmsChannel
        type: string
        x-ms-enum:
          modelAsString: false
          name: channelName
          values:
          - value: FacebookChannel
          - value: EmailChannel
          - value: KikChannel
          - value: TelegramChannel
          - value: SlackChannel
          - value: MsTeamsChannel
          - value: SkypeChannel
          - value: WebChatChannel
          - value: DirectLineChannel
          - value: SmsChannel
        x-ms-parameter-location: method
      x-ms-enum:
        modelAsString: false
        name: channelName
        values:
        - value: FacebookChannel
        - value: EmailChannel
        - value: KikChannel
        - value: TelegramChannel
        - value: SlackChannel
        - value: MsTeamsChannel
        - value: SkypeChannel
        - value: WebChatChannel
        - value: DirectLineChannel
        - value: SmsChannel
      x-ms-parameter-location: method
    connectionNameParameter:
      description: The name of the Bot Service Connection Setting resource
      in: path
      name: connectionName
      required: true
      schema:
        maxLength: 64
        minLength: 2
        pattern: "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    resourceGroupNameParameter:
      description: The name of the Bot resource group in the user subscription.
      in: path
      name: resourceGroupName
      required: true
      schema:
        maxLength: 64
        minLength: 2
        pattern: "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    resourceNameParameter:
      description: The name of the Bot resource.
      in: path
      name: resourceName
      required: true
      schema:
        maxLength: 64
        minLength: 2
        pattern: "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    subscriptionIdParameter:
      description: Azure Subscription ID.
      in: path
      name: subscriptionId
      required: true
      schema:
        type: string
  schemas:
    Bot:
      allOf:
      - $ref: '#/components/schemas/Resource'
      description: Bot resource definition
      example:
        properties:
          enabledChannels:
          - enabledChannels
          - enabledChannels
          displayName: displayName
          endpointVersion: endpointVersion
          description: description
          luisKey: luisKey
          developerAppInsightsApplicationId: developerAppInsightsApplicationId
          endpoint: endpoint
          developerAppInsightKey: developerAppInsightKey
          developerAppInsightsApiKey: developerAppInsightsApiKey
          configuredChannels:
          - configuredChannels
          - configuredChannels
          luisAppIds:
          - luisAppIds
          - luisAppIds
          msaAppId: msaAppId
          iconUrl: iconUrl
      properties:
        properties:
          $ref: '#/components/schemas/BotProperties'
    BotChannel:
      allOf:
      - $ref: '#/components/schemas/Resource'
      description: Bot channel resource definition
      example:
        properties:
          channelName: channelName
      properties:
        properties:
          $ref: '#/components/schemas/Channel'
    BotProperties:
      description: The parameters to provide for the Bot.
      example:
        enabledChannels:
        - enabledChannels
        - enabledChannels
        displayName: displayName
        endpointVersion: endpointVersion
        description: description
        luisKey: luisKey
        developerAppInsightsApplicationId: developerAppInsightsApplicationId
        endpoint: endpoint
        developerAppInsightKey: developerAppInsightKey
        developerAppInsightsApiKey: developerAppInsightsApiKey
        configuredChannels:
        - configuredChannels
        - configuredChannels
        luisAppIds:
        - luisAppIds
        - luisAppIds
        msaAppId: msaAppId
        iconUrl: iconUrl
      properties:
        configuredChannels:
          description: Collection of channels for which the bot is configured
          items:
            type: string
          readOnly: true
          type: array
        description:
          description: The description of the bot
          type: string
        developerAppInsightKey:
          description: The Application Insights key
          type: string
        developerAppInsightsApiKey:
          description: The Application Insights Api Key
          type: string
        developerAppInsightsApplicationId:
          description: The Application Insights App Id
          type: string
        displayName:
          description: The Name of the bot
          type: string
        enabledChannels:
          description: Collection of channels for which the bot is enabled
          items:
            type: string
          readOnly: true
          type: array
        endpoint:
          description: The bot's endpoint
          type: string
        endpointVersion:
          description: The bot's endpoint version
          readOnly: true
          type: string
        iconUrl:
          description: The Icon Url of the bot
          type: string
        luisAppIds:
          description: Collection of LUIS App Ids
          items:
            type: string
          type: array
        luisKey:
          description: The LUIS Key
          type: string
        msaAppId:
          description: Microsoft App Id for the bot
          type: string
      required:
      - displayName
      - endpoint
      - msaAppId
      type: object
    BotResponseList:
      description: The list of  bot service operation response.
      example:
        value:
        - properties:
            enabledChannels:
            - enabledChannels
            - enabledChannels
            displayName: displayName
            endpointVersion: endpointVersion
            description: description
            luisKey: luisKey
            developerAppInsightsApplicationId: developerAppInsightsApplicationId
            endpoint: endpoint
            developerAppInsightKey: developerAppInsightKey
            developerAppInsightsApiKey: developerAppInsightsApiKey
            configuredChannels:
            - configuredChannels
            - configuredChannels
            luisAppIds:
            - luisAppIds
            - luisAppIds
            msaAppId: msaAppId
            iconUrl: iconUrl
        - properties:
            enabledChannels:
            - enabledChannels
            - enabledChannels
            displayName: displayName
            endpointVersion: endpointVersion
            description: description
            luisKey: luisKey
            developerAppInsightsApplicationId: developerAppInsightsApplicationId
            endpoint: endpoint
            developerAppInsightKey: developerAppInsightKey
            developerAppInsightsApiKey: developerAppInsightsApiKey
            configuredChannels:
            - configuredChannels
            - configuredChannels
            luisAppIds:
            - luisAppIds
            - luisAppIds
            msaAppId: msaAppId
            iconUrl: iconUrl
        nextLink: nextLink
      properties:
        nextLink:
          description: The link used to get the next page of bot service resources.
          type: string
        value:
          description: Gets the list of bot service results and their properties.
          items:
            $ref: '#/components/schemas/Bot'
          readOnly: true
          type: array
      type: object
    Channel:
      description: Channel definition
      discriminator:
        propertyName: channelName
      example:
        channelName: channelName
      properties:
        channelName:
          description: The channel name
          type: string
      required:
      - channelName
      type: object
    ChannelResponseList:
      description: The list of bot service channel operation response.
      example:
        value:
        - properties:
            channelName: channelName
        - properties:
            channelName: channelName
        nextLink: nextLink
      properties:
        nextLink:
          description: The link used to get the next page of bot service channel resources.
          type: string
        value:
          description: Gets the list of bot service channel results and their properties.
          items:
            $ref: '#/components/schemas/BotChannel'
          readOnly: true
          type: array
      type: object
    CheckNameAvailabilityRequestBody:
      description: The request body for a request to Bot Service Management to check
        availability of a bot name.
      example:
        name: name
        type: type
      properties:
        name:
          description: the name of the bot for which availability needs to be checked.
          type: string
        type:
          description: the type of the bot for which availability needs to be checked
          type: string
      type: object
    CheckNameAvailabilityResponseBody:
      description: The response body returned for a request to Bot Service Management
        to check availability of a bot name.
      example:
        valid: true
        message: message
      properties:
        message:
          description: additional message from the bot management api showing why
            a bot name is not available
          type: string
        valid:
          description: indicates if the bot name is valid.
          type: boolean
      type: object
    ConnectionItemName:
      description: The display name of a connection Item Setting registered with the
        Bot
      properties:
        name:
          description: Connection Item name that has been added in the API
          readOnly: true
          type: string
      type: object
    ConnectionSetting:
      allOf:
      - $ref: '#/components/schemas/Resource'
      description: Bot channel resource definition
      example:
        properties:
          clientId: clientId
          serviceProviderId: serviceProviderId
          serviceProviderDisplayName: serviceProviderDisplayName
          clientSecret: clientSecret
          scopes: scopes
          parameters:
          - value: value
            key: key
          - value: value
            key: key
          settingId: settingId
      properties:
        properties:
          $ref: '#/components/schemas/ConnectionSettingProperties'
    ConnectionSettingParameter:
      description: Extra Parameter in a Connection Setting Properties to indicate
        service provider specific properties
      example:
        value: value
        key: key
      properties:
        key:
          description: Key for the Connection Setting Parameter.
          type: string
        value:
          description: Value associated with the Connection Setting Parameter.
          type: string
      type: object
    ConnectionSettingProperties:
      description: Properties for a Connection Setting Item
      example:
        clientId: clientId
        serviceProviderId: serviceProviderId
        serviceProviderDisplayName: serviceProviderDisplayName
        clientSecret: clientSecret
        scopes: scopes
        parameters:
        - value: value
          key: key
        - value: value
          key: key
        settingId: settingId
      properties:
        clientId:
          description: Client Id associated with the Connection Setting.
          type: string
        clientSecret:
          description: Client Secret associated with the Connection Setting
          type: string
        parameters:
          description: Service Provider Parameters associated with the Connection
            Setting
          items:
            $ref: '#/components/schemas/ConnectionSettingParameter'
          type: array
        scopes:
          description: Scopes associated with the Connection Setting
          type: string
        serviceProviderDisplayName:
          description: Service Provider Display Name associated with the Connection
            Setting
          type: string
        serviceProviderId:
          description: Service Provider Id associated with the Connection Setting
          type: string
        settingId:
          description: Setting Id set by the service for the Connection Setting.
          readOnly: true
          type: string
      type: object
    ConnectionSettingResponseList:
      description: The list of bot service connection settings response.
      example:
        value:
        - properties:
            clientId: clientId
            serviceProviderId: serviceProviderId
            serviceProviderDisplayName: serviceProviderDisplayName
            clientSecret: clientSecret
            scopes: scopes
            parameters:
            - value: value
              key: key
            - value: value
              key: key
            settingId: settingId
        - properties:
            clientId: clientId
            serviceProviderId: serviceProviderId
            serviceProviderDisplayName: serviceProviderDisplayName
            clientSecret: clientSecret
            scopes: scopes
            parameters:
            - value: value
              key: key
            - value: value
              key: key
            settingId: settingId
        nextLink: nextLink
      properties:
        nextLink:
          description: The link used to get the next page of bot service connection
            setting resources.
          type: string
        value:
          description: Gets the list of bot service connection settings and their
            properties.
          items:
            $ref: '#/components/schemas/ConnectionSetting'
          readOnly: true
          type: array
      type: object
    DirectLineChannel:
      allOf:
      - $ref: '#/components/schemas/Channel'
      description: Direct Line channel definition
      properties:
        properties:
          $ref: '#/components/schemas/DirectLineChannelProperties'
      x-ms-discriminator-value: DirectLineChannel
    DirectLineChannelProperties:
      description: The parameters to provide for the Direct Line channel.
      properties:
        sites:
          description: The list of Direct Line sites
          items:
            $ref: '#/components/schemas/DirectLineSite'
          type: array
      type: object
    DirectLineSite:
      description: A site for the Direct Line channel
      properties:
        isEnabled:
          description: Whether this site is enabled for DirectLine channel
          type: boolean
        isV1Enabled:
          description: Whether this site is enabled for Bot Framework V1 protocol
          type: boolean
        isV3Enabled:
          description: Whether this site is enabled for Bot Framework V1 protocol
          type: boolean
        key:
          description: "Primary key. Value only returned through POST to the action\
            \ Channel List API, otherwise empty."
          readOnly: true
          type: string
          x-ms-mutability:
          - read
        key2:
          description: "Secondary key. Value only returned through POST to the action\
            \ Channel List API, otherwise empty."
          readOnly: true
          type: string
          x-ms-mutability:
          - read
        siteId:
          description: Site Id
          readOnly: true
          type: string
          x-ms-mutability:
          - read
        siteName:
          description: Site name
          type: string
      required:
      - isEnabled
      - isV1Enabled
      - isV3Enabled
      - siteName
      type: object
    EmailChannel:
      allOf:
      - $ref: '#/components/schemas/Channel'
      description: Email channel definition
      properties:
        properties:
          $ref: '#/components/schemas/EmailChannelProperties'
      x-ms-discriminator-value: EmailChannel
    EmailChannelProperties:
      description: The parameters to provide for the Email channel.
      properties:
        emailAddress:
          description: The email address
          type: string
        isEnabled:
          description: Whether this channel is enabled for the bot
          type: boolean
        password:
          description: "The password for the email address. Value only returned through\
            \ POST to the action Channel List API, otherwise empty."
          type: string
      required:
      - emailAddress
      - isEnabled
      - password
      type: object
    Error:
      description: Bot Service error object.
      example:
        error:
          code: code
          message: message
      properties:
        error:
          $ref: '#/components/schemas/ErrorBody'
      type: object
    ErrorBody:
      description: Bot Service error body.
      example:
        code: code
        message: message
      properties:
        code:
          description: error code
          type: string
        message:
          description: error message
          type: string
      required:
      - code
      - message
      type: object
    FacebookChannel:
      allOf:
      - $ref: '#/components/schemas/Channel'
      description: Facebook channel definition
      properties:
        properties:
          $ref: '#/components/schemas/FacebookChannelProperties'
      x-ms-discriminator-value: FacebookChannel
    FacebookChannelProperties:
      description: The parameters to provide for the Facebook channel.
      properties:
        appId:
          description: Facebook application id
          type: string
        appSecret:
          description: "Facebook application secret. Value only returned through POST\
            \ to the action Channel List API, otherwise empty."
          type: string
        callbackUrl:
          description: Callback Url
          readOnly: true
          type: string
        isEnabled:
          description: Whether this channel is enabled for the bot
          type: boolean
        pages:
          description: The list of Facebook pages
          items:
            $ref: '#/components/schemas/FacebookPage'
          type: array
        verifyToken:
          description: "Verify token. Value only returned through POST to the action\
            \ Channel List API, otherwise empty."
          readOnly: true
          type: string
      required:
      - appId
      - appSecret
      - isEnabled
      type: object
    FacebookPage:
      description: A Facebook page for Facebook channel registration
      properties:
        accessToken:
          description: "Facebook application access token. Value only returned through\
            \ POST to the action Channel List API, otherwise empty."
          type: string
        id:
          description: Page id
          type: string
      required:
      - accessToken
      - id
      type: object
    KikChannel:
      allOf:
      - $ref: '#/components/schemas/Channel'
      description: Kik channel definition
      properties:
        properties:
          $ref: '#/components/schemas/KikChannelProperties'
      x-ms-discriminator-value: KikChannel
    KikChannelProperties:
      description: The parameters to provide for the Kik channel.
      properties:
        apiKey:
          description: "Kik API key. Value only returned through POST to the action\
            \ Channel List API, otherwise empty."
          type: string
        isEnabled:
          description: Whether this channel is enabled for the bot
          type: boolean
        isValidated:
          description: Whether this channel is validated for the bot
          type: boolean
        userName:
          description: The Kik user name
          type: string
      required:
      - apiKey
      - isEnabled
      - userName
      type: object
    Kind:
      description: Indicates the type of bot service
      enum:
      - sdk
      - designer
      - bot
      - function
      type: string
      x-ms-enum:
        modelAsString: true
        name: Kind
    MsTeamsChannel:
      allOf:
      - $ref: '#/components/schemas/Channel'
      description: Microsoft Teams channel definition
      properties:
        properties:
          $ref: '#/components/schemas/MsTeamsChannelProperties'
      x-ms-discriminator-value: MsTeamsChannel
    MsTeamsChannelProperties:
      description: The parameters to provide for the Microsoft Teams channel.
      properties:
        callMode:
          description: Enable messaging for Microsoft Teams channel
          type: string
        enableCalling:
          description: Enable calling for Microsoft Teams channel
          type: boolean
        enableMediaCards:
          description: Enable media cards for Microsoft Teams channel
          type: boolean
        enableMessaging:
          description: Enable messaging for Microsoft Teams channel
          type: boolean
        enableVideo:
          description: Enable video for Microsoft Teams channel
          type: boolean
        isEnabled:
          description: Whether this channel is enabled for the bot
          type: boolean
      required:
      - isEnabled
      type: object
    OperationDisplayInfo:
      description: The operation supported by Bot Service Management.
      example:
        provider: provider
        resource: resource
        description: description
        operation: operation
      properties:
        description:
          description: The description of the operation.
          type: string
        operation:
          description: "The action that users can perform, based on their permission\
            \ level."
          type: string
        provider:
          description: "Service provider: Microsoft Bot Service."
          type: string
        resource:
          description: Resource on which the operation is performed.
          type: string
      type: object
    OperationEntity:
      description: The operations supported by Bot Service Management.
      example:
        display:
          provider: provider
          resource: resource
          description: description
          operation: operation
        origin: origin
        name: name
        properties: "{}"
      properties:
        display:
          $ref: '#/components/schemas/OperationDisplayInfo'
        name:
          description: "Operation name: {provider}/{resource}/{operation}."
          type: string
        origin:
          description: The origin of the operation.
          type: string
        properties:
          description: Additional properties.
          properties: {}
          type: object
      type: object
    OperationEntityListResult:
      description: The list of bot service operation response.
      example:
        value:
        - display:
            provider: provider
            resource: resource
            description: description
            operation: operation
          origin: origin
          name: name
          properties: "{}"
        - display:
            provider: provider
            resource: resource
            description: description
            operation: operation
          origin: origin
          name: name
          properties: "{}"
        nextLink: nextLink
      properties:
        nextLink:
          description: The link used to get the next page of operations.
          type: string
        value:
          description: The list of operations.
          items:
            $ref: '#/components/schemas/OperationEntity'
          type: array
      type: object
    Resource:
      description: Azure resource
      properties:
        etag:
          description: Entity Tag
          type: string
        id:
          description: Specifies the resource ID.
          readOnly: true
          type: string
        kind:
          $ref: '#/components/schemas/Kind'
        location:
          description: Specifies the location of the resource.
          type: string
        name:
          description: Specifies the name of the resource.
          readOnly: true
          type: string
        sku:
          $ref: '#/components/schemas/Sku'
        tags:
          additionalProperties:
            type: string
          description: Contains resource tags defined as key/value pairs.
          type: object
        type:
          description: Specifies the type of the resource.
          readOnly: true
          type: string
      type: object
      x-ms-azure-resource: true
    ServiceProvider:
      description: Service Provider Definition
      example:
        properties:
          displayName: displayName
          iconUrl: iconUrl
          id: id
          parameters:
          - default: default
            displayName: displayName
            name: name
            description: description
            helpUrl: helpUrl
            type: type
          - default: default
            displayName: displayName
            name: name
            description: description
            helpUrl: helpUrl
            type: type
          serviceProviderName: serviceProviderName
          devPortalUrl: devPortalUrl
      properties:
        properties:
          $ref: '#/components/schemas/ServiceProviderProperties'
      type: object
    ServiceProviderParameter:
      description: Extra Parameters specific to each Service Provider
      example:
        default: default
        displayName: displayName
        name: name
        description: description
        helpUrl: helpUrl
        type: type
      properties:
        default:
          description: Default Name for the Service Provider
          readOnly: true
          type: string
        description:
          description: Description of the Service Provider
          readOnly: true
          type: string
        displayName:
          description: Display Name of the Service Provider
          readOnly: true
          type: string
        helpUrl:
          description: Help Url for the  Service Provider
          readOnly: true
          type: string
        name:
          description: Name of the Service Provider
          readOnly: true
          type: string
        type:
          description: Type of the Service Provider
          readOnly: true
          type: string
      type: object
    ServiceProviderProperties:
      description: The Object used to describe a Service Provider supported by Bot
        Service
      example:
        displayName: displayName
        iconUrl: iconUrl
        id: id
        parameters:
        - default: default
          displayName: displayName
          name: name
          description: description
          helpUrl: helpUrl
          type: type
        - default: default
          displayName: displayName
          name: name
          description: description
          helpUrl: helpUrl
          type: type
        serviceProviderName: serviceProviderName
        devPortalUrl: devPortalUrl
      properties:
        devPortalUrl:
          description: Display Name of the Service Provider
          readOnly: true
          type: string
        displayName:
          description: Display Name of the Service Provider
          readOnly: true
          type: string
        iconUrl:
          description: Display Name of the Service Provider
          readOnly: true
          type: string
        id:
          description: Id for Service Provider
          readOnly: true
          type: string
        parameters:
          description: The list of parameters for the Service Provider
          items:
            $ref: '#/components/schemas/ServiceProviderParameter'
          type: array
        serviceProviderName:
          description: Display Name of the Service Provider
          readOnly: true
          type: string
      type: object
    ServiceProviderResponseList:
      description: The list of bot service providers response.
      example:
        value:
        - properties:
            displayName: displayName
            iconUrl: iconUrl
            id: id
            parameters:
            - default: default
              displayName: displayName
              name: name
              description: description
              helpUrl: helpUrl
              type: type
            - default: default
              displayName: displayName
              name: name
              description: description
              helpUrl: helpUrl
              type: type
            serviceProviderName: serviceProviderName
            devPortalUrl: devPortalUrl
        - properties:
            displayName: displayName
            iconUrl: iconUrl
            id: id
            parameters:
            - default: default
              displayName: displayName
              name: name
              description: description
              helpUrl: helpUrl
              type: type
            - default: default
              displayName: displayName
              name: name
              description: description
              helpUrl: helpUrl
              type: type
            serviceProviderName: serviceProviderName
            devPortalUrl: devPortalUrl
        nextLink: nextLink
      properties:
        nextLink:
          description: The link used to get the next page of bot service providers.
          type: string
        value:
          description: Gets the list of bot service providers and their properties.
          items:
            $ref: '#/components/schemas/ServiceProvider'
          readOnly: true
          type: array
      type: object
    Sku:
      description: The SKU of the cognitive services account.
      properties:
        name:
          $ref: '#/components/schemas/SkuName'
        tier:
          description: Gets the sku tier. This is based on the SKU name.
          enum:
          - Free
          - Standard
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: SkuTier
      required:
      - name
      type: object
    SkuName:
      description: The name of SKU.
      enum:
      - F0
      - S1
      type: string
      x-ms-enum:
        modelAsString: true
        name: SkuName
    SkypeChannel:
      allOf:
      - $ref: '#/components/schemas/Channel'
      description: Skype channel definition
      properties:
        properties:
          $ref: '#/components/schemas/SkypeChannelProperties'
      x-ms-discriminator-value: SkypeChannel
    SkypeChannelProperties:
      description: The parameters to provide for the Microsoft Teams channel.
      properties:
        callingWebHook:
          description: Calling web hook for Skype channel
          type: string
        enableCalling:
          description: Enable calling for Skype channel
          type: boolean
        enableGroups:
          description: Enable groups for Skype channel
          type: boolean
        enableMediaCards:
          description: Enable media cards for Skype channel
          type: boolean
        enableMessaging:
          description: Enable messaging for Skype channel
          type: boolean
        enableScreenSharing:
          description: Enable screen sharing for Skype channel
          type: boolean
        enableVideo:
          description: Enable video for Skype channel
          type: boolean
        groupsMode:
          description: Group mode for Skype channel
          type: string
        isEnabled:
          description: Whether this channel is enabled for the bot
          type: boolean
      required:
      - isEnabled
      type: object
    SlackChannel:
      allOf:
      - $ref: '#/components/schemas/Channel'
      description: Slack channel definition
      properties:
        properties:
          $ref: '#/components/schemas/SlackChannelProperties'
      x-ms-discriminator-value: SlackChannel
    SlackChannelProperties:
      description: The parameters to provide for the Slack channel.
      properties:
        clientId:
          description: The Slack client id
          type: string
        clientSecret:
          description: "The Slack client secret. Value only returned through POST\
            \ to the action Channel List API, otherwise empty."
          type: string
        isEnabled:
          description: Whether this channel is enabled for the bot
          type: boolean
        isValidated:
          description: Whether this channel is validated for the bot
          readOnly: true
          type: boolean
        landingPageUrl:
          description: The Slack landing page Url
          type: string
        lastSubmissionId:
          description: The Sms auth token
          readOnly: true
          type: string
        redirectAction:
          description: The Slack redirect action
          readOnly: true
          type: string
        registerBeforeOAuthFlow:
          description: Whether to register the settings before OAuth validation is
            performed. Recommended to True.
          readOnly: true
          type: boolean
        verificationToken:
          description: "The Slack verification token. Value only returned through\
            \ POST to the action Channel List API, otherwise empty."
          type: string
      required:
      - clientId
      - clientSecret
      - isEnabled
      - verificationToken
      type: object
    SmsChannel:
      allOf:
      - $ref: '#/components/schemas/Channel'
      description: Sms channel definition
      properties:
        properties:
          $ref: '#/components/schemas/SmsChannelProperties'
      x-ms-discriminator-value: SmsChannel
    SmsChannelProperties:
      description: The parameters to provide for the Sms channel.
      properties:
        accountSID:
          description: "The Sms account SID. Value only returned through POST to the\
            \ action Channel List API, otherwise empty."
          type: string
        authToken:
          description: "The Sms auth token. Value only returned through POST to the\
            \ action Channel List API, otherwise empty."
          type: string
        isEnabled:
          description: Whether this channel is enabled for the bot
          type: boolean
        isValidated:
          description: Whether this channel is validated for the bot
          type: boolean
        phone:
          description: The Sms phone
          type: string
      required:
      - accountSID
      - authToken
      - isEnabled
      - phone
      type: object
    TelegramChannel:
      allOf:
      - $ref: '#/components/schemas/Channel'
      description: Telegram channel definition
      properties:
        properties:
          $ref: '#/components/schemas/TelegramChannelProperties'
      x-ms-discriminator-value: TelegramChannel
    TelegramChannelProperties:
      description: The parameters to provide for the Telegram channel.
      properties:
        accessToken:
          description: "The Telegram access token. Value only returned through POST\
            \ to the action Channel List API, otherwise empty."
          type: string
        isEnabled:
          description: Whether this channel is enabled for the bot
          type: boolean
        isValidated:
          description: Whether this channel is validated for the bot
          type: boolean
      required:
      - accessToken
      - isEnabled
      type: object
    WebChatChannel:
      allOf:
      - $ref: '#/components/schemas/Channel'
      description: Web Chat channel definition
      properties:
        properties:
          $ref: '#/components/schemas/WebChatChannelProperties'
      x-ms-discriminator-value: WebChatChannel
    WebChatChannelProperties:
      description: The parameters to provide for the Web Chat channel.
      properties:
        sites:
          description: The list of Web Chat sites
          items:
            $ref: '#/components/schemas/WebChatSite'
          type: array
        webChatEmbedCode:
          description: Web chat control embed code
          readOnly: true
          type: string
          x-ms-mutability:
          - read
      type: object
    WebChatSite:
      description: A site for the Webchat channel
      properties:
        enablePreview:
          description: Whether this site is enabled for preview versions of Webchat
          type: boolean
        isEnabled:
          description: Whether this site is enabled for DirectLine channel
          type: boolean
        key:
          description: "Primary key. Value only returned through POST to the action\
            \ Channel List API, otherwise empty."
          readOnly: true
          type: string
          x-ms-mutability:
          - read
        key2:
          description: "Secondary key. Value only returned through POST to the action\
            \ Channel List API, otherwise empty."
          readOnly: true
          type: string
          x-ms-mutability:
          - read
        siteId:
          description: Site Id
          readOnly: true
          type: string
          x-ms-mutability:
          - read
        siteName:
          description: Site name
          type: string
      required:
      - enablePreview
      - isEnabled
      - siteName
      type: object
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
      type: oauth2
x-original-swagger-version: "2.0"

