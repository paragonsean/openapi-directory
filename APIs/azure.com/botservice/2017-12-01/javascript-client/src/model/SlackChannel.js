/**
 * Azure Bot Service
 * Azure Bot Service is a platform for creating smart conversational agents.
 *
 * The version of the OpenAPI document: 2017-12-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Channel from './Channel';
import SlackChannelProperties from './SlackChannelProperties';

/**
 * The SlackChannel model module.
 * @module model/SlackChannel
 * @version 2017-12-01
 */
class SlackChannel {
    /**
     * Constructs a new <code>SlackChannel</code>.
     * Slack channel definition
     * @alias module:model/SlackChannel
     * @extends module:model/Channel
     * @implements module:model/Channel
     * @param channelName {String} The channel name
     */
    constructor(channelName) { 
        Channel.initialize(this, channelName);
        SlackChannel.initialize(this, channelName);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, channelName) { 
    }

    /**
     * Constructs a <code>SlackChannel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SlackChannel} obj Optional instance to populate.
     * @return {module:model/SlackChannel} The populated <code>SlackChannel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SlackChannel();
            Channel.constructFromObject(data, obj);
            Channel.constructFromObject(data, obj);

            if (data.hasOwnProperty('properties')) {
                obj['properties'] = SlackChannelProperties.constructFromObject(data['properties']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SlackChannel</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SlackChannel</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SlackChannel.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `properties`
        if (data['properties']) { // data not null
          SlackChannelProperties.validateJSON(data['properties']);
        }

        return true;
    }


}

SlackChannel.RequiredProperties = ["channelName"];

/**
 * @member {module:model/SlackChannelProperties} properties
 */
SlackChannel.prototype['properties'] = undefined;


// Implement Channel interface:
/**
 * The channel name
 * @member {String} channelName
 */
Channel.prototype['channelName'] = undefined;




export default SlackChannel;

