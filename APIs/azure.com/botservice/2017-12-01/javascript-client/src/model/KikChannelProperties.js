/**
 * Azure Bot Service
 * Azure Bot Service is a platform for creating smart conversational agents.
 *
 * The version of the OpenAPI document: 2017-12-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The KikChannelProperties model module.
 * @module model/KikChannelProperties
 * @version 2017-12-01
 */
class KikChannelProperties {
    /**
     * Constructs a new <code>KikChannelProperties</code>.
     * The parameters to provide for the Kik channel.
     * @alias module:model/KikChannelProperties
     * @param apiKey {String} Kik API key. Value only returned through POST to the action Channel List API, otherwise empty.
     * @param isEnabled {Boolean} Whether this channel is enabled for the bot
     * @param userName {String} The Kik user name
     */
    constructor(apiKey, isEnabled, userName) { 
        
        KikChannelProperties.initialize(this, apiKey, isEnabled, userName);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, apiKey, isEnabled, userName) { 
        obj['apiKey'] = apiKey;
        obj['isEnabled'] = isEnabled;
        obj['userName'] = userName;
    }

    /**
     * Constructs a <code>KikChannelProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/KikChannelProperties} obj Optional instance to populate.
     * @return {module:model/KikChannelProperties} The populated <code>KikChannelProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new KikChannelProperties();

            if (data.hasOwnProperty('apiKey')) {
                obj['apiKey'] = ApiClient.convertToType(data['apiKey'], 'String');
            }
            if (data.hasOwnProperty('isEnabled')) {
                obj['isEnabled'] = ApiClient.convertToType(data['isEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('isValidated')) {
                obj['isValidated'] = ApiClient.convertToType(data['isValidated'], 'Boolean');
            }
            if (data.hasOwnProperty('userName')) {
                obj['userName'] = ApiClient.convertToType(data['userName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>KikChannelProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>KikChannelProperties</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of KikChannelProperties.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['apiKey'] && !(typeof data['apiKey'] === 'string' || data['apiKey'] instanceof String)) {
            throw new Error("Expected the field `apiKey` to be a primitive type in the JSON string but got " + data['apiKey']);
        }
        // ensure the json data is a string
        if (data['userName'] && !(typeof data['userName'] === 'string' || data['userName'] instanceof String)) {
            throw new Error("Expected the field `userName` to be a primitive type in the JSON string but got " + data['userName']);
        }

        return true;
    }


}

KikChannelProperties.RequiredProperties = ["apiKey", "isEnabled", "userName"];

/**
 * Kik API key. Value only returned through POST to the action Channel List API, otherwise empty.
 * @member {String} apiKey
 */
KikChannelProperties.prototype['apiKey'] = undefined;

/**
 * Whether this channel is enabled for the bot
 * @member {Boolean} isEnabled
 */
KikChannelProperties.prototype['isEnabled'] = undefined;

/**
 * Whether this channel is validated for the bot
 * @member {Boolean} isValidated
 */
KikChannelProperties.prototype['isValidated'] = undefined;

/**
 * The Kik user name
 * @member {String} userName
 */
KikChannelProperties.prototype['userName'] = undefined;






export default KikChannelProperties;

