/**
 * Azure Bot Service
 * Azure Bot Service is a platform for creating smart conversational agents.
 *
 * The version of the OpenAPI document: 2017-12-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The FacebookPage model module.
 * @module model/FacebookPage
 * @version 2017-12-01
 */
class FacebookPage {
    /**
     * Constructs a new <code>FacebookPage</code>.
     * A Facebook page for Facebook channel registration
     * @alias module:model/FacebookPage
     * @param accessToken {String} Facebook application access token. Value only returned through POST to the action Channel List API, otherwise empty.
     * @param id {String} Page id
     */
    constructor(accessToken, id) { 
        
        FacebookPage.initialize(this, accessToken, id);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, accessToken, id) { 
        obj['accessToken'] = accessToken;
        obj['id'] = id;
    }

    /**
     * Constructs a <code>FacebookPage</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FacebookPage} obj Optional instance to populate.
     * @return {module:model/FacebookPage} The populated <code>FacebookPage</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FacebookPage();

            if (data.hasOwnProperty('accessToken')) {
                obj['accessToken'] = ApiClient.convertToType(data['accessToken'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FacebookPage</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FacebookPage</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of FacebookPage.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['accessToken'] && !(typeof data['accessToken'] === 'string' || data['accessToken'] instanceof String)) {
            throw new Error("Expected the field `accessToken` to be a primitive type in the JSON string but got " + data['accessToken']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }

        return true;
    }


}

FacebookPage.RequiredProperties = ["accessToken", "id"];

/**
 * Facebook application access token. Value only returned through POST to the action Channel List API, otherwise empty.
 * @member {String} accessToken
 */
FacebookPage.prototype['accessToken'] = undefined;

/**
 * Page id
 * @member {String} id
 */
FacebookPage.prototype['id'] = undefined;






export default FacebookPage;

