/**
 * Azure Bot Service
 * Azure Bot Service is a platform for creating smart conversational agents.
 *
 * The version of the OpenAPI document: 2017-12-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Bot from './model/Bot';
import BotChannel from './model/BotChannel';
import BotProperties from './model/BotProperties';
import BotResponseList from './model/BotResponseList';
import Channel from './model/Channel';
import ChannelResponseList from './model/ChannelResponseList';
import CheckNameAvailabilityRequestBody from './model/CheckNameAvailabilityRequestBody';
import CheckNameAvailabilityResponseBody from './model/CheckNameAvailabilityResponseBody';
import ConnectionItemName from './model/ConnectionItemName';
import ConnectionSetting from './model/ConnectionSetting';
import ConnectionSettingParameter from './model/ConnectionSettingParameter';
import ConnectionSettingProperties from './model/ConnectionSettingProperties';
import ConnectionSettingResponseList from './model/ConnectionSettingResponseList';
import DirectLineChannel from './model/DirectLineChannel';
import DirectLineChannelProperties from './model/DirectLineChannelProperties';
import DirectLineSite from './model/DirectLineSite';
import EmailChannel from './model/EmailChannel';
import EmailChannelProperties from './model/EmailChannelProperties';
import Error from './model/Error';
import ErrorBody from './model/ErrorBody';
import FacebookChannel from './model/FacebookChannel';
import FacebookChannelProperties from './model/FacebookChannelProperties';
import FacebookPage from './model/FacebookPage';
import KikChannel from './model/KikChannel';
import KikChannelProperties from './model/KikChannelProperties';
import Kind from './model/Kind';
import MsTeamsChannel from './model/MsTeamsChannel';
import MsTeamsChannelProperties from './model/MsTeamsChannelProperties';
import OperationDisplayInfo from './model/OperationDisplayInfo';
import OperationEntity from './model/OperationEntity';
import OperationEntityListResult from './model/OperationEntityListResult';
import Resource from './model/Resource';
import ServiceProvider from './model/ServiceProvider';
import ServiceProviderParameter from './model/ServiceProviderParameter';
import ServiceProviderProperties from './model/ServiceProviderProperties';
import ServiceProviderResponseList from './model/ServiceProviderResponseList';
import Sku from './model/Sku';
import SkuName from './model/SkuName';
import SkypeChannel from './model/SkypeChannel';
import SkypeChannelProperties from './model/SkypeChannelProperties';
import SlackChannel from './model/SlackChannel';
import SlackChannelProperties from './model/SlackChannelProperties';
import SmsChannel from './model/SmsChannel';
import SmsChannelProperties from './model/SmsChannelProperties';
import TelegramChannel from './model/TelegramChannel';
import TelegramChannelProperties from './model/TelegramChannelProperties';
import WebChatChannel from './model/WebChatChannel';
import WebChatChannelProperties from './model/WebChatChannelProperties';
import WebChatSite from './model/WebChatSite';
import BotApi from './api/BotApi';
import BotConnectionApi from './api/BotConnectionApi';
import ChannelApi from './api/ChannelApi';
import ListServiceProvidersApi from './api/ListServiceProvidersApi';
import OperationsApi from './api/OperationsApi';


/**
* Azure Bot Service is a platform for creating smart conversational agents..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var AzureBotService = require('index'); // See note below*.
* var xxxSvc = new AzureBotService.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new AzureBotService.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new AzureBotService.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new AzureBotService.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2017-12-01
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Bot model constructor.
     * @property {module:model/Bot}
     */
    Bot,

    /**
     * The BotChannel model constructor.
     * @property {module:model/BotChannel}
     */
    BotChannel,

    /**
     * The BotProperties model constructor.
     * @property {module:model/BotProperties}
     */
    BotProperties,

    /**
     * The BotResponseList model constructor.
     * @property {module:model/BotResponseList}
     */
    BotResponseList,

    /**
     * The Channel model constructor.
     * @property {module:model/Channel}
     */
    Channel,

    /**
     * The ChannelResponseList model constructor.
     * @property {module:model/ChannelResponseList}
     */
    ChannelResponseList,

    /**
     * The CheckNameAvailabilityRequestBody model constructor.
     * @property {module:model/CheckNameAvailabilityRequestBody}
     */
    CheckNameAvailabilityRequestBody,

    /**
     * The CheckNameAvailabilityResponseBody model constructor.
     * @property {module:model/CheckNameAvailabilityResponseBody}
     */
    CheckNameAvailabilityResponseBody,

    /**
     * The ConnectionItemName model constructor.
     * @property {module:model/ConnectionItemName}
     */
    ConnectionItemName,

    /**
     * The ConnectionSetting model constructor.
     * @property {module:model/ConnectionSetting}
     */
    ConnectionSetting,

    /**
     * The ConnectionSettingParameter model constructor.
     * @property {module:model/ConnectionSettingParameter}
     */
    ConnectionSettingParameter,

    /**
     * The ConnectionSettingProperties model constructor.
     * @property {module:model/ConnectionSettingProperties}
     */
    ConnectionSettingProperties,

    /**
     * The ConnectionSettingResponseList model constructor.
     * @property {module:model/ConnectionSettingResponseList}
     */
    ConnectionSettingResponseList,

    /**
     * The DirectLineChannel model constructor.
     * @property {module:model/DirectLineChannel}
     */
    DirectLineChannel,

    /**
     * The DirectLineChannelProperties model constructor.
     * @property {module:model/DirectLineChannelProperties}
     */
    DirectLineChannelProperties,

    /**
     * The DirectLineSite model constructor.
     * @property {module:model/DirectLineSite}
     */
    DirectLineSite,

    /**
     * The EmailChannel model constructor.
     * @property {module:model/EmailChannel}
     */
    EmailChannel,

    /**
     * The EmailChannelProperties model constructor.
     * @property {module:model/EmailChannelProperties}
     */
    EmailChannelProperties,

    /**
     * The Error model constructor.
     * @property {module:model/Error}
     */
    Error,

    /**
     * The ErrorBody model constructor.
     * @property {module:model/ErrorBody}
     */
    ErrorBody,

    /**
     * The FacebookChannel model constructor.
     * @property {module:model/FacebookChannel}
     */
    FacebookChannel,

    /**
     * The FacebookChannelProperties model constructor.
     * @property {module:model/FacebookChannelProperties}
     */
    FacebookChannelProperties,

    /**
     * The FacebookPage model constructor.
     * @property {module:model/FacebookPage}
     */
    FacebookPage,

    /**
     * The KikChannel model constructor.
     * @property {module:model/KikChannel}
     */
    KikChannel,

    /**
     * The KikChannelProperties model constructor.
     * @property {module:model/KikChannelProperties}
     */
    KikChannelProperties,

    /**
     * The Kind model constructor.
     * @property {module:model/Kind}
     */
    Kind,

    /**
     * The MsTeamsChannel model constructor.
     * @property {module:model/MsTeamsChannel}
     */
    MsTeamsChannel,

    /**
     * The MsTeamsChannelProperties model constructor.
     * @property {module:model/MsTeamsChannelProperties}
     */
    MsTeamsChannelProperties,

    /**
     * The OperationDisplayInfo model constructor.
     * @property {module:model/OperationDisplayInfo}
     */
    OperationDisplayInfo,

    /**
     * The OperationEntity model constructor.
     * @property {module:model/OperationEntity}
     */
    OperationEntity,

    /**
     * The OperationEntityListResult model constructor.
     * @property {module:model/OperationEntityListResult}
     */
    OperationEntityListResult,

    /**
     * The Resource model constructor.
     * @property {module:model/Resource}
     */
    Resource,

    /**
     * The ServiceProvider model constructor.
     * @property {module:model/ServiceProvider}
     */
    ServiceProvider,

    /**
     * The ServiceProviderParameter model constructor.
     * @property {module:model/ServiceProviderParameter}
     */
    ServiceProviderParameter,

    /**
     * The ServiceProviderProperties model constructor.
     * @property {module:model/ServiceProviderProperties}
     */
    ServiceProviderProperties,

    /**
     * The ServiceProviderResponseList model constructor.
     * @property {module:model/ServiceProviderResponseList}
     */
    ServiceProviderResponseList,

    /**
     * The Sku model constructor.
     * @property {module:model/Sku}
     */
    Sku,

    /**
     * The SkuName model constructor.
     * @property {module:model/SkuName}
     */
    SkuName,

    /**
     * The SkypeChannel model constructor.
     * @property {module:model/SkypeChannel}
     */
    SkypeChannel,

    /**
     * The SkypeChannelProperties model constructor.
     * @property {module:model/SkypeChannelProperties}
     */
    SkypeChannelProperties,

    /**
     * The SlackChannel model constructor.
     * @property {module:model/SlackChannel}
     */
    SlackChannel,

    /**
     * The SlackChannelProperties model constructor.
     * @property {module:model/SlackChannelProperties}
     */
    SlackChannelProperties,

    /**
     * The SmsChannel model constructor.
     * @property {module:model/SmsChannel}
     */
    SmsChannel,

    /**
     * The SmsChannelProperties model constructor.
     * @property {module:model/SmsChannelProperties}
     */
    SmsChannelProperties,

    /**
     * The TelegramChannel model constructor.
     * @property {module:model/TelegramChannel}
     */
    TelegramChannel,

    /**
     * The TelegramChannelProperties model constructor.
     * @property {module:model/TelegramChannelProperties}
     */
    TelegramChannelProperties,

    /**
     * The WebChatChannel model constructor.
     * @property {module:model/WebChatChannel}
     */
    WebChatChannel,

    /**
     * The WebChatChannelProperties model constructor.
     * @property {module:model/WebChatChannelProperties}
     */
    WebChatChannelProperties,

    /**
     * The WebChatSite model constructor.
     * @property {module:model/WebChatSite}
     */
    WebChatSite,

    /**
    * The BotApi service constructor.
    * @property {module:api/BotApi}
    */
    BotApi,

    /**
    * The BotConnectionApi service constructor.
    * @property {module:api/BotConnectionApi}
    */
    BotConnectionApi,

    /**
    * The ChannelApi service constructor.
    * @property {module:api/ChannelApi}
    */
    ChannelApi,

    /**
    * The ListServiceProvidersApi service constructor.
    * @property {module:api/ListServiceProvidersApi}
    */
    ListServiceProvidersApi,

    /**
    * The OperationsApi service constructor.
    * @property {module:api/OperationsApi}
    */
    OperationsApi
};
