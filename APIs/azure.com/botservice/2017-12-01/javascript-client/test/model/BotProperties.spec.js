/**
 * Azure Bot Service
 * Azure Bot Service is a platform for creating smart conversational agents.
 *
 * The version of the OpenAPI document: 2017-12-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AzureBotService);
  }
}(this, function(expect, AzureBotService) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AzureBotService.BotProperties();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('BotProperties', function() {
    it('should create an instance of BotProperties', function() {
      // uncomment below and update the code to test BotProperties
      //var instance = new AzureBotService.BotProperties();
      //expect(instance).to.be.a(AzureBotService.BotProperties);
    });

    it('should have the property configuredChannels (base name: "configuredChannels")', function() {
      // uncomment below and update the code to test the property configuredChannels
      //var instance = new AzureBotService.BotProperties();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new AzureBotService.BotProperties();
      //expect(instance).to.be();
    });

    it('should have the property developerAppInsightKey (base name: "developerAppInsightKey")', function() {
      // uncomment below and update the code to test the property developerAppInsightKey
      //var instance = new AzureBotService.BotProperties();
      //expect(instance).to.be();
    });

    it('should have the property developerAppInsightsApiKey (base name: "developerAppInsightsApiKey")', function() {
      // uncomment below and update the code to test the property developerAppInsightsApiKey
      //var instance = new AzureBotService.BotProperties();
      //expect(instance).to.be();
    });

    it('should have the property developerAppInsightsApplicationId (base name: "developerAppInsightsApplicationId")', function() {
      // uncomment below and update the code to test the property developerAppInsightsApplicationId
      //var instance = new AzureBotService.BotProperties();
      //expect(instance).to.be();
    });

    it('should have the property displayName (base name: "displayName")', function() {
      // uncomment below and update the code to test the property displayName
      //var instance = new AzureBotService.BotProperties();
      //expect(instance).to.be();
    });

    it('should have the property enabledChannels (base name: "enabledChannels")', function() {
      // uncomment below and update the code to test the property enabledChannels
      //var instance = new AzureBotService.BotProperties();
      //expect(instance).to.be();
    });

    it('should have the property endpoint (base name: "endpoint")', function() {
      // uncomment below and update the code to test the property endpoint
      //var instance = new AzureBotService.BotProperties();
      //expect(instance).to.be();
    });

    it('should have the property endpointVersion (base name: "endpointVersion")', function() {
      // uncomment below and update the code to test the property endpointVersion
      //var instance = new AzureBotService.BotProperties();
      //expect(instance).to.be();
    });

    it('should have the property iconUrl (base name: "iconUrl")', function() {
      // uncomment below and update the code to test the property iconUrl
      //var instance = new AzureBotService.BotProperties();
      //expect(instance).to.be();
    });

    it('should have the property luisAppIds (base name: "luisAppIds")', function() {
      // uncomment below and update the code to test the property luisAppIds
      //var instance = new AzureBotService.BotProperties();
      //expect(instance).to.be();
    });

    it('should have the property luisKey (base name: "luisKey")', function() {
      // uncomment below and update the code to test the property luisKey
      //var instance = new AzureBotService.BotProperties();
      //expect(instance).to.be();
    });

    it('should have the property msaAppId (base name: "msaAppId")', function() {
      // uncomment below and update the code to test the property msaAppId
      //var instance = new AzureBotService.BotProperties();
      //expect(instance).to.be();
    });

  });

}));
