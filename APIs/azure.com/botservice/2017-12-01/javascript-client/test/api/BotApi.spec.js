/**
 * Azure Bot Service
 * Azure Bot Service is a platform for creating smart conversational agents.
 *
 * The version of the OpenAPI document: 2017-12-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AzureBotService);
  }
}(this, function(expect, AzureBotService) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AzureBotService.BotApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('BotApi', function() {
    describe('botsCreate', function() {
      it('should call botsCreate successfully', function(done) {
        //uncomment below and update the code to test botsCreate
        //instance.botsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('botsDelete', function() {
      it('should call botsDelete successfully', function(done) {
        //uncomment below and update the code to test botsDelete
        //instance.botsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('botsGet', function() {
      it('should call botsGet successfully', function(done) {
        //uncomment below and update the code to test botsGet
        //instance.botsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('botsGetCheckNameAvailability', function() {
      it('should call botsGetCheckNameAvailability successfully', function(done) {
        //uncomment below and update the code to test botsGetCheckNameAvailability
        //instance.botsGetCheckNameAvailability(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('botsList', function() {
      it('should call botsList successfully', function(done) {
        //uncomment below and update the code to test botsList
        //instance.botsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('botsListByResourceGroup', function() {
      it('should call botsListByResourceGroup successfully', function(done) {
        //uncomment below and update the code to test botsListByResourceGroup
        //instance.botsListByResourceGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('botsUpdate', function() {
      it('should call botsUpdate successfully', function(done) {
        //uncomment below and update the code to test botsUpdate
        //instance.botsUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
