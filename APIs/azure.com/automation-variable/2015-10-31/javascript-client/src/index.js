/**
 * AutomationManagement
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2015-10-31
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Variable from './model/Variable';
import VariableCreateOrUpdateParameters from './model/VariableCreateOrUpdateParameters';
import VariableCreateOrUpdateProperties from './model/VariableCreateOrUpdateProperties';
import VariableListByAutomationAccountDefaultResponse from './model/VariableListByAutomationAccountDefaultResponse';
import VariableListResult from './model/VariableListResult';
import VariableProperties from './model/VariableProperties';
import VariableUpdateParameters from './model/VariableUpdateParameters';
import VariableUpdateProperties from './model/VariableUpdateProperties';
import VariableApi from './api/VariableApi';


/**
* JS API client generated by OpenAPI Generator.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var AutomationManagement = require('index'); // See note below*.
* var xxxSvc = new AutomationManagement.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new AutomationManagement.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new AutomationManagement.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new AutomationManagement.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2015-10-31
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Variable model constructor.
     * @property {module:model/Variable}
     */
    Variable,

    /**
     * The VariableCreateOrUpdateParameters model constructor.
     * @property {module:model/VariableCreateOrUpdateParameters}
     */
    VariableCreateOrUpdateParameters,

    /**
     * The VariableCreateOrUpdateProperties model constructor.
     * @property {module:model/VariableCreateOrUpdateProperties}
     */
    VariableCreateOrUpdateProperties,

    /**
     * The VariableListByAutomationAccountDefaultResponse model constructor.
     * @property {module:model/VariableListByAutomationAccountDefaultResponse}
     */
    VariableListByAutomationAccountDefaultResponse,

    /**
     * The VariableListResult model constructor.
     * @property {module:model/VariableListResult}
     */
    VariableListResult,

    /**
     * The VariableProperties model constructor.
     * @property {module:model/VariableProperties}
     */
    VariableProperties,

    /**
     * The VariableUpdateParameters model constructor.
     * @property {module:model/VariableUpdateParameters}
     */
    VariableUpdateParameters,

    /**
     * The VariableUpdateProperties model constructor.
     * @property {module:model/VariableUpdateProperties}
     */
    VariableUpdateProperties,

    /**
    * The VariableApi service constructor.
    * @property {module:api/VariableApi}
    */
    VariableApi
};
