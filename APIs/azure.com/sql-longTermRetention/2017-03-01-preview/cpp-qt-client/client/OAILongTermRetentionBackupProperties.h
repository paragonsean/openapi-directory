/**
 * SqlManagementClient
 * The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.
 *
 * The version of the OpenAPI document: 2017-03-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILongTermRetentionBackupProperties.h
 *
 * Properties of a long term retention backup
 */

#ifndef OAILongTermRetentionBackupProperties_H
#define OAILongTermRetentionBackupProperties_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAILongTermRetentionBackupProperties : public OAIObject {
public:
    OAILongTermRetentionBackupProperties();
    OAILongTermRetentionBackupProperties(QString json);
    ~OAILongTermRetentionBackupProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getBackupExpirationTime() const;
    void setBackupExpirationTime(const QDateTime &backup_expiration_time);
    bool is_backup_expiration_time_Set() const;
    bool is_backup_expiration_time_Valid() const;

    QDateTime getBackupTime() const;
    void setBackupTime(const QDateTime &backup_time);
    bool is_backup_time_Set() const;
    bool is_backup_time_Valid() const;

    QDateTime getDatabaseDeletionTime() const;
    void setDatabaseDeletionTime(const QDateTime &database_deletion_time);
    bool is_database_deletion_time_Set() const;
    bool is_database_deletion_time_Valid() const;

    QString getDatabaseName() const;
    void setDatabaseName(const QString &database_name);
    bool is_database_name_Set() const;
    bool is_database_name_Valid() const;

    QDateTime getServerCreateTime() const;
    void setServerCreateTime(const QDateTime &server_create_time);
    bool is_server_create_time_Set() const;
    bool is_server_create_time_Valid() const;

    QString getServerName() const;
    void setServerName(const QString &server_name);
    bool is_server_name_Set() const;
    bool is_server_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_backup_expiration_time;
    bool m_backup_expiration_time_isSet;
    bool m_backup_expiration_time_isValid;

    QDateTime m_backup_time;
    bool m_backup_time_isSet;
    bool m_backup_time_isValid;

    QDateTime m_database_deletion_time;
    bool m_database_deletion_time_isSet;
    bool m_database_deletion_time_isValid;

    QString m_database_name;
    bool m_database_name_isSet;
    bool m_database_name_isValid;

    QDateTime m_server_create_time;
    bool m_server_create_time_isSet;
    bool m_server_create_time_isValid;

    QString m_server_name;
    bool m_server_name_isSet;
    bool m_server_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILongTermRetentionBackupProperties)

#endif // OAILongTermRetentionBackupProperties_H
