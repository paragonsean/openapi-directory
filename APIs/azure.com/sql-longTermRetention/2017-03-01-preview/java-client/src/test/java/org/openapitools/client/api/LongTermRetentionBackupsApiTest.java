/*
 * SqlManagementClient
 * The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.
 *
 * The version of the OpenAPI document: 2017-03-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.LongTermRetentionBackup;
import org.openapitools.client.model.LongTermRetentionBackupListResult;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for LongTermRetentionBackupsApi
 */
@Disabled
public class LongTermRetentionBackupsApiTest {

    private final LongTermRetentionBackupsApi api = new LongTermRetentionBackupsApi();

    /**
     * Deletes a long term retention backup.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void longTermRetentionBackupsDeleteTest() throws ApiException {
        String locationName = null;
        String longTermRetentionServerName = null;
        String longTermRetentionDatabaseName = null;
        String backupName = null;
        String subscriptionId = null;
        String apiVersion = null;
        api.longTermRetentionBackupsDelete(locationName, longTermRetentionServerName, longTermRetentionDatabaseName, backupName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Deletes a long term retention backup.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void longTermRetentionBackupsDeleteByResourceGroupTest() throws ApiException {
        String resourceGroupName = null;
        String locationName = null;
        String longTermRetentionServerName = null;
        String longTermRetentionDatabaseName = null;
        String backupName = null;
        String subscriptionId = null;
        String apiVersion = null;
        api.longTermRetentionBackupsDeleteByResourceGroup(resourceGroupName, locationName, longTermRetentionServerName, longTermRetentionDatabaseName, backupName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets a long term retention backup.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void longTermRetentionBackupsGetTest() throws ApiException {
        String locationName = null;
        String longTermRetentionServerName = null;
        String longTermRetentionDatabaseName = null;
        String backupName = null;
        String subscriptionId = null;
        String apiVersion = null;
        LongTermRetentionBackup response = api.longTermRetentionBackupsGet(locationName, longTermRetentionServerName, longTermRetentionDatabaseName, backupName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets a long term retention backup.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void longTermRetentionBackupsGetByResourceGroupTest() throws ApiException {
        String resourceGroupName = null;
        String locationName = null;
        String longTermRetentionServerName = null;
        String longTermRetentionDatabaseName = null;
        String backupName = null;
        String subscriptionId = null;
        String apiVersion = null;
        LongTermRetentionBackup response = api.longTermRetentionBackupsGetByResourceGroup(resourceGroupName, locationName, longTermRetentionServerName, longTermRetentionDatabaseName, backupName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Lists all long term retention backups for a database.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void longTermRetentionBackupsListByDatabaseTest() throws ApiException {
        String locationName = null;
        String longTermRetentionServerName = null;
        String longTermRetentionDatabaseName = null;
        String subscriptionId = null;
        String apiVersion = null;
        Boolean onlyLatestPerDatabase = null;
        String databaseState = null;
        LongTermRetentionBackupListResult response = api.longTermRetentionBackupsListByDatabase(locationName, longTermRetentionServerName, longTermRetentionDatabaseName, subscriptionId, apiVersion, onlyLatestPerDatabase, databaseState);
        // TODO: test validations
    }

    /**
     * Lists the long term retention backups for a given location.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void longTermRetentionBackupsListByLocationTest() throws ApiException {
        String locationName = null;
        String subscriptionId = null;
        String apiVersion = null;
        Boolean onlyLatestPerDatabase = null;
        String databaseState = null;
        LongTermRetentionBackupListResult response = api.longTermRetentionBackupsListByLocation(locationName, subscriptionId, apiVersion, onlyLatestPerDatabase, databaseState);
        // TODO: test validations
    }

    /**
     * Lists all long term retention backups for a database.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void longTermRetentionBackupsListByResourceGroupDatabaseTest() throws ApiException {
        String resourceGroupName = null;
        String locationName = null;
        String longTermRetentionServerName = null;
        String longTermRetentionDatabaseName = null;
        String subscriptionId = null;
        String apiVersion = null;
        Boolean onlyLatestPerDatabase = null;
        String databaseState = null;
        LongTermRetentionBackupListResult response = api.longTermRetentionBackupsListByResourceGroupDatabase(resourceGroupName, locationName, longTermRetentionServerName, longTermRetentionDatabaseName, subscriptionId, apiVersion, onlyLatestPerDatabase, databaseState);
        // TODO: test validations
    }

    /**
     * Lists the long term retention backups for a given location.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void longTermRetentionBackupsListByResourceGroupLocationTest() throws ApiException {
        String resourceGroupName = null;
        String locationName = null;
        String subscriptionId = null;
        String apiVersion = null;
        Boolean onlyLatestPerDatabase = null;
        String databaseState = null;
        LongTermRetentionBackupListResult response = api.longTermRetentionBackupsListByResourceGroupLocation(resourceGroupName, locationName, subscriptionId, apiVersion, onlyLatestPerDatabase, databaseState);
        // TODO: test validations
    }

    /**
     * Lists the long term retention backups for a given server.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void longTermRetentionBackupsListByResourceGroupServerTest() throws ApiException {
        String resourceGroupName = null;
        String locationName = null;
        String longTermRetentionServerName = null;
        String subscriptionId = null;
        String apiVersion = null;
        Boolean onlyLatestPerDatabase = null;
        String databaseState = null;
        LongTermRetentionBackupListResult response = api.longTermRetentionBackupsListByResourceGroupServer(resourceGroupName, locationName, longTermRetentionServerName, subscriptionId, apiVersion, onlyLatestPerDatabase, databaseState);
        // TODO: test validations
    }

    /**
     * Lists the long term retention backups for a given server.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void longTermRetentionBackupsListByServerTest() throws ApiException {
        String locationName = null;
        String longTermRetentionServerName = null;
        String subscriptionId = null;
        String apiVersion = null;
        Boolean onlyLatestPerDatabase = null;
        String databaseState = null;
        LongTermRetentionBackupListResult response = api.longTermRetentionBackupsListByServer(locationName, longTermRetentionServerName, subscriptionId, apiVersion, onlyLatestPerDatabase, databaseState);
        // TODO: test validations
    }

}
