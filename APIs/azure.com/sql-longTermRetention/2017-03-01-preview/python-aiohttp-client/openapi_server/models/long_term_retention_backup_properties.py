# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class LongTermRetentionBackupProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, backup_expiration_time: datetime=None, backup_time: datetime=None, database_deletion_time: datetime=None, database_name: str=None, server_create_time: datetime=None, server_name: str=None):
        """LongTermRetentionBackupProperties - a model defined in OpenAPI

        :param backup_expiration_time: The backup_expiration_time of this LongTermRetentionBackupProperties.
        :param backup_time: The backup_time of this LongTermRetentionBackupProperties.
        :param database_deletion_time: The database_deletion_time of this LongTermRetentionBackupProperties.
        :param database_name: The database_name of this LongTermRetentionBackupProperties.
        :param server_create_time: The server_create_time of this LongTermRetentionBackupProperties.
        :param server_name: The server_name of this LongTermRetentionBackupProperties.
        """
        self.openapi_types = {
            'backup_expiration_time': datetime,
            'backup_time': datetime,
            'database_deletion_time': datetime,
            'database_name': str,
            'server_create_time': datetime,
            'server_name': str
        }

        self.attribute_map = {
            'backup_expiration_time': 'backupExpirationTime',
            'backup_time': 'backupTime',
            'database_deletion_time': 'databaseDeletionTime',
            'database_name': 'databaseName',
            'server_create_time': 'serverCreateTime',
            'server_name': 'serverName'
        }

        self._backup_expiration_time = backup_expiration_time
        self._backup_time = backup_time
        self._database_deletion_time = database_deletion_time
        self._database_name = database_name
        self._server_create_time = server_create_time
        self._server_name = server_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LongTermRetentionBackupProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LongTermRetentionBackupProperties of this LongTermRetentionBackupProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def backup_expiration_time(self):
        """Gets the backup_expiration_time of this LongTermRetentionBackupProperties.

        The time the long term retention backup will expire.

        :return: The backup_expiration_time of this LongTermRetentionBackupProperties.
        :rtype: datetime
        """
        return self._backup_expiration_time

    @backup_expiration_time.setter
    def backup_expiration_time(self, backup_expiration_time):
        """Sets the backup_expiration_time of this LongTermRetentionBackupProperties.

        The time the long term retention backup will expire.

        :param backup_expiration_time: The backup_expiration_time of this LongTermRetentionBackupProperties.
        :type backup_expiration_time: datetime
        """

        self._backup_expiration_time = backup_expiration_time

    @property
    def backup_time(self):
        """Gets the backup_time of this LongTermRetentionBackupProperties.

        The time the backup was taken

        :return: The backup_time of this LongTermRetentionBackupProperties.
        :rtype: datetime
        """
        return self._backup_time

    @backup_time.setter
    def backup_time(self, backup_time):
        """Sets the backup_time of this LongTermRetentionBackupProperties.

        The time the backup was taken

        :param backup_time: The backup_time of this LongTermRetentionBackupProperties.
        :type backup_time: datetime
        """

        self._backup_time = backup_time

    @property
    def database_deletion_time(self):
        """Gets the database_deletion_time of this LongTermRetentionBackupProperties.

        The delete time of the database

        :return: The database_deletion_time of this LongTermRetentionBackupProperties.
        :rtype: datetime
        """
        return self._database_deletion_time

    @database_deletion_time.setter
    def database_deletion_time(self, database_deletion_time):
        """Sets the database_deletion_time of this LongTermRetentionBackupProperties.

        The delete time of the database

        :param database_deletion_time: The database_deletion_time of this LongTermRetentionBackupProperties.
        :type database_deletion_time: datetime
        """

        self._database_deletion_time = database_deletion_time

    @property
    def database_name(self):
        """Gets the database_name of this LongTermRetentionBackupProperties.

        The name of the database the backup belong to

        :return: The database_name of this LongTermRetentionBackupProperties.
        :rtype: str
        """
        return self._database_name

    @database_name.setter
    def database_name(self, database_name):
        """Sets the database_name of this LongTermRetentionBackupProperties.

        The name of the database the backup belong to

        :param database_name: The database_name of this LongTermRetentionBackupProperties.
        :type database_name: str
        """

        self._database_name = database_name

    @property
    def server_create_time(self):
        """Gets the server_create_time of this LongTermRetentionBackupProperties.

        The create time of the server.

        :return: The server_create_time of this LongTermRetentionBackupProperties.
        :rtype: datetime
        """
        return self._server_create_time

    @server_create_time.setter
    def server_create_time(self, server_create_time):
        """Sets the server_create_time of this LongTermRetentionBackupProperties.

        The create time of the server.

        :param server_create_time: The server_create_time of this LongTermRetentionBackupProperties.
        :type server_create_time: datetime
        """

        self._server_create_time = server_create_time

    @property
    def server_name(self):
        """Gets the server_name of this LongTermRetentionBackupProperties.

        The server name that the backup database belong to.

        :return: The server_name of this LongTermRetentionBackupProperties.
        :rtype: str
        """
        return self._server_name

    @server_name.setter
    def server_name(self, server_name):
        """Sets the server_name of this LongTermRetentionBackupProperties.

        The server name that the backup database belong to.

        :param server_name: The server_name of this LongTermRetentionBackupProperties.
        :type server_name: str
        """

        self._server_name = server_name
