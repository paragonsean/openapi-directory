/**
 * StorageManagementClient
 * The Azure Storage Management API.
 *
 * The version of the OpenAPI document: 2019-06-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFileShareProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFileShareProperties::OAIFileShareProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFileShareProperties::OAIFileShareProperties() {
    this->initializeModel();
}

OAIFileShareProperties::~OAIFileShareProperties() {}

void OAIFileShareProperties::initializeModel() {

    m_last_modified_time_isSet = false;
    m_last_modified_time_isValid = false;

    m_metadata_isSet = false;
    m_metadata_isValid = false;

    m_share_quota_isSet = false;
    m_share_quota_isValid = false;
}

void OAIFileShareProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFileShareProperties::fromJsonObject(QJsonObject json) {

    m_last_modified_time_isValid = ::OpenAPI::fromJsonValue(m_last_modified_time, json[QString("lastModifiedTime")]);
    m_last_modified_time_isSet = !json[QString("lastModifiedTime")].isNull() && m_last_modified_time_isValid;

    m_metadata_isValid = ::OpenAPI::fromJsonValue(m_metadata, json[QString("metadata")]);
    m_metadata_isSet = !json[QString("metadata")].isNull() && m_metadata_isValid;

    m_share_quota_isValid = ::OpenAPI::fromJsonValue(m_share_quota, json[QString("shareQuota")]);
    m_share_quota_isSet = !json[QString("shareQuota")].isNull() && m_share_quota_isValid;
}

QString OAIFileShareProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFileShareProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_last_modified_time_isSet) {
        obj.insert(QString("lastModifiedTime"), ::OpenAPI::toJsonValue(m_last_modified_time));
    }
    if (m_metadata.size() > 0) {
        obj.insert(QString("metadata"), ::OpenAPI::toJsonValue(m_metadata));
    }
    if (m_share_quota_isSet) {
        obj.insert(QString("shareQuota"), ::OpenAPI::toJsonValue(m_share_quota));
    }
    return obj;
}

QDateTime OAIFileShareProperties::getLastModifiedTime() const {
    return m_last_modified_time;
}
void OAIFileShareProperties::setLastModifiedTime(const QDateTime &last_modified_time) {
    m_last_modified_time = last_modified_time;
    m_last_modified_time_isSet = true;
}

bool OAIFileShareProperties::is_last_modified_time_Set() const{
    return m_last_modified_time_isSet;
}

bool OAIFileShareProperties::is_last_modified_time_Valid() const{
    return m_last_modified_time_isValid;
}

QMap<QString, QString> OAIFileShareProperties::getMetadata() const {
    return m_metadata;
}
void OAIFileShareProperties::setMetadata(const QMap<QString, QString> &metadata) {
    m_metadata = metadata;
    m_metadata_isSet = true;
}

bool OAIFileShareProperties::is_metadata_Set() const{
    return m_metadata_isSet;
}

bool OAIFileShareProperties::is_metadata_Valid() const{
    return m_metadata_isValid;
}

qint32 OAIFileShareProperties::getShareQuota() const {
    return m_share_quota;
}
void OAIFileShareProperties::setShareQuota(const qint32 &share_quota) {
    m_share_quota = share_quota;
    m_share_quota_isSet = true;
}

bool OAIFileShareProperties::is_share_quota_Set() const{
    return m_share_quota_isSet;
}

bool OAIFileShareProperties::is_share_quota_Valid() const{
    return m_share_quota_isValid;
}

bool OAIFileShareProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_last_modified_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_metadata.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_share_quota_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFileShareProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
