/*
 * StorageManagementClient
 * The Azure Storage Management API.
 *
 * The version of the OpenAPI document: 2019-04-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CloudError;
import org.openapitools.client.model.FileShare;
import org.openapitools.client.model.FileShareItems;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for FileSharesApi
 */
@Disabled
public class FileSharesApiTest {

    private final FileSharesApi api = new FileSharesApi();

    /**
     * Creates a new share under the specified account as described by request body. The share resource includes metadata and properties for that share. It does not include a list of the files contained by the share. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void fileSharesCreateTest() throws ApiException {
        String resourceGroupName = null;
        String accountName = null;
        String shareName = null;
        String apiVersion = null;
        String subscriptionId = null;
        FileShare fileShare = null;
        FileShare response = api.fileSharesCreate(resourceGroupName, accountName, shareName, apiVersion, subscriptionId, fileShare);
        // TODO: test validations
    }

    /**
     * Deletes specified share under its account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void fileSharesDeleteTest() throws ApiException {
        String resourceGroupName = null;
        String accountName = null;
        String shareName = null;
        String apiVersion = null;
        String subscriptionId = null;
        api.fileSharesDelete(resourceGroupName, accountName, shareName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Gets properties of a specified share.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void fileSharesGetTest() throws ApiException {
        String resourceGroupName = null;
        String accountName = null;
        String shareName = null;
        String apiVersion = null;
        String subscriptionId = null;
        FileShare response = api.fileSharesGet(resourceGroupName, accountName, shareName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Lists all shares.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void fileSharesListTest() throws ApiException {
        String resourceGroupName = null;
        String accountName = null;
        String apiVersion = null;
        String subscriptionId = null;
        String $skipToken = null;
        String $maxpagesize = null;
        String $filter = null;
        FileShareItems response = api.fileSharesList(resourceGroupName, accountName, apiVersion, subscriptionId, $skipToken, $maxpagesize, $filter);
        // TODO: test validations
    }

    /**
     * Updates share properties as specified in request body. Properties not mentioned in the request will not be changed. Update fails if the specified share does not already exist. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void fileSharesUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String accountName = null;
        String shareName = null;
        String apiVersion = null;
        String subscriptionId = null;
        FileShare fileShare = null;
        FileShare response = api.fileSharesUpdate(resourceGroupName, accountName, shareName, apiVersion, subscriptionId, fileShare);
        // TODO: test validations
    }

}
