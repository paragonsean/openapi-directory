# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class FileShareProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, last_modified_time: datetime=None, metadata: Dict[str, str]=None, share_quota: int=None):
        """FileShareProperties - a model defined in OpenAPI

        :param last_modified_time: The last_modified_time of this FileShareProperties.
        :param metadata: The metadata of this FileShareProperties.
        :param share_quota: The share_quota of this FileShareProperties.
        """
        self.openapi_types = {
            'last_modified_time': datetime,
            'metadata': Dict[str, str],
            'share_quota': int
        }

        self.attribute_map = {
            'last_modified_time': 'lastModifiedTime',
            'metadata': 'metadata',
            'share_quota': 'shareQuota'
        }

        self._last_modified_time = last_modified_time
        self._metadata = metadata
        self._share_quota = share_quota

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FileShareProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FileShareProperties of this FileShareProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def last_modified_time(self):
        """Gets the last_modified_time of this FileShareProperties.

        Returns the date and time the share was last modified.

        :return: The last_modified_time of this FileShareProperties.
        :rtype: datetime
        """
        return self._last_modified_time

    @last_modified_time.setter
    def last_modified_time(self, last_modified_time):
        """Sets the last_modified_time of this FileShareProperties.

        Returns the date and time the share was last modified.

        :param last_modified_time: The last_modified_time of this FileShareProperties.
        :type last_modified_time: datetime
        """

        self._last_modified_time = last_modified_time

    @property
    def metadata(self):
        """Gets the metadata of this FileShareProperties.

        A name-value pair to associate with the share as metadata.

        :return: The metadata of this FileShareProperties.
        :rtype: Dict[str, str]
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata):
        """Sets the metadata of this FileShareProperties.

        A name-value pair to associate with the share as metadata.

        :param metadata: The metadata of this FileShareProperties.
        :type metadata: Dict[str, str]
        """

        self._metadata = metadata

    @property
    def share_quota(self):
        """Gets the share_quota of this FileShareProperties.

        The maximum size of the share, in gigabytes. Must be greater than 0, and less than or equal to 5TB (5120).

        :return: The share_quota of this FileShareProperties.
        :rtype: int
        """
        return self._share_quota

    @share_quota.setter
    def share_quota(self, share_quota):
        """Sets the share_quota of this FileShareProperties.

        The maximum size of the share, in gigabytes. Must be greater than 0, and less than or equal to 5TB (5120).

        :param share_quota: The share_quota of this FileShareProperties.
        :type share_quota: int
        """
        if share_quota is not None and share_quota > 5120:
            raise ValueError("Invalid value for `share_quota`, must be a value less than or equal to `5120`")
        if share_quota is not None and share_quota < 1:
            raise ValueError("Invalid value for `share_quota`, must be a value greater than or equal to `1`")

        self._share_quota = share_quota
