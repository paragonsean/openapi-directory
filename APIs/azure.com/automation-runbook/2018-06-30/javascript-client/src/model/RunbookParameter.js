/**
 * AutomationManagement
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-06-30
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RunbookParameter model module.
 * @module model/RunbookParameter
 * @version 2018-06-30
 */
class RunbookParameter {
    /**
     * Constructs a new <code>RunbookParameter</code>.
     * Definition of the runbook parameter type.
     * @alias module:model/RunbookParameter
     */
    constructor() { 
        
        RunbookParameter.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RunbookParameter</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RunbookParameter} obj Optional instance to populate.
     * @return {module:model/RunbookParameter} The populated <code>RunbookParameter</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RunbookParameter();

            if (data.hasOwnProperty('defaultValue')) {
                obj['defaultValue'] = ApiClient.convertToType(data['defaultValue'], 'String');
            }
            if (data.hasOwnProperty('isMandatory')) {
                obj['isMandatory'] = ApiClient.convertToType(data['isMandatory'], 'Boolean');
            }
            if (data.hasOwnProperty('position')) {
                obj['position'] = ApiClient.convertToType(data['position'], 'Number');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RunbookParameter</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RunbookParameter</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['defaultValue'] && !(typeof data['defaultValue'] === 'string' || data['defaultValue'] instanceof String)) {
            throw new Error("Expected the field `defaultValue` to be a primitive type in the JSON string but got " + data['defaultValue']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}



/**
 * Gets or sets the default value of parameter.
 * @member {String} defaultValue
 */
RunbookParameter.prototype['defaultValue'] = undefined;

/**
 * Gets or sets a Boolean value to indicate whether the parameter is mandatory or not.
 * @member {Boolean} isMandatory
 */
RunbookParameter.prototype['isMandatory'] = undefined;

/**
 * Get or sets the position of the parameter.
 * @member {Number} position
 */
RunbookParameter.prototype['position'] = undefined;

/**
 * Gets or sets the type of the parameter.
 * @member {String} type
 */
RunbookParameter.prototype['type'] = undefined;






export default RunbookParameter;

