/**
 * AutomationManagement
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-06-30
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The TestJob model module.
 * @module model/TestJob
 * @version 2018-06-30
 */
class TestJob {
    /**
     * Constructs a new <code>TestJob</code>.
     * Definition of the test job.
     * @alias module:model/TestJob
     */
    constructor() { 
        
        TestJob.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TestJob</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TestJob} obj Optional instance to populate.
     * @return {module:model/TestJob} The populated <code>TestJob</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TestJob();

            if (data.hasOwnProperty('creationTime')) {
                obj['creationTime'] = ApiClient.convertToType(data['creationTime'], 'Date');
            }
            if (data.hasOwnProperty('endTime')) {
                obj['endTime'] = ApiClient.convertToType(data['endTime'], 'Date');
            }
            if (data.hasOwnProperty('exception')) {
                obj['exception'] = ApiClient.convertToType(data['exception'], 'String');
            }
            if (data.hasOwnProperty('lastModifiedTime')) {
                obj['lastModifiedTime'] = ApiClient.convertToType(data['lastModifiedTime'], 'Date');
            }
            if (data.hasOwnProperty('lastStatusModifiedTime')) {
                obj['lastStatusModifiedTime'] = ApiClient.convertToType(data['lastStatusModifiedTime'], 'Date');
            }
            if (data.hasOwnProperty('logActivityTrace')) {
                obj['logActivityTrace'] = ApiClient.convertToType(data['logActivityTrace'], 'Number');
            }
            if (data.hasOwnProperty('parameters')) {
                obj['parameters'] = ApiClient.convertToType(data['parameters'], {'String': 'String'});
            }
            if (data.hasOwnProperty('runOn')) {
                obj['runOn'] = ApiClient.convertToType(data['runOn'], 'String');
            }
            if (data.hasOwnProperty('startTime')) {
                obj['startTime'] = ApiClient.convertToType(data['startTime'], 'Date');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('statusDetails')) {
                obj['statusDetails'] = ApiClient.convertToType(data['statusDetails'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TestJob</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TestJob</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['exception'] && !(typeof data['exception'] === 'string' || data['exception'] instanceof String)) {
            throw new Error("Expected the field `exception` to be a primitive type in the JSON string but got " + data['exception']);
        }
        // ensure the json data is a string
        if (data['runOn'] && !(typeof data['runOn'] === 'string' || data['runOn'] instanceof String)) {
            throw new Error("Expected the field `runOn` to be a primitive type in the JSON string but got " + data['runOn']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is a string
        if (data['statusDetails'] && !(typeof data['statusDetails'] === 'string' || data['statusDetails'] instanceof String)) {
            throw new Error("Expected the field `statusDetails` to be a primitive type in the JSON string but got " + data['statusDetails']);
        }

        return true;
    }


}



/**
 * Gets or sets the creation time of the test job.
 * @member {Date} creationTime
 */
TestJob.prototype['creationTime'] = undefined;

/**
 * Gets or sets the end time of the test job.
 * @member {Date} endTime
 */
TestJob.prototype['endTime'] = undefined;

/**
 * Gets or sets the exception of the test job.
 * @member {String} exception
 */
TestJob.prototype['exception'] = undefined;

/**
 * Gets or sets the last modified time of the test job.
 * @member {Date} lastModifiedTime
 */
TestJob.prototype['lastModifiedTime'] = undefined;

/**
 * Gets or sets the last status modified time of the test job.
 * @member {Date} lastStatusModifiedTime
 */
TestJob.prototype['lastStatusModifiedTime'] = undefined;

/**
 * The activity-level tracing options of the runbook.
 * @member {Number} logActivityTrace
 */
TestJob.prototype['logActivityTrace'] = undefined;

/**
 * Gets or sets the parameters of the test job.
 * @member {Object.<String, String>} parameters
 */
TestJob.prototype['parameters'] = undefined;

/**
 * Gets or sets the runOn which specifies the group name where the job is to be executed.
 * @member {String} runOn
 */
TestJob.prototype['runOn'] = undefined;

/**
 * Gets or sets the start time of the test job.
 * @member {Date} startTime
 */
TestJob.prototype['startTime'] = undefined;

/**
 * Gets or sets the status of the test job.
 * @member {String} status
 */
TestJob.prototype['status'] = undefined;

/**
 * Gets or sets the status details of the test job.
 * @member {String} statusDetails
 */
TestJob.prototype['statusDetails'] = undefined;






export default TestJob;

