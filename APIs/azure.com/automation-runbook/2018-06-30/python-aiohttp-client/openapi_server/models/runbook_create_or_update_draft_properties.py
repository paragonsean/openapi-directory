# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.runbook_draft import RunbookDraft
from openapi_server import util


class RunbookCreateOrUpdateDraftProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, draft: RunbookDraft=None, log_activity_trace: int=None, log_progress: bool=None, log_verbose: bool=None, runbook_type: str=None):
        """RunbookCreateOrUpdateDraftProperties - a model defined in OpenAPI

        :param description: The description of this RunbookCreateOrUpdateDraftProperties.
        :param draft: The draft of this RunbookCreateOrUpdateDraftProperties.
        :param log_activity_trace: The log_activity_trace of this RunbookCreateOrUpdateDraftProperties.
        :param log_progress: The log_progress of this RunbookCreateOrUpdateDraftProperties.
        :param log_verbose: The log_verbose of this RunbookCreateOrUpdateDraftProperties.
        :param runbook_type: The runbook_type of this RunbookCreateOrUpdateDraftProperties.
        """
        self.openapi_types = {
            'description': str,
            'draft': RunbookDraft,
            'log_activity_trace': int,
            'log_progress': bool,
            'log_verbose': bool,
            'runbook_type': str
        }

        self.attribute_map = {
            'description': 'description',
            'draft': 'draft',
            'log_activity_trace': 'logActivityTrace',
            'log_progress': 'logProgress',
            'log_verbose': 'logVerbose',
            'runbook_type': 'runbookType'
        }

        self._description = description
        self._draft = draft
        self._log_activity_trace = log_activity_trace
        self._log_progress = log_progress
        self._log_verbose = log_verbose
        self._runbook_type = runbook_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RunbookCreateOrUpdateDraftProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RunbookCreateOrUpdateDraftProperties of this RunbookCreateOrUpdateDraftProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this RunbookCreateOrUpdateDraftProperties.

        Gets or sets the description of the runbook.

        :return: The description of this RunbookCreateOrUpdateDraftProperties.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this RunbookCreateOrUpdateDraftProperties.

        Gets or sets the description of the runbook.

        :param description: The description of this RunbookCreateOrUpdateDraftProperties.
        :type description: str
        """

        self._description = description

    @property
    def draft(self):
        """Gets the draft of this RunbookCreateOrUpdateDraftProperties.


        :return: The draft of this RunbookCreateOrUpdateDraftProperties.
        :rtype: RunbookDraft
        """
        return self._draft

    @draft.setter
    def draft(self, draft):
        """Sets the draft of this RunbookCreateOrUpdateDraftProperties.


        :param draft: The draft of this RunbookCreateOrUpdateDraftProperties.
        :type draft: RunbookDraft
        """
        if draft is None:
            raise ValueError("Invalid value for `draft`, must not be `None`")

        self._draft = draft

    @property
    def log_activity_trace(self):
        """Gets the log_activity_trace of this RunbookCreateOrUpdateDraftProperties.

        Gets or sets the activity-level tracing options of the runbook.

        :return: The log_activity_trace of this RunbookCreateOrUpdateDraftProperties.
        :rtype: int
        """
        return self._log_activity_trace

    @log_activity_trace.setter
    def log_activity_trace(self, log_activity_trace):
        """Sets the log_activity_trace of this RunbookCreateOrUpdateDraftProperties.

        Gets or sets the activity-level tracing options of the runbook.

        :param log_activity_trace: The log_activity_trace of this RunbookCreateOrUpdateDraftProperties.
        :type log_activity_trace: int
        """

        self._log_activity_trace = log_activity_trace

    @property
    def log_progress(self):
        """Gets the log_progress of this RunbookCreateOrUpdateDraftProperties.

        Gets or sets progress log option.

        :return: The log_progress of this RunbookCreateOrUpdateDraftProperties.
        :rtype: bool
        """
        return self._log_progress

    @log_progress.setter
    def log_progress(self, log_progress):
        """Sets the log_progress of this RunbookCreateOrUpdateDraftProperties.

        Gets or sets progress log option.

        :param log_progress: The log_progress of this RunbookCreateOrUpdateDraftProperties.
        :type log_progress: bool
        """

        self._log_progress = log_progress

    @property
    def log_verbose(self):
        """Gets the log_verbose of this RunbookCreateOrUpdateDraftProperties.

        Gets or sets verbose log option.

        :return: The log_verbose of this RunbookCreateOrUpdateDraftProperties.
        :rtype: bool
        """
        return self._log_verbose

    @log_verbose.setter
    def log_verbose(self, log_verbose):
        """Sets the log_verbose of this RunbookCreateOrUpdateDraftProperties.

        Gets or sets verbose log option.

        :param log_verbose: The log_verbose of this RunbookCreateOrUpdateDraftProperties.
        :type log_verbose: bool
        """

        self._log_verbose = log_verbose

    @property
    def runbook_type(self):
        """Gets the runbook_type of this RunbookCreateOrUpdateDraftProperties.

        Gets or sets the type of the runbook.

        :return: The runbook_type of this RunbookCreateOrUpdateDraftProperties.
        :rtype: str
        """
        return self._runbook_type

    @runbook_type.setter
    def runbook_type(self, runbook_type):
        """Sets the runbook_type of this RunbookCreateOrUpdateDraftProperties.

        Gets or sets the type of the runbook.

        :param runbook_type: The runbook_type of this RunbookCreateOrUpdateDraftProperties.
        :type runbook_type: str
        """
        allowed_values = ["Script", "Graph", "PowerShellWorkflow", "PowerShell", "GraphPowerShellWorkflow", "GraphPowerShell"]  # noqa: E501
        if runbook_type not in allowed_values:
            raise ValueError(
                "Invalid value for `runbook_type` ({0}), must be one of {1}"
                .format(runbook_type, allowed_values)
            )

        self._runbook_type = runbook_type
