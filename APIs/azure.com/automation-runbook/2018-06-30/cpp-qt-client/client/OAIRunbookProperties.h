/**
 * AutomationManagement
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-06-30
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRunbookProperties.h
 *
 * Definition of the runbook property type.
 */

#ifndef OAIRunbookProperties_H
#define OAIRunbookProperties_H

#include <QJsonObject>

#include "OAIContentLink.h"
#include "OAIRunbookDraft.h"
#include "OAIRunbookParameter.h"
#include <QDateTime>
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIRunbookDraft;
class OAIRunbookParameter;
class OAIContentLink;

class OAIRunbookProperties : public OAIObject {
public:
    OAIRunbookProperties();
    OAIRunbookProperties(QString json);
    ~OAIRunbookProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getCreationTime() const;
    void setCreationTime(const QDateTime &creation_time);
    bool is_creation_time_Set() const;
    bool is_creation_time_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    OAIRunbookDraft getDraft() const;
    void setDraft(const OAIRunbookDraft &draft);
    bool is_draft_Set() const;
    bool is_draft_Valid() const;

    qint32 getJobCount() const;
    void setJobCount(const qint32 &job_count);
    bool is_job_count_Set() const;
    bool is_job_count_Valid() const;

    QString getLastModifiedBy() const;
    void setLastModifiedBy(const QString &last_modified_by);
    bool is_last_modified_by_Set() const;
    bool is_last_modified_by_Valid() const;

    QDateTime getLastModifiedTime() const;
    void setLastModifiedTime(const QDateTime &last_modified_time);
    bool is_last_modified_time_Set() const;
    bool is_last_modified_time_Valid() const;

    qint32 getLogActivityTrace() const;
    void setLogActivityTrace(const qint32 &log_activity_trace);
    bool is_log_activity_trace_Set() const;
    bool is_log_activity_trace_Valid() const;

    bool isLogProgress() const;
    void setLogProgress(const bool &log_progress);
    bool is_log_progress_Set() const;
    bool is_log_progress_Valid() const;

    bool isLogVerbose() const;
    void setLogVerbose(const bool &log_verbose);
    bool is_log_verbose_Set() const;
    bool is_log_verbose_Valid() const;

    QList<QString> getOutputTypes() const;
    void setOutputTypes(const QList<QString> &output_types);
    bool is_output_types_Set() const;
    bool is_output_types_Valid() const;

    QMap<QString, OAIRunbookParameter> getParameters() const;
    void setParameters(const QMap<QString, OAIRunbookParameter> &parameters);
    bool is_parameters_Set() const;
    bool is_parameters_Valid() const;

    QString getProvisioningState() const;
    void setProvisioningState(const QString &provisioning_state);
    bool is_provisioning_state_Set() const;
    bool is_provisioning_state_Valid() const;

    OAIContentLink getPublishContentLink() const;
    void setPublishContentLink(const OAIContentLink &publish_content_link);
    bool is_publish_content_link_Set() const;
    bool is_publish_content_link_Valid() const;

    QString getRunbookType() const;
    void setRunbookType(const QString &runbook_type);
    bool is_runbook_type_Set() const;
    bool is_runbook_type_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_creation_time;
    bool m_creation_time_isSet;
    bool m_creation_time_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    OAIRunbookDraft m_draft;
    bool m_draft_isSet;
    bool m_draft_isValid;

    qint32 m_job_count;
    bool m_job_count_isSet;
    bool m_job_count_isValid;

    QString m_last_modified_by;
    bool m_last_modified_by_isSet;
    bool m_last_modified_by_isValid;

    QDateTime m_last_modified_time;
    bool m_last_modified_time_isSet;
    bool m_last_modified_time_isValid;

    qint32 m_log_activity_trace;
    bool m_log_activity_trace_isSet;
    bool m_log_activity_trace_isValid;

    bool m_log_progress;
    bool m_log_progress_isSet;
    bool m_log_progress_isValid;

    bool m_log_verbose;
    bool m_log_verbose_isSet;
    bool m_log_verbose_isValid;

    QList<QString> m_output_types;
    bool m_output_types_isSet;
    bool m_output_types_isValid;

    QMap<QString, OAIRunbookParameter> m_parameters;
    bool m_parameters_isSet;
    bool m_parameters_isValid;

    QString m_provisioning_state;
    bool m_provisioning_state_isSet;
    bool m_provisioning_state_isValid;

    OAIContentLink m_publish_content_link;
    bool m_publish_content_link_isSet;
    bool m_publish_content_link_isValid;

    QString m_runbook_type;
    bool m_runbook_type_isSet;
    bool m_runbook_type_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRunbookProperties)

#endif // OAIRunbookProperties_H
