/**
 * AutomationManagement
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-06-30
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRunbookDraft.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRunbookDraft::OAIRunbookDraft(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRunbookDraft::OAIRunbookDraft() {
    this->initializeModel();
}

OAIRunbookDraft::~OAIRunbookDraft() {}

void OAIRunbookDraft::initializeModel() {

    m_creation_time_isSet = false;
    m_creation_time_isValid = false;

    m_draft_content_link_isSet = false;
    m_draft_content_link_isValid = false;

    m_in_edit_isSet = false;
    m_in_edit_isValid = false;

    m_last_modified_time_isSet = false;
    m_last_modified_time_isValid = false;

    m_output_types_isSet = false;
    m_output_types_isValid = false;

    m_parameters_isSet = false;
    m_parameters_isValid = false;
}

void OAIRunbookDraft::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRunbookDraft::fromJsonObject(QJsonObject json) {

    m_creation_time_isValid = ::OpenAPI::fromJsonValue(m_creation_time, json[QString("creationTime")]);
    m_creation_time_isSet = !json[QString("creationTime")].isNull() && m_creation_time_isValid;

    m_draft_content_link_isValid = ::OpenAPI::fromJsonValue(m_draft_content_link, json[QString("draftContentLink")]);
    m_draft_content_link_isSet = !json[QString("draftContentLink")].isNull() && m_draft_content_link_isValid;

    m_in_edit_isValid = ::OpenAPI::fromJsonValue(m_in_edit, json[QString("inEdit")]);
    m_in_edit_isSet = !json[QString("inEdit")].isNull() && m_in_edit_isValid;

    m_last_modified_time_isValid = ::OpenAPI::fromJsonValue(m_last_modified_time, json[QString("lastModifiedTime")]);
    m_last_modified_time_isSet = !json[QString("lastModifiedTime")].isNull() && m_last_modified_time_isValid;

    m_output_types_isValid = ::OpenAPI::fromJsonValue(m_output_types, json[QString("outputTypes")]);
    m_output_types_isSet = !json[QString("outputTypes")].isNull() && m_output_types_isValid;

    m_parameters_isValid = ::OpenAPI::fromJsonValue(m_parameters, json[QString("parameters")]);
    m_parameters_isSet = !json[QString("parameters")].isNull() && m_parameters_isValid;
}

QString OAIRunbookDraft::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRunbookDraft::asJsonObject() const {
    QJsonObject obj;
    if (m_creation_time_isSet) {
        obj.insert(QString("creationTime"), ::OpenAPI::toJsonValue(m_creation_time));
    }
    if (m_draft_content_link.isSet()) {
        obj.insert(QString("draftContentLink"), ::OpenAPI::toJsonValue(m_draft_content_link));
    }
    if (m_in_edit_isSet) {
        obj.insert(QString("inEdit"), ::OpenAPI::toJsonValue(m_in_edit));
    }
    if (m_last_modified_time_isSet) {
        obj.insert(QString("lastModifiedTime"), ::OpenAPI::toJsonValue(m_last_modified_time));
    }
    if (m_output_types.size() > 0) {
        obj.insert(QString("outputTypes"), ::OpenAPI::toJsonValue(m_output_types));
    }
    if (m_parameters.size() > 0) {
        obj.insert(QString("parameters"), ::OpenAPI::toJsonValue(m_parameters));
    }
    return obj;
}

QDateTime OAIRunbookDraft::getCreationTime() const {
    return m_creation_time;
}
void OAIRunbookDraft::setCreationTime(const QDateTime &creation_time) {
    m_creation_time = creation_time;
    m_creation_time_isSet = true;
}

bool OAIRunbookDraft::is_creation_time_Set() const{
    return m_creation_time_isSet;
}

bool OAIRunbookDraft::is_creation_time_Valid() const{
    return m_creation_time_isValid;
}

OAIContentLink OAIRunbookDraft::getDraftContentLink() const {
    return m_draft_content_link;
}
void OAIRunbookDraft::setDraftContentLink(const OAIContentLink &draft_content_link) {
    m_draft_content_link = draft_content_link;
    m_draft_content_link_isSet = true;
}

bool OAIRunbookDraft::is_draft_content_link_Set() const{
    return m_draft_content_link_isSet;
}

bool OAIRunbookDraft::is_draft_content_link_Valid() const{
    return m_draft_content_link_isValid;
}

bool OAIRunbookDraft::isInEdit() const {
    return m_in_edit;
}
void OAIRunbookDraft::setInEdit(const bool &in_edit) {
    m_in_edit = in_edit;
    m_in_edit_isSet = true;
}

bool OAIRunbookDraft::is_in_edit_Set() const{
    return m_in_edit_isSet;
}

bool OAIRunbookDraft::is_in_edit_Valid() const{
    return m_in_edit_isValid;
}

QDateTime OAIRunbookDraft::getLastModifiedTime() const {
    return m_last_modified_time;
}
void OAIRunbookDraft::setLastModifiedTime(const QDateTime &last_modified_time) {
    m_last_modified_time = last_modified_time;
    m_last_modified_time_isSet = true;
}

bool OAIRunbookDraft::is_last_modified_time_Set() const{
    return m_last_modified_time_isSet;
}

bool OAIRunbookDraft::is_last_modified_time_Valid() const{
    return m_last_modified_time_isValid;
}

QList<QString> OAIRunbookDraft::getOutputTypes() const {
    return m_output_types;
}
void OAIRunbookDraft::setOutputTypes(const QList<QString> &output_types) {
    m_output_types = output_types;
    m_output_types_isSet = true;
}

bool OAIRunbookDraft::is_output_types_Set() const{
    return m_output_types_isSet;
}

bool OAIRunbookDraft::is_output_types_Valid() const{
    return m_output_types_isValid;
}

QMap<QString, OAIRunbookParameter> OAIRunbookDraft::getParameters() const {
    return m_parameters;
}
void OAIRunbookDraft::setParameters(const QMap<QString, OAIRunbookParameter> &parameters) {
    m_parameters = parameters;
    m_parameters_isSet = true;
}

bool OAIRunbookDraft::is_parameters_Set() const{
    return m_parameters_isSet;
}

bool OAIRunbookDraft::is_parameters_Valid() const{
    return m_parameters_isValid;
}

bool OAIRunbookDraft::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_creation_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_draft_content_link.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_in_edit_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_output_types.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_parameters.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRunbookDraft::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
