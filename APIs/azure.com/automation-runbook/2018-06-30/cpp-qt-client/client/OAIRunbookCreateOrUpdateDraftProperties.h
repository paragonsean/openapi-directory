/**
 * AutomationManagement
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-06-30
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRunbookCreateOrUpdateDraftProperties.h
 *
 * The parameters supplied to the create or update draft runbook properties.
 */

#ifndef OAIRunbookCreateOrUpdateDraftProperties_H
#define OAIRunbookCreateOrUpdateDraftProperties_H

#include <QJsonObject>

#include "OAIRunbookDraft.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIRunbookDraft;

class OAIRunbookCreateOrUpdateDraftProperties : public OAIObject {
public:
    OAIRunbookCreateOrUpdateDraftProperties();
    OAIRunbookCreateOrUpdateDraftProperties(QString json);
    ~OAIRunbookCreateOrUpdateDraftProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    OAIRunbookDraft getDraft() const;
    void setDraft(const OAIRunbookDraft &draft);
    bool is_draft_Set() const;
    bool is_draft_Valid() const;

    qint32 getLogActivityTrace() const;
    void setLogActivityTrace(const qint32 &log_activity_trace);
    bool is_log_activity_trace_Set() const;
    bool is_log_activity_trace_Valid() const;

    bool isLogProgress() const;
    void setLogProgress(const bool &log_progress);
    bool is_log_progress_Set() const;
    bool is_log_progress_Valid() const;

    bool isLogVerbose() const;
    void setLogVerbose(const bool &log_verbose);
    bool is_log_verbose_Set() const;
    bool is_log_verbose_Valid() const;

    QString getRunbookType() const;
    void setRunbookType(const QString &runbook_type);
    bool is_runbook_type_Set() const;
    bool is_runbook_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    OAIRunbookDraft m_draft;
    bool m_draft_isSet;
    bool m_draft_isValid;

    qint32 m_log_activity_trace;
    bool m_log_activity_trace_isSet;
    bool m_log_activity_trace_isValid;

    bool m_log_progress;
    bool m_log_progress_isSet;
    bool m_log_progress_isValid;

    bool m_log_verbose;
    bool m_log_verbose_isSet;
    bool m_log_verbose_isValid;

    QString m_runbook_type;
    bool m_runbook_type_isSet;
    bool m_runbook_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRunbookCreateOrUpdateDraftProperties)

#endif // OAIRunbookCreateOrUpdateDraftProperties_H
