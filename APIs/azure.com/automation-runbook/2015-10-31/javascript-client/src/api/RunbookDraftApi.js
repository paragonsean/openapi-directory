/**
 * AutomationManagement
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2015-10-31
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import RunbookDraft from '../model/RunbookDraft';
import RunbookDraftUndoEditResult from '../model/RunbookDraftUndoEditResult';
import RunbookListByAutomationAccountDefaultResponse from '../model/RunbookListByAutomationAccountDefaultResponse';

/**
* RunbookDraft service.
* @module api/RunbookDraftApi
* @version 2015-10-31
*/
export default class RunbookDraftApi {

    /**
    * Constructs a new RunbookDraftApi. 
    * @alias module:api/RunbookDraftApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the runbookDraftGet operation.
     * @callback module:api/RunbookDraftApi~runbookDraftGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RunbookDraft} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve the runbook draft identified by runbook name.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroupName Name of an Azure Resource group.
     * @param {String} automationAccountName The name of the automation account.
     * @param {String} runbookName The runbook name.
     * @param {String} apiVersion Client Api Version.
     * @param {module:api/RunbookDraftApi~runbookDraftGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RunbookDraft}
     */
    runbookDraftGet(subscriptionId, resourceGroupName, automationAccountName, runbookName, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling runbookDraftGet");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling runbookDraftGet");
      }
      // verify the required parameter 'automationAccountName' is set
      if (automationAccountName === undefined || automationAccountName === null) {
        throw new Error("Missing the required parameter 'automationAccountName' when calling runbookDraftGet");
      }
      // verify the required parameter 'runbookName' is set
      if (runbookName === undefined || runbookName === null) {
        throw new Error("Missing the required parameter 'runbookName' when calling runbookDraftGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling runbookDraftGet");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'automationAccountName': automationAccountName,
        'runbookName': runbookName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = RunbookDraft;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/runbooks/{runbookName}/draft', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the runbookDraftGetContent operation.
     * @callback module:api/RunbookDraftApi~runbookDraftGetContentCallback
     * @param {String} error Error message, if any.
     * @param {File} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve the content of runbook draft identified by runbook name.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroupName Name of an Azure Resource group.
     * @param {String} automationAccountName The name of the automation account.
     * @param {String} runbookName The runbook name.
     * @param {String} apiVersion Client Api Version.
     * @param {module:api/RunbookDraftApi~runbookDraftGetContentCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link File}
     */
    runbookDraftGetContent(subscriptionId, resourceGroupName, automationAccountName, runbookName, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling runbookDraftGetContent");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling runbookDraftGetContent");
      }
      // verify the required parameter 'automationAccountName' is set
      if (automationAccountName === undefined || automationAccountName === null) {
        throw new Error("Missing the required parameter 'automationAccountName' when calling runbookDraftGetContent");
      }
      // verify the required parameter 'runbookName' is set
      if (runbookName === undefined || runbookName === null) {
        throw new Error("Missing the required parameter 'runbookName' when calling runbookDraftGetContent");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling runbookDraftGetContent");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'automationAccountName': automationAccountName,
        'runbookName': runbookName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['text/powershell'];
      let returnType = File;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/runbooks/{runbookName}/draft/content', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the runbookDraftPublish operation.
     * @callback module:api/RunbookDraftApi~runbookDraftPublishCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Publish runbook draft.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroupName Name of an Azure Resource group.
     * @param {String} automationAccountName The name of the automation account.
     * @param {String} runbookName The parameters supplied to the publish runbook operation.
     * @param {String} apiVersion Client Api Version.
     * @param {module:api/RunbookDraftApi~runbookDraftPublishCallback} callback The callback function, accepting three arguments: error, data, response
     */
    runbookDraftPublish(subscriptionId, resourceGroupName, automationAccountName, runbookName, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling runbookDraftPublish");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling runbookDraftPublish");
      }
      // verify the required parameter 'automationAccountName' is set
      if (automationAccountName === undefined || automationAccountName === null) {
        throw new Error("Missing the required parameter 'automationAccountName' when calling runbookDraftPublish");
      }
      // verify the required parameter 'runbookName' is set
      if (runbookName === undefined || runbookName === null) {
        throw new Error("Missing the required parameter 'runbookName' when calling runbookDraftPublish");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling runbookDraftPublish");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'automationAccountName': automationAccountName,
        'runbookName': runbookName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/runbooks/{runbookName}/draft/publish', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the runbookDraftReplaceContent operation.
     * @callback module:api/RunbookDraftApi~runbookDraftReplaceContentCallback
     * @param {String} error Error message, if any.
     * @param {File} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Replaces the runbook draft content.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroupName Name of an Azure Resource group.
     * @param {String} automationAccountName The name of the automation account.
     * @param {String} runbookName The runbook name.
     * @param {String} apiVersion Client Api Version.
     * @param {Object.<String, Object>} runbookContent The runbook draft content.
     * @param {module:api/RunbookDraftApi~runbookDraftReplaceContentCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link File}
     */
    runbookDraftReplaceContent(subscriptionId, resourceGroupName, automationAccountName, runbookName, apiVersion, runbookContent, callback) {
      let postBody = runbookContent;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling runbookDraftReplaceContent");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling runbookDraftReplaceContent");
      }
      // verify the required parameter 'automationAccountName' is set
      if (automationAccountName === undefined || automationAccountName === null) {
        throw new Error("Missing the required parameter 'automationAccountName' when calling runbookDraftReplaceContent");
      }
      // verify the required parameter 'runbookName' is set
      if (runbookName === undefined || runbookName === null) {
        throw new Error("Missing the required parameter 'runbookName' when calling runbookDraftReplaceContent");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling runbookDraftReplaceContent");
      }
      // verify the required parameter 'runbookContent' is set
      if (runbookContent === undefined || runbookContent === null) {
        throw new Error("Missing the required parameter 'runbookContent' when calling runbookDraftReplaceContent");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'automationAccountName': automationAccountName,
        'runbookName': runbookName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['text/powershell'];
      let accepts = ['application/json'];
      let returnType = File;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/runbooks/{runbookName}/draft/content', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the runbookDraftUndoEdit operation.
     * @callback module:api/RunbookDraftApi~runbookDraftUndoEditCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RunbookDraftUndoEditResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Undo draft edit to last known published state identified by runbook name.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroupName Name of an Azure Resource group.
     * @param {String} automationAccountName The name of the automation account.
     * @param {String} runbookName The runbook name.
     * @param {String} apiVersion Client Api Version.
     * @param {module:api/RunbookDraftApi~runbookDraftUndoEditCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RunbookDraftUndoEditResult}
     */
    runbookDraftUndoEdit(subscriptionId, resourceGroupName, automationAccountName, runbookName, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling runbookDraftUndoEdit");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling runbookDraftUndoEdit");
      }
      // verify the required parameter 'automationAccountName' is set
      if (automationAccountName === undefined || automationAccountName === null) {
        throw new Error("Missing the required parameter 'automationAccountName' when calling runbookDraftUndoEdit");
      }
      // verify the required parameter 'runbookName' is set
      if (runbookName === undefined || runbookName === null) {
        throw new Error("Missing the required parameter 'runbookName' when calling runbookDraftUndoEdit");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling runbookDraftUndoEdit");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'automationAccountName': automationAccountName,
        'runbookName': runbookName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = RunbookDraftUndoEditResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/runbooks/{runbookName}/draft/undoEdit', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
