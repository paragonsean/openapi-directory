/**
 * AutomationManagement
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2015-10-31
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRunbookCreateOrUpdateProperties.h
 *
 * The parameters supplied to the create or update runbook properties.
 */

#ifndef OAIRunbookCreateOrUpdateProperties_H
#define OAIRunbookCreateOrUpdateProperties_H

#include <QJsonObject>

#include "OAIContentLink.h"
#include "OAIRunbookDraft.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIRunbookDraft;
class OAIContentLink;

class OAIRunbookCreateOrUpdateProperties : public OAIObject {
public:
    OAIRunbookCreateOrUpdateProperties();
    OAIRunbookCreateOrUpdateProperties(QString json);
    ~OAIRunbookCreateOrUpdateProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    OAIRunbookDraft getDraft() const;
    void setDraft(const OAIRunbookDraft &draft);
    bool is_draft_Set() const;
    bool is_draft_Valid() const;

    qint32 getLogActivityTrace() const;
    void setLogActivityTrace(const qint32 &log_activity_trace);
    bool is_log_activity_trace_Set() const;
    bool is_log_activity_trace_Valid() const;

    bool isLogProgress() const;
    void setLogProgress(const bool &log_progress);
    bool is_log_progress_Set() const;
    bool is_log_progress_Valid() const;

    bool isLogVerbose() const;
    void setLogVerbose(const bool &log_verbose);
    bool is_log_verbose_Set() const;
    bool is_log_verbose_Valid() const;

    OAIContentLink getPublishContentLink() const;
    void setPublishContentLink(const OAIContentLink &publish_content_link);
    bool is_publish_content_link_Set() const;
    bool is_publish_content_link_Valid() const;

    QString getRunbookType() const;
    void setRunbookType(const QString &runbook_type);
    bool is_runbook_type_Set() const;
    bool is_runbook_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    OAIRunbookDraft m_draft;
    bool m_draft_isSet;
    bool m_draft_isValid;

    qint32 m_log_activity_trace;
    bool m_log_activity_trace_isSet;
    bool m_log_activity_trace_isValid;

    bool m_log_progress;
    bool m_log_progress_isSet;
    bool m_log_progress_isValid;

    bool m_log_verbose;
    bool m_log_verbose_isSet;
    bool m_log_verbose_isValid;

    OAIContentLink m_publish_content_link;
    bool m_publish_content_link_isSet;
    bool m_publish_content_link_isValid;

    QString m_runbook_type;
    bool m_runbook_type_isSet;
    bool m_runbook_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRunbookCreateOrUpdateProperties)

#endif // OAIRunbookCreateOrUpdateProperties_H
