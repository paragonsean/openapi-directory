/**
 * SubscriptionsManagementClient
 * The Admin Subscriptions Management Client.
 *
 * The version of the OpenAPI document: 2015-11-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DelegatedProvidersList200ResponseValueInner model module.
 * @module model/DelegatedProvidersList200ResponseValueInner
 * @version 2015-11-01
 */
class DelegatedProvidersList200ResponseValueInner {
    /**
     * Constructs a new <code>DelegatedProvidersList200ResponseValueInner</code>.
     * List of supported operations.
     * @alias module:model/DelegatedProvidersList200ResponseValueInner
     */
    constructor() { 
        
        DelegatedProvidersList200ResponseValueInner.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DelegatedProvidersList200ResponseValueInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DelegatedProvidersList200ResponseValueInner} obj Optional instance to populate.
     * @return {module:model/DelegatedProvidersList200ResponseValueInner} The populated <code>DelegatedProvidersList200ResponseValueInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DelegatedProvidersList200ResponseValueInner();

            if (data.hasOwnProperty('delegatedProviderSubscriptionId')) {
                obj['delegatedProviderSubscriptionId'] = ApiClient.convertToType(data['delegatedProviderSubscriptionId'], 'String');
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('externalReferenceId')) {
                obj['externalReferenceId'] = ApiClient.convertToType(data['externalReferenceId'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('offerId')) {
                obj['offerId'] = ApiClient.convertToType(data['offerId'], 'String');
            }
            if (data.hasOwnProperty('owner')) {
                obj['owner'] = ApiClient.convertToType(data['owner'], 'String');
            }
            if (data.hasOwnProperty('routingResourceManagerType')) {
                obj['routingResourceManagerType'] = ApiClient.convertToType(data['routingResourceManagerType'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('subscriptionId')) {
                obj['subscriptionId'] = ApiClient.convertToType(data['subscriptionId'], 'String');
            }
            if (data.hasOwnProperty('tenantId')) {
                obj['tenantId'] = ApiClient.convertToType(data['tenantId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DelegatedProvidersList200ResponseValueInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DelegatedProvidersList200ResponseValueInner</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['delegatedProviderSubscriptionId'] && !(typeof data['delegatedProviderSubscriptionId'] === 'string' || data['delegatedProviderSubscriptionId'] instanceof String)) {
            throw new Error("Expected the field `delegatedProviderSubscriptionId` to be a primitive type in the JSON string but got " + data['delegatedProviderSubscriptionId']);
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // ensure the json data is a string
        if (data['externalReferenceId'] && !(typeof data['externalReferenceId'] === 'string' || data['externalReferenceId'] instanceof String)) {
            throw new Error("Expected the field `externalReferenceId` to be a primitive type in the JSON string but got " + data['externalReferenceId']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['offerId'] && !(typeof data['offerId'] === 'string' || data['offerId'] instanceof String)) {
            throw new Error("Expected the field `offerId` to be a primitive type in the JSON string but got " + data['offerId']);
        }
        // ensure the json data is a string
        if (data['owner'] && !(typeof data['owner'] === 'string' || data['owner'] instanceof String)) {
            throw new Error("Expected the field `owner` to be a primitive type in the JSON string but got " + data['owner']);
        }
        // ensure the json data is a string
        if (data['routingResourceManagerType'] && !(typeof data['routingResourceManagerType'] === 'string' || data['routingResourceManagerType'] instanceof String)) {
            throw new Error("Expected the field `routingResourceManagerType` to be a primitive type in the JSON string but got " + data['routingResourceManagerType']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }
        // ensure the json data is a string
        if (data['subscriptionId'] && !(typeof data['subscriptionId'] === 'string' || data['subscriptionId'] instanceof String)) {
            throw new Error("Expected the field `subscriptionId` to be a primitive type in the JSON string but got " + data['subscriptionId']);
        }
        // ensure the json data is a string
        if (data['tenantId'] && !(typeof data['tenantId'] === 'string' || data['tenantId'] instanceof String)) {
            throw new Error("Expected the field `tenantId` to be a primitive type in the JSON string but got " + data['tenantId']);
        }

        return true;
    }


}



/**
 * Parent DelegatedProvider subscription identifier.
 * @member {String} delegatedProviderSubscriptionId
 */
DelegatedProvidersList200ResponseValueInner.prototype['delegatedProviderSubscriptionId'] = undefined;

/**
 * Subscription name.
 * @member {String} displayName
 */
DelegatedProvidersList200ResponseValueInner.prototype['displayName'] = undefined;

/**
 * External reference identifier.
 * @member {String} externalReferenceId
 */
DelegatedProvidersList200ResponseValueInner.prototype['externalReferenceId'] = undefined;

/**
 * Fully qualified identifier.
 * @member {String} id
 */
DelegatedProvidersList200ResponseValueInner.prototype['id'] = undefined;

/**
 * Identifier of the offer under the scope of a delegated provider.
 * @member {String} offerId
 */
DelegatedProvidersList200ResponseValueInner.prototype['offerId'] = undefined;

/**
 * Subscription owner.
 * @member {String} owner
 */
DelegatedProvidersList200ResponseValueInner.prototype['owner'] = undefined;

/**
 * Resource manager type.
 * @member {module:model/DelegatedProvidersList200ResponseValueInner.RoutingResourceManagerTypeEnum} routingResourceManagerType
 */
DelegatedProvidersList200ResponseValueInner.prototype['routingResourceManagerType'] = undefined;

/**
 * Subscription notification state.
 * @member {module:model/DelegatedProvidersList200ResponseValueInner.StateEnum} state
 */
DelegatedProvidersList200ResponseValueInner.prototype['state'] = undefined;

/**
 * Subscription identifier.
 * @member {String} subscriptionId
 */
DelegatedProvidersList200ResponseValueInner.prototype['subscriptionId'] = undefined;

/**
 * Directory tenant identifier.
 * @member {String} tenantId
 */
DelegatedProvidersList200ResponseValueInner.prototype['tenantId'] = undefined;





/**
 * Allowed values for the <code>routingResourceManagerType</code> property.
 * @enum {String}
 * @readonly
 */
DelegatedProvidersList200ResponseValueInner['RoutingResourceManagerTypeEnum'] = {

    /**
     * value: "Default"
     * @const
     */
    "Default": "Default",

    /**
     * value: "Admin"
     * @const
     */
    "Admin": "Admin"
};


/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
DelegatedProvidersList200ResponseValueInner['StateEnum'] = {

    /**
     * value: "NotDefined"
     * @const
     */
    "NotDefined": "NotDefined",

    /**
     * value: "Enabled"
     * @const
     */
    "Enabled": "Enabled",

    /**
     * value: "Warned"
     * @const
     */
    "Warned": "Warned",

    /**
     * value: "PastDue"
     * @const
     */
    "PastDue": "PastDue",

    /**
     * value: "Disabled"
     * @const
     */
    "Disabled": "Disabled",

    /**
     * value: "Deleted"
     * @const
     */
    "Deleted": "Deleted",

    /**
     * value: "Deleting"
     * @const
     */
    "Deleting": "Deleting",

    /**
     * value: "PartiallyDeleted"
     * @const
     */
    "PartiallyDeleted": "PartiallyDeleted"
};



export default DelegatedProvidersList200ResponseValueInner;

