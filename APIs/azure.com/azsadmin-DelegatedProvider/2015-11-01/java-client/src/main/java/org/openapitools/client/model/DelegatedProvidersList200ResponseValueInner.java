/*
 * SubscriptionsManagementClient
 * The Admin Subscriptions Management Client.
 *
 * The version of the OpenAPI document: 2015-11-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * List of supported operations.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:00:14.017568-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DelegatedProvidersList200ResponseValueInner {
  public static final String SERIALIZED_NAME_DELEGATED_PROVIDER_SUBSCRIPTION_ID = "delegatedProviderSubscriptionId";
  @SerializedName(SERIALIZED_NAME_DELEGATED_PROVIDER_SUBSCRIPTION_ID)
  private String delegatedProviderSubscriptionId;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_EXTERNAL_REFERENCE_ID = "externalReferenceId";
  @SerializedName(SERIALIZED_NAME_EXTERNAL_REFERENCE_ID)
  private String externalReferenceId;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_OFFER_ID = "offerId";
  @SerializedName(SERIALIZED_NAME_OFFER_ID)
  private String offerId;

  public static final String SERIALIZED_NAME_OWNER = "owner";
  @SerializedName(SERIALIZED_NAME_OWNER)
  private String owner;

  /**
   * Resource manager type.
   */
  @JsonAdapter(RoutingResourceManagerTypeEnum.Adapter.class)
  public enum RoutingResourceManagerTypeEnum {
    DEFAULT("Default"),
    
    ADMIN("Admin");

    private String value;

    RoutingResourceManagerTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static RoutingResourceManagerTypeEnum fromValue(String value) {
      for (RoutingResourceManagerTypeEnum b : RoutingResourceManagerTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<RoutingResourceManagerTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final RoutingResourceManagerTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public RoutingResourceManagerTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return RoutingResourceManagerTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      RoutingResourceManagerTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_ROUTING_RESOURCE_MANAGER_TYPE = "routingResourceManagerType";
  @SerializedName(SERIALIZED_NAME_ROUTING_RESOURCE_MANAGER_TYPE)
  private RoutingResourceManagerTypeEnum routingResourceManagerType;

  /**
   * Subscription notification state.
   */
  @JsonAdapter(StateEnum.Adapter.class)
  public enum StateEnum {
    NOT_DEFINED("NotDefined"),
    
    ENABLED("Enabled"),
    
    WARNED("Warned"),
    
    PAST_DUE("PastDue"),
    
    DISABLED("Disabled"),
    
    DELETED("Deleted"),
    
    DELETING("Deleting"),
    
    PARTIALLY_DELETED("PartiallyDeleted");

    private String value;

    StateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StateEnum fromValue(String value) {
      for (StateEnum b : StateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StateEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StateEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      StateEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private StateEnum state;

  public static final String SERIALIZED_NAME_SUBSCRIPTION_ID = "subscriptionId";
  @SerializedName(SERIALIZED_NAME_SUBSCRIPTION_ID)
  private String subscriptionId;

  public static final String SERIALIZED_NAME_TENANT_ID = "tenantId";
  @SerializedName(SERIALIZED_NAME_TENANT_ID)
  private String tenantId;

  public DelegatedProvidersList200ResponseValueInner() {
  }

  public DelegatedProvidersList200ResponseValueInner delegatedProviderSubscriptionId(String delegatedProviderSubscriptionId) {
    this.delegatedProviderSubscriptionId = delegatedProviderSubscriptionId;
    return this;
  }

  /**
   * Parent DelegatedProvider subscription identifier.
   * @return delegatedProviderSubscriptionId
   */
  @javax.annotation.Nullable
  public String getDelegatedProviderSubscriptionId() {
    return delegatedProviderSubscriptionId;
  }

  public void setDelegatedProviderSubscriptionId(String delegatedProviderSubscriptionId) {
    this.delegatedProviderSubscriptionId = delegatedProviderSubscriptionId;
  }


  public DelegatedProvidersList200ResponseValueInner displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Subscription name.
   * @return displayName
   */
  @javax.annotation.Nullable
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public DelegatedProvidersList200ResponseValueInner externalReferenceId(String externalReferenceId) {
    this.externalReferenceId = externalReferenceId;
    return this;
  }

  /**
   * External reference identifier.
   * @return externalReferenceId
   */
  @javax.annotation.Nullable
  public String getExternalReferenceId() {
    return externalReferenceId;
  }

  public void setExternalReferenceId(String externalReferenceId) {
    this.externalReferenceId = externalReferenceId;
  }


  public DelegatedProvidersList200ResponseValueInner id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Fully qualified identifier.
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public DelegatedProvidersList200ResponseValueInner offerId(String offerId) {
    this.offerId = offerId;
    return this;
  }

  /**
   * Identifier of the offer under the scope of a delegated provider.
   * @return offerId
   */
  @javax.annotation.Nullable
  public String getOfferId() {
    return offerId;
  }

  public void setOfferId(String offerId) {
    this.offerId = offerId;
  }


  public DelegatedProvidersList200ResponseValueInner owner(String owner) {
    this.owner = owner;
    return this;
  }

  /**
   * Subscription owner.
   * @return owner
   */
  @javax.annotation.Nullable
  public String getOwner() {
    return owner;
  }

  public void setOwner(String owner) {
    this.owner = owner;
  }


  public DelegatedProvidersList200ResponseValueInner routingResourceManagerType(RoutingResourceManagerTypeEnum routingResourceManagerType) {
    this.routingResourceManagerType = routingResourceManagerType;
    return this;
  }

  /**
   * Resource manager type.
   * @return routingResourceManagerType
   */
  @javax.annotation.Nullable
  public RoutingResourceManagerTypeEnum getRoutingResourceManagerType() {
    return routingResourceManagerType;
  }

  public void setRoutingResourceManagerType(RoutingResourceManagerTypeEnum routingResourceManagerType) {
    this.routingResourceManagerType = routingResourceManagerType;
  }


  public DelegatedProvidersList200ResponseValueInner state(StateEnum state) {
    this.state = state;
    return this;
  }

  /**
   * Subscription notification state.
   * @return state
   */
  @javax.annotation.Nullable
  public StateEnum getState() {
    return state;
  }

  public void setState(StateEnum state) {
    this.state = state;
  }


  public DelegatedProvidersList200ResponseValueInner subscriptionId(String subscriptionId) {
    this.subscriptionId = subscriptionId;
    return this;
  }

  /**
   * Subscription identifier.
   * @return subscriptionId
   */
  @javax.annotation.Nullable
  public String getSubscriptionId() {
    return subscriptionId;
  }

  public void setSubscriptionId(String subscriptionId) {
    this.subscriptionId = subscriptionId;
  }


  public DelegatedProvidersList200ResponseValueInner tenantId(String tenantId) {
    this.tenantId = tenantId;
    return this;
  }

  /**
   * Directory tenant identifier.
   * @return tenantId
   */
  @javax.annotation.Nullable
  public String getTenantId() {
    return tenantId;
  }

  public void setTenantId(String tenantId) {
    this.tenantId = tenantId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DelegatedProvidersList200ResponseValueInner delegatedProvidersList200ResponseValueInner = (DelegatedProvidersList200ResponseValueInner) o;
    return Objects.equals(this.delegatedProviderSubscriptionId, delegatedProvidersList200ResponseValueInner.delegatedProviderSubscriptionId) &&
        Objects.equals(this.displayName, delegatedProvidersList200ResponseValueInner.displayName) &&
        Objects.equals(this.externalReferenceId, delegatedProvidersList200ResponseValueInner.externalReferenceId) &&
        Objects.equals(this.id, delegatedProvidersList200ResponseValueInner.id) &&
        Objects.equals(this.offerId, delegatedProvidersList200ResponseValueInner.offerId) &&
        Objects.equals(this.owner, delegatedProvidersList200ResponseValueInner.owner) &&
        Objects.equals(this.routingResourceManagerType, delegatedProvidersList200ResponseValueInner.routingResourceManagerType) &&
        Objects.equals(this.state, delegatedProvidersList200ResponseValueInner.state) &&
        Objects.equals(this.subscriptionId, delegatedProvidersList200ResponseValueInner.subscriptionId) &&
        Objects.equals(this.tenantId, delegatedProvidersList200ResponseValueInner.tenantId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(delegatedProviderSubscriptionId, displayName, externalReferenceId, id, offerId, owner, routingResourceManagerType, state, subscriptionId, tenantId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DelegatedProvidersList200ResponseValueInner {\n");
    sb.append("    delegatedProviderSubscriptionId: ").append(toIndentedString(delegatedProviderSubscriptionId)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    externalReferenceId: ").append(toIndentedString(externalReferenceId)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    offerId: ").append(toIndentedString(offerId)).append("\n");
    sb.append("    owner: ").append(toIndentedString(owner)).append("\n");
    sb.append("    routingResourceManagerType: ").append(toIndentedString(routingResourceManagerType)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    subscriptionId: ").append(toIndentedString(subscriptionId)).append("\n");
    sb.append("    tenantId: ").append(toIndentedString(tenantId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("delegatedProviderSubscriptionId");
    openapiFields.add("displayName");
    openapiFields.add("externalReferenceId");
    openapiFields.add("id");
    openapiFields.add("offerId");
    openapiFields.add("owner");
    openapiFields.add("routingResourceManagerType");
    openapiFields.add("state");
    openapiFields.add("subscriptionId");
    openapiFields.add("tenantId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DelegatedProvidersList200ResponseValueInner
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DelegatedProvidersList200ResponseValueInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DelegatedProvidersList200ResponseValueInner is not found in the empty JSON string", DelegatedProvidersList200ResponseValueInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DelegatedProvidersList200ResponseValueInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DelegatedProvidersList200ResponseValueInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("delegatedProviderSubscriptionId") != null && !jsonObj.get("delegatedProviderSubscriptionId").isJsonNull()) && !jsonObj.get("delegatedProviderSubscriptionId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `delegatedProviderSubscriptionId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("delegatedProviderSubscriptionId").toString()));
      }
      if ((jsonObj.get("displayName") != null && !jsonObj.get("displayName").isJsonNull()) && !jsonObj.get("displayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayName").toString()));
      }
      if ((jsonObj.get("externalReferenceId") != null && !jsonObj.get("externalReferenceId").isJsonNull()) && !jsonObj.get("externalReferenceId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `externalReferenceId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("externalReferenceId").toString()));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("offerId") != null && !jsonObj.get("offerId").isJsonNull()) && !jsonObj.get("offerId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `offerId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("offerId").toString()));
      }
      if ((jsonObj.get("owner") != null && !jsonObj.get("owner").isJsonNull()) && !jsonObj.get("owner").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `owner` to be a primitive type in the JSON string but got `%s`", jsonObj.get("owner").toString()));
      }
      if ((jsonObj.get("routingResourceManagerType") != null && !jsonObj.get("routingResourceManagerType").isJsonNull()) && !jsonObj.get("routingResourceManagerType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `routingResourceManagerType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("routingResourceManagerType").toString()));
      }
      // validate the optional field `routingResourceManagerType`
      if (jsonObj.get("routingResourceManagerType") != null && !jsonObj.get("routingResourceManagerType").isJsonNull()) {
        RoutingResourceManagerTypeEnum.validateJsonElement(jsonObj.get("routingResourceManagerType"));
      }
      if ((jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) && !jsonObj.get("state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("state").toString()));
      }
      // validate the optional field `state`
      if (jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) {
        StateEnum.validateJsonElement(jsonObj.get("state"));
      }
      if ((jsonObj.get("subscriptionId") != null && !jsonObj.get("subscriptionId").isJsonNull()) && !jsonObj.get("subscriptionId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `subscriptionId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("subscriptionId").toString()));
      }
      if ((jsonObj.get("tenantId") != null && !jsonObj.get("tenantId").isJsonNull()) && !jsonObj.get("tenantId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tenantId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tenantId").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DelegatedProvidersList200ResponseValueInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DelegatedProvidersList200ResponseValueInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DelegatedProvidersList200ResponseValueInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DelegatedProvidersList200ResponseValueInner.class));

       return (TypeAdapter<T>) new TypeAdapter<DelegatedProvidersList200ResponseValueInner>() {
           @Override
           public void write(JsonWriter out, DelegatedProvidersList200ResponseValueInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DelegatedProvidersList200ResponseValueInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DelegatedProvidersList200ResponseValueInner given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DelegatedProvidersList200ResponseValueInner
   * @throws IOException if the JSON string is invalid with respect to DelegatedProvidersList200ResponseValueInner
   */
  public static DelegatedProvidersList200ResponseValueInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DelegatedProvidersList200ResponseValueInner.class);
  }

  /**
   * Convert an instance of DelegatedProvidersList200ResponseValueInner to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

