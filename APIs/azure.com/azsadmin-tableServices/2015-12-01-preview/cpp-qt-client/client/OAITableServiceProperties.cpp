/**
 * StorageManagementClient
 * The Admin Storage Management Client.
 *
 * The version of the OpenAPI document: 2015-12-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITableServiceProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITableServiceProperties::OAITableServiceProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITableServiceProperties::OAITableServiceProperties() {
    this->initializeModel();
}

OAITableServiceProperties::~OAITableServiceProperties() {}

void OAITableServiceProperties::initializeModel() {

    m_settings_isSet = false;
    m_settings_isValid = false;

    m_health_status_isSet = false;
    m_health_status_isValid = false;

    m_version_isSet = false;
    m_version_isValid = false;
}

void OAITableServiceProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITableServiceProperties::fromJsonObject(QJsonObject json) {

    m_settings_isValid = ::OpenAPI::fromJsonValue(m_settings, json[QString("settings")]);
    m_settings_isSet = !json[QString("settings")].isNull() && m_settings_isValid;

    m_health_status_isValid = ::OpenAPI::fromJsonValue(m_health_status, json[QString("healthStatus")]);
    m_health_status_isSet = !json[QString("healthStatus")].isNull() && m_health_status_isValid;

    m_version_isValid = ::OpenAPI::fromJsonValue(m_version, json[QString("version")]);
    m_version_isSet = !json[QString("version")].isNull() && m_version_isValid;
}

QString OAITableServiceProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITableServiceProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_settings.isSet()) {
        obj.insert(QString("settings"), ::OpenAPI::toJsonValue(m_settings));
    }
    if (m_health_status_isSet) {
        obj.insert(QString("healthStatus"), ::OpenAPI::toJsonValue(m_health_status));
    }
    if (m_version_isSet) {
        obj.insert(QString("version"), ::OpenAPI::toJsonValue(m_version));
    }
    return obj;
}

OAIObject OAITableServiceProperties::getSettings() const {
    return m_settings;
}
void OAITableServiceProperties::setSettings(const OAIObject &settings) {
    m_settings = settings;
    m_settings_isSet = true;
}

bool OAITableServiceProperties::is_settings_Set() const{
    return m_settings_isSet;
}

bool OAITableServiceProperties::is_settings_Valid() const{
    return m_settings_isValid;
}

QString OAITableServiceProperties::getHealthStatus() const {
    return m_health_status;
}
void OAITableServiceProperties::setHealthStatus(const QString &health_status) {
    m_health_status = health_status;
    m_health_status_isSet = true;
}

bool OAITableServiceProperties::is_health_status_Set() const{
    return m_health_status_isSet;
}

bool OAITableServiceProperties::is_health_status_Valid() const{
    return m_health_status_isValid;
}

QString OAITableServiceProperties::getVersion() const {
    return m_version;
}
void OAITableServiceProperties::setVersion(const QString &version) {
    m_version = version;
    m_version_isSet = true;
}

bool OAITableServiceProperties::is_version_Set() const{
    return m_version_isSet;
}

bool OAITableServiceProperties::is_version_Valid() const{
    return m_version_isValid;
}

bool OAITableServiceProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_health_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_version_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITableServiceProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
