/**
 * StorageManagementClient
 * The Admin Storage Management Client.
 *
 * The version of the OpenAPI document: 2015-12-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import TableService from '../model/TableService';
import TableServicesListMetricDefinitions200Response from '../model/TableServicesListMetricDefinitions200Response';
import TableServicesListMetrics200Response from '../model/TableServicesListMetrics200Response';

/**
* TableServices service.
* @module api/TableServicesApi
* @version 2015-12-01-preview
*/
export default class TableServicesApi {

    /**
    * Constructs a new TableServicesApi. 
    * @alias module:api/TableServicesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the tableServicesGet operation.
     * @callback module:api/TableServicesApi~tableServicesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TableService} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns the table service.
     * @param {String} subscriptionId Subscription Id.
     * @param {String} resourceGroupName Resource group name.
     * @param {String} farmId Farm Id.
     * @param {module:model/String} serviceType The service type.
     * @param {String} apiVersion REST Api Version.
     * @param {module:api/TableServicesApi~tableServicesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TableService}
     */
    tableServicesGet(subscriptionId, resourceGroupName, farmId, serviceType, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling tableServicesGet");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling tableServicesGet");
      }
      // verify the required parameter 'farmId' is set
      if (farmId === undefined || farmId === null) {
        throw new Error("Missing the required parameter 'farmId' when calling tableServicesGet");
      }
      // verify the required parameter 'serviceType' is set
      if (serviceType === undefined || serviceType === null) {
        throw new Error("Missing the required parameter 'serviceType' when calling tableServicesGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling tableServicesGet");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'farmId': farmId,
        'serviceType': serviceType
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = TableService;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Storage.Admin/farms/{farmId}/tableservices/{serviceType}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the tableServicesListMetricDefinitions operation.
     * @callback module:api/TableServicesApi~tableServicesListMetricDefinitionsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TableServicesListMetricDefinitions200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns a list of metric definitions for table service.
     * @param {String} subscriptionId Subscription Id.
     * @param {String} resourceGroupName Resource group name.
     * @param {String} farmId Farm Id.
     * @param {module:model/String} serviceType The service type.
     * @param {String} apiVersion REST Api Version.
     * @param {module:api/TableServicesApi~tableServicesListMetricDefinitionsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TableServicesListMetricDefinitions200Response}
     */
    tableServicesListMetricDefinitions(subscriptionId, resourceGroupName, farmId, serviceType, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling tableServicesListMetricDefinitions");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling tableServicesListMetricDefinitions");
      }
      // verify the required parameter 'farmId' is set
      if (farmId === undefined || farmId === null) {
        throw new Error("Missing the required parameter 'farmId' when calling tableServicesListMetricDefinitions");
      }
      // verify the required parameter 'serviceType' is set
      if (serviceType === undefined || serviceType === null) {
        throw new Error("Missing the required parameter 'serviceType' when calling tableServicesListMetricDefinitions");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling tableServicesListMetricDefinitions");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'farmId': farmId,
        'serviceType': serviceType
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = TableServicesListMetricDefinitions200Response;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Storage.Admin/farms/{farmId}/tableservices/{serviceType}/metricdefinitions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the tableServicesListMetrics operation.
     * @callback module:api/TableServicesApi~tableServicesListMetricsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TableServicesListMetrics200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns a list of metrics for table service.
     * @param {String} subscriptionId Subscription Id.
     * @param {String} resourceGroupName Resource group name.
     * @param {String} farmId Farm Id.
     * @param {module:model/String} serviceType The service type.
     * @param {String} apiVersion REST Api Version.
     * @param {module:api/TableServicesApi~tableServicesListMetricsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TableServicesListMetrics200Response}
     */
    tableServicesListMetrics(subscriptionId, resourceGroupName, farmId, serviceType, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling tableServicesListMetrics");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling tableServicesListMetrics");
      }
      // verify the required parameter 'farmId' is set
      if (farmId === undefined || farmId === null) {
        throw new Error("Missing the required parameter 'farmId' when calling tableServicesListMetrics");
      }
      // verify the required parameter 'serviceType' is set
      if (serviceType === undefined || serviceType === null) {
        throw new Error("Missing the required parameter 'serviceType' when calling tableServicesListMetrics");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling tableServicesListMetrics");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'farmId': farmId,
        'serviceType': serviceType
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = TableServicesListMetrics200Response;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Storage.Admin/farms/{farmId}/tableservices/{serviceType}/metrics', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
