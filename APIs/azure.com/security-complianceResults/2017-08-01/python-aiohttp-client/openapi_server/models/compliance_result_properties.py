# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ComplianceResultProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, resource_status: str=None):
        """ComplianceResultProperties - a model defined in OpenAPI

        :param resource_status: The resource_status of this ComplianceResultProperties.
        """
        self.openapi_types = {
            'resource_status': str
        }

        self.attribute_map = {
            'resource_status': 'resourceStatus'
        }

        self._resource_status = resource_status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ComplianceResultProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ComplianceResultProperties of this ComplianceResultProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def resource_status(self):
        """Gets the resource_status of this ComplianceResultProperties.

        The status of the resource regarding a single assessment

        :return: The resource_status of this ComplianceResultProperties.
        :rtype: str
        """
        return self._resource_status

    @resource_status.setter
    def resource_status(self, resource_status):
        """Sets the resource_status of this ComplianceResultProperties.

        The status of the resource regarding a single assessment

        :param resource_status: The resource_status of this ComplianceResultProperties.
        :type resource_status: str
        """
        allowed_values = ["Healthy", "NotApplicable", "OffByPolicy", "NotHealthy"]  # noqa: E501
        if resource_status not in allowed_values:
            raise ValueError(
                "Invalid value for `resource_status` ({0}), must be one of {1}"
                .format(resource_status, allowed_values)
            )

        self._resource_status = resource_status
