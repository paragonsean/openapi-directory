/**
 * MySQLManagementClient
 * The Microsoft Azure management API provides create, read, update, and delete functionality for Azure MySQL resources including servers, databases, firewall rules, VNET rules, security alert policies, log files and configurations with new business model.
 *
 * The version of the OpenAPI document: 2018-06-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIWaitStatisticsInputProperties.h
 *
 * The properties for input to get wait statistics
 */

#ifndef OAIWaitStatisticsInputProperties_H
#define OAIWaitStatisticsInputProperties_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIWaitStatisticsInputProperties : public OAIObject {
public:
    OAIWaitStatisticsInputProperties();
    OAIWaitStatisticsInputProperties(QString json);
    ~OAIWaitStatisticsInputProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAggregationWindow() const;
    void setAggregationWindow(const QString &aggregation_window);
    bool is_aggregation_window_Set() const;
    bool is_aggregation_window_Valid() const;

    QDateTime getObservationEndTime() const;
    void setObservationEndTime(const QDateTime &observation_end_time);
    bool is_observation_end_time_Set() const;
    bool is_observation_end_time_Valid() const;

    QDateTime getObservationStartTime() const;
    void setObservationStartTime(const QDateTime &observation_start_time);
    bool is_observation_start_time_Set() const;
    bool is_observation_start_time_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_aggregation_window;
    bool m_aggregation_window_isSet;
    bool m_aggregation_window_isValid;

    QDateTime m_observation_end_time;
    bool m_observation_end_time_isSet;
    bool m_observation_end_time_isValid;

    QDateTime m_observation_start_time;
    bool m_observation_start_time_isSet;
    bool m_observation_start_time_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIWaitStatisticsInputProperties)

#endif // OAIWaitStatisticsInputProperties_H
