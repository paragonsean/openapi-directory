/**
 * MySQLManagementClient
 * The Microsoft Azure management API provides create, read, update, and delete functionality for Azure MySQL resources including servers, databases, firewall rules, VNET rules, security alert policies, log files and configurations with new business model.
 *
 * The version of the OpenAPI document: 2018-06-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIWaitStatisticsInput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIWaitStatisticsInput::OAIWaitStatisticsInput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIWaitStatisticsInput::OAIWaitStatisticsInput() {
    this->initializeModel();
}

OAIWaitStatisticsInput::~OAIWaitStatisticsInput() {}

void OAIWaitStatisticsInput::initializeModel() {

    m_properties_isSet = false;
    m_properties_isValid = false;
}

void OAIWaitStatisticsInput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIWaitStatisticsInput::fromJsonObject(QJsonObject json) {

    m_properties_isValid = ::OpenAPI::fromJsonValue(m_properties, json[QString("properties")]);
    m_properties_isSet = !json[QString("properties")].isNull() && m_properties_isValid;
}

QString OAIWaitStatisticsInput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIWaitStatisticsInput::asJsonObject() const {
    QJsonObject obj;
    if (m_properties.isSet()) {
        obj.insert(QString("properties"), ::OpenAPI::toJsonValue(m_properties));
    }
    return obj;
}

OAIWaitStatisticsInputProperties OAIWaitStatisticsInput::getProperties() const {
    return m_properties;
}
void OAIWaitStatisticsInput::setProperties(const OAIWaitStatisticsInputProperties &properties) {
    m_properties = properties;
    m_properties_isSet = true;
}

bool OAIWaitStatisticsInput::is_properties_Set() const{
    return m_properties_isSet;
}

bool OAIWaitStatisticsInput::is_properties_Valid() const{
    return m_properties_isValid;
}

bool OAIWaitStatisticsInput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_properties.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIWaitStatisticsInput::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_properties_isValid && true;
}

} // namespace OpenAPI
