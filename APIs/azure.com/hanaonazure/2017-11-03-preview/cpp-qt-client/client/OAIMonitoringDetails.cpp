/**
 * HanaManagementClient
 * The SAP HANA on Azure Management Client.
 *
 * The version of the OpenAPI document: 2017-11-03-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMonitoringDetails.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMonitoringDetails::OAIMonitoringDetails(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMonitoringDetails::OAIMonitoringDetails() {
    this->initializeModel();
}

OAIMonitoringDetails::~OAIMonitoringDetails() {}

void OAIMonitoringDetails::initializeModel() {

    m_hana_db_name_isSet = false;
    m_hana_db_name_isValid = false;

    m_hana_db_password_isSet = false;
    m_hana_db_password_isValid = false;

    m_hana_db_sql_port_isSet = false;
    m_hana_db_sql_port_isValid = false;

    m_hana_db_username_isSet = false;
    m_hana_db_username_isValid = false;

    m_hana_hostname_isSet = false;
    m_hana_hostname_isValid = false;

    m_hana_subnet_isSet = false;
    m_hana_subnet_isValid = false;
}

void OAIMonitoringDetails::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMonitoringDetails::fromJsonObject(QJsonObject json) {

    m_hana_db_name_isValid = ::OpenAPI::fromJsonValue(m_hana_db_name, json[QString("hanaDbName")]);
    m_hana_db_name_isSet = !json[QString("hanaDbName")].isNull() && m_hana_db_name_isValid;

    m_hana_db_password_isValid = ::OpenAPI::fromJsonValue(m_hana_db_password, json[QString("hanaDbPassword")]);
    m_hana_db_password_isSet = !json[QString("hanaDbPassword")].isNull() && m_hana_db_password_isValid;

    m_hana_db_sql_port_isValid = ::OpenAPI::fromJsonValue(m_hana_db_sql_port, json[QString("hanaDbSqlPort")]);
    m_hana_db_sql_port_isSet = !json[QString("hanaDbSqlPort")].isNull() && m_hana_db_sql_port_isValid;

    m_hana_db_username_isValid = ::OpenAPI::fromJsonValue(m_hana_db_username, json[QString("hanaDbUsername")]);
    m_hana_db_username_isSet = !json[QString("hanaDbUsername")].isNull() && m_hana_db_username_isValid;

    m_hana_hostname_isValid = ::OpenAPI::fromJsonValue(m_hana_hostname, json[QString("hanaHostname")]);
    m_hana_hostname_isSet = !json[QString("hanaHostname")].isNull() && m_hana_hostname_isValid;

    m_hana_subnet_isValid = ::OpenAPI::fromJsonValue(m_hana_subnet, json[QString("hanaSubnet")]);
    m_hana_subnet_isSet = !json[QString("hanaSubnet")].isNull() && m_hana_subnet_isValid;
}

QString OAIMonitoringDetails::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMonitoringDetails::asJsonObject() const {
    QJsonObject obj;
    if (m_hana_db_name_isSet) {
        obj.insert(QString("hanaDbName"), ::OpenAPI::toJsonValue(m_hana_db_name));
    }
    if (m_hana_db_password_isSet) {
        obj.insert(QString("hanaDbPassword"), ::OpenAPI::toJsonValue(m_hana_db_password));
    }
    if (m_hana_db_sql_port_isSet) {
        obj.insert(QString("hanaDbSqlPort"), ::OpenAPI::toJsonValue(m_hana_db_sql_port));
    }
    if (m_hana_db_username_isSet) {
        obj.insert(QString("hanaDbUsername"), ::OpenAPI::toJsonValue(m_hana_db_username));
    }
    if (m_hana_hostname_isSet) {
        obj.insert(QString("hanaHostname"), ::OpenAPI::toJsonValue(m_hana_hostname));
    }
    if (m_hana_subnet_isSet) {
        obj.insert(QString("hanaSubnet"), ::OpenAPI::toJsonValue(m_hana_subnet));
    }
    return obj;
}

QString OAIMonitoringDetails::getHanaDbName() const {
    return m_hana_db_name;
}
void OAIMonitoringDetails::setHanaDbName(const QString &hana_db_name) {
    m_hana_db_name = hana_db_name;
    m_hana_db_name_isSet = true;
}

bool OAIMonitoringDetails::is_hana_db_name_Set() const{
    return m_hana_db_name_isSet;
}

bool OAIMonitoringDetails::is_hana_db_name_Valid() const{
    return m_hana_db_name_isValid;
}

QString OAIMonitoringDetails::getHanaDbPassword() const {
    return m_hana_db_password;
}
void OAIMonitoringDetails::setHanaDbPassword(const QString &hana_db_password) {
    m_hana_db_password = hana_db_password;
    m_hana_db_password_isSet = true;
}

bool OAIMonitoringDetails::is_hana_db_password_Set() const{
    return m_hana_db_password_isSet;
}

bool OAIMonitoringDetails::is_hana_db_password_Valid() const{
    return m_hana_db_password_isValid;
}

qint32 OAIMonitoringDetails::getHanaDbSqlPort() const {
    return m_hana_db_sql_port;
}
void OAIMonitoringDetails::setHanaDbSqlPort(const qint32 &hana_db_sql_port) {
    m_hana_db_sql_port = hana_db_sql_port;
    m_hana_db_sql_port_isSet = true;
}

bool OAIMonitoringDetails::is_hana_db_sql_port_Set() const{
    return m_hana_db_sql_port_isSet;
}

bool OAIMonitoringDetails::is_hana_db_sql_port_Valid() const{
    return m_hana_db_sql_port_isValid;
}

QString OAIMonitoringDetails::getHanaDbUsername() const {
    return m_hana_db_username;
}
void OAIMonitoringDetails::setHanaDbUsername(const QString &hana_db_username) {
    m_hana_db_username = hana_db_username;
    m_hana_db_username_isSet = true;
}

bool OAIMonitoringDetails::is_hana_db_username_Set() const{
    return m_hana_db_username_isSet;
}

bool OAIMonitoringDetails::is_hana_db_username_Valid() const{
    return m_hana_db_username_isValid;
}

QString OAIMonitoringDetails::getHanaHostname() const {
    return m_hana_hostname;
}
void OAIMonitoringDetails::setHanaHostname(const QString &hana_hostname) {
    m_hana_hostname = hana_hostname;
    m_hana_hostname_isSet = true;
}

bool OAIMonitoringDetails::is_hana_hostname_Set() const{
    return m_hana_hostname_isSet;
}

bool OAIMonitoringDetails::is_hana_hostname_Valid() const{
    return m_hana_hostname_isValid;
}

QString OAIMonitoringDetails::getHanaSubnet() const {
    return m_hana_subnet;
}
void OAIMonitoringDetails::setHanaSubnet(const QString &hana_subnet) {
    m_hana_subnet = hana_subnet;
    m_hana_subnet_isSet = true;
}

bool OAIMonitoringDetails::is_hana_subnet_Set() const{
    return m_hana_subnet_isSet;
}

bool OAIMonitoringDetails::is_hana_subnet_Valid() const{
    return m_hana_subnet_isValid;
}

bool OAIMonitoringDetails::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_hana_db_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_hana_db_password_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_hana_db_sql_port_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_hana_db_username_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_hana_hostname_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_hana_subnet_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMonitoringDetails::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
