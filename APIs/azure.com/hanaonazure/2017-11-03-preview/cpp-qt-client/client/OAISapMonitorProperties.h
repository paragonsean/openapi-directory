/**
 * HanaManagementClient
 * The SAP HANA on Azure Management Client.
 *
 * The version of the OpenAPI document: 2017-11-03-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISapMonitorProperties.h
 *
 * Describes the properties of a SAP monitor.
 */

#ifndef OAISapMonitorProperties_H
#define OAISapMonitorProperties_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISapMonitorProperties : public OAIObject {
public:
    OAISapMonitorProperties();
    OAISapMonitorProperties(QString json);
    ~OAISapMonitorProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isEnableCustomerAnalytics() const;
    void setEnableCustomerAnalytics(const bool &enable_customer_analytics);
    bool is_enable_customer_analytics_Set() const;
    bool is_enable_customer_analytics_Valid() const;

    QString getHanaDbCredentialsMsiId() const;
    void setHanaDbCredentialsMsiId(const QString &hana_db_credentials_msi_id);
    bool is_hana_db_credentials_msi_id_Set() const;
    bool is_hana_db_credentials_msi_id_Valid() const;

    QString getHanaDbName() const;
    void setHanaDbName(const QString &hana_db_name);
    bool is_hana_db_name_Set() const;
    bool is_hana_db_name_Valid() const;

    QString getHanaDbPassword() const;
    void setHanaDbPassword(const QString &hana_db_password);
    bool is_hana_db_password_Set() const;
    bool is_hana_db_password_Valid() const;

    QString getHanaDbPasswordKeyVaultUrl() const;
    void setHanaDbPasswordKeyVaultUrl(const QString &hana_db_password_key_vault_url);
    bool is_hana_db_password_key_vault_url_Set() const;
    bool is_hana_db_password_key_vault_url_Valid() const;

    qint32 getHanaDbSqlPort() const;
    void setHanaDbSqlPort(const qint32 &hana_db_sql_port);
    bool is_hana_db_sql_port_Set() const;
    bool is_hana_db_sql_port_Valid() const;

    QString getHanaDbUsername() const;
    void setHanaDbUsername(const QString &hana_db_username);
    bool is_hana_db_username_Set() const;
    bool is_hana_db_username_Valid() const;

    QString getHanaHostname() const;
    void setHanaHostname(const QString &hana_hostname);
    bool is_hana_hostname_Set() const;
    bool is_hana_hostname_Valid() const;

    QString getHanaSubnet() const;
    void setHanaSubnet(const QString &hana_subnet);
    bool is_hana_subnet_Set() const;
    bool is_hana_subnet_Valid() const;

    QString getKeyVaultId() const;
    void setKeyVaultId(const QString &key_vault_id);
    bool is_key_vault_id_Set() const;
    bool is_key_vault_id_Valid() const;

    QString getLogAnalyticsWorkspaceArmId() const;
    void setLogAnalyticsWorkspaceArmId(const QString &log_analytics_workspace_arm_id);
    bool is_log_analytics_workspace_arm_id_Set() const;
    bool is_log_analytics_workspace_arm_id_Valid() const;

    QString getLogAnalyticsWorkspaceId() const;
    void setLogAnalyticsWorkspaceId(const QString &log_analytics_workspace_id);
    bool is_log_analytics_workspace_id_Set() const;
    bool is_log_analytics_workspace_id_Valid() const;

    QString getLogAnalyticsWorkspaceSharedKey() const;
    void setLogAnalyticsWorkspaceSharedKey(const QString &log_analytics_workspace_shared_key);
    bool is_log_analytics_workspace_shared_key_Set() const;
    bool is_log_analytics_workspace_shared_key_Valid() const;

    QString getManagedResourceGroupName() const;
    void setManagedResourceGroupName(const QString &managed_resource_group_name);
    bool is_managed_resource_group_name_Set() const;
    bool is_managed_resource_group_name_Valid() const;

    QString getProvisioningState() const;
    void setProvisioningState(const QString &provisioning_state);
    bool is_provisioning_state_Set() const;
    bool is_provisioning_state_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_enable_customer_analytics;
    bool m_enable_customer_analytics_isSet;
    bool m_enable_customer_analytics_isValid;

    QString m_hana_db_credentials_msi_id;
    bool m_hana_db_credentials_msi_id_isSet;
    bool m_hana_db_credentials_msi_id_isValid;

    QString m_hana_db_name;
    bool m_hana_db_name_isSet;
    bool m_hana_db_name_isValid;

    QString m_hana_db_password;
    bool m_hana_db_password_isSet;
    bool m_hana_db_password_isValid;

    QString m_hana_db_password_key_vault_url;
    bool m_hana_db_password_key_vault_url_isSet;
    bool m_hana_db_password_key_vault_url_isValid;

    qint32 m_hana_db_sql_port;
    bool m_hana_db_sql_port_isSet;
    bool m_hana_db_sql_port_isValid;

    QString m_hana_db_username;
    bool m_hana_db_username_isSet;
    bool m_hana_db_username_isValid;

    QString m_hana_hostname;
    bool m_hana_hostname_isSet;
    bool m_hana_hostname_isValid;

    QString m_hana_subnet;
    bool m_hana_subnet_isSet;
    bool m_hana_subnet_isValid;

    QString m_key_vault_id;
    bool m_key_vault_id_isSet;
    bool m_key_vault_id_isValid;

    QString m_log_analytics_workspace_arm_id;
    bool m_log_analytics_workspace_arm_id_isSet;
    bool m_log_analytics_workspace_arm_id_isValid;

    QString m_log_analytics_workspace_id;
    bool m_log_analytics_workspace_id_isSet;
    bool m_log_analytics_workspace_id_isValid;

    QString m_log_analytics_workspace_shared_key;
    bool m_log_analytics_workspace_shared_key_isSet;
    bool m_log_analytics_workspace_shared_key_isValid;

    QString m_managed_resource_group_name;
    bool m_managed_resource_group_name_isSet;
    bool m_managed_resource_group_name_isValid;

    QString m_provisioning_state;
    bool m_provisioning_state_isSet;
    bool m_provisioning_state_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISapMonitorProperties)

#endif // OAISapMonitorProperties_H
