/**
 * HanaManagementClient
 * The SAP HANA on Azure Management Client.
 *
 * The version of the OpenAPI document: 2017-11-03-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Disk from './Disk';

/**
 * The StorageProfile model module.
 * @module model/StorageProfile
 * @version 2017-11-03-preview
 */
class StorageProfile {
    /**
     * Constructs a new <code>StorageProfile</code>.
     * Specifies the storage settings for the HANA instance disks.
     * @alias module:model/StorageProfile
     */
    constructor() { 
        
        StorageProfile.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>StorageProfile</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/StorageProfile} obj Optional instance to populate.
     * @return {module:model/StorageProfile} The populated <code>StorageProfile</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StorageProfile();

            if (data.hasOwnProperty('nfsIpAddress')) {
                obj['nfsIpAddress'] = ApiClient.convertToType(data['nfsIpAddress'], 'String');
            }
            if (data.hasOwnProperty('osDisks')) {
                obj['osDisks'] = ApiClient.convertToType(data['osDisks'], [Disk]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>StorageProfile</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>StorageProfile</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['nfsIpAddress'] && !(typeof data['nfsIpAddress'] === 'string' || data['nfsIpAddress'] instanceof String)) {
            throw new Error("Expected the field `nfsIpAddress` to be a primitive type in the JSON string but got " + data['nfsIpAddress']);
        }
        if (data['osDisks']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['osDisks'])) {
                throw new Error("Expected the field `osDisks` to be an array in the JSON data but got " + data['osDisks']);
            }
            // validate the optional field `osDisks` (array)
            for (const item of data['osDisks']) {
                Disk.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * IP Address to connect to storage.
 * @member {String} nfsIpAddress
 */
StorageProfile.prototype['nfsIpAddress'] = undefined;

/**
 * Specifies information about the operating system disk used by the hana instance.
 * @member {Array.<module:model/Disk>} osDisks
 */
StorageProfile.prototype['osDisks'] = undefined;






export default StorageProfile;

