/**
 * HanaManagementClient
 * The SAP HANA on Azure Management Client.
 *
 * The version of the OpenAPI document: 2017-11-03-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The MonitoringDetails model module.
 * @module model/MonitoringDetails
 * @version 2017-11-03-preview
 */
class MonitoringDetails {
    /**
     * Constructs a new <code>MonitoringDetails</code>.
     * Details needed to monitor a Hana Instance
     * @alias module:model/MonitoringDetails
     */
    constructor() { 
        
        MonitoringDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MonitoringDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MonitoringDetails} obj Optional instance to populate.
     * @return {module:model/MonitoringDetails} The populated <code>MonitoringDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MonitoringDetails();

            if (data.hasOwnProperty('hanaDbName')) {
                obj['hanaDbName'] = ApiClient.convertToType(data['hanaDbName'], 'String');
            }
            if (data.hasOwnProperty('hanaDbPassword')) {
                obj['hanaDbPassword'] = ApiClient.convertToType(data['hanaDbPassword'], 'String');
            }
            if (data.hasOwnProperty('hanaDbSqlPort')) {
                obj['hanaDbSqlPort'] = ApiClient.convertToType(data['hanaDbSqlPort'], 'Number');
            }
            if (data.hasOwnProperty('hanaDbUsername')) {
                obj['hanaDbUsername'] = ApiClient.convertToType(data['hanaDbUsername'], 'String');
            }
            if (data.hasOwnProperty('hanaHostname')) {
                obj['hanaHostname'] = ApiClient.convertToType(data['hanaHostname'], 'String');
            }
            if (data.hasOwnProperty('hanaSubnet')) {
                obj['hanaSubnet'] = ApiClient.convertToType(data['hanaSubnet'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MonitoringDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MonitoringDetails</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['hanaDbName'] && !(typeof data['hanaDbName'] === 'string' || data['hanaDbName'] instanceof String)) {
            throw new Error("Expected the field `hanaDbName` to be a primitive type in the JSON string but got " + data['hanaDbName']);
        }
        // ensure the json data is a string
        if (data['hanaDbPassword'] && !(typeof data['hanaDbPassword'] === 'string' || data['hanaDbPassword'] instanceof String)) {
            throw new Error("Expected the field `hanaDbPassword` to be a primitive type in the JSON string but got " + data['hanaDbPassword']);
        }
        // ensure the json data is a string
        if (data['hanaDbUsername'] && !(typeof data['hanaDbUsername'] === 'string' || data['hanaDbUsername'] instanceof String)) {
            throw new Error("Expected the field `hanaDbUsername` to be a primitive type in the JSON string but got " + data['hanaDbUsername']);
        }
        // ensure the json data is a string
        if (data['hanaHostname'] && !(typeof data['hanaHostname'] === 'string' || data['hanaHostname'] instanceof String)) {
            throw new Error("Expected the field `hanaHostname` to be a primitive type in the JSON string but got " + data['hanaHostname']);
        }
        // ensure the json data is a string
        if (data['hanaSubnet'] && !(typeof data['hanaSubnet'] === 'string' || data['hanaSubnet'] instanceof String)) {
            throw new Error("Expected the field `hanaSubnet` to be a primitive type in the JSON string but got " + data['hanaSubnet']);
        }

        return true;
    }


}



/**
 * Name of the database itself.
 * @member {String} hanaDbName
 */
MonitoringDetails.prototype['hanaDbName'] = undefined;

/**
 * Password for the HANA database to login for monitoring
 * @member {String} hanaDbPassword
 */
MonitoringDetails.prototype['hanaDbPassword'] = undefined;

/**
 * The port number of the tenant DB. Used to connect to the DB.
 * @member {Number} hanaDbSqlPort
 */
MonitoringDetails.prototype['hanaDbSqlPort'] = undefined;

/**
 * Username for the HANA database to login to for monitoring
 * @member {String} hanaDbUsername
 */
MonitoringDetails.prototype['hanaDbUsername'] = undefined;

/**
 * Hostname of the HANA Instance blade.
 * @member {String} hanaHostname
 */
MonitoringDetails.prototype['hanaHostname'] = undefined;

/**
 * ARM ID of an Azure Subnet with access to the HANA instance.
 * @member {String} hanaSubnet
 */
MonitoringDetails.prototype['hanaSubnet'] = undefined;






export default MonitoringDetails;

