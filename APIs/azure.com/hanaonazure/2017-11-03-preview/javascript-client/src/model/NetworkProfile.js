/**
 * HanaManagementClient
 * The SAP HANA on Azure Management Client.
 *
 * The version of the OpenAPI document: 2017-11-03-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import IpAddress from './IpAddress';

/**
 * The NetworkProfile model module.
 * @module model/NetworkProfile
 * @version 2017-11-03-preview
 */
class NetworkProfile {
    /**
     * Constructs a new <code>NetworkProfile</code>.
     * Specifies the network settings for the HANA instance disks.
     * @alias module:model/NetworkProfile
     */
    constructor() { 
        
        NetworkProfile.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>NetworkProfile</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NetworkProfile} obj Optional instance to populate.
     * @return {module:model/NetworkProfile} The populated <code>NetworkProfile</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NetworkProfile();

            if (data.hasOwnProperty('circuitId')) {
                obj['circuitId'] = ApiClient.convertToType(data['circuitId'], 'String');
            }
            if (data.hasOwnProperty('networkInterfaces')) {
                obj['networkInterfaces'] = ApiClient.convertToType(data['networkInterfaces'], [IpAddress]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>NetworkProfile</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>NetworkProfile</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['circuitId'] && !(typeof data['circuitId'] === 'string' || data['circuitId'] instanceof String)) {
            throw new Error("Expected the field `circuitId` to be a primitive type in the JSON string but got " + data['circuitId']);
        }
        if (data['networkInterfaces']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['networkInterfaces'])) {
                throw new Error("Expected the field `networkInterfaces` to be an array in the JSON data but got " + data['networkInterfaces']);
            }
            // validate the optional field `networkInterfaces` (array)
            for (const item of data['networkInterfaces']) {
                IpAddress.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Specifies the circuit id for connecting to express route.
 * @member {String} circuitId
 */
NetworkProfile.prototype['circuitId'] = undefined;

/**
 * Specifies the network interfaces for the HANA instance.
 * @member {Array.<module:model/IpAddress>} networkInterfaces
 */
NetworkProfile.prototype['networkInterfaces'] = undefined;






export default NetworkProfile;

