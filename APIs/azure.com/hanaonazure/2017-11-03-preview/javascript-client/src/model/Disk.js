/**
 * HanaManagementClient
 * The SAP HANA on Azure Management Client.
 *
 * The version of the OpenAPI document: 2017-11-03-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Disk model module.
 * @module model/Disk
 * @version 2017-11-03-preview
 */
class Disk {
    /**
     * Constructs a new <code>Disk</code>.
     * Specifies the disk information fo the HANA instance
     * @alias module:model/Disk
     */
    constructor() { 
        
        Disk.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Disk</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Disk} obj Optional instance to populate.
     * @return {module:model/Disk} The populated <code>Disk</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Disk();

            if (data.hasOwnProperty('diskSizeGB')) {
                obj['diskSizeGB'] = ApiClient.convertToType(data['diskSizeGB'], 'Number');
            }
            if (data.hasOwnProperty('lun')) {
                obj['lun'] = ApiClient.convertToType(data['lun'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Disk</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Disk</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}



/**
 * Specifies the size of an empty data disk in gigabytes.
 * @member {Number} diskSizeGB
 */
Disk.prototype['diskSizeGB'] = undefined;

/**
 * Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM.
 * @member {Number} lun
 */
Disk.prototype['lun'] = undefined;

/**
 * The disk name.
 * @member {String} name
 */
Disk.prototype['name'] = undefined;






export default Disk;

