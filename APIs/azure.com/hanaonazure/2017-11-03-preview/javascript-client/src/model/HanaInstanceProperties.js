/**
 * HanaManagementClient
 * The SAP HANA on Azure Management Client.
 *
 * The version of the OpenAPI document: 2017-11-03-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import HardwareProfile from './HardwareProfile';
import NetworkProfile from './NetworkProfile';
import OSProfile from './OSProfile';
import StorageProfile from './StorageProfile';

/**
 * The HanaInstanceProperties model module.
 * @module model/HanaInstanceProperties
 * @version 2017-11-03-preview
 */
class HanaInstanceProperties {
    /**
     * Constructs a new <code>HanaInstanceProperties</code>.
     * Describes the properties of a HANA instance.
     * @alias module:model/HanaInstanceProperties
     */
    constructor() { 
        
        HanaInstanceProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>HanaInstanceProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/HanaInstanceProperties} obj Optional instance to populate.
     * @return {module:model/HanaInstanceProperties} The populated <code>HanaInstanceProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new HanaInstanceProperties();

            if (data.hasOwnProperty('hanaInstanceId')) {
                obj['hanaInstanceId'] = ApiClient.convertToType(data['hanaInstanceId'], 'String');
            }
            if (data.hasOwnProperty('hardwareProfile')) {
                obj['hardwareProfile'] = HardwareProfile.constructFromObject(data['hardwareProfile']);
            }
            if (data.hasOwnProperty('hwRevision')) {
                obj['hwRevision'] = ApiClient.convertToType(data['hwRevision'], 'String');
            }
            if (data.hasOwnProperty('networkProfile')) {
                obj['networkProfile'] = NetworkProfile.constructFromObject(data['networkProfile']);
            }
            if (data.hasOwnProperty('osProfile')) {
                obj['osProfile'] = OSProfile.constructFromObject(data['osProfile']);
            }
            if (data.hasOwnProperty('partnerNodeId')) {
                obj['partnerNodeId'] = ApiClient.convertToType(data['partnerNodeId'], 'String');
            }
            if (data.hasOwnProperty('powerState')) {
                obj['powerState'] = ApiClient.convertToType(data['powerState'], 'String');
            }
            if (data.hasOwnProperty('provisioningState')) {
                obj['provisioningState'] = ApiClient.convertToType(data['provisioningState'], 'String');
            }
            if (data.hasOwnProperty('proximityPlacementGroup')) {
                obj['proximityPlacementGroup'] = ApiClient.convertToType(data['proximityPlacementGroup'], 'String');
            }
            if (data.hasOwnProperty('storageProfile')) {
                obj['storageProfile'] = StorageProfile.constructFromObject(data['storageProfile']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>HanaInstanceProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>HanaInstanceProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['hanaInstanceId'] && !(typeof data['hanaInstanceId'] === 'string' || data['hanaInstanceId'] instanceof String)) {
            throw new Error("Expected the field `hanaInstanceId` to be a primitive type in the JSON string but got " + data['hanaInstanceId']);
        }
        // validate the optional field `hardwareProfile`
        if (data['hardwareProfile']) { // data not null
          HardwareProfile.validateJSON(data['hardwareProfile']);
        }
        // ensure the json data is a string
        if (data['hwRevision'] && !(typeof data['hwRevision'] === 'string' || data['hwRevision'] instanceof String)) {
            throw new Error("Expected the field `hwRevision` to be a primitive type in the JSON string but got " + data['hwRevision']);
        }
        // validate the optional field `networkProfile`
        if (data['networkProfile']) { // data not null
          NetworkProfile.validateJSON(data['networkProfile']);
        }
        // validate the optional field `osProfile`
        if (data['osProfile']) { // data not null
          OSProfile.validateJSON(data['osProfile']);
        }
        // ensure the json data is a string
        if (data['partnerNodeId'] && !(typeof data['partnerNodeId'] === 'string' || data['partnerNodeId'] instanceof String)) {
            throw new Error("Expected the field `partnerNodeId` to be a primitive type in the JSON string but got " + data['partnerNodeId']);
        }
        // ensure the json data is a string
        if (data['powerState'] && !(typeof data['powerState'] === 'string' || data['powerState'] instanceof String)) {
            throw new Error("Expected the field `powerState` to be a primitive type in the JSON string but got " + data['powerState']);
        }
        // ensure the json data is a string
        if (data['provisioningState'] && !(typeof data['provisioningState'] === 'string' || data['provisioningState'] instanceof String)) {
            throw new Error("Expected the field `provisioningState` to be a primitive type in the JSON string but got " + data['provisioningState']);
        }
        // ensure the json data is a string
        if (data['proximityPlacementGroup'] && !(typeof data['proximityPlacementGroup'] === 'string' || data['proximityPlacementGroup'] instanceof String)) {
            throw new Error("Expected the field `proximityPlacementGroup` to be a primitive type in the JSON string but got " + data['proximityPlacementGroup']);
        }
        // validate the optional field `storageProfile`
        if (data['storageProfile']) { // data not null
          StorageProfile.validateJSON(data['storageProfile']);
        }

        return true;
    }


}



/**
 * Specifies the HANA instance unique ID.
 * @member {String} hanaInstanceId
 */
HanaInstanceProperties.prototype['hanaInstanceId'] = undefined;

/**
 * @member {module:model/HardwareProfile} hardwareProfile
 */
HanaInstanceProperties.prototype['hardwareProfile'] = undefined;

/**
 * Hardware revision of a HANA instance
 * @member {String} hwRevision
 */
HanaInstanceProperties.prototype['hwRevision'] = undefined;

/**
 * @member {module:model/NetworkProfile} networkProfile
 */
HanaInstanceProperties.prototype['networkProfile'] = undefined;

/**
 * @member {module:model/OSProfile} osProfile
 */
HanaInstanceProperties.prototype['osProfile'] = undefined;

/**
 * ARM ID of another HanaInstance that will share a network with this HanaInstance
 * @member {String} partnerNodeId
 */
HanaInstanceProperties.prototype['partnerNodeId'] = undefined;

/**
 * Resource power state
 * @member {module:model/HanaInstanceProperties.PowerStateEnum} powerState
 */
HanaInstanceProperties.prototype['powerState'] = undefined;

/**
 * State of provisioning of the HanaInstance
 * @member {module:model/HanaInstanceProperties.ProvisioningStateEnum} provisioningState
 */
HanaInstanceProperties.prototype['provisioningState'] = undefined;

/**
 * Resource proximity placement group
 * @member {String} proximityPlacementGroup
 */
HanaInstanceProperties.prototype['proximityPlacementGroup'] = undefined;

/**
 * @member {module:model/StorageProfile} storageProfile
 */
HanaInstanceProperties.prototype['storageProfile'] = undefined;





/**
 * Allowed values for the <code>powerState</code> property.
 * @enum {String}
 * @readonly
 */
HanaInstanceProperties['PowerStateEnum'] = {

    /**
     * value: "starting"
     * @const
     */
    "starting": "starting",

    /**
     * value: "started"
     * @const
     */
    "started": "started",

    /**
     * value: "stopping"
     * @const
     */
    "stopping": "stopping",

    /**
     * value: "stopped"
     * @const
     */
    "stopped": "stopped",

    /**
     * value: "restarting"
     * @const
     */
    "restarting": "restarting",

    /**
     * value: "unknown"
     * @const
     */
    "unknown": "unknown"
};


/**
 * Allowed values for the <code>provisioningState</code> property.
 * @enum {String}
 * @readonly
 */
HanaInstanceProperties['ProvisioningStateEnum'] = {

    /**
     * value: "Accepted"
     * @const
     */
    "Accepted": "Accepted",

    /**
     * value: "Creating"
     * @const
     */
    "Creating": "Creating",

    /**
     * value: "Updating"
     * @const
     */
    "Updating": "Updating",

    /**
     * value: "Failed"
     * @const
     */
    "Failed": "Failed",

    /**
     * value: "Succeeded"
     * @const
     */
    "Succeeded": "Succeeded",

    /**
     * value: "Deleting"
     * @const
     */
    "Deleting": "Deleting",

    /**
     * value: "Migrating"
     * @const
     */
    "Migrating": "Migrating"
};



export default HanaInstanceProperties;

