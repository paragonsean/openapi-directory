/**
 * HanaManagementClient
 * The SAP HANA on Azure Management Client.
 *
 * The version of the OpenAPI document: 2017-11-03-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.HanaManagementClient);
  }
}(this, function(expect, HanaManagementClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new HanaManagementClient.HanaOnAzureApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('HanaOnAzureApi', function() {
    describe('hanaInstancesCreate', function() {
      it('should call hanaInstancesCreate successfully', function(done) {
        //uncomment below and update the code to test hanaInstancesCreate
        //instance.hanaInstancesCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('hanaInstancesDelete', function() {
      it('should call hanaInstancesDelete successfully', function(done) {
        //uncomment below and update the code to test hanaInstancesDelete
        //instance.hanaInstancesDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('hanaInstancesGet', function() {
      it('should call hanaInstancesGet successfully', function(done) {
        //uncomment below and update the code to test hanaInstancesGet
        //instance.hanaInstancesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('hanaInstancesList', function() {
      it('should call hanaInstancesList successfully', function(done) {
        //uncomment below and update the code to test hanaInstancesList
        //instance.hanaInstancesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('hanaInstancesListByResourceGroup', function() {
      it('should call hanaInstancesListByResourceGroup successfully', function(done) {
        //uncomment below and update the code to test hanaInstancesListByResourceGroup
        //instance.hanaInstancesListByResourceGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('hanaInstancesRestart', function() {
      it('should call hanaInstancesRestart successfully', function(done) {
        //uncomment below and update the code to test hanaInstancesRestart
        //instance.hanaInstancesRestart(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('hanaInstancesShutdown', function() {
      it('should call hanaInstancesShutdown successfully', function(done) {
        //uncomment below and update the code to test hanaInstancesShutdown
        //instance.hanaInstancesShutdown(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('hanaInstancesStart', function() {
      it('should call hanaInstancesStart successfully', function(done) {
        //uncomment below and update the code to test hanaInstancesStart
        //instance.hanaInstancesStart(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('hanaInstancesUpdate', function() {
      it('should call hanaInstancesUpdate successfully', function(done) {
        //uncomment below and update the code to test hanaInstancesUpdate
        //instance.hanaInstancesUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('operationsList', function() {
      it('should call operationsList successfully', function(done) {
        //uncomment below and update the code to test operationsList
        //instance.operationsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sapMonitorsCreate', function() {
      it('should call sapMonitorsCreate successfully', function(done) {
        //uncomment below and update the code to test sapMonitorsCreate
        //instance.sapMonitorsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sapMonitorsDelete', function() {
      it('should call sapMonitorsDelete successfully', function(done) {
        //uncomment below and update the code to test sapMonitorsDelete
        //instance.sapMonitorsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sapMonitorsGet', function() {
      it('should call sapMonitorsGet successfully', function(done) {
        //uncomment below and update the code to test sapMonitorsGet
        //instance.sapMonitorsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sapMonitorsList', function() {
      it('should call sapMonitorsList successfully', function(done) {
        //uncomment below and update the code to test sapMonitorsList
        //instance.sapMonitorsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sapMonitorsUpdate', function() {
      it('should call sapMonitorsUpdate successfully', function(done) {
        //uncomment below and update the code to test sapMonitorsUpdate
        //instance.sapMonitorsUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
