# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MonitoringDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, hana_db_name: str=None, hana_db_password: str=None, hana_db_sql_port: int=None, hana_db_username: str=None, hana_hostname: str=None, hana_subnet: str=None):
        """MonitoringDetails - a model defined in OpenAPI

        :param hana_db_name: The hana_db_name of this MonitoringDetails.
        :param hana_db_password: The hana_db_password of this MonitoringDetails.
        :param hana_db_sql_port: The hana_db_sql_port of this MonitoringDetails.
        :param hana_db_username: The hana_db_username of this MonitoringDetails.
        :param hana_hostname: The hana_hostname of this MonitoringDetails.
        :param hana_subnet: The hana_subnet of this MonitoringDetails.
        """
        self.openapi_types = {
            'hana_db_name': str,
            'hana_db_password': str,
            'hana_db_sql_port': int,
            'hana_db_username': str,
            'hana_hostname': str,
            'hana_subnet': str
        }

        self.attribute_map = {
            'hana_db_name': 'hanaDbName',
            'hana_db_password': 'hanaDbPassword',
            'hana_db_sql_port': 'hanaDbSqlPort',
            'hana_db_username': 'hanaDbUsername',
            'hana_hostname': 'hanaHostname',
            'hana_subnet': 'hanaSubnet'
        }

        self._hana_db_name = hana_db_name
        self._hana_db_password = hana_db_password
        self._hana_db_sql_port = hana_db_sql_port
        self._hana_db_username = hana_db_username
        self._hana_hostname = hana_hostname
        self._hana_subnet = hana_subnet

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MonitoringDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MonitoringDetails of this MonitoringDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def hana_db_name(self):
        """Gets the hana_db_name of this MonitoringDetails.

        Name of the database itself.

        :return: The hana_db_name of this MonitoringDetails.
        :rtype: str
        """
        return self._hana_db_name

    @hana_db_name.setter
    def hana_db_name(self, hana_db_name):
        """Sets the hana_db_name of this MonitoringDetails.

        Name of the database itself.

        :param hana_db_name: The hana_db_name of this MonitoringDetails.
        :type hana_db_name: str
        """

        self._hana_db_name = hana_db_name

    @property
    def hana_db_password(self):
        """Gets the hana_db_password of this MonitoringDetails.

        Password for the HANA database to login for monitoring

        :return: The hana_db_password of this MonitoringDetails.
        :rtype: str
        """
        return self._hana_db_password

    @hana_db_password.setter
    def hana_db_password(self, hana_db_password):
        """Sets the hana_db_password of this MonitoringDetails.

        Password for the HANA database to login for monitoring

        :param hana_db_password: The hana_db_password of this MonitoringDetails.
        :type hana_db_password: str
        """

        self._hana_db_password = hana_db_password

    @property
    def hana_db_sql_port(self):
        """Gets the hana_db_sql_port of this MonitoringDetails.

        The port number of the tenant DB. Used to connect to the DB.

        :return: The hana_db_sql_port of this MonitoringDetails.
        :rtype: int
        """
        return self._hana_db_sql_port

    @hana_db_sql_port.setter
    def hana_db_sql_port(self, hana_db_sql_port):
        """Sets the hana_db_sql_port of this MonitoringDetails.

        The port number of the tenant DB. Used to connect to the DB.

        :param hana_db_sql_port: The hana_db_sql_port of this MonitoringDetails.
        :type hana_db_sql_port: int
        """

        self._hana_db_sql_port = hana_db_sql_port

    @property
    def hana_db_username(self):
        """Gets the hana_db_username of this MonitoringDetails.

        Username for the HANA database to login to for monitoring

        :return: The hana_db_username of this MonitoringDetails.
        :rtype: str
        """
        return self._hana_db_username

    @hana_db_username.setter
    def hana_db_username(self, hana_db_username):
        """Sets the hana_db_username of this MonitoringDetails.

        Username for the HANA database to login to for monitoring

        :param hana_db_username: The hana_db_username of this MonitoringDetails.
        :type hana_db_username: str
        """

        self._hana_db_username = hana_db_username

    @property
    def hana_hostname(self):
        """Gets the hana_hostname of this MonitoringDetails.

        Hostname of the HANA Instance blade.

        :return: The hana_hostname of this MonitoringDetails.
        :rtype: str
        """
        return self._hana_hostname

    @hana_hostname.setter
    def hana_hostname(self, hana_hostname):
        """Sets the hana_hostname of this MonitoringDetails.

        Hostname of the HANA Instance blade.

        :param hana_hostname: The hana_hostname of this MonitoringDetails.
        :type hana_hostname: str
        """

        self._hana_hostname = hana_hostname

    @property
    def hana_subnet(self):
        """Gets the hana_subnet of this MonitoringDetails.

        ARM ID of an Azure Subnet with access to the HANA instance.

        :return: The hana_subnet of this MonitoringDetails.
        :rtype: str
        """
        return self._hana_subnet

    @hana_subnet.setter
    def hana_subnet(self, hana_subnet):
        """Sets the hana_subnet of this MonitoringDetails.

        ARM ID of an Azure Subnet with access to the HANA instance.

        :param hana_subnet: The hana_subnet of this MonitoringDetails.
        :type hana_subnet: str
        """

        self._hana_subnet = hana_subnet
