# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Disk(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, disk_size_gb: int=None, lun: int=None, name: str=None):
        """Disk - a model defined in OpenAPI

        :param disk_size_gb: The disk_size_gb of this Disk.
        :param lun: The lun of this Disk.
        :param name: The name of this Disk.
        """
        self.openapi_types = {
            'disk_size_gb': int,
            'lun': int,
            'name': str
        }

        self.attribute_map = {
            'disk_size_gb': 'diskSizeGB',
            'lun': 'lun',
            'name': 'name'
        }

        self._disk_size_gb = disk_size_gb
        self._lun = lun
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Disk':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Disk of this Disk.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def disk_size_gb(self):
        """Gets the disk_size_gb of this Disk.

        Specifies the size of an empty data disk in gigabytes.

        :return: The disk_size_gb of this Disk.
        :rtype: int
        """
        return self._disk_size_gb

    @disk_size_gb.setter
    def disk_size_gb(self, disk_size_gb):
        """Sets the disk_size_gb of this Disk.

        Specifies the size of an empty data disk in gigabytes.

        :param disk_size_gb: The disk_size_gb of this Disk.
        :type disk_size_gb: int
        """

        self._disk_size_gb = disk_size_gb

    @property
    def lun(self):
        """Gets the lun of this Disk.

        Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM.

        :return: The lun of this Disk.
        :rtype: int
        """
        return self._lun

    @lun.setter
    def lun(self, lun):
        """Sets the lun of this Disk.

        Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM.

        :param lun: The lun of this Disk.
        :type lun: int
        """

        self._lun = lun

    @property
    def name(self):
        """Gets the name of this Disk.

        The disk name.

        :return: The name of this Disk.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Disk.

        The disk name.

        :param name: The name of this Disk.
        :type name: str
        """

        self._name = name
