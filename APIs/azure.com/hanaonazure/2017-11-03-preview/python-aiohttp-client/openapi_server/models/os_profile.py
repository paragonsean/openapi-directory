# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class OSProfile(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, computer_name: str=None, os_type: str=None, ssh_public_key: str=None, version: str=None):
        """OSProfile - a model defined in OpenAPI

        :param computer_name: The computer_name of this OSProfile.
        :param os_type: The os_type of this OSProfile.
        :param ssh_public_key: The ssh_public_key of this OSProfile.
        :param version: The version of this OSProfile.
        """
        self.openapi_types = {
            'computer_name': str,
            'os_type': str,
            'ssh_public_key': str,
            'version': str
        }

        self.attribute_map = {
            'computer_name': 'computerName',
            'os_type': 'osType',
            'ssh_public_key': 'sshPublicKey',
            'version': 'version'
        }

        self._computer_name = computer_name
        self._os_type = os_type
        self._ssh_public_key = ssh_public_key
        self._version = version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OSProfile':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OSProfile of this OSProfile.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def computer_name(self):
        """Gets the computer_name of this OSProfile.

        Specifies the host OS name of the HANA instance.

        :return: The computer_name of this OSProfile.
        :rtype: str
        """
        return self._computer_name

    @computer_name.setter
    def computer_name(self, computer_name):
        """Sets the computer_name of this OSProfile.

        Specifies the host OS name of the HANA instance.

        :param computer_name: The computer_name of this OSProfile.
        :type computer_name: str
        """

        self._computer_name = computer_name

    @property
    def os_type(self):
        """Gets the os_type of this OSProfile.

        This property allows you to specify the type of the OS.

        :return: The os_type of this OSProfile.
        :rtype: str
        """
        return self._os_type

    @os_type.setter
    def os_type(self, os_type):
        """Sets the os_type of this OSProfile.

        This property allows you to specify the type of the OS.

        :param os_type: The os_type of this OSProfile.
        :type os_type: str
        """

        self._os_type = os_type

    @property
    def ssh_public_key(self):
        """Gets the ssh_public_key of this OSProfile.

        Specifies the SSH public key used to access the operating system.

        :return: The ssh_public_key of this OSProfile.
        :rtype: str
        """
        return self._ssh_public_key

    @ssh_public_key.setter
    def ssh_public_key(self, ssh_public_key):
        """Sets the ssh_public_key of this OSProfile.

        Specifies the SSH public key used to access the operating system.

        :param ssh_public_key: The ssh_public_key of this OSProfile.
        :type ssh_public_key: str
        """

        self._ssh_public_key = ssh_public_key

    @property
    def version(self):
        """Gets the version of this OSProfile.

        Specifies version of operating system.

        :return: The version of this OSProfile.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this OSProfile.

        Specifies version of operating system.

        :param version: The version of this OSProfile.
        :type version: str
        """

        self._version = version
