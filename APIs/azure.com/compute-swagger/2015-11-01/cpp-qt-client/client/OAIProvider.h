/**
 * ComputeManagementConvenienceClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2015-11-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIProvider.h
 *
 * Resource provider information.
 */

#ifndef OAIProvider_H
#define OAIProvider_H

#include <QJsonObject>

#include "OAIProviderResourceType.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIProviderResourceType;

class OAIProvider : public OAIObject {
public:
    OAIProvider();
    OAIProvider(QString json);
    ~OAIProvider() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getRNamespace() const;
    void setRNamespace(const QString &r_namespace);
    bool is_r_namespace_Set() const;
    bool is_r_namespace_Valid() const;

    QString getRegistrationState() const;
    void setRegistrationState(const QString &registration_state);
    bool is_registration_state_Set() const;
    bool is_registration_state_Valid() const;

    QList<OAIProviderResourceType> getResourceTypes() const;
    void setResourceTypes(const QList<OAIProviderResourceType> &resource_types);
    bool is_resource_types_Set() const;
    bool is_resource_types_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_r_namespace;
    bool m_r_namespace_isSet;
    bool m_r_namespace_isValid;

    QString m_registration_state;
    bool m_registration_state_isSet;
    bool m_registration_state_isValid;

    QList<OAIProviderResourceType> m_resource_types;
    bool m_resource_types_isSet;
    bool m_resource_types_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIProvider)

#endif // OAIProvider_H
