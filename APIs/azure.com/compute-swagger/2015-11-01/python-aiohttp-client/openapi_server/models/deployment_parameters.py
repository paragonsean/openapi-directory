# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.deployment_parameters_admin_password import DeploymentParametersAdminPassword
from openapi_server.models.deployment_parameters_admin_username import DeploymentParametersAdminUsername
from openapi_server.models.deployment_parameters_dns_label_prefix import DeploymentParametersDnsLabelPrefix
from openapi_server.models.deployment_parameters_os_version import DeploymentParametersOsVersion
from openapi_server import util


class DeploymentParameters(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, admin_password: DeploymentParametersAdminPassword=None, admin_username: DeploymentParametersAdminUsername=None, dns_label_prefix: DeploymentParametersDnsLabelPrefix=None, os_version: DeploymentParametersOsVersion=None):
        """DeploymentParameters - a model defined in OpenAPI

        :param admin_password: The admin_password of this DeploymentParameters.
        :param admin_username: The admin_username of this DeploymentParameters.
        :param dns_label_prefix: The dns_label_prefix of this DeploymentParameters.
        :param os_version: The os_version of this DeploymentParameters.
        """
        self.openapi_types = {
            'admin_password': DeploymentParametersAdminPassword,
            'admin_username': DeploymentParametersAdminUsername,
            'dns_label_prefix': DeploymentParametersDnsLabelPrefix,
            'os_version': DeploymentParametersOsVersion
        }

        self.attribute_map = {
            'admin_password': 'adminPassword',
            'admin_username': 'adminUsername',
            'dns_label_prefix': 'dnsLabelPrefix',
            'os_version': 'osVersion'
        }

        self._admin_password = admin_password
        self._admin_username = admin_username
        self._dns_label_prefix = dns_label_prefix
        self._os_version = os_version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeploymentParameters':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeploymentParameters of this DeploymentParameters.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def admin_password(self):
        """Gets the admin_password of this DeploymentParameters.


        :return: The admin_password of this DeploymentParameters.
        :rtype: DeploymentParametersAdminPassword
        """
        return self._admin_password

    @admin_password.setter
    def admin_password(self, admin_password):
        """Sets the admin_password of this DeploymentParameters.


        :param admin_password: The admin_password of this DeploymentParameters.
        :type admin_password: DeploymentParametersAdminPassword
        """

        self._admin_password = admin_password

    @property
    def admin_username(self):
        """Gets the admin_username of this DeploymentParameters.


        :return: The admin_username of this DeploymentParameters.
        :rtype: DeploymentParametersAdminUsername
        """
        return self._admin_username

    @admin_username.setter
    def admin_username(self, admin_username):
        """Sets the admin_username of this DeploymentParameters.


        :param admin_username: The admin_username of this DeploymentParameters.
        :type admin_username: DeploymentParametersAdminUsername
        """

        self._admin_username = admin_username

    @property
    def dns_label_prefix(self):
        """Gets the dns_label_prefix of this DeploymentParameters.


        :return: The dns_label_prefix of this DeploymentParameters.
        :rtype: DeploymentParametersDnsLabelPrefix
        """
        return self._dns_label_prefix

    @dns_label_prefix.setter
    def dns_label_prefix(self, dns_label_prefix):
        """Sets the dns_label_prefix of this DeploymentParameters.


        :param dns_label_prefix: The dns_label_prefix of this DeploymentParameters.
        :type dns_label_prefix: DeploymentParametersDnsLabelPrefix
        """

        self._dns_label_prefix = dns_label_prefix

    @property
    def os_version(self):
        """Gets the os_version of this DeploymentParameters.


        :return: The os_version of this DeploymentParameters.
        :rtype: DeploymentParametersOsVersion
        """
        return self._os_version

    @os_version.setter
    def os_version(self, os_version):
        """Sets the os_version of this DeploymentParameters.


        :param os_version: The os_version of this DeploymentParameters.
        :type os_version: DeploymentParametersOsVersion
        """

        self._os_version = os_version
