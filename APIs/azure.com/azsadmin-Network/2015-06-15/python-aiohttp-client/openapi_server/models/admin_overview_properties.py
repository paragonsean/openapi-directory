# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.admin_overview_resource_health import AdminOverviewResourceHealth
from openapi_server.models.admin_overview_resource_usage import AdminOverviewResourceUsage
from openapi_server import util


class AdminOverviewProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, backend_ip_usage: AdminOverviewResourceUsage=None, load_balancer_mux_health: AdminOverviewResourceHealth=None, mac_address_usage: AdminOverviewResourceUsage=None, provisioning_state: str=None, public_ip_address_usage: AdminOverviewResourceUsage=None, virtual_gateway_health: AdminOverviewResourceHealth=None, virtual_network_health: AdminOverviewResourceHealth=None):
        """AdminOverviewProperties - a model defined in OpenAPI

        :param backend_ip_usage: The backend_ip_usage of this AdminOverviewProperties.
        :param load_balancer_mux_health: The load_balancer_mux_health of this AdminOverviewProperties.
        :param mac_address_usage: The mac_address_usage of this AdminOverviewProperties.
        :param provisioning_state: The provisioning_state of this AdminOverviewProperties.
        :param public_ip_address_usage: The public_ip_address_usage of this AdminOverviewProperties.
        :param virtual_gateway_health: The virtual_gateway_health of this AdminOverviewProperties.
        :param virtual_network_health: The virtual_network_health of this AdminOverviewProperties.
        """
        self.openapi_types = {
            'backend_ip_usage': AdminOverviewResourceUsage,
            'load_balancer_mux_health': AdminOverviewResourceHealth,
            'mac_address_usage': AdminOverviewResourceUsage,
            'provisioning_state': str,
            'public_ip_address_usage': AdminOverviewResourceUsage,
            'virtual_gateway_health': AdminOverviewResourceHealth,
            'virtual_network_health': AdminOverviewResourceHealth
        }

        self.attribute_map = {
            'backend_ip_usage': 'backendIpUsage',
            'load_balancer_mux_health': 'loadBalancerMuxHealth',
            'mac_address_usage': 'macAddressUsage',
            'provisioning_state': 'provisioningState',
            'public_ip_address_usage': 'publicIpAddressUsage',
            'virtual_gateway_health': 'virtualGatewayHealth',
            'virtual_network_health': 'virtualNetworkHealth'
        }

        self._backend_ip_usage = backend_ip_usage
        self._load_balancer_mux_health = load_balancer_mux_health
        self._mac_address_usage = mac_address_usage
        self._provisioning_state = provisioning_state
        self._public_ip_address_usage = public_ip_address_usage
        self._virtual_gateway_health = virtual_gateway_health
        self._virtual_network_health = virtual_network_health

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AdminOverviewProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AdminOverviewProperties of this AdminOverviewProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def backend_ip_usage(self):
        """Gets the backend_ip_usage of this AdminOverviewProperties.


        :return: The backend_ip_usage of this AdminOverviewProperties.
        :rtype: AdminOverviewResourceUsage
        """
        return self._backend_ip_usage

    @backend_ip_usage.setter
    def backend_ip_usage(self, backend_ip_usage):
        """Sets the backend_ip_usage of this AdminOverviewProperties.


        :param backend_ip_usage: The backend_ip_usage of this AdminOverviewProperties.
        :type backend_ip_usage: AdminOverviewResourceUsage
        """

        self._backend_ip_usage = backend_ip_usage

    @property
    def load_balancer_mux_health(self):
        """Gets the load_balancer_mux_health of this AdminOverviewProperties.


        :return: The load_balancer_mux_health of this AdminOverviewProperties.
        :rtype: AdminOverviewResourceHealth
        """
        return self._load_balancer_mux_health

    @load_balancer_mux_health.setter
    def load_balancer_mux_health(self, load_balancer_mux_health):
        """Sets the load_balancer_mux_health of this AdminOverviewProperties.


        :param load_balancer_mux_health: The load_balancer_mux_health of this AdminOverviewProperties.
        :type load_balancer_mux_health: AdminOverviewResourceHealth
        """

        self._load_balancer_mux_health = load_balancer_mux_health

    @property
    def mac_address_usage(self):
        """Gets the mac_address_usage of this AdminOverviewProperties.


        :return: The mac_address_usage of this AdminOverviewProperties.
        :rtype: AdminOverviewResourceUsage
        """
        return self._mac_address_usage

    @mac_address_usage.setter
    def mac_address_usage(self, mac_address_usage):
        """Sets the mac_address_usage of this AdminOverviewProperties.


        :param mac_address_usage: The mac_address_usage of this AdminOverviewProperties.
        :type mac_address_usage: AdminOverviewResourceUsage
        """

        self._mac_address_usage = mac_address_usage

    @property
    def provisioning_state(self):
        """Gets the provisioning_state of this AdminOverviewProperties.

        The provisioning state.

        :return: The provisioning_state of this AdminOverviewProperties.
        :rtype: str
        """
        return self._provisioning_state

    @provisioning_state.setter
    def provisioning_state(self, provisioning_state):
        """Sets the provisioning_state of this AdminOverviewProperties.

        The provisioning state.

        :param provisioning_state: The provisioning_state of this AdminOverviewProperties.
        :type provisioning_state: str
        """

        self._provisioning_state = provisioning_state

    @property
    def public_ip_address_usage(self):
        """Gets the public_ip_address_usage of this AdminOverviewProperties.


        :return: The public_ip_address_usage of this AdminOverviewProperties.
        :rtype: AdminOverviewResourceUsage
        """
        return self._public_ip_address_usage

    @public_ip_address_usage.setter
    def public_ip_address_usage(self, public_ip_address_usage):
        """Sets the public_ip_address_usage of this AdminOverviewProperties.


        :param public_ip_address_usage: The public_ip_address_usage of this AdminOverviewProperties.
        :type public_ip_address_usage: AdminOverviewResourceUsage
        """

        self._public_ip_address_usage = public_ip_address_usage

    @property
    def virtual_gateway_health(self):
        """Gets the virtual_gateway_health of this AdminOverviewProperties.


        :return: The virtual_gateway_health of this AdminOverviewProperties.
        :rtype: AdminOverviewResourceHealth
        """
        return self._virtual_gateway_health

    @virtual_gateway_health.setter
    def virtual_gateway_health(self, virtual_gateway_health):
        """Sets the virtual_gateway_health of this AdminOverviewProperties.


        :param virtual_gateway_health: The virtual_gateway_health of this AdminOverviewProperties.
        :type virtual_gateway_health: AdminOverviewResourceHealth
        """

        self._virtual_gateway_health = virtual_gateway_health

    @property
    def virtual_network_health(self):
        """Gets the virtual_network_health of this AdminOverviewProperties.


        :return: The virtual_network_health of this AdminOverviewProperties.
        :rtype: AdminOverviewResourceHealth
        """
        return self._virtual_network_health

    @virtual_network_health.setter
    def virtual_network_health(self, virtual_network_health):
        """Sets the virtual_network_health of this AdminOverviewProperties.


        :param virtual_network_health: The virtual_network_health of this AdminOverviewProperties.
        :type virtual_network_health: AdminOverviewResourceHealth
        """

        self._virtual_network_health = virtual_network_health
