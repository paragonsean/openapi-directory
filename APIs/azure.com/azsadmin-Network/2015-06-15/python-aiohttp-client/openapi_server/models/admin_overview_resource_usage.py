# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AdminOverviewResourceUsage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, in_use_resource_count: int=None, total_resource_count: int=None):
        """AdminOverviewResourceUsage - a model defined in OpenAPI

        :param in_use_resource_count: The in_use_resource_count of this AdminOverviewResourceUsage.
        :param total_resource_count: The total_resource_count of this AdminOverviewResourceUsage.
        """
        self.openapi_types = {
            'in_use_resource_count': int,
            'total_resource_count': int
        }

        self.attribute_map = {
            'in_use_resource_count': 'inUseResourceCount',
            'total_resource_count': 'totalResourceCount'
        }

        self._in_use_resource_count = in_use_resource_count
        self._total_resource_count = total_resource_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AdminOverviewResourceUsage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AdminOverviewResourceUsage of this AdminOverviewResourceUsage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def in_use_resource_count(self):
        """Gets the in_use_resource_count of this AdminOverviewResourceUsage.

        Number of resources in use.

        :return: The in_use_resource_count of this AdminOverviewResourceUsage.
        :rtype: int
        """
        return self._in_use_resource_count

    @in_use_resource_count.setter
    def in_use_resource_count(self, in_use_resource_count):
        """Sets the in_use_resource_count of this AdminOverviewResourceUsage.

        Number of resources in use.

        :param in_use_resource_count: The in_use_resource_count of this AdminOverviewResourceUsage.
        :type in_use_resource_count: int
        """

        self._in_use_resource_count = in_use_resource_count

    @property
    def total_resource_count(self):
        """Gets the total_resource_count of this AdminOverviewResourceUsage.

        Total number of resources.

        :return: The total_resource_count of this AdminOverviewResourceUsage.
        :rtype: int
        """
        return self._total_resource_count

    @total_resource_count.setter
    def total_resource_count(self, total_resource_count):
        """Sets the total_resource_count of this AdminOverviewResourceUsage.

        Total number of resources.

        :param total_resource_count: The total_resource_count of this AdminOverviewResourceUsage.
        :type total_resource_count: int
        """

        self._total_resource_count = total_resource_count
