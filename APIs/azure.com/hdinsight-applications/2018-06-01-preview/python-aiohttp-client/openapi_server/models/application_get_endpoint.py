# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ApplicationGetEndpoint(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, destination_port: int=None, location: str=None, public_port: int=None):
        """ApplicationGetEndpoint - a model defined in OpenAPI

        :param destination_port: The destination_port of this ApplicationGetEndpoint.
        :param location: The location of this ApplicationGetEndpoint.
        :param public_port: The public_port of this ApplicationGetEndpoint.
        """
        self.openapi_types = {
            'destination_port': int,
            'location': str,
            'public_port': int
        }

        self.attribute_map = {
            'destination_port': 'destinationPort',
            'location': 'location',
            'public_port': 'publicPort'
        }

        self._destination_port = destination_port
        self._location = location
        self._public_port = public_port

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApplicationGetEndpoint':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ApplicationGetEndpoint of this ApplicationGetEndpoint.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def destination_port(self):
        """Gets the destination_port of this ApplicationGetEndpoint.

        The destination port to connect to.

        :return: The destination_port of this ApplicationGetEndpoint.
        :rtype: int
        """
        return self._destination_port

    @destination_port.setter
    def destination_port(self, destination_port):
        """Sets the destination_port of this ApplicationGetEndpoint.

        The destination port to connect to.

        :param destination_port: The destination_port of this ApplicationGetEndpoint.
        :type destination_port: int
        """

        self._destination_port = destination_port

    @property
    def location(self):
        """Gets the location of this ApplicationGetEndpoint.

        The location of the endpoint.

        :return: The location of this ApplicationGetEndpoint.
        :rtype: str
        """
        return self._location

    @location.setter
    def location(self, location):
        """Sets the location of this ApplicationGetEndpoint.

        The location of the endpoint.

        :param location: The location of this ApplicationGetEndpoint.
        :type location: str
        """

        self._location = location

    @property
    def public_port(self):
        """Gets the public_port of this ApplicationGetEndpoint.

        The public port to connect to.

        :return: The public_port of this ApplicationGetEndpoint.
        :rtype: int
        """
        return self._public_port

    @public_port.setter
    def public_port(self, public_port):
        """Sets the public_port of this ApplicationGetEndpoint.

        The public port to connect to.

        :param public_port: The public_port of this ApplicationGetEndpoint.
        :type public_port: int
        """

        self._public_port = public_port
