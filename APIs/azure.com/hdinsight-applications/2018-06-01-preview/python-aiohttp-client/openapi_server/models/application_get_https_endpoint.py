# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ApplicationGetHttpsEndpoint(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, access_modes: List[str]=None, destination_port: int=None, disable_gateway_auth: bool=None, location: str=None, public_port: int=None, sub_domain_suffix: str=None):
        """ApplicationGetHttpsEndpoint - a model defined in OpenAPI

        :param access_modes: The access_modes of this ApplicationGetHttpsEndpoint.
        :param destination_port: The destination_port of this ApplicationGetHttpsEndpoint.
        :param disable_gateway_auth: The disable_gateway_auth of this ApplicationGetHttpsEndpoint.
        :param location: The location of this ApplicationGetHttpsEndpoint.
        :param public_port: The public_port of this ApplicationGetHttpsEndpoint.
        :param sub_domain_suffix: The sub_domain_suffix of this ApplicationGetHttpsEndpoint.
        """
        self.openapi_types = {
            'access_modes': List[str],
            'destination_port': int,
            'disable_gateway_auth': bool,
            'location': str,
            'public_port': int,
            'sub_domain_suffix': str
        }

        self.attribute_map = {
            'access_modes': 'accessModes',
            'destination_port': 'destinationPort',
            'disable_gateway_auth': 'disableGatewayAuth',
            'location': 'location',
            'public_port': 'publicPort',
            'sub_domain_suffix': 'subDomainSuffix'
        }

        self._access_modes = access_modes
        self._destination_port = destination_port
        self._disable_gateway_auth = disable_gateway_auth
        self._location = location
        self._public_port = public_port
        self._sub_domain_suffix = sub_domain_suffix

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApplicationGetHttpsEndpoint':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ApplicationGetHttpsEndpoint of this ApplicationGetHttpsEndpoint.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def access_modes(self):
        """Gets the access_modes of this ApplicationGetHttpsEndpoint.

        The list of access modes for the application.

        :return: The access_modes of this ApplicationGetHttpsEndpoint.
        :rtype: List[str]
        """
        return self._access_modes

    @access_modes.setter
    def access_modes(self, access_modes):
        """Sets the access_modes of this ApplicationGetHttpsEndpoint.

        The list of access modes for the application.

        :param access_modes: The access_modes of this ApplicationGetHttpsEndpoint.
        :type access_modes: List[str]
        """

        self._access_modes = access_modes

    @property
    def destination_port(self):
        """Gets the destination_port of this ApplicationGetHttpsEndpoint.

        The destination port to connect to.

        :return: The destination_port of this ApplicationGetHttpsEndpoint.
        :rtype: int
        """
        return self._destination_port

    @destination_port.setter
    def destination_port(self, destination_port):
        """Sets the destination_port of this ApplicationGetHttpsEndpoint.

        The destination port to connect to.

        :param destination_port: The destination_port of this ApplicationGetHttpsEndpoint.
        :type destination_port: int
        """

        self._destination_port = destination_port

    @property
    def disable_gateway_auth(self):
        """Gets the disable_gateway_auth of this ApplicationGetHttpsEndpoint.

        The value indicates whether to disable GatewayAuth.

        :return: The disable_gateway_auth of this ApplicationGetHttpsEndpoint.
        :rtype: bool
        """
        return self._disable_gateway_auth

    @disable_gateway_auth.setter
    def disable_gateway_auth(self, disable_gateway_auth):
        """Sets the disable_gateway_auth of this ApplicationGetHttpsEndpoint.

        The value indicates whether to disable GatewayAuth.

        :param disable_gateway_auth: The disable_gateway_auth of this ApplicationGetHttpsEndpoint.
        :type disable_gateway_auth: bool
        """

        self._disable_gateway_auth = disable_gateway_auth

    @property
    def location(self):
        """Gets the location of this ApplicationGetHttpsEndpoint.

        The location of the endpoint.

        :return: The location of this ApplicationGetHttpsEndpoint.
        :rtype: str
        """
        return self._location

    @location.setter
    def location(self, location):
        """Sets the location of this ApplicationGetHttpsEndpoint.

        The location of the endpoint.

        :param location: The location of this ApplicationGetHttpsEndpoint.
        :type location: str
        """

        self._location = location

    @property
    def public_port(self):
        """Gets the public_port of this ApplicationGetHttpsEndpoint.

        The public port to connect to.

        :return: The public_port of this ApplicationGetHttpsEndpoint.
        :rtype: int
        """
        return self._public_port

    @public_port.setter
    def public_port(self, public_port):
        """Sets the public_port of this ApplicationGetHttpsEndpoint.

        The public port to connect to.

        :param public_port: The public_port of this ApplicationGetHttpsEndpoint.
        :type public_port: int
        """

        self._public_port = public_port

    @property
    def sub_domain_suffix(self):
        """Gets the sub_domain_suffix of this ApplicationGetHttpsEndpoint.

        The subdomain suffix of the application.

        :return: The sub_domain_suffix of this ApplicationGetHttpsEndpoint.
        :rtype: str
        """
        return self._sub_domain_suffix

    @sub_domain_suffix.setter
    def sub_domain_suffix(self, sub_domain_suffix):
        """Sets the sub_domain_suffix of this ApplicationGetHttpsEndpoint.

        The subdomain suffix of the application.

        :param sub_domain_suffix: The sub_domain_suffix of this ApplicationGetHttpsEndpoint.
        :type sub_domain_suffix: str
        """

        self._sub_domain_suffix = sub_domain_suffix
