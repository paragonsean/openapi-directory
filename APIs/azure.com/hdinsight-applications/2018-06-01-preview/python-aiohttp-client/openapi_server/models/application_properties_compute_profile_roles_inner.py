# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.application_properties_compute_profile_roles_inner_autoscale import ApplicationPropertiesComputeProfileRolesInnerAutoscale
from openapi_server.models.application_properties_compute_profile_roles_inner_data_disks_groups_inner import ApplicationPropertiesComputeProfileRolesInnerDataDisksGroupsInner
from openapi_server.models.application_properties_compute_profile_roles_inner_hardware_profile import ApplicationPropertiesComputeProfileRolesInnerHardwareProfile
from openapi_server.models.application_properties_compute_profile_roles_inner_os_profile import ApplicationPropertiesComputeProfileRolesInnerOsProfile
from openapi_server.models.application_properties_compute_profile_roles_inner_script_actions_inner import ApplicationPropertiesComputeProfileRolesInnerScriptActionsInner
from openapi_server.models.application_properties_compute_profile_roles_inner_virtual_network_profile import ApplicationPropertiesComputeProfileRolesInnerVirtualNetworkProfile
from openapi_server import util


class ApplicationPropertiesComputeProfileRolesInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, autoscale: ApplicationPropertiesComputeProfileRolesInnerAutoscale=None, data_disks_groups: List[ApplicationPropertiesComputeProfileRolesInnerDataDisksGroupsInner]=None, hardware_profile: ApplicationPropertiesComputeProfileRolesInnerHardwareProfile=None, min_instance_count: int=None, name: str=None, os_profile: ApplicationPropertiesComputeProfileRolesInnerOsProfile=None, script_actions: List[ApplicationPropertiesComputeProfileRolesInnerScriptActionsInner]=None, target_instance_count: int=None, virtual_network_profile: ApplicationPropertiesComputeProfileRolesInnerVirtualNetworkProfile=None):
        """ApplicationPropertiesComputeProfileRolesInner - a model defined in OpenAPI

        :param autoscale: The autoscale of this ApplicationPropertiesComputeProfileRolesInner.
        :param data_disks_groups: The data_disks_groups of this ApplicationPropertiesComputeProfileRolesInner.
        :param hardware_profile: The hardware_profile of this ApplicationPropertiesComputeProfileRolesInner.
        :param min_instance_count: The min_instance_count of this ApplicationPropertiesComputeProfileRolesInner.
        :param name: The name of this ApplicationPropertiesComputeProfileRolesInner.
        :param os_profile: The os_profile of this ApplicationPropertiesComputeProfileRolesInner.
        :param script_actions: The script_actions of this ApplicationPropertiesComputeProfileRolesInner.
        :param target_instance_count: The target_instance_count of this ApplicationPropertiesComputeProfileRolesInner.
        :param virtual_network_profile: The virtual_network_profile of this ApplicationPropertiesComputeProfileRolesInner.
        """
        self.openapi_types = {
            'autoscale': ApplicationPropertiesComputeProfileRolesInnerAutoscale,
            'data_disks_groups': List[ApplicationPropertiesComputeProfileRolesInnerDataDisksGroupsInner],
            'hardware_profile': ApplicationPropertiesComputeProfileRolesInnerHardwareProfile,
            'min_instance_count': int,
            'name': str,
            'os_profile': ApplicationPropertiesComputeProfileRolesInnerOsProfile,
            'script_actions': List[ApplicationPropertiesComputeProfileRolesInnerScriptActionsInner],
            'target_instance_count': int,
            'virtual_network_profile': ApplicationPropertiesComputeProfileRolesInnerVirtualNetworkProfile
        }

        self.attribute_map = {
            'autoscale': 'autoscale',
            'data_disks_groups': 'dataDisksGroups',
            'hardware_profile': 'hardwareProfile',
            'min_instance_count': 'minInstanceCount',
            'name': 'name',
            'os_profile': 'osProfile',
            'script_actions': 'scriptActions',
            'target_instance_count': 'targetInstanceCount',
            'virtual_network_profile': 'virtualNetworkProfile'
        }

        self._autoscale = autoscale
        self._data_disks_groups = data_disks_groups
        self._hardware_profile = hardware_profile
        self._min_instance_count = min_instance_count
        self._name = name
        self._os_profile = os_profile
        self._script_actions = script_actions
        self._target_instance_count = target_instance_count
        self._virtual_network_profile = virtual_network_profile

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApplicationPropertiesComputeProfileRolesInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ApplicationProperties_computeProfile_roles_inner of this ApplicationPropertiesComputeProfileRolesInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def autoscale(self):
        """Gets the autoscale of this ApplicationPropertiesComputeProfileRolesInner.


        :return: The autoscale of this ApplicationPropertiesComputeProfileRolesInner.
        :rtype: ApplicationPropertiesComputeProfileRolesInnerAutoscale
        """
        return self._autoscale

    @autoscale.setter
    def autoscale(self, autoscale):
        """Sets the autoscale of this ApplicationPropertiesComputeProfileRolesInner.


        :param autoscale: The autoscale of this ApplicationPropertiesComputeProfileRolesInner.
        :type autoscale: ApplicationPropertiesComputeProfileRolesInnerAutoscale
        """

        self._autoscale = autoscale

    @property
    def data_disks_groups(self):
        """Gets the data_disks_groups of this ApplicationPropertiesComputeProfileRolesInner.

        The data disks groups for the role.

        :return: The data_disks_groups of this ApplicationPropertiesComputeProfileRolesInner.
        :rtype: List[ApplicationPropertiesComputeProfileRolesInnerDataDisksGroupsInner]
        """
        return self._data_disks_groups

    @data_disks_groups.setter
    def data_disks_groups(self, data_disks_groups):
        """Sets the data_disks_groups of this ApplicationPropertiesComputeProfileRolesInner.

        The data disks groups for the role.

        :param data_disks_groups: The data_disks_groups of this ApplicationPropertiesComputeProfileRolesInner.
        :type data_disks_groups: List[ApplicationPropertiesComputeProfileRolesInnerDataDisksGroupsInner]
        """

        self._data_disks_groups = data_disks_groups

    @property
    def hardware_profile(self):
        """Gets the hardware_profile of this ApplicationPropertiesComputeProfileRolesInner.


        :return: The hardware_profile of this ApplicationPropertiesComputeProfileRolesInner.
        :rtype: ApplicationPropertiesComputeProfileRolesInnerHardwareProfile
        """
        return self._hardware_profile

    @hardware_profile.setter
    def hardware_profile(self, hardware_profile):
        """Sets the hardware_profile of this ApplicationPropertiesComputeProfileRolesInner.


        :param hardware_profile: The hardware_profile of this ApplicationPropertiesComputeProfileRolesInner.
        :type hardware_profile: ApplicationPropertiesComputeProfileRolesInnerHardwareProfile
        """

        self._hardware_profile = hardware_profile

    @property
    def min_instance_count(self):
        """Gets the min_instance_count of this ApplicationPropertiesComputeProfileRolesInner.

        The minimum instance count of the cluster.

        :return: The min_instance_count of this ApplicationPropertiesComputeProfileRolesInner.
        :rtype: int
        """
        return self._min_instance_count

    @min_instance_count.setter
    def min_instance_count(self, min_instance_count):
        """Sets the min_instance_count of this ApplicationPropertiesComputeProfileRolesInner.

        The minimum instance count of the cluster.

        :param min_instance_count: The min_instance_count of this ApplicationPropertiesComputeProfileRolesInner.
        :type min_instance_count: int
        """

        self._min_instance_count = min_instance_count

    @property
    def name(self):
        """Gets the name of this ApplicationPropertiesComputeProfileRolesInner.

        The name of the role.

        :return: The name of this ApplicationPropertiesComputeProfileRolesInner.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ApplicationPropertiesComputeProfileRolesInner.

        The name of the role.

        :param name: The name of this ApplicationPropertiesComputeProfileRolesInner.
        :type name: str
        """

        self._name = name

    @property
    def os_profile(self):
        """Gets the os_profile of this ApplicationPropertiesComputeProfileRolesInner.


        :return: The os_profile of this ApplicationPropertiesComputeProfileRolesInner.
        :rtype: ApplicationPropertiesComputeProfileRolesInnerOsProfile
        """
        return self._os_profile

    @os_profile.setter
    def os_profile(self, os_profile):
        """Sets the os_profile of this ApplicationPropertiesComputeProfileRolesInner.


        :param os_profile: The os_profile of this ApplicationPropertiesComputeProfileRolesInner.
        :type os_profile: ApplicationPropertiesComputeProfileRolesInnerOsProfile
        """

        self._os_profile = os_profile

    @property
    def script_actions(self):
        """Gets the script_actions of this ApplicationPropertiesComputeProfileRolesInner.

        The list of script actions on the role.

        :return: The script_actions of this ApplicationPropertiesComputeProfileRolesInner.
        :rtype: List[ApplicationPropertiesComputeProfileRolesInnerScriptActionsInner]
        """
        return self._script_actions

    @script_actions.setter
    def script_actions(self, script_actions):
        """Sets the script_actions of this ApplicationPropertiesComputeProfileRolesInner.

        The list of script actions on the role.

        :param script_actions: The script_actions of this ApplicationPropertiesComputeProfileRolesInner.
        :type script_actions: List[ApplicationPropertiesComputeProfileRolesInnerScriptActionsInner]
        """

        self._script_actions = script_actions

    @property
    def target_instance_count(self):
        """Gets the target_instance_count of this ApplicationPropertiesComputeProfileRolesInner.

        The instance count of the cluster.

        :return: The target_instance_count of this ApplicationPropertiesComputeProfileRolesInner.
        :rtype: int
        """
        return self._target_instance_count

    @target_instance_count.setter
    def target_instance_count(self, target_instance_count):
        """Sets the target_instance_count of this ApplicationPropertiesComputeProfileRolesInner.

        The instance count of the cluster.

        :param target_instance_count: The target_instance_count of this ApplicationPropertiesComputeProfileRolesInner.
        :type target_instance_count: int
        """

        self._target_instance_count = target_instance_count

    @property
    def virtual_network_profile(self):
        """Gets the virtual_network_profile of this ApplicationPropertiesComputeProfileRolesInner.


        :return: The virtual_network_profile of this ApplicationPropertiesComputeProfileRolesInner.
        :rtype: ApplicationPropertiesComputeProfileRolesInnerVirtualNetworkProfile
        """
        return self._virtual_network_profile

    @virtual_network_profile.setter
    def virtual_network_profile(self, virtual_network_profile):
        """Sets the virtual_network_profile of this ApplicationPropertiesComputeProfileRolesInner.


        :param virtual_network_profile: The virtual_network_profile of this ApplicationPropertiesComputeProfileRolesInner.
        :type virtual_network_profile: ApplicationPropertiesComputeProfileRolesInnerVirtualNetworkProfile
        """

        self._virtual_network_profile = virtual_network_profile
