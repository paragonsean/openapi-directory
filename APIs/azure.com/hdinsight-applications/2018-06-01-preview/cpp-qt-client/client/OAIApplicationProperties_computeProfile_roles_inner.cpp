/**
 * HDInsightManagementClient
 * The HDInsight Management Client.
 *
 * The version of the OpenAPI document: 2018-06-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApplicationProperties_computeProfile_roles_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApplicationProperties_computeProfile_roles_inner::OAIApplicationProperties_computeProfile_roles_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApplicationProperties_computeProfile_roles_inner::OAIApplicationProperties_computeProfile_roles_inner() {
    this->initializeModel();
}

OAIApplicationProperties_computeProfile_roles_inner::~OAIApplicationProperties_computeProfile_roles_inner() {}

void OAIApplicationProperties_computeProfile_roles_inner::initializeModel() {

    m_autoscale_isSet = false;
    m_autoscale_isValid = false;

    m_data_disks_groups_isSet = false;
    m_data_disks_groups_isValid = false;

    m_hardware_profile_isSet = false;
    m_hardware_profile_isValid = false;

    m_min_instance_count_isSet = false;
    m_min_instance_count_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_os_profile_isSet = false;
    m_os_profile_isValid = false;

    m_script_actions_isSet = false;
    m_script_actions_isValid = false;

    m_target_instance_count_isSet = false;
    m_target_instance_count_isValid = false;

    m_virtual_network_profile_isSet = false;
    m_virtual_network_profile_isValid = false;
}

void OAIApplicationProperties_computeProfile_roles_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIApplicationProperties_computeProfile_roles_inner::fromJsonObject(QJsonObject json) {

    m_autoscale_isValid = ::OpenAPI::fromJsonValue(m_autoscale, json[QString("autoscale")]);
    m_autoscale_isSet = !json[QString("autoscale")].isNull() && m_autoscale_isValid;

    m_data_disks_groups_isValid = ::OpenAPI::fromJsonValue(m_data_disks_groups, json[QString("dataDisksGroups")]);
    m_data_disks_groups_isSet = !json[QString("dataDisksGroups")].isNull() && m_data_disks_groups_isValid;

    m_hardware_profile_isValid = ::OpenAPI::fromJsonValue(m_hardware_profile, json[QString("hardwareProfile")]);
    m_hardware_profile_isSet = !json[QString("hardwareProfile")].isNull() && m_hardware_profile_isValid;

    m_min_instance_count_isValid = ::OpenAPI::fromJsonValue(m_min_instance_count, json[QString("minInstanceCount")]);
    m_min_instance_count_isSet = !json[QString("minInstanceCount")].isNull() && m_min_instance_count_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_os_profile_isValid = ::OpenAPI::fromJsonValue(m_os_profile, json[QString("osProfile")]);
    m_os_profile_isSet = !json[QString("osProfile")].isNull() && m_os_profile_isValid;

    m_script_actions_isValid = ::OpenAPI::fromJsonValue(m_script_actions, json[QString("scriptActions")]);
    m_script_actions_isSet = !json[QString("scriptActions")].isNull() && m_script_actions_isValid;

    m_target_instance_count_isValid = ::OpenAPI::fromJsonValue(m_target_instance_count, json[QString("targetInstanceCount")]);
    m_target_instance_count_isSet = !json[QString("targetInstanceCount")].isNull() && m_target_instance_count_isValid;

    m_virtual_network_profile_isValid = ::OpenAPI::fromJsonValue(m_virtual_network_profile, json[QString("virtualNetworkProfile")]);
    m_virtual_network_profile_isSet = !json[QString("virtualNetworkProfile")].isNull() && m_virtual_network_profile_isValid;
}

QString OAIApplicationProperties_computeProfile_roles_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIApplicationProperties_computeProfile_roles_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_autoscale.isSet()) {
        obj.insert(QString("autoscale"), ::OpenAPI::toJsonValue(m_autoscale));
    }
    if (m_data_disks_groups.size() > 0) {
        obj.insert(QString("dataDisksGroups"), ::OpenAPI::toJsonValue(m_data_disks_groups));
    }
    if (m_hardware_profile.isSet()) {
        obj.insert(QString("hardwareProfile"), ::OpenAPI::toJsonValue(m_hardware_profile));
    }
    if (m_min_instance_count_isSet) {
        obj.insert(QString("minInstanceCount"), ::OpenAPI::toJsonValue(m_min_instance_count));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_os_profile.isSet()) {
        obj.insert(QString("osProfile"), ::OpenAPI::toJsonValue(m_os_profile));
    }
    if (m_script_actions.size() > 0) {
        obj.insert(QString("scriptActions"), ::OpenAPI::toJsonValue(m_script_actions));
    }
    if (m_target_instance_count_isSet) {
        obj.insert(QString("targetInstanceCount"), ::OpenAPI::toJsonValue(m_target_instance_count));
    }
    if (m_virtual_network_profile.isSet()) {
        obj.insert(QString("virtualNetworkProfile"), ::OpenAPI::toJsonValue(m_virtual_network_profile));
    }
    return obj;
}

OAIApplicationProperties_computeProfile_roles_inner_autoscale OAIApplicationProperties_computeProfile_roles_inner::getAutoscale() const {
    return m_autoscale;
}
void OAIApplicationProperties_computeProfile_roles_inner::setAutoscale(const OAIApplicationProperties_computeProfile_roles_inner_autoscale &autoscale) {
    m_autoscale = autoscale;
    m_autoscale_isSet = true;
}

bool OAIApplicationProperties_computeProfile_roles_inner::is_autoscale_Set() const{
    return m_autoscale_isSet;
}

bool OAIApplicationProperties_computeProfile_roles_inner::is_autoscale_Valid() const{
    return m_autoscale_isValid;
}

QList<OAIApplicationProperties_computeProfile_roles_inner_dataDisksGroups_inner> OAIApplicationProperties_computeProfile_roles_inner::getDataDisksGroups() const {
    return m_data_disks_groups;
}
void OAIApplicationProperties_computeProfile_roles_inner::setDataDisksGroups(const QList<OAIApplicationProperties_computeProfile_roles_inner_dataDisksGroups_inner> &data_disks_groups) {
    m_data_disks_groups = data_disks_groups;
    m_data_disks_groups_isSet = true;
}

bool OAIApplicationProperties_computeProfile_roles_inner::is_data_disks_groups_Set() const{
    return m_data_disks_groups_isSet;
}

bool OAIApplicationProperties_computeProfile_roles_inner::is_data_disks_groups_Valid() const{
    return m_data_disks_groups_isValid;
}

OAIApplicationProperties_computeProfile_roles_inner_hardwareProfile OAIApplicationProperties_computeProfile_roles_inner::getHardwareProfile() const {
    return m_hardware_profile;
}
void OAIApplicationProperties_computeProfile_roles_inner::setHardwareProfile(const OAIApplicationProperties_computeProfile_roles_inner_hardwareProfile &hardware_profile) {
    m_hardware_profile = hardware_profile;
    m_hardware_profile_isSet = true;
}

bool OAIApplicationProperties_computeProfile_roles_inner::is_hardware_profile_Set() const{
    return m_hardware_profile_isSet;
}

bool OAIApplicationProperties_computeProfile_roles_inner::is_hardware_profile_Valid() const{
    return m_hardware_profile_isValid;
}

qint32 OAIApplicationProperties_computeProfile_roles_inner::getMinInstanceCount() const {
    return m_min_instance_count;
}
void OAIApplicationProperties_computeProfile_roles_inner::setMinInstanceCount(const qint32 &min_instance_count) {
    m_min_instance_count = min_instance_count;
    m_min_instance_count_isSet = true;
}

bool OAIApplicationProperties_computeProfile_roles_inner::is_min_instance_count_Set() const{
    return m_min_instance_count_isSet;
}

bool OAIApplicationProperties_computeProfile_roles_inner::is_min_instance_count_Valid() const{
    return m_min_instance_count_isValid;
}

QString OAIApplicationProperties_computeProfile_roles_inner::getName() const {
    return m_name;
}
void OAIApplicationProperties_computeProfile_roles_inner::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIApplicationProperties_computeProfile_roles_inner::is_name_Set() const{
    return m_name_isSet;
}

bool OAIApplicationProperties_computeProfile_roles_inner::is_name_Valid() const{
    return m_name_isValid;
}

OAIApplicationProperties_computeProfile_roles_inner_osProfile OAIApplicationProperties_computeProfile_roles_inner::getOsProfile() const {
    return m_os_profile;
}
void OAIApplicationProperties_computeProfile_roles_inner::setOsProfile(const OAIApplicationProperties_computeProfile_roles_inner_osProfile &os_profile) {
    m_os_profile = os_profile;
    m_os_profile_isSet = true;
}

bool OAIApplicationProperties_computeProfile_roles_inner::is_os_profile_Set() const{
    return m_os_profile_isSet;
}

bool OAIApplicationProperties_computeProfile_roles_inner::is_os_profile_Valid() const{
    return m_os_profile_isValid;
}

QList<OAIApplicationProperties_computeProfile_roles_inner_scriptActions_inner> OAIApplicationProperties_computeProfile_roles_inner::getScriptActions() const {
    return m_script_actions;
}
void OAIApplicationProperties_computeProfile_roles_inner::setScriptActions(const QList<OAIApplicationProperties_computeProfile_roles_inner_scriptActions_inner> &script_actions) {
    m_script_actions = script_actions;
    m_script_actions_isSet = true;
}

bool OAIApplicationProperties_computeProfile_roles_inner::is_script_actions_Set() const{
    return m_script_actions_isSet;
}

bool OAIApplicationProperties_computeProfile_roles_inner::is_script_actions_Valid() const{
    return m_script_actions_isValid;
}

qint32 OAIApplicationProperties_computeProfile_roles_inner::getTargetInstanceCount() const {
    return m_target_instance_count;
}
void OAIApplicationProperties_computeProfile_roles_inner::setTargetInstanceCount(const qint32 &target_instance_count) {
    m_target_instance_count = target_instance_count;
    m_target_instance_count_isSet = true;
}

bool OAIApplicationProperties_computeProfile_roles_inner::is_target_instance_count_Set() const{
    return m_target_instance_count_isSet;
}

bool OAIApplicationProperties_computeProfile_roles_inner::is_target_instance_count_Valid() const{
    return m_target_instance_count_isValid;
}

OAIApplicationProperties_computeProfile_roles_inner_virtualNetworkProfile OAIApplicationProperties_computeProfile_roles_inner::getVirtualNetworkProfile() const {
    return m_virtual_network_profile;
}
void OAIApplicationProperties_computeProfile_roles_inner::setVirtualNetworkProfile(const OAIApplicationProperties_computeProfile_roles_inner_virtualNetworkProfile &virtual_network_profile) {
    m_virtual_network_profile = virtual_network_profile;
    m_virtual_network_profile_isSet = true;
}

bool OAIApplicationProperties_computeProfile_roles_inner::is_virtual_network_profile_Set() const{
    return m_virtual_network_profile_isSet;
}

bool OAIApplicationProperties_computeProfile_roles_inner::is_virtual_network_profile_Valid() const{
    return m_virtual_network_profile_isValid;
}

bool OAIApplicationProperties_computeProfile_roles_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_autoscale.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_data_disks_groups.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_hardware_profile.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_min_instance_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_os_profile.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_script_actions.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_target_instance_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_virtual_network_profile.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIApplicationProperties_computeProfile_roles_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
