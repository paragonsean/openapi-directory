/**
 * HDInsightManagementClient
 * The HDInsight Management Client.
 *
 * The version of the OpenAPI document: 2018-06-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIApplicationGetHttpsEndpoint.h
 *
 * Gets the application HTTP endpoints.
 */

#ifndef OAIApplicationGetHttpsEndpoint_H
#define OAIApplicationGetHttpsEndpoint_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIApplicationGetHttpsEndpoint : public OAIObject {
public:
    OAIApplicationGetHttpsEndpoint();
    OAIApplicationGetHttpsEndpoint(QString json);
    ~OAIApplicationGetHttpsEndpoint() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getAccessModes() const;
    void setAccessModes(const QList<QString> &access_modes);
    bool is_access_modes_Set() const;
    bool is_access_modes_Valid() const;

    qint32 getDestinationPort() const;
    void setDestinationPort(const qint32 &destination_port);
    bool is_destination_port_Set() const;
    bool is_destination_port_Valid() const;

    bool isDisableGatewayAuth() const;
    void setDisableGatewayAuth(const bool &disable_gateway_auth);
    bool is_disable_gateway_auth_Set() const;
    bool is_disable_gateway_auth_Valid() const;

    QString getLocation() const;
    void setLocation(const QString &location);
    bool is_location_Set() const;
    bool is_location_Valid() const;

    qint32 getPublicPort() const;
    void setPublicPort(const qint32 &public_port);
    bool is_public_port_Set() const;
    bool is_public_port_Valid() const;

    QString getSubDomainSuffix() const;
    void setSubDomainSuffix(const QString &sub_domain_suffix);
    bool is_sub_domain_suffix_Set() const;
    bool is_sub_domain_suffix_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_access_modes;
    bool m_access_modes_isSet;
    bool m_access_modes_isValid;

    qint32 m_destination_port;
    bool m_destination_port_isSet;
    bool m_destination_port_isValid;

    bool m_disable_gateway_auth;
    bool m_disable_gateway_auth_isSet;
    bool m_disable_gateway_auth_isValid;

    QString m_location;
    bool m_location_isSet;
    bool m_location_isValid;

    qint32 m_public_port;
    bool m_public_port_isSet;
    bool m_public_port_isValid;

    QString m_sub_domain_suffix;
    bool m_sub_domain_suffix_isSet;
    bool m_sub_domain_suffix_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIApplicationGetHttpsEndpoint)

#endif // OAIApplicationGetHttpsEndpoint_H
