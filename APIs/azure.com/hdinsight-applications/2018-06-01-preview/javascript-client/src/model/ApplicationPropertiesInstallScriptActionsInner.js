/**
 * HDInsightManagementClient
 * The HDInsight Management Client.
 *
 * The version of the OpenAPI document: 2018-06-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ApplicationPropertiesInstallScriptActionsInner model module.
 * @module model/ApplicationPropertiesInstallScriptActionsInner
 * @version 2018-06-01-preview
 */
class ApplicationPropertiesInstallScriptActionsInner {
    /**
     * Constructs a new <code>ApplicationPropertiesInstallScriptActionsInner</code>.
     * Describes a script action on a running cluster.
     * @alias module:model/ApplicationPropertiesInstallScriptActionsInner
     * @param name {String} The name of the script action.
     * @param roles {Array.<String>} The list of roles where script will be executed.
     * @param uri {String} The URI to the script.
     */
    constructor(name, roles, uri) { 
        
        ApplicationPropertiesInstallScriptActionsInner.initialize(this, name, roles, uri);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, roles, uri) { 
        obj['name'] = name;
        obj['roles'] = roles;
        obj['uri'] = uri;
    }

    /**
     * Constructs a <code>ApplicationPropertiesInstallScriptActionsInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApplicationPropertiesInstallScriptActionsInner} obj Optional instance to populate.
     * @return {module:model/ApplicationPropertiesInstallScriptActionsInner} The populated <code>ApplicationPropertiesInstallScriptActionsInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApplicationPropertiesInstallScriptActionsInner();

            if (data.hasOwnProperty('applicationName')) {
                obj['applicationName'] = ApiClient.convertToType(data['applicationName'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('parameters')) {
                obj['parameters'] = ApiClient.convertToType(data['parameters'], 'String');
            }
            if (data.hasOwnProperty('roles')) {
                obj['roles'] = ApiClient.convertToType(data['roles'], ['String']);
            }
            if (data.hasOwnProperty('uri')) {
                obj['uri'] = ApiClient.convertToType(data['uri'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ApplicationPropertiesInstallScriptActionsInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ApplicationPropertiesInstallScriptActionsInner</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ApplicationPropertiesInstallScriptActionsInner.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['applicationName'] && !(typeof data['applicationName'] === 'string' || data['applicationName'] instanceof String)) {
            throw new Error("Expected the field `applicationName` to be a primitive type in the JSON string but got " + data['applicationName']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['parameters'] && !(typeof data['parameters'] === 'string' || data['parameters'] instanceof String)) {
            throw new Error("Expected the field `parameters` to be a primitive type in the JSON string but got " + data['parameters']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['roles'])) {
            throw new Error("Expected the field `roles` to be an array in the JSON data but got " + data['roles']);
        }
        // ensure the json data is a string
        if (data['uri'] && !(typeof data['uri'] === 'string' || data['uri'] instanceof String)) {
            throw new Error("Expected the field `uri` to be a primitive type in the JSON string but got " + data['uri']);
        }

        return true;
    }


}

ApplicationPropertiesInstallScriptActionsInner.RequiredProperties = ["name", "roles", "uri"];

/**
 * The application name of the script action, if any.
 * @member {String} applicationName
 */
ApplicationPropertiesInstallScriptActionsInner.prototype['applicationName'] = undefined;

/**
 * The name of the script action.
 * @member {String} name
 */
ApplicationPropertiesInstallScriptActionsInner.prototype['name'] = undefined;

/**
 * The parameters for the script
 * @member {String} parameters
 */
ApplicationPropertiesInstallScriptActionsInner.prototype['parameters'] = undefined;

/**
 * The list of roles where script will be executed.
 * @member {Array.<String>} roles
 */
ApplicationPropertiesInstallScriptActionsInner.prototype['roles'] = undefined;

/**
 * The URI to the script.
 * @member {String} uri
 */
ApplicationPropertiesInstallScriptActionsInner.prototype['uri'] = undefined;






export default ApplicationPropertiesInstallScriptActionsInner;

