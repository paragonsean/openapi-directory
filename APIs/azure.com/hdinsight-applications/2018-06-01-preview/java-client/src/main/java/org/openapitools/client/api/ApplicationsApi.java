/*
 * HDInsightManagementClient
 * The HDInsight Management Client.
 *
 * The version of the OpenAPI document: 2018-06-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.Application;
import org.openapitools.client.model.ApplicationListResult;
import org.openapitools.client.model.ApplicationsListByClusterDefaultResponse;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ApplicationsApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public ApplicationsApi() {
        this(Configuration.getDefaultApiClient());
    }

    public ApplicationsApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for applicationsCreate
     * @param subscriptionId The subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param clusterName The name of the cluster. (required)
     * @param applicationName The constant value for the application name. (required)
     * @param apiVersion The HDInsight client API Version. (required)
     * @param parameters The application create request. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call applicationsCreateCall(String subscriptionId, String resourceGroupName, String clusterName, String applicationName, String apiVersion, Application parameters, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = parameters;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}/applications/{applicationName}"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "clusterName" + "}", localVarApiClient.escapeString(clusterName.toString()))
            .replace("{" + "applicationName" + "}", localVarApiClient.escapeString(applicationName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call applicationsCreateValidateBeforeCall(String subscriptionId, String resourceGroupName, String clusterName, String applicationName, String apiVersion, Application parameters, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling applicationsCreate(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling applicationsCreate(Async)");
        }

        // verify the required parameter 'clusterName' is set
        if (clusterName == null) {
            throw new ApiException("Missing the required parameter 'clusterName' when calling applicationsCreate(Async)");
        }

        // verify the required parameter 'applicationName' is set
        if (applicationName == null) {
            throw new ApiException("Missing the required parameter 'applicationName' when calling applicationsCreate(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling applicationsCreate(Async)");
        }

        // verify the required parameter 'parameters' is set
        if (parameters == null) {
            throw new ApiException("Missing the required parameter 'parameters' when calling applicationsCreate(Async)");
        }

        return applicationsCreateCall(subscriptionId, resourceGroupName, clusterName, applicationName, apiVersion, parameters, _callback);

    }

    /**
     * 
     * Creates applications for the HDInsight cluster.
     * @param subscriptionId The subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param clusterName The name of the cluster. (required)
     * @param applicationName The constant value for the application name. (required)
     * @param apiVersion The HDInsight client API Version. (required)
     * @param parameters The application create request. (required)
     * @return Application
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public Application applicationsCreate(String subscriptionId, String resourceGroupName, String clusterName, String applicationName, String apiVersion, Application parameters) throws ApiException {
        ApiResponse<Application> localVarResp = applicationsCreateWithHttpInfo(subscriptionId, resourceGroupName, clusterName, applicationName, apiVersion, parameters);
        return localVarResp.getData();
    }

    /**
     * 
     * Creates applications for the HDInsight cluster.
     * @param subscriptionId The subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param clusterName The name of the cluster. (required)
     * @param applicationName The constant value for the application name. (required)
     * @param apiVersion The HDInsight client API Version. (required)
     * @param parameters The application create request. (required)
     * @return ApiResponse&lt;Application&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Application> applicationsCreateWithHttpInfo(String subscriptionId, String resourceGroupName, String clusterName, String applicationName, String apiVersion, Application parameters) throws ApiException {
        okhttp3.Call localVarCall = applicationsCreateValidateBeforeCall(subscriptionId, resourceGroupName, clusterName, applicationName, apiVersion, parameters, null);
        Type localVarReturnType = new TypeToken<Application>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Creates applications for the HDInsight cluster.
     * @param subscriptionId The subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param clusterName The name of the cluster. (required)
     * @param applicationName The constant value for the application name. (required)
     * @param apiVersion The HDInsight client API Version. (required)
     * @param parameters The application create request. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call applicationsCreateAsync(String subscriptionId, String resourceGroupName, String clusterName, String applicationName, String apiVersion, Application parameters, final ApiCallback<Application> _callback) throws ApiException {

        okhttp3.Call localVarCall = applicationsCreateValidateBeforeCall(subscriptionId, resourceGroupName, clusterName, applicationName, apiVersion, parameters, _callback);
        Type localVarReturnType = new TypeToken<Application>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for applicationsDelete
     * @param subscriptionId The subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param clusterName The name of the cluster. (required)
     * @param applicationName The constant value for the application name. (required)
     * @param apiVersion The HDInsight client API Version. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted response definition. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call applicationsDeleteCall(String subscriptionId, String resourceGroupName, String clusterName, String applicationName, String apiVersion, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}/applications/{applicationName}"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "clusterName" + "}", localVarApiClient.escapeString(clusterName.toString()))
            .replace("{" + "applicationName" + "}", localVarApiClient.escapeString(applicationName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call applicationsDeleteValidateBeforeCall(String subscriptionId, String resourceGroupName, String clusterName, String applicationName, String apiVersion, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling applicationsDelete(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling applicationsDelete(Async)");
        }

        // verify the required parameter 'clusterName' is set
        if (clusterName == null) {
            throw new ApiException("Missing the required parameter 'clusterName' when calling applicationsDelete(Async)");
        }

        // verify the required parameter 'applicationName' is set
        if (applicationName == null) {
            throw new ApiException("Missing the required parameter 'applicationName' when calling applicationsDelete(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling applicationsDelete(Async)");
        }

        return applicationsDeleteCall(subscriptionId, resourceGroupName, clusterName, applicationName, apiVersion, _callback);

    }

    /**
     * 
     * Deletes the specified application on the HDInsight cluster.
     * @param subscriptionId The subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param clusterName The name of the cluster. (required)
     * @param applicationName The constant value for the application name. (required)
     * @param apiVersion The HDInsight client API Version. (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted response definition. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public void applicationsDelete(String subscriptionId, String resourceGroupName, String clusterName, String applicationName, String apiVersion) throws ApiException {
        applicationsDeleteWithHttpInfo(subscriptionId, resourceGroupName, clusterName, applicationName, apiVersion);
    }

    /**
     * 
     * Deletes the specified application on the HDInsight cluster.
     * @param subscriptionId The subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param clusterName The name of the cluster. (required)
     * @param applicationName The constant value for the application name. (required)
     * @param apiVersion The HDInsight client API Version. (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted response definition. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> applicationsDeleteWithHttpInfo(String subscriptionId, String resourceGroupName, String clusterName, String applicationName, String apiVersion) throws ApiException {
        okhttp3.Call localVarCall = applicationsDeleteValidateBeforeCall(subscriptionId, resourceGroupName, clusterName, applicationName, apiVersion, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     *  (asynchronously)
     * Deletes the specified application on the HDInsight cluster.
     * @param subscriptionId The subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param clusterName The name of the cluster. (required)
     * @param applicationName The constant value for the application name. (required)
     * @param apiVersion The HDInsight client API Version. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted response definition. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call applicationsDeleteAsync(String subscriptionId, String resourceGroupName, String clusterName, String applicationName, String apiVersion, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = applicationsDeleteValidateBeforeCall(subscriptionId, resourceGroupName, clusterName, applicationName, apiVersion, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for applicationsGet
     * @param subscriptionId The subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param clusterName The name of the cluster. (required)
     * @param applicationName The constant value for the application name. (required)
     * @param apiVersion The HDInsight client API Version. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call applicationsGetCall(String subscriptionId, String resourceGroupName, String clusterName, String applicationName, String apiVersion, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}/applications/{applicationName}"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "clusterName" + "}", localVarApiClient.escapeString(clusterName.toString()))
            .replace("{" + "applicationName" + "}", localVarApiClient.escapeString(applicationName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call applicationsGetValidateBeforeCall(String subscriptionId, String resourceGroupName, String clusterName, String applicationName, String apiVersion, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling applicationsGet(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling applicationsGet(Async)");
        }

        // verify the required parameter 'clusterName' is set
        if (clusterName == null) {
            throw new ApiException("Missing the required parameter 'clusterName' when calling applicationsGet(Async)");
        }

        // verify the required parameter 'applicationName' is set
        if (applicationName == null) {
            throw new ApiException("Missing the required parameter 'applicationName' when calling applicationsGet(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling applicationsGet(Async)");
        }

        return applicationsGetCall(subscriptionId, resourceGroupName, clusterName, applicationName, apiVersion, _callback);

    }

    /**
     * 
     * Gets properties of the specified application.
     * @param subscriptionId The subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param clusterName The name of the cluster. (required)
     * @param applicationName The constant value for the application name. (required)
     * @param apiVersion The HDInsight client API Version. (required)
     * @return Application
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public Application applicationsGet(String subscriptionId, String resourceGroupName, String clusterName, String applicationName, String apiVersion) throws ApiException {
        ApiResponse<Application> localVarResp = applicationsGetWithHttpInfo(subscriptionId, resourceGroupName, clusterName, applicationName, apiVersion);
        return localVarResp.getData();
    }

    /**
     * 
     * Gets properties of the specified application.
     * @param subscriptionId The subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param clusterName The name of the cluster. (required)
     * @param applicationName The constant value for the application name. (required)
     * @param apiVersion The HDInsight client API Version. (required)
     * @return ApiResponse&lt;Application&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Application> applicationsGetWithHttpInfo(String subscriptionId, String resourceGroupName, String clusterName, String applicationName, String apiVersion) throws ApiException {
        okhttp3.Call localVarCall = applicationsGetValidateBeforeCall(subscriptionId, resourceGroupName, clusterName, applicationName, apiVersion, null);
        Type localVarReturnType = new TypeToken<Application>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Gets properties of the specified application.
     * @param subscriptionId The subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param clusterName The name of the cluster. (required)
     * @param applicationName The constant value for the application name. (required)
     * @param apiVersion The HDInsight client API Version. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call applicationsGetAsync(String subscriptionId, String resourceGroupName, String clusterName, String applicationName, String apiVersion, final ApiCallback<Application> _callback) throws ApiException {

        okhttp3.Call localVarCall = applicationsGetValidateBeforeCall(subscriptionId, resourceGroupName, clusterName, applicationName, apiVersion, _callback);
        Type localVarReturnType = new TypeToken<Application>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for applicationsListByCluster
     * @param subscriptionId The subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param clusterName The name of the cluster. (required)
     * @param apiVersion The HDInsight client API Version. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call applicationsListByClusterCall(String subscriptionId, String resourceGroupName, String clusterName, String apiVersion, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}/applications"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "clusterName" + "}", localVarApiClient.escapeString(clusterName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call applicationsListByClusterValidateBeforeCall(String subscriptionId, String resourceGroupName, String clusterName, String apiVersion, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling applicationsListByCluster(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling applicationsListByCluster(Async)");
        }

        // verify the required parameter 'clusterName' is set
        if (clusterName == null) {
            throw new ApiException("Missing the required parameter 'clusterName' when calling applicationsListByCluster(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling applicationsListByCluster(Async)");
        }

        return applicationsListByClusterCall(subscriptionId, resourceGroupName, clusterName, apiVersion, _callback);

    }

    /**
     * 
     * Lists all of the applications for the HDInsight cluster.
     * @param subscriptionId The subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param clusterName The name of the cluster. (required)
     * @param apiVersion The HDInsight client API Version. (required)
     * @return ApplicationListResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ApplicationListResult applicationsListByCluster(String subscriptionId, String resourceGroupName, String clusterName, String apiVersion) throws ApiException {
        ApiResponse<ApplicationListResult> localVarResp = applicationsListByClusterWithHttpInfo(subscriptionId, resourceGroupName, clusterName, apiVersion);
        return localVarResp.getData();
    }

    /**
     * 
     * Lists all of the applications for the HDInsight cluster.
     * @param subscriptionId The subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param clusterName The name of the cluster. (required)
     * @param apiVersion The HDInsight client API Version. (required)
     * @return ApiResponse&lt;ApplicationListResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ApplicationListResult> applicationsListByClusterWithHttpInfo(String subscriptionId, String resourceGroupName, String clusterName, String apiVersion) throws ApiException {
        okhttp3.Call localVarCall = applicationsListByClusterValidateBeforeCall(subscriptionId, resourceGroupName, clusterName, apiVersion, null);
        Type localVarReturnType = new TypeToken<ApplicationListResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Lists all of the applications for the HDInsight cluster.
     * @param subscriptionId The subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param clusterName The name of the cluster. (required)
     * @param apiVersion The HDInsight client API Version. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call applicationsListByClusterAsync(String subscriptionId, String resourceGroupName, String clusterName, String apiVersion, final ApiCallback<ApplicationListResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = applicationsListByClusterValidateBeforeCall(subscriptionId, resourceGroupName, clusterName, apiVersion, _callback);
        Type localVarReturnType = new TypeToken<ApplicationListResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
