/**
 * HDInsightManagementClient
 * The HDInsight Management Client.
 *
 * The version of the OpenAPI document: 2015-03-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ApplicationPropertiesComputeProfileRolesInnerAutoscale from './ApplicationPropertiesComputeProfileRolesInnerAutoscale';
import ApplicationPropertiesComputeProfileRolesInnerDataDisksGroupsInner from './ApplicationPropertiesComputeProfileRolesInnerDataDisksGroupsInner';
import ApplicationPropertiesComputeProfileRolesInnerHardwareProfile from './ApplicationPropertiesComputeProfileRolesInnerHardwareProfile';
import ApplicationPropertiesComputeProfileRolesInnerOsProfile from './ApplicationPropertiesComputeProfileRolesInnerOsProfile';
import ApplicationPropertiesComputeProfileRolesInnerScriptActionsInner from './ApplicationPropertiesComputeProfileRolesInnerScriptActionsInner';
import ApplicationPropertiesComputeProfileRolesInnerVirtualNetworkProfile from './ApplicationPropertiesComputeProfileRolesInnerVirtualNetworkProfile';

/**
 * The ApplicationPropertiesComputeProfileRolesInner model module.
 * @module model/ApplicationPropertiesComputeProfileRolesInner
 * @version 2015-03-01-preview
 */
class ApplicationPropertiesComputeProfileRolesInner {
    /**
     * Constructs a new <code>ApplicationPropertiesComputeProfileRolesInner</code>.
     * Describes a role on the cluster.
     * @alias module:model/ApplicationPropertiesComputeProfileRolesInner
     */
    constructor() { 
        
        ApplicationPropertiesComputeProfileRolesInner.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ApplicationPropertiesComputeProfileRolesInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApplicationPropertiesComputeProfileRolesInner} obj Optional instance to populate.
     * @return {module:model/ApplicationPropertiesComputeProfileRolesInner} The populated <code>ApplicationPropertiesComputeProfileRolesInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApplicationPropertiesComputeProfileRolesInner();

            if (data.hasOwnProperty('autoscale')) {
                obj['autoscale'] = ApplicationPropertiesComputeProfileRolesInnerAutoscale.constructFromObject(data['autoscale']);
            }
            if (data.hasOwnProperty('dataDisksGroups')) {
                obj['dataDisksGroups'] = ApiClient.convertToType(data['dataDisksGroups'], [ApplicationPropertiesComputeProfileRolesInnerDataDisksGroupsInner]);
            }
            if (data.hasOwnProperty('hardwareProfile')) {
                obj['hardwareProfile'] = ApplicationPropertiesComputeProfileRolesInnerHardwareProfile.constructFromObject(data['hardwareProfile']);
            }
            if (data.hasOwnProperty('minInstanceCount')) {
                obj['minInstanceCount'] = ApiClient.convertToType(data['minInstanceCount'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('osProfile')) {
                obj['osProfile'] = ApplicationPropertiesComputeProfileRolesInnerOsProfile.constructFromObject(data['osProfile']);
            }
            if (data.hasOwnProperty('scriptActions')) {
                obj['scriptActions'] = ApiClient.convertToType(data['scriptActions'], [ApplicationPropertiesComputeProfileRolesInnerScriptActionsInner]);
            }
            if (data.hasOwnProperty('targetInstanceCount')) {
                obj['targetInstanceCount'] = ApiClient.convertToType(data['targetInstanceCount'], 'Number');
            }
            if (data.hasOwnProperty('virtualNetworkProfile')) {
                obj['virtualNetworkProfile'] = ApplicationPropertiesComputeProfileRolesInnerVirtualNetworkProfile.constructFromObject(data['virtualNetworkProfile']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ApplicationPropertiesComputeProfileRolesInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ApplicationPropertiesComputeProfileRolesInner</code>.
     */
    static validateJSON(data) {
        // validate the optional field `autoscale`
        if (data['autoscale']) { // data not null
          ApplicationPropertiesComputeProfileRolesInnerAutoscale.validateJSON(data['autoscale']);
        }
        if (data['dataDisksGroups']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['dataDisksGroups'])) {
                throw new Error("Expected the field `dataDisksGroups` to be an array in the JSON data but got " + data['dataDisksGroups']);
            }
            // validate the optional field `dataDisksGroups` (array)
            for (const item of data['dataDisksGroups']) {
                ApplicationPropertiesComputeProfileRolesInnerDataDisksGroupsInner.validateJSON(item);
            };
        }
        // validate the optional field `hardwareProfile`
        if (data['hardwareProfile']) { // data not null
          ApplicationPropertiesComputeProfileRolesInnerHardwareProfile.validateJSON(data['hardwareProfile']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `osProfile`
        if (data['osProfile']) { // data not null
          ApplicationPropertiesComputeProfileRolesInnerOsProfile.validateJSON(data['osProfile']);
        }
        if (data['scriptActions']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['scriptActions'])) {
                throw new Error("Expected the field `scriptActions` to be an array in the JSON data but got " + data['scriptActions']);
            }
            // validate the optional field `scriptActions` (array)
            for (const item of data['scriptActions']) {
                ApplicationPropertiesComputeProfileRolesInnerScriptActionsInner.validateJSON(item);
            };
        }
        // validate the optional field `virtualNetworkProfile`
        if (data['virtualNetworkProfile']) { // data not null
          ApplicationPropertiesComputeProfileRolesInnerVirtualNetworkProfile.validateJSON(data['virtualNetworkProfile']);
        }

        return true;
    }


}



/**
 * @member {module:model/ApplicationPropertiesComputeProfileRolesInnerAutoscale} autoscale
 */
ApplicationPropertiesComputeProfileRolesInner.prototype['autoscale'] = undefined;

/**
 * The data disks groups for the role.
 * @member {Array.<module:model/ApplicationPropertiesComputeProfileRolesInnerDataDisksGroupsInner>} dataDisksGroups
 */
ApplicationPropertiesComputeProfileRolesInner.prototype['dataDisksGroups'] = undefined;

/**
 * @member {module:model/ApplicationPropertiesComputeProfileRolesInnerHardwareProfile} hardwareProfile
 */
ApplicationPropertiesComputeProfileRolesInner.prototype['hardwareProfile'] = undefined;

/**
 * The minimum instance count of the cluster.
 * @member {Number} minInstanceCount
 */
ApplicationPropertiesComputeProfileRolesInner.prototype['minInstanceCount'] = undefined;

/**
 * The name of the role.
 * @member {String} name
 */
ApplicationPropertiesComputeProfileRolesInner.prototype['name'] = undefined;

/**
 * @member {module:model/ApplicationPropertiesComputeProfileRolesInnerOsProfile} osProfile
 */
ApplicationPropertiesComputeProfileRolesInner.prototype['osProfile'] = undefined;

/**
 * The list of script actions on the role.
 * @member {Array.<module:model/ApplicationPropertiesComputeProfileRolesInnerScriptActionsInner>} scriptActions
 */
ApplicationPropertiesComputeProfileRolesInner.prototype['scriptActions'] = undefined;

/**
 * The instance count of the cluster.
 * @member {Number} targetInstanceCount
 */
ApplicationPropertiesComputeProfileRolesInner.prototype['targetInstanceCount'] = undefined;

/**
 * @member {module:model/ApplicationPropertiesComputeProfileRolesInnerVirtualNetworkProfile} virtualNetworkProfile
 */
ApplicationPropertiesComputeProfileRolesInner.prototype['virtualNetworkProfile'] = undefined;






export default ApplicationPropertiesComputeProfileRolesInner;

