/**
 * HDInsightManagementClient
 * The HDInsight Management Client.
 *
 * The version of the OpenAPI document: 2015-03-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApplicationProperties_computeProfile_roles_inner_hardwareProfile.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApplicationProperties_computeProfile_roles_inner_hardwareProfile::OAIApplicationProperties_computeProfile_roles_inner_hardwareProfile(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApplicationProperties_computeProfile_roles_inner_hardwareProfile::OAIApplicationProperties_computeProfile_roles_inner_hardwareProfile() {
    this->initializeModel();
}

OAIApplicationProperties_computeProfile_roles_inner_hardwareProfile::~OAIApplicationProperties_computeProfile_roles_inner_hardwareProfile() {}

void OAIApplicationProperties_computeProfile_roles_inner_hardwareProfile::initializeModel() {

    m_vm_size_isSet = false;
    m_vm_size_isValid = false;
}

void OAIApplicationProperties_computeProfile_roles_inner_hardwareProfile::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIApplicationProperties_computeProfile_roles_inner_hardwareProfile::fromJsonObject(QJsonObject json) {

    m_vm_size_isValid = ::OpenAPI::fromJsonValue(m_vm_size, json[QString("vmSize")]);
    m_vm_size_isSet = !json[QString("vmSize")].isNull() && m_vm_size_isValid;
}

QString OAIApplicationProperties_computeProfile_roles_inner_hardwareProfile::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIApplicationProperties_computeProfile_roles_inner_hardwareProfile::asJsonObject() const {
    QJsonObject obj;
    if (m_vm_size_isSet) {
        obj.insert(QString("vmSize"), ::OpenAPI::toJsonValue(m_vm_size));
    }
    return obj;
}

QString OAIApplicationProperties_computeProfile_roles_inner_hardwareProfile::getVmSize() const {
    return m_vm_size;
}
void OAIApplicationProperties_computeProfile_roles_inner_hardwareProfile::setVmSize(const QString &vm_size) {
    m_vm_size = vm_size;
    m_vm_size_isSet = true;
}

bool OAIApplicationProperties_computeProfile_roles_inner_hardwareProfile::is_vm_size_Set() const{
    return m_vm_size_isSet;
}

bool OAIApplicationProperties_computeProfile_roles_inner_hardwareProfile::is_vm_size_Valid() const{
    return m_vm_size_isValid;
}

bool OAIApplicationProperties_computeProfile_roles_inner_hardwareProfile::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_vm_size_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIApplicationProperties_computeProfile_roles_inner_hardwareProfile::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
