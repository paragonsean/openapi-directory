/**
 * HDInsightManagementClient
 * The HDInsight Management Client.
 *
 * The version of the OpenAPI document: 2015-03-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIApplicationGetEndpoint.h
 *
 * Gets the application SSH endpoint
 */

#ifndef OAIApplicationGetEndpoint_H
#define OAIApplicationGetEndpoint_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIApplicationGetEndpoint : public OAIObject {
public:
    OAIApplicationGetEndpoint();
    OAIApplicationGetEndpoint(QString json);
    ~OAIApplicationGetEndpoint() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getDestinationPort() const;
    void setDestinationPort(const qint32 &destination_port);
    bool is_destination_port_Set() const;
    bool is_destination_port_Valid() const;

    QString getLocation() const;
    void setLocation(const QString &location);
    bool is_location_Set() const;
    bool is_location_Valid() const;

    qint32 getPublicPort() const;
    void setPublicPort(const qint32 &public_port);
    bool is_public_port_Set() const;
    bool is_public_port_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_destination_port;
    bool m_destination_port_isSet;
    bool m_destination_port_isValid;

    QString m_location;
    bool m_location_isSet;
    bool m_location_isValid;

    qint32 m_public_port;
    bool m_public_port_isSet;
    bool m_public_port_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIApplicationGetEndpoint)

#endif // OAIApplicationGetEndpoint_H
