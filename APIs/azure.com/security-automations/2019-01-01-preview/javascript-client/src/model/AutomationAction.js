/**
 * Security Center
 * API spec for Microsoft.Security (Azure Security Center) resource provider
 *
 * The version of the OpenAPI document: 2019-01-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AutomationAction model module.
 * @module model/AutomationAction
 * @version 2019-01-01-preview
 */
class AutomationAction {
    /**
     * Constructs a new <code>AutomationAction</code>.
     * The action that should be triggered.
     * @alias module:model/AutomationAction
     * @param actionType {module:model/AutomationAction.ActionTypeEnum} The type of the action that will be triggered by the Automation
     */
    constructor(actionType) { 
        
        AutomationAction.initialize(this, actionType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, actionType) { 
        obj['actionType'] = actionType;
    }

    /**
     * Constructs a <code>AutomationAction</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AutomationAction} obj Optional instance to populate.
     * @return {module:model/AutomationAction} The populated <code>AutomationAction</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AutomationAction();

            if (data.hasOwnProperty('actionType')) {
                obj['actionType'] = ApiClient.convertToType(data['actionType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AutomationAction</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AutomationAction</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AutomationAction.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['actionType'] && !(typeof data['actionType'] === 'string' || data['actionType'] instanceof String)) {
            throw new Error("Expected the field `actionType` to be a primitive type in the JSON string but got " + data['actionType']);
        }

        return true;
    }


}

AutomationAction.RequiredProperties = ["actionType"];

/**
 * The type of the action that will be triggered by the Automation
 * @member {module:model/AutomationAction.ActionTypeEnum} actionType
 */
AutomationAction.prototype['actionType'] = undefined;





/**
 * Allowed values for the <code>actionType</code> property.
 * @enum {String}
 * @readonly
 */
AutomationAction['ActionTypeEnum'] = {

    /**
     * value: "LogicApp"
     * @const
     */
    "LogicApp": "LogicApp",

    /**
     * value: "EventHub"
     * @const
     */
    "EventHub": "EventHub",

    /**
     * value: "Workspace"
     * @const
     */
    "Workspace": "Workspace"
};



export default AutomationAction;

