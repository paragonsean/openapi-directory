/**
 * Security Center
 * API spec for Microsoft.Security (Azure Security Center) resource provider
 *
 * The version of the OpenAPI document: 2019-01-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAutomationActionWorkspace.h
 *
 * The Log Analytics Workspace to which event data will be exported. Security alerts data will reside in the &#39;SecurityAlert&#39; table and the assessments data will reside in the &#39;SecurityRecommendation&#39; table (under the &#39;Security&#39;/&#39;SecurityCenterFree&#39; solutions). Note that in order to view the data in the workspace, the Security Center Log Analytics free/standard solution needs to be enabled on that workspace. To learn more about Security Center continuous export capabilities, visit https://aka.ms/ASCExportLearnMore
 */

#ifndef OAIAutomationActionWorkspace_H
#define OAIAutomationActionWorkspace_H

#include <QJsonObject>

#include "OAIAutomationAction.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAutomationActionWorkspace : public OAIObject {
public:
    OAIAutomationActionWorkspace();
    OAIAutomationActionWorkspace(QString json);
    ~OAIAutomationActionWorkspace() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getWorkspaceResourceId() const;
    void setWorkspaceResourceId(const QString &workspace_resource_id);
    bool is_workspace_resource_id_Set() const;
    bool is_workspace_resource_id_Valid() const;

    QString getActionType() const;
    void setActionType(const QString &action_type);
    bool is_action_type_Set() const;
    bool is_action_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_workspace_resource_id;
    bool m_workspace_resource_id_isSet;
    bool m_workspace_resource_id_isValid;

    QString m_action_type;
    bool m_action_type_isSet;
    bool m_action_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAutomationActionWorkspace)

#endif // OAIAutomationActionWorkspace_H
