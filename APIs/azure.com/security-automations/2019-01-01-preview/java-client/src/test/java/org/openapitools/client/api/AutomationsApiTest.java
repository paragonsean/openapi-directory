/*
 * Security Center
 * API spec for Microsoft.Security (Azure Security Center) resource provider
 *
 * The version of the OpenAPI document: 2019-01-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Automation;
import org.openapitools.client.model.AutomationList;
import org.openapitools.client.model.AutomationValidationStatus;
import org.openapitools.client.model.AutomationsListDefaultResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AutomationsApi
 */
@Disabled
public class AutomationsApiTest {

    private final AutomationsApi api = new AutomationsApi();

    /**
     * Creates or updates a security automation. If a security automation is already created and a subsequent request is issued for the same automation id, then it will be updated.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void automationsCreateOrUpdateTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String automationName = null;
        Automation automation = null;
        Automation response = api.automationsCreateOrUpdate(apiVersion, subscriptionId, resourceGroupName, automationName, automation);
        // TODO: test validations
    }

    /**
     * Deletes a security automation.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void automationsDeleteTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String automationName = null;
        api.automationsDelete(apiVersion, subscriptionId, resourceGroupName, automationName);
        // TODO: test validations
    }

    /**
     * Retrieves information about the model of a security automation.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void automationsGetTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String automationName = null;
        Automation response = api.automationsGet(apiVersion, subscriptionId, resourceGroupName, automationName);
        // TODO: test validations
    }

    /**
     * Lists all the security automations in the specified subscription. Use the &#39;nextLink&#39; property in the response to get the next page of security automations for the specified subscription.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void automationsListTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        AutomationList response = api.automationsList(apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Lists all the security automations in the specified resource group. Use the &#39;nextLink&#39; property in the response to get the next page of security automations for the specified resource group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void automationsListByResourceGroupTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        AutomationList response = api.automationsListByResourceGroup(apiVersion, subscriptionId, resourceGroupName);
        // TODO: test validations
    }

    /**
     * Validates the security automation model before create or update. Any validation errors are returned to the client.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void automationsValidateTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String automationName = null;
        Automation automation = null;
        AutomationValidationStatus response = api.automationsValidate(apiVersion, subscriptionId, resourceGroupName, automationName, automation);
        // TODO: test validations
    }

}
