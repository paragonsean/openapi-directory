# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.automation_action import AutomationAction
from openapi_server import util


class AutomationActionWorkspace(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, workspace_resource_id: str=None, action_type: str=None):
        """AutomationActionWorkspace - a model defined in OpenAPI

        :param workspace_resource_id: The workspace_resource_id of this AutomationActionWorkspace.
        :param action_type: The action_type of this AutomationActionWorkspace.
        """
        self.openapi_types = {
            'workspace_resource_id': str,
            'action_type': str
        }

        self.attribute_map = {
            'workspace_resource_id': 'workspaceResourceId',
            'action_type': 'actionType'
        }

        self._workspace_resource_id = workspace_resource_id
        self._action_type = action_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AutomationActionWorkspace':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AutomationActionWorkspace of this AutomationActionWorkspace.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def workspace_resource_id(self):
        """Gets the workspace_resource_id of this AutomationActionWorkspace.

        The fully qualified Log Analytics Workspace Azure Resource ID.

        :return: The workspace_resource_id of this AutomationActionWorkspace.
        :rtype: str
        """
        return self._workspace_resource_id

    @workspace_resource_id.setter
    def workspace_resource_id(self, workspace_resource_id):
        """Sets the workspace_resource_id of this AutomationActionWorkspace.

        The fully qualified Log Analytics Workspace Azure Resource ID.

        :param workspace_resource_id: The workspace_resource_id of this AutomationActionWorkspace.
        :type workspace_resource_id: str
        """

        self._workspace_resource_id = workspace_resource_id

    @property
    def action_type(self):
        """Gets the action_type of this AutomationActionWorkspace.

        The type of the action that will be triggered by the Automation

        :return: The action_type of this AutomationActionWorkspace.
        :rtype: str
        """
        return self._action_type

    @action_type.setter
    def action_type(self, action_type):
        """Sets the action_type of this AutomationActionWorkspace.

        The type of the action that will be triggered by the Automation

        :param action_type: The action_type of this AutomationActionWorkspace.
        :type action_type: str
        """
        allowed_values = ["LogicApp", "EventHub", "Workspace"]  # noqa: E501
        if action_type not in allowed_values:
            raise ValueError(
                "Invalid value for `action_type` ({0}), must be one of {1}"
                .format(action_type, allowed_values)
            )

        self._action_type = action_type
