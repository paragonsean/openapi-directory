# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.automation_action import AutomationAction
from openapi_server import util


class AutomationActionEventHub(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, connection_string: str=None, event_hub_resource_id: str=None, sas_policy_name: str=None, action_type: str=None):
        """AutomationActionEventHub - a model defined in OpenAPI

        :param connection_string: The connection_string of this AutomationActionEventHub.
        :param event_hub_resource_id: The event_hub_resource_id of this AutomationActionEventHub.
        :param sas_policy_name: The sas_policy_name of this AutomationActionEventHub.
        :param action_type: The action_type of this AutomationActionEventHub.
        """
        self.openapi_types = {
            'connection_string': str,
            'event_hub_resource_id': str,
            'sas_policy_name': str,
            'action_type': str
        }

        self.attribute_map = {
            'connection_string': 'connectionString',
            'event_hub_resource_id': 'eventHubResourceId',
            'sas_policy_name': 'sasPolicyName',
            'action_type': 'actionType'
        }

        self._connection_string = connection_string
        self._event_hub_resource_id = event_hub_resource_id
        self._sas_policy_name = sas_policy_name
        self._action_type = action_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AutomationActionEventHub':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AutomationActionEventHub of this AutomationActionEventHub.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def connection_string(self):
        """Gets the connection_string of this AutomationActionEventHub.

        The target Event Hub connection string (it will not be included in any response).

        :return: The connection_string of this AutomationActionEventHub.
        :rtype: str
        """
        return self._connection_string

    @connection_string.setter
    def connection_string(self, connection_string):
        """Sets the connection_string of this AutomationActionEventHub.

        The target Event Hub connection string (it will not be included in any response).

        :param connection_string: The connection_string of this AutomationActionEventHub.
        :type connection_string: str
        """

        self._connection_string = connection_string

    @property
    def event_hub_resource_id(self):
        """Gets the event_hub_resource_id of this AutomationActionEventHub.

        The target Event Hub Azure Resource ID.

        :return: The event_hub_resource_id of this AutomationActionEventHub.
        :rtype: str
        """
        return self._event_hub_resource_id

    @event_hub_resource_id.setter
    def event_hub_resource_id(self, event_hub_resource_id):
        """Sets the event_hub_resource_id of this AutomationActionEventHub.

        The target Event Hub Azure Resource ID.

        :param event_hub_resource_id: The event_hub_resource_id of this AutomationActionEventHub.
        :type event_hub_resource_id: str
        """

        self._event_hub_resource_id = event_hub_resource_id

    @property
    def sas_policy_name(self):
        """Gets the sas_policy_name of this AutomationActionEventHub.

        The target Event Hub SAS policy name.

        :return: The sas_policy_name of this AutomationActionEventHub.
        :rtype: str
        """
        return self._sas_policy_name

    @sas_policy_name.setter
    def sas_policy_name(self, sas_policy_name):
        """Sets the sas_policy_name of this AutomationActionEventHub.

        The target Event Hub SAS policy name.

        :param sas_policy_name: The sas_policy_name of this AutomationActionEventHub.
        :type sas_policy_name: str
        """

        self._sas_policy_name = sas_policy_name

    @property
    def action_type(self):
        """Gets the action_type of this AutomationActionEventHub.

        The type of the action that will be triggered by the Automation

        :return: The action_type of this AutomationActionEventHub.
        :rtype: str
        """
        return self._action_type

    @action_type.setter
    def action_type(self, action_type):
        """Sets the action_type of this AutomationActionEventHub.

        The type of the action that will be triggered by the Automation

        :param action_type: The action_type of this AutomationActionEventHub.
        :type action_type: str
        """
        allowed_values = ["LogicApp", "EventHub", "Workspace"]  # noqa: E501
        if action_type not in allowed_values:
            raise ValueError(
                "Invalid value for `action_type` ({0}), must be one of {1}"
                .format(action_type, allowed_values)
            )

        self._action_type = action_type
