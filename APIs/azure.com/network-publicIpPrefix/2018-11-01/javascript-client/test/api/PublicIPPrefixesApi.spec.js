/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2018-11-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.NetworkManagementClient);
  }
}(this, function(expect, NetworkManagementClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new NetworkManagementClient.PublicIPPrefixesApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('PublicIPPrefixesApi', function() {
    describe('publicIPPrefixesCreateOrUpdate', function() {
      it('should call publicIPPrefixesCreateOrUpdate successfully', function(done) {
        //uncomment below and update the code to test publicIPPrefixesCreateOrUpdate
        //instance.publicIPPrefixesCreateOrUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('publicIPPrefixesDelete', function() {
      it('should call publicIPPrefixesDelete successfully', function(done) {
        //uncomment below and update the code to test publicIPPrefixesDelete
        //instance.publicIPPrefixesDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('publicIPPrefixesGet', function() {
      it('should call publicIPPrefixesGet successfully', function(done) {
        //uncomment below and update the code to test publicIPPrefixesGet
        //instance.publicIPPrefixesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('publicIPPrefixesList', function() {
      it('should call publicIPPrefixesList successfully', function(done) {
        //uncomment below and update the code to test publicIPPrefixesList
        //instance.publicIPPrefixesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('publicIPPrefixesListAll', function() {
      it('should call publicIPPrefixesListAll successfully', function(done) {
        //uncomment below and update the code to test publicIPPrefixesListAll
        //instance.publicIPPrefixesListAll(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('publicIPPrefixesUpdateTags', function() {
      it('should call publicIPPrefixesUpdateTags successfully', function(done) {
        //uncomment below and update the code to test publicIPPrefixesUpdateTags
        //instance.publicIPPrefixesUpdateTags(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
