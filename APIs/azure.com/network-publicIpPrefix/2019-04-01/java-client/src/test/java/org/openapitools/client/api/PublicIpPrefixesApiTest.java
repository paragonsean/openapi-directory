/*
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-04-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.PublicIPPrefix;
import org.openapitools.client.model.PublicIPPrefixListResult;
import org.openapitools.client.model.PublicIPPrefixesUpdateTagsRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PublicIpPrefixesApi
 */
@Disabled
public class PublicIpPrefixesApiTest {

    private final PublicIpPrefixesApi api = new PublicIpPrefixesApi();

    /**
     * Creates or updates a static or dynamic public IP prefix.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void publicIPPrefixesCreateOrUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String publicIpPrefixName = null;
        String apiVersion = null;
        String subscriptionId = null;
        PublicIPPrefix parameters = null;
        PublicIPPrefix response = api.publicIPPrefixesCreateOrUpdate(resourceGroupName, publicIpPrefixName, apiVersion, subscriptionId, parameters);
        // TODO: test validations
    }

    /**
     * Deletes the specified public IP prefix.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void publicIPPrefixesDeleteTest() throws ApiException {
        String resourceGroupName = null;
        String publicIpPrefixName = null;
        String apiVersion = null;
        String subscriptionId = null;
        api.publicIPPrefixesDelete(resourceGroupName, publicIpPrefixName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Gets the specified public IP prefix in a specified resource group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void publicIPPrefixesGetTest() throws ApiException {
        String resourceGroupName = null;
        String publicIpPrefixName = null;
        String apiVersion = null;
        String subscriptionId = null;
        String $expand = null;
        PublicIPPrefix response = api.publicIPPrefixesGet(resourceGroupName, publicIpPrefixName, apiVersion, subscriptionId, $expand);
        // TODO: test validations
    }

    /**
     * Gets all public IP prefixes in a resource group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void publicIPPrefixesListTest() throws ApiException {
        String resourceGroupName = null;
        String apiVersion = null;
        String subscriptionId = null;
        PublicIPPrefixListResult response = api.publicIPPrefixesList(resourceGroupName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Gets all the public IP prefixes in a subscription.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void publicIPPrefixesListAllTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        PublicIPPrefixListResult response = api.publicIPPrefixesListAll(apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Updates public IP prefix tags.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void publicIPPrefixesUpdateTagsTest() throws ApiException {
        String resourceGroupName = null;
        String publicIpPrefixName = null;
        String apiVersion = null;
        String subscriptionId = null;
        PublicIPPrefixesUpdateTagsRequest parameters = null;
        PublicIPPrefix response = api.publicIPPrefixesUpdateTags(resourceGroupName, publicIpPrefixName, apiVersion, subscriptionId, parameters);
        // TODO: test validations
    }

}
