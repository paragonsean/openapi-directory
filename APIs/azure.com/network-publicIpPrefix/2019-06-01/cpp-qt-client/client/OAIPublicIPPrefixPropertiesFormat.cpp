/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-06-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPublicIPPrefixPropertiesFormat.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPublicIPPrefixPropertiesFormat::OAIPublicIPPrefixPropertiesFormat(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPublicIPPrefixPropertiesFormat::OAIPublicIPPrefixPropertiesFormat() {
    this->initializeModel();
}

OAIPublicIPPrefixPropertiesFormat::~OAIPublicIPPrefixPropertiesFormat() {}

void OAIPublicIPPrefixPropertiesFormat::initializeModel() {

    m_ip_prefix_isSet = false;
    m_ip_prefix_isValid = false;

    m_ip_tags_isSet = false;
    m_ip_tags_isValid = false;

    m_load_balancer_frontend_ip_configuration_isSet = false;
    m_load_balancer_frontend_ip_configuration_isValid = false;

    m_prefix_length_isSet = false;
    m_prefix_length_isValid = false;

    m_provisioning_state_isSet = false;
    m_provisioning_state_isValid = false;

    m_public_ip_address_version_isSet = false;
    m_public_ip_address_version_isValid = false;

    m_public_ip_addresses_isSet = false;
    m_public_ip_addresses_isValid = false;

    m_resource_guid_isSet = false;
    m_resource_guid_isValid = false;
}

void OAIPublicIPPrefixPropertiesFormat::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPublicIPPrefixPropertiesFormat::fromJsonObject(QJsonObject json) {

    m_ip_prefix_isValid = ::OpenAPI::fromJsonValue(m_ip_prefix, json[QString("ipPrefix")]);
    m_ip_prefix_isSet = !json[QString("ipPrefix")].isNull() && m_ip_prefix_isValid;

    m_ip_tags_isValid = ::OpenAPI::fromJsonValue(m_ip_tags, json[QString("ipTags")]);
    m_ip_tags_isSet = !json[QString("ipTags")].isNull() && m_ip_tags_isValid;

    m_load_balancer_frontend_ip_configuration_isValid = ::OpenAPI::fromJsonValue(m_load_balancer_frontend_ip_configuration, json[QString("loadBalancerFrontendIpConfiguration")]);
    m_load_balancer_frontend_ip_configuration_isSet = !json[QString("loadBalancerFrontendIpConfiguration")].isNull() && m_load_balancer_frontend_ip_configuration_isValid;

    m_prefix_length_isValid = ::OpenAPI::fromJsonValue(m_prefix_length, json[QString("prefixLength")]);
    m_prefix_length_isSet = !json[QString("prefixLength")].isNull() && m_prefix_length_isValid;

    m_provisioning_state_isValid = ::OpenAPI::fromJsonValue(m_provisioning_state, json[QString("provisioningState")]);
    m_provisioning_state_isSet = !json[QString("provisioningState")].isNull() && m_provisioning_state_isValid;

    m_public_ip_address_version_isValid = ::OpenAPI::fromJsonValue(m_public_ip_address_version, json[QString("publicIPAddressVersion")]);
    m_public_ip_address_version_isSet = !json[QString("publicIPAddressVersion")].isNull() && m_public_ip_address_version_isValid;

    m_public_ip_addresses_isValid = ::OpenAPI::fromJsonValue(m_public_ip_addresses, json[QString("publicIPAddresses")]);
    m_public_ip_addresses_isSet = !json[QString("publicIPAddresses")].isNull() && m_public_ip_addresses_isValid;

    m_resource_guid_isValid = ::OpenAPI::fromJsonValue(m_resource_guid, json[QString("resourceGuid")]);
    m_resource_guid_isSet = !json[QString("resourceGuid")].isNull() && m_resource_guid_isValid;
}

QString OAIPublicIPPrefixPropertiesFormat::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPublicIPPrefixPropertiesFormat::asJsonObject() const {
    QJsonObject obj;
    if (m_ip_prefix_isSet) {
        obj.insert(QString("ipPrefix"), ::OpenAPI::toJsonValue(m_ip_prefix));
    }
    if (m_ip_tags.size() > 0) {
        obj.insert(QString("ipTags"), ::OpenAPI::toJsonValue(m_ip_tags));
    }
    if (m_load_balancer_frontend_ip_configuration.isSet()) {
        obj.insert(QString("loadBalancerFrontendIpConfiguration"), ::OpenAPI::toJsonValue(m_load_balancer_frontend_ip_configuration));
    }
    if (m_prefix_length_isSet) {
        obj.insert(QString("prefixLength"), ::OpenAPI::toJsonValue(m_prefix_length));
    }
    if (m_provisioning_state_isSet) {
        obj.insert(QString("provisioningState"), ::OpenAPI::toJsonValue(m_provisioning_state));
    }
    if (m_public_ip_address_version_isSet) {
        obj.insert(QString("publicIPAddressVersion"), ::OpenAPI::toJsonValue(m_public_ip_address_version));
    }
    if (m_public_ip_addresses.size() > 0) {
        obj.insert(QString("publicIPAddresses"), ::OpenAPI::toJsonValue(m_public_ip_addresses));
    }
    if (m_resource_guid_isSet) {
        obj.insert(QString("resourceGuid"), ::OpenAPI::toJsonValue(m_resource_guid));
    }
    return obj;
}

QString OAIPublicIPPrefixPropertiesFormat::getIpPrefix() const {
    return m_ip_prefix;
}
void OAIPublicIPPrefixPropertiesFormat::setIpPrefix(const QString &ip_prefix) {
    m_ip_prefix = ip_prefix;
    m_ip_prefix_isSet = true;
}

bool OAIPublicIPPrefixPropertiesFormat::is_ip_prefix_Set() const{
    return m_ip_prefix_isSet;
}

bool OAIPublicIPPrefixPropertiesFormat::is_ip_prefix_Valid() const{
    return m_ip_prefix_isValid;
}

QList<OAIPublicIPPrefixPropertiesFormat_ipTags_inner> OAIPublicIPPrefixPropertiesFormat::getIpTags() const {
    return m_ip_tags;
}
void OAIPublicIPPrefixPropertiesFormat::setIpTags(const QList<OAIPublicIPPrefixPropertiesFormat_ipTags_inner> &ip_tags) {
    m_ip_tags = ip_tags;
    m_ip_tags_isSet = true;
}

bool OAIPublicIPPrefixPropertiesFormat::is_ip_tags_Set() const{
    return m_ip_tags_isSet;
}

bool OAIPublicIPPrefixPropertiesFormat::is_ip_tags_Valid() const{
    return m_ip_tags_isValid;
}

OAIPublicIPPrefixPropertiesFormat_loadBalancerFrontendIpConfiguration OAIPublicIPPrefixPropertiesFormat::getLoadBalancerFrontendIpConfiguration() const {
    return m_load_balancer_frontend_ip_configuration;
}
void OAIPublicIPPrefixPropertiesFormat::setLoadBalancerFrontendIpConfiguration(const OAIPublicIPPrefixPropertiesFormat_loadBalancerFrontendIpConfiguration &load_balancer_frontend_ip_configuration) {
    m_load_balancer_frontend_ip_configuration = load_balancer_frontend_ip_configuration;
    m_load_balancer_frontend_ip_configuration_isSet = true;
}

bool OAIPublicIPPrefixPropertiesFormat::is_load_balancer_frontend_ip_configuration_Set() const{
    return m_load_balancer_frontend_ip_configuration_isSet;
}

bool OAIPublicIPPrefixPropertiesFormat::is_load_balancer_frontend_ip_configuration_Valid() const{
    return m_load_balancer_frontend_ip_configuration_isValid;
}

qint32 OAIPublicIPPrefixPropertiesFormat::getPrefixLength() const {
    return m_prefix_length;
}
void OAIPublicIPPrefixPropertiesFormat::setPrefixLength(const qint32 &prefix_length) {
    m_prefix_length = prefix_length;
    m_prefix_length_isSet = true;
}

bool OAIPublicIPPrefixPropertiesFormat::is_prefix_length_Set() const{
    return m_prefix_length_isSet;
}

bool OAIPublicIPPrefixPropertiesFormat::is_prefix_length_Valid() const{
    return m_prefix_length_isValid;
}

QString OAIPublicIPPrefixPropertiesFormat::getProvisioningState() const {
    return m_provisioning_state;
}
void OAIPublicIPPrefixPropertiesFormat::setProvisioningState(const QString &provisioning_state) {
    m_provisioning_state = provisioning_state;
    m_provisioning_state_isSet = true;
}

bool OAIPublicIPPrefixPropertiesFormat::is_provisioning_state_Set() const{
    return m_provisioning_state_isSet;
}

bool OAIPublicIPPrefixPropertiesFormat::is_provisioning_state_Valid() const{
    return m_provisioning_state_isValid;
}

QString OAIPublicIPPrefixPropertiesFormat::getPublicIpAddressVersion() const {
    return m_public_ip_address_version;
}
void OAIPublicIPPrefixPropertiesFormat::setPublicIpAddressVersion(const QString &public_ip_address_version) {
    m_public_ip_address_version = public_ip_address_version;
    m_public_ip_address_version_isSet = true;
}

bool OAIPublicIPPrefixPropertiesFormat::is_public_ip_address_version_Set() const{
    return m_public_ip_address_version_isSet;
}

bool OAIPublicIPPrefixPropertiesFormat::is_public_ip_address_version_Valid() const{
    return m_public_ip_address_version_isValid;
}

QList<OAIReferencedPublicIpAddress> OAIPublicIPPrefixPropertiesFormat::getPublicIpAddresses() const {
    return m_public_ip_addresses;
}
void OAIPublicIPPrefixPropertiesFormat::setPublicIpAddresses(const QList<OAIReferencedPublicIpAddress> &public_ip_addresses) {
    m_public_ip_addresses = public_ip_addresses;
    m_public_ip_addresses_isSet = true;
}

bool OAIPublicIPPrefixPropertiesFormat::is_public_ip_addresses_Set() const{
    return m_public_ip_addresses_isSet;
}

bool OAIPublicIPPrefixPropertiesFormat::is_public_ip_addresses_Valid() const{
    return m_public_ip_addresses_isValid;
}

QString OAIPublicIPPrefixPropertiesFormat::getResourceGuid() const {
    return m_resource_guid;
}
void OAIPublicIPPrefixPropertiesFormat::setResourceGuid(const QString &resource_guid) {
    m_resource_guid = resource_guid;
    m_resource_guid_isSet = true;
}

bool OAIPublicIPPrefixPropertiesFormat::is_resource_guid_Set() const{
    return m_resource_guid_isSet;
}

bool OAIPublicIPPrefixPropertiesFormat::is_resource_guid_Valid() const{
    return m_resource_guid_isValid;
}

bool OAIPublicIPPrefixPropertiesFormat::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_ip_prefix_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ip_tags.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_load_balancer_frontend_ip_configuration.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_prefix_length_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_provisioning_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_public_ip_address_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_public_ip_addresses.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_guid_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPublicIPPrefixPropertiesFormat::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
