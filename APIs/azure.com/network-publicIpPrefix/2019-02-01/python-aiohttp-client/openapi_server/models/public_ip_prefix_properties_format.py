# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.public_ip_prefix_properties_format_ip_tags_inner import PublicIPPrefixPropertiesFormatIpTagsInner
from openapi_server.models.public_ip_prefix_properties_format_load_balancer_frontend_ip_configuration import PublicIPPrefixPropertiesFormatLoadBalancerFrontendIpConfiguration
from openapi_server.models.referenced_public_ip_address import ReferencedPublicIpAddress
from openapi_server import util


class PublicIPPrefixPropertiesFormat(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ip_prefix: str=None, ip_tags: List[PublicIPPrefixPropertiesFormatIpTagsInner]=None, load_balancer_frontend_ip_configuration: PublicIPPrefixPropertiesFormatLoadBalancerFrontendIpConfiguration=None, prefix_length: int=None, provisioning_state: str=None, public_ip_address_version: str=None, public_ip_addresses: List[ReferencedPublicIpAddress]=None, resource_guid: str=None):
        """PublicIPPrefixPropertiesFormat - a model defined in OpenAPI

        :param ip_prefix: The ip_prefix of this PublicIPPrefixPropertiesFormat.
        :param ip_tags: The ip_tags of this PublicIPPrefixPropertiesFormat.
        :param load_balancer_frontend_ip_configuration: The load_balancer_frontend_ip_configuration of this PublicIPPrefixPropertiesFormat.
        :param prefix_length: The prefix_length of this PublicIPPrefixPropertiesFormat.
        :param provisioning_state: The provisioning_state of this PublicIPPrefixPropertiesFormat.
        :param public_ip_address_version: The public_ip_address_version of this PublicIPPrefixPropertiesFormat.
        :param public_ip_addresses: The public_ip_addresses of this PublicIPPrefixPropertiesFormat.
        :param resource_guid: The resource_guid of this PublicIPPrefixPropertiesFormat.
        """
        self.openapi_types = {
            'ip_prefix': str,
            'ip_tags': List[PublicIPPrefixPropertiesFormatIpTagsInner],
            'load_balancer_frontend_ip_configuration': PublicIPPrefixPropertiesFormatLoadBalancerFrontendIpConfiguration,
            'prefix_length': int,
            'provisioning_state': str,
            'public_ip_address_version': str,
            'public_ip_addresses': List[ReferencedPublicIpAddress],
            'resource_guid': str
        }

        self.attribute_map = {
            'ip_prefix': 'ipPrefix',
            'ip_tags': 'ipTags',
            'load_balancer_frontend_ip_configuration': 'loadBalancerFrontendIpConfiguration',
            'prefix_length': 'prefixLength',
            'provisioning_state': 'provisioningState',
            'public_ip_address_version': 'publicIPAddressVersion',
            'public_ip_addresses': 'publicIPAddresses',
            'resource_guid': 'resourceGuid'
        }

        self._ip_prefix = ip_prefix
        self._ip_tags = ip_tags
        self._load_balancer_frontend_ip_configuration = load_balancer_frontend_ip_configuration
        self._prefix_length = prefix_length
        self._provisioning_state = provisioning_state
        self._public_ip_address_version = public_ip_address_version
        self._public_ip_addresses = public_ip_addresses
        self._resource_guid = resource_guid

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PublicIPPrefixPropertiesFormat':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PublicIPPrefixPropertiesFormat of this PublicIPPrefixPropertiesFormat.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ip_prefix(self):
        """Gets the ip_prefix of this PublicIPPrefixPropertiesFormat.

        The allocated Prefix.

        :return: The ip_prefix of this PublicIPPrefixPropertiesFormat.
        :rtype: str
        """
        return self._ip_prefix

    @ip_prefix.setter
    def ip_prefix(self, ip_prefix):
        """Sets the ip_prefix of this PublicIPPrefixPropertiesFormat.

        The allocated Prefix.

        :param ip_prefix: The ip_prefix of this PublicIPPrefixPropertiesFormat.
        :type ip_prefix: str
        """

        self._ip_prefix = ip_prefix

    @property
    def ip_tags(self):
        """Gets the ip_tags of this PublicIPPrefixPropertiesFormat.

        The list of tags associated with the public IP prefix.

        :return: The ip_tags of this PublicIPPrefixPropertiesFormat.
        :rtype: List[PublicIPPrefixPropertiesFormatIpTagsInner]
        """
        return self._ip_tags

    @ip_tags.setter
    def ip_tags(self, ip_tags):
        """Sets the ip_tags of this PublicIPPrefixPropertiesFormat.

        The list of tags associated with the public IP prefix.

        :param ip_tags: The ip_tags of this PublicIPPrefixPropertiesFormat.
        :type ip_tags: List[PublicIPPrefixPropertiesFormatIpTagsInner]
        """

        self._ip_tags = ip_tags

    @property
    def load_balancer_frontend_ip_configuration(self):
        """Gets the load_balancer_frontend_ip_configuration of this PublicIPPrefixPropertiesFormat.


        :return: The load_balancer_frontend_ip_configuration of this PublicIPPrefixPropertiesFormat.
        :rtype: PublicIPPrefixPropertiesFormatLoadBalancerFrontendIpConfiguration
        """
        return self._load_balancer_frontend_ip_configuration

    @load_balancer_frontend_ip_configuration.setter
    def load_balancer_frontend_ip_configuration(self, load_balancer_frontend_ip_configuration):
        """Sets the load_balancer_frontend_ip_configuration of this PublicIPPrefixPropertiesFormat.


        :param load_balancer_frontend_ip_configuration: The load_balancer_frontend_ip_configuration of this PublicIPPrefixPropertiesFormat.
        :type load_balancer_frontend_ip_configuration: PublicIPPrefixPropertiesFormatLoadBalancerFrontendIpConfiguration
        """

        self._load_balancer_frontend_ip_configuration = load_balancer_frontend_ip_configuration

    @property
    def prefix_length(self):
        """Gets the prefix_length of this PublicIPPrefixPropertiesFormat.

        The Length of the Public IP Prefix.

        :return: The prefix_length of this PublicIPPrefixPropertiesFormat.
        :rtype: int
        """
        return self._prefix_length

    @prefix_length.setter
    def prefix_length(self, prefix_length):
        """Sets the prefix_length of this PublicIPPrefixPropertiesFormat.

        The Length of the Public IP Prefix.

        :param prefix_length: The prefix_length of this PublicIPPrefixPropertiesFormat.
        :type prefix_length: int
        """

        self._prefix_length = prefix_length

    @property
    def provisioning_state(self):
        """Gets the provisioning_state of this PublicIPPrefixPropertiesFormat.

        The provisioning state of the Public IP prefix resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.

        :return: The provisioning_state of this PublicIPPrefixPropertiesFormat.
        :rtype: str
        """
        return self._provisioning_state

    @provisioning_state.setter
    def provisioning_state(self, provisioning_state):
        """Sets the provisioning_state of this PublicIPPrefixPropertiesFormat.

        The provisioning state of the Public IP prefix resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.

        :param provisioning_state: The provisioning_state of this PublicIPPrefixPropertiesFormat.
        :type provisioning_state: str
        """

        self._provisioning_state = provisioning_state

    @property
    def public_ip_address_version(self):
        """Gets the public_ip_address_version of this PublicIPPrefixPropertiesFormat.

        IP address version.

        :return: The public_ip_address_version of this PublicIPPrefixPropertiesFormat.
        :rtype: str
        """
        return self._public_ip_address_version

    @public_ip_address_version.setter
    def public_ip_address_version(self, public_ip_address_version):
        """Sets the public_ip_address_version of this PublicIPPrefixPropertiesFormat.

        IP address version.

        :param public_ip_address_version: The public_ip_address_version of this PublicIPPrefixPropertiesFormat.
        :type public_ip_address_version: str
        """
        allowed_values = ["IPv4", "IPv6"]  # noqa: E501
        if public_ip_address_version not in allowed_values:
            raise ValueError(
                "Invalid value for `public_ip_address_version` ({0}), must be one of {1}"
                .format(public_ip_address_version, allowed_values)
            )

        self._public_ip_address_version = public_ip_address_version

    @property
    def public_ip_addresses(self):
        """Gets the public_ip_addresses of this PublicIPPrefixPropertiesFormat.

        The list of all referenced PublicIPAddresses.

        :return: The public_ip_addresses of this PublicIPPrefixPropertiesFormat.
        :rtype: List[ReferencedPublicIpAddress]
        """
        return self._public_ip_addresses

    @public_ip_addresses.setter
    def public_ip_addresses(self, public_ip_addresses):
        """Sets the public_ip_addresses of this PublicIPPrefixPropertiesFormat.

        The list of all referenced PublicIPAddresses.

        :param public_ip_addresses: The public_ip_addresses of this PublicIPPrefixPropertiesFormat.
        :type public_ip_addresses: List[ReferencedPublicIpAddress]
        """

        self._public_ip_addresses = public_ip_addresses

    @property
    def resource_guid(self):
        """Gets the resource_guid of this PublicIPPrefixPropertiesFormat.

        The resource GUID property of the public IP prefix resource.

        :return: The resource_guid of this PublicIPPrefixPropertiesFormat.
        :rtype: str
        """
        return self._resource_guid

    @resource_guid.setter
    def resource_guid(self, resource_guid):
        """Sets the resource_guid of this PublicIPPrefixPropertiesFormat.

        The resource GUID property of the public IP prefix resource.

        :param resource_guid: The resource_guid of this PublicIPPrefixPropertiesFormat.
        :type resource_guid: str
        """

        self._resource_guid = resource_guid
