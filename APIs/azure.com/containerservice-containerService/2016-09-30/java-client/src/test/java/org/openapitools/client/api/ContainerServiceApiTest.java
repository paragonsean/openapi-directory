/*
 * ContainerServiceClient
 * The Container Service Client.
 *
 * The version of the OpenAPI document: 2016-09-30
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ContainerService;
import org.openapitools.client.model.ContainerServiceListResult;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ContainerServiceApi
 */
@Disabled
public class ContainerServiceApiTest {

    private final ContainerServiceApi api = new ContainerServiceApi();

    /**
     * Deletes the specified container service.
     *
     * Deletes the specified container service in the specified subscription and resource group. The operation does not delete other resources created as part of creating a container service, including storage accounts, VMs, and availability sets. All the other resources created with the container service are part of the same resource group and can be deleted individually.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void containerServicesDeleteTest() throws ApiException {
        String resourceGroupName = null;
        String containerServiceName = null;
        String apiVersion = null;
        String subscriptionId = null;
        api.containerServicesDelete(resourceGroupName, containerServiceName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Gets the properties of the specified container service.
     *
     * Gets the properties of the specified container service in the specified subscription and resource group. The operation returns the properties including state, orchestrator, number of masters and agents, and FQDNs of masters and agents. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void containerServicesGetTest() throws ApiException {
        String resourceGroupName = null;
        String containerServiceName = null;
        String apiVersion = null;
        String subscriptionId = null;
        ContainerService response = api.containerServicesGet(resourceGroupName, containerServiceName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Gets a list of container services in the specified resource group.
     *
     * Gets a list of container services in the specified subscription and resource group. The operation returns properties of each container service including state, orchestrator, number of masters and agents, and FQDNs of masters and agents.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void containerServicesListByResourceGroupTest() throws ApiException {
        String resourceGroupName = null;
        String apiVersion = null;
        String subscriptionId = null;
        ContainerServiceListResult response = api.containerServicesListByResourceGroup(resourceGroupName, apiVersion, subscriptionId);
        // TODO: test validations
    }

}
