/**
 * ContainerServiceClient
 * The Container Service Client.
 *
 * The version of the OpenAPI document: 2017-07-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIKeyVaultSecretRef.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIKeyVaultSecretRef::OAIKeyVaultSecretRef(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIKeyVaultSecretRef::OAIKeyVaultSecretRef() {
    this->initializeModel();
}

OAIKeyVaultSecretRef::~OAIKeyVaultSecretRef() {}

void OAIKeyVaultSecretRef::initializeModel() {

    m_secret_name_isSet = false;
    m_secret_name_isValid = false;

    m_vault_id_isSet = false;
    m_vault_id_isValid = false;

    m_version_isSet = false;
    m_version_isValid = false;
}

void OAIKeyVaultSecretRef::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIKeyVaultSecretRef::fromJsonObject(QJsonObject json) {

    m_secret_name_isValid = ::OpenAPI::fromJsonValue(m_secret_name, json[QString("secretName")]);
    m_secret_name_isSet = !json[QString("secretName")].isNull() && m_secret_name_isValid;

    m_vault_id_isValid = ::OpenAPI::fromJsonValue(m_vault_id, json[QString("vaultID")]);
    m_vault_id_isSet = !json[QString("vaultID")].isNull() && m_vault_id_isValid;

    m_version_isValid = ::OpenAPI::fromJsonValue(m_version, json[QString("version")]);
    m_version_isSet = !json[QString("version")].isNull() && m_version_isValid;
}

QString OAIKeyVaultSecretRef::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIKeyVaultSecretRef::asJsonObject() const {
    QJsonObject obj;
    if (m_secret_name_isSet) {
        obj.insert(QString("secretName"), ::OpenAPI::toJsonValue(m_secret_name));
    }
    if (m_vault_id_isSet) {
        obj.insert(QString("vaultID"), ::OpenAPI::toJsonValue(m_vault_id));
    }
    if (m_version_isSet) {
        obj.insert(QString("version"), ::OpenAPI::toJsonValue(m_version));
    }
    return obj;
}

QString OAIKeyVaultSecretRef::getSecretName() const {
    return m_secret_name;
}
void OAIKeyVaultSecretRef::setSecretName(const QString &secret_name) {
    m_secret_name = secret_name;
    m_secret_name_isSet = true;
}

bool OAIKeyVaultSecretRef::is_secret_name_Set() const{
    return m_secret_name_isSet;
}

bool OAIKeyVaultSecretRef::is_secret_name_Valid() const{
    return m_secret_name_isValid;
}

QString OAIKeyVaultSecretRef::getVaultId() const {
    return m_vault_id;
}
void OAIKeyVaultSecretRef::setVaultId(const QString &vault_id) {
    m_vault_id = vault_id;
    m_vault_id_isSet = true;
}

bool OAIKeyVaultSecretRef::is_vault_id_Set() const{
    return m_vault_id_isSet;
}

bool OAIKeyVaultSecretRef::is_vault_id_Valid() const{
    return m_vault_id_isValid;
}

QString OAIKeyVaultSecretRef::getVersion() const {
    return m_version;
}
void OAIKeyVaultSecretRef::setVersion(const QString &version) {
    m_version = version;
    m_version_isSet = true;
}

bool OAIKeyVaultSecretRef::is_version_Set() const{
    return m_version_isSet;
}

bool OAIKeyVaultSecretRef::is_version_Valid() const{
    return m_version_isValid;
}

bool OAIKeyVaultSecretRef::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_secret_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_vault_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_version_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIKeyVaultSecretRef::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_secret_name_isValid && m_vault_id_isValid && true;
}

} // namespace OpenAPI
