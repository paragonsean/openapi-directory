/**
 * ContainerServiceClient
 * The Container Service Client.
 *
 * The version of the OpenAPI document: 2017-07-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ContainerServiceStorageProfile from './ContainerServiceStorageProfile';
import ContainerServiceVMSize from './ContainerServiceVMSize';
import OSType from './OSType';

/**
 * The ContainerServiceAgentPoolProfile model module.
 * @module model/ContainerServiceAgentPoolProfile
 * @version 2017-07-01
 */
class ContainerServiceAgentPoolProfile {
    /**
     * Constructs a new <code>ContainerServiceAgentPoolProfile</code>.
     * Profile for the container service agent pool.
     * @alias module:model/ContainerServiceAgentPoolProfile
     * @param name {String} Unique name of the agent pool profile in the context of the subscription and resource group.
     * @param vmSize {module:model/ContainerServiceVMSize} 
     */
    constructor(name, vmSize) { 
        
        ContainerServiceAgentPoolProfile.initialize(this, name, vmSize);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, vmSize) { 
        obj['count'] = 1;
        obj['name'] = name;
        obj['vmSize'] = vmSize;
    }

    /**
     * Constructs a <code>ContainerServiceAgentPoolProfile</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ContainerServiceAgentPoolProfile} obj Optional instance to populate.
     * @return {module:model/ContainerServiceAgentPoolProfile} The populated <code>ContainerServiceAgentPoolProfile</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ContainerServiceAgentPoolProfile();

            if (data.hasOwnProperty('count')) {
                obj['count'] = ApiClient.convertToType(data['count'], 'Number');
            }
            if (data.hasOwnProperty('dnsPrefix')) {
                obj['dnsPrefix'] = ApiClient.convertToType(data['dnsPrefix'], 'String');
            }
            if (data.hasOwnProperty('fqdn')) {
                obj['fqdn'] = ApiClient.convertToType(data['fqdn'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('osDiskSizeGB')) {
                obj['osDiskSizeGB'] = ApiClient.convertToType(data['osDiskSizeGB'], 'Number');
            }
            if (data.hasOwnProperty('osType')) {
                obj['osType'] = OSType.constructFromObject(data['osType']);
            }
            if (data.hasOwnProperty('ports')) {
                obj['ports'] = ApiClient.convertToType(data['ports'], ['Number']);
            }
            if (data.hasOwnProperty('storageProfile')) {
                obj['storageProfile'] = ContainerServiceStorageProfile.constructFromObject(data['storageProfile']);
            }
            if (data.hasOwnProperty('vmSize')) {
                obj['vmSize'] = ContainerServiceVMSize.constructFromObject(data['vmSize']);
            }
            if (data.hasOwnProperty('vnetSubnetID')) {
                obj['vnetSubnetID'] = ApiClient.convertToType(data['vnetSubnetID'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ContainerServiceAgentPoolProfile</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ContainerServiceAgentPoolProfile</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ContainerServiceAgentPoolProfile.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['dnsPrefix'] && !(typeof data['dnsPrefix'] === 'string' || data['dnsPrefix'] instanceof String)) {
            throw new Error("Expected the field `dnsPrefix` to be a primitive type in the JSON string but got " + data['dnsPrefix']);
        }
        // ensure the json data is a string
        if (data['fqdn'] && !(typeof data['fqdn'] === 'string' || data['fqdn'] instanceof String)) {
            throw new Error("Expected the field `fqdn` to be a primitive type in the JSON string but got " + data['fqdn']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['ports'])) {
            throw new Error("Expected the field `ports` to be an array in the JSON data but got " + data['ports']);
        }
        // ensure the json data is a string
        if (data['vnetSubnetID'] && !(typeof data['vnetSubnetID'] === 'string' || data['vnetSubnetID'] instanceof String)) {
            throw new Error("Expected the field `vnetSubnetID` to be a primitive type in the JSON string but got " + data['vnetSubnetID']);
        }

        return true;
    }


}

ContainerServiceAgentPoolProfile.RequiredProperties = ["name", "vmSize"];

/**
 * Number of agents (VMs) to host docker containers. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1. 
 * @member {Number} count
 * @default 1
 */
ContainerServiceAgentPoolProfile.prototype['count'] = 1;

/**
 * DNS prefix to be used to create the FQDN for the agent pool.
 * @member {String} dnsPrefix
 */
ContainerServiceAgentPoolProfile.prototype['dnsPrefix'] = undefined;

/**
 * FQDN for the agent pool.
 * @member {String} fqdn
 */
ContainerServiceAgentPoolProfile.prototype['fqdn'] = undefined;

/**
 * Unique name of the agent pool profile in the context of the subscription and resource group.
 * @member {String} name
 */
ContainerServiceAgentPoolProfile.prototype['name'] = undefined;

/**
 * OS Disk Size in GB to be used to specify the disk size for every machine in this master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified.
 * @member {Number} osDiskSizeGB
 */
ContainerServiceAgentPoolProfile.prototype['osDiskSizeGB'] = undefined;

/**
 * @member {module:model/OSType} osType
 */
ContainerServiceAgentPoolProfile.prototype['osType'] = undefined;

/**
 * Ports number array used to expose on this agent pool. The default opened ports are different based on your choice of orchestrator.
 * @member {Array.<Number>} ports
 */
ContainerServiceAgentPoolProfile.prototype['ports'] = undefined;

/**
 * @member {module:model/ContainerServiceStorageProfile} storageProfile
 */
ContainerServiceAgentPoolProfile.prototype['storageProfile'] = undefined;

/**
 * @member {module:model/ContainerServiceVMSize} vmSize
 */
ContainerServiceAgentPoolProfile.prototype['vmSize'] = undefined;

/**
 * VNet SubnetID specifies the VNet's subnet identifier.
 * @member {String} vnetSubnetID
 */
ContainerServiceAgentPoolProfile.prototype['vnetSubnetID'] = undefined;






export default ContainerServiceAgentPoolProfile;

