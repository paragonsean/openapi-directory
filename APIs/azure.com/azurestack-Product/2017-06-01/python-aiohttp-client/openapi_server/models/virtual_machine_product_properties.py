# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.data_disk_image import DataDiskImage
from openapi_server.models.os_disk_image import OsDiskImage
from openapi_server import util


class VirtualMachineProductProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, data_disk_images: List[DataDiskImage]=None, os_disk_image: OsDiskImage=None, version: str=None):
        """VirtualMachineProductProperties - a model defined in OpenAPI

        :param data_disk_images: The data_disk_images of this VirtualMachineProductProperties.
        :param os_disk_image: The os_disk_image of this VirtualMachineProductProperties.
        :param version: The version of this VirtualMachineProductProperties.
        """
        self.openapi_types = {
            'data_disk_images': List[DataDiskImage],
            'os_disk_image': OsDiskImage,
            'version': str
        }

        self.attribute_map = {
            'data_disk_images': 'dataDiskImages',
            'os_disk_image': 'osDiskImage',
            'version': 'version'
        }

        self._data_disk_images = data_disk_images
        self._os_disk_image = os_disk_image
        self._version = version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VirtualMachineProductProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VirtualMachineProductProperties of this VirtualMachineProductProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def data_disk_images(self):
        """Gets the data_disk_images of this VirtualMachineProductProperties.

        List of attached data disks.

        :return: The data_disk_images of this VirtualMachineProductProperties.
        :rtype: List[DataDiskImage]
        """
        return self._data_disk_images

    @data_disk_images.setter
    def data_disk_images(self, data_disk_images):
        """Sets the data_disk_images of this VirtualMachineProductProperties.

        List of attached data disks.

        :param data_disk_images: The data_disk_images of this VirtualMachineProductProperties.
        :type data_disk_images: List[DataDiskImage]
        """

        self._data_disk_images = data_disk_images

    @property
    def os_disk_image(self):
        """Gets the os_disk_image of this VirtualMachineProductProperties.


        :return: The os_disk_image of this VirtualMachineProductProperties.
        :rtype: OsDiskImage
        """
        return self._os_disk_image

    @os_disk_image.setter
    def os_disk_image(self, os_disk_image):
        """Sets the os_disk_image of this VirtualMachineProductProperties.


        :param os_disk_image: The os_disk_image of this VirtualMachineProductProperties.
        :type os_disk_image: OsDiskImage
        """

        self._os_disk_image = os_disk_image

    @property
    def version(self):
        """Gets the version of this VirtualMachineProductProperties.

        Specifies product version.

        :return: The version of this VirtualMachineProductProperties.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this VirtualMachineProductProperties.

        Specifies product version.

        :param version: The version of this VirtualMachineProductProperties.
        :type version: str
        """

        self._version = version
