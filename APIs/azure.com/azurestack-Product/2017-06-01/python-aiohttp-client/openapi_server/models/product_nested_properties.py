# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.compatibility import Compatibility
from openapi_server.models.icon_uris import IconUris
from openapi_server.models.product_link import ProductLink
from openapi_server.models.product_properties import ProductProperties
from openapi_server import util


class ProductNestedProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, billing_part_number: str=None, compatibility: Compatibility=None, description: str=None, display_name: str=None, gallery_item_identity: str=None, icon_uris: IconUris=None, legal_terms: str=None, links: List[ProductLink]=None, offer: str=None, offer_version: str=None, payload_length: int=None, privacy_policy: str=None, product_kind: str=None, product_properties: ProductProperties=None, publisher_display_name: str=None, publisher_identifier: str=None, sku: str=None, vm_extension_type: str=None):
        """ProductNestedProperties - a model defined in OpenAPI

        :param billing_part_number: The billing_part_number of this ProductNestedProperties.
        :param compatibility: The compatibility of this ProductNestedProperties.
        :param description: The description of this ProductNestedProperties.
        :param display_name: The display_name of this ProductNestedProperties.
        :param gallery_item_identity: The gallery_item_identity of this ProductNestedProperties.
        :param icon_uris: The icon_uris of this ProductNestedProperties.
        :param legal_terms: The legal_terms of this ProductNestedProperties.
        :param links: The links of this ProductNestedProperties.
        :param offer: The offer of this ProductNestedProperties.
        :param offer_version: The offer_version of this ProductNestedProperties.
        :param payload_length: The payload_length of this ProductNestedProperties.
        :param privacy_policy: The privacy_policy of this ProductNestedProperties.
        :param product_kind: The product_kind of this ProductNestedProperties.
        :param product_properties: The product_properties of this ProductNestedProperties.
        :param publisher_display_name: The publisher_display_name of this ProductNestedProperties.
        :param publisher_identifier: The publisher_identifier of this ProductNestedProperties.
        :param sku: The sku of this ProductNestedProperties.
        :param vm_extension_type: The vm_extension_type of this ProductNestedProperties.
        """
        self.openapi_types = {
            'billing_part_number': str,
            'compatibility': Compatibility,
            'description': str,
            'display_name': str,
            'gallery_item_identity': str,
            'icon_uris': IconUris,
            'legal_terms': str,
            'links': List[ProductLink],
            'offer': str,
            'offer_version': str,
            'payload_length': int,
            'privacy_policy': str,
            'product_kind': str,
            'product_properties': ProductProperties,
            'publisher_display_name': str,
            'publisher_identifier': str,
            'sku': str,
            'vm_extension_type': str
        }

        self.attribute_map = {
            'billing_part_number': 'billingPartNumber',
            'compatibility': 'compatibility',
            'description': 'description',
            'display_name': 'displayName',
            'gallery_item_identity': 'galleryItemIdentity',
            'icon_uris': 'iconUris',
            'legal_terms': 'legalTerms',
            'links': 'links',
            'offer': 'offer',
            'offer_version': 'offerVersion',
            'payload_length': 'payloadLength',
            'privacy_policy': 'privacyPolicy',
            'product_kind': 'productKind',
            'product_properties': 'productProperties',
            'publisher_display_name': 'publisherDisplayName',
            'publisher_identifier': 'publisherIdentifier',
            'sku': 'sku',
            'vm_extension_type': 'vmExtensionType'
        }

        self._billing_part_number = billing_part_number
        self._compatibility = compatibility
        self._description = description
        self._display_name = display_name
        self._gallery_item_identity = gallery_item_identity
        self._icon_uris = icon_uris
        self._legal_terms = legal_terms
        self._links = links
        self._offer = offer
        self._offer_version = offer_version
        self._payload_length = payload_length
        self._privacy_policy = privacy_policy
        self._product_kind = product_kind
        self._product_properties = product_properties
        self._publisher_display_name = publisher_display_name
        self._publisher_identifier = publisher_identifier
        self._sku = sku
        self._vm_extension_type = vm_extension_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProductNestedProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProductNestedProperties of this ProductNestedProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def billing_part_number(self):
        """Gets the billing_part_number of this ProductNestedProperties.

        The part number used for billing purposes.

        :return: The billing_part_number of this ProductNestedProperties.
        :rtype: str
        """
        return self._billing_part_number

    @billing_part_number.setter
    def billing_part_number(self, billing_part_number):
        """Sets the billing_part_number of this ProductNestedProperties.

        The part number used for billing purposes.

        :param billing_part_number: The billing_part_number of this ProductNestedProperties.
        :type billing_part_number: str
        """

        self._billing_part_number = billing_part_number

    @property
    def compatibility(self):
        """Gets the compatibility of this ProductNestedProperties.


        :return: The compatibility of this ProductNestedProperties.
        :rtype: Compatibility
        """
        return self._compatibility

    @compatibility.setter
    def compatibility(self, compatibility):
        """Sets the compatibility of this ProductNestedProperties.


        :param compatibility: The compatibility of this ProductNestedProperties.
        :type compatibility: Compatibility
        """

        self._compatibility = compatibility

    @property
    def description(self):
        """Gets the description of this ProductNestedProperties.

        The description of the product.

        :return: The description of this ProductNestedProperties.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ProductNestedProperties.

        The description of the product.

        :param description: The description of this ProductNestedProperties.
        :type description: str
        """

        self._description = description

    @property
    def display_name(self):
        """Gets the display_name of this ProductNestedProperties.

        The display name of the product.

        :return: The display_name of this ProductNestedProperties.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this ProductNestedProperties.

        The display name of the product.

        :param display_name: The display_name of this ProductNestedProperties.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def gallery_item_identity(self):
        """Gets the gallery_item_identity of this ProductNestedProperties.

        The identifier of the gallery item corresponding to the product.

        :return: The gallery_item_identity of this ProductNestedProperties.
        :rtype: str
        """
        return self._gallery_item_identity

    @gallery_item_identity.setter
    def gallery_item_identity(self, gallery_item_identity):
        """Sets the gallery_item_identity of this ProductNestedProperties.

        The identifier of the gallery item corresponding to the product.

        :param gallery_item_identity: The gallery_item_identity of this ProductNestedProperties.
        :type gallery_item_identity: str
        """

        self._gallery_item_identity = gallery_item_identity

    @property
    def icon_uris(self):
        """Gets the icon_uris of this ProductNestedProperties.


        :return: The icon_uris of this ProductNestedProperties.
        :rtype: IconUris
        """
        return self._icon_uris

    @icon_uris.setter
    def icon_uris(self, icon_uris):
        """Sets the icon_uris of this ProductNestedProperties.


        :param icon_uris: The icon_uris of this ProductNestedProperties.
        :type icon_uris: IconUris
        """

        self._icon_uris = icon_uris

    @property
    def legal_terms(self):
        """Gets the legal_terms of this ProductNestedProperties.

        The legal terms.

        :return: The legal_terms of this ProductNestedProperties.
        :rtype: str
        """
        return self._legal_terms

    @legal_terms.setter
    def legal_terms(self, legal_terms):
        """Sets the legal_terms of this ProductNestedProperties.

        The legal terms.

        :param legal_terms: The legal_terms of this ProductNestedProperties.
        :type legal_terms: str
        """

        self._legal_terms = legal_terms

    @property
    def links(self):
        """Gets the links of this ProductNestedProperties.

        Additional links available for this product.

        :return: The links of this ProductNestedProperties.
        :rtype: List[ProductLink]
        """
        return self._links

    @links.setter
    def links(self, links):
        """Sets the links of this ProductNestedProperties.

        Additional links available for this product.

        :param links: The links of this ProductNestedProperties.
        :type links: List[ProductLink]
        """

        self._links = links

    @property
    def offer(self):
        """Gets the offer of this ProductNestedProperties.

        The offer representing the product.

        :return: The offer of this ProductNestedProperties.
        :rtype: str
        """
        return self._offer

    @offer.setter
    def offer(self, offer):
        """Sets the offer of this ProductNestedProperties.

        The offer representing the product.

        :param offer: The offer of this ProductNestedProperties.
        :type offer: str
        """

        self._offer = offer

    @property
    def offer_version(self):
        """Gets the offer_version of this ProductNestedProperties.

        The version of the product offer.

        :return: The offer_version of this ProductNestedProperties.
        :rtype: str
        """
        return self._offer_version

    @offer_version.setter
    def offer_version(self, offer_version):
        """Sets the offer_version of this ProductNestedProperties.

        The version of the product offer.

        :param offer_version: The offer_version of this ProductNestedProperties.
        :type offer_version: str
        """

        self._offer_version = offer_version

    @property
    def payload_length(self):
        """Gets the payload_length of this ProductNestedProperties.

        The length of product content.

        :return: The payload_length of this ProductNestedProperties.
        :rtype: int
        """
        return self._payload_length

    @payload_length.setter
    def payload_length(self, payload_length):
        """Sets the payload_length of this ProductNestedProperties.

        The length of product content.

        :param payload_length: The payload_length of this ProductNestedProperties.
        :type payload_length: int
        """

        self._payload_length = payload_length

    @property
    def privacy_policy(self):
        """Gets the privacy_policy of this ProductNestedProperties.

        The privacy policy.

        :return: The privacy_policy of this ProductNestedProperties.
        :rtype: str
        """
        return self._privacy_policy

    @privacy_policy.setter
    def privacy_policy(self, privacy_policy):
        """Sets the privacy_policy of this ProductNestedProperties.

        The privacy policy.

        :param privacy_policy: The privacy_policy of this ProductNestedProperties.
        :type privacy_policy: str
        """

        self._privacy_policy = privacy_policy

    @property
    def product_kind(self):
        """Gets the product_kind of this ProductNestedProperties.

        The kind of the product (virtualMachine or virtualMachineExtension)

        :return: The product_kind of this ProductNestedProperties.
        :rtype: str
        """
        return self._product_kind

    @product_kind.setter
    def product_kind(self, product_kind):
        """Sets the product_kind of this ProductNestedProperties.

        The kind of the product (virtualMachine or virtualMachineExtension)

        :param product_kind: The product_kind of this ProductNestedProperties.
        :type product_kind: str
        """

        self._product_kind = product_kind

    @property
    def product_properties(self):
        """Gets the product_properties of this ProductNestedProperties.


        :return: The product_properties of this ProductNestedProperties.
        :rtype: ProductProperties
        """
        return self._product_properties

    @product_properties.setter
    def product_properties(self, product_properties):
        """Sets the product_properties of this ProductNestedProperties.


        :param product_properties: The product_properties of this ProductNestedProperties.
        :type product_properties: ProductProperties
        """

        self._product_properties = product_properties

    @property
    def publisher_display_name(self):
        """Gets the publisher_display_name of this ProductNestedProperties.

        The user-friendly name of the product publisher.

        :return: The publisher_display_name of this ProductNestedProperties.
        :rtype: str
        """
        return self._publisher_display_name

    @publisher_display_name.setter
    def publisher_display_name(self, publisher_display_name):
        """Sets the publisher_display_name of this ProductNestedProperties.

        The user-friendly name of the product publisher.

        :param publisher_display_name: The publisher_display_name of this ProductNestedProperties.
        :type publisher_display_name: str
        """

        self._publisher_display_name = publisher_display_name

    @property
    def publisher_identifier(self):
        """Gets the publisher_identifier of this ProductNestedProperties.

        Publisher identifier.

        :return: The publisher_identifier of this ProductNestedProperties.
        :rtype: str
        """
        return self._publisher_identifier

    @publisher_identifier.setter
    def publisher_identifier(self, publisher_identifier):
        """Sets the publisher_identifier of this ProductNestedProperties.

        Publisher identifier.

        :param publisher_identifier: The publisher_identifier of this ProductNestedProperties.
        :type publisher_identifier: str
        """

        self._publisher_identifier = publisher_identifier

    @property
    def sku(self):
        """Gets the sku of this ProductNestedProperties.

        The product SKU.

        :return: The sku of this ProductNestedProperties.
        :rtype: str
        """
        return self._sku

    @sku.setter
    def sku(self, sku):
        """Sets the sku of this ProductNestedProperties.

        The product SKU.

        :param sku: The sku of this ProductNestedProperties.
        :type sku: str
        """

        self._sku = sku

    @property
    def vm_extension_type(self):
        """Gets the vm_extension_type of this ProductNestedProperties.

        The type of the Virtual Machine Extension.

        :return: The vm_extension_type of this ProductNestedProperties.
        :rtype: str
        """
        return self._vm_extension_type

    @vm_extension_type.setter
    def vm_extension_type(self, vm_extension_type):
        """Sets the vm_extension_type of this ProductNestedProperties.

        The type of the Virtual Machine Extension.

        :param vm_extension_type: The vm_extension_type of this ProductNestedProperties.
        :type vm_extension_type: str
        """

        self._vm_extension_type = vm_extension_type
