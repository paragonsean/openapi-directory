/*
 * AzureStack Azure Bridge Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.ComputeRole;
import org.openapitools.client.model.OperatingSystem;
import org.openapitools.client.model.Uri;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Product information.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:50:17.127692-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class VirtualMachineExtensionProductProperties {
  public static final String SERIALIZED_NAME_COMPUTE_ROLE = "computeRole";
  @SerializedName(SERIALIZED_NAME_COMPUTE_ROLE)
  private ComputeRole computeRole;

  public static final String SERIALIZED_NAME_IS_SYSTEM_EXTENSION = "isSystemExtension";
  @SerializedName(SERIALIZED_NAME_IS_SYSTEM_EXTENSION)
  private Boolean isSystemExtension;

  public static final String SERIALIZED_NAME_SOURCE_BLOB = "sourceBlob";
  @SerializedName(SERIALIZED_NAME_SOURCE_BLOB)
  private Uri sourceBlob;

  public static final String SERIALIZED_NAME_SUPPORT_MULTIPLE_EXTENSIONS = "supportMultipleExtensions";
  @SerializedName(SERIALIZED_NAME_SUPPORT_MULTIPLE_EXTENSIONS)
  private Boolean supportMultipleExtensions;

  public static final String SERIALIZED_NAME_VERSION = "version";
  @SerializedName(SERIALIZED_NAME_VERSION)
  private String version;

  public static final String SERIALIZED_NAME_VM_OS_TYPE = "vmOsType";
  @SerializedName(SERIALIZED_NAME_VM_OS_TYPE)
  private OperatingSystem vmOsType;

  public static final String SERIALIZED_NAME_VM_SCALE_SET_ENABLED = "vmScaleSetEnabled";
  @SerializedName(SERIALIZED_NAME_VM_SCALE_SET_ENABLED)
  private Boolean vmScaleSetEnabled;

  public VirtualMachineExtensionProductProperties() {
  }

  public VirtualMachineExtensionProductProperties(
     Boolean isSystemExtension, 
     Boolean supportMultipleExtensions, 
     String version, 
     Boolean vmScaleSetEnabled
  ) {
    this();
    this.isSystemExtension = isSystemExtension;
    this.supportMultipleExtensions = supportMultipleExtensions;
    this.version = version;
    this.vmScaleSetEnabled = vmScaleSetEnabled;
  }

  public VirtualMachineExtensionProductProperties computeRole(ComputeRole computeRole) {
    this.computeRole = computeRole;
    return this;
  }

  /**
   * Get computeRole
   * @return computeRole
   */
  @javax.annotation.Nullable
  public ComputeRole getComputeRole() {
    return computeRole;
  }

  public void setComputeRole(ComputeRole computeRole) {
    this.computeRole = computeRole;
  }


  /**
   * Specifies if product is a Virtual Machine Extension.
   * @return isSystemExtension
   */
  @javax.annotation.Nullable
  public Boolean getIsSystemExtension() {
    return isSystemExtension;
  }



  public VirtualMachineExtensionProductProperties sourceBlob(Uri sourceBlob) {
    this.sourceBlob = sourceBlob;
    return this;
  }

  /**
   * Get sourceBlob
   * @return sourceBlob
   */
  @javax.annotation.Nullable
  public Uri getSourceBlob() {
    return sourceBlob;
  }

  public void setSourceBlob(Uri sourceBlob) {
    this.sourceBlob = sourceBlob;
  }


  /**
   * Indicates if specified product supports multiple extensions.
   * @return supportMultipleExtensions
   */
  @javax.annotation.Nullable
  public Boolean getSupportMultipleExtensions() {
    return supportMultipleExtensions;
  }



  /**
   * Specifies product version.
   * @return version
   */
  @javax.annotation.Nullable
  public String getVersion() {
    return version;
  }



  public VirtualMachineExtensionProductProperties vmOsType(OperatingSystem vmOsType) {
    this.vmOsType = vmOsType;
    return this;
  }

  /**
   * Get vmOsType
   * @return vmOsType
   */
  @javax.annotation.Nullable
  public OperatingSystem getVmOsType() {
    return vmOsType;
  }

  public void setVmOsType(OperatingSystem vmOsType) {
    this.vmOsType = vmOsType;
  }


  /**
   * Indicates if virtual machine Scale Set is enabled in the specified product.
   * @return vmScaleSetEnabled
   */
  @javax.annotation.Nullable
  public Boolean getVmScaleSetEnabled() {
    return vmScaleSetEnabled;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VirtualMachineExtensionProductProperties virtualMachineExtensionProductProperties = (VirtualMachineExtensionProductProperties) o;
    return Objects.equals(this.computeRole, virtualMachineExtensionProductProperties.computeRole) &&
        Objects.equals(this.isSystemExtension, virtualMachineExtensionProductProperties.isSystemExtension) &&
        Objects.equals(this.sourceBlob, virtualMachineExtensionProductProperties.sourceBlob) &&
        Objects.equals(this.supportMultipleExtensions, virtualMachineExtensionProductProperties.supportMultipleExtensions) &&
        Objects.equals(this.version, virtualMachineExtensionProductProperties.version) &&
        Objects.equals(this.vmOsType, virtualMachineExtensionProductProperties.vmOsType) &&
        Objects.equals(this.vmScaleSetEnabled, virtualMachineExtensionProductProperties.vmScaleSetEnabled);
  }

  @Override
  public int hashCode() {
    return Objects.hash(computeRole, isSystemExtension, sourceBlob, supportMultipleExtensions, version, vmOsType, vmScaleSetEnabled);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VirtualMachineExtensionProductProperties {\n");
    sb.append("    computeRole: ").append(toIndentedString(computeRole)).append("\n");
    sb.append("    isSystemExtension: ").append(toIndentedString(isSystemExtension)).append("\n");
    sb.append("    sourceBlob: ").append(toIndentedString(sourceBlob)).append("\n");
    sb.append("    supportMultipleExtensions: ").append(toIndentedString(supportMultipleExtensions)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    vmOsType: ").append(toIndentedString(vmOsType)).append("\n");
    sb.append("    vmScaleSetEnabled: ").append(toIndentedString(vmScaleSetEnabled)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("computeRole");
    openapiFields.add("isSystemExtension");
    openapiFields.add("sourceBlob");
    openapiFields.add("supportMultipleExtensions");
    openapiFields.add("version");
    openapiFields.add("vmOsType");
    openapiFields.add("vmScaleSetEnabled");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to VirtualMachineExtensionProductProperties
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!VirtualMachineExtensionProductProperties.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in VirtualMachineExtensionProductProperties is not found in the empty JSON string", VirtualMachineExtensionProductProperties.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!VirtualMachineExtensionProductProperties.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `VirtualMachineExtensionProductProperties` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `computeRole`
      if (jsonObj.get("computeRole") != null && !jsonObj.get("computeRole").isJsonNull()) {
        ComputeRole.validateJsonElement(jsonObj.get("computeRole"));
      }
      // validate the optional field `sourceBlob`
      if (jsonObj.get("sourceBlob") != null && !jsonObj.get("sourceBlob").isJsonNull()) {
        Uri.validateJsonElement(jsonObj.get("sourceBlob"));
      }
      if ((jsonObj.get("version") != null && !jsonObj.get("version").isJsonNull()) && !jsonObj.get("version").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `version` to be a primitive type in the JSON string but got `%s`", jsonObj.get("version").toString()));
      }
      // validate the optional field `vmOsType`
      if (jsonObj.get("vmOsType") != null && !jsonObj.get("vmOsType").isJsonNull()) {
        OperatingSystem.validateJsonElement(jsonObj.get("vmOsType"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!VirtualMachineExtensionProductProperties.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'VirtualMachineExtensionProductProperties' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<VirtualMachineExtensionProductProperties> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(VirtualMachineExtensionProductProperties.class));

       return (TypeAdapter<T>) new TypeAdapter<VirtualMachineExtensionProductProperties>() {
           @Override
           public void write(JsonWriter out, VirtualMachineExtensionProductProperties value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public VirtualMachineExtensionProductProperties read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of VirtualMachineExtensionProductProperties given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of VirtualMachineExtensionProductProperties
   * @throws IOException if the JSON string is invalid with respect to VirtualMachineExtensionProductProperties
   */
  public static VirtualMachineExtensionProductProperties fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, VirtualMachineExtensionProductProperties.class);
  }

  /**
   * Convert an instance of VirtualMachineExtensionProductProperties to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

