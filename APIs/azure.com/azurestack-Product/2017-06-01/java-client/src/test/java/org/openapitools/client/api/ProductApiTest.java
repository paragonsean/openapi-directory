/*
 * AzureStack Azure Bridge Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.DeviceConfiguration;
import org.openapitools.client.model.ExtendedProduct;
import org.openapitools.client.model.MarketplaceProductLogUpdate;
import org.openapitools.client.model.Product;
import org.openapitools.client.model.ProductList;
import org.openapitools.client.model.ProductLog;
import org.openapitools.client.model.ProductsListDefaultResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ProductApi
 */
@Disabled
public class ProductApiTest {

    private final ProductApi api = new ProductApi();

    /**
     * Returns the specified product.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void productsGetTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroup = null;
        String registrationName = null;
        String productName = null;
        String apiVersion = null;
        Product response = api.productsGet(subscriptionId, resourceGroup, registrationName, productName, apiVersion);
        // TODO: test validations
    }

    /**
     * Returns the specified product.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void productsGetProductTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroup = null;
        String registrationName = null;
        String productName = null;
        String apiVersion = null;
        DeviceConfiguration deviceConfiguration = null;
        Product response = api.productsGetProduct(subscriptionId, resourceGroup, registrationName, productName, apiVersion, deviceConfiguration);
        // TODO: test validations
    }

    /**
     * Returns a list of products.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void productsGetProductsTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroup = null;
        String registrationName = null;
        String apiVersion = null;
        DeviceConfiguration deviceConfiguration = null;
        ProductList response = api.productsGetProducts(subscriptionId, resourceGroup, registrationName, apiVersion, deviceConfiguration);
        // TODO: test validations
    }

    /**
     * Returns a list of products.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void productsListTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroup = null;
        String registrationName = null;
        String apiVersion = null;
        ProductList response = api.productsList(subscriptionId, resourceGroup, registrationName, apiVersion);
        // TODO: test validations
    }

    /**
     * Returns the extended properties of a product.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void productsListDetailsTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroup = null;
        String registrationName = null;
        String productName = null;
        String apiVersion = null;
        ExtendedProduct response = api.productsListDetails(subscriptionId, resourceGroup, registrationName, productName, apiVersion);
        // TODO: test validations
    }

    /**
     * Returns the specified product.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void productsUploadLogTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroup = null;
        String registrationName = null;
        String productName = null;
        String apiVersion = null;
        MarketplaceProductLogUpdate marketplaceProductLogUpdate = null;
        ProductLog response = api.productsUploadLog(subscriptionId, resourceGroup, registrationName, productName, apiVersion, marketplaceProductLogUpdate);
        // TODO: test validations
    }

}
