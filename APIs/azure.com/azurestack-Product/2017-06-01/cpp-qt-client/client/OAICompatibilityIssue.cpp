/**
 * AzureStack Azure Bridge Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-06-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICompatibilityIssue.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICompatibilityIssue::OAICompatibilityIssue(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICompatibilityIssue::OAICompatibilityIssue() {
    this->initializeModel();
}

OAICompatibilityIssue::~OAICompatibilityIssue() {}

void OAICompatibilityIssue::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAICompatibilityIssue::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAICompatibilityIssue::fromJson(QString jsonString) {
    
    if ( jsonString.compare("HigherDeviceVersionRequired", Qt::CaseInsensitive) == 0) {
        m_value = eOAICompatibilityIssue::HIGHERDEVICEVERSIONREQUIRED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("LowerDeviceVersionRequired", Qt::CaseInsensitive) == 0) {
        m_value = eOAICompatibilityIssue::LOWERDEVICEVERSIONREQUIRED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CapacityBillingModelRequired", Qt::CaseInsensitive) == 0) {
        m_value = eOAICompatibilityIssue::CAPACITYBILLINGMODELREQUIRED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PayAsYouGoBillingModelRequired", Qt::CaseInsensitive) == 0) {
        m_value = eOAICompatibilityIssue::PAYASYOUGOBILLINGMODELREQUIRED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DevelopmentBillingModelRequired", Qt::CaseInsensitive) == 0) {
        m_value = eOAICompatibilityIssue::DEVELOPMENTBILLINGMODELREQUIRED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("AzureADIdentitySystemRequired", Qt::CaseInsensitive) == 0) {
        m_value = eOAICompatibilityIssue::AZUREADIDENTITYSYSTEMREQUIRED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ADFSIdentitySystemRequired", Qt::CaseInsensitive) == 0) {
        m_value = eOAICompatibilityIssue::ADFSIDENTITYSYSTEMREQUIRED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ConnectionToInternetRequired", Qt::CaseInsensitive) == 0) {
        m_value = eOAICompatibilityIssue::CONNECTIONTOINTERNETREQUIRED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ConnectionToAzureRequired", Qt::CaseInsensitive) == 0) {
        m_value = eOAICompatibilityIssue::CONNECTIONTOAZUREREQUIRED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DisconnectedEnvironmentRequired", Qt::CaseInsensitive) == 0) {
        m_value = eOAICompatibilityIssue::DISCONNECTEDENVIRONMENTREQUIRED;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAICompatibilityIssue::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAICompatibilityIssue::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAICompatibilityIssue::HIGHERDEVICEVERSIONREQUIRED:
            val = "HigherDeviceVersionRequired";
            break;
        case eOAICompatibilityIssue::LOWERDEVICEVERSIONREQUIRED:
            val = "LowerDeviceVersionRequired";
            break;
        case eOAICompatibilityIssue::CAPACITYBILLINGMODELREQUIRED:
            val = "CapacityBillingModelRequired";
            break;
        case eOAICompatibilityIssue::PAYASYOUGOBILLINGMODELREQUIRED:
            val = "PayAsYouGoBillingModelRequired";
            break;
        case eOAICompatibilityIssue::DEVELOPMENTBILLINGMODELREQUIRED:
            val = "DevelopmentBillingModelRequired";
            break;
        case eOAICompatibilityIssue::AZUREADIDENTITYSYSTEMREQUIRED:
            val = "AzureADIdentitySystemRequired";
            break;
        case eOAICompatibilityIssue::ADFSIDENTITYSYSTEMREQUIRED:
            val = "ADFSIdentitySystemRequired";
            break;
        case eOAICompatibilityIssue::CONNECTIONTOINTERNETREQUIRED:
            val = "ConnectionToInternetRequired";
            break;
        case eOAICompatibilityIssue::CONNECTIONTOAZUREREQUIRED:
            val = "ConnectionToAzureRequired";
            break;
        case eOAICompatibilityIssue::DISCONNECTEDENVIRONMENTREQUIRED:
            val = "DisconnectedEnvironmentRequired";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAICompatibilityIssue::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAICompatibilityIssue::eOAICompatibilityIssue OAICompatibilityIssue::getValue() const {
    return m_value;
}

void OAICompatibilityIssue::setValue(const OAICompatibilityIssue::eOAICompatibilityIssue& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAICompatibilityIssue::isSet() const {
    
    return m_value_isSet;
}

bool OAICompatibilityIssue::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
