/**
 * AzureStack Azure Bridge Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-06-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIExtendedProduct.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIExtendedProduct::OAIExtendedProduct(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIExtendedProduct::OAIExtendedProduct() {
    this->initializeModel();
}

OAIExtendedProduct::~OAIExtendedProduct() {}

void OAIExtendedProduct::initializeModel() {

    m_gallery_package_blob_sas_uri_isSet = false;
    m_gallery_package_blob_sas_uri_isValid = false;

    m_product_kind_isSet = false;
    m_product_kind_isValid = false;

    m_properties_isSet = false;
    m_properties_isValid = false;
}

void OAIExtendedProduct::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIExtendedProduct::fromJsonObject(QJsonObject json) {

    m_gallery_package_blob_sas_uri_isValid = ::OpenAPI::fromJsonValue(m_gallery_package_blob_sas_uri, json[QString("galleryPackageBlobSasUri")]);
    m_gallery_package_blob_sas_uri_isSet = !json[QString("galleryPackageBlobSasUri")].isNull() && m_gallery_package_blob_sas_uri_isValid;

    m_product_kind_isValid = ::OpenAPI::fromJsonValue(m_product_kind, json[QString("productKind")]);
    m_product_kind_isSet = !json[QString("productKind")].isNull() && m_product_kind_isValid;

    m_properties_isValid = ::OpenAPI::fromJsonValue(m_properties, json[QString("properties")]);
    m_properties_isSet = !json[QString("properties")].isNull() && m_properties_isValid;
}

QString OAIExtendedProduct::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIExtendedProduct::asJsonObject() const {
    QJsonObject obj;
    if (m_gallery_package_blob_sas_uri_isSet) {
        obj.insert(QString("galleryPackageBlobSasUri"), ::OpenAPI::toJsonValue(m_gallery_package_blob_sas_uri));
    }
    if (m_product_kind_isSet) {
        obj.insert(QString("productKind"), ::OpenAPI::toJsonValue(m_product_kind));
    }
    if (m_properties.isSet()) {
        obj.insert(QString("properties"), ::OpenAPI::toJsonValue(m_properties));
    }
    return obj;
}

QString OAIExtendedProduct::getGalleryPackageBlobSasUri() const {
    return m_gallery_package_blob_sas_uri;
}
void OAIExtendedProduct::setGalleryPackageBlobSasUri(const QString &gallery_package_blob_sas_uri) {
    m_gallery_package_blob_sas_uri = gallery_package_blob_sas_uri;
    m_gallery_package_blob_sas_uri_isSet = true;
}

bool OAIExtendedProduct::is_gallery_package_blob_sas_uri_Set() const{
    return m_gallery_package_blob_sas_uri_isSet;
}

bool OAIExtendedProduct::is_gallery_package_blob_sas_uri_Valid() const{
    return m_gallery_package_blob_sas_uri_isValid;
}

QString OAIExtendedProduct::getProductKind() const {
    return m_product_kind;
}
void OAIExtendedProduct::setProductKind(const QString &product_kind) {
    m_product_kind = product_kind;
    m_product_kind_isSet = true;
}

bool OAIExtendedProduct::is_product_kind_Set() const{
    return m_product_kind_isSet;
}

bool OAIExtendedProduct::is_product_kind_Valid() const{
    return m_product_kind_isValid;
}

OAIExtendedProductProperties OAIExtendedProduct::getProperties() const {
    return m_properties;
}
void OAIExtendedProduct::setProperties(const OAIExtendedProductProperties &properties) {
    m_properties = properties;
    m_properties_isSet = true;
}

bool OAIExtendedProduct::is_properties_Set() const{
    return m_properties_isSet;
}

bool OAIExtendedProduct::is_properties_Valid() const{
    return m_properties_isValid;
}

bool OAIExtendedProduct::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_gallery_package_blob_sas_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_product_kind_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_properties.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIExtendedProduct::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
