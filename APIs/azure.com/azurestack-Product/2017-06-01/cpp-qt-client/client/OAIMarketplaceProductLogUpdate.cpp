/**
 * AzureStack Azure Bridge Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-06-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMarketplaceProductLogUpdate.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMarketplaceProductLogUpdate::OAIMarketplaceProductLogUpdate(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMarketplaceProductLogUpdate::OAIMarketplaceProductLogUpdate() {
    this->initializeModel();
}

OAIMarketplaceProductLogUpdate::~OAIMarketplaceProductLogUpdate() {}

void OAIMarketplaceProductLogUpdate::initializeModel() {

    m_details_isSet = false;
    m_details_isValid = false;

    m_error_isSet = false;
    m_error_isValid = false;

    m_operation_isSet = false;
    m_operation_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAIMarketplaceProductLogUpdate::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMarketplaceProductLogUpdate::fromJsonObject(QJsonObject json) {

    m_details_isValid = ::OpenAPI::fromJsonValue(m_details, json[QString("details")]);
    m_details_isSet = !json[QString("details")].isNull() && m_details_isValid;

    m_error_isValid = ::OpenAPI::fromJsonValue(m_error, json[QString("error")]);
    m_error_isSet = !json[QString("error")].isNull() && m_error_isValid;

    m_operation_isValid = ::OpenAPI::fromJsonValue(m_operation, json[QString("operation")]);
    m_operation_isSet = !json[QString("operation")].isNull() && m_operation_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;
}

QString OAIMarketplaceProductLogUpdate::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMarketplaceProductLogUpdate::asJsonObject() const {
    QJsonObject obj;
    if (m_details_isSet) {
        obj.insert(QString("details"), ::OpenAPI::toJsonValue(m_details));
    }
    if (m_error_isSet) {
        obj.insert(QString("error"), ::OpenAPI::toJsonValue(m_error));
    }
    if (m_operation_isSet) {
        obj.insert(QString("operation"), ::OpenAPI::toJsonValue(m_operation));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    return obj;
}

QString OAIMarketplaceProductLogUpdate::getDetails() const {
    return m_details;
}
void OAIMarketplaceProductLogUpdate::setDetails(const QString &details) {
    m_details = details;
    m_details_isSet = true;
}

bool OAIMarketplaceProductLogUpdate::is_details_Set() const{
    return m_details_isSet;
}

bool OAIMarketplaceProductLogUpdate::is_details_Valid() const{
    return m_details_isValid;
}

QString OAIMarketplaceProductLogUpdate::getError() const {
    return m_error;
}
void OAIMarketplaceProductLogUpdate::setError(const QString &error) {
    m_error = error;
    m_error_isSet = true;
}

bool OAIMarketplaceProductLogUpdate::is_error_Set() const{
    return m_error_isSet;
}

bool OAIMarketplaceProductLogUpdate::is_error_Valid() const{
    return m_error_isValid;
}

QString OAIMarketplaceProductLogUpdate::getOperation() const {
    return m_operation;
}
void OAIMarketplaceProductLogUpdate::setOperation(const QString &operation) {
    m_operation = operation;
    m_operation_isSet = true;
}

bool OAIMarketplaceProductLogUpdate::is_operation_Set() const{
    return m_operation_isSet;
}

bool OAIMarketplaceProductLogUpdate::is_operation_Valid() const{
    return m_operation_isValid;
}

QString OAIMarketplaceProductLogUpdate::getStatus() const {
    return m_status;
}
void OAIMarketplaceProductLogUpdate::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIMarketplaceProductLogUpdate::is_status_Set() const{
    return m_status_isSet;
}

bool OAIMarketplaceProductLogUpdate::is_status_Valid() const{
    return m_status_isValid;
}

bool OAIMarketplaceProductLogUpdate::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_details_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_error_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_operation_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMarketplaceProductLogUpdate::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
