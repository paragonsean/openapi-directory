/**
 * AzureStack Azure Bridge Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-06-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDeviceConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDeviceConfiguration::OAIDeviceConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDeviceConfiguration::OAIDeviceConfiguration() {
    this->initializeModel();
}

OAIDeviceConfiguration::~OAIDeviceConfiguration() {}

void OAIDeviceConfiguration::initializeModel() {

    m_device_version_isSet = false;
    m_device_version_isValid = false;

    m_identity_system_isSet = false;
    m_identity_system_isValid = false;
}

void OAIDeviceConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDeviceConfiguration::fromJsonObject(QJsonObject json) {

    m_device_version_isValid = ::OpenAPI::fromJsonValue(m_device_version, json[QString("deviceVersion")]);
    m_device_version_isSet = !json[QString("deviceVersion")].isNull() && m_device_version_isValid;

    m_identity_system_isValid = ::OpenAPI::fromJsonValue(m_identity_system, json[QString("identitySystem")]);
    m_identity_system_isSet = !json[QString("identitySystem")].isNull() && m_identity_system_isValid;
}

QString OAIDeviceConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDeviceConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_device_version_isSet) {
        obj.insert(QString("deviceVersion"), ::OpenAPI::toJsonValue(m_device_version));
    }
    if (m_identity_system_isSet) {
        obj.insert(QString("identitySystem"), ::OpenAPI::toJsonValue(m_identity_system));
    }
    return obj;
}

QString OAIDeviceConfiguration::getDeviceVersion() const {
    return m_device_version;
}
void OAIDeviceConfiguration::setDeviceVersion(const QString &device_version) {
    m_device_version = device_version;
    m_device_version_isSet = true;
}

bool OAIDeviceConfiguration::is_device_version_Set() const{
    return m_device_version_isSet;
}

bool OAIDeviceConfiguration::is_device_version_Valid() const{
    return m_device_version_isValid;
}

QString OAIDeviceConfiguration::getIdentitySystem() const {
    return m_identity_system;
}
void OAIDeviceConfiguration::setIdentitySystem(const QString &identity_system) {
    m_identity_system = identity_system;
    m_identity_system_isSet = true;
}

bool OAIDeviceConfiguration::is_identity_system_Set() const{
    return m_identity_system_isSet;
}

bool OAIDeviceConfiguration::is_identity_system_Valid() const{
    return m_identity_system_isValid;
}

bool OAIDeviceConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_device_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_identity_system_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDeviceConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
