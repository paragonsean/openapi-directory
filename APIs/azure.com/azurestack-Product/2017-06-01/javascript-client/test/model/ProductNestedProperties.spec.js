/**
 * AzureStack Azure Bridge Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AzureStackAzureBridgeClient);
  }
}(this, function(expect, AzureStackAzureBridgeClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AzureStackAzureBridgeClient.ProductNestedProperties();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ProductNestedProperties', function() {
    it('should create an instance of ProductNestedProperties', function() {
      // uncomment below and update the code to test ProductNestedProperties
      //var instance = new AzureStackAzureBridgeClient.ProductNestedProperties();
      //expect(instance).to.be.a(AzureStackAzureBridgeClient.ProductNestedProperties);
    });

    it('should have the property billingPartNumber (base name: "billingPartNumber")', function() {
      // uncomment below and update the code to test the property billingPartNumber
      //var instance = new AzureStackAzureBridgeClient.ProductNestedProperties();
      //expect(instance).to.be();
    });

    it('should have the property compatibility (base name: "compatibility")', function() {
      // uncomment below and update the code to test the property compatibility
      //var instance = new AzureStackAzureBridgeClient.ProductNestedProperties();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new AzureStackAzureBridgeClient.ProductNestedProperties();
      //expect(instance).to.be();
    });

    it('should have the property displayName (base name: "displayName")', function() {
      // uncomment below and update the code to test the property displayName
      //var instance = new AzureStackAzureBridgeClient.ProductNestedProperties();
      //expect(instance).to.be();
    });

    it('should have the property galleryItemIdentity (base name: "galleryItemIdentity")', function() {
      // uncomment below and update the code to test the property galleryItemIdentity
      //var instance = new AzureStackAzureBridgeClient.ProductNestedProperties();
      //expect(instance).to.be();
    });

    it('should have the property iconUris (base name: "iconUris")', function() {
      // uncomment below and update the code to test the property iconUris
      //var instance = new AzureStackAzureBridgeClient.ProductNestedProperties();
      //expect(instance).to.be();
    });

    it('should have the property legalTerms (base name: "legalTerms")', function() {
      // uncomment below and update the code to test the property legalTerms
      //var instance = new AzureStackAzureBridgeClient.ProductNestedProperties();
      //expect(instance).to.be();
    });

    it('should have the property links (base name: "links")', function() {
      // uncomment below and update the code to test the property links
      //var instance = new AzureStackAzureBridgeClient.ProductNestedProperties();
      //expect(instance).to.be();
    });

    it('should have the property offer (base name: "offer")', function() {
      // uncomment below and update the code to test the property offer
      //var instance = new AzureStackAzureBridgeClient.ProductNestedProperties();
      //expect(instance).to.be();
    });

    it('should have the property offerVersion (base name: "offerVersion")', function() {
      // uncomment below and update the code to test the property offerVersion
      //var instance = new AzureStackAzureBridgeClient.ProductNestedProperties();
      //expect(instance).to.be();
    });

    it('should have the property payloadLength (base name: "payloadLength")', function() {
      // uncomment below and update the code to test the property payloadLength
      //var instance = new AzureStackAzureBridgeClient.ProductNestedProperties();
      //expect(instance).to.be();
    });

    it('should have the property privacyPolicy (base name: "privacyPolicy")', function() {
      // uncomment below and update the code to test the property privacyPolicy
      //var instance = new AzureStackAzureBridgeClient.ProductNestedProperties();
      //expect(instance).to.be();
    });

    it('should have the property productKind (base name: "productKind")', function() {
      // uncomment below and update the code to test the property productKind
      //var instance = new AzureStackAzureBridgeClient.ProductNestedProperties();
      //expect(instance).to.be();
    });

    it('should have the property productProperties (base name: "productProperties")', function() {
      // uncomment below and update the code to test the property productProperties
      //var instance = new AzureStackAzureBridgeClient.ProductNestedProperties();
      //expect(instance).to.be();
    });

    it('should have the property publisherDisplayName (base name: "publisherDisplayName")', function() {
      // uncomment below and update the code to test the property publisherDisplayName
      //var instance = new AzureStackAzureBridgeClient.ProductNestedProperties();
      //expect(instance).to.be();
    });

    it('should have the property publisherIdentifier (base name: "publisherIdentifier")', function() {
      // uncomment below and update the code to test the property publisherIdentifier
      //var instance = new AzureStackAzureBridgeClient.ProductNestedProperties();
      //expect(instance).to.be();
    });

    it('should have the property sku (base name: "sku")', function() {
      // uncomment below and update the code to test the property sku
      //var instance = new AzureStackAzureBridgeClient.ProductNestedProperties();
      //expect(instance).to.be();
    });

    it('should have the property vmExtensionType (base name: "vmExtensionType")', function() {
      // uncomment below and update the code to test the property vmExtensionType
      //var instance = new AzureStackAzureBridgeClient.ProductNestedProperties();
      //expect(instance).to.be();
    });

  });

}));
