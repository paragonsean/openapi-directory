/**
 * AzureStack Azure Bridge Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Compatibility from './Compatibility';
import IconUris from './IconUris';
import ProductLink from './ProductLink';
import ProductProperties from './ProductProperties';

/**
 * The ProductNestedProperties model module.
 * @module model/ProductNestedProperties
 * @version 2017-06-01
 */
class ProductNestedProperties {
    /**
     * Constructs a new <code>ProductNestedProperties</code>.
     * Properties portion of the product resource.
     * @alias module:model/ProductNestedProperties
     */
    constructor() { 
        
        ProductNestedProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ProductNestedProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProductNestedProperties} obj Optional instance to populate.
     * @return {module:model/ProductNestedProperties} The populated <code>ProductNestedProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProductNestedProperties();

            if (data.hasOwnProperty('billingPartNumber')) {
                obj['billingPartNumber'] = ApiClient.convertToType(data['billingPartNumber'], 'String');
            }
            if (data.hasOwnProperty('compatibility')) {
                obj['compatibility'] = Compatibility.constructFromObject(data['compatibility']);
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('galleryItemIdentity')) {
                obj['galleryItemIdentity'] = ApiClient.convertToType(data['galleryItemIdentity'], 'String');
            }
            if (data.hasOwnProperty('iconUris')) {
                obj['iconUris'] = IconUris.constructFromObject(data['iconUris']);
            }
            if (data.hasOwnProperty('legalTerms')) {
                obj['legalTerms'] = ApiClient.convertToType(data['legalTerms'], 'String');
            }
            if (data.hasOwnProperty('links')) {
                obj['links'] = ApiClient.convertToType(data['links'], [ProductLink]);
            }
            if (data.hasOwnProperty('offer')) {
                obj['offer'] = ApiClient.convertToType(data['offer'], 'String');
            }
            if (data.hasOwnProperty('offerVersion')) {
                obj['offerVersion'] = ApiClient.convertToType(data['offerVersion'], 'String');
            }
            if (data.hasOwnProperty('payloadLength')) {
                obj['payloadLength'] = ApiClient.convertToType(data['payloadLength'], 'Number');
            }
            if (data.hasOwnProperty('privacyPolicy')) {
                obj['privacyPolicy'] = ApiClient.convertToType(data['privacyPolicy'], 'String');
            }
            if (data.hasOwnProperty('productKind')) {
                obj['productKind'] = ApiClient.convertToType(data['productKind'], 'String');
            }
            if (data.hasOwnProperty('productProperties')) {
                obj['productProperties'] = ProductProperties.constructFromObject(data['productProperties']);
            }
            if (data.hasOwnProperty('publisherDisplayName')) {
                obj['publisherDisplayName'] = ApiClient.convertToType(data['publisherDisplayName'], 'String');
            }
            if (data.hasOwnProperty('publisherIdentifier')) {
                obj['publisherIdentifier'] = ApiClient.convertToType(data['publisherIdentifier'], 'String');
            }
            if (data.hasOwnProperty('sku')) {
                obj['sku'] = ApiClient.convertToType(data['sku'], 'String');
            }
            if (data.hasOwnProperty('vmExtensionType')) {
                obj['vmExtensionType'] = ApiClient.convertToType(data['vmExtensionType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ProductNestedProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ProductNestedProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['billingPartNumber'] && !(typeof data['billingPartNumber'] === 'string' || data['billingPartNumber'] instanceof String)) {
            throw new Error("Expected the field `billingPartNumber` to be a primitive type in the JSON string but got " + data['billingPartNumber']);
        }
        // validate the optional field `compatibility`
        if (data['compatibility']) { // data not null
          Compatibility.validateJSON(data['compatibility']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // ensure the json data is a string
        if (data['galleryItemIdentity'] && !(typeof data['galleryItemIdentity'] === 'string' || data['galleryItemIdentity'] instanceof String)) {
            throw new Error("Expected the field `galleryItemIdentity` to be a primitive type in the JSON string but got " + data['galleryItemIdentity']);
        }
        // validate the optional field `iconUris`
        if (data['iconUris']) { // data not null
          IconUris.validateJSON(data['iconUris']);
        }
        // ensure the json data is a string
        if (data['legalTerms'] && !(typeof data['legalTerms'] === 'string' || data['legalTerms'] instanceof String)) {
            throw new Error("Expected the field `legalTerms` to be a primitive type in the JSON string but got " + data['legalTerms']);
        }
        if (data['links']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['links'])) {
                throw new Error("Expected the field `links` to be an array in the JSON data but got " + data['links']);
            }
            // validate the optional field `links` (array)
            for (const item of data['links']) {
                ProductLink.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['offer'] && !(typeof data['offer'] === 'string' || data['offer'] instanceof String)) {
            throw new Error("Expected the field `offer` to be a primitive type in the JSON string but got " + data['offer']);
        }
        // ensure the json data is a string
        if (data['offerVersion'] && !(typeof data['offerVersion'] === 'string' || data['offerVersion'] instanceof String)) {
            throw new Error("Expected the field `offerVersion` to be a primitive type in the JSON string but got " + data['offerVersion']);
        }
        // ensure the json data is a string
        if (data['privacyPolicy'] && !(typeof data['privacyPolicy'] === 'string' || data['privacyPolicy'] instanceof String)) {
            throw new Error("Expected the field `privacyPolicy` to be a primitive type in the JSON string but got " + data['privacyPolicy']);
        }
        // ensure the json data is a string
        if (data['productKind'] && !(typeof data['productKind'] === 'string' || data['productKind'] instanceof String)) {
            throw new Error("Expected the field `productKind` to be a primitive type in the JSON string but got " + data['productKind']);
        }
        // validate the optional field `productProperties`
        if (data['productProperties']) { // data not null
          ProductProperties.validateJSON(data['productProperties']);
        }
        // ensure the json data is a string
        if (data['publisherDisplayName'] && !(typeof data['publisherDisplayName'] === 'string' || data['publisherDisplayName'] instanceof String)) {
            throw new Error("Expected the field `publisherDisplayName` to be a primitive type in the JSON string but got " + data['publisherDisplayName']);
        }
        // ensure the json data is a string
        if (data['publisherIdentifier'] && !(typeof data['publisherIdentifier'] === 'string' || data['publisherIdentifier'] instanceof String)) {
            throw new Error("Expected the field `publisherIdentifier` to be a primitive type in the JSON string but got " + data['publisherIdentifier']);
        }
        // ensure the json data is a string
        if (data['sku'] && !(typeof data['sku'] === 'string' || data['sku'] instanceof String)) {
            throw new Error("Expected the field `sku` to be a primitive type in the JSON string but got " + data['sku']);
        }
        // ensure the json data is a string
        if (data['vmExtensionType'] && !(typeof data['vmExtensionType'] === 'string' || data['vmExtensionType'] instanceof String)) {
            throw new Error("Expected the field `vmExtensionType` to be a primitive type in the JSON string but got " + data['vmExtensionType']);
        }

        return true;
    }


}



/**
 * The part number used for billing purposes.
 * @member {String} billingPartNumber
 */
ProductNestedProperties.prototype['billingPartNumber'] = undefined;

/**
 * @member {module:model/Compatibility} compatibility
 */
ProductNestedProperties.prototype['compatibility'] = undefined;

/**
 * The description of the product.
 * @member {String} description
 */
ProductNestedProperties.prototype['description'] = undefined;

/**
 * The display name of the product.
 * @member {String} displayName
 */
ProductNestedProperties.prototype['displayName'] = undefined;

/**
 * The identifier of the gallery item corresponding to the product.
 * @member {String} galleryItemIdentity
 */
ProductNestedProperties.prototype['galleryItemIdentity'] = undefined;

/**
 * @member {module:model/IconUris} iconUris
 */
ProductNestedProperties.prototype['iconUris'] = undefined;

/**
 * The legal terms.
 * @member {String} legalTerms
 */
ProductNestedProperties.prototype['legalTerms'] = undefined;

/**
 * Additional links available for this product.
 * @member {Array.<module:model/ProductLink>} links
 */
ProductNestedProperties.prototype['links'] = undefined;

/**
 * The offer representing the product.
 * @member {String} offer
 */
ProductNestedProperties.prototype['offer'] = undefined;

/**
 * The version of the product offer.
 * @member {String} offerVersion
 */
ProductNestedProperties.prototype['offerVersion'] = undefined;

/**
 * The length of product content.
 * @member {Number} payloadLength
 */
ProductNestedProperties.prototype['payloadLength'] = undefined;

/**
 * The privacy policy.
 * @member {String} privacyPolicy
 */
ProductNestedProperties.prototype['privacyPolicy'] = undefined;

/**
 * The kind of the product (virtualMachine or virtualMachineExtension)
 * @member {String} productKind
 */
ProductNestedProperties.prototype['productKind'] = undefined;

/**
 * @member {module:model/ProductProperties} productProperties
 */
ProductNestedProperties.prototype['productProperties'] = undefined;

/**
 * The user-friendly name of the product publisher.
 * @member {String} publisherDisplayName
 */
ProductNestedProperties.prototype['publisherDisplayName'] = undefined;

/**
 * Publisher identifier.
 * @member {String} publisherIdentifier
 */
ProductNestedProperties.prototype['publisherIdentifier'] = undefined;

/**
 * The product SKU.
 * @member {String} sku
 */
ProductNestedProperties.prototype['sku'] = undefined;

/**
 * The type of the Virtual Machine Extension.
 * @member {String} vmExtensionType
 */
ProductNestedProperties.prototype['vmExtensionType'] = undefined;






export default ProductNestedProperties;

