/**
 * AzureStack Azure Bridge Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CompatibilityIssue from './CompatibilityIssue';

/**
 * The Compatibility model module.
 * @module model/Compatibility
 * @version 2017-06-01
 */
class Compatibility {
    /**
     * Constructs a new <code>Compatibility</code>.
     * Product compatibility
     * @alias module:model/Compatibility
     */
    constructor() { 
        
        Compatibility.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Compatibility</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Compatibility} obj Optional instance to populate.
     * @return {module:model/Compatibility} The populated <code>Compatibility</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Compatibility();

            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('isCompatible')) {
                obj['isCompatible'] = ApiClient.convertToType(data['isCompatible'], 'Boolean');
            }
            if (data.hasOwnProperty('issues')) {
                obj['issues'] = ApiClient.convertToType(data['issues'], [CompatibilityIssue]);
            }
            if (data.hasOwnProperty('message')) {
                obj['message'] = ApiClient.convertToType(data['message'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Compatibility</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Compatibility</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['issues'])) {
            throw new Error("Expected the field `issues` to be an array in the JSON data but got " + data['issues']);
        }
        // ensure the json data is a string
        if (data['message'] && !(typeof data['message'] === 'string' || data['message'] instanceof String)) {
            throw new Error("Expected the field `message` to be a primitive type in the JSON string but got " + data['message']);
        }

        return true;
    }


}



/**
 * Full error message if any compatibility issues are found
 * @member {String} description
 */
Compatibility.prototype['description'] = undefined;

/**
 * Tells if product is compatible with current device
 * @member {Boolean} isCompatible
 */
Compatibility.prototype['isCompatible'] = undefined;

/**
 * List of all issues found
 * @member {Array.<module:model/CompatibilityIssue>} issues
 */
Compatibility.prototype['issues'] = undefined;

/**
 * Short error message if any compatibility issues are found
 * @member {String} message
 */
Compatibility.prototype['message'] = undefined;






export default Compatibility;

