/**
 * FrontDoorManagementClient
 * Use these APIs to manage Azure Front Door resources through the Azure Resource Manager. You must make sure that requests made to these resources are secure.
 *
 * The version of the OpenAPI document: 2019-05-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRoutingRuleUpdateParameters.h
 *
 * Routing rules to apply to an endpoint
 */

#ifndef OAIRoutingRuleUpdateParameters_H
#define OAIRoutingRuleUpdateParameters_H

#include <QJsonObject>

#include "OAIBackendPoolUpdateParameters_healthProbeSettings.h"
#include "OAIRouteConfiguration.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIBackendPoolUpdateParameters_healthProbeSettings;
class OAIRouteConfiguration;

class OAIRoutingRuleUpdateParameters : public OAIObject {
public:
    OAIRoutingRuleUpdateParameters();
    OAIRoutingRuleUpdateParameters(QString json);
    ~OAIRoutingRuleUpdateParameters() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getAcceptedProtocols() const;
    void setAcceptedProtocols(const QList<QString> &accepted_protocols);
    bool is_accepted_protocols_Set() const;
    bool is_accepted_protocols_Valid() const;

    QString getEnabledState() const;
    void setEnabledState(const QString &enabled_state);
    bool is_enabled_state_Set() const;
    bool is_enabled_state_Valid() const;

    QList<OAIBackendPoolUpdateParameters_healthProbeSettings> getFrontendEndpoints() const;
    void setFrontendEndpoints(const QList<OAIBackendPoolUpdateParameters_healthProbeSettings> &frontend_endpoints);
    bool is_frontend_endpoints_Set() const;
    bool is_frontend_endpoints_Valid() const;

    QList<QString> getPatternsToMatch() const;
    void setPatternsToMatch(const QList<QString> &patterns_to_match);
    bool is_patterns_to_match_Set() const;
    bool is_patterns_to_match_Valid() const;

    OAIRouteConfiguration getRouteConfiguration() const;
    void setRouteConfiguration(const OAIRouteConfiguration &route_configuration);
    bool is_route_configuration_Set() const;
    bool is_route_configuration_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_accepted_protocols;
    bool m_accepted_protocols_isSet;
    bool m_accepted_protocols_isValid;

    QString m_enabled_state;
    bool m_enabled_state_isSet;
    bool m_enabled_state_isValid;

    QList<OAIBackendPoolUpdateParameters_healthProbeSettings> m_frontend_endpoints;
    bool m_frontend_endpoints_isSet;
    bool m_frontend_endpoints_isValid;

    QList<QString> m_patterns_to_match;
    bool m_patterns_to_match_isSet;
    bool m_patterns_to_match_isValid;

    OAIRouteConfiguration m_route_configuration;
    bool m_route_configuration_isSet;
    bool m_route_configuration_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRoutingRuleUpdateParameters)

#endif // OAIRoutingRuleUpdateParameters_H
