/**
 * FrontDoorManagementClient
 * Use these APIs to manage Azure Front Door resources through the Azure Resource Manager. You must make sure that requests made to these resources are secure.
 *
 * The version of the OpenAPI document: 2020-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RulesEngineAction from './RulesEngineAction';
import RulesEngineMatchCondition from './RulesEngineMatchCondition';

/**
 * The RulesEngineRule model module.
 * @module model/RulesEngineRule
 * @version 2020-01-01
 */
class RulesEngineRule {
    /**
     * Constructs a new <code>RulesEngineRule</code>.
     * Contains a list of match conditions, and an action on how to modify the request/response. If multiple rules match, the actions from one rule that conflict with a previous rule overwrite for a singular action, or append in the case of headers manipulation.
     * @alias module:model/RulesEngineRule
     * @param action {module:model/RulesEngineAction} 
     * @param name {String} A name to refer to this specific rule.
     * @param priority {Number} A priority assigned to this rule. 
     */
    constructor(action, name, priority) { 
        
        RulesEngineRule.initialize(this, action, name, priority);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, action, name, priority) { 
        obj['action'] = action;
        obj['name'] = name;
        obj['priority'] = priority;
    }

    /**
     * Constructs a <code>RulesEngineRule</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RulesEngineRule} obj Optional instance to populate.
     * @return {module:model/RulesEngineRule} The populated <code>RulesEngineRule</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RulesEngineRule();

            if (data.hasOwnProperty('action')) {
                obj['action'] = RulesEngineAction.constructFromObject(data['action']);
            }
            if (data.hasOwnProperty('matchConditions')) {
                obj['matchConditions'] = ApiClient.convertToType(data['matchConditions'], [RulesEngineMatchCondition]);
            }
            if (data.hasOwnProperty('matchProcessingBehavior')) {
                obj['matchProcessingBehavior'] = ApiClient.convertToType(data['matchProcessingBehavior'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('priority')) {
                obj['priority'] = ApiClient.convertToType(data['priority'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RulesEngineRule</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RulesEngineRule</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of RulesEngineRule.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `action`
        if (data['action']) { // data not null
          RulesEngineAction.validateJSON(data['action']);
        }
        if (data['matchConditions']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['matchConditions'])) {
                throw new Error("Expected the field `matchConditions` to be an array in the JSON data but got " + data['matchConditions']);
            }
            // validate the optional field `matchConditions` (array)
            for (const item of data['matchConditions']) {
                RulesEngineMatchCondition.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['matchProcessingBehavior'] && !(typeof data['matchProcessingBehavior'] === 'string' || data['matchProcessingBehavior'] instanceof String)) {
            throw new Error("Expected the field `matchProcessingBehavior` to be a primitive type in the JSON string but got " + data['matchProcessingBehavior']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}

RulesEngineRule.RequiredProperties = ["action", "name", "priority"];

/**
 * @member {module:model/RulesEngineAction} action
 */
RulesEngineRule.prototype['action'] = undefined;

/**
 * A list of match conditions that must meet in order for the actions of this rule to run. Having no match conditions means the actions will always run.
 * @member {Array.<module:model/RulesEngineMatchCondition>} matchConditions
 */
RulesEngineRule.prototype['matchConditions'] = undefined;

/**
 * If this rule is a match should the rules engine continue running the remaining rules or stop. If not present, defaults to Continue.
 * @member {module:model/RulesEngineRule.MatchProcessingBehaviorEnum} matchProcessingBehavior
 */
RulesEngineRule.prototype['matchProcessingBehavior'] = undefined;

/**
 * A name to refer to this specific rule.
 * @member {String} name
 */
RulesEngineRule.prototype['name'] = undefined;

/**
 * A priority assigned to this rule. 
 * @member {Number} priority
 */
RulesEngineRule.prototype['priority'] = undefined;





/**
 * Allowed values for the <code>matchProcessingBehavior</code> property.
 * @enum {String}
 * @readonly
 */
RulesEngineRule['MatchProcessingBehaviorEnum'] = {

    /**
     * value: "Continue"
     * @const
     */
    "Continue": "Continue",

    /**
     * value: "Stop"
     * @const
     */
    "Stop": "Stop"
};



export default RulesEngineRule;

