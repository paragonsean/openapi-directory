/**
 * FrontDoorManagementClient
 * Use these APIs to manage Azure Front Door resources through the Azure Resource Manager. You must make sure that requests made to these resources are secure.
 *
 * The version of the OpenAPI document: 2020-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The FrontDoorCertificateSourceParameters model module.
 * @module model/FrontDoorCertificateSourceParameters
 * @version 2020-01-01
 */
class FrontDoorCertificateSourceParameters {
    /**
     * Constructs a new <code>FrontDoorCertificateSourceParameters</code>.
     * Parameters required for enabling SSL with Front Door-managed certificates
     * @alias module:model/FrontDoorCertificateSourceParameters
     */
    constructor() { 
        
        FrontDoorCertificateSourceParameters.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FrontDoorCertificateSourceParameters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FrontDoorCertificateSourceParameters} obj Optional instance to populate.
     * @return {module:model/FrontDoorCertificateSourceParameters} The populated <code>FrontDoorCertificateSourceParameters</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FrontDoorCertificateSourceParameters();

            if (data.hasOwnProperty('certificateType')) {
                obj['certificateType'] = ApiClient.convertToType(data['certificateType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FrontDoorCertificateSourceParameters</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FrontDoorCertificateSourceParameters</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['certificateType'] && !(typeof data['certificateType'] === 'string' || data['certificateType'] instanceof String)) {
            throw new Error("Expected the field `certificateType` to be a primitive type in the JSON string but got " + data['certificateType']);
        }

        return true;
    }


}



/**
 * Defines the type of the certificate used for secure connections to a frontendEndpoint
 * @member {module:model/FrontDoorCertificateSourceParameters.CertificateTypeEnum} certificateType
 */
FrontDoorCertificateSourceParameters.prototype['certificateType'] = undefined;





/**
 * Allowed values for the <code>certificateType</code> property.
 * @enum {String}
 * @readonly
 */
FrontDoorCertificateSourceParameters['CertificateTypeEnum'] = {

    /**
     * value: "Dedicated"
     * @const
     */
    "Dedicated": "Dedicated"
};



export default FrontDoorCertificateSourceParameters;

