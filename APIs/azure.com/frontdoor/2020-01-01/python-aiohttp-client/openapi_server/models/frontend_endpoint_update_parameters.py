# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.frontend_endpoint_update_parameters_web_application_firewall_policy_link import FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLink
from openapi_server import util


class FrontendEndpointUpdateParameters(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, host_name: str=None, session_affinity_enabled_state: str=None, session_affinity_ttl_seconds: int=None, web_application_firewall_policy_link: FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLink=None):
        """FrontendEndpointUpdateParameters - a model defined in OpenAPI

        :param host_name: The host_name of this FrontendEndpointUpdateParameters.
        :param session_affinity_enabled_state: The session_affinity_enabled_state of this FrontendEndpointUpdateParameters.
        :param session_affinity_ttl_seconds: The session_affinity_ttl_seconds of this FrontendEndpointUpdateParameters.
        :param web_application_firewall_policy_link: The web_application_firewall_policy_link of this FrontendEndpointUpdateParameters.
        """
        self.openapi_types = {
            'host_name': str,
            'session_affinity_enabled_state': str,
            'session_affinity_ttl_seconds': int,
            'web_application_firewall_policy_link': FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLink
        }

        self.attribute_map = {
            'host_name': 'hostName',
            'session_affinity_enabled_state': 'sessionAffinityEnabledState',
            'session_affinity_ttl_seconds': 'sessionAffinityTtlSeconds',
            'web_application_firewall_policy_link': 'webApplicationFirewallPolicyLink'
        }

        self._host_name = host_name
        self._session_affinity_enabled_state = session_affinity_enabled_state
        self._session_affinity_ttl_seconds = session_affinity_ttl_seconds
        self._web_application_firewall_policy_link = web_application_firewall_policy_link

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FrontendEndpointUpdateParameters':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FrontendEndpointUpdateParameters of this FrontendEndpointUpdateParameters.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def host_name(self):
        """Gets the host_name of this FrontendEndpointUpdateParameters.

        The host name of the frontendEndpoint. Must be a domain name.

        :return: The host_name of this FrontendEndpointUpdateParameters.
        :rtype: str
        """
        return self._host_name

    @host_name.setter
    def host_name(self, host_name):
        """Sets the host_name of this FrontendEndpointUpdateParameters.

        The host name of the frontendEndpoint. Must be a domain name.

        :param host_name: The host_name of this FrontendEndpointUpdateParameters.
        :type host_name: str
        """

        self._host_name = host_name

    @property
    def session_affinity_enabled_state(self):
        """Gets the session_affinity_enabled_state of this FrontendEndpointUpdateParameters.

        Whether to allow session affinity on this host. Valid options are 'Enabled' or 'Disabled'

        :return: The session_affinity_enabled_state of this FrontendEndpointUpdateParameters.
        :rtype: str
        """
        return self._session_affinity_enabled_state

    @session_affinity_enabled_state.setter
    def session_affinity_enabled_state(self, session_affinity_enabled_state):
        """Sets the session_affinity_enabled_state of this FrontendEndpointUpdateParameters.

        Whether to allow session affinity on this host. Valid options are 'Enabled' or 'Disabled'

        :param session_affinity_enabled_state: The session_affinity_enabled_state of this FrontendEndpointUpdateParameters.
        :type session_affinity_enabled_state: str
        """
        allowed_values = ["Enabled", "Disabled"]  # noqa: E501
        if session_affinity_enabled_state not in allowed_values:
            raise ValueError(
                "Invalid value for `session_affinity_enabled_state` ({0}), must be one of {1}"
                .format(session_affinity_enabled_state, allowed_values)
            )

        self._session_affinity_enabled_state = session_affinity_enabled_state

    @property
    def session_affinity_ttl_seconds(self):
        """Gets the session_affinity_ttl_seconds of this FrontendEndpointUpdateParameters.

        UNUSED. This field will be ignored. The TTL to use in seconds for session affinity, if applicable.

        :return: The session_affinity_ttl_seconds of this FrontendEndpointUpdateParameters.
        :rtype: int
        """
        return self._session_affinity_ttl_seconds

    @session_affinity_ttl_seconds.setter
    def session_affinity_ttl_seconds(self, session_affinity_ttl_seconds):
        """Sets the session_affinity_ttl_seconds of this FrontendEndpointUpdateParameters.

        UNUSED. This field will be ignored. The TTL to use in seconds for session affinity, if applicable.

        :param session_affinity_ttl_seconds: The session_affinity_ttl_seconds of this FrontendEndpointUpdateParameters.
        :type session_affinity_ttl_seconds: int
        """

        self._session_affinity_ttl_seconds = session_affinity_ttl_seconds

    @property
    def web_application_firewall_policy_link(self):
        """Gets the web_application_firewall_policy_link of this FrontendEndpointUpdateParameters.


        :return: The web_application_firewall_policy_link of this FrontendEndpointUpdateParameters.
        :rtype: FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLink
        """
        return self._web_application_firewall_policy_link

    @web_application_firewall_policy_link.setter
    def web_application_firewall_policy_link(self, web_application_firewall_policy_link):
        """Sets the web_application_firewall_policy_link of this FrontendEndpointUpdateParameters.


        :param web_application_firewall_policy_link: The web_application_firewall_policy_link of this FrontendEndpointUpdateParameters.
        :type web_application_firewall_policy_link: FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLink
        """

        self._web_application_firewall_policy_link = web_application_firewall_policy_link
