/**
 * FrontDoorManagementClient
 * Use these APIs to manage Azure Front Door resources through the Azure Resource Manager. You must make sure that requests made to these resources are secure.
 *
 * The version of the OpenAPI document: 2020-01-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRulesEngineRule.h
 *
 * Contains a list of match conditions, and an action on how to modify the request/response. If multiple rules match, the actions from one rule that conflict with a previous rule overwrite for a singular action, or append in the case of headers manipulation.
 */

#ifndef OAIRulesEngineRule_H
#define OAIRulesEngineRule_H

#include <QJsonObject>

#include "OAIRulesEngineAction.h"
#include "OAIRulesEngineMatchCondition.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIRulesEngineAction;
class OAIRulesEngineMatchCondition;

class OAIRulesEngineRule : public OAIObject {
public:
    OAIRulesEngineRule();
    OAIRulesEngineRule(QString json);
    ~OAIRulesEngineRule() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIRulesEngineAction getAction() const;
    void setAction(const OAIRulesEngineAction &action);
    bool is_action_Set() const;
    bool is_action_Valid() const;

    QList<OAIRulesEngineMatchCondition> getMatchConditions() const;
    void setMatchConditions(const QList<OAIRulesEngineMatchCondition> &match_conditions);
    bool is_match_conditions_Set() const;
    bool is_match_conditions_Valid() const;

    QString getMatchProcessingBehavior() const;
    void setMatchProcessingBehavior(const QString &match_processing_behavior);
    bool is_match_processing_behavior_Set() const;
    bool is_match_processing_behavior_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    qint32 getPriority() const;
    void setPriority(const qint32 &priority);
    bool is_priority_Set() const;
    bool is_priority_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIRulesEngineAction m_action;
    bool m_action_isSet;
    bool m_action_isValid;

    QList<OAIRulesEngineMatchCondition> m_match_conditions;
    bool m_match_conditions_isSet;
    bool m_match_conditions_isValid;

    QString m_match_processing_behavior;
    bool m_match_processing_behavior_isSet;
    bool m_match_processing_behavior_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    qint32 m_priority;
    bool m_priority_isSet;
    bool m_priority_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRulesEngineRule)

#endif // OAIRulesEngineRule_H
