/**
 * FrontDoorManagementClient
 * Use these APIs to manage Azure Front Door resources through the Azure Resource Manager. You must make sure that requests made to these resources are secure.
 *
 * The version of the OpenAPI document: 2019-04-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The BackendPoolsSettings model module.
 * @module model/BackendPoolsSettings
 * @version 2019-04-01
 */
class BackendPoolsSettings {
    /**
     * Constructs a new <code>BackendPoolsSettings</code>.
     * Settings that apply to all backend pools.
     * @alias module:model/BackendPoolsSettings
     */
    constructor() { 
        
        BackendPoolsSettings.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['enforceCertificateNameCheck'] = 'Enabled';
    }

    /**
     * Constructs a <code>BackendPoolsSettings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BackendPoolsSettings} obj Optional instance to populate.
     * @return {module:model/BackendPoolsSettings} The populated <code>BackendPoolsSettings</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BackendPoolsSettings();

            if (data.hasOwnProperty('enforceCertificateNameCheck')) {
                obj['enforceCertificateNameCheck'] = ApiClient.convertToType(data['enforceCertificateNameCheck'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BackendPoolsSettings</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BackendPoolsSettings</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['enforceCertificateNameCheck'] && !(typeof data['enforceCertificateNameCheck'] === 'string' || data['enforceCertificateNameCheck'] instanceof String)) {
            throw new Error("Expected the field `enforceCertificateNameCheck` to be a primitive type in the JSON string but got " + data['enforceCertificateNameCheck']);
        }

        return true;
    }


}



/**
 * Whether to enforce certificate name check on HTTPS requests to all backend pools. No effect on non-HTTPS requests.
 * @member {module:model/BackendPoolsSettings.EnforceCertificateNameCheckEnum} enforceCertificateNameCheck
 * @default 'Enabled'
 */
BackendPoolsSettings.prototype['enforceCertificateNameCheck'] = 'Enabled';





/**
 * Allowed values for the <code>enforceCertificateNameCheck</code> property.
 * @enum {String}
 * @readonly
 */
BackendPoolsSettings['EnforceCertificateNameCheckEnum'] = {

    /**
     * value: "Enabled"
     * @const
     */
    "Enabled": "Enabled",

    /**
     * value: "Disabled"
     * @const
     */
    "Disabled": "Disabled"
};



export default BackendPoolsSettings;

