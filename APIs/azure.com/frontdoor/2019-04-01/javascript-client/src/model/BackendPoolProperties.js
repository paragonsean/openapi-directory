/**
 * FrontDoorManagementClient
 * Use these APIs to manage Azure Front Door resources through the Azure Resource Manager. You must make sure that requests made to these resources are secure.
 *
 * The version of the OpenAPI document: 2019-04-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Backend from './Backend';
import BackendPoolUpdateParameters from './BackendPoolUpdateParameters';
import BackendPoolUpdateParametersHealthProbeSettings from './BackendPoolUpdateParametersHealthProbeSettings';
import ResourceState from './ResourceState';

/**
 * The BackendPoolProperties model module.
 * @module model/BackendPoolProperties
 * @version 2019-04-01
 */
class BackendPoolProperties {
    /**
     * Constructs a new <code>BackendPoolProperties</code>.
     * The JSON object that contains the properties required to create a routing rule.
     * @alias module:model/BackendPoolProperties
     * @implements module:model/BackendPoolUpdateParameters
     */
    constructor() { 
        BackendPoolUpdateParameters.initialize(this);
        BackendPoolProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BackendPoolProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BackendPoolProperties} obj Optional instance to populate.
     * @return {module:model/BackendPoolProperties} The populated <code>BackendPoolProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BackendPoolProperties();
            BackendPoolUpdateParameters.constructFromObject(data, obj);

            if (data.hasOwnProperty('resourceState')) {
                obj['resourceState'] = ResourceState.constructFromObject(data['resourceState']);
            }
            if (data.hasOwnProperty('backends')) {
                obj['backends'] = ApiClient.convertToType(data['backends'], [Backend]);
            }
            if (data.hasOwnProperty('healthProbeSettings')) {
                obj['healthProbeSettings'] = BackendPoolUpdateParametersHealthProbeSettings.constructFromObject(data['healthProbeSettings']);
            }
            if (data.hasOwnProperty('loadBalancingSettings')) {
                obj['loadBalancingSettings'] = BackendPoolUpdateParametersHealthProbeSettings.constructFromObject(data['loadBalancingSettings']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BackendPoolProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BackendPoolProperties</code>.
     */
    static validateJSON(data) {
        if (data['backends']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['backends'])) {
                throw new Error("Expected the field `backends` to be an array in the JSON data but got " + data['backends']);
            }
            // validate the optional field `backends` (array)
            for (const item of data['backends']) {
                Backend.validateJSON(item);
            };
        }
        // validate the optional field `healthProbeSettings`
        if (data['healthProbeSettings']) { // data not null
          BackendPoolUpdateParametersHealthProbeSettings.validateJSON(data['healthProbeSettings']);
        }
        // validate the optional field `loadBalancingSettings`
        if (data['loadBalancingSettings']) { // data not null
          BackendPoolUpdateParametersHealthProbeSettings.validateJSON(data['loadBalancingSettings']);
        }

        return true;
    }


}



/**
 * @member {module:model/ResourceState} resourceState
 */
BackendPoolProperties.prototype['resourceState'] = undefined;

/**
 * The set of backends for this pool
 * @member {Array.<module:model/Backend>} backends
 */
BackendPoolProperties.prototype['backends'] = undefined;

/**
 * @member {module:model/BackendPoolUpdateParametersHealthProbeSettings} healthProbeSettings
 */
BackendPoolProperties.prototype['healthProbeSettings'] = undefined;

/**
 * @member {module:model/BackendPoolUpdateParametersHealthProbeSettings} loadBalancingSettings
 */
BackendPoolProperties.prototype['loadBalancingSettings'] = undefined;


// Implement BackendPoolUpdateParameters interface:
/**
 * The set of backends for this pool
 * @member {Array.<module:model/Backend>} backends
 */
BackendPoolUpdateParameters.prototype['backends'] = undefined;
/**
 * @member {module:model/BackendPoolUpdateParametersHealthProbeSettings} healthProbeSettings
 */
BackendPoolUpdateParameters.prototype['healthProbeSettings'] = undefined;
/**
 * @member {module:model/BackendPoolUpdateParametersHealthProbeSettings} loadBalancingSettings
 */
BackendPoolUpdateParameters.prototype['loadBalancingSettings'] = undefined;




export default BackendPoolProperties;

