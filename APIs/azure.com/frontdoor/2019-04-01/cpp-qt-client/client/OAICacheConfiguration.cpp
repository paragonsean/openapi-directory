/**
 * FrontDoorManagementClient
 * Use these APIs to manage Azure Front Door resources through the Azure Resource Manager. You must make sure that requests made to these resources are secure.
 *
 * The version of the OpenAPI document: 2019-04-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICacheConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICacheConfiguration::OAICacheConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICacheConfiguration::OAICacheConfiguration() {
    this->initializeModel();
}

OAICacheConfiguration::~OAICacheConfiguration() {}

void OAICacheConfiguration::initializeModel() {

    m_dynamic_compression_isSet = false;
    m_dynamic_compression_isValid = false;

    m_query_parameter_strip_directive_isSet = false;
    m_query_parameter_strip_directive_isValid = false;
}

void OAICacheConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICacheConfiguration::fromJsonObject(QJsonObject json) {

    m_dynamic_compression_isValid = ::OpenAPI::fromJsonValue(m_dynamic_compression, json[QString("dynamicCompression")]);
    m_dynamic_compression_isSet = !json[QString("dynamicCompression")].isNull() && m_dynamic_compression_isValid;

    m_query_parameter_strip_directive_isValid = ::OpenAPI::fromJsonValue(m_query_parameter_strip_directive, json[QString("queryParameterStripDirective")]);
    m_query_parameter_strip_directive_isSet = !json[QString("queryParameterStripDirective")].isNull() && m_query_parameter_strip_directive_isValid;
}

QString OAICacheConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICacheConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_dynamic_compression_isSet) {
        obj.insert(QString("dynamicCompression"), ::OpenAPI::toJsonValue(m_dynamic_compression));
    }
    if (m_query_parameter_strip_directive_isSet) {
        obj.insert(QString("queryParameterStripDirective"), ::OpenAPI::toJsonValue(m_query_parameter_strip_directive));
    }
    return obj;
}

QString OAICacheConfiguration::getDynamicCompression() const {
    return m_dynamic_compression;
}
void OAICacheConfiguration::setDynamicCompression(const QString &dynamic_compression) {
    m_dynamic_compression = dynamic_compression;
    m_dynamic_compression_isSet = true;
}

bool OAICacheConfiguration::is_dynamic_compression_Set() const{
    return m_dynamic_compression_isSet;
}

bool OAICacheConfiguration::is_dynamic_compression_Valid() const{
    return m_dynamic_compression_isValid;
}

QString OAICacheConfiguration::getQueryParameterStripDirective() const {
    return m_query_parameter_strip_directive;
}
void OAICacheConfiguration::setQueryParameterStripDirective(const QString &query_parameter_strip_directive) {
    m_query_parameter_strip_directive = query_parameter_strip_directive;
    m_query_parameter_strip_directive_isSet = true;
}

bool OAICacheConfiguration::is_query_parameter_strip_directive_Set() const{
    return m_query_parameter_strip_directive_isSet;
}

bool OAICacheConfiguration::is_query_parameter_strip_directive_Valid() const{
    return m_query_parameter_strip_directive_isValid;
}

bool OAICacheConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_dynamic_compression_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_query_parameter_strip_directive_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICacheConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
