/**
 * FrontDoorManagementClient
 * Use these APIs to manage Azure Front Door resources through the Azure Resource Manager. You must make sure that requests made to these resources are secure.
 *
 * The version of the OpenAPI document: 2019-04-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBackendPoolsSettings.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBackendPoolsSettings::OAIBackendPoolsSettings(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBackendPoolsSettings::OAIBackendPoolsSettings() {
    this->initializeModel();
}

OAIBackendPoolsSettings::~OAIBackendPoolsSettings() {}

void OAIBackendPoolsSettings::initializeModel() {

    m_enforce_certificate_name_check_isSet = false;
    m_enforce_certificate_name_check_isValid = false;
}

void OAIBackendPoolsSettings::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBackendPoolsSettings::fromJsonObject(QJsonObject json) {

    m_enforce_certificate_name_check_isValid = ::OpenAPI::fromJsonValue(m_enforce_certificate_name_check, json[QString("enforceCertificateNameCheck")]);
    m_enforce_certificate_name_check_isSet = !json[QString("enforceCertificateNameCheck")].isNull() && m_enforce_certificate_name_check_isValid;
}

QString OAIBackendPoolsSettings::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBackendPoolsSettings::asJsonObject() const {
    QJsonObject obj;
    if (m_enforce_certificate_name_check_isSet) {
        obj.insert(QString("enforceCertificateNameCheck"), ::OpenAPI::toJsonValue(m_enforce_certificate_name_check));
    }
    return obj;
}

QString OAIBackendPoolsSettings::getEnforceCertificateNameCheck() const {
    return m_enforce_certificate_name_check;
}
void OAIBackendPoolsSettings::setEnforceCertificateNameCheck(const QString &enforce_certificate_name_check) {
    m_enforce_certificate_name_check = enforce_certificate_name_check;
    m_enforce_certificate_name_check_isSet = true;
}

bool OAIBackendPoolsSettings::is_enforce_certificate_name_check_Set() const{
    return m_enforce_certificate_name_check_isSet;
}

bool OAIBackendPoolsSettings::is_enforce_certificate_name_check_Valid() const{
    return m_enforce_certificate_name_check_isValid;
}

bool OAIBackendPoolsSettings::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_enforce_certificate_name_check_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBackendPoolsSettings::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
