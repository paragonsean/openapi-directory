/**
 * FrontDoorManagementClient
 * Use these APIs to manage Azure Front Door resources through the Azure Resource Manager. You must make sure that requests made to these resources are secure.
 *
 * The version of the OpenAPI document: 2019-04-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRedirectConfiguration.h
 *
 * Describes Redirect Route.
 */

#ifndef OAIRedirectConfiguration_H
#define OAIRedirectConfiguration_H

#include <QJsonObject>

#include "OAIRouteConfiguration.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIRedirectConfiguration : public OAIObject {
public:
    OAIRedirectConfiguration();
    OAIRedirectConfiguration(QString json);
    ~OAIRedirectConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCustomFragment() const;
    void setCustomFragment(const QString &custom_fragment);
    bool is_custom_fragment_Set() const;
    bool is_custom_fragment_Valid() const;

    QString getCustomHost() const;
    void setCustomHost(const QString &custom_host);
    bool is_custom_host_Set() const;
    bool is_custom_host_Valid() const;

    QString getCustomPath() const;
    void setCustomPath(const QString &custom_path);
    bool is_custom_path_Set() const;
    bool is_custom_path_Valid() const;

    QString getCustomQueryString() const;
    void setCustomQueryString(const QString &custom_query_string);
    bool is_custom_query_string_Set() const;
    bool is_custom_query_string_Valid() const;

    QString getRedirectProtocol() const;
    void setRedirectProtocol(const QString &redirect_protocol);
    bool is_redirect_protocol_Set() const;
    bool is_redirect_protocol_Valid() const;

    QString getRedirectType() const;
    void setRedirectType(const QString &redirect_type);
    bool is_redirect_type_Set() const;
    bool is_redirect_type_Valid() const;

    QString getOdataType() const;
    void setOdataType(const QString &odata_type);
    bool is_odata_type_Set() const;
    bool is_odata_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_custom_fragment;
    bool m_custom_fragment_isSet;
    bool m_custom_fragment_isValid;

    QString m_custom_host;
    bool m_custom_host_isSet;
    bool m_custom_host_isValid;

    QString m_custom_path;
    bool m_custom_path_isSet;
    bool m_custom_path_isValid;

    QString m_custom_query_string;
    bool m_custom_query_string_isSet;
    bool m_custom_query_string_isValid;

    QString m_redirect_protocol;
    bool m_redirect_protocol_isSet;
    bool m_redirect_protocol_isValid;

    QString m_redirect_type;
    bool m_redirect_type_isSet;
    bool m_redirect_type_isValid;

    QString m_odata_type;
    bool m_odata_type_isSet;
    bool m_odata_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRedirectConfiguration)

#endif // OAIRedirectConfiguration_H
