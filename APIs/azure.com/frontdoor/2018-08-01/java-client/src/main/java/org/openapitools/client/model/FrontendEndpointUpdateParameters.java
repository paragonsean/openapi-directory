/*
 * FrontDoorManagementClient
 * Use these APIs to manage Azure Front Door resources through the Azure Resource Manager. You must make sure that requests made to these resources are secure.
 *
 * The version of the OpenAPI document: 2018-08-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLink;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Frontend endpoint used in routing rule
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:16:22.444394-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class FrontendEndpointUpdateParameters {
  public static final String SERIALIZED_NAME_HOST_NAME = "hostName";
  @SerializedName(SERIALIZED_NAME_HOST_NAME)
  private String hostName;

  /**
   * Whether to allow session affinity on this host. Valid options are &#39;Enabled&#39; or &#39;Disabled&#39;
   */
  @JsonAdapter(SessionAffinityEnabledStateEnum.Adapter.class)
  public enum SessionAffinityEnabledStateEnum {
    ENABLED("Enabled"),
    
    DISABLED("Disabled");

    private String value;

    SessionAffinityEnabledStateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static SessionAffinityEnabledStateEnum fromValue(String value) {
      for (SessionAffinityEnabledStateEnum b : SessionAffinityEnabledStateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<SessionAffinityEnabledStateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SessionAffinityEnabledStateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public SessionAffinityEnabledStateEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return SessionAffinityEnabledStateEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      SessionAffinityEnabledStateEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_SESSION_AFFINITY_ENABLED_STATE = "sessionAffinityEnabledState";
  @SerializedName(SERIALIZED_NAME_SESSION_AFFINITY_ENABLED_STATE)
  private SessionAffinityEnabledStateEnum sessionAffinityEnabledState;

  public static final String SERIALIZED_NAME_SESSION_AFFINITY_TTL_SECONDS = "sessionAffinityTtlSeconds";
  @SerializedName(SERIALIZED_NAME_SESSION_AFFINITY_TTL_SECONDS)
  private Integer sessionAffinityTtlSeconds;

  public static final String SERIALIZED_NAME_WEB_APPLICATION_FIREWALL_POLICY_LINK = "webApplicationFirewallPolicyLink";
  @SerializedName(SERIALIZED_NAME_WEB_APPLICATION_FIREWALL_POLICY_LINK)
  private FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLink webApplicationFirewallPolicyLink;

  public FrontendEndpointUpdateParameters() {
  }

  public FrontendEndpointUpdateParameters hostName(String hostName) {
    this.hostName = hostName;
    return this;
  }

  /**
   * The host name of the frontendEndpoint. Must be a domain name.
   * @return hostName
   */
  @javax.annotation.Nullable
  public String getHostName() {
    return hostName;
  }

  public void setHostName(String hostName) {
    this.hostName = hostName;
  }


  public FrontendEndpointUpdateParameters sessionAffinityEnabledState(SessionAffinityEnabledStateEnum sessionAffinityEnabledState) {
    this.sessionAffinityEnabledState = sessionAffinityEnabledState;
    return this;
  }

  /**
   * Whether to allow session affinity on this host. Valid options are &#39;Enabled&#39; or &#39;Disabled&#39;
   * @return sessionAffinityEnabledState
   */
  @javax.annotation.Nullable
  public SessionAffinityEnabledStateEnum getSessionAffinityEnabledState() {
    return sessionAffinityEnabledState;
  }

  public void setSessionAffinityEnabledState(SessionAffinityEnabledStateEnum sessionAffinityEnabledState) {
    this.sessionAffinityEnabledState = sessionAffinityEnabledState;
  }


  public FrontendEndpointUpdateParameters sessionAffinityTtlSeconds(Integer sessionAffinityTtlSeconds) {
    this.sessionAffinityTtlSeconds = sessionAffinityTtlSeconds;
    return this;
  }

  /**
   * UNUSED. This field will be ignored. The TTL to use in seconds for session affinity, if applicable.
   * @return sessionAffinityTtlSeconds
   */
  @javax.annotation.Nullable
  public Integer getSessionAffinityTtlSeconds() {
    return sessionAffinityTtlSeconds;
  }

  public void setSessionAffinityTtlSeconds(Integer sessionAffinityTtlSeconds) {
    this.sessionAffinityTtlSeconds = sessionAffinityTtlSeconds;
  }


  public FrontendEndpointUpdateParameters webApplicationFirewallPolicyLink(FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLink webApplicationFirewallPolicyLink) {
    this.webApplicationFirewallPolicyLink = webApplicationFirewallPolicyLink;
    return this;
  }

  /**
   * Get webApplicationFirewallPolicyLink
   * @return webApplicationFirewallPolicyLink
   */
  @javax.annotation.Nullable
  public FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLink getWebApplicationFirewallPolicyLink() {
    return webApplicationFirewallPolicyLink;
  }

  public void setWebApplicationFirewallPolicyLink(FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLink webApplicationFirewallPolicyLink) {
    this.webApplicationFirewallPolicyLink = webApplicationFirewallPolicyLink;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FrontendEndpointUpdateParameters frontendEndpointUpdateParameters = (FrontendEndpointUpdateParameters) o;
    return Objects.equals(this.hostName, frontendEndpointUpdateParameters.hostName) &&
        Objects.equals(this.sessionAffinityEnabledState, frontendEndpointUpdateParameters.sessionAffinityEnabledState) &&
        Objects.equals(this.sessionAffinityTtlSeconds, frontendEndpointUpdateParameters.sessionAffinityTtlSeconds) &&
        Objects.equals(this.webApplicationFirewallPolicyLink, frontendEndpointUpdateParameters.webApplicationFirewallPolicyLink);
  }

  @Override
  public int hashCode() {
    return Objects.hash(hostName, sessionAffinityEnabledState, sessionAffinityTtlSeconds, webApplicationFirewallPolicyLink);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FrontendEndpointUpdateParameters {\n");
    sb.append("    hostName: ").append(toIndentedString(hostName)).append("\n");
    sb.append("    sessionAffinityEnabledState: ").append(toIndentedString(sessionAffinityEnabledState)).append("\n");
    sb.append("    sessionAffinityTtlSeconds: ").append(toIndentedString(sessionAffinityTtlSeconds)).append("\n");
    sb.append("    webApplicationFirewallPolicyLink: ").append(toIndentedString(webApplicationFirewallPolicyLink)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("hostName");
    openapiFields.add("sessionAffinityEnabledState");
    openapiFields.add("sessionAffinityTtlSeconds");
    openapiFields.add("webApplicationFirewallPolicyLink");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to FrontendEndpointUpdateParameters
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!FrontendEndpointUpdateParameters.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in FrontendEndpointUpdateParameters is not found in the empty JSON string", FrontendEndpointUpdateParameters.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!FrontendEndpointUpdateParameters.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `FrontendEndpointUpdateParameters` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("hostName") != null && !jsonObj.get("hostName").isJsonNull()) && !jsonObj.get("hostName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `hostName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("hostName").toString()));
      }
      if ((jsonObj.get("sessionAffinityEnabledState") != null && !jsonObj.get("sessionAffinityEnabledState").isJsonNull()) && !jsonObj.get("sessionAffinityEnabledState").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sessionAffinityEnabledState` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sessionAffinityEnabledState").toString()));
      }
      // validate the optional field `sessionAffinityEnabledState`
      if (jsonObj.get("sessionAffinityEnabledState") != null && !jsonObj.get("sessionAffinityEnabledState").isJsonNull()) {
        SessionAffinityEnabledStateEnum.validateJsonElement(jsonObj.get("sessionAffinityEnabledState"));
      }
      // validate the optional field `webApplicationFirewallPolicyLink`
      if (jsonObj.get("webApplicationFirewallPolicyLink") != null && !jsonObj.get("webApplicationFirewallPolicyLink").isJsonNull()) {
        FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLink.validateJsonElement(jsonObj.get("webApplicationFirewallPolicyLink"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!FrontendEndpointUpdateParameters.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'FrontendEndpointUpdateParameters' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<FrontendEndpointUpdateParameters> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(FrontendEndpointUpdateParameters.class));

       return (TypeAdapter<T>) new TypeAdapter<FrontendEndpointUpdateParameters>() {
           @Override
           public void write(JsonWriter out, FrontendEndpointUpdateParameters value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public FrontendEndpointUpdateParameters read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of FrontendEndpointUpdateParameters given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of FrontendEndpointUpdateParameters
   * @throws IOException if the JSON string is invalid with respect to FrontendEndpointUpdateParameters
   */
  public static FrontendEndpointUpdateParameters fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, FrontendEndpointUpdateParameters.class);
  }

  /**
   * Convert an instance of FrontendEndpointUpdateParameters to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

