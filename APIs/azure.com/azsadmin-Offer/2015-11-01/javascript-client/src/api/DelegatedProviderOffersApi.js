/**
 * SubscriptionClient
 * The User Subscription Management Client.
 *
 * The version of the OpenAPI document: 2015-11-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Offer from '../model/Offer';
import OfferList from '../model/OfferList';

/**
* DelegatedProviderOffers service.
* @module api/DelegatedProviderOffersApi
* @version 2015-11-01
*/
export default class DelegatedProviderOffersApi {

    /**
    * Constructs a new DelegatedProviderOffersApi. 
    * @alias module:api/DelegatedProviderOffersApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the delegatedProviderOffersGet operation.
     * @callback module:api/DelegatedProviderOffersApi~delegatedProviderOffersGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Offer} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the specified offer for the delegated provider.
     * @param {String} delegatedProviderId Id of the delegated provider.
     * @param {String} offerName Name of the offer.
     * @param {String} apiVersion Client Api Version.
     * @param {module:api/DelegatedProviderOffersApi~delegatedProviderOffersGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Offer}
     */
    delegatedProviderOffersGet(delegatedProviderId, offerName, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'delegatedProviderId' is set
      if (delegatedProviderId === undefined || delegatedProviderId === null) {
        throw new Error("Missing the required parameter 'delegatedProviderId' when calling delegatedProviderOffersGet");
      }
      // verify the required parameter 'offerName' is set
      if (offerName === undefined || offerName === null) {
        throw new Error("Missing the required parameter 'offerName' when calling delegatedProviderOffersGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling delegatedProviderOffersGet");
      }

      let pathParams = {
        'delegatedProviderId': delegatedProviderId,
        'offerName': offerName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Offer;
      return this.apiClient.callApi(
        '/delegatedProviders/{delegatedProviderId}/offers/{offerName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the delegatedProviderOffersList operation.
     * @callback module:api/DelegatedProviderOffersApi~delegatedProviderOffersListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OfferList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the list of offers for the specified delegated provider.
     * @param {String} delegatedProviderId Id of the delegated provider.
     * @param {String} apiVersion Client Api Version.
     * @param {module:api/DelegatedProviderOffersApi~delegatedProviderOffersListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OfferList}
     */
    delegatedProviderOffersList(delegatedProviderId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'delegatedProviderId' is set
      if (delegatedProviderId === undefined || delegatedProviderId === null) {
        throw new Error("Missing the required parameter 'delegatedProviderId' when calling delegatedProviderOffersList");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling delegatedProviderOffersList");
      }

      let pathParams = {
        'delegatedProviderId': delegatedProviderId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = OfferList;
      return this.apiClient.callApi(
        '/delegatedProviders/{delegatedProviderId}/offers', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
