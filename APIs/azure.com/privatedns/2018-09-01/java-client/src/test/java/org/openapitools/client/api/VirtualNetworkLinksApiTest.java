/*
 * PrivateDnsManagementClient
 * The Private DNS Management Client.
 *
 * The version of the OpenAPI document: 2018-09-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CloudError;
import org.openapitools.client.model.VirtualNetworkLink;
import org.openapitools.client.model.VirtualNetworkLinkListResult;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for VirtualNetworkLinksApi
 */
@Disabled
public class VirtualNetworkLinksApiTest {

    private final VirtualNetworkLinksApi api = new VirtualNetworkLinksApi();

    /**
     * Creates or updates a virtual network link to the specified Private DNS zone.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void virtualNetworkLinksCreateOrUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String privateZoneName = null;
        String virtualNetworkLinkName = null;
        String apiVersion = null;
        String subscriptionId = null;
        VirtualNetworkLink parameters = null;
        String ifMatch = null;
        String ifNoneMatch = null;
        VirtualNetworkLink response = api.virtualNetworkLinksCreateOrUpdate(resourceGroupName, privateZoneName, virtualNetworkLinkName, apiVersion, subscriptionId, parameters, ifMatch, ifNoneMatch);
        // TODO: test validations
    }

    /**
     * Deletes a virtual network link to the specified Private DNS zone. WARNING: In case of a registration virtual network, all auto-registered DNS records in the zone for the virtual network will also be deleted. This operation cannot be undone.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void virtualNetworkLinksDeleteTest() throws ApiException {
        String resourceGroupName = null;
        String privateZoneName = null;
        String virtualNetworkLinkName = null;
        String apiVersion = null;
        String subscriptionId = null;
        String ifMatch = null;
        api.virtualNetworkLinksDelete(resourceGroupName, privateZoneName, virtualNetworkLinkName, apiVersion, subscriptionId, ifMatch);
        // TODO: test validations
    }

    /**
     * Gets a virtual network link to the specified Private DNS zone.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void virtualNetworkLinksGetTest() throws ApiException {
        String resourceGroupName = null;
        String privateZoneName = null;
        String virtualNetworkLinkName = null;
        String apiVersion = null;
        String subscriptionId = null;
        VirtualNetworkLink response = api.virtualNetworkLinksGet(resourceGroupName, privateZoneName, virtualNetworkLinkName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Lists the virtual network links to the specified Private DNS zone.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void virtualNetworkLinksListTest() throws ApiException {
        String resourceGroupName = null;
        String privateZoneName = null;
        String apiVersion = null;
        String subscriptionId = null;
        Integer $top = null;
        VirtualNetworkLinkListResult response = api.virtualNetworkLinksList(resourceGroupName, privateZoneName, apiVersion, subscriptionId, $top);
        // TODO: test validations
    }

    /**
     * Updates a virtual network link to the specified Private DNS zone.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void virtualNetworkLinksUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String privateZoneName = null;
        String virtualNetworkLinkName = null;
        String apiVersion = null;
        String subscriptionId = null;
        VirtualNetworkLink parameters = null;
        String ifMatch = null;
        VirtualNetworkLink response = api.virtualNetworkLinksUpdate(resourceGroupName, privateZoneName, virtualNetworkLinkName, apiVersion, subscriptionId, parameters, ifMatch);
        // TODO: test validations
    }

}
