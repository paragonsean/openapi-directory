/*
 * PrivateDnsManagementClient
 * The Private DNS Management Client.
 *
 * The version of the OpenAPI document: 2018-09-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CloudError;
import org.openapitools.client.model.PrivateZone;
import org.openapitools.client.model.PrivateZoneListResult;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PrivateZonesApi
 */
@Disabled
public class PrivateZonesApiTest {

    private final PrivateZonesApi api = new PrivateZonesApi();

    /**
     * Creates or updates a Private DNS zone. Does not modify Links to virtual networks or DNS records within the zone.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void privateZonesCreateOrUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String privateZoneName = null;
        String apiVersion = null;
        String subscriptionId = null;
        PrivateZone parameters = null;
        String ifMatch = null;
        String ifNoneMatch = null;
        PrivateZone response = api.privateZonesCreateOrUpdate(resourceGroupName, privateZoneName, apiVersion, subscriptionId, parameters, ifMatch, ifNoneMatch);
        // TODO: test validations
    }

    /**
     * Deletes a Private DNS zone. WARNING: All DNS records in the zone will also be deleted. This operation cannot be undone. Private DNS zone cannot be deleted unless all virtual network links to it are removed.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void privateZonesDeleteTest() throws ApiException {
        String resourceGroupName = null;
        String privateZoneName = null;
        String apiVersion = null;
        String subscriptionId = null;
        String ifMatch = null;
        api.privateZonesDelete(resourceGroupName, privateZoneName, apiVersion, subscriptionId, ifMatch);
        // TODO: test validations
    }

    /**
     * Gets a Private DNS zone. Retrieves the zone properties, but not the virtual networks links or the record sets within the zone.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void privateZonesGetTest() throws ApiException {
        String resourceGroupName = null;
        String privateZoneName = null;
        String apiVersion = null;
        String subscriptionId = null;
        PrivateZone response = api.privateZonesGet(resourceGroupName, privateZoneName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Lists the Private DNS zones in all resource groups in a subscription.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void privateZonesListTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        Integer $top = null;
        PrivateZoneListResult response = api.privateZonesList(apiVersion, subscriptionId, $top);
        // TODO: test validations
    }

    /**
     * Lists the Private DNS zones within a resource group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void privateZonesListByResourceGroupTest() throws ApiException {
        String resourceGroupName = null;
        String apiVersion = null;
        String subscriptionId = null;
        Integer $top = null;
        PrivateZoneListResult response = api.privateZonesListByResourceGroup(resourceGroupName, apiVersion, subscriptionId, $top);
        // TODO: test validations
    }

    /**
     * Updates a Private DNS zone. Does not modify virtual network links or DNS records within the zone.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void privateZonesUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String privateZoneName = null;
        String apiVersion = null;
        String subscriptionId = null;
        PrivateZone parameters = null;
        String ifMatch = null;
        PrivateZone response = api.privateZonesUpdate(resourceGroupName, privateZoneName, apiVersion, subscriptionId, parameters, ifMatch);
        // TODO: test validations
    }

}
