/**
 * PrivateDnsManagementClient
 * The Private DNS Management Client.
 *
 * The version of the OpenAPI document: 2018-09-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPrivateZoneProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPrivateZoneProperties::OAIPrivateZoneProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPrivateZoneProperties::OAIPrivateZoneProperties() {
    this->initializeModel();
}

OAIPrivateZoneProperties::~OAIPrivateZoneProperties() {}

void OAIPrivateZoneProperties::initializeModel() {

    m_max_number_of_record_sets_isSet = false;
    m_max_number_of_record_sets_isValid = false;

    m_max_number_of_virtual_network_links_isSet = false;
    m_max_number_of_virtual_network_links_isValid = false;

    m_max_number_of_virtual_network_links_with_registration_isSet = false;
    m_max_number_of_virtual_network_links_with_registration_isValid = false;

    m_number_of_record_sets_isSet = false;
    m_number_of_record_sets_isValid = false;

    m_number_of_virtual_network_links_isSet = false;
    m_number_of_virtual_network_links_isValid = false;

    m_number_of_virtual_network_links_with_registration_isSet = false;
    m_number_of_virtual_network_links_with_registration_isValid = false;

    m_provisioning_state_isSet = false;
    m_provisioning_state_isValid = false;
}

void OAIPrivateZoneProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPrivateZoneProperties::fromJsonObject(QJsonObject json) {

    m_max_number_of_record_sets_isValid = ::OpenAPI::fromJsonValue(m_max_number_of_record_sets, json[QString("maxNumberOfRecordSets")]);
    m_max_number_of_record_sets_isSet = !json[QString("maxNumberOfRecordSets")].isNull() && m_max_number_of_record_sets_isValid;

    m_max_number_of_virtual_network_links_isValid = ::OpenAPI::fromJsonValue(m_max_number_of_virtual_network_links, json[QString("maxNumberOfVirtualNetworkLinks")]);
    m_max_number_of_virtual_network_links_isSet = !json[QString("maxNumberOfVirtualNetworkLinks")].isNull() && m_max_number_of_virtual_network_links_isValid;

    m_max_number_of_virtual_network_links_with_registration_isValid = ::OpenAPI::fromJsonValue(m_max_number_of_virtual_network_links_with_registration, json[QString("maxNumberOfVirtualNetworkLinksWithRegistration")]);
    m_max_number_of_virtual_network_links_with_registration_isSet = !json[QString("maxNumberOfVirtualNetworkLinksWithRegistration")].isNull() && m_max_number_of_virtual_network_links_with_registration_isValid;

    m_number_of_record_sets_isValid = ::OpenAPI::fromJsonValue(m_number_of_record_sets, json[QString("numberOfRecordSets")]);
    m_number_of_record_sets_isSet = !json[QString("numberOfRecordSets")].isNull() && m_number_of_record_sets_isValid;

    m_number_of_virtual_network_links_isValid = ::OpenAPI::fromJsonValue(m_number_of_virtual_network_links, json[QString("numberOfVirtualNetworkLinks")]);
    m_number_of_virtual_network_links_isSet = !json[QString("numberOfVirtualNetworkLinks")].isNull() && m_number_of_virtual_network_links_isValid;

    m_number_of_virtual_network_links_with_registration_isValid = ::OpenAPI::fromJsonValue(m_number_of_virtual_network_links_with_registration, json[QString("numberOfVirtualNetworkLinksWithRegistration")]);
    m_number_of_virtual_network_links_with_registration_isSet = !json[QString("numberOfVirtualNetworkLinksWithRegistration")].isNull() && m_number_of_virtual_network_links_with_registration_isValid;

    m_provisioning_state_isValid = ::OpenAPI::fromJsonValue(m_provisioning_state, json[QString("provisioningState")]);
    m_provisioning_state_isSet = !json[QString("provisioningState")].isNull() && m_provisioning_state_isValid;
}

QString OAIPrivateZoneProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPrivateZoneProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_max_number_of_record_sets_isSet) {
        obj.insert(QString("maxNumberOfRecordSets"), ::OpenAPI::toJsonValue(m_max_number_of_record_sets));
    }
    if (m_max_number_of_virtual_network_links_isSet) {
        obj.insert(QString("maxNumberOfVirtualNetworkLinks"), ::OpenAPI::toJsonValue(m_max_number_of_virtual_network_links));
    }
    if (m_max_number_of_virtual_network_links_with_registration_isSet) {
        obj.insert(QString("maxNumberOfVirtualNetworkLinksWithRegistration"), ::OpenAPI::toJsonValue(m_max_number_of_virtual_network_links_with_registration));
    }
    if (m_number_of_record_sets_isSet) {
        obj.insert(QString("numberOfRecordSets"), ::OpenAPI::toJsonValue(m_number_of_record_sets));
    }
    if (m_number_of_virtual_network_links_isSet) {
        obj.insert(QString("numberOfVirtualNetworkLinks"), ::OpenAPI::toJsonValue(m_number_of_virtual_network_links));
    }
    if (m_number_of_virtual_network_links_with_registration_isSet) {
        obj.insert(QString("numberOfVirtualNetworkLinksWithRegistration"), ::OpenAPI::toJsonValue(m_number_of_virtual_network_links_with_registration));
    }
    if (m_provisioning_state_isSet) {
        obj.insert(QString("provisioningState"), ::OpenAPI::toJsonValue(m_provisioning_state));
    }
    return obj;
}

qint64 OAIPrivateZoneProperties::getMaxNumberOfRecordSets() const {
    return m_max_number_of_record_sets;
}
void OAIPrivateZoneProperties::setMaxNumberOfRecordSets(const qint64 &max_number_of_record_sets) {
    m_max_number_of_record_sets = max_number_of_record_sets;
    m_max_number_of_record_sets_isSet = true;
}

bool OAIPrivateZoneProperties::is_max_number_of_record_sets_Set() const{
    return m_max_number_of_record_sets_isSet;
}

bool OAIPrivateZoneProperties::is_max_number_of_record_sets_Valid() const{
    return m_max_number_of_record_sets_isValid;
}

qint64 OAIPrivateZoneProperties::getMaxNumberOfVirtualNetworkLinks() const {
    return m_max_number_of_virtual_network_links;
}
void OAIPrivateZoneProperties::setMaxNumberOfVirtualNetworkLinks(const qint64 &max_number_of_virtual_network_links) {
    m_max_number_of_virtual_network_links = max_number_of_virtual_network_links;
    m_max_number_of_virtual_network_links_isSet = true;
}

bool OAIPrivateZoneProperties::is_max_number_of_virtual_network_links_Set() const{
    return m_max_number_of_virtual_network_links_isSet;
}

bool OAIPrivateZoneProperties::is_max_number_of_virtual_network_links_Valid() const{
    return m_max_number_of_virtual_network_links_isValid;
}

qint64 OAIPrivateZoneProperties::getMaxNumberOfVirtualNetworkLinksWithRegistration() const {
    return m_max_number_of_virtual_network_links_with_registration;
}
void OAIPrivateZoneProperties::setMaxNumberOfVirtualNetworkLinksWithRegistration(const qint64 &max_number_of_virtual_network_links_with_registration) {
    m_max_number_of_virtual_network_links_with_registration = max_number_of_virtual_network_links_with_registration;
    m_max_number_of_virtual_network_links_with_registration_isSet = true;
}

bool OAIPrivateZoneProperties::is_max_number_of_virtual_network_links_with_registration_Set() const{
    return m_max_number_of_virtual_network_links_with_registration_isSet;
}

bool OAIPrivateZoneProperties::is_max_number_of_virtual_network_links_with_registration_Valid() const{
    return m_max_number_of_virtual_network_links_with_registration_isValid;
}

qint64 OAIPrivateZoneProperties::getNumberOfRecordSets() const {
    return m_number_of_record_sets;
}
void OAIPrivateZoneProperties::setNumberOfRecordSets(const qint64 &number_of_record_sets) {
    m_number_of_record_sets = number_of_record_sets;
    m_number_of_record_sets_isSet = true;
}

bool OAIPrivateZoneProperties::is_number_of_record_sets_Set() const{
    return m_number_of_record_sets_isSet;
}

bool OAIPrivateZoneProperties::is_number_of_record_sets_Valid() const{
    return m_number_of_record_sets_isValid;
}

qint64 OAIPrivateZoneProperties::getNumberOfVirtualNetworkLinks() const {
    return m_number_of_virtual_network_links;
}
void OAIPrivateZoneProperties::setNumberOfVirtualNetworkLinks(const qint64 &number_of_virtual_network_links) {
    m_number_of_virtual_network_links = number_of_virtual_network_links;
    m_number_of_virtual_network_links_isSet = true;
}

bool OAIPrivateZoneProperties::is_number_of_virtual_network_links_Set() const{
    return m_number_of_virtual_network_links_isSet;
}

bool OAIPrivateZoneProperties::is_number_of_virtual_network_links_Valid() const{
    return m_number_of_virtual_network_links_isValid;
}

qint64 OAIPrivateZoneProperties::getNumberOfVirtualNetworkLinksWithRegistration() const {
    return m_number_of_virtual_network_links_with_registration;
}
void OAIPrivateZoneProperties::setNumberOfVirtualNetworkLinksWithRegistration(const qint64 &number_of_virtual_network_links_with_registration) {
    m_number_of_virtual_network_links_with_registration = number_of_virtual_network_links_with_registration;
    m_number_of_virtual_network_links_with_registration_isSet = true;
}

bool OAIPrivateZoneProperties::is_number_of_virtual_network_links_with_registration_Set() const{
    return m_number_of_virtual_network_links_with_registration_isSet;
}

bool OAIPrivateZoneProperties::is_number_of_virtual_network_links_with_registration_Valid() const{
    return m_number_of_virtual_network_links_with_registration_isValid;
}

QString OAIPrivateZoneProperties::getProvisioningState() const {
    return m_provisioning_state;
}
void OAIPrivateZoneProperties::setProvisioningState(const QString &provisioning_state) {
    m_provisioning_state = provisioning_state;
    m_provisioning_state_isSet = true;
}

bool OAIPrivateZoneProperties::is_provisioning_state_Set() const{
    return m_provisioning_state_isSet;
}

bool OAIPrivateZoneProperties::is_provisioning_state_Valid() const{
    return m_provisioning_state_isValid;
}

bool OAIPrivateZoneProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_max_number_of_record_sets_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_max_number_of_virtual_network_links_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_max_number_of_virtual_network_links_with_registration_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_number_of_record_sets_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_number_of_virtual_network_links_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_number_of_virtual_network_links_with_registration_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_provisioning_state_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPrivateZoneProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
