/**
 * PrivateDnsManagementClient
 * The Private DNS Management Client.
 *
 * The version of the OpenAPI document: 2018-09-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPrivateZoneProperties.h
 *
 * Represents the properties of the Private DNS zone.
 */

#ifndef OAIPrivateZoneProperties_H
#define OAIPrivateZoneProperties_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPrivateZoneProperties : public OAIObject {
public:
    OAIPrivateZoneProperties();
    OAIPrivateZoneProperties(QString json);
    ~OAIPrivateZoneProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint64 getMaxNumberOfRecordSets() const;
    void setMaxNumberOfRecordSets(const qint64 &max_number_of_record_sets);
    bool is_max_number_of_record_sets_Set() const;
    bool is_max_number_of_record_sets_Valid() const;

    qint64 getMaxNumberOfVirtualNetworkLinks() const;
    void setMaxNumberOfVirtualNetworkLinks(const qint64 &max_number_of_virtual_network_links);
    bool is_max_number_of_virtual_network_links_Set() const;
    bool is_max_number_of_virtual_network_links_Valid() const;

    qint64 getMaxNumberOfVirtualNetworkLinksWithRegistration() const;
    void setMaxNumberOfVirtualNetworkLinksWithRegistration(const qint64 &max_number_of_virtual_network_links_with_registration);
    bool is_max_number_of_virtual_network_links_with_registration_Set() const;
    bool is_max_number_of_virtual_network_links_with_registration_Valid() const;

    qint64 getNumberOfRecordSets() const;
    void setNumberOfRecordSets(const qint64 &number_of_record_sets);
    bool is_number_of_record_sets_Set() const;
    bool is_number_of_record_sets_Valid() const;

    qint64 getNumberOfVirtualNetworkLinks() const;
    void setNumberOfVirtualNetworkLinks(const qint64 &number_of_virtual_network_links);
    bool is_number_of_virtual_network_links_Set() const;
    bool is_number_of_virtual_network_links_Valid() const;

    qint64 getNumberOfVirtualNetworkLinksWithRegistration() const;
    void setNumberOfVirtualNetworkLinksWithRegistration(const qint64 &number_of_virtual_network_links_with_registration);
    bool is_number_of_virtual_network_links_with_registration_Set() const;
    bool is_number_of_virtual_network_links_with_registration_Valid() const;

    QString getProvisioningState() const;
    void setProvisioningState(const QString &provisioning_state);
    bool is_provisioning_state_Set() const;
    bool is_provisioning_state_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint64 m_max_number_of_record_sets;
    bool m_max_number_of_record_sets_isSet;
    bool m_max_number_of_record_sets_isValid;

    qint64 m_max_number_of_virtual_network_links;
    bool m_max_number_of_virtual_network_links_isSet;
    bool m_max_number_of_virtual_network_links_isValid;

    qint64 m_max_number_of_virtual_network_links_with_registration;
    bool m_max_number_of_virtual_network_links_with_registration_isSet;
    bool m_max_number_of_virtual_network_links_with_registration_isValid;

    qint64 m_number_of_record_sets;
    bool m_number_of_record_sets_isSet;
    bool m_number_of_record_sets_isValid;

    qint64 m_number_of_virtual_network_links;
    bool m_number_of_virtual_network_links_isSet;
    bool m_number_of_virtual_network_links_isValid;

    qint64 m_number_of_virtual_network_links_with_registration;
    bool m_number_of_virtual_network_links_with_registration_isSet;
    bool m_number_of_virtual_network_links_with_registration_isValid;

    QString m_provisioning_state;
    bool m_provisioning_state_isSet;
    bool m_provisioning_state_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPrivateZoneProperties)

#endif // OAIPrivateZoneProperties_H
