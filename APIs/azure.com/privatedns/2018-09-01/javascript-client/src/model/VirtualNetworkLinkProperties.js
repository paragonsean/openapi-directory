/**
 * PrivateDnsManagementClient
 * The Private DNS Management Client.
 *
 * The version of the OpenAPI document: 2018-09-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SubResource from './SubResource';

/**
 * The VirtualNetworkLinkProperties model module.
 * @module model/VirtualNetworkLinkProperties
 * @version 2018-09-01
 */
class VirtualNetworkLinkProperties {
    /**
     * Constructs a new <code>VirtualNetworkLinkProperties</code>.
     * Represents the properties of the Private DNS zone.
     * @alias module:model/VirtualNetworkLinkProperties
     */
    constructor() { 
        
        VirtualNetworkLinkProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>VirtualNetworkLinkProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VirtualNetworkLinkProperties} obj Optional instance to populate.
     * @return {module:model/VirtualNetworkLinkProperties} The populated <code>VirtualNetworkLinkProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VirtualNetworkLinkProperties();

            if (data.hasOwnProperty('provisioningState')) {
                obj['provisioningState'] = ApiClient.convertToType(data['provisioningState'], 'String');
            }
            if (data.hasOwnProperty('registrationEnabled')) {
                obj['registrationEnabled'] = ApiClient.convertToType(data['registrationEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('virtualNetwork')) {
                obj['virtualNetwork'] = SubResource.constructFromObject(data['virtualNetwork']);
            }
            if (data.hasOwnProperty('virtualNetworkLinkState')) {
                obj['virtualNetworkLinkState'] = ApiClient.convertToType(data['virtualNetworkLinkState'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VirtualNetworkLinkProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VirtualNetworkLinkProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['provisioningState'] && !(typeof data['provisioningState'] === 'string' || data['provisioningState'] instanceof String)) {
            throw new Error("Expected the field `provisioningState` to be a primitive type in the JSON string but got " + data['provisioningState']);
        }
        // validate the optional field `virtualNetwork`
        if (data['virtualNetwork']) { // data not null
          SubResource.validateJSON(data['virtualNetwork']);
        }
        // ensure the json data is a string
        if (data['virtualNetworkLinkState'] && !(typeof data['virtualNetworkLinkState'] === 'string' || data['virtualNetworkLinkState'] instanceof String)) {
            throw new Error("Expected the field `virtualNetworkLinkState` to be a primitive type in the JSON string but got " + data['virtualNetworkLinkState']);
        }

        return true;
    }


}



/**
 * The provisioning state of the resource. This is a read-only property and any attempt to set this value will be ignored.
 * @member {module:model/VirtualNetworkLinkProperties.ProvisioningStateEnum} provisioningState
 */
VirtualNetworkLinkProperties.prototype['provisioningState'] = undefined;

/**
 * Is auto-registration of virtual machine records in the virtual network in the Private DNS zone enabled?
 * @member {Boolean} registrationEnabled
 */
VirtualNetworkLinkProperties.prototype['registrationEnabled'] = undefined;

/**
 * @member {module:model/SubResource} virtualNetwork
 */
VirtualNetworkLinkProperties.prototype['virtualNetwork'] = undefined;

/**
 * The status of the virtual network link to the Private DNS zone. Possible values are 'InProgress' and 'Done'. This is a read-only property and any attempt to set this value will be ignored.
 * @member {module:model/VirtualNetworkLinkProperties.VirtualNetworkLinkStateEnum} virtualNetworkLinkState
 */
VirtualNetworkLinkProperties.prototype['virtualNetworkLinkState'] = undefined;





/**
 * Allowed values for the <code>provisioningState</code> property.
 * @enum {String}
 * @readonly
 */
VirtualNetworkLinkProperties['ProvisioningStateEnum'] = {

    /**
     * value: "Creating"
     * @const
     */
    "Creating": "Creating",

    /**
     * value: "Updating"
     * @const
     */
    "Updating": "Updating",

    /**
     * value: "Deleting"
     * @const
     */
    "Deleting": "Deleting",

    /**
     * value: "Succeeded"
     * @const
     */
    "Succeeded": "Succeeded",

    /**
     * value: "Failed"
     * @const
     */
    "Failed": "Failed",

    /**
     * value: "Canceled"
     * @const
     */
    "Canceled": "Canceled"
};


/**
 * Allowed values for the <code>virtualNetworkLinkState</code> property.
 * @enum {String}
 * @readonly
 */
VirtualNetworkLinkProperties['VirtualNetworkLinkStateEnum'] = {

    /**
     * value: "InProgress"
     * @const
     */
    "InProgress": "InProgress",

    /**
     * value: "Completed"
     * @const
     */
    "Completed": "Completed"
};



export default VirtualNetworkLinkProperties;

