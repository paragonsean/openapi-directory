/**
 * PrivateDnsManagementClient
 * The Private DNS Management Client.
 *
 * The version of the OpenAPI document: 2018-09-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CloudError from '../model/CloudError';
import PrivateZone from '../model/PrivateZone';
import PrivateZoneListResult from '../model/PrivateZoneListResult';

/**
* PrivateZones service.
* @module api/PrivateZonesApi
* @version 2018-09-01
*/
export default class PrivateZonesApi {

    /**
    * Constructs a new PrivateZonesApi. 
    * @alias module:api/PrivateZonesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the privateZonesCreateOrUpdate operation.
     * @callback module:api/PrivateZonesApi~privateZonesCreateOrUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PrivateZone} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates or updates a Private DNS zone. Does not modify Links to virtual networks or DNS records within the zone.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} privateZoneName The name of the Private DNS zone (without a terminating dot).
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:model/PrivateZone} parameters Parameters supplied to the CreateOrUpdate operation.
     * @param {Object} opts Optional parameters
     * @param {String} [ifMatch] The ETag of the Private DNS zone. Omit this value to always overwrite the current zone. Specify the last-seen ETag value to prevent accidentally overwriting any concurrent changes.
     * @param {String} [ifNoneMatch] Set to '*' to allow a new Private DNS zone to be created, but to prevent updating an existing zone. Other values will be ignored.
     * @param {module:api/PrivateZonesApi~privateZonesCreateOrUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PrivateZone}
     */
    privateZonesCreateOrUpdate(resourceGroupName, privateZoneName, apiVersion, subscriptionId, parameters, opts, callback) {
      opts = opts || {};
      let postBody = parameters;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling privateZonesCreateOrUpdate");
      }
      // verify the required parameter 'privateZoneName' is set
      if (privateZoneName === undefined || privateZoneName === null) {
        throw new Error("Missing the required parameter 'privateZoneName' when calling privateZonesCreateOrUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling privateZonesCreateOrUpdate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling privateZonesCreateOrUpdate");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling privateZonesCreateOrUpdate");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'privateZoneName': privateZoneName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
        'If-Match': opts['ifMatch'],
        'If-None-Match': opts['ifNoneMatch']
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = PrivateZone;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateDnsZones/{privateZoneName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the privateZonesDelete operation.
     * @callback module:api/PrivateZonesApi~privateZonesDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes a Private DNS zone. WARNING: All DNS records in the zone will also be deleted. This operation cannot be undone. Private DNS zone cannot be deleted unless all virtual network links to it are removed.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} privateZoneName The name of the Private DNS zone (without a terminating dot).
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {Object} opts Optional parameters
     * @param {String} [ifMatch] The ETag of the Private DNS zone. Omit this value to always delete the current zone. Specify the last-seen ETag value to prevent accidentally deleting any concurrent changes.
     * @param {module:api/PrivateZonesApi~privateZonesDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    privateZonesDelete(resourceGroupName, privateZoneName, apiVersion, subscriptionId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling privateZonesDelete");
      }
      // verify the required parameter 'privateZoneName' is set
      if (privateZoneName === undefined || privateZoneName === null) {
        throw new Error("Missing the required parameter 'privateZoneName' when calling privateZonesDelete");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling privateZonesDelete");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling privateZonesDelete");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'privateZoneName': privateZoneName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
        'If-Match': opts['ifMatch']
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateDnsZones/{privateZoneName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the privateZonesGet operation.
     * @callback module:api/PrivateZonesApi~privateZonesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PrivateZone} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets a Private DNS zone. Retrieves the zone properties, but not the virtual networks links or the record sets within the zone.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} privateZoneName The name of the Private DNS zone (without a terminating dot).
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/PrivateZonesApi~privateZonesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PrivateZone}
     */
    privateZonesGet(resourceGroupName, privateZoneName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling privateZonesGet");
      }
      // verify the required parameter 'privateZoneName' is set
      if (privateZoneName === undefined || privateZoneName === null) {
        throw new Error("Missing the required parameter 'privateZoneName' when calling privateZonesGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling privateZonesGet");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling privateZonesGet");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'privateZoneName': privateZoneName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PrivateZone;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateDnsZones/{privateZoneName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the privateZonesList operation.
     * @callback module:api/PrivateZonesApi~privateZonesListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PrivateZoneListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists the Private DNS zones in all resource groups in a subscription.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {Object} opts Optional parameters
     * @param {Number} [top] The maximum number of Private DNS zones to return. If not specified, returns up to 100 zones.
     * @param {module:api/PrivateZonesApi~privateZonesListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PrivateZoneListResult}
     */
    privateZonesList(apiVersion, subscriptionId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling privateZonesList");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling privateZonesList");
      }

      let pathParams = {
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        '$top': opts['top'],
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PrivateZoneListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.Network/privateDnsZones', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the privateZonesListByResourceGroup operation.
     * @callback module:api/PrivateZonesApi~privateZonesListByResourceGroupCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PrivateZoneListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists the Private DNS zones within a resource group.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {Object} opts Optional parameters
     * @param {Number} [top] The maximum number of record sets to return. If not specified, returns up to 100 record sets.
     * @param {module:api/PrivateZonesApi~privateZonesListByResourceGroupCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PrivateZoneListResult}
     */
    privateZonesListByResourceGroup(resourceGroupName, apiVersion, subscriptionId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling privateZonesListByResourceGroup");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling privateZonesListByResourceGroup");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling privateZonesListByResourceGroup");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        '$top': opts['top'],
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PrivateZoneListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateDnsZones', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the privateZonesUpdate operation.
     * @callback module:api/PrivateZonesApi~privateZonesUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PrivateZone} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates a Private DNS zone. Does not modify virtual network links or DNS records within the zone.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} privateZoneName The name of the Private DNS zone (without a terminating dot).
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:model/PrivateZone} parameters Parameters supplied to the Update operation.
     * @param {Object} opts Optional parameters
     * @param {String} [ifMatch] The ETag of the Private DNS zone. Omit this value to always overwrite the current zone. Specify the last-seen ETag value to prevent accidentally overwriting any concurrent changes.
     * @param {module:api/PrivateZonesApi~privateZonesUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PrivateZone}
     */
    privateZonesUpdate(resourceGroupName, privateZoneName, apiVersion, subscriptionId, parameters, opts, callback) {
      opts = opts || {};
      let postBody = parameters;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling privateZonesUpdate");
      }
      // verify the required parameter 'privateZoneName' is set
      if (privateZoneName === undefined || privateZoneName === null) {
        throw new Error("Missing the required parameter 'privateZoneName' when calling privateZonesUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling privateZonesUpdate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling privateZonesUpdate");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling privateZonesUpdate");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'privateZoneName': privateZoneName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
        'If-Match': opts['ifMatch']
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = PrivateZone;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateDnsZones/{privateZoneName}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
