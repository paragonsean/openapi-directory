# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.a_record import ARecord
from openapi_server.models.aaaa_record import AaaaRecord
from openapi_server.models.cname_record import CnameRecord
from openapi_server.models.mx_record import MxRecord
from openapi_server.models.ptr_record import PtrRecord
from openapi_server.models.soa_record import SoaRecord
from openapi_server.models.srv_record import SrvRecord
from openapi_server.models.txt_record import TxtRecord
from openapi_server import util


class RecordSetProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, a_records: List[ARecord]=None, aaaa_records: List[AaaaRecord]=None, cname_record: CnameRecord=None, fqdn: str=None, is_auto_registered: bool=None, metadata: Dict[str, str]=None, mx_records: List[MxRecord]=None, ptr_records: List[PtrRecord]=None, soa_record: SoaRecord=None, srv_records: List[SrvRecord]=None, ttl: int=None, txt_records: List[TxtRecord]=None):
        """RecordSetProperties - a model defined in OpenAPI

        :param a_records: The a_records of this RecordSetProperties.
        :param aaaa_records: The aaaa_records of this RecordSetProperties.
        :param cname_record: The cname_record of this RecordSetProperties.
        :param fqdn: The fqdn of this RecordSetProperties.
        :param is_auto_registered: The is_auto_registered of this RecordSetProperties.
        :param metadata: The metadata of this RecordSetProperties.
        :param mx_records: The mx_records of this RecordSetProperties.
        :param ptr_records: The ptr_records of this RecordSetProperties.
        :param soa_record: The soa_record of this RecordSetProperties.
        :param srv_records: The srv_records of this RecordSetProperties.
        :param ttl: The ttl of this RecordSetProperties.
        :param txt_records: The txt_records of this RecordSetProperties.
        """
        self.openapi_types = {
            'a_records': List[ARecord],
            'aaaa_records': List[AaaaRecord],
            'cname_record': CnameRecord,
            'fqdn': str,
            'is_auto_registered': bool,
            'metadata': Dict[str, str],
            'mx_records': List[MxRecord],
            'ptr_records': List[PtrRecord],
            'soa_record': SoaRecord,
            'srv_records': List[SrvRecord],
            'ttl': int,
            'txt_records': List[TxtRecord]
        }

        self.attribute_map = {
            'a_records': 'aRecords',
            'aaaa_records': 'aaaaRecords',
            'cname_record': 'cnameRecord',
            'fqdn': 'fqdn',
            'is_auto_registered': 'isAutoRegistered',
            'metadata': 'metadata',
            'mx_records': 'mxRecords',
            'ptr_records': 'ptrRecords',
            'soa_record': 'soaRecord',
            'srv_records': 'srvRecords',
            'ttl': 'ttl',
            'txt_records': 'txtRecords'
        }

        self._a_records = a_records
        self._aaaa_records = aaaa_records
        self._cname_record = cname_record
        self._fqdn = fqdn
        self._is_auto_registered = is_auto_registered
        self._metadata = metadata
        self._mx_records = mx_records
        self._ptr_records = ptr_records
        self._soa_record = soa_record
        self._srv_records = srv_records
        self._ttl = ttl
        self._txt_records = txt_records

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RecordSetProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RecordSetProperties of this RecordSetProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def a_records(self):
        """Gets the a_records of this RecordSetProperties.

        The list of A records in the record set.

        :return: The a_records of this RecordSetProperties.
        :rtype: List[ARecord]
        """
        return self._a_records

    @a_records.setter
    def a_records(self, a_records):
        """Sets the a_records of this RecordSetProperties.

        The list of A records in the record set.

        :param a_records: The a_records of this RecordSetProperties.
        :type a_records: List[ARecord]
        """

        self._a_records = a_records

    @property
    def aaaa_records(self):
        """Gets the aaaa_records of this RecordSetProperties.

        The list of AAAA records in the record set.

        :return: The aaaa_records of this RecordSetProperties.
        :rtype: List[AaaaRecord]
        """
        return self._aaaa_records

    @aaaa_records.setter
    def aaaa_records(self, aaaa_records):
        """Sets the aaaa_records of this RecordSetProperties.

        The list of AAAA records in the record set.

        :param aaaa_records: The aaaa_records of this RecordSetProperties.
        :type aaaa_records: List[AaaaRecord]
        """

        self._aaaa_records = aaaa_records

    @property
    def cname_record(self):
        """Gets the cname_record of this RecordSetProperties.


        :return: The cname_record of this RecordSetProperties.
        :rtype: CnameRecord
        """
        return self._cname_record

    @cname_record.setter
    def cname_record(self, cname_record):
        """Sets the cname_record of this RecordSetProperties.


        :param cname_record: The cname_record of this RecordSetProperties.
        :type cname_record: CnameRecord
        """

        self._cname_record = cname_record

    @property
    def fqdn(self):
        """Gets the fqdn of this RecordSetProperties.

        Fully qualified domain name of the record set.

        :return: The fqdn of this RecordSetProperties.
        :rtype: str
        """
        return self._fqdn

    @fqdn.setter
    def fqdn(self, fqdn):
        """Sets the fqdn of this RecordSetProperties.

        Fully qualified domain name of the record set.

        :param fqdn: The fqdn of this RecordSetProperties.
        :type fqdn: str
        """

        self._fqdn = fqdn

    @property
    def is_auto_registered(self):
        """Gets the is_auto_registered of this RecordSetProperties.

        Is the record set auto-registered in the Private DNS zone through a virtual network link?

        :return: The is_auto_registered of this RecordSetProperties.
        :rtype: bool
        """
        return self._is_auto_registered

    @is_auto_registered.setter
    def is_auto_registered(self, is_auto_registered):
        """Sets the is_auto_registered of this RecordSetProperties.

        Is the record set auto-registered in the Private DNS zone through a virtual network link?

        :param is_auto_registered: The is_auto_registered of this RecordSetProperties.
        :type is_auto_registered: bool
        """

        self._is_auto_registered = is_auto_registered

    @property
    def metadata(self):
        """Gets the metadata of this RecordSetProperties.

        The metadata attached to the record set.

        :return: The metadata of this RecordSetProperties.
        :rtype: Dict[str, str]
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata):
        """Sets the metadata of this RecordSetProperties.

        The metadata attached to the record set.

        :param metadata: The metadata of this RecordSetProperties.
        :type metadata: Dict[str, str]
        """

        self._metadata = metadata

    @property
    def mx_records(self):
        """Gets the mx_records of this RecordSetProperties.

        The list of MX records in the record set.

        :return: The mx_records of this RecordSetProperties.
        :rtype: List[MxRecord]
        """
        return self._mx_records

    @mx_records.setter
    def mx_records(self, mx_records):
        """Sets the mx_records of this RecordSetProperties.

        The list of MX records in the record set.

        :param mx_records: The mx_records of this RecordSetProperties.
        :type mx_records: List[MxRecord]
        """

        self._mx_records = mx_records

    @property
    def ptr_records(self):
        """Gets the ptr_records of this RecordSetProperties.

        The list of PTR records in the record set.

        :return: The ptr_records of this RecordSetProperties.
        :rtype: List[PtrRecord]
        """
        return self._ptr_records

    @ptr_records.setter
    def ptr_records(self, ptr_records):
        """Sets the ptr_records of this RecordSetProperties.

        The list of PTR records in the record set.

        :param ptr_records: The ptr_records of this RecordSetProperties.
        :type ptr_records: List[PtrRecord]
        """

        self._ptr_records = ptr_records

    @property
    def soa_record(self):
        """Gets the soa_record of this RecordSetProperties.


        :return: The soa_record of this RecordSetProperties.
        :rtype: SoaRecord
        """
        return self._soa_record

    @soa_record.setter
    def soa_record(self, soa_record):
        """Sets the soa_record of this RecordSetProperties.


        :param soa_record: The soa_record of this RecordSetProperties.
        :type soa_record: SoaRecord
        """

        self._soa_record = soa_record

    @property
    def srv_records(self):
        """Gets the srv_records of this RecordSetProperties.

        The list of SRV records in the record set.

        :return: The srv_records of this RecordSetProperties.
        :rtype: List[SrvRecord]
        """
        return self._srv_records

    @srv_records.setter
    def srv_records(self, srv_records):
        """Sets the srv_records of this RecordSetProperties.

        The list of SRV records in the record set.

        :param srv_records: The srv_records of this RecordSetProperties.
        :type srv_records: List[SrvRecord]
        """

        self._srv_records = srv_records

    @property
    def ttl(self):
        """Gets the ttl of this RecordSetProperties.

        The TTL (time-to-live) of the records in the record set.

        :return: The ttl of this RecordSetProperties.
        :rtype: int
        """
        return self._ttl

    @ttl.setter
    def ttl(self, ttl):
        """Sets the ttl of this RecordSetProperties.

        The TTL (time-to-live) of the records in the record set.

        :param ttl: The ttl of this RecordSetProperties.
        :type ttl: int
        """

        self._ttl = ttl

    @property
    def txt_records(self):
        """Gets the txt_records of this RecordSetProperties.

        The list of TXT records in the record set.

        :return: The txt_records of this RecordSetProperties.
        :rtype: List[TxtRecord]
        """
        return self._txt_records

    @txt_records.setter
    def txt_records(self, txt_records):
        """Sets the txt_records of this RecordSetProperties.

        The list of TXT records in the record set.

        :param txt_records: The txt_records of this RecordSetProperties.
        :type txt_records: List[TxtRecord]
        """

        self._txt_records = txt_records
