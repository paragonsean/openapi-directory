# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PrivateZoneProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, max_number_of_record_sets: int=None, max_number_of_virtual_network_links: int=None, max_number_of_virtual_network_links_with_registration: int=None, number_of_record_sets: int=None, number_of_virtual_network_links: int=None, number_of_virtual_network_links_with_registration: int=None, provisioning_state: str=None):
        """PrivateZoneProperties - a model defined in OpenAPI

        :param max_number_of_record_sets: The max_number_of_record_sets of this PrivateZoneProperties.
        :param max_number_of_virtual_network_links: The max_number_of_virtual_network_links of this PrivateZoneProperties.
        :param max_number_of_virtual_network_links_with_registration: The max_number_of_virtual_network_links_with_registration of this PrivateZoneProperties.
        :param number_of_record_sets: The number_of_record_sets of this PrivateZoneProperties.
        :param number_of_virtual_network_links: The number_of_virtual_network_links of this PrivateZoneProperties.
        :param number_of_virtual_network_links_with_registration: The number_of_virtual_network_links_with_registration of this PrivateZoneProperties.
        :param provisioning_state: The provisioning_state of this PrivateZoneProperties.
        """
        self.openapi_types = {
            'max_number_of_record_sets': int,
            'max_number_of_virtual_network_links': int,
            'max_number_of_virtual_network_links_with_registration': int,
            'number_of_record_sets': int,
            'number_of_virtual_network_links': int,
            'number_of_virtual_network_links_with_registration': int,
            'provisioning_state': str
        }

        self.attribute_map = {
            'max_number_of_record_sets': 'maxNumberOfRecordSets',
            'max_number_of_virtual_network_links': 'maxNumberOfVirtualNetworkLinks',
            'max_number_of_virtual_network_links_with_registration': 'maxNumberOfVirtualNetworkLinksWithRegistration',
            'number_of_record_sets': 'numberOfRecordSets',
            'number_of_virtual_network_links': 'numberOfVirtualNetworkLinks',
            'number_of_virtual_network_links_with_registration': 'numberOfVirtualNetworkLinksWithRegistration',
            'provisioning_state': 'provisioningState'
        }

        self._max_number_of_record_sets = max_number_of_record_sets
        self._max_number_of_virtual_network_links = max_number_of_virtual_network_links
        self._max_number_of_virtual_network_links_with_registration = max_number_of_virtual_network_links_with_registration
        self._number_of_record_sets = number_of_record_sets
        self._number_of_virtual_network_links = number_of_virtual_network_links
        self._number_of_virtual_network_links_with_registration = number_of_virtual_network_links_with_registration
        self._provisioning_state = provisioning_state

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PrivateZoneProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PrivateZoneProperties of this PrivateZoneProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def max_number_of_record_sets(self):
        """Gets the max_number_of_record_sets of this PrivateZoneProperties.

        The maximum number of record sets that can be created in this Private DNS zone. This is a read-only property and any attempt to set this value will be ignored.

        :return: The max_number_of_record_sets of this PrivateZoneProperties.
        :rtype: int
        """
        return self._max_number_of_record_sets

    @max_number_of_record_sets.setter
    def max_number_of_record_sets(self, max_number_of_record_sets):
        """Sets the max_number_of_record_sets of this PrivateZoneProperties.

        The maximum number of record sets that can be created in this Private DNS zone. This is a read-only property and any attempt to set this value will be ignored.

        :param max_number_of_record_sets: The max_number_of_record_sets of this PrivateZoneProperties.
        :type max_number_of_record_sets: int
        """

        self._max_number_of_record_sets = max_number_of_record_sets

    @property
    def max_number_of_virtual_network_links(self):
        """Gets the max_number_of_virtual_network_links of this PrivateZoneProperties.

        The maximum number of virtual networks that can be linked to this Private DNS zone. This is a read-only property and any attempt to set this value will be ignored.

        :return: The max_number_of_virtual_network_links of this PrivateZoneProperties.
        :rtype: int
        """
        return self._max_number_of_virtual_network_links

    @max_number_of_virtual_network_links.setter
    def max_number_of_virtual_network_links(self, max_number_of_virtual_network_links):
        """Sets the max_number_of_virtual_network_links of this PrivateZoneProperties.

        The maximum number of virtual networks that can be linked to this Private DNS zone. This is a read-only property and any attempt to set this value will be ignored.

        :param max_number_of_virtual_network_links: The max_number_of_virtual_network_links of this PrivateZoneProperties.
        :type max_number_of_virtual_network_links: int
        """

        self._max_number_of_virtual_network_links = max_number_of_virtual_network_links

    @property
    def max_number_of_virtual_network_links_with_registration(self):
        """Gets the max_number_of_virtual_network_links_with_registration of this PrivateZoneProperties.

        The maximum number of virtual networks that can be linked to this Private DNS zone with registration enabled. This is a read-only property and any attempt to set this value will be ignored.

        :return: The max_number_of_virtual_network_links_with_registration of this PrivateZoneProperties.
        :rtype: int
        """
        return self._max_number_of_virtual_network_links_with_registration

    @max_number_of_virtual_network_links_with_registration.setter
    def max_number_of_virtual_network_links_with_registration(self, max_number_of_virtual_network_links_with_registration):
        """Sets the max_number_of_virtual_network_links_with_registration of this PrivateZoneProperties.

        The maximum number of virtual networks that can be linked to this Private DNS zone with registration enabled. This is a read-only property and any attempt to set this value will be ignored.

        :param max_number_of_virtual_network_links_with_registration: The max_number_of_virtual_network_links_with_registration of this PrivateZoneProperties.
        :type max_number_of_virtual_network_links_with_registration: int
        """

        self._max_number_of_virtual_network_links_with_registration = max_number_of_virtual_network_links_with_registration

    @property
    def number_of_record_sets(self):
        """Gets the number_of_record_sets of this PrivateZoneProperties.

        The current number of record sets in this Private DNS zone. This is a read-only property and any attempt to set this value will be ignored.

        :return: The number_of_record_sets of this PrivateZoneProperties.
        :rtype: int
        """
        return self._number_of_record_sets

    @number_of_record_sets.setter
    def number_of_record_sets(self, number_of_record_sets):
        """Sets the number_of_record_sets of this PrivateZoneProperties.

        The current number of record sets in this Private DNS zone. This is a read-only property and any attempt to set this value will be ignored.

        :param number_of_record_sets: The number_of_record_sets of this PrivateZoneProperties.
        :type number_of_record_sets: int
        """

        self._number_of_record_sets = number_of_record_sets

    @property
    def number_of_virtual_network_links(self):
        """Gets the number_of_virtual_network_links of this PrivateZoneProperties.

        The current number of virtual networks that are linked to this Private DNS zone. This is a read-only property and any attempt to set this value will be ignored.

        :return: The number_of_virtual_network_links of this PrivateZoneProperties.
        :rtype: int
        """
        return self._number_of_virtual_network_links

    @number_of_virtual_network_links.setter
    def number_of_virtual_network_links(self, number_of_virtual_network_links):
        """Sets the number_of_virtual_network_links of this PrivateZoneProperties.

        The current number of virtual networks that are linked to this Private DNS zone. This is a read-only property and any attempt to set this value will be ignored.

        :param number_of_virtual_network_links: The number_of_virtual_network_links of this PrivateZoneProperties.
        :type number_of_virtual_network_links: int
        """

        self._number_of_virtual_network_links = number_of_virtual_network_links

    @property
    def number_of_virtual_network_links_with_registration(self):
        """Gets the number_of_virtual_network_links_with_registration of this PrivateZoneProperties.

        The current number of virtual networks that are linked to this Private DNS zone with registration enabled. This is a read-only property and any attempt to set this value will be ignored.

        :return: The number_of_virtual_network_links_with_registration of this PrivateZoneProperties.
        :rtype: int
        """
        return self._number_of_virtual_network_links_with_registration

    @number_of_virtual_network_links_with_registration.setter
    def number_of_virtual_network_links_with_registration(self, number_of_virtual_network_links_with_registration):
        """Sets the number_of_virtual_network_links_with_registration of this PrivateZoneProperties.

        The current number of virtual networks that are linked to this Private DNS zone with registration enabled. This is a read-only property and any attempt to set this value will be ignored.

        :param number_of_virtual_network_links_with_registration: The number_of_virtual_network_links_with_registration of this PrivateZoneProperties.
        :type number_of_virtual_network_links_with_registration: int
        """

        self._number_of_virtual_network_links_with_registration = number_of_virtual_network_links_with_registration

    @property
    def provisioning_state(self):
        """Gets the provisioning_state of this PrivateZoneProperties.

        The provisioning state of the resource. This is a read-only property and any attempt to set this value will be ignored.

        :return: The provisioning_state of this PrivateZoneProperties.
        :rtype: str
        """
        return self._provisioning_state

    @provisioning_state.setter
    def provisioning_state(self, provisioning_state):
        """Sets the provisioning_state of this PrivateZoneProperties.

        The provisioning state of the resource. This is a read-only property and any attempt to set this value will be ignored.

        :param provisioning_state: The provisioning_state of this PrivateZoneProperties.
        :type provisioning_state: str
        """
        allowed_values = ["Creating", "Updating", "Deleting", "Succeeded", "Failed", "Canceled"]  # noqa: E501
        if provisioning_state not in allowed_values:
            raise ValueError(
                "Invalid value for `provisioning_state` ({0}), must be one of {1}"
                .format(provisioning_state, allowed_values)
            )

        self._provisioning_state = provisioning_state
