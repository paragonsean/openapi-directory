# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.connected_workspace import ConnectedWorkspace
from openapi_server import util


class ExternalSecuritySolutionProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, device_type: str=None, device_vendor: str=None, workspace: ConnectedWorkspace=None):
        """ExternalSecuritySolutionProperties - a model defined in OpenAPI

        :param device_type: The device_type of this ExternalSecuritySolutionProperties.
        :param device_vendor: The device_vendor of this ExternalSecuritySolutionProperties.
        :param workspace: The workspace of this ExternalSecuritySolutionProperties.
        """
        self.openapi_types = {
            'device_type': str,
            'device_vendor': str,
            'workspace': ConnectedWorkspace
        }

        self.attribute_map = {
            'device_type': 'deviceType',
            'device_vendor': 'deviceVendor',
            'workspace': 'workspace'
        }

        self._device_type = device_type
        self._device_vendor = device_vendor
        self._workspace = workspace

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ExternalSecuritySolutionProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ExternalSecuritySolutionProperties of this ExternalSecuritySolutionProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def device_type(self):
        """Gets the device_type of this ExternalSecuritySolutionProperties.


        :return: The device_type of this ExternalSecuritySolutionProperties.
        :rtype: str
        """
        return self._device_type

    @device_type.setter
    def device_type(self, device_type):
        """Sets the device_type of this ExternalSecuritySolutionProperties.


        :param device_type: The device_type of this ExternalSecuritySolutionProperties.
        :type device_type: str
        """

        self._device_type = device_type

    @property
    def device_vendor(self):
        """Gets the device_vendor of this ExternalSecuritySolutionProperties.


        :return: The device_vendor of this ExternalSecuritySolutionProperties.
        :rtype: str
        """
        return self._device_vendor

    @device_vendor.setter
    def device_vendor(self, device_vendor):
        """Sets the device_vendor of this ExternalSecuritySolutionProperties.


        :param device_vendor: The device_vendor of this ExternalSecuritySolutionProperties.
        :type device_vendor: str
        """

        self._device_vendor = device_vendor

    @property
    def workspace(self):
        """Gets the workspace of this ExternalSecuritySolutionProperties.


        :return: The workspace of this ExternalSecuritySolutionProperties.
        :rtype: ConnectedWorkspace
        """
        return self._workspace

    @workspace.setter
    def workspace(self, workspace):
        """Sets the workspace of this ExternalSecuritySolutionProperties.


        :param workspace: The workspace of this ExternalSecuritySolutionProperties.
        :type workspace: ConnectedWorkspace
        """

        self._workspace = workspace
