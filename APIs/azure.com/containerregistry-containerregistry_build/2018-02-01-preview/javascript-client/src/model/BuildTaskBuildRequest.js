/**
 * ContainerRegistryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-02-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import QueueBuildRequest from './QueueBuildRequest';

/**
 * The BuildTaskBuildRequest model module.
 * @module model/BuildTaskBuildRequest
 * @version 2018-02-01-preview
 */
class BuildTaskBuildRequest {
    /**
     * Constructs a new <code>BuildTaskBuildRequest</code>.
     * The queue build parameters based on a build task.
     * @alias module:model/BuildTaskBuildRequest
     * @extends module:model/QueueBuildRequest
     * @implements module:model/QueueBuildRequest
     */
    constructor() { 
        QueueBuildRequest.initialize(this);
        BuildTaskBuildRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['buildTaskName'] = buildTaskName;
    }

    /**
     * Constructs a <code>BuildTaskBuildRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BuildTaskBuildRequest} obj Optional instance to populate.
     * @return {module:model/BuildTaskBuildRequest} The populated <code>BuildTaskBuildRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BuildTaskBuildRequest();
            QueueBuildRequest.constructFromObject(data, obj);
            QueueBuildRequest.constructFromObject(data, obj);

            if (data.hasOwnProperty('buildTaskName')) {
                obj['buildTaskName'] = ApiClient.convertToType(data['buildTaskName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BuildTaskBuildRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BuildTaskBuildRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of BuildTaskBuildRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['buildTaskName'] && !(typeof data['buildTaskName'] === 'string' || data['buildTaskName'] instanceof String)) {
            throw new Error("Expected the field `buildTaskName` to be a primitive type in the JSON string but got " + data['buildTaskName']);
        }

        return true;
    }


}

BuildTaskBuildRequest.RequiredProperties = ["buildTaskName"];

/**
 * The name of build task against which build has to be queued.
 * @member {String} buildTaskName
 */
BuildTaskBuildRequest.prototype['buildTaskName'] = undefined;


// Implement QueueBuildRequest interface:
/**
 * The type of the build request.
 * @member {String} type
 */
QueueBuildRequest.prototype['type'] = undefined;




export default BuildTaskBuildRequest;

