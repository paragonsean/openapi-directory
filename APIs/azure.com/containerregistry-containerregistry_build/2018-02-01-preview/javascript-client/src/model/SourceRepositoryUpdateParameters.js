/**
 * ContainerRegistryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-02-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SourceControlAuthInfo from './SourceControlAuthInfo';

/**
 * The SourceRepositoryUpdateParameters model module.
 * @module model/SourceRepositoryUpdateParameters
 * @version 2018-02-01-preview
 */
class SourceRepositoryUpdateParameters {
    /**
     * Constructs a new <code>SourceRepositoryUpdateParameters</code>.
     * The properties for updating the source code repository configuration.
     * @alias module:model/SourceRepositoryUpdateParameters
     */
    constructor() { 
        
        SourceRepositoryUpdateParameters.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SourceRepositoryUpdateParameters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SourceRepositoryUpdateParameters} obj Optional instance to populate.
     * @return {module:model/SourceRepositoryUpdateParameters} The populated <code>SourceRepositoryUpdateParameters</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SourceRepositoryUpdateParameters();

            if (data.hasOwnProperty('isCommitTriggerEnabled')) {
                obj['isCommitTriggerEnabled'] = ApiClient.convertToType(data['isCommitTriggerEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('sourceControlAuthProperties')) {
                obj['sourceControlAuthProperties'] = SourceControlAuthInfo.constructFromObject(data['sourceControlAuthProperties']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SourceRepositoryUpdateParameters</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SourceRepositoryUpdateParameters</code>.
     */
    static validateJSON(data) {
        // validate the optional field `sourceControlAuthProperties`
        if (data['sourceControlAuthProperties']) { // data not null
          SourceControlAuthInfo.validateJSON(data['sourceControlAuthProperties']);
        }

        return true;
    }


}



/**
 * The value of this property indicates whether the source control commit trigger is enabled or not.
 * @member {Boolean} isCommitTriggerEnabled
 */
SourceRepositoryUpdateParameters.prototype['isCommitTriggerEnabled'] = undefined;

/**
 * @member {module:model/SourceControlAuthInfo} sourceControlAuthProperties
 */
SourceRepositoryUpdateParameters.prototype['sourceControlAuthProperties'] = undefined;






export default SourceRepositoryUpdateParameters;

