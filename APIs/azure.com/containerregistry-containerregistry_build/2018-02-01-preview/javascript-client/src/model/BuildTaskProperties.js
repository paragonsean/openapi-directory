/**
 * ContainerRegistryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-02-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PlatformProperties from './PlatformProperties';
import SourceRepositoryProperties from './SourceRepositoryProperties';

/**
 * The BuildTaskProperties model module.
 * @module model/BuildTaskProperties
 * @version 2018-02-01-preview
 */
class BuildTaskProperties {
    /**
     * Constructs a new <code>BuildTaskProperties</code>.
     * The properties of a build task.
     * @alias module:model/BuildTaskProperties
     * @param alias {String} The alternative updatable name for a build task.
     * @param platform {module:model/PlatformProperties} 
     * @param sourceRepository {module:model/SourceRepositoryProperties} 
     */
    constructor(alias, platform, sourceRepository) { 
        
        BuildTaskProperties.initialize(this, alias, platform, sourceRepository);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, alias, platform, sourceRepository) { 
        obj['alias'] = alias;
        obj['platform'] = platform;
        obj['sourceRepository'] = sourceRepository;
        obj['timeout'] = 3600;
    }

    /**
     * Constructs a <code>BuildTaskProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BuildTaskProperties} obj Optional instance to populate.
     * @return {module:model/BuildTaskProperties} The populated <code>BuildTaskProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BuildTaskProperties();

            if (data.hasOwnProperty('alias')) {
                obj['alias'] = ApiClient.convertToType(data['alias'], 'String');
            }
            if (data.hasOwnProperty('creationDate')) {
                obj['creationDate'] = ApiClient.convertToType(data['creationDate'], 'Date');
            }
            if (data.hasOwnProperty('platform')) {
                obj['platform'] = PlatformProperties.constructFromObject(data['platform']);
            }
            if (data.hasOwnProperty('provisioningState')) {
                obj['provisioningState'] = ApiClient.convertToType(data['provisioningState'], 'String');
            }
            if (data.hasOwnProperty('sourceRepository')) {
                obj['sourceRepository'] = SourceRepositoryProperties.constructFromObject(data['sourceRepository']);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('timeout')) {
                obj['timeout'] = ApiClient.convertToType(data['timeout'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BuildTaskProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BuildTaskProperties</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of BuildTaskProperties.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['alias'] && !(typeof data['alias'] === 'string' || data['alias'] instanceof String)) {
            throw new Error("Expected the field `alias` to be a primitive type in the JSON string but got " + data['alias']);
        }
        // validate the optional field `platform`
        if (data['platform']) { // data not null
          PlatformProperties.validateJSON(data['platform']);
        }
        // ensure the json data is a string
        if (data['provisioningState'] && !(typeof data['provisioningState'] === 'string' || data['provisioningState'] instanceof String)) {
            throw new Error("Expected the field `provisioningState` to be a primitive type in the JSON string but got " + data['provisioningState']);
        }
        // validate the optional field `sourceRepository`
        if (data['sourceRepository']) { // data not null
          SourceRepositoryProperties.validateJSON(data['sourceRepository']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }

        return true;
    }


}

BuildTaskProperties.RequiredProperties = ["alias", "platform", "sourceRepository"];

/**
 * The alternative updatable name for a build task.
 * @member {String} alias
 */
BuildTaskProperties.prototype['alias'] = undefined;

/**
 * The creation date of build task.
 * @member {Date} creationDate
 */
BuildTaskProperties.prototype['creationDate'] = undefined;

/**
 * @member {module:model/PlatformProperties} platform
 */
BuildTaskProperties.prototype['platform'] = undefined;

/**
 * The provisioning state of the build task.
 * @member {module:model/BuildTaskProperties.ProvisioningStateEnum} provisioningState
 */
BuildTaskProperties.prototype['provisioningState'] = undefined;

/**
 * @member {module:model/SourceRepositoryProperties} sourceRepository
 */
BuildTaskProperties.prototype['sourceRepository'] = undefined;

/**
 * The current status of build task.
 * @member {module:model/BuildTaskProperties.StatusEnum} status
 */
BuildTaskProperties.prototype['status'] = undefined;

/**
 * Build timeout in seconds.
 * @member {Number} timeout
 * @default 3600
 */
BuildTaskProperties.prototype['timeout'] = 3600;





/**
 * Allowed values for the <code>provisioningState</code> property.
 * @enum {String}
 * @readonly
 */
BuildTaskProperties['ProvisioningStateEnum'] = {

    /**
     * value: "Creating"
     * @const
     */
    "Creating": "Creating",

    /**
     * value: "Updating"
     * @const
     */
    "Updating": "Updating",

    /**
     * value: "Deleting"
     * @const
     */
    "Deleting": "Deleting",

    /**
     * value: "Succeeded"
     * @const
     */
    "Succeeded": "Succeeded",

    /**
     * value: "Failed"
     * @const
     */
    "Failed": "Failed",

    /**
     * value: "Canceled"
     * @const
     */
    "Canceled": "Canceled"
};


/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
BuildTaskProperties['StatusEnum'] = {

    /**
     * value: "Disabled"
     * @const
     */
    "Disabled": "Disabled",

    /**
     * value: "Enabled"
     * @const
     */
    "Enabled": "Enabled"
};



export default BuildTaskProperties;

