/**
 * ContainerRegistryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-02-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BuildArgument from './BuildArgument';
import BuildStepPropertiesUpdateParameters from './BuildStepPropertiesUpdateParameters';

/**
 * The DockerBuildStepUpdateParameters model module.
 * @module model/DockerBuildStepUpdateParameters
 * @version 2018-02-01-preview
 */
class DockerBuildStepUpdateParameters {
    /**
     * Constructs a new <code>DockerBuildStepUpdateParameters</code>.
     * The properties for updating a docker build step.
     * @alias module:model/DockerBuildStepUpdateParameters
     * @extends module:model/BuildStepPropertiesUpdateParameters
     * @implements module:model/BuildStepPropertiesUpdateParameters
     */
    constructor() { 
        BuildStepPropertiesUpdateParameters.initialize(this);
        DockerBuildStepUpdateParameters.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DockerBuildStepUpdateParameters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DockerBuildStepUpdateParameters} obj Optional instance to populate.
     * @return {module:model/DockerBuildStepUpdateParameters} The populated <code>DockerBuildStepUpdateParameters</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DockerBuildStepUpdateParameters();
            BuildStepPropertiesUpdateParameters.constructFromObject(data, obj);
            BuildStepPropertiesUpdateParameters.constructFromObject(data, obj);

            if (data.hasOwnProperty('baseImageTrigger')) {
                obj['baseImageTrigger'] = ApiClient.convertToType(data['baseImageTrigger'], 'String');
            }
            if (data.hasOwnProperty('branch')) {
                obj['branch'] = ApiClient.convertToType(data['branch'], 'String');
            }
            if (data.hasOwnProperty('buildArguments')) {
                obj['buildArguments'] = ApiClient.convertToType(data['buildArguments'], [BuildArgument]);
            }
            if (data.hasOwnProperty('contextPath')) {
                obj['contextPath'] = ApiClient.convertToType(data['contextPath'], 'String');
            }
            if (data.hasOwnProperty('dockerFilePath')) {
                obj['dockerFilePath'] = ApiClient.convertToType(data['dockerFilePath'], 'String');
            }
            if (data.hasOwnProperty('imageNames')) {
                obj['imageNames'] = ApiClient.convertToType(data['imageNames'], ['String']);
            }
            if (data.hasOwnProperty('isPushEnabled')) {
                obj['isPushEnabled'] = ApiClient.convertToType(data['isPushEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('noCache')) {
                obj['noCache'] = ApiClient.convertToType(data['noCache'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DockerBuildStepUpdateParameters</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DockerBuildStepUpdateParameters</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['baseImageTrigger'] && !(typeof data['baseImageTrigger'] === 'string' || data['baseImageTrigger'] instanceof String)) {
            throw new Error("Expected the field `baseImageTrigger` to be a primitive type in the JSON string but got " + data['baseImageTrigger']);
        }
        // ensure the json data is a string
        if (data['branch'] && !(typeof data['branch'] === 'string' || data['branch'] instanceof String)) {
            throw new Error("Expected the field `branch` to be a primitive type in the JSON string but got " + data['branch']);
        }
        if (data['buildArguments']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['buildArguments'])) {
                throw new Error("Expected the field `buildArguments` to be an array in the JSON data but got " + data['buildArguments']);
            }
            // validate the optional field `buildArguments` (array)
            for (const item of data['buildArguments']) {
                BuildArgument.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['contextPath'] && !(typeof data['contextPath'] === 'string' || data['contextPath'] instanceof String)) {
            throw new Error("Expected the field `contextPath` to be a primitive type in the JSON string but got " + data['contextPath']);
        }
        // ensure the json data is a string
        if (data['dockerFilePath'] && !(typeof data['dockerFilePath'] === 'string' || data['dockerFilePath'] instanceof String)) {
            throw new Error("Expected the field `dockerFilePath` to be a primitive type in the JSON string but got " + data['dockerFilePath']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['imageNames'])) {
            throw new Error("Expected the field `imageNames` to be an array in the JSON data but got " + data['imageNames']);
        }

        return true;
    }


}



/**
 * The type of the auto trigger for base image dependency updates.
 * @member {module:model/DockerBuildStepUpdateParameters.BaseImageTriggerEnum} baseImageTrigger
 */
DockerBuildStepUpdateParameters.prototype['baseImageTrigger'] = undefined;

/**
 * The repository branch name.
 * @member {String} branch
 */
DockerBuildStepUpdateParameters.prototype['branch'] = undefined;

/**
 * The custom arguments for building this build step.
 * @member {Array.<module:model/BuildArgument>} buildArguments
 */
DockerBuildStepUpdateParameters.prototype['buildArguments'] = undefined;

/**
 * The relative context path for a docker build in the source.
 * @member {String} contextPath
 */
DockerBuildStepUpdateParameters.prototype['contextPath'] = undefined;

/**
 * The Docker file path relative to the source control root.
 * @member {String} dockerFilePath
 */
DockerBuildStepUpdateParameters.prototype['dockerFilePath'] = undefined;

/**
 * The fully qualified image names including the repository and tag.
 * @member {Array.<String>} imageNames
 */
DockerBuildStepUpdateParameters.prototype['imageNames'] = undefined;

/**
 * The value of this property indicates whether the image built should be pushed to the registry or not.
 * @member {Boolean} isPushEnabled
 */
DockerBuildStepUpdateParameters.prototype['isPushEnabled'] = undefined;

/**
 * The value of this property indicates whether the image cache is enabled or not.
 * @member {Boolean} noCache
 */
DockerBuildStepUpdateParameters.prototype['noCache'] = undefined;


// Implement BuildStepPropertiesUpdateParameters interface:
/**
 * The type of the step.
 * @member {module:model/BuildStepPropertiesUpdateParameters.TypeEnum} type
 */
BuildStepPropertiesUpdateParameters.prototype['type'] = undefined;



/**
 * Allowed values for the <code>baseImageTrigger</code> property.
 * @enum {String}
 * @readonly
 */
DockerBuildStepUpdateParameters['BaseImageTriggerEnum'] = {

    /**
     * value: "All"
     * @const
     */
    "All": "All",

    /**
     * value: "Runtime"
     * @const
     */
    "Runtime": "Runtime",

    /**
     * value: "None"
     * @const
     */
    "None": "None"
};



export default DockerBuildStepUpdateParameters;

