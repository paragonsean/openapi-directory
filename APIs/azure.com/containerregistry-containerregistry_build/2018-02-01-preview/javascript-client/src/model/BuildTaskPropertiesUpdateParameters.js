/**
 * ContainerRegistryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-02-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PlatformProperties from './PlatformProperties';
import SourceRepositoryUpdateParameters from './SourceRepositoryUpdateParameters';

/**
 * The BuildTaskPropertiesUpdateParameters model module.
 * @module model/BuildTaskPropertiesUpdateParameters
 * @version 2018-02-01-preview
 */
class BuildTaskPropertiesUpdateParameters {
    /**
     * Constructs a new <code>BuildTaskPropertiesUpdateParameters</code>.
     * The properties for updating a build task.
     * @alias module:model/BuildTaskPropertiesUpdateParameters
     */
    constructor() { 
        
        BuildTaskPropertiesUpdateParameters.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BuildTaskPropertiesUpdateParameters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BuildTaskPropertiesUpdateParameters} obj Optional instance to populate.
     * @return {module:model/BuildTaskPropertiesUpdateParameters} The populated <code>BuildTaskPropertiesUpdateParameters</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BuildTaskPropertiesUpdateParameters();

            if (data.hasOwnProperty('alias')) {
                obj['alias'] = ApiClient.convertToType(data['alias'], 'String');
            }
            if (data.hasOwnProperty('platform')) {
                obj['platform'] = PlatformProperties.constructFromObject(data['platform']);
            }
            if (data.hasOwnProperty('sourceRepository')) {
                obj['sourceRepository'] = SourceRepositoryUpdateParameters.constructFromObject(data['sourceRepository']);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('timeout')) {
                obj['timeout'] = ApiClient.convertToType(data['timeout'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BuildTaskPropertiesUpdateParameters</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BuildTaskPropertiesUpdateParameters</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['alias'] && !(typeof data['alias'] === 'string' || data['alias'] instanceof String)) {
            throw new Error("Expected the field `alias` to be a primitive type in the JSON string but got " + data['alias']);
        }
        // validate the optional field `platform`
        if (data['platform']) { // data not null
          PlatformProperties.validateJSON(data['platform']);
        }
        // validate the optional field `sourceRepository`
        if (data['sourceRepository']) { // data not null
          SourceRepositoryUpdateParameters.validateJSON(data['sourceRepository']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }

        return true;
    }


}



/**
 * The alternative updatable name for a build task.
 * @member {String} alias
 */
BuildTaskPropertiesUpdateParameters.prototype['alias'] = undefined;

/**
 * @member {module:model/PlatformProperties} platform
 */
BuildTaskPropertiesUpdateParameters.prototype['platform'] = undefined;

/**
 * @member {module:model/SourceRepositoryUpdateParameters} sourceRepository
 */
BuildTaskPropertiesUpdateParameters.prototype['sourceRepository'] = undefined;

/**
 * The current status of build task.
 * @member {module:model/BuildTaskPropertiesUpdateParameters.StatusEnum} status
 */
BuildTaskPropertiesUpdateParameters.prototype['status'] = undefined;

/**
 * Build timeout in seconds.
 * @member {Number} timeout
 */
BuildTaskPropertiesUpdateParameters.prototype['timeout'] = undefined;





/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
BuildTaskPropertiesUpdateParameters['StatusEnum'] = {

    /**
     * value: "Disabled"
     * @const
     */
    "Disabled": "Disabled",

    /**
     * value: "Enabled"
     * @const
     */
    "Enabled": "Enabled"
};



export default BuildTaskPropertiesUpdateParameters;

