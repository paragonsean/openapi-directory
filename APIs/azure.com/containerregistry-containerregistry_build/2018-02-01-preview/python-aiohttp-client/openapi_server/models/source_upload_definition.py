# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SourceUploadDefinition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, relative_path: str=None, upload_url: str=None):
        """SourceUploadDefinition - a model defined in OpenAPI

        :param relative_path: The relative_path of this SourceUploadDefinition.
        :param upload_url: The upload_url of this SourceUploadDefinition.
        """
        self.openapi_types = {
            'relative_path': str,
            'upload_url': str
        }

        self.attribute_map = {
            'relative_path': 'relativePath',
            'upload_url': 'uploadUrl'
        }

        self._relative_path = relative_path
        self._upload_url = upload_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SourceUploadDefinition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SourceUploadDefinition of this SourceUploadDefinition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def relative_path(self):
        """Gets the relative_path of this SourceUploadDefinition.

        The relative path to the source. This is used to submit the subsequent queue build request.

        :return: The relative_path of this SourceUploadDefinition.
        :rtype: str
        """
        return self._relative_path

    @relative_path.setter
    def relative_path(self, relative_path):
        """Sets the relative_path of this SourceUploadDefinition.

        The relative path to the source. This is used to submit the subsequent queue build request.

        :param relative_path: The relative_path of this SourceUploadDefinition.
        :type relative_path: str
        """

        self._relative_path = relative_path

    @property
    def upload_url(self):
        """Gets the upload_url of this SourceUploadDefinition.

        The URL where the client can upload the source.

        :return: The upload_url of this SourceUploadDefinition.
        :rtype: str
        """
        return self._upload_url

    @upload_url.setter
    def upload_url(self, upload_url):
        """Sets the upload_url of this SourceUploadDefinition.

        The URL where the client can upload the source.

        :param upload_url: The upload_url of this SourceUploadDefinition.
        :type upload_url: str
        """

        self._upload_url = upload_url
