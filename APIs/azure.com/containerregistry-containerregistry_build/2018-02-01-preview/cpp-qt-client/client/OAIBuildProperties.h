/**
 * ContainerRegistryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-02-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBuildProperties.h
 *
 * The properties for a build.
 */

#ifndef OAIBuildProperties_H
#define OAIBuildProperties_H

#include <QJsonObject>

#include "OAIGitCommitTrigger.h"
#include "OAIImageDescriptor.h"
#include "OAIImageUpdateTrigger.h"
#include "OAIPlatformProperties.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGitCommitTrigger;
class OAIImageUpdateTrigger;
class OAIImageDescriptor;
class OAIPlatformProperties;

class OAIBuildProperties : public OAIObject {
public:
    OAIBuildProperties();
    OAIBuildProperties(QString json);
    ~OAIBuildProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBuildId() const;
    void setBuildId(const QString &build_id);
    bool is_build_id_Set() const;
    bool is_build_id_Valid() const;

    QString getBuildTask() const;
    void setBuildTask(const QString &build_task);
    bool is_build_task_Set() const;
    bool is_build_task_Valid() const;

    QString getBuildType() const;
    void setBuildType(const QString &build_type);
    bool is_build_type_Set() const;
    bool is_build_type_Valid() const;

    QDateTime getCreateTime() const;
    void setCreateTime(const QDateTime &create_time);
    bool is_create_time_Set() const;
    bool is_create_time_Valid() const;

    QDateTime getFinishTime() const;
    void setFinishTime(const QDateTime &finish_time);
    bool is_finish_time_Set() const;
    bool is_finish_time_Valid() const;

    OAIGitCommitTrigger getGitCommitTrigger() const;
    void setGitCommitTrigger(const OAIGitCommitTrigger &git_commit_trigger);
    bool is_git_commit_trigger_Set() const;
    bool is_git_commit_trigger_Valid() const;

    OAIImageUpdateTrigger getImageUpdateTrigger() const;
    void setImageUpdateTrigger(const OAIImageUpdateTrigger &image_update_trigger);
    bool is_image_update_trigger_Set() const;
    bool is_image_update_trigger_Valid() const;

    bool isIsArchiveEnabled() const;
    void setIsArchiveEnabled(const bool &is_archive_enabled);
    bool is_is_archive_enabled_Set() const;
    bool is_is_archive_enabled_Valid() const;

    QDateTime getLastUpdatedTime() const;
    void setLastUpdatedTime(const QDateTime &last_updated_time);
    bool is_last_updated_time_Set() const;
    bool is_last_updated_time_Valid() const;

    QList<OAIImageDescriptor> getOutputImages() const;
    void setOutputImages(const QList<OAIImageDescriptor> &output_images);
    bool is_output_images_Set() const;
    bool is_output_images_Valid() const;

    OAIPlatformProperties getPlatform() const;
    void setPlatform(const OAIPlatformProperties &platform);
    bool is_platform_Set() const;
    bool is_platform_Valid() const;

    QString getProvisioningState() const;
    void setProvisioningState(const QString &provisioning_state);
    bool is_provisioning_state_Set() const;
    bool is_provisioning_state_Valid() const;

    QDateTime getStartTime() const;
    void setStartTime(const QDateTime &start_time);
    bool is_start_time_Set() const;
    bool is_start_time_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_build_id;
    bool m_build_id_isSet;
    bool m_build_id_isValid;

    QString m_build_task;
    bool m_build_task_isSet;
    bool m_build_task_isValid;

    QString m_build_type;
    bool m_build_type_isSet;
    bool m_build_type_isValid;

    QDateTime m_create_time;
    bool m_create_time_isSet;
    bool m_create_time_isValid;

    QDateTime m_finish_time;
    bool m_finish_time_isSet;
    bool m_finish_time_isValid;

    OAIGitCommitTrigger m_git_commit_trigger;
    bool m_git_commit_trigger_isSet;
    bool m_git_commit_trigger_isValid;

    OAIImageUpdateTrigger m_image_update_trigger;
    bool m_image_update_trigger_isSet;
    bool m_image_update_trigger_isValid;

    bool m_is_archive_enabled;
    bool m_is_archive_enabled_isSet;
    bool m_is_archive_enabled_isValid;

    QDateTime m_last_updated_time;
    bool m_last_updated_time_isSet;
    bool m_last_updated_time_isValid;

    QList<OAIImageDescriptor> m_output_images;
    bool m_output_images_isSet;
    bool m_output_images_isValid;

    OAIPlatformProperties m_platform;
    bool m_platform_isSet;
    bool m_platform_isValid;

    QString m_provisioning_state;
    bool m_provisioning_state_isSet;
    bool m_provisioning_state_isValid;

    QDateTime m_start_time;
    bool m_start_time_isSet;
    bool m_start_time_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBuildProperties)

#endif // OAIBuildProperties_H
