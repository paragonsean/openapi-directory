/**
 * ContainerRegistryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-02-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGitCommitTrigger.h
 *
 * The git commit trigger that caused a build.
 */

#ifndef OAIGitCommitTrigger_H
#define OAIGitCommitTrigger_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGitCommitTrigger : public OAIObject {
public:
    OAIGitCommitTrigger();
    OAIGitCommitTrigger(QString json);
    ~OAIGitCommitTrigger() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBranchName() const;
    void setBranchName(const QString &branch_name);
    bool is_branch_name_Set() const;
    bool is_branch_name_Valid() const;

    QString getCommitId() const;
    void setCommitId(const QString &commit_id);
    bool is_commit_id_Set() const;
    bool is_commit_id_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getProviderType() const;
    void setProviderType(const QString &provider_type);
    bool is_provider_type_Set() const;
    bool is_provider_type_Valid() const;

    QString getRepositoryUrl() const;
    void setRepositoryUrl(const QString &repository_url);
    bool is_repository_url_Set() const;
    bool is_repository_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_branch_name;
    bool m_branch_name_isSet;
    bool m_branch_name_isValid;

    QString m_commit_id;
    bool m_commit_id_isSet;
    bool m_commit_id_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_provider_type;
    bool m_provider_type_isSet;
    bool m_provider_type_isValid;

    QString m_repository_url;
    bool m_repository_url_isSet;
    bool m_repository_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGitCommitTrigger)

#endif // OAIGitCommitTrigger_H
