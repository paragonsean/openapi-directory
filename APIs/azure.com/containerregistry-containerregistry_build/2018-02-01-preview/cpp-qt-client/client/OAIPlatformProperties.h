/**
 * ContainerRegistryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-02-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPlatformProperties.h
 *
 * The platform properties against which the build has to happen.
 */

#ifndef OAIPlatformProperties_H
#define OAIPlatformProperties_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPlatformProperties : public OAIObject {
public:
    OAIPlatformProperties();
    OAIPlatformProperties(QString json);
    ~OAIPlatformProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getCpu() const;
    void setCpu(const qint32 &cpu);
    bool is_cpu_Set() const;
    bool is_cpu_Valid() const;

    QString getOsType() const;
    void setOsType(const QString &os_type);
    bool is_os_type_Set() const;
    bool is_os_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_cpu;
    bool m_cpu_isSet;
    bool m_cpu_isValid;

    QString m_os_type;
    bool m_os_type_isSet;
    bool m_os_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPlatformProperties)

#endif // OAIPlatformProperties_H
