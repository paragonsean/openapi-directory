/**
 * ContainerRegistryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-06-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITaskRunPropertiesUpdateParameters.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITaskRunPropertiesUpdateParameters::OAITaskRunPropertiesUpdateParameters(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITaskRunPropertiesUpdateParameters::OAITaskRunPropertiesUpdateParameters() {
    this->initializeModel();
}

OAITaskRunPropertiesUpdateParameters::~OAITaskRunPropertiesUpdateParameters() {}

void OAITaskRunPropertiesUpdateParameters::initializeModel() {

    m_force_update_tag_isSet = false;
    m_force_update_tag_isValid = false;

    m_run_request_isSet = false;
    m_run_request_isValid = false;
}

void OAITaskRunPropertiesUpdateParameters::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITaskRunPropertiesUpdateParameters::fromJsonObject(QJsonObject json) {

    m_force_update_tag_isValid = ::OpenAPI::fromJsonValue(m_force_update_tag, json[QString("forceUpdateTag")]);
    m_force_update_tag_isSet = !json[QString("forceUpdateTag")].isNull() && m_force_update_tag_isValid;

    m_run_request_isValid = ::OpenAPI::fromJsonValue(m_run_request, json[QString("runRequest")]);
    m_run_request_isSet = !json[QString("runRequest")].isNull() && m_run_request_isValid;
}

QString OAITaskRunPropertiesUpdateParameters::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITaskRunPropertiesUpdateParameters::asJsonObject() const {
    QJsonObject obj;
    if (m_force_update_tag_isSet) {
        obj.insert(QString("forceUpdateTag"), ::OpenAPI::toJsonValue(m_force_update_tag));
    }
    if (m_run_request.isSet()) {
        obj.insert(QString("runRequest"), ::OpenAPI::toJsonValue(m_run_request));
    }
    return obj;
}

QString OAITaskRunPropertiesUpdateParameters::getForceUpdateTag() const {
    return m_force_update_tag;
}
void OAITaskRunPropertiesUpdateParameters::setForceUpdateTag(const QString &force_update_tag) {
    m_force_update_tag = force_update_tag;
    m_force_update_tag_isSet = true;
}

bool OAITaskRunPropertiesUpdateParameters::is_force_update_tag_Set() const{
    return m_force_update_tag_isSet;
}

bool OAITaskRunPropertiesUpdateParameters::is_force_update_tag_Valid() const{
    return m_force_update_tag_isValid;
}

OAIRunRequest OAITaskRunPropertiesUpdateParameters::getRunRequest() const {
    return m_run_request;
}
void OAITaskRunPropertiesUpdateParameters::setRunRequest(const OAIRunRequest &run_request) {
    m_run_request = run_request;
    m_run_request_isSet = true;
}

bool OAITaskRunPropertiesUpdateParameters::is_run_request_Set() const{
    return m_run_request_isSet;
}

bool OAITaskRunPropertiesUpdateParameters::is_run_request_Valid() const{
    return m_run_request_isValid;
}

bool OAITaskRunPropertiesUpdateParameters::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_force_update_tag_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_run_request.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITaskRunPropertiesUpdateParameters::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
