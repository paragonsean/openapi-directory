# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.argument import Argument
from openapi_server.models.set_value import SetValue
from openapi_server import util


class OverrideTaskStepProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, arguments: List[Argument]=None, context_path: str=None, file: str=None, target: str=None, update_trigger_token: str=None, values: List[SetValue]=None):
        """OverrideTaskStepProperties - a model defined in OpenAPI

        :param arguments: The arguments of this OverrideTaskStepProperties.
        :param context_path: The context_path of this OverrideTaskStepProperties.
        :param file: The file of this OverrideTaskStepProperties.
        :param target: The target of this OverrideTaskStepProperties.
        :param update_trigger_token: The update_trigger_token of this OverrideTaskStepProperties.
        :param values: The values of this OverrideTaskStepProperties.
        """
        self.openapi_types = {
            'arguments': List[Argument],
            'context_path': str,
            'file': str,
            'target': str,
            'update_trigger_token': str,
            'values': List[SetValue]
        }

        self.attribute_map = {
            'arguments': 'arguments',
            'context_path': 'contextPath',
            'file': 'file',
            'target': 'target',
            'update_trigger_token': 'updateTriggerToken',
            'values': 'values'
        }

        self._arguments = arguments
        self._context_path = context_path
        self._file = file
        self._target = target
        self._update_trigger_token = update_trigger_token
        self._values = values

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OverrideTaskStepProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OverrideTaskStepProperties of this OverrideTaskStepProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def arguments(self):
        """Gets the arguments of this OverrideTaskStepProperties.

        Gets or sets the collection of override arguments to be used when  executing a build step.

        :return: The arguments of this OverrideTaskStepProperties.
        :rtype: List[Argument]
        """
        return self._arguments

    @arguments.setter
    def arguments(self, arguments):
        """Sets the arguments of this OverrideTaskStepProperties.

        Gets or sets the collection of override arguments to be used when  executing a build step.

        :param arguments: The arguments of this OverrideTaskStepProperties.
        :type arguments: List[Argument]
        """

        self._arguments = arguments

    @property
    def context_path(self):
        """Gets the context_path of this OverrideTaskStepProperties.

        The source context against which run has to be queued.

        :return: The context_path of this OverrideTaskStepProperties.
        :rtype: str
        """
        return self._context_path

    @context_path.setter
    def context_path(self, context_path):
        """Sets the context_path of this OverrideTaskStepProperties.

        The source context against which run has to be queued.

        :param context_path: The context_path of this OverrideTaskStepProperties.
        :type context_path: str
        """

        self._context_path = context_path

    @property
    def file(self):
        """Gets the file of this OverrideTaskStepProperties.

        The file against which run has to be queued.

        :return: The file of this OverrideTaskStepProperties.
        :rtype: str
        """
        return self._file

    @file.setter
    def file(self, file):
        """Sets the file of this OverrideTaskStepProperties.

        The file against which run has to be queued.

        :param file: The file of this OverrideTaskStepProperties.
        :type file: str
        """

        self._file = file

    @property
    def target(self):
        """Gets the target of this OverrideTaskStepProperties.

        The name of the target build stage for the docker build.

        :return: The target of this OverrideTaskStepProperties.
        :rtype: str
        """
        return self._target

    @target.setter
    def target(self, target):
        """Sets the target of this OverrideTaskStepProperties.

        The name of the target build stage for the docker build.

        :param target: The target of this OverrideTaskStepProperties.
        :type target: str
        """

        self._target = target

    @property
    def update_trigger_token(self):
        """Gets the update_trigger_token of this OverrideTaskStepProperties.

        Base64 encoded update trigger token that will be attached with the base image trigger webhook.

        :return: The update_trigger_token of this OverrideTaskStepProperties.
        :rtype: str
        """
        return self._update_trigger_token

    @update_trigger_token.setter
    def update_trigger_token(self, update_trigger_token):
        """Sets the update_trigger_token of this OverrideTaskStepProperties.

        Base64 encoded update trigger token that will be attached with the base image trigger webhook.

        :param update_trigger_token: The update_trigger_token of this OverrideTaskStepProperties.
        :type update_trigger_token: str
        """

        self._update_trigger_token = update_trigger_token

    @property
    def values(self):
        """Gets the values of this OverrideTaskStepProperties.

        The collection of overridable values that can be passed when running a Task.

        :return: The values of this OverrideTaskStepProperties.
        :rtype: List[SetValue]
        """
        return self._values

    @values.setter
    def values(self, values):
        """Sets the values of this OverrideTaskStepProperties.

        The collection of overridable values that can be passed when running a Task.

        :param values: The values of this OverrideTaskStepProperties.
        :type values: List[SetValue]
        """

        self._values = values
