# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BaseImageDependency(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, digest: str=None, registry: str=None, repository: str=None, tag: str=None, type: str=None):
        """BaseImageDependency - a model defined in OpenAPI

        :param digest: The digest of this BaseImageDependency.
        :param registry: The registry of this BaseImageDependency.
        :param repository: The repository of this BaseImageDependency.
        :param tag: The tag of this BaseImageDependency.
        :param type: The type of this BaseImageDependency.
        """
        self.openapi_types = {
            'digest': str,
            'registry': str,
            'repository': str,
            'tag': str,
            'type': str
        }

        self.attribute_map = {
            'digest': 'digest',
            'registry': 'registry',
            'repository': 'repository',
            'tag': 'tag',
            'type': 'type'
        }

        self._digest = digest
        self._registry = registry
        self._repository = repository
        self._tag = tag
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BaseImageDependency':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BaseImageDependency of this BaseImageDependency.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def digest(self):
        """Gets the digest of this BaseImageDependency.

        The sha256-based digest of the image manifest.

        :return: The digest of this BaseImageDependency.
        :rtype: str
        """
        return self._digest

    @digest.setter
    def digest(self, digest):
        """Sets the digest of this BaseImageDependency.

        The sha256-based digest of the image manifest.

        :param digest: The digest of this BaseImageDependency.
        :type digest: str
        """

        self._digest = digest

    @property
    def registry(self):
        """Gets the registry of this BaseImageDependency.

        The registry login server.

        :return: The registry of this BaseImageDependency.
        :rtype: str
        """
        return self._registry

    @registry.setter
    def registry(self, registry):
        """Sets the registry of this BaseImageDependency.

        The registry login server.

        :param registry: The registry of this BaseImageDependency.
        :type registry: str
        """

        self._registry = registry

    @property
    def repository(self):
        """Gets the repository of this BaseImageDependency.

        The repository name.

        :return: The repository of this BaseImageDependency.
        :rtype: str
        """
        return self._repository

    @repository.setter
    def repository(self, repository):
        """Sets the repository of this BaseImageDependency.

        The repository name.

        :param repository: The repository of this BaseImageDependency.
        :type repository: str
        """

        self._repository = repository

    @property
    def tag(self):
        """Gets the tag of this BaseImageDependency.

        The tag name.

        :return: The tag of this BaseImageDependency.
        :rtype: str
        """
        return self._tag

    @tag.setter
    def tag(self, tag):
        """Sets the tag of this BaseImageDependency.

        The tag name.

        :param tag: The tag of this BaseImageDependency.
        :type tag: str
        """

        self._tag = tag

    @property
    def type(self):
        """Gets the type of this BaseImageDependency.

        The type of the base image dependency.

        :return: The type of this BaseImageDependency.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this BaseImageDependency.

        The type of the base image dependency.

        :param type: The type of this BaseImageDependency.
        :type type: str
        """
        allowed_values = ["BuildTime", "RunTime"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"
                .format(type, allowed_values)
            )

        self._type = type
