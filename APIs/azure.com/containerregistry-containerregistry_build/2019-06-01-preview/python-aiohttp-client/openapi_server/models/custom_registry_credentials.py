# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.secret_object import SecretObject
from openapi_server import util


class CustomRegistryCredentials(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, identity: str=None, password: SecretObject=None, user_name: SecretObject=None):
        """CustomRegistryCredentials - a model defined in OpenAPI

        :param identity: The identity of this CustomRegistryCredentials.
        :param password: The password of this CustomRegistryCredentials.
        :param user_name: The user_name of this CustomRegistryCredentials.
        """
        self.openapi_types = {
            'identity': str,
            'password': SecretObject,
            'user_name': SecretObject
        }

        self.attribute_map = {
            'identity': 'identity',
            'password': 'password',
            'user_name': 'userName'
        }

        self._identity = identity
        self._password = password
        self._user_name = user_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CustomRegistryCredentials':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CustomRegistryCredentials of this CustomRegistryCredentials.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def identity(self):
        """Gets the identity of this CustomRegistryCredentials.

        Indicates the managed identity assigned to the custom credential. If a user-assigned identity  this value is the Client ID. If a system-assigned identity, the value will be `system`. In  the case of a system-assigned identity, the Client ID will be determined by the runner. This  identity may be used to authenticate to key vault to retrieve credentials or it may be the only   source of authentication used for accessing the registry.

        :return: The identity of this CustomRegistryCredentials.
        :rtype: str
        """
        return self._identity

    @identity.setter
    def identity(self, identity):
        """Sets the identity of this CustomRegistryCredentials.

        Indicates the managed identity assigned to the custom credential. If a user-assigned identity  this value is the Client ID. If a system-assigned identity, the value will be `system`. In  the case of a system-assigned identity, the Client ID will be determined by the runner. This  identity may be used to authenticate to key vault to retrieve credentials or it may be the only   source of authentication used for accessing the registry.

        :param identity: The identity of this CustomRegistryCredentials.
        :type identity: str
        """

        self._identity = identity

    @property
    def password(self):
        """Gets the password of this CustomRegistryCredentials.


        :return: The password of this CustomRegistryCredentials.
        :rtype: SecretObject
        """
        return self._password

    @password.setter
    def password(self, password):
        """Sets the password of this CustomRegistryCredentials.


        :param password: The password of this CustomRegistryCredentials.
        :type password: SecretObject
        """

        self._password = password

    @property
    def user_name(self):
        """Gets the user_name of this CustomRegistryCredentials.


        :return: The user_name of this CustomRegistryCredentials.
        :rtype: SecretObject
        """
        return self._user_name

    @user_name.setter
    def user_name(self, user_name):
        """Sets the user_name of this CustomRegistryCredentials.


        :param user_name: The user_name of this CustomRegistryCredentials.
        :type user_name: SecretObject
        """

        self._user_name = user_name
