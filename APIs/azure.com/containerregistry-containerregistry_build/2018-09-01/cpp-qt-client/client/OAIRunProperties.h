/**
 * ContainerRegistryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-09-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRunProperties.h
 *
 * The properties for a run.
 */

#ifndef OAIRunProperties_H
#define OAIRunProperties_H

#include <QJsonObject>

#include "OAIAgentProperties.h"
#include "OAIImageDescriptor.h"
#include "OAIImageUpdateTrigger.h"
#include "OAIPlatformProperties.h"
#include "OAISourceTriggerDescriptor.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAgentProperties;
class OAIImageUpdateTrigger;
class OAIImageDescriptor;
class OAIPlatformProperties;
class OAISourceTriggerDescriptor;

class OAIRunProperties : public OAIObject {
public:
    OAIRunProperties();
    OAIRunProperties(QString json);
    ~OAIRunProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAgentProperties getAgentConfiguration() const;
    void setAgentConfiguration(const OAIAgentProperties &agent_configuration);
    bool is_agent_configuration_Set() const;
    bool is_agent_configuration_Valid() const;

    QDateTime getCreateTime() const;
    void setCreateTime(const QDateTime &create_time);
    bool is_create_time_Set() const;
    bool is_create_time_Valid() const;

    QList<QString> getCustomRegistries() const;
    void setCustomRegistries(const QList<QString> &custom_registries);
    bool is_custom_registries_Set() const;
    bool is_custom_registries_Valid() const;

    QDateTime getFinishTime() const;
    void setFinishTime(const QDateTime &finish_time);
    bool is_finish_time_Set() const;
    bool is_finish_time_Valid() const;

    OAIImageUpdateTrigger getImageUpdateTrigger() const;
    void setImageUpdateTrigger(const OAIImageUpdateTrigger &image_update_trigger);
    bool is_image_update_trigger_Set() const;
    bool is_image_update_trigger_Valid() const;

    bool isIsArchiveEnabled() const;
    void setIsArchiveEnabled(const bool &is_archive_enabled);
    bool is_is_archive_enabled_Set() const;
    bool is_is_archive_enabled_Valid() const;

    QDateTime getLastUpdatedTime() const;
    void setLastUpdatedTime(const QDateTime &last_updated_time);
    bool is_last_updated_time_Set() const;
    bool is_last_updated_time_Valid() const;

    QList<OAIImageDescriptor> getOutputImages() const;
    void setOutputImages(const QList<OAIImageDescriptor> &output_images);
    bool is_output_images_Set() const;
    bool is_output_images_Valid() const;

    OAIPlatformProperties getPlatform() const;
    void setPlatform(const OAIPlatformProperties &platform);
    bool is_platform_Set() const;
    bool is_platform_Valid() const;

    QString getProvisioningState() const;
    void setProvisioningState(const QString &provisioning_state);
    bool is_provisioning_state_Set() const;
    bool is_provisioning_state_Valid() const;

    QString getRunErrorMessage() const;
    void setRunErrorMessage(const QString &run_error_message);
    bool is_run_error_message_Set() const;
    bool is_run_error_message_Valid() const;

    QString getRunId() const;
    void setRunId(const QString &run_id);
    bool is_run_id_Set() const;
    bool is_run_id_Valid() const;

    QString getRunType() const;
    void setRunType(const QString &run_type);
    bool is_run_type_Set() const;
    bool is_run_type_Valid() const;

    QString getSourceRegistryAuth() const;
    void setSourceRegistryAuth(const QString &source_registry_auth);
    bool is_source_registry_auth_Set() const;
    bool is_source_registry_auth_Valid() const;

    OAISourceTriggerDescriptor getSourceTrigger() const;
    void setSourceTrigger(const OAISourceTriggerDescriptor &source_trigger);
    bool is_source_trigger_Set() const;
    bool is_source_trigger_Valid() const;

    QDateTime getStartTime() const;
    void setStartTime(const QDateTime &start_time);
    bool is_start_time_Set() const;
    bool is_start_time_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getTask() const;
    void setTask(const QString &task);
    bool is_task_Set() const;
    bool is_task_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAgentProperties m_agent_configuration;
    bool m_agent_configuration_isSet;
    bool m_agent_configuration_isValid;

    QDateTime m_create_time;
    bool m_create_time_isSet;
    bool m_create_time_isValid;

    QList<QString> m_custom_registries;
    bool m_custom_registries_isSet;
    bool m_custom_registries_isValid;

    QDateTime m_finish_time;
    bool m_finish_time_isSet;
    bool m_finish_time_isValid;

    OAIImageUpdateTrigger m_image_update_trigger;
    bool m_image_update_trigger_isSet;
    bool m_image_update_trigger_isValid;

    bool m_is_archive_enabled;
    bool m_is_archive_enabled_isSet;
    bool m_is_archive_enabled_isValid;

    QDateTime m_last_updated_time;
    bool m_last_updated_time_isSet;
    bool m_last_updated_time_isValid;

    QList<OAIImageDescriptor> m_output_images;
    bool m_output_images_isSet;
    bool m_output_images_isValid;

    OAIPlatformProperties m_platform;
    bool m_platform_isSet;
    bool m_platform_isValid;

    QString m_provisioning_state;
    bool m_provisioning_state_isSet;
    bool m_provisioning_state_isValid;

    QString m_run_error_message;
    bool m_run_error_message_isSet;
    bool m_run_error_message_isValid;

    QString m_run_id;
    bool m_run_id_isSet;
    bool m_run_id_isValid;

    QString m_run_type;
    bool m_run_type_isSet;
    bool m_run_type_isValid;

    QString m_source_registry_auth;
    bool m_source_registry_auth_isSet;
    bool m_source_registry_auth_isValid;

    OAISourceTriggerDescriptor m_source_trigger;
    bool m_source_trigger_isSet;
    bool m_source_trigger_isValid;

    QDateTime m_start_time;
    bool m_start_time_isSet;
    bool m_start_time_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_task;
    bool m_task_isSet;
    bool m_task_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRunProperties)

#endif // OAIRunProperties_H
