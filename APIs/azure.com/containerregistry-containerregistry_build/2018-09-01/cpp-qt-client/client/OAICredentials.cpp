/**
 * ContainerRegistryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-09-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICredentials.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICredentials::OAICredentials(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICredentials::OAICredentials() {
    this->initializeModel();
}

OAICredentials::~OAICredentials() {}

void OAICredentials::initializeModel() {

    m_custom_registries_isSet = false;
    m_custom_registries_isValid = false;

    m_source_registry_isSet = false;
    m_source_registry_isValid = false;
}

void OAICredentials::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICredentials::fromJsonObject(QJsonObject json) {

    m_custom_registries_isValid = ::OpenAPI::fromJsonValue(m_custom_registries, json[QString("customRegistries")]);
    m_custom_registries_isSet = !json[QString("customRegistries")].isNull() && m_custom_registries_isValid;

    m_source_registry_isValid = ::OpenAPI::fromJsonValue(m_source_registry, json[QString("sourceRegistry")]);
    m_source_registry_isSet = !json[QString("sourceRegistry")].isNull() && m_source_registry_isValid;
}

QString OAICredentials::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICredentials::asJsonObject() const {
    QJsonObject obj;
    if (m_custom_registries.size() > 0) {
        obj.insert(QString("customRegistries"), ::OpenAPI::toJsonValue(m_custom_registries));
    }
    if (m_source_registry.isSet()) {
        obj.insert(QString("sourceRegistry"), ::OpenAPI::toJsonValue(m_source_registry));
    }
    return obj;
}

QMap<QString, OAICustomRegistryCredentials> OAICredentials::getCustomRegistries() const {
    return m_custom_registries;
}
void OAICredentials::setCustomRegistries(const QMap<QString, OAICustomRegistryCredentials> &custom_registries) {
    m_custom_registries = custom_registries;
    m_custom_registries_isSet = true;
}

bool OAICredentials::is_custom_registries_Set() const{
    return m_custom_registries_isSet;
}

bool OAICredentials::is_custom_registries_Valid() const{
    return m_custom_registries_isValid;
}

OAISourceRegistryCredentials OAICredentials::getSourceRegistry() const {
    return m_source_registry;
}
void OAICredentials::setSourceRegistry(const OAISourceRegistryCredentials &source_registry) {
    m_source_registry = source_registry;
    m_source_registry_isSet = true;
}

bool OAICredentials::is_source_registry_Set() const{
    return m_source_registry_isSet;
}

bool OAICredentials::is_source_registry_Valid() const{
    return m_source_registry_isValid;
}

bool OAICredentials::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_custom_registries.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_source_registry.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICredentials::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
