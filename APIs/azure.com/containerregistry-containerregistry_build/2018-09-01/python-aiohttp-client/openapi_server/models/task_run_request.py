# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.run_request import RunRequest
from openapi_server.models.set_value import SetValue
from openapi_server import util


class TaskRunRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, task_name: str=None, values: List[SetValue]=None, is_archive_enabled: bool=False, type: str=None):
        """TaskRunRequest - a model defined in OpenAPI

        :param task_name: The task_name of this TaskRunRequest.
        :param values: The values of this TaskRunRequest.
        :param is_archive_enabled: The is_archive_enabled of this TaskRunRequest.
        :param type: The type of this TaskRunRequest.
        """
        self.openapi_types = {
            'task_name': str,
            'values': List[SetValue],
            'is_archive_enabled': bool,
            'type': str
        }

        self.attribute_map = {
            'task_name': 'taskName',
            'values': 'values',
            'is_archive_enabled': 'isArchiveEnabled',
            'type': 'type'
        }

        self._task_name = task_name
        self._values = values
        self._is_archive_enabled = is_archive_enabled
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TaskRunRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TaskRunRequest of this TaskRunRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def task_name(self):
        """Gets the task_name of this TaskRunRequest.

        The name of task against which run has to be queued.

        :return: The task_name of this TaskRunRequest.
        :rtype: str
        """
        return self._task_name

    @task_name.setter
    def task_name(self, task_name):
        """Sets the task_name of this TaskRunRequest.

        The name of task against which run has to be queued.

        :param task_name: The task_name of this TaskRunRequest.
        :type task_name: str
        """
        if task_name is None:
            raise ValueError("Invalid value for `task_name`, must not be `None`")

        self._task_name = task_name

    @property
    def values(self):
        """Gets the values of this TaskRunRequest.

        The collection of overridable values that can be passed when running a task.

        :return: The values of this TaskRunRequest.
        :rtype: List[SetValue]
        """
        return self._values

    @values.setter
    def values(self, values):
        """Sets the values of this TaskRunRequest.

        The collection of overridable values that can be passed when running a task.

        :param values: The values of this TaskRunRequest.
        :type values: List[SetValue]
        """

        self._values = values

    @property
    def is_archive_enabled(self):
        """Gets the is_archive_enabled of this TaskRunRequest.

        The value that indicates whether archiving is enabled for the run or not.

        :return: The is_archive_enabled of this TaskRunRequest.
        :rtype: bool
        """
        return self._is_archive_enabled

    @is_archive_enabled.setter
    def is_archive_enabled(self, is_archive_enabled):
        """Sets the is_archive_enabled of this TaskRunRequest.

        The value that indicates whether archiving is enabled for the run or not.

        :param is_archive_enabled: The is_archive_enabled of this TaskRunRequest.
        :type is_archive_enabled: bool
        """

        self._is_archive_enabled = is_archive_enabled

    @property
    def type(self):
        """Gets the type of this TaskRunRequest.

        The type of the run request.

        :return: The type of this TaskRunRequest.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this TaskRunRequest.

        The type of the run request.

        :param type: The type of this TaskRunRequest.
        :type type: str
        """

        self._type = type
