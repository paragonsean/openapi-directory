openapi: 3.0.1
info:
  title: ContainerRegistryManagementClient
  version: 2019-04-01
  x-apisguru-categories:
  - cloud
  x-logo:
    url: https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png
  x-origin:
  - format: swagger
    url: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/containerregistry/resource-manager/Microsoft.ContainerRegistry/stable/2019-04-01/containerregistry_build.json
    version: "2.0"
  x-preferred: false
  x-providerName: azure.com
  x-serviceName: containerregistry-containerregistry_build
  x-tags:
  - Azure
  - Microsoft
servers:
- url: https://management.azure.com/
security:
- azure_auth:
  - user_impersonation
paths:
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/listBuildSourceUploadUrl
  : post:
      description: Get the upload location for the user to be able to upload the source.
      operationId: Registries_GetBuildSourceUploadUrl
      parameters:
      - description: The Microsoft Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: The name of the resource group to which the container registry
          belongs.
        in: path
        name: resourceGroupName
        required: true
        schema:
          minLength: 1
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the container registry.
        in: path
        name: registryName
        required: true
        schema:
          maxLength: 50
          minLength: 5
          pattern: "^[a-zA-Z0-9]*$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The client API version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceUploadDefinition'
          description: The request was successful; the request was well-formed and
            received properly.
        default:
          content: {}
          description: "Error response describing why the operation failed. If the\
            \ registry doesn't exist, 404 (Not found) is returned."
      tags:
      - Registries
      x-ms-examples:
        Registries_GetBuildSourceUploadUrl:
          parameters:
            api-version: 2019-04-01
            registryName: myRegistry
            resourceGroupName: myResourceGroup
            subscriptionId: 4385cf00-2d3a-425a-832f-f4285b1c9dce
          responses:
            "200":
              body:
                relativePath: source/201802130000/b52f12d8-c3d6-4d75-9107-220f0bfc681d.tar.gz
                uploadUrl: https://registrystorageaccount.blob.core.windows.net/registrycontainer/source/201802130000/b52f12d8-c3d6-4d75-9107-220f0bfc681d.tar.gz?sv=2015-04-05&st=2015-04-29T22%3A18%3A26Z&se=2015-04-30T02%3A23%3A26Z&sr=b&sp=rw&sip=168.1.5.60-168.1.5.70&spr=https&sig=Z%2FRHIX5Xcg0Mq2rqI3OlWTjEg2tYkboXr1P9ZUXDtkk%3D
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/runs
  : get:
      description: Gets all the runs for a registry.
      operationId: Runs_List
      parameters:
      - description: The Microsoft Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: The name of the resource group to which the container registry
          belongs.
        in: path
        name: resourceGroupName
        required: true
        schema:
          minLength: 1
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the container registry.
        in: path
        name: registryName
        required: true
        schema:
          maxLength: 50
          minLength: 5
          pattern: "^[a-zA-Z0-9]*$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The client API version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: "The runs filter to apply on the operation. Arithmetic operators\
          \ are not supported. The allowed string function is 'contains'. All logical\
          \ operators except 'Not', 'Has', 'All' are allowed."
        in: query
        name: $filter
        schema:
          type: string
      - description: "$top is supported for get list of runs, which limits the maximum\
          \ number of runs to return."
        in: query
        name: $top
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunListResult'
          description: The request was successful; the request was well-formed and
            received properly.
        default:
          content: {}
          description: Error response describing why the operation failed.
      tags:
      - Runs
      x-ms-examples:
        Runs_List:
          parameters:
            $filter: ""
            $top: 10
            api-version: 2019-04-01
            registryName: myRegistry
            resourceGroupName: myResourceGroup
            subscriptionId: 4385cf00-2d3a-425a-832f-f4285b1c9dce
          responses:
            "200":
              body:
                value:
                - id: /subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/runs/0accec26-d6de-4757-8e74-d080f38eaaab
                  name: 0accec26-d6de-4757-8e74-d080f38eaaab
                  properties:
                    agentConfiguration:
                      cpu: 2
                    createTime: 2018-01-25T05:13:51.618Z
                    finishTime: 2018-01-25T06:13:51.618Z
                    imageUpdateTrigger:
                      id: c0c43143-da5d-41ef-b9e1-e7d749272e88
                      images:
                      - digest: sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0
                        registry: registry.hub.docker.com
                        repository: mybaseimage
                        tag: latest
                      timestamp: 2018-01-25T05:13:51.618Z
                    isArchiveEnabled: true
                    lastUpdatedTime: 2018-01-25T05:13:51.617Z
                    outputImages:
                    - digest: sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0
                      registry: myregistry.azurecr.io
                      repository: myimage
                      tag: latest
                    platform:
                      architecture: amd64
                      os: Linux
                    provisioningState: Succeeded
                    runId: 0accec26-d6de-4757-8e74-d080f38eaaab
                    runType: AutoBuild
                    startTime: 2018-01-25T05:50:51.618Z
                    status: Succeeded
                    task: myTask
                  type: Microsoft.ContainerRegistry/registries/runs
        Runs_List_WithTimerTrigger:
          parameters:
            $filter: ""
            $top: 10
            api-version: 2019-04-01
            registryName: myRegistry
            resourceGroupName: myResourceGroup
            subscriptionId: 4385cf00-2d3a-425a-832f-f4285b1c9dce
          responses:
            "200":
              body:
                value:
                - id: /subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/runs/0accec26-d6de-4757-8e74-d080f38eaaab
                  name: 0accec26-d6de-4757-8e74-d080f38eaaab
                  properties:
                    agentConfiguration:
                      cpu: 2
                    createTime: 2018-01-25T05:13:51.618Z
                    finishTime: 2018-01-25T06:13:51.618Z
                    isArchiveEnabled: true
                    lastUpdatedTime: 2018-01-25T05:13:51.617Z
                    outputImages:
                    - digest: sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0
                      registry: myregistry.azurecr.io
                      repository: myimage
                      tag: latest
                    platform:
                      architecture: amd64
                      os: Linux
                    provisioningState: Succeeded
                    runId: 0accec26-d6de-4757-8e74-d080f38eaaab
                    runType: AutoBuild
                    startTime: 2018-01-25T05:50:51.618Z
                    status: Succeeded
                    task: myTask
                    timerTrigger:
                      scheduleOccurrence: 6/4/2019 9:30 AM
                      timerTriggerName: myTimerTrigger
                  type: Microsoft.ContainerRegistry/registries/runs
      x-ms-odata: '#/definitions/RunFilter'
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/runs/{runId}
  : get:
      description: Gets the detailed information for a given run.
      operationId: Runs_Get
      parameters:
      - description: The Microsoft Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: The name of the resource group to which the container registry
          belongs.
        in: path
        name: resourceGroupName
        required: true
        schema:
          minLength: 1
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the container registry.
        in: path
        name: registryName
        required: true
        schema:
          maxLength: 50
          minLength: 5
          pattern: "^[a-zA-Z0-9]*$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The client API version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The run ID.
        in: path
        name: runId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Run'
          description: The request was successful; the request was well-formed and
            received properly.
        default:
          content: {}
          description: "Error response describing why the operation failed. If the\
            \ registry/run doesn't exist, 404 (Not found) is returned."
      tags:
      - Runs
      x-ms-examples:
        Runs_Get:
          parameters:
            api-version: 2019-04-01
            registryName: myRegistry
            resourceGroupName: myResourceGroup
            runId: 0accec26-d6de-4757-8e74-d080f38eaaab
            subscriptionId: 4385cf00-2d3a-425a-832f-f4285b1c9dce
          responses:
            "200":
              body:
                id: /subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/runs/0accec26-d6de-4757-8e74-d080f38eaaab
                name: 0accec26-d6de-4757-8e74-d080f38eaaab
                properties:
                  agentConfiguration:
                    cpu: 2
                  createTime: 2018-01-25T05:13:51.618Z
                  finishTime: 2018-01-25T06:13:51.618Z
                  imageUpdateTrigger:
                    id: c0c43143-da5d-41ef-b9e1-e7d749272e88
                    images:
                    - digest: sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0
                      registry: registry.hub.docker.com
                      repository: mybaseimage
                      tag: latest
                    timestamp: 2018-01-25T05:13:51.618Z
                  isArchiveEnabled: true
                  lastUpdatedTime: 2018-01-25T05:13:51.617Z
                  outputImages:
                  - digest: sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0
                    registry: myregistry.azurecr.io
                    repository: myimage
                    tag: latest
                  platform:
                    architecture: amd64
                    os: Linux
                  provisioningState: Succeeded
                  runId: 0accec26-d6de-4757-8e74-d080f38eaaab
                  runType: AutoBuild
                  startTime: 2018-01-25T05:50:51.618Z
                  status: Succeeded
                  task: myTask
                type: Microsoft.ContainerRegistry/registries/runs
        Runs_Get_WithTimerTrigger:
          parameters:
            api-version: 2019-04-01
            registryName: myRegistry
            resourceGroupName: myResourceGroup
            runId: 0accec26-d6de-4757-8e74-d080f38eaaab
            subscriptionId: 4385cf00-2d3a-425a-832f-f4285b1c9dce
          responses:
            "200":
              body:
                id: /subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/runs/0accec26-d6de-4757-8e74-d080f38eaaab
                name: 0accec26-d6de-4757-8e74-d080f38eaaab
                properties:
                  agentConfiguration:
                    cpu: 2
                  createTime: 2018-01-25T05:13:51.618Z
                  finishTime: 2018-01-25T06:13:51.618Z
                  isArchiveEnabled: true
                  lastUpdatedTime: 2018-01-25T05:13:51.617Z
                  outputImages:
                  - digest: sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0
                    registry: myregistry.azurecr.io
                    repository: myimage
                    tag: latest
                  platform:
                    architecture: amd64
                    os: Linux
                  provisioningState: Succeeded
                  runId: 0accec26-d6de-4757-8e74-d080f38eaaab
                  runType: AutoBuild
                  startTime: 2018-01-25T05:50:51.618Z
                  status: Succeeded
                  task: myTask
                  timerTrigger:
                    scheduleOccurrence: 6/4/2019 9:30 AM
                    timerTriggerName: myTimerTrigger
                type: Microsoft.ContainerRegistry/registries/runs
      x-accepts:
      - application/json
    patch:
      description: Patch the run properties.
      operationId: Runs_Update
      parameters:
      - description: The Microsoft Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: The name of the resource group to which the container registry
          belongs.
        in: path
        name: resourceGroupName
        required: true
        schema:
          minLength: 1
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the container registry.
        in: path
        name: registryName
        required: true
        schema:
          maxLength: 50
          minLength: 5
          pattern: "^[a-zA-Z0-9]*$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The client API version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The run ID.
        in: path
        name: runId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RunUpdateParameters'
        description: The run update properties.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Run'
          description: The request was successful; the request was well-formed and
            received properly.
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Run'
          description: The request was successfully accepted; the operation will complete
            asynchronously. The provisioning state of the resource should indicate
            the current state of the resource.
        default:
          content: {}
          description: "Error response describing why the operation failed. If the\
            \ registry/build doesn't exist, 404 (Not found) is returned. If any of\
            \ the input parameters is wrong, 400(Bad Request) is returned."
      tags:
      - Runs
      x-ms-examples:
        Runs_Update:
          parameters:
            api-version: 2019-04-01
            registryName: myRegistry
            resourceGroupName: myResourceGroup
            runId: 0accec26-d6de-4757-8e74-d080f38eaaab
            runUpdateParameters:
              isArchiveEnabled: true
            subscriptionId: 4385cf00-2d3a-425a-832f-f4285b1c9dce
          responses:
            "200":
              body:
                id: /subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/runs/0accec26-d6de-4757-8e74-d080f38eaaab
                name: 0accec26-d6de-4757-8e74-d080f38eaaab
                properties:
                  agentConfiguration:
                    cpu: 2
                  createTime: 2018-01-25T05:13:51.618Z
                  finishTime: 2018-01-25T06:13:51.618Z
                  imageUpdateTrigger:
                    id: c0c43143-da5d-41ef-b9e1-e7d749272e88
                    images:
                    - digest: sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0
                      registry: registry.hub.docker.com
                      repository: mybaseimage
                      tag: latest
                    timestamp: 2018-01-25T05:13:51.618Z
                  isArchiveEnabled: true
                  lastUpdatedTime: 2018-01-25T05:13:51.617Z
                  outputImages:
                  - digest: sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0
                    registry: myregistry.azurecr.io
                    repository: myimage
                    tag: latest
                  platform:
                    architecture: amd64
                    os: Linux
                  provisioningState: Succeeded
                  runId: 0accec26-d6de-4757-8e74-d080f38eaaab
                  runType: AutoBuild
                  startTime: 2018-01-25T05:50:51.618Z
                  status: Succeeded
                  task: myTask
                type: Microsoft.ContainerRegistry/registries/runs
            "201":
              body:
                id: /subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/runs/0accec26-d6de-4757-8e74-d080f38eaaab
                name: 0accec26-d6de-4757-8e74-d080f38eaaab
                properties:
                  agentConfiguration:
                    cpu: 2
                  createTime: 2018-01-25T05:13:51.618Z
                  finishTime: 2018-01-25T06:13:51.618Z
                  imageUpdateTrigger:
                    id: c0c43143-da5d-41ef-b9e1-e7d749272e88
                    images:
                    - digest: sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0
                      registry: registry.hub.docker.com
                      repository: mybaseimage
                      tag: latest
                    timestamp: 2018-01-25T05:13:51.618Z
                  isArchiveEnabled: true
                  lastUpdatedTime: 2018-01-25T05:13:51.617Z
                  outputImages:
                  - digest: sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0
                    registry: myregistry.azurecr.io
                    repository: myimage
                    tag: latest
                  platform:
                    architecture: amd64
                    os: Linux
                  provisioningState: Updating
                  runId: 0accec26-d6de-4757-8e74-d080f38eaaab
                  runType: AutoBuild
                  startTime: 2018-01-25T05:50:51.618Z
                  status: Succeeded
                  task: myTask
                type: Microsoft.ContainerRegistry/registries/runs
      x-ms-long-running-operation: true
      x-codegen-request-body-name: runUpdateParameters
      x-content-type: application/json
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/runs/{runId}/cancel
  : post:
      description: Cancel an existing run.
      operationId: Runs_Cancel
      parameters:
      - description: The Microsoft Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: The name of the resource group to which the container registry
          belongs.
        in: path
        name: resourceGroupName
        required: true
        schema:
          minLength: 1
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the container registry.
        in: path
        name: registryName
        required: true
        schema:
          maxLength: 50
          minLength: 5
          pattern: "^[a-zA-Z0-9]*$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The client API version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The run ID.
        in: path
        name: runId
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: The request was successful; the request was well-formed and
            received properly.
        "202":
          content: {}
          description: The request was successfully accepted; the operation will complete
            asynchronously.
        default:
          content: {}
          description: "Error response describing why the operation failed. If the\
            \ registry/run doesn't exist, 404 (Not found) is returned."
      tags:
      - Runs
      x-ms-examples:
        Runs_Cancel:
          parameters:
            api-version: 2019-04-01
            registryName: myRegistry
            resourceGroupName: myResourceGroup
            runId: 0accec26-d6de-4757-8e74-d080f38eaaab
            subscriptionId: 4385cf00-2d3a-425a-832f-f4285b1c9dce
          responses:
            "200": {}
            "202": {}
      x-ms-long-running-operation: true
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/runs/{runId}/listLogSasUrl
  : post:
      description: Gets a link to download the run logs.
      operationId: Runs_GetLogSasUrl
      parameters:
      - description: The Microsoft Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: The name of the resource group to which the container registry
          belongs.
        in: path
        name: resourceGroupName
        required: true
        schema:
          minLength: 1
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the container registry.
        in: path
        name: registryName
        required: true
        schema:
          maxLength: 50
          minLength: 5
          pattern: "^[a-zA-Z0-9]*$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The client API version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The run ID.
        in: path
        name: runId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunGetLogResult'
          description: The request was successful; the request was well-formed and
            received properly.
        default:
          content: {}
          description: "Error response describing why the operation failed. If the\
            \ registry/run doesn't exist, 404 (Not found) is returned."
      tags:
      - Runs
      x-ms-examples:
        Runs_GetLogSasUrl:
          parameters:
            api-version: 2019-04-01
            registryName: myRegistry
            resourceGroupName: myResourceGroup
            runId: 0accec26-d6de-4757-8e74-d080f38eaaab
            subscriptionId: 4385cf00-2d3a-425a-832f-f4285b1c9dce
          responses:
            "200":
              body:
                logLink: https://registrystorageaccount.blob.core.windows.net/sascontainer/logs/0accec26-d6de-4757-8e74-d080f38eaaab/rawtext.log?sv=2015-04-05&st=2015-04-29T22%3A18%3A26Z&se=2015-04-30T02%3A23%3A26Z&sr=b&sp=rw&sip=168.1.5.60-168.1.5.70&spr=https&sig=Z%2FRHIX5Xcg0Mq2rqI3OlWTjEg2tYkboXr1P9ZUXDtkk%3D
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/scheduleRun
  : post:
      description: Schedules a new run based on the request parameters and add it
        to the run queue.
      operationId: Registries_ScheduleRun
      parameters:
      - description: The Microsoft Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: The name of the resource group to which the container registry
          belongs.
        in: path
        name: resourceGroupName
        required: true
        schema:
          minLength: 1
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the container registry.
        in: path
        name: registryName
        required: true
        schema:
          maxLength: 50
          minLength: 5
          pattern: "^[a-zA-Z0-9]*$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The client API version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RunRequest'
        description: The parameters of a run that needs to scheduled.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Run'
          description: The request was successful; the request was well-formed and
            received properly.
        "202":
          content: {}
          description: The request was successfully accepted; the operation will complete
            asynchronously.
        default:
          content: {}
          description: "Error response describing why the operation failed. If the\
            \ registry/run doesn't exist, 404 (Not found) is returned. If any of the\
            \ input parameters is wrong, 400(Bad Request) is returned."
      tags:
      - Registries
      x-ms-examples:
        Registries_ScheduleRun:
          parameters:
            api-version: 2019-04-01
            registryName: myRegistry
            resourceGroupName: myResourceGroup
            runRequest:
              agentConfiguration:
                cpu: 2
              arguments:
              - isSecret: false
                name: mytestargument
                value: mytestvalue
              - isSecret: true
                name: mysecrettestargument
                value: mysecrettestvalue
              dockerFilePath: DockerFile
              imageNames:
              - azurerest:testtag
              isArchiveEnabled: true
              isPushEnabled: true
              noCache: true
              platform:
                architecture: amd64
                os: Linux
              sourceLocation: https://myaccount.blob.core.windows.net/sascontainer/source.zip?sv=2015-04-05&st=2015-04-29T22%3A18%3A26Z&se=2015-04-30T02%3A23%3A26Z&sr=b&sp=rw&sip=168.1.5.60-168.1.5.70&spr=https&sig=Z%2FRHIX5Xcg0Mq2rqI3OlWTjEg2tYkboXr1P9ZUXDtkk%3D
              type: DockerBuildRequest
            subscriptionId: 4385cf00-2d3a-425a-832f-f4285b1c9dce
          responses:
            "200":
              body:
                id: /subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/runs/0accec26-d6de-4757-8e74-d080f38eaaab
                name: 0accec26-d6de-4757-8e74-d080f38eaaab
                properties:
                  lastUpdatedTime: 2018-01-25T05:13:51.617Z
                  provisioningState: Succeeded
                  runId: 0accec26-d6de-4757-8e74-d080f38eaaab
                  status: Succeeded
                type: Microsoft.ContainerRegistry/registries/run
            "202": {}
        Registries_ScheduleRun_EncodedTaskRun:
          parameters:
            api-version: 2019-04-01
            registryName: myRegistry
            resourceGroupName: myResourceGroup
            runRequest:
              agentConfiguration:
                cpu: 2
              encodedTaskContent: c3RlcHM6Cnt7IGlmIFZhbHVlcy5lbnZpcm9ubWVudCA9PSAncHJvZCcgfX0KICAtIHJ1bjogcHJvZCBzZXR1cAp7eyBlbHNlIGlmIFZhbHVlcy5lbnZpcm9ubWVudCA9PSAnc3RhZ2luZycgfX0KICAtIHJ1bjogc3RhZ2luZyBzZXR1cAp7eyBlbHNlIH19CiAgLSBydW46IGRlZmF1bHQgc2V0dXAKe3sgZW5kIH19CgogIC0gcnVuOiBidWlsZCAtdCBGYW5jeVRoaW5nOnt7LlZhbHVlcy5lbnZpcm9ubWVudH19LXt7LlZhbHVlcy52ZXJzaW9ufX0gLgoKcHVzaDogWydGYW5jeVRoaW5nOnt7LlZhbHVlcy5lbnZpcm9ubWVudH19LXt7LlZhbHVlcy52ZXJzaW9ufX0nXQ==
              encodedValuesContent: ZW52aXJvbm1lbnQ6IHByb2QKdmVyc2lvbjogMQ==
              platform:
                os: Linux
              type: EncodedTaskRunRequest
              values:
              - isSecret: false
                name: mytestargument
                value: mytestvalue
              - isSecret: true
                name: mysecrettestargument
                value: mysecrettestvalue
            subscriptionId: 4385cf00-2d3a-425a-832f-f4285b1c9dce
          responses:
            "200":
              body:
                id: /subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/runs/0accec26-d6de-4757-8e74-d080f38eaaab
                name: 0accec26-d6de-4757-8e74-d080f38eaaab
                properties:
                  lastUpdatedTime: 2018-01-25T05:13:51.617Z
                  provisioningState: Succeeded
                  runId: 0accec26-d6de-4757-8e74-d080f38eaaab
                  status: Succeeded
                type: Microsoft.ContainerRegistry/registries/run
            "202": {}
        Registries_ScheduleRun_FileTaskRun:
          parameters:
            api-version: 2019-04-01
            registryName: myRegistry
            resourceGroupName: myResourceGroup
            runRequest:
              agentConfiguration:
                cpu: 2
              platform:
                os: Linux
              sourceLocation: https://myaccount.blob.core.windows.net/sascontainer/source.zip?sv=2015-04-05&st=2015-04-29T22%3A18%3A26Z&se=2015-04-30T02%3A23%3A26Z&sr=b&sp=rw&sip=168.1.5.60-168.1.5.70&spr=https&sig=Z%2FRHIX5Xcg0Mq2rqI3OlWTjEg2tYkboXr1P9ZUXDtkk%3D
              taskFilePath: acb.yaml
              type: FileTaskRunRequest
              values:
              - isSecret: false
                name: mytestargument
                value: mytestvalue
              - isSecret: true
                name: mysecrettestargument
                value: mysecrettestvalue
              valuesFilePath: prod-values.yaml
            subscriptionId: 4385cf00-2d3a-425a-832f-f4285b1c9dce
          responses:
            "200":
              body:
                id: /subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/runs/0accec26-d6de-4757-8e74-d080f38eaaab
                name: 0accec26-d6de-4757-8e74-d080f38eaaab
                properties:
                  lastUpdatedTime: 2018-01-25T05:13:51.617Z
                  provisioningState: Succeeded
                  runId: 0accec26-d6de-4757-8e74-d080f38eaaab
                  status: Succeeded
                type: Microsoft.ContainerRegistry/registries/run
            "202": {}
        Registries_ScheduleRun_Task:
          parameters:
            api-version: 2019-04-01
            registryName: myRegistry
            resourceGroupName: myResourceGroup
            runRequest:
              taskName: myTask
              type: TaskRunRequest
              values:
              - isSecret: false
                name: mytestargument
                value: mytestvalue
              - isSecret: true
                name: mysecrettestargument
                value: mysecrettestvalue
            subscriptionId: 4385cf00-2d3a-425a-832f-f4285b1c9dce
          responses:
            "200":
              body:
                id: /subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/runs/0accec26-d6de-4757-8e74-d080f38eaaab
                name: 0accec26-d6de-4757-8e74-d080f38eaaab
                properties:
                  lastUpdatedTime: 2018-01-25T05:13:51.617Z
                  provisioningState: Succeeded
                  runId: 0accec26-d6de-4757-8e74-d080f38eaaab
                  status: Succeeded
                type: Microsoft.ContainerRegistry/registries/run
            "202": {}
        Registries_ScheduleRun_Task_WithCustomCredentials:
          parameters:
            api-version: 2019-04-01
            registryName: myRegistry
            resourceGroupName: myResourceGroup
            runRequest:
              credentials:
                customRegistries:
                  myregistry.azurecr.io:
                    password:
                      type: Opaque
                      value: '***'
                    userName:
                      type: Opaque
                      value: reg1
                sourceRegistry:
                  loginMode: Default
              platform:
                os: Linux
              taskFilePath: acb.yaml
              type: FileTaskRunRequest
              values:
              - isSecret: false
                name: mytestargument
                value: mytestvalue
              - isSecret: true
                name: mysecrettestargument
                value: mysecrettestvalue
            subscriptionId: 4385cf00-2d3a-425a-832f-f4285b1c9dce
          responses:
            "200":
              body:
                id: /subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/runs/0accec26-d6de-4757-8e74-d080f38eaaab
                name: 0accec26-d6de-4757-8e74-d080f38eaaab
                properties:
                  lastUpdatedTime: 2018-01-25T05:13:51.617Z
                  provisioningState: Succeeded
                  runId: 0accec26-d6de-4757-8e74-d080f38eaaab
                  status: Succeeded
                type: Microsoft.ContainerRegistry/registries/run
            "202": {}
        Registries_ScheduleRun_WithCustomCredentials:
          parameters:
            api-version: 2019-04-01
            registryName: myRegistry
            resourceGroupName: myResourceGroup
            runRequest:
              agentConfiguration:
                cpu: 2
              arguments:
              - isSecret: false
                name: mytestargument
                value: mytestvalue
              - isSecret: true
                name: mysecrettestargument
                value: mysecrettestvalue
              credentials:
                customRegistries:
                  myregistry.azurecr.io:
                    password:
                      type: Opaque
                      value: '***'
                    userName:
                      type: Opaque
                      value: reg1
                  myregistry2.azurecr.io:
                    password:
                      type: Opaque
                      value: '***'
                    userName:
                      type: Opaque
                      value: reg2
                sourceRegistry:
                  loginMode: Default
              dockerFilePath: DockerFile
              imageNames:
              - azurerest:testtag
              isArchiveEnabled: true
              isPushEnabled: true
              noCache: true
              platform:
                architecture: amd64
                os: Linux
              sourceLocation: https://myaccount.blob.core.windows.net/sascontainer/source.zip?sv=2015-04-05&st=2015-04-29T22%3A18%3A26Z&se=2015-04-30T02%3A23%3A26Z&sr=b&sp=rw&sip=168.1.5.60-168.1.5.70&spr=https&sig=Z%2FRHIX5Xcg0Mq2rqI3OlWTjEg2tYkboXr1P9ZUXDtkk%3D
              target: stage1
              type: DockerBuildRequest
            subscriptionId: 4385cf00-2d3a-425a-832f-f4285b1c9dce
          responses:
            "200":
              body:
                id: /subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/runs/0accec26-d6de-4757-8e74-d080f38eaaab
                name: 0accec26-d6de-4757-8e74-d080f38eaaab
                properties:
                  lastUpdatedTime: 2018-01-25T05:13:51.617Z
                  provisioningState: Succeeded
                  runId: 0accec26-d6de-4757-8e74-d080f38eaaab
                  status: Succeeded
                type: Microsoft.ContainerRegistry/registries/run
            "202": {}
      x-ms-long-running-operation: true
      x-codegen-request-body-name: runRequest
      x-content-type: application/json
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/tasks
  : get:
      description: Lists all the tasks for a specified container registry.
      operationId: Tasks_List
      parameters:
      - description: The Microsoft Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: The name of the resource group to which the container registry
          belongs.
        in: path
        name: resourceGroupName
        required: true
        schema:
          minLength: 1
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the container registry.
        in: path
        name: registryName
        required: true
        schema:
          maxLength: 50
          minLength: 5
          pattern: "^[a-zA-Z0-9]*$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The client API version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskListResult'
          description: The request was successful; the request was well-formed and
            received properly.
        default:
          content: {}
          description: Error response describing why the operation failed.
      tags:
      - Tasks
      x-ms-examples:
        Tasks_List:
          parameters:
            api-version: 2019-04-01
            registryName: myRegistry
            resourceGroupName: myResourceGroup
            subscriptionId: 4385cf00-2d3a-425a-832f-f4285b1c9dce
          responses:
            "200":
              body:
                value:
                - id: /subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/tasks/myTask
                  identity:
                    principalId: fa153151-b9fd-46f4-9088-5e6600f2689v
                    tenantId: f686d426-8d16-42db-81b7-abu4gm510ccd
                    type: SystemAssigned
                  location: eastus
                  name: myTask
                  properties:
                    agentConfiguration:
                      cpu: 2
                    creationDate: 2018-01-25T06:54:23.536Z
                    credentials:
                      customRegistries: {}
                    platform:
                      architecture: amd64
                      os: Linux
                    provisioningState: Succeeded
                    status: Enabled
                    step:
                      arguments:
                      - isSecret: false
                        name: mytestargument
                        value: mytestvalue
                      contextPath: src
                      dockerFilePath: src/DockerFile
                      imageNames:
                      - azurerest:testtag
                      isPushEnabled: true
                      noCache: false
                      type: Docker
                    trigger:
                      baseImageTrigger:
                        baseImageTriggerType: Runtime
                        name: myBaseImageTrigger
                        status: Enabled
                      sourceTriggers:
                      - name: mySourceTrigger
                        sourceRepository:
                          branch: master
                          repositoryUrl: https://github.com/Azure/azure-rest-api-specs
                          sourceControlType: Github
                        sourceTriggerEvents:
                        - commit
                        status: Enabled
                      timerTriggers:
                      - name: myTimerTrigger
                        schedule: 30 9 * * 1-5
                        status: Enabled
                  tags:
                    testkey: value
                  type: Microsoft.ContainerRegistry/registries/tasks
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/tasks/{taskName}
  : delete:
      description: Deletes a specified task.
      operationId: Tasks_Delete
      parameters:
      - description: The Microsoft Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: The name of the resource group to which the container registry
          belongs.
        in: path
        name: resourceGroupName
        required: true
        schema:
          minLength: 1
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the container registry.
        in: path
        name: registryName
        required: true
        schema:
          maxLength: 50
          minLength: 5
          pattern: "^[a-zA-Z0-9]*$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The client API version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The name of the container registry task.
        in: path
        name: taskName
        required: true
        schema:
          maxLength: 50
          minLength: 5
          pattern: "^[a-zA-Z0-9-_]*$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content: {}
          description: The request was successful; the request was well-formed and
            received properly.
        "202":
          content: {}
          description: The request was successfully accepted; the operation will complete
            asynchronously.
        "204":
          content: {}
          description: No Content - the specified resource was not found.
        default:
          content: {}
          description: Error response describing why the operation failed.
      tags:
      - Tasks
      x-ms-examples:
        Tasks_Delete:
          parameters:
            api-version: 2019-04-01
            registryName: myRegistry
            resourceGroupName: myResourceGroup
            subscriptionId: 4385cf00-2d3a-425a-832f-f4285b1c9dce
            taskName: myTask
          responses:
            "200": {}
            "202": {}
            "204": {}
      x-ms-long-running-operation: true
      x-accepts:
      - application/json
    get:
      description: Get the properties of a specified task.
      operationId: Tasks_Get
      parameters:
      - description: The Microsoft Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: The name of the resource group to which the container registry
          belongs.
        in: path
        name: resourceGroupName
        required: true
        schema:
          minLength: 1
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the container registry.
        in: path
        name: registryName
        required: true
        schema:
          maxLength: 50
          minLength: 5
          pattern: "^[a-zA-Z0-9]*$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The client API version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The name of the container registry task.
        in: path
        name: taskName
        required: true
        schema:
          maxLength: 50
          minLength: 5
          pattern: "^[a-zA-Z0-9-_]*$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: The request was successful; the request was well-formed and
            received properly.
        default:
          content: {}
          description: "Error response describing why the operation failed. If the\
            \ registry doesn't exist, 404 (Not found) is returned."
      tags:
      - Tasks
      x-ms-examples:
        Tasks_Get:
          parameters:
            api-version: 2019-04-01
            registryName: myRegistry
            resourceGroupName: myResourceGroup
            subscriptionId: 4385cf00-2d3a-425a-832f-f4285b1c9dce
            taskName: myTask
          responses:
            "200":
              body:
                id: /subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/tasks/myTask
                identity:
                  principalId: fa153151-b9fd-46f4-9088-5e6600f2689v
                  tenantId: f686d426-8d16-42db-81b7-abu4gm510ccd
                  type: SystemAssigned
                location: eastus
                name: myTask
                properties:
                  agentConfiguration:
                    cpu: 2
                  creationDate: 2018-01-25T06:54:23.536Z
                  credentials:
                    customRegistries: {}
                  platform:
                    architecture: amd64
                    os: Linux
                  provisioningState: Succeeded
                  status: Enabled
                  step:
                    arguments:
                    - isSecret: false
                      name: mytestargument
                      value: mytestvalue
                    contextPath: src
                    dockerFilePath: src/DockerFile
                    imageNames:
                    - azurerest:testtag
                    isPushEnabled: true
                    noCache: false
                    type: Docker
                  trigger:
                    baseImageTrigger:
                      baseImageTriggerType: Runtime
                      name: myBaseImageTrigger
                      status: Enabled
                    sourceTriggers:
                    - name: mySourceTrigger
                      sourceRepository:
                        branch: master
                        repositoryUrl: https://github.com/Azure/azure-rest-api-specs
                        sourceControlType: Github
                      sourceTriggerEvents:
                      - commit
                      status: Enabled
                    timerTriggers:
                    - name: myTimerTrigger
                      schedule: 30 9 * * 1-5
                      status: Enabled
                tags:
                  testkey: value
                type: Microsoft.ContainerRegistry/registries/tasks
      x-accepts:
      - application/json
    patch:
      description: Updates a task with the specified parameters.
      operationId: Tasks_Update
      parameters:
      - description: The Microsoft Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: The name of the resource group to which the container registry
          belongs.
        in: path
        name: resourceGroupName
        required: true
        schema:
          minLength: 1
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the container registry.
        in: path
        name: registryName
        required: true
        schema:
          maxLength: 50
          minLength: 5
          pattern: "^[a-zA-Z0-9]*$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The client API version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The name of the container registry task.
        in: path
        name: taskName
        required: true
        schema:
          maxLength: 50
          minLength: 5
          pattern: "^[a-zA-Z0-9-_]*$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskUpdateParameters'
        description: The parameters for updating a task.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: The request was successful; the request was well-formed and
            received properly.
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: The request was successfully accepted; the operation will complete
            asynchronously. The provisioning state of the resource should indicate
            the current state of the resource.
        default:
          content: {}
          description: "Error response describing why the operation failed. If the\
            \ registry doesn't exist, 404 (Not found) is returned. If any of the input\
            \ parameters is wrong, 400(Bad Request) is returned."
      tags:
      - Tasks
      x-ms-examples:
        Tasks_Update:
          parameters:
            api-version: 2019-04-01
            registryName: myRegistry
            resourceGroupName: myResourceGroup
            subscriptionId: 4385cf00-2d3a-425a-832f-f4285b1c9dce
            taskName: myTask
            taskUpdateParameters:
              properties:
                agentConfiguration:
                  cpu: 3
                credentials:
                  customRegistries:
                    myregistry.azurecr.io:
                      identity: "[system]"
                      password:
                        type: Vaultsecret
                        value: https://myacbvault.vault.azure.net/secrets/password
                      userName:
                        type: Opaque
                        value: username
                status: Enabled
                step:
                  dockerFilePath: src/DockerFile
                  imageNames:
                  - azurerest:testtag1
                trigger:
                  sourceTriggers:
                  - name: mySourceTrigger
                    sourceRepository:
                      sourceControlAuthProperties:
                        token: xxxxx
                        tokenType: PAT
                    sourceTriggerEvents:
                    - commit
              tags:
                testkey: value
          responses:
            "200":
              body:
                id: /subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/tasks/myTask
                identity:
                  principalId: fa153151-b9fd-46f4-9088-5e6600f2689v
                  tenantId: f686d426-8d16-42db-81b7-abu4gm510ccd
                  type: SystemAssigned
                location: eastus
                name: myTask
                properties:
                  agentConfiguration:
                    cpu: 3
                  creationDate: 2018-01-25T06:54:23.536Z
                  credentials:
                    customRegistries: {}
                  platform:
                    architecture: amd64
                    os: Linux
                  provisioningState: Succeeded
                  status: Enabled
                  step:
                    arguments:
                    - isSecret: false
                      name: mytestargument
                      value: mytestvalue
                    contextPath: src
                    dockerFilePath: src/DockerFile
                    imageNames:
                    - azurerest:testtag1
                    isPushEnabled: true
                    noCache: false
                    type: Docker
                  trigger:
                    baseImageTrigger:
                      baseImageTriggerType: Runtime
                      name: myBaseImageTrigger
                      status: Enabled
                    sourceTriggers:
                    - name: mySourceTrigger
                      sourceRepository:
                        branch: master
                        repositoryUrl: https://github.com/Azure/azure-rest-api-specs
                        sourceControlType: Github
                      sourceTriggerEvents:
                      - commit
                      status: Enabled
                    timerTriggers:
                    - name: myTimerTrigger
                      schedule: 30 9 * * 1-5
                      status: Enabled
                tags:
                  testkey: value
                type: Microsoft.ContainerRegistry/registries/tasks
            "201":
              body:
                id: /subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/tasks/myTask
                identity:
                  principalId: fa153151-b9fd-46f4-9088-5e6600f2689v
                  tenantId: f686d426-8d16-42db-81b7-abu4gm510ccd
                  type: SystemAssigned
                location: eastus
                name: myTask
                properties:
                  agentConfiguration:
                    cpu: 3
                  creationDate: 2018-01-25T06:54:23.536Z
                  credentials:
                    customRegistries: {}
                  platform:
                    architecture: amd64
                    os: Linux
                  provisioningState: Succeeded
                  status: Enabled
                  step:
                    arguments:
                    - isSecret: false
                      name: mytestargument
                      value: mytestvalue
                    contextPath: src
                    dockerFilePath: src/DockerFile
                    imageNames:
                    - azurerest:testtag1
                    isPushEnabled: true
                    noCache: false
                    type: Docker
                  trigger:
                    baseImageTrigger:
                      baseImageTriggerType: Runtime
                      name: myBaseImageTrigger
                      status: Enabled
                    sourceTriggers:
                    - name: mySourceTrigger
                      sourceRepository:
                        branch: master
                        repositoryUrl: https://github.com/Azure/azure-rest-api-specs
                        sourceControlType: Github
                      sourceTriggerEvents:
                      - commit
                      status: Enabled
                    timerTriggers:
                    - name: myTimerTrigger
                      schedule: 30 9 * * 1-5
                      status: Enabled
                tags:
                  testkey: value
                type: Microsoft.ContainerRegistry/registries/tasks
        Tasks_Update_WithKeyVaultCustomCredentials:
          parameters:
            api-version: 2019-04-01
            registryName: myRegistry
            resourceGroupName: myResourceGroup
            subscriptionId: 4385cf00-2d3a-425a-832f-f4285b1c9dce
            taskName: myTask
            taskUpdateParameters:
              properties:
                agentConfiguration:
                  cpu: 3
                credentials:
                  customRegistries:
                    myregistry.azurecr.io:
                      identity: "[system]"
                      password:
                        type: Vaultsecret
                        value: https://myacbvault.vault.azure.net/secrets/password
                      userName:
                        type: Vaultsecret
                        value: https://myacbvault.vault.azure.net/secrets/username
                status: Enabled
                step:
                  dockerFilePath: src/DockerFile
                  imageNames:
                  - azurerest:testtag1
                trigger:
                  sourceTriggers:
                  - name: mySourceTrigger
                    sourceRepository:
                      sourceControlAuthProperties:
                        token: xxxxx
                        tokenType: PAT
                    sourceTriggerEvents:
                    - commit
              tags:
                testkey: value
          responses:
            "200":
              body:
                id: /subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/tasks/myTask
                identity:
                  principalId: fa153151-b9fd-46f4-9088-5e6600f2689v
                  tenantId: f686d426-8d16-42db-81b7-abu4gm510ccd
                  type: SystemAssigned
                location: eastus
                name: myTask
                properties:
                  agentConfiguration:
                    cpu: 3
                  creationDate: 2018-01-25T06:54:23.536Z
                  credentials:
                    customRegistries: {}
                  platform:
                    architecture: amd64
                    os: Linux
                  provisioningState: Succeeded
                  status: Enabled
                  step:
                    arguments:
                    - isSecret: false
                      name: mytestargument
                      value: mytestvalue
                    contextPath: src
                    dockerFilePath: src/DockerFile
                    imageNames:
                    - azurerest:testtag1
                    isPushEnabled: true
                    noCache: false
                    type: Docker
                  trigger:
                    baseImageTrigger:
                      baseImageTriggerType: Runtime
                      name: myBaseImageTrigger
                      status: Enabled
                    sourceTriggers:
                    - name: mySourceTrigger
                      sourceRepository:
                        branch: master
                        repositoryUrl: https://github.com/Azure/azure-rest-api-specs
                        sourceControlType: Github
                      sourceTriggerEvents:
                      - commit
                      status: Enabled
                    timerTriggers:
                    - name: myTimerTrigger
                      schedule: 30 9 * * 1-5
                      status: Enabled
                tags:
                  testkey: value
                type: Microsoft.ContainerRegistry/registries/tasks
            "201":
              body:
                id: /subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/tasks/myTask
                identity:
                  principalId: fa153151-b9fd-46f4-9088-5e6600f2689v
                  tenantId: f686d426-8d16-42db-81b7-abu4gm510ccd
                  type: SystemAssigned
                location: eastus
                name: myTask
                properties:
                  agentConfiguration:
                    cpu: 3
                  creationDate: 2018-01-25T06:54:23.536Z
                  credentials:
                    customRegistries: {}
                  platform:
                    architecture: amd64
                    os: Linux
                  provisioningState: Succeeded
                  status: Enabled
                  step:
                    arguments:
                    - isSecret: false
                      name: mytestargument
                      value: mytestvalue
                    contextPath: src
                    dockerFilePath: src/DockerFile
                    imageNames:
                    - azurerest:testtag1
                    isPushEnabled: true
                    noCache: false
                    type: Docker
                  trigger:
                    baseImageTrigger:
                      baseImageTriggerType: Runtime
                      name: myBaseImageTrigger
                      status: Enabled
                    sourceTriggers:
                    - name: mySourceTrigger
                      sourceRepository:
                        branch: master
                        repositoryUrl: https://github.com/Azure/azure-rest-api-specs
                        sourceControlType: Github
                      sourceTriggerEvents:
                      - commit
                      status: Enabled
                    timerTriggers:
                    - name: myTimerTrigger
                      schedule: 30 9 * * 1-5
                      status: Enabled
                tags:
                  testkey: value
                type: Microsoft.ContainerRegistry/registries/tasks
        Tasks_Update_WithMSICustomCredentials:
          parameters:
            api-version: 2019-04-01
            registryName: myRegistry
            resourceGroupName: myResourceGroup
            subscriptionId: 4385cf00-2d3a-425a-832f-f4285b1c9dce
            taskName: myTask
            taskUpdateParameters:
              properties:
                agentConfiguration:
                  cpu: 3
                credentials:
                  customRegistries:
                    myregistry.azurecr.io:
                      identity: "[system]"
                status: Enabled
                step:
                  dockerFilePath: src/DockerFile
                  imageNames:
                  - azurerest:testtag1
                trigger:
                  sourceTriggers:
                  - name: mySourceTrigger
                    sourceRepository:
                      sourceControlAuthProperties:
                        token: xxxxx
                        tokenType: PAT
                    sourceTriggerEvents:
                    - commit
              tags:
                testkey: value
          responses:
            "200":
              body:
                id: /subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/tasks/myTask
                identity:
                  principalId: fa153151-b9fd-46f4-9088-5e6600f2689v
                  tenantId: f686d426-8d16-42db-81b7-abu4gm510ccd
                  type: SystemAssigned
                location: eastus
                name: myTask
                properties:
                  agentConfiguration:
                    cpu: 3
                  creationDate: 2018-01-25T06:54:23.536Z
                  credentials:
                    customRegistries: {}
                  platform:
                    architecture: amd64
                    os: Linux
                  provisioningState: Succeeded
                  status: Enabled
                  step:
                    arguments:
                    - isSecret: false
                      name: mytestargument
                      value: mytestvalue
                    contextPath: src
                    dockerFilePath: src/DockerFile
                    imageNames:
                    - azurerest:testtag1
                    isPushEnabled: true
                    noCache: false
                    type: Docker
                  trigger:
                    baseImageTrigger:
                      baseImageTriggerType: Runtime
                      name: myBaseImageTrigger
                      status: Enabled
                    sourceTriggers:
                    - name: mySourceTrigger
                      sourceRepository:
                        branch: master
                        repositoryUrl: https://github.com/Azure/azure-rest-api-specs
                        sourceControlType: Github
                      sourceTriggerEvents:
                      - commit
                      status: Enabled
                    timerTriggers:
                    - name: myTimerTrigger
                      schedule: 30 9 * * 1-5
                      status: Enabled
                tags:
                  testkey: value
                type: Microsoft.ContainerRegistry/registries/tasks
            "201":
              body:
                id: /subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/tasks/myTask
                identity:
                  principalId: fa153151-b9fd-46f4-9088-5e6600f2689v
                  tenantId: f686d426-8d16-42db-81b7-abu4gm510ccd
                  type: SystemAssigned
                location: eastus
                name: myTask
                properties:
                  agentConfiguration:
                    cpu: 3
                  creationDate: 2018-01-25T06:54:23.536Z
                  credentials:
                    customRegistries: {}
                  platform:
                    architecture: amd64
                    os: Linux
                  provisioningState: Succeeded
                  status: Enabled
                  step:
                    arguments:
                    - isSecret: false
                      name: mytestargument
                      value: mytestvalue
                    contextPath: src
                    dockerFilePath: src/DockerFile
                    imageNames:
                    - azurerest:testtag1
                    isPushEnabled: true
                    noCache: false
                    type: Docker
                  trigger:
                    baseImageTrigger:
                      baseImageTriggerType: Runtime
                      name: myBaseImageTrigger
                      status: Enabled
                    sourceTriggers:
                    - name: mySourceTrigger
                      sourceRepository:
                        branch: master
                        repositoryUrl: https://github.com/Azure/azure-rest-api-specs
                        sourceControlType: Github
                      sourceTriggerEvents:
                      - commit
                      status: Enabled
                    timerTriggers:
                    - name: myTimerTrigger
                      schedule: 30 9 * * 1-5
                      status: Enabled
                tags:
                  testkey: value
                type: Microsoft.ContainerRegistry/registries/tasks
        Tasks_Update_WithOpaqueCustomCredentials:
          parameters:
            api-version: 2019-04-01
            registryName: myRegistry
            resourceGroupName: myResourceGroup
            subscriptionId: 4385cf00-2d3a-425a-832f-f4285b1c9dce
            taskName: myTask
            taskUpdateParameters:
              properties:
                agentConfiguration:
                  cpu: 3
                credentials:
                  customRegistries:
                    myregistry.azurecr.io:
                      password:
                        type: Opaque
                        value: '***'
                      userName:
                        type: Opaque
                        value: username
                status: Enabled
                step:
                  dockerFilePath: src/DockerFile
                  imageNames:
                  - azurerest:testtag1
                trigger:
                  sourceTriggers:
                  - name: mySourceTrigger
                    sourceRepository:
                      sourceControlAuthProperties:
                        token: xxxxx
                        tokenType: PAT
                    sourceTriggerEvents:
                    - commit
              tags:
                testkey: value
          responses:
            "200":
              body:
                id: /subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/tasks/myTask
                identity:
                  principalId: fa153151-b9fd-46f4-9088-5e6600f2689v
                  tenantId: f686d426-8d16-42db-81b7-abu4gm510ccd
                  type: SystemAssigned
                location: eastus
                name: myTask
                properties:
                  agentConfiguration:
                    cpu: 3
                  creationDate: 2018-01-25T06:54:23.536Z
                  credentials:
                    customRegistries: {}
                  platform:
                    architecture: amd64
                    os: Linux
                  provisioningState: Succeeded
                  status: Enabled
                  step:
                    arguments:
                    - isSecret: false
                      name: mytestargument
                      value: mytestvalue
                    contextPath: src
                    dockerFilePath: src/DockerFile
                    imageNames:
                    - azurerest:testtag1
                    isPushEnabled: true
                    noCache: false
                    type: Docker
                  trigger:
                    baseImageTrigger:
                      baseImageTriggerType: Runtime
                      name: myBaseImageTrigger
                      status: Enabled
                    sourceTriggers:
                    - name: mySourceTrigger
                      sourceRepository:
                        branch: master
                        repositoryUrl: https://github.com/Azure/azure-rest-api-specs
                        sourceControlType: Github
                      sourceTriggerEvents:
                      - commit
                      status: Enabled
                    timerTriggers:
                    - name: myTimerTrigger
                      schedule: 30 9 * * 1-5
                      status: Enabled
                tags:
                  testkey: value
                type: Microsoft.ContainerRegistry/registries/tasks
            "201":
              body:
                id: /subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/tasks/myTask
                identity:
                  principalId: fa153151-b9fd-46f4-9088-5e6600f2689v
                  tenantId: f686d426-8d16-42db-81b7-abu4gm510ccd
                  type: SystemAssigned
                location: eastus
                name: myTask
                properties:
                  agentConfiguration:
                    cpu: 3
                  creationDate: 2018-01-25T06:54:23.536Z
                  credentials:
                    customRegistries: {}
                  platform:
                    architecture: amd64
                    os: Linux
                  provisioningState: Succeeded
                  status: Enabled
                  step:
                    arguments:
                    - isSecret: false
                      name: mytestargument
                      value: mytestvalue
                    contextPath: src
                    dockerFilePath: src/DockerFile
                    imageNames:
                    - azurerest:testtag1
                    isPushEnabled: true
                    noCache: false
                    type: Docker
                  trigger:
                    baseImageTrigger:
                      baseImageTriggerType: Runtime
                      name: myBaseImageTrigger
                      status: Enabled
                    sourceTriggers:
                    - name: mySourceTrigger
                      sourceRepository:
                        branch: master
                        repositoryUrl: https://github.com/Azure/azure-rest-api-specs
                        sourceControlType: Github
                      sourceTriggerEvents:
                      - commit
                      status: Enabled
                    timerTriggers:
                    - name: myTimerTrigger
                      schedule: 30 9 * * 1-5
                      status: Enabled
                tags:
                  testkey: value
                type: Microsoft.ContainerRegistry/registries/tasks
      x-ms-long-running-operation: true
      x-codegen-request-body-name: taskUpdateParameters
      x-content-type: application/json
      x-accepts:
      - application/json
    put:
      description: Creates a task for a container registry with the specified parameters.
      operationId: Tasks_Create
      parameters:
      - description: The Microsoft Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: The name of the resource group to which the container registry
          belongs.
        in: path
        name: resourceGroupName
        required: true
        schema:
          minLength: 1
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the container registry.
        in: path
        name: registryName
        required: true
        schema:
          maxLength: 50
          minLength: 5
          pattern: "^[a-zA-Z0-9]*$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The client API version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The name of the container registry task.
        in: path
        name: taskName
        required: true
        schema:
          maxLength: 50
          minLength: 5
          pattern: "^[a-zA-Z0-9-_]*$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
        description: The parameters for creating a task.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: The request was successful; the request was well-formed and
            received properly.
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: The request was successfully accepted; the operation will complete
            asynchronously. The provisioning state of the resource should indicate
            the current state of the resource.
        default:
          content: {}
          description: "Error response describing why the operation failed. If the\
            \ registry doesn't exist, 404 (Not found) is returned. If any of the input\
            \ parameters is wrong, 400(Bad Request) is returned."
      tags:
      - Tasks
      x-ms-examples:
        Tasks_Create:
          parameters:
            api-version: 2019-04-01
            registryName: myRegistry
            resourceGroupName: myResourceGroup
            subscriptionId: 4385cf00-2d3a-425a-832f-f4285b1c9dce
            taskCreateParameters:
              identity:
                type: SystemAssigned
              location: eastus
              properties:
                agentConfiguration:
                  cpu: 2
                platform:
                  architecture: amd64
                  os: Linux
                status: Enabled
                step:
                  arguments:
                  - isSecret: false
                    name: mytestargument
                    value: mytestvalue
                  - isSecret: true
                    name: mysecrettestargument
                    value: mysecrettestvalue
                  contextPath: src
                  dockerFilePath: src/DockerFile
                  imageNames:
                  - azurerest:testtag
                  isPushEnabled: true
                  noCache: false
                trigger:
                  baseImageTrigger:
                    baseImageTriggerType: Runtime
                    name: myBaseImageTrigger
                  sourceTriggers:
                  - name: mySourceTrigger
                    sourceRepository:
                      branch: master
                      repositoryUrl: https://github.com/Azure/azure-rest-api-specs
                      sourceControlAuthProperties:
                        token: xxxxx
                        tokenType: PAT
                      sourceControlType: Github
                    sourceTriggerEvents:
                    - commit
                  timerTriggers:
                  - name: myTimerTrigger
                    schedule: 30 9 * * 1-5
              tags:
                testkey: value
            taskName: mytTask
          responses:
            "200":
              body:
                id: /subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/tasks/myTask
                identity:
                  principalId: fa153151-b9fd-46f4-9088-5e6600f2689v
                  tenantId: f686d426-8d16-42db-81b7-abu4gm510ccd
                  type: SystemAssigned
                location: eastus
                name: myTask
                properties:
                  agentConfiguration:
                    cpu: 2
                  creationDate: 2018-01-25T06:54:23.536Z
                  platform:
                    architecture: amd64
                    os: Linux
                  provisioningState: Succeeded
                  status: Enabled
                  step:
                    arguments:
                    - isSecret: false
                      name: mytestargument
                      value: mytestvalue
                    contextPath: src
                    dockerFilePath: src/DockerFile
                    imageNames:
                    - azurerest:testtag
                    isPushEnabled: true
                    noCache: false
                    type: Docker
                  trigger:
                    baseImageTrigger:
                      baseImageTriggerType: Runtime
                      name: myBaseImageTrigger
                      status: Enabled
                    sourceTriggers:
                    - name: mySourceTrigger
                      sourceRepository:
                        branch: master
                        repositoryUrl: https://github.com/Azure/azure-rest-api-specs
                        sourceControlType: Github
                      sourceTriggerEvents:
                      - commit
                      status: Enabled
                    timerTriggers:
                    - name: myTimerTrigger
                      schedule: 30 9 * * 1-5
                      status: Enabled
                tags:
                  testkey: value
                type: Microsoft.ContainerRegistry/registries/tasks
            "201":
              body:
                id: /subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/tasks/myTask
                identity:
                  principalId: fa153151-b9fd-46f4-9088-5e6600f2689v
                  tenantId: f686d426-8d16-42db-81b7-abu4gm510ccd
                  type: SystemAssigned
                location: eastus
                name: myTask
                properties:
                  agentConfiguration:
                    cpu: 2
                  creationDate: 2018-01-25T06:54:23.536Z
                  platform:
                    architecture: amd64
                    os: Linux
                  provisioningState: Creating
                  status: Enabled
                  step:
                    arguments:
                    - isSecret: false
                      name: mytestargument
                      value: mytestvalue
                    contextPath: src
                    dockerFilePath: src/DockerFile
                    imageNames:
                    - azurerest:testtag
                    isPushEnabled: true
                    noCache: false
                    type: Docker
                  trigger:
                    baseImageTrigger:
                      baseImageTriggerType: Runtime
                      name: myBaseImageTrigger
                      status: Enabled
                    sourceTriggers:
                    - name: mySourceTrigger
                      sourceRepository:
                        branch: master
                        repositoryUrl: https://github.com/Azure/azure-rest-api-specs
                        sourceControlType: Github
                      sourceTriggerEvents:
                      - commit
                      status: Enabled
                    timerTriggers:
                    - name: myTimerTrigger
                      schedule: 30 9 * * 1-5
                      status: Enabled
                tags:
                  testkey: value
                type: Microsoft.ContainerRegistry/registries/tasks
        Tasks_Create_WithSystemAndUserIdentities:
          parameters:
            api-version: 2019-04-01
            registryName: myRegistry
            resourceGroupName: myResourceGroup
            subscriptionId: 4385cf00-2d3a-425a-832f-f4285b1c9dce
            taskCreateParameters:
              identity:
                type: "SystemAssigned, UserAssigned"
                userAssignedIdentities:
                  ? /subscriptions/f9d7ebed-adbd-4cb4-b973-aaf82c136138/resourcegroups/myResourceGroup1/providers/Microsoft.ManagedIdentity/userAssignedIdentities/identity2
                  : {}
              location: eastus
              properties:
                agentConfiguration:
                  cpu: 2
                platform:
                  architecture: amd64
                  os: Linux
                status: Enabled
                step:
                  arguments:
                  - isSecret: false
                    name: mytestargument
                    value: mytestvalue
                  - isSecret: true
                    name: mysecrettestargument
                    value: mysecrettestvalue
                  contextPath: src
                  dockerFilePath: src/DockerFile
                  imageNames:
                  - azurerest:testtag
                  isPushEnabled: true
                  noCache: false
                trigger:
                  baseImageTrigger:
                    baseImageTriggerType: Runtime
                    name: myBaseImageTrigger
                  sourceTriggers:
                  - name: mySourceTrigger
                    sourceRepository:
                      branch: master
                      repositoryUrl: https://github.com/Azure/azure-rest-api-specs
                      sourceControlAuthProperties:
                        token: xxxxx
                        tokenType: PAT
                      sourceControlType: Github
                    sourceTriggerEvents:
                    - commit
                  timerTriggers:
                  - name: myTimerTrigger
                    schedule: 30 9 * * 1-5
              tags:
                testkey: value
            taskName: mytTask
          responses:
            "200":
              body:
                id: /subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/tasks/myTask
                identity:
                  principalId: fc99dc67-1ad9-45c8-9ebc-e438081c8e30
                  tenantId: f686d426-8d16-42db-81b7-ab578e110ccd
                  type: "SystemAssigned, UserAssigned"
                  userAssignedIdentities:
                    ? /subscriptions/f9d7ebed-adbd-4cb4-b973-aaf82c136138/resourcegroups/myResourceGroup1/providers/Microsoft.ManagedIdentity/userAssignedIdentities/identity2
                    : clientId: e35621a5-f615-4a20-940e-de8a84b15abc
                      principalId: e45e3m7c-176e-416a-b466-0c5ec8298f8a
                location: eastus
                name: myTask
                properties:
                  agentConfiguration:
                    cpu: 2
                  creationDate: 2018-01-25T06:54:23.536Z
                  platform:
                    architecture: amd64
                    os: Linux
                  provisioningState: Succeeded
                  status: Enabled
                  step:
                    arguments:
                    - isSecret: false
                      name: mytestargument
                      value: mytestvalue
                    contextPath: src
                    dockerFilePath: src/DockerFile
                    imageNames:
                    - azurerest:testtag
                    isPushEnabled: true
                    noCache: false
                    type: Docker
                  trigger:
                    baseImageTrigger:
                      baseImageTriggerType: Runtime
                      name: myBaseImageTrigger
                      status: Enabled
                    sourceTriggers:
                    - name: mySourceTrigger
                      sourceRepository:
                        branch: master
                        repositoryUrl: https://github.com/Azure/azure-rest-api-specs
                        sourceControlType: Github
                      sourceTriggerEvents:
                      - commit
                      status: Enabled
                    timerTriggers:
                    - name: myTimerTrigger
                      schedule: 30 9 * * 1-5
                      status: Enabled
                tags:
                  testkey: value
                type: Microsoft.ContainerRegistry/registries/tasks
            "201":
              body:
                id: /subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/tasks/myTask
                identity:
                  principalId: fc99dc67-1ad9-45c8-9ebc-e438081c8e30
                  tenantId: f686d426-8d16-42db-81b7-ab578e110ccd
                  type: "SystemAssigned, UserAssigned"
                  userAssignedIdentities:
                    ? /subscriptions/f9d7ebed-adbd-4cb4-b973-aaf82c136138/resourcegroups/myResourceGroup1/providers/Microsoft.ManagedIdentity/userAssignedIdentities/identity2
                    : clientId: e35621a5-f615-4a20-940e-de8a84b15abc
                      principalId: e45e3m7c-176e-416a-b466-0c5ec8298f8a
                location: eastus
                name: myTask
                properties:
                  agentConfiguration:
                    cpu: 2
                  creationDate: 2018-01-25T06:54:23.536Z
                  platform:
                    architecture: amd64
                    os: Linux
                  provisioningState: Creating
                  status: Enabled
                  step:
                    arguments:
                    - isSecret: false
                      name: mytestargument
                      value: mytestvalue
                    contextPath: src
                    dockerFilePath: src/DockerFile
                    imageNames:
                    - azurerest:testtag
                    isPushEnabled: true
                    noCache: false
                    type: Docker
                  trigger:
                    baseImageTrigger:
                      baseImageTriggerType: Runtime
                      name: myBaseImageTrigger
                      status: Enabled
                    sourceTriggers:
                    - name: mySourceTrigger
                      sourceRepository:
                        branch: master
                        repositoryUrl: https://github.com/Azure/azure-rest-api-specs
                        sourceControlType: Github
                      sourceTriggerEvents:
                      - commit
                      status: Enabled
                    timerTriggers:
                    - name: myTimerTrigger
                      schedule: 30 9 * * 1-5
                      status: Enabled
                tags:
                  testkey: value
                type: Microsoft.ContainerRegistry/registries/tasks
        Tasks_Create_WithUserIdentities:
          parameters:
            api-version: 2019-04-01
            registryName: myRegistry
            resourceGroupName: myResourceGroup
            subscriptionId: 4385cf00-2d3a-425a-832f-f4285b1c9dce
            taskCreateParameters:
              identity:
                type: UserAssigned
                userAssignedIdentities:
                  ? /subscriptions/f9d7ebed-adbd-4cb4-b973-aaf82c136138/resourcegroups/myResourceGroup/providers/Microsoft.ManagedIdentity/userAssignedIdentities/identity1
                  : {}
                  ? /subscriptions/f9d7ebed-adbd-4cb4-b973-aaf82c136138/resourcegroups/myResourceGroup1/providers/Microsoft.ManagedIdentity/userAssignedIdentities/identity2
                  : {}
              location: eastus
              properties:
                agentConfiguration:
                  cpu: 2
                platform:
                  architecture: amd64
                  os: Linux
                status: Enabled
                step:
                  arguments:
                  - isSecret: false
                    name: mytestargument
                    value: mytestvalue
                  - isSecret: true
                    name: mysecrettestargument
                    value: mysecrettestvalue
                  contextPath: src
                  dockerFilePath: src/DockerFile
                  imageNames:
                  - azurerest:testtag
                  isPushEnabled: true
                  noCache: false
                trigger:
                  baseImageTrigger:
                    baseImageTriggerType: Runtime
                    name: myBaseImageTrigger
                  sourceTriggers:
                  - name: mySourceTrigger
                    sourceRepository:
                      branch: master
                      repositoryUrl: https://github.com/Azure/azure-rest-api-specs
                      sourceControlAuthProperties:
                        token: xxxxx
                        tokenType: PAT
                      sourceControlType: Github
                    sourceTriggerEvents:
                    - commit
                  timerTriggers:
                  - name: myTimerTrigger
                    schedule: 30 9 * * 1-5
              tags:
                testkey: value
            taskName: mytTask
          responses:
            "200":
              body:
                id: /subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/tasks/myTask
                identity:
                  type: UserAssigned
                  userAssignedIdentities:
                    ? /subscriptions/f9d7ebed-adbd-4cb4-b973-aaf82c136138/resourcegroups/myResourceGroup/providers/Microsoft.ManagedIdentity/userAssignedIdentities/identity1
                    : clientId: d3ce1bc2-f7d7-4a5b-9979-950f4e57680e
                      principalId: b6p9f58b-6fbf-4efd-a7e0-fvd46911a466
                    ? /subscriptions/f9d7ebed-adbd-4cb4-b973-aaf82c136138/resourcegroups/myResourceGroup1/providers/Microsoft.ManagedIdentity/userAssignedIdentities/identity2
                    : clientId: e35621a5-f615-4a20-940e-de8a84b15abc
                      principalId: e45e3m7c-176e-416a-b466-0c5ec8298f8a
                location: eastus
                name: myTask
                properties:
                  agentConfiguration:
                    cpu: 2
                  creationDate: 2018-01-25T06:54:23.536Z
                  platform:
                    architecture: amd64
                    os: Linux
                  provisioningState: Succeeded
                  status: Enabled
                  step:
                    arguments:
                    - isSecret: false
                      name: mytestargument
                      value: mytestvalue
                    contextPath: src
                    dockerFilePath: src/DockerFile
                    imageNames:
                    - azurerest:testtag
                    isPushEnabled: true
                    noCache: false
                    type: Docker
                  trigger:
                    baseImageTrigger:
                      baseImageTriggerType: Runtime
                      name: myBaseImageTrigger
                      status: Enabled
                    sourceTriggers:
                    - name: mySourceTrigger
                      sourceRepository:
                        branch: master
                        repositoryUrl: https://github.com/Azure/azure-rest-api-specs
                        sourceControlType: Github
                      sourceTriggerEvents:
                      - commit
                      status: Enabled
                    timerTriggers:
                    - name: myTimerTrigger
                      schedule: 30 9 * * 1-5
                      status: Enabled
                tags:
                  testkey: value
                type: Microsoft.ContainerRegistry/registries/tasks
            "201":
              body:
                id: /subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/tasks/myTask
                identity:
                  type: UserAssigned
                  userAssignedIdentities:
                    ? /subscriptions/f9d7ebed-adbd-4cb4-b973-aaf82c136138/resourcegroups/myResourceGroup/providers/Microsoft.ManagedIdentity/userAssignedIdentities/identity1
                    : clientId: d3ce1bc2-f7d7-4a5b-9979-950f4e57680e
                      principalId: b6p9f58b-6fbf-4efd-a7e0-fvd46911a466
                    ? /subscriptions/f9d7ebed-adbd-4cb4-b973-aaf82c136138/resourcegroups/myResourceGroup1/providers/Microsoft.ManagedIdentity/userAssignedIdentities/identity2
                    : clientId: e35621a5-f615-4a20-940e-de8a84b15abc
                      principalId: e45e3m7c-176e-416a-b466-0c5ec8298f8a
                location: eastus
                name: myTask
                properties:
                  agentConfiguration:
                    cpu: 2
                  creationDate: 2018-01-25T06:54:23.536Z
                  platform:
                    architecture: amd64
                    os: Linux
                  provisioningState: Creating
                  status: Enabled
                  step:
                    arguments:
                    - isSecret: false
                      name: mytestargument
                      value: mytestvalue
                    contextPath: src
                    dockerFilePath: src/DockerFile
                    imageNames:
                    - azurerest:testtag
                    isPushEnabled: true
                    noCache: false
                    type: Docker
                  trigger:
                    baseImageTrigger:
                      baseImageTriggerType: Runtime
                      name: myBaseImageTrigger
                      status: Enabled
                    sourceTriggers:
                    - name: mySourceTrigger
                      sourceRepository:
                        branch: master
                        repositoryUrl: https://github.com/Azure/azure-rest-api-specs
                        sourceControlType: Github
                      sourceTriggerEvents:
                      - commit
                      status: Enabled
                    timerTriggers:
                    - name: myTimerTrigger
                      schedule: 30 9 * * 1-5
                      status: Enabled
                tags:
                  testkey: value
                type: Microsoft.ContainerRegistry/registries/tasks
        Tasks_Create_WithUserIdentities_WithSystemIdentity:
          parameters:
            api-version: 2019-04-01
            registryName: myRegistry
            resourceGroupName: myResourceGroup
            subscriptionId: 4385cf00-2d3a-425a-832f-f4285b1c9dce
            taskCreateParameters:
              identity:
                type: SystemAssigned
              location: eastus
              properties:
                agentConfiguration:
                  cpu: 2
                platform:
                  architecture: amd64
                  os: Linux
                status: Enabled
                step:
                  arguments:
                  - isSecret: false
                    name: mytestargument
                    value: mytestvalue
                  - isSecret: true
                    name: mysecrettestargument
                    value: mysecrettestvalue
                  contextPath: src
                  dockerFilePath: src/DockerFile
                  imageNames:
                  - azurerest:testtag
                  isPushEnabled: true
                  noCache: false
                trigger:
                  baseImageTrigger:
                    baseImageTriggerType: Runtime
                    name: myBaseImageTrigger
                  sourceTriggers:
                  - name: mySourceTrigger
                    sourceRepository:
                      branch: master
                      repositoryUrl: https://github.com/Azure/azure-rest-api-specs
                      sourceControlAuthProperties:
                        token: xxxxx
                        tokenType: PAT
                      sourceControlType: Github
                    sourceTriggerEvents:
                    - commit
                  timerTriggers:
                  - name: myTimerTrigger
                    schedule: 30 9 * * 1-5
              tags:
                testkey: value
            taskName: mytTask
          responses:
            "200":
              body:
                id: /subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/tasks/myTask
                identity:
                  principalId: fa153151-b9fd-46f4-9088-5e6600f2689v
                  tenantId: f686d426-8d16-42db-81b7-abu4gm510ccd
                  type: SystemAssigned
                location: eastus
                name: myTask
                properties:
                  agentConfiguration:
                    cpu: 2
                  creationDate: 2018-01-25T06:54:23.536Z
                  platform:
                    architecture: amd64
                    os: Linux
                  provisioningState: Succeeded
                  status: Enabled
                  step:
                    arguments:
                    - isSecret: false
                      name: mytestargument
                      value: mytestvalue
                    contextPath: src
                    dockerFilePath: src/DockerFile
                    imageNames:
                    - azurerest:testtag
                    isPushEnabled: true
                    noCache: false
                    type: Docker
                  trigger:
                    baseImageTrigger:
                      baseImageTriggerType: Runtime
                      name: myBaseImageTrigger
                      status: Enabled
                    sourceTriggers:
                    - name: mySourceTrigger
                      sourceRepository:
                        branch: master
                        repositoryUrl: https://github.com/Azure/azure-rest-api-specs
                        sourceControlType: Github
                      sourceTriggerEvents:
                      - commit
                      status: Enabled
                    timerTriggers:
                    - name: myTimerTrigger
                      schedule: 30 9 * * 1-5
                      status: Enabled
                tags:
                  testkey: value
                type: Microsoft.ContainerRegistry/registries/tasks
            "201":
              body:
                id: /subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/tasks/myTask
                identity:
                  principalId: fa153151-b9fd-46f4-9088-5e6600f2689v
                  tenantId: f686d426-8d16-42db-81b7-abu4gm510ccd
                  type: SystemAssigned
                location: eastus
                name: myTask
                properties:
                  agentConfiguration:
                    cpu: 2
                  creationDate: 2018-01-25T06:54:23.536Z
                  platform:
                    architecture: amd64
                    os: Linux
                  provisioningState: Creating
                  status: Enabled
                  step:
                    arguments:
                    - isSecret: false
                      name: mytestargument
                      value: mytestvalue
                    contextPath: src
                    dockerFilePath: src/DockerFile
                    imageNames:
                    - azurerest:testtag
                    isPushEnabled: true
                    noCache: false
                    type: Docker
                  trigger:
                    baseImageTrigger:
                      baseImageTriggerType: Runtime
                      name: myBaseImageTrigger
                      status: Enabled
                    sourceTriggers:
                    - name: mySourceTrigger
                      sourceRepository:
                        branch: master
                        repositoryUrl: https://github.com/Azure/azure-rest-api-specs
                        sourceControlType: Github
                      sourceTriggerEvents:
                      - commit
                      status: Enabled
                    timerTriggers:
                    - name: myTimerTrigger
                      schedule: 30 9 * * 1-5
                      status: Enabled
                tags:
                  testkey: value
                type: Microsoft.ContainerRegistry/registries/tasks
      x-ms-long-running-operation: true
      x-codegen-request-body-name: taskCreateParameters
      x-content-type: application/json
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/tasks/{taskName}/listDetails
  : post:
      description: Returns a task with extended information that includes all secrets.
      operationId: Tasks_GetDetails
      parameters:
      - description: The Microsoft Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: The name of the resource group to which the container registry
          belongs.
        in: path
        name: resourceGroupName
        required: true
        schema:
          minLength: 1
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the container registry.
        in: path
        name: registryName
        required: true
        schema:
          maxLength: 50
          minLength: 5
          pattern: "^[a-zA-Z0-9]*$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The client API version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The name of the container registry task.
        in: path
        name: taskName
        required: true
        schema:
          maxLength: 50
          minLength: 5
          pattern: "^[a-zA-Z0-9-_]*$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: The request was successful; the request was well-formed and
            received properly.
        default:
          content: {}
          description: "Error response describing why the operation failed. If the\
            \ registry doesn't exist, 404 (Not found) is returned."
      tags:
      - Tasks
      x-ms-examples:
        Tasks_GetDetails:
          parameters:
            api-version: 2019-04-01
            registryName: myRegistry
            resourceGroupName: myResourceGroup
            subscriptionId: 4385cf00-2d3a-425a-832f-f4285b1c9dce
            taskName: myTask
          responses:
            "200":
              body:
                identity:
                  principalId: fa153151-b9fd-46f4-9088-5e6600f2689v
                  tenantId: f686d426-8d16-42db-81b7-abu4gm510ccd
                  type: SystemAssigned
                location: eastus
                properties:
                  agentConfiguration:
                    cpu: 2
                  credentials:
                    customRegistries:
                      myregistry.azure-test.io:
                        identity: "[system]"
                        password:
                          type: Vaultsecret
                          value: https://myacbvault.vault.azure.net/secrets/username
                        userName:
                          type: Opaque
                          value: username
                  platform:
                    architecture: amd64
                    os: Linux
                  status: Enabled
                  step:
                    arguments:
                    - isSecret: false
                      name: mytestargument
                      value: mytestvalue
                    - isSecret: true
                      name: mysecrettestargument
                      value: mysecrettestvalue
                    contextPath: src
                    dockerFilePath: src/DockerFile
                    imageNames:
                    - azurerest:testtag
                    isPushEnabled: true
                    noCache: false
                    type: Docker
                  trigger:
                    baseImageTrigger:
                      baseImageTriggerType: Runtime
                      name: myBaseImageTrigger
                      status: Enabled
                    sourceTriggers:
                    - name: mySourceTrigger
                      sourceRepository:
                        branch: master
                        repositoryUrl: https://github.com/Azure/azure-rest-api-specs
                        sourceControlAuthProperties:
                          token: xxxxx
                          tokenType: PAT
                        sourceControlType: Github
                      sourceTriggerEvents:
                      - commit
                      status: Enabled
                    timerTriggers:
                    - name: myTimerTrigger
                      schedule: 30 9 * * 1-5
                      status: Enabled
                tags:
                  testkey: value
      x-accepts:
      - application/json
components:
  parameters:
    ApiVersionParameter:
      description: The client API version.
      in: query
      name: api-version
      required: true
      schema:
        type: string
    RegistryNameParameter:
      description: The name of the container registry.
      in: path
      name: registryName
      required: true
      schema:
        maxLength: 50
        minLength: 5
        pattern: "^[a-zA-Z0-9]*$"
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    ResourceGroupNameParameter:
      description: The name of the resource group to which the container registry
        belongs.
      in: path
      name: resourceGroupName
      required: true
      schema:
        minLength: 1
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    SubscriptionIdParameter:
      description: The Microsoft Azure subscription ID.
      in: path
      name: subscriptionId
      required: true
      schema:
        type: string
    TaskNameParameter:
      description: The name of the container registry task.
      in: path
      name: taskName
      required: true
      schema:
        maxLength: 50
        minLength: 5
        pattern: "^[a-zA-Z0-9-_]*$"
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
  schemas:
    AgentProperties:
      description: The properties that determine the run agent configuration.
      example:
        cpu: 0
      properties:
        cpu:
          description: The CPU configuration in terms of number of cores required
            for the run.
          format: int32
          type: integer
      type: object
    Argument:
      description: The properties of a run argument.
      properties:
        isSecret:
          default: false
          description: Flag to indicate whether the argument represents a secret and
            want to be removed from build logs.
          type: boolean
        name:
          description: The name of the argument.
          type: string
        value:
          description: The value of the argument.
          type: string
      required:
      - name
      - value
      type: object
    AuthInfo:
      description: The authorization properties for accessing the source code repository.
      example:
        expiresIn: 6
        scope: scope
        tokenType: PAT
        refreshToken: refreshToken
        token: token
      properties:
        expiresIn:
          description: Time in seconds that the token remains valid
          format: int32
          type: integer
        refreshToken:
          description: The refresh token used to refresh the access token.
          type: string
        scope:
          description: The scope of the access token.
          type: string
        token:
          description: The access token used to access the source control provider.
          type: string
        tokenType:
          description: The type of Auth token.
          enum:
          - PAT
          - OAuth
          type: string
          x-ms-enum:
            modelAsString: true
            name: TokenType
      required:
      - token
      - tokenType
      type: object
    AuthInfoUpdateParameters:
      description: The authorization properties for accessing the source code repository.
      example:
        expiresIn: 6
        scope: scope
        tokenType: PAT
        refreshToken: refreshToken
        token: token
      properties:
        expiresIn:
          description: Time in seconds that the token remains valid
          format: int32
          type: integer
        refreshToken:
          description: The refresh token used to refresh the access token.
          type: string
        scope:
          description: The scope of the access token.
          type: string
        token:
          description: The access token used to access the source control provider.
          type: string
        tokenType:
          description: The type of Auth token.
          enum:
          - PAT
          - OAuth
          type: string
          x-ms-enum:
            modelAsString: true
            name: TokenType
      type: object
    BaseImageDependency:
      description: Properties that describe a base image dependency.
      example:
        registry: registry
        digest: digest
        tag: tag
        repository: repository
        type: BuildTime
      properties:
        digest:
          description: The sha256-based digest of the image manifest.
          type: string
        registry:
          description: The registry login server.
          type: string
        repository:
          description: The repository name.
          type: string
        tag:
          description: The tag name.
          type: string
        type:
          description: The type of the base image dependency.
          enum:
          - BuildTime
          - RunTime
          type: string
          x-ms-enum:
            modelAsString: true
            name: BaseImageDependencyType
      type: object
    BaseImageTrigger:
      description: The trigger based on base image dependency.
      example:
        baseImageTriggerType: All
        name: name
        status: Enabled
      properties:
        baseImageTriggerType:
          description: The type of the auto trigger for base image dependency updates.
          enum:
          - All
          - Runtime
          type: string
          x-ms-enum:
            modelAsString: true
            name: BaseImageTriggerType
        name:
          description: The name of the trigger.
          type: string
        status:
          default: Enabled
          description: The current status of trigger.
          enum:
          - Disabled
          - Enabled
          type: string
          x-ms-enum:
            modelAsString: true
            name: TriggerStatus
      required:
      - baseImageTriggerType
      - name
      type: object
    BaseImageTriggerUpdateParameters:
      description: The properties for updating base image dependency trigger.
      example:
        baseImageTriggerType: All
        name: name
        status: Enabled
      properties:
        baseImageTriggerType:
          description: The type of the auto trigger for base image dependency updates.
          enum:
          - All
          - Runtime
          type: string
          x-ms-enum:
            modelAsString: true
            name: BaseImageTriggerType
        name:
          description: The name of the trigger.
          type: string
        status:
          default: Enabled
          description: The current status of trigger.
          enum:
          - Disabled
          - Enabled
          type: string
          x-ms-enum:
            modelAsString: true
            name: TriggerStatus
      required:
      - name
      type: object
    Credentials:
      description: The parameters that describes a set of credentials that will be
        used when a run is invoked.
      example:
        customRegistries:
          key:
            password:
              type: Opaque
              value: value
            identity: identity
            userName:
              type: Opaque
              value: value
        sourceRegistry:
          loginMode: None
      properties:
        customRegistries:
          additionalProperties:
            $ref: '#/components/schemas/CustomRegistryCredentials'
          description: "Describes the credential parameters for accessing other custom\
            \ registries. The key\r\nfor the dictionary item will be the registry\
            \ login server (myregistry.azurecr.io) and\r\nthe value of the item will\
            \ be the registry credentials for accessing the registry."
          type: object
        sourceRegistry:
          $ref: '#/components/schemas/SourceRegistryCredentials'
      type: object
    CustomRegistryCredentials:
      description: Describes the credentials that will be used to access a custom
        registry during a run.
      example:
        password:
          type: Opaque
          value: value
        identity: identity
        userName:
          type: Opaque
          value: value
      properties:
        identity:
          description: "Indicates the managed identity assigned to the custom credential.\
            \ If a user-assigned identity\r\nthis value is the Client ID. If a system-assigned\
            \ identity, the value will be `system`. In\r\nthe case of a system-assigned\
            \ identity, the Client ID will be determined by the runner. This\r\nidentity\
            \ may be used to authenticate to key vault to retrieve credentials or\
            \ it may be the only \r\nsource of authentication used for accessing the\
            \ registry."
          type: string
        password:
          $ref: '#/components/schemas/SecretObject'
        userName:
          $ref: '#/components/schemas/SecretObject'
      type: object
    DockerBuildRequest:
      allOf:
      - $ref: '#/components/schemas/RunRequest'
      description: The parameters for a docker quick build.
      properties:
        agentConfiguration:
          $ref: '#/components/schemas/AgentProperties'
        arguments:
          description: The collection of override arguments to be used when executing
            the run.
          items:
            $ref: '#/components/schemas/Argument'
          type: array
        credentials:
          $ref: '#/components/schemas/Credentials'
        dockerFilePath:
          description: The Docker file path relative to the source location.
          type: string
        imageNames:
          description: The fully qualified image names including the repository and
            tag.
          items:
            type: string
          type: array
        isPushEnabled:
          default: true
          description: The value of this property indicates whether the image built
            should be pushed to the registry or not.
          type: boolean
        noCache:
          default: false
          description: The value of this property indicates whether the image cache
            is enabled or not.
          type: boolean
        platform:
          $ref: '#/components/schemas/PlatformProperties'
        sourceLocation:
          description: "The URL(absolute or relative) of the source context. It can\
            \ be an URL to a tar or git repository.\r\nIf it is relative URL, the\
            \ relative path should be obtained from calling listBuildSourceUploadUrl\
            \ API."
          type: string
        target:
          description: The name of the target build stage for the docker build.
          type: string
        timeout:
          default: 3600
          description: Run timeout in seconds.
          format: int32
          maximum: 28800
          minimum: 300
          type: integer
      required:
      - dockerFilePath
      - platform
      x-ms-discriminator-value: DockerBuildRequest
    DockerBuildStep:
      allOf:
      - $ref: '#/components/schemas/TaskStepProperties'
      description: The Docker build step.
      properties:
        arguments:
          description: The collection of override arguments to be used when executing
            this build step.
          items:
            $ref: '#/components/schemas/Argument'
          type: array
        dockerFilePath:
          description: The Docker file path relative to the source context.
          type: string
        imageNames:
          description: The fully qualified image names including the repository and
            tag.
          items:
            type: string
          type: array
        isPushEnabled:
          default: true
          description: The value of this property indicates whether the image built
            should be pushed to the registry or not.
          type: boolean
        noCache:
          default: false
          description: The value of this property indicates whether the image cache
            is enabled or not.
          type: boolean
        target:
          description: The name of the target build stage for the docker build.
          type: string
      required:
      - dockerFilePath
      x-ms-discriminator-value: Docker
    DockerBuildStepUpdateParameters:
      allOf:
      - $ref: '#/components/schemas/TaskStepUpdateParameters'
      description: The properties for updating a docker build step.
      properties:
        arguments:
          description: The collection of override arguments to be used when executing
            this build step.
          items:
            $ref: '#/components/schemas/Argument'
          type: array
        dockerFilePath:
          description: The Docker file path relative to the source context.
          type: string
        imageNames:
          description: The fully qualified image names including the repository and
            tag.
          items:
            type: string
          type: array
        isPushEnabled:
          description: The value of this property indicates whether the image built
            should be pushed to the registry or not.
          type: boolean
        noCache:
          description: The value of this property indicates whether the image cache
            is enabled or not.
          type: boolean
        target:
          description: The name of the target build stage for the docker build.
          type: string
      x-ms-discriminator-value: Docker
    EncodedTaskRunRequest:
      allOf:
      - $ref: '#/components/schemas/RunRequest'
      description: The parameters for a quick task run request.
      properties:
        agentConfiguration:
          $ref: '#/components/schemas/AgentProperties'
        credentials:
          $ref: '#/components/schemas/Credentials'
        encodedTaskContent:
          description: Base64 encoded value of the template/definition file content.
          type: string
        encodedValuesContent:
          description: Base64 encoded value of the parameters/values file content.
          type: string
        platform:
          $ref: '#/components/schemas/PlatformProperties'
        sourceLocation:
          description: "The URL(absolute or relative) of the source context. It can\
            \ be an URL to a tar or git repository.\r\nIf it is relative URL, the\
            \ relative path should be obtained from calling listBuildSourceUploadUrl\
            \ API."
          type: string
        timeout:
          default: 3600
          description: Run timeout in seconds.
          format: int32
          maximum: 28800
          minimum: 300
          type: integer
        values:
          description: The collection of overridable values that can be passed when
            running a task.
          items:
            $ref: '#/components/schemas/SetValue'
          type: array
      required:
      - encodedTaskContent
      - platform
      x-ms-discriminator-value: EncodedTaskRunRequest
    EncodedTaskStep:
      allOf:
      - $ref: '#/components/schemas/TaskStepProperties'
      description: The properties of a encoded task step.
      properties:
        encodedTaskContent:
          description: Base64 encoded value of the template/definition file content.
          type: string
        encodedValuesContent:
          description: Base64 encoded value of the parameters/values file content.
          type: string
        values:
          description: The collection of overridable values that can be passed when
            running a task.
          items:
            $ref: '#/components/schemas/SetValue'
          type: array
      required:
      - encodedTaskContent
      x-ms-discriminator-value: EncodedTask
    EncodedTaskStepUpdateParameters:
      allOf:
      - $ref: '#/components/schemas/TaskStepUpdateParameters'
      description: The properties for updating encoded task step.
      properties:
        encodedTaskContent:
          description: Base64 encoded value of the template/definition file content.
          type: string
        encodedValuesContent:
          description: Base64 encoded value of the parameters/values file content.
          type: string
        values:
          description: The collection of overridable values that can be passed when
            running a task.
          items:
            $ref: '#/components/schemas/SetValue'
          type: array
      x-ms-discriminator-value: EncodedTask
    FileTaskRunRequest:
      allOf:
      - $ref: '#/components/schemas/RunRequest'
      description: The request parameters for a scheduling run against a task file.
      properties:
        agentConfiguration:
          $ref: '#/components/schemas/AgentProperties'
        credentials:
          $ref: '#/components/schemas/Credentials'
        platform:
          $ref: '#/components/schemas/PlatformProperties'
        sourceLocation:
          description: "The URL(absolute or relative) of the source context. It can\
            \ be an URL to a tar or git repository.\r\nIf it is relative URL, the\
            \ relative path should be obtained from calling listBuildSourceUploadUrl\
            \ API."
          type: string
        taskFilePath:
          description: The template/definition file path relative to the source.
          type: string
        timeout:
          default: 3600
          description: Run timeout in seconds.
          format: int32
          maximum: 28800
          minimum: 300
          type: integer
        values:
          description: The collection of overridable values that can be passed when
            running a task.
          items:
            $ref: '#/components/schemas/SetValue'
          type: array
        valuesFilePath:
          description: The values/parameters file path relative to the source.
          type: string
      required:
      - platform
      - taskFilePath
      x-ms-discriminator-value: FileTaskRunRequest
    FileTaskStep:
      allOf:
      - $ref: '#/components/schemas/TaskStepProperties'
      description: The properties of a task step.
      properties:
        taskFilePath:
          description: The task template/definition file path relative to the source
            context.
          type: string
        values:
          description: The collection of overridable values that can be passed when
            running a task.
          items:
            $ref: '#/components/schemas/SetValue'
          type: array
        valuesFilePath:
          description: The task values/parameters file path relative to the source
            context.
          type: string
      required:
      - taskFilePath
      x-ms-discriminator-value: FileTask
    FileTaskStepUpdateParameters:
      allOf:
      - $ref: '#/components/schemas/TaskStepUpdateParameters'
      description: The properties of updating a task step.
      properties:
        taskFilePath:
          description: The task template/definition file path relative to the source
            context.
          type: string
        values:
          description: The collection of overridable values that can be passed when
            running a task.
          items:
            $ref: '#/components/schemas/SetValue'
          type: array
        valuesFilePath:
          description: The values/parameters file path relative to the source context.
          type: string
      x-ms-discriminator-value: FileTask
    IdentityProperties:
      description: Managed identity for the resource.
      example:
        userAssignedIdentities:
          key:
            clientId: clientId
            principalId: principalId
        tenantId: tenantId
        principalId: principalId
        type: SystemAssigned
      properties:
        principalId:
          description: The principal ID of resource identity.
          type: string
        tenantId:
          description: The tenant ID of resource.
          type: string
        type:
          description: The identity type.
          enum:
          - SystemAssigned
          - UserAssigned
          - "SystemAssigned, UserAssigned"
          - None
          type: string
          x-ms-enum:
            modelAsString: false
            name: ResourceIdentityType
        userAssignedIdentities:
          additionalProperties:
            $ref: '#/components/schemas/UserIdentityProperties'
          description: "The list of user identities associated with the resource.\
            \ The user identity \r\ndictionary key references will be ARM resource\
            \ ids in the form: \r\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/\r\
            \n    providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."
          type: object
      type: object
    ImageDescriptor:
      description: Properties for a registry image.
      example:
        registry: registry
        digest: digest
        tag: tag
        repository: repository
      properties:
        digest:
          description: The sha256-based digest of the image manifest.
          type: string
        registry:
          description: The registry login server.
          type: string
        repository:
          description: The repository name.
          type: string
        tag:
          description: The tag name.
          type: string
      type: object
    ImageUpdateTrigger:
      description: The image update trigger that caused a build.
      example:
        images:
        - registry: registry
          digest: digest
          tag: tag
          repository: repository
        - registry: registry
          digest: digest
          tag: tag
          repository: repository
        id: id
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          description: The unique ID of the trigger.
          type: string
        images:
          description: The list of image updates that caused the build.
          items:
            $ref: '#/components/schemas/ImageDescriptor'
          type: array
        timestamp:
          description: The timestamp when the image update happened.
          format: date-time
          type: string
      type: object
    PlatformProperties:
      description: The platform properties against which the run has to happen.
      example:
        os: Windows
        variant: v6
        architecture: amd64
      properties:
        architecture:
          description: The OS architecture.
          enum:
          - amd64
          - x86
          - arm
          type: string
          x-ms-enum:
            modelAsString: true
            name: Architecture
        os:
          description: The operating system type required for the run.
          enum:
          - Windows
          - Linux
          type: string
          x-ms-enum:
            modelAsString: true
            name: OS
        variant:
          description: Variant of the CPU.
          enum:
          - v6
          - v7
          - v8
          type: string
          x-ms-enum:
            modelAsString: true
            name: Variant
      required:
      - os
      type: object
    PlatformUpdateParameters:
      description: The properties for updating the platform configuration.
      example:
        os: Windows
        variant: v6
        architecture: amd64
      properties:
        architecture:
          description: The OS architecture.
          enum:
          - amd64
          - x86
          - arm
          type: string
          x-ms-enum:
            modelAsString: true
            name: Architecture
        os:
          description: The operating system type required for the run.
          enum:
          - Windows
          - Linux
          type: string
          x-ms-enum:
            modelAsString: true
            name: OS
        variant:
          description: Variant of the CPU.
          enum:
          - v6
          - v7
          - v8
          type: string
          x-ms-enum:
            modelAsString: true
            name: Variant
      type: object
    ProxyResource:
      description: The resource model definition for a ARM proxy resource. It will
        have everything other than required location and tags.
      properties:
        id:
          description: The resource ID.
          readOnly: true
          type: string
        name:
          description: The name of the resource.
          readOnly: true
          type: string
        type:
          description: The type of the resource.
          readOnly: true
          type: string
      type: object
      x-ms-azure-resource: true
    Resource:
      description: An Azure resource.
      properties:
        id:
          description: The resource ID.
          readOnly: true
          type: string
        location:
          description: The location of the resource. This cannot be changed after
            the resource is created.
          type: string
          x-ms-mutability:
          - read
          - create
        name:
          description: The name of the resource.
          readOnly: true
          type: string
        tags:
          additionalProperties:
            type: string
          description: The tags of the resource.
          type: object
        type:
          description: The type of the resource.
          readOnly: true
          type: string
      required:
      - location
      type: object
      x-ms-azure-resource: true
    Run:
      allOf:
      - $ref: '#/components/schemas/ProxyResource'
      description: Run resource properties
      example:
        properties:
          finishTime: 2000-01-23T04:56:07.000+00:00
          runType: QuickBuild
          runErrorMessage: runErrorMessage
          imageUpdateTrigger:
            images:
            - registry: registry
              digest: digest
              tag: tag
              repository: repository
            - registry: registry
              digest: digest
              tag: tag
              repository: repository
            id: id
            timestamp: 2000-01-23T04:56:07.000+00:00
          provisioningState: Creating
          sourceTrigger:
            branchName: branchName
            commitId: commitId
            eventType: eventType
            id: id
            pullRequestId: pullRequestId
            providerType: providerType
            repositoryUrl: repositoryUrl
          platform:
            os: Windows
            variant: v6
            architecture: amd64
          sourceRegistryAuth: sourceRegistryAuth
          timerTrigger:
            scheduleOccurrence: scheduleOccurrence
            timerTriggerName: timerTriggerName
          task: task
          agentConfiguration:
            cpu: 0
          createTime: 2000-01-23T04:56:07.000+00:00
          customRegistries:
          - customRegistries
          - customRegistries
          outputImages:
          - registry: registry
            digest: digest
            tag: tag
            repository: repository
          - registry: registry
            digest: digest
            tag: tag
            repository: repository
          lastUpdatedTime: 2000-01-23T04:56:07.000+00:00
          startTime: 2000-01-23T04:56:07.000+00:00
          isArchiveEnabled: false
          runId: runId
          status: Queued
      properties:
        properties:
          $ref: '#/components/schemas/RunProperties'
    RunFilter:
      description: Properties that are enabled for Odata querying on runs.
      properties:
        createTime:
          description: The create time for a run.
          format: date-time
          type: string
        finishTime:
          description: The time the run finished.
          format: date-time
          type: string
        isArchiveEnabled:
          description: The value that indicates whether archiving is enabled or not.
          type: boolean
        outputImageManifests:
          description: "The list of comma-separated image manifests that were generated\
            \ from the run. This is applicable if the run is of\r\nbuild type."
          type: string
        runId:
          description: The unique identifier for the run.
          type: string
        runType:
          description: The type of run.
          enum:
          - QuickBuild
          - QuickRun
          - AutoBuild
          - AutoRun
          type: string
          x-ms-enum:
            modelAsString: true
            name: RunType
        status:
          description: The current status of the run.
          enum:
          - Queued
          - Started
          - Running
          - Succeeded
          - Failed
          - Canceled
          - Error
          - Timeout
          type: string
          x-ms-enum:
            modelAsString: true
            name: RunStatus
        taskName:
          description: The name of the task that the run corresponds to.
          type: string
      type: object
    RunGetLogResult:
      description: The result of get log link operation.
      example:
        logLink: logLink
      properties:
        logLink:
          description: The link to logs for a run on a azure container registry.
          type: string
      type: object
    RunListResult:
      description: Collection of runs.
      example:
        value:
        - properties:
            finishTime: 2000-01-23T04:56:07.000+00:00
            runType: QuickBuild
            runErrorMessage: runErrorMessage
            imageUpdateTrigger:
              images:
              - registry: registry
                digest: digest
                tag: tag
                repository: repository
              - registry: registry
                digest: digest
                tag: tag
                repository: repository
              id: id
              timestamp: 2000-01-23T04:56:07.000+00:00
            provisioningState: Creating
            sourceTrigger:
              branchName: branchName
              commitId: commitId
              eventType: eventType
              id: id
              pullRequestId: pullRequestId
              providerType: providerType
              repositoryUrl: repositoryUrl
            platform:
              os: Windows
              variant: v6
              architecture: amd64
            sourceRegistryAuth: sourceRegistryAuth
            timerTrigger:
              scheduleOccurrence: scheduleOccurrence
              timerTriggerName: timerTriggerName
            task: task
            agentConfiguration:
              cpu: 0
            createTime: 2000-01-23T04:56:07.000+00:00
            customRegistries:
            - customRegistries
            - customRegistries
            outputImages:
            - registry: registry
              digest: digest
              tag: tag
              repository: repository
            - registry: registry
              digest: digest
              tag: tag
              repository: repository
            lastUpdatedTime: 2000-01-23T04:56:07.000+00:00
            startTime: 2000-01-23T04:56:07.000+00:00
            isArchiveEnabled: false
            runId: runId
            status: Queued
        - properties:
            finishTime: 2000-01-23T04:56:07.000+00:00
            runType: QuickBuild
            runErrorMessage: runErrorMessage
            imageUpdateTrigger:
              images:
              - registry: registry
                digest: digest
                tag: tag
                repository: repository
              - registry: registry
                digest: digest
                tag: tag
                repository: repository
              id: id
              timestamp: 2000-01-23T04:56:07.000+00:00
            provisioningState: Creating
            sourceTrigger:
              branchName: branchName
              commitId: commitId
              eventType: eventType
              id: id
              pullRequestId: pullRequestId
              providerType: providerType
              repositoryUrl: repositoryUrl
            platform:
              os: Windows
              variant: v6
              architecture: amd64
            sourceRegistryAuth: sourceRegistryAuth
            timerTrigger:
              scheduleOccurrence: scheduleOccurrence
              timerTriggerName: timerTriggerName
            task: task
            agentConfiguration:
              cpu: 0
            createTime: 2000-01-23T04:56:07.000+00:00
            customRegistries:
            - customRegistries
            - customRegistries
            outputImages:
            - registry: registry
              digest: digest
              tag: tag
              repository: repository
            - registry: registry
              digest: digest
              tag: tag
              repository: repository
            lastUpdatedTime: 2000-01-23T04:56:07.000+00:00
            startTime: 2000-01-23T04:56:07.000+00:00
            isArchiveEnabled: false
            runId: runId
            status: Queued
        nextLink: nextLink
      properties:
        nextLink:
          description: The URI that can be used to request the next set of paged results.
          type: string
        value:
          description: The collection value.
          items:
            $ref: '#/components/schemas/Run'
          type: array
      type: object
    RunProperties:
      description: The properties for a run.
      example:
        finishTime: 2000-01-23T04:56:07.000+00:00
        runType: QuickBuild
        runErrorMessage: runErrorMessage
        imageUpdateTrigger:
          images:
          - registry: registry
            digest: digest
            tag: tag
            repository: repository
          - registry: registry
            digest: digest
            tag: tag
            repository: repository
          id: id
          timestamp: 2000-01-23T04:56:07.000+00:00
        provisioningState: Creating
        sourceTrigger:
          branchName: branchName
          commitId: commitId
          eventType: eventType
          id: id
          pullRequestId: pullRequestId
          providerType: providerType
          repositoryUrl: repositoryUrl
        platform:
          os: Windows
          variant: v6
          architecture: amd64
        sourceRegistryAuth: sourceRegistryAuth
        timerTrigger:
          scheduleOccurrence: scheduleOccurrence
          timerTriggerName: timerTriggerName
        task: task
        agentConfiguration:
          cpu: 0
        createTime: 2000-01-23T04:56:07.000+00:00
        customRegistries:
        - customRegistries
        - customRegistries
        outputImages:
        - registry: registry
          digest: digest
          tag: tag
          repository: repository
        - registry: registry
          digest: digest
          tag: tag
          repository: repository
        lastUpdatedTime: 2000-01-23T04:56:07.000+00:00
        startTime: 2000-01-23T04:56:07.000+00:00
        isArchiveEnabled: false
        runId: runId
        status: Queued
      properties:
        agentConfiguration:
          $ref: '#/components/schemas/AgentProperties'
        createTime:
          description: The time the run was scheduled.
          format: date-time
          type: string
        customRegistries:
          description: The list of custom registries that were logged in during this
            run.
          items:
            type: string
          type: array
        finishTime:
          description: The time the run finished.
          format: date-time
          type: string
        imageUpdateTrigger:
          $ref: '#/components/schemas/ImageUpdateTrigger'
        isArchiveEnabled:
          default: false
          description: The value that indicates whether archiving is enabled or not.
          type: boolean
        lastUpdatedTime:
          description: The last updated time for the run.
          format: date-time
          type: string
        outputImages:
          description: The list of all images that were generated from the run. This
            is applicable if the run generates base image dependencies.
          items:
            $ref: '#/components/schemas/ImageDescriptor'
          type: array
        platform:
          $ref: '#/components/schemas/PlatformProperties'
        provisioningState:
          description: The provisioning state of a run.
          enum:
          - Creating
          - Updating
          - Deleting
          - Succeeded
          - Failed
          - Canceled
          type: string
          x-ms-enum:
            modelAsString: true
            name: ProvisioningState
        runErrorMessage:
          description: The error message received from backend systems after the run
            is scheduled.
          readOnly: true
          type: string
        runId:
          description: The unique identifier for the run.
          type: string
        runType:
          description: The type of run.
          enum:
          - QuickBuild
          - QuickRun
          - AutoBuild
          - AutoRun
          type: string
          x-ms-enum:
            modelAsString: true
            name: RunType
        sourceRegistryAuth:
          description: The scope of the credentials that were used to login to the
            source registry during this run.
          type: string
        sourceTrigger:
          $ref: '#/components/schemas/SourceTriggerDescriptor'
        startTime:
          description: The time the run started.
          format: date-time
          type: string
        status:
          description: The current status of the run.
          enum:
          - Queued
          - Started
          - Running
          - Succeeded
          - Failed
          - Canceled
          - Error
          - Timeout
          type: string
          x-ms-enum:
            modelAsString: true
            name: RunStatus
        task:
          description: The task against which run was scheduled.
          type: string
        timerTrigger:
          $ref: '#/components/schemas/TimerTriggerDescriptor'
      type: object
    RunRequest:
      description: The request parameters for scheduling a run.
      discriminator:
        propertyName: type
      example:
        isArchiveEnabled: false
        type: type
      properties:
        isArchiveEnabled:
          default: false
          description: The value that indicates whether archiving is enabled for the
            run or not.
          type: boolean
        type:
          description: The type of the run request.
          readOnly: true
          type: string
      type: object
    RunUpdateParameters:
      description: The set of run properties that can be updated.
      example:
        isArchiveEnabled: true
      properties:
        isArchiveEnabled:
          description: The value that indicates whether archiving is enabled or not.
          type: boolean
      type: object
    SecretObject:
      description: Describes the properties of a secret object value.
      example:
        type: Opaque
        value: value
      properties:
        type:
          description: "The type of the secret object which determines how the value\
            \ of the secret object has to be\r\ninterpreted."
          enum:
          - Opaque
          - Vaultsecret
          type: string
          x-ms-enum:
            modelAsString: true
            name: SecretObjectType
        value:
          description: "The value of the secret. The format of this value will be\
            \ determined\r\nbased on the type of the secret object. If the type is\
            \ Opaque, the value will be\r\nused as is without any modification."
          type: string
      type: object
    SetValue:
      description: The properties of a overridable value that can be passed to a task
        template.
      properties:
        isSecret:
          default: false
          description: Flag to indicate whether the value represents a secret or not.
          type: boolean
        name:
          description: The name of the overridable value.
          type: string
        value:
          description: The overridable value.
          type: string
      required:
      - name
      - value
      type: object
    SourceProperties:
      description: The properties of the source code repository.
      example:
        sourceControlAuthProperties:
          expiresIn: 6
          scope: scope
          tokenType: PAT
          refreshToken: refreshToken
          token: token
        sourceControlType: Github
        branch: branch
        repositoryUrl: repositoryUrl
      properties:
        branch:
          description: The branch name of the source code.
          type: string
        repositoryUrl:
          description: The full URL to the source code repository
          type: string
        sourceControlAuthProperties:
          $ref: '#/components/schemas/AuthInfo'
        sourceControlType:
          description: The type of source control service.
          enum:
          - Github
          - VisualStudioTeamService
          type: string
          x-ms-enum:
            modelAsString: true
            name: SourceControlType
      required:
      - repositoryUrl
      - sourceControlType
      type: object
    SourceRegistryCredentials:
      description: Describes the credential parameters for accessing the source registry.
      example:
        loginMode: None
      properties:
        loginMode:
          description: "The authentication mode which determines the source registry\
            \ login scope. The credentials for the source registry\r\nwill be generated\
            \ using the given scope. These credentials will be used to login to\r\n\
            the source registry during the run."
          enum:
          - None
          - Default
          type: string
          x-ms-enum:
            modelAsString: true
            name: SourceRegistryLoginMode
      type: object
    SourceTrigger:
      description: The properties of a source based trigger.
      example:
        sourceRepository:
          sourceControlAuthProperties:
            expiresIn: 6
            scope: scope
            tokenType: PAT
            refreshToken: refreshToken
            token: token
          sourceControlType: Github
          branch: branch
          repositoryUrl: repositoryUrl
        sourceTriggerEvents:
        - commit
        - commit
        name: name
        status: Enabled
      properties:
        name:
          description: The name of the trigger.
          type: string
        sourceRepository:
          $ref: '#/components/schemas/SourceProperties'
        sourceTriggerEvents:
          description: The source event corresponding to the trigger.
          items:
            enum:
            - commit
            - pullrequest
            type: string
            x-ms-enum:
              modelAsString: true
              name: SourceTriggerEvent
          type: array
        status:
          default: Enabled
          description: The current status of trigger.
          enum:
          - Disabled
          - Enabled
          type: string
          x-ms-enum:
            modelAsString: true
            name: TriggerStatus
      required:
      - name
      - sourceRepository
      - sourceTriggerEvents
      type: object
    SourceTriggerDescriptor:
      description: The source trigger that caused a run.
      example:
        branchName: branchName
        commitId: commitId
        eventType: eventType
        id: id
        pullRequestId: pullRequestId
        providerType: providerType
        repositoryUrl: repositoryUrl
      properties:
        branchName:
          description: The branch name in the repository.
          type: string
        commitId:
          description: The unique ID that identifies a commit.
          type: string
        eventType:
          description: The event type of the trigger.
          type: string
        id:
          description: The unique ID of the trigger.
          type: string
        providerType:
          description: The source control provider type.
          type: string
        pullRequestId:
          description: The unique ID that identifies pull request.
          type: string
        repositoryUrl:
          description: The repository URL.
          type: string
      type: object
    SourceTriggerUpdateParameters:
      description: The properties for updating a source based trigger.
      example:
        sourceRepository:
          sourceControlAuthProperties:
            expiresIn: 6
            scope: scope
            tokenType: PAT
            refreshToken: refreshToken
            token: token
          sourceControlType: Github
          branch: branch
          repositoryUrl: repositoryUrl
        sourceTriggerEvents:
        - commit
        - commit
        name: name
        status: Enabled
      properties:
        name:
          description: The name of the trigger.
          type: string
        sourceRepository:
          $ref: '#/components/schemas/SourceUpdateParameters'
        sourceTriggerEvents:
          description: The source event corresponding to the trigger.
          items:
            enum:
            - commit
            - pullrequest
            type: string
            x-ms-enum:
              modelAsString: true
              name: SourceTriggerEvent
          type: array
        status:
          default: Enabled
          description: The current status of trigger.
          enum:
          - Disabled
          - Enabled
          type: string
          x-ms-enum:
            modelAsString: true
            name: TriggerStatus
      required:
      - name
      type: object
    SourceUpdateParameters:
      description: The properties for updating the source code repository.
      example:
        sourceControlAuthProperties:
          expiresIn: 6
          scope: scope
          tokenType: PAT
          refreshToken: refreshToken
          token: token
        sourceControlType: Github
        branch: branch
        repositoryUrl: repositoryUrl
      properties:
        branch:
          description: The branch name of the source code.
          type: string
        repositoryUrl:
          description: The full URL to the source code repository
          type: string
        sourceControlAuthProperties:
          $ref: '#/components/schemas/AuthInfoUpdateParameters'
        sourceControlType:
          description: The type of source control service.
          enum:
          - Github
          - VisualStudioTeamService
          type: string
          x-ms-enum:
            modelAsString: true
            name: SourceControlType
      type: object
    SourceUploadDefinition:
      description: The properties of a response to source upload request.
      example:
        uploadUrl: uploadUrl
        relativePath: relativePath
      properties:
        relativePath:
          description: The relative path to the source. This is used to submit the
            subsequent queue build request.
          type: string
        uploadUrl:
          description: The URL where the client can upload the source.
          type: string
      type: object
    Task:
      allOf:
      - $ref: '#/components/schemas/Resource'
      description: "The task that has the ARM resource and task properties. \r\nThe\
        \ task will have all information to schedule a run against it."
      example:
        identity:
          userAssignedIdentities:
            key:
              clientId: clientId
              principalId: principalId
          tenantId: tenantId
          principalId: principalId
          type: SystemAssigned
        properties:
          agentConfiguration:
            cpu: 0
          credentials:
            customRegistries:
              key:
                password:
                  type: Opaque
                  value: value
                identity: identity
                userName:
                  type: Opaque
                  value: value
            sourceRegistry:
              loginMode: None
          step:
            baseImageDependencies:
            - registry: registry
              digest: digest
              tag: tag
              repository: repository
              type: BuildTime
            - registry: registry
              digest: digest
              tag: tag
              repository: repository
              type: BuildTime
            contextPath: contextPath
            type: Docker
            contextAccessToken: contextAccessToken
          provisioningState: Creating
          trigger:
            timerTriggers:
            - schedule: schedule
              name: name
              status: Enabled
            - schedule: schedule
              name: name
              status: Enabled
            sourceTriggers:
            - sourceRepository:
                sourceControlAuthProperties:
                  expiresIn: 6
                  scope: scope
                  tokenType: PAT
                  refreshToken: refreshToken
                  token: token
                sourceControlType: Github
                branch: branch
                repositoryUrl: repositoryUrl
              sourceTriggerEvents:
              - commit
              - commit
              name: name
              status: Enabled
            - sourceRepository:
                sourceControlAuthProperties:
                  expiresIn: 6
                  scope: scope
                  tokenType: PAT
                  refreshToken: refreshToken
                  token: token
                sourceControlType: Github
                branch: branch
                repositoryUrl: repositoryUrl
              sourceTriggerEvents:
              - commit
              - commit
              name: name
              status: Enabled
            baseImageTrigger:
              baseImageTriggerType: All
              name: name
              status: Enabled
          creationDate: 2000-01-23T04:56:07.000+00:00
          platform:
            os: Windows
            variant: v6
            architecture: amd64
          timeout: 2582
          status: Disabled
      properties:
        identity:
          $ref: '#/components/schemas/IdentityProperties'
        properties:
          $ref: '#/components/schemas/TaskProperties'
    TaskListResult:
      description: The collection of tasks.
      example:
        value:
        - identity:
            userAssignedIdentities:
              key:
                clientId: clientId
                principalId: principalId
            tenantId: tenantId
            principalId: principalId
            type: SystemAssigned
          properties:
            agentConfiguration:
              cpu: 0
            credentials:
              customRegistries:
                key:
                  password:
                    type: Opaque
                    value: value
                  identity: identity
                  userName:
                    type: Opaque
                    value: value
              sourceRegistry:
                loginMode: None
            step:
              baseImageDependencies:
              - registry: registry
                digest: digest
                tag: tag
                repository: repository
                type: BuildTime
              - registry: registry
                digest: digest
                tag: tag
                repository: repository
                type: BuildTime
              contextPath: contextPath
              type: Docker
              contextAccessToken: contextAccessToken
            provisioningState: Creating
            trigger:
              timerTriggers:
              - schedule: schedule
                name: name
                status: Enabled
              - schedule: schedule
                name: name
                status: Enabled
              sourceTriggers:
              - sourceRepository:
                  sourceControlAuthProperties:
                    expiresIn: 6
                    scope: scope
                    tokenType: PAT
                    refreshToken: refreshToken
                    token: token
                  sourceControlType: Github
                  branch: branch
                  repositoryUrl: repositoryUrl
                sourceTriggerEvents:
                - commit
                - commit
                name: name
                status: Enabled
              - sourceRepository:
                  sourceControlAuthProperties:
                    expiresIn: 6
                    scope: scope
                    tokenType: PAT
                    refreshToken: refreshToken
                    token: token
                  sourceControlType: Github
                  branch: branch
                  repositoryUrl: repositoryUrl
                sourceTriggerEvents:
                - commit
                - commit
                name: name
                status: Enabled
              baseImageTrigger:
                baseImageTriggerType: All
                name: name
                status: Enabled
            creationDate: 2000-01-23T04:56:07.000+00:00
            platform:
              os: Windows
              variant: v6
              architecture: amd64
            timeout: 2582
            status: Disabled
        - identity:
            userAssignedIdentities:
              key:
                clientId: clientId
                principalId: principalId
            tenantId: tenantId
            principalId: principalId
            type: SystemAssigned
          properties:
            agentConfiguration:
              cpu: 0
            credentials:
              customRegistries:
                key:
                  password:
                    type: Opaque
                    value: value
                  identity: identity
                  userName:
                    type: Opaque
                    value: value
              sourceRegistry:
                loginMode: None
            step:
              baseImageDependencies:
              - registry: registry
                digest: digest
                tag: tag
                repository: repository
                type: BuildTime
              - registry: registry
                digest: digest
                tag: tag
                repository: repository
                type: BuildTime
              contextPath: contextPath
              type: Docker
              contextAccessToken: contextAccessToken
            provisioningState: Creating
            trigger:
              timerTriggers:
              - schedule: schedule
                name: name
                status: Enabled
              - schedule: schedule
                name: name
                status: Enabled
              sourceTriggers:
              - sourceRepository:
                  sourceControlAuthProperties:
                    expiresIn: 6
                    scope: scope
                    tokenType: PAT
                    refreshToken: refreshToken
                    token: token
                  sourceControlType: Github
                  branch: branch
                  repositoryUrl: repositoryUrl
                sourceTriggerEvents:
                - commit
                - commit
                name: name
                status: Enabled
              - sourceRepository:
                  sourceControlAuthProperties:
                    expiresIn: 6
                    scope: scope
                    tokenType: PAT
                    refreshToken: refreshToken
                    token: token
                  sourceControlType: Github
                  branch: branch
                  repositoryUrl: repositoryUrl
                sourceTriggerEvents:
                - commit
                - commit
                name: name
                status: Enabled
              baseImageTrigger:
                baseImageTriggerType: All
                name: name
                status: Enabled
            creationDate: 2000-01-23T04:56:07.000+00:00
            platform:
              os: Windows
              variant: v6
              architecture: amd64
            timeout: 2582
            status: Disabled
        nextLink: nextLink
      properties:
        nextLink:
          description: The URI that can be used to request the next set of paged results.
          type: string
        value:
          description: The collection value.
          items:
            $ref: '#/components/schemas/Task'
          type: array
      type: object
    TaskProperties:
      description: The properties of a task.
      example:
        agentConfiguration:
          cpu: 0
        credentials:
          customRegistries:
            key:
              password:
                type: Opaque
                value: value
              identity: identity
              userName:
                type: Opaque
                value: value
          sourceRegistry:
            loginMode: None
        step:
          baseImageDependencies:
          - registry: registry
            digest: digest
            tag: tag
            repository: repository
            type: BuildTime
          - registry: registry
            digest: digest
            tag: tag
            repository: repository
            type: BuildTime
          contextPath: contextPath
          type: Docker
          contextAccessToken: contextAccessToken
        provisioningState: Creating
        trigger:
          timerTriggers:
          - schedule: schedule
            name: name
            status: Enabled
          - schedule: schedule
            name: name
            status: Enabled
          sourceTriggers:
          - sourceRepository:
              sourceControlAuthProperties:
                expiresIn: 6
                scope: scope
                tokenType: PAT
                refreshToken: refreshToken
                token: token
              sourceControlType: Github
              branch: branch
              repositoryUrl: repositoryUrl
            sourceTriggerEvents:
            - commit
            - commit
            name: name
            status: Enabled
          - sourceRepository:
              sourceControlAuthProperties:
                expiresIn: 6
                scope: scope
                tokenType: PAT
                refreshToken: refreshToken
                token: token
              sourceControlType: Github
              branch: branch
              repositoryUrl: repositoryUrl
            sourceTriggerEvents:
            - commit
            - commit
            name: name
            status: Enabled
          baseImageTrigger:
            baseImageTriggerType: All
            name: name
            status: Enabled
        creationDate: 2000-01-23T04:56:07.000+00:00
        platform:
          os: Windows
          variant: v6
          architecture: amd64
        timeout: 2582
        status: Disabled
      properties:
        agentConfiguration:
          $ref: '#/components/schemas/AgentProperties'
        creationDate:
          description: The creation date of task.
          format: date-time
          readOnly: true
          type: string
        credentials:
          $ref: '#/components/schemas/Credentials'
        platform:
          $ref: '#/components/schemas/PlatformProperties'
        provisioningState:
          description: The provisioning state of the task.
          enum:
          - Creating
          - Updating
          - Deleting
          - Succeeded
          - Failed
          - Canceled
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: ProvisioningState
        status:
          description: The current status of task.
          enum:
          - Disabled
          - Enabled
          type: string
          x-ms-enum:
            modelAsString: true
            name: TaskStatus
        step:
          $ref: '#/components/schemas/TaskStepProperties'
        timeout:
          default: 3600
          description: Run timeout in seconds.
          format: int32
          maximum: 28800
          minimum: 300
          type: integer
        trigger:
          $ref: '#/components/schemas/TriggerProperties'
      required:
      - platform
      - step
      type: object
    TaskPropertiesUpdateParameters:
      description: The properties for updating a task.
      example:
        agentConfiguration:
          cpu: 0
        credentials:
          customRegistries:
            key:
              password:
                type: Opaque
                value: value
              identity: identity
              userName:
                type: Opaque
                value: value
          sourceRegistry:
            loginMode: None
        step:
          contextPath: contextPath
          type: Docker
          contextAccessToken: contextAccessToken
        trigger:
          timerTriggers:
          - schedule: schedule
            name: name
            status: Enabled
          - schedule: schedule
            name: name
            status: Enabled
          sourceTriggers:
          - sourceRepository:
              sourceControlAuthProperties:
                expiresIn: 6
                scope: scope
                tokenType: PAT
                refreshToken: refreshToken
                token: token
              sourceControlType: Github
              branch: branch
              repositoryUrl: repositoryUrl
            sourceTriggerEvents:
            - commit
            - commit
            name: name
            status: Enabled
          - sourceRepository:
              sourceControlAuthProperties:
                expiresIn: 6
                scope: scope
                tokenType: PAT
                refreshToken: refreshToken
                token: token
              sourceControlType: Github
              branch: branch
              repositoryUrl: repositoryUrl
            sourceTriggerEvents:
            - commit
            - commit
            name: name
            status: Enabled
          baseImageTrigger:
            baseImageTriggerType: All
            name: name
            status: Enabled
        platform:
          os: Windows
          variant: v6
          architecture: amd64
        timeout: 0
        status: Disabled
      properties:
        agentConfiguration:
          $ref: '#/components/schemas/AgentProperties'
        credentials:
          $ref: '#/components/schemas/Credentials'
        platform:
          $ref: '#/components/schemas/PlatformUpdateParameters'
        status:
          description: The current status of task.
          enum:
          - Disabled
          - Enabled
          type: string
          x-ms-enum:
            modelAsString: true
            name: TaskStatus
        step:
          $ref: '#/components/schemas/TaskStepUpdateParameters'
        timeout:
          description: Run timeout in seconds.
          format: int32
          type: integer
        trigger:
          $ref: '#/components/schemas/TriggerUpdateParameters'
      type: object
    TaskRunRequest:
      allOf:
      - $ref: '#/components/schemas/RunRequest'
      description: The parameters for a task run request.
      properties:
        taskName:
          description: The name of task against which run has to be queued.
          type: string
        values:
          description: The collection of overridable values that can be passed when
            running a task.
          items:
            $ref: '#/components/schemas/SetValue'
          type: array
      required:
      - taskName
      x-ms-discriminator-value: TaskRunRequest
    TaskStepProperties:
      description: Base properties for any task step.
      discriminator:
        propertyName: type
      example:
        baseImageDependencies:
        - registry: registry
          digest: digest
          tag: tag
          repository: repository
          type: BuildTime
        - registry: registry
          digest: digest
          tag: tag
          repository: repository
          type: BuildTime
        contextPath: contextPath
        type: Docker
        contextAccessToken: contextAccessToken
      properties:
        baseImageDependencies:
          description: List of base image dependencies for a step.
          items:
            $ref: '#/components/schemas/BaseImageDependency'
          readOnly: true
          type: array
        contextAccessToken:
          description: The token (git PAT or SAS token of storage account blob) associated
            with the context for a step.
          type: string
        contextPath:
          description: The URL(absolute or relative) of the source context for the
            task step.
          type: string
        type:
          description: The type of the step.
          enum:
          - Docker
          - FileTask
          - EncodedTask
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: StepType
      type: object
    TaskStepUpdateParameters:
      description: Base properties for updating any task step.
      discriminator:
        propertyName: type
      example:
        contextPath: contextPath
        type: Docker
        contextAccessToken: contextAccessToken
      properties:
        contextAccessToken:
          description: The token (git PAT or SAS token of storage account blob) associated
            with the context for a step.
          type: string
        contextPath:
          description: The URL(absolute or relative) of the source context for the
            task step.
          type: string
        type:
          description: The type of the step.
          enum:
          - Docker
          - FileTask
          - EncodedTask
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: StepType
      type: object
    TaskUpdateParameters:
      description: The parameters for updating a task.
      example:
        identity:
          userAssignedIdentities:
            key:
              clientId: clientId
              principalId: principalId
          tenantId: tenantId
          principalId: principalId
          type: SystemAssigned
        properties:
          agentConfiguration:
            cpu: 0
          credentials:
            customRegistries:
              key:
                password:
                  type: Opaque
                  value: value
                identity: identity
                userName:
                  type: Opaque
                  value: value
            sourceRegistry:
              loginMode: None
          step:
            contextPath: contextPath
            type: Docker
            contextAccessToken: contextAccessToken
          trigger:
            timerTriggers:
            - schedule: schedule
              name: name
              status: Enabled
            - schedule: schedule
              name: name
              status: Enabled
            sourceTriggers:
            - sourceRepository:
                sourceControlAuthProperties:
                  expiresIn: 6
                  scope: scope
                  tokenType: PAT
                  refreshToken: refreshToken
                  token: token
                sourceControlType: Github
                branch: branch
                repositoryUrl: repositoryUrl
              sourceTriggerEvents:
              - commit
              - commit
              name: name
              status: Enabled
            - sourceRepository:
                sourceControlAuthProperties:
                  expiresIn: 6
                  scope: scope
                  tokenType: PAT
                  refreshToken: refreshToken
                  token: token
                sourceControlType: Github
                branch: branch
                repositoryUrl: repositoryUrl
              sourceTriggerEvents:
              - commit
              - commit
              name: name
              status: Enabled
            baseImageTrigger:
              baseImageTriggerType: All
              name: name
              status: Enabled
          platform:
            os: Windows
            variant: v6
            architecture: amd64
          timeout: 0
          status: Disabled
        tags:
          key: tags
      properties:
        identity:
          $ref: '#/components/schemas/IdentityProperties'
        properties:
          $ref: '#/components/schemas/TaskPropertiesUpdateParameters'
        tags:
          additionalProperties:
            type: string
          description: The ARM resource tags.
          type: object
      type: object
    TimerTrigger:
      description: The properties of a timer trigger.
      example:
        schedule: schedule
        name: name
        status: Enabled
      properties:
        name:
          description: The name of the trigger.
          type: string
        schedule:
          description: The CRON expression for the task schedule
          type: string
        status:
          default: Enabled
          description: The current status of trigger.
          enum:
          - Disabled
          - Enabled
          type: string
          x-ms-enum:
            modelAsString: true
            name: TriggerStatus
      required:
      - name
      - schedule
      type: object
    TimerTriggerDescriptor:
      example:
        scheduleOccurrence: scheduleOccurrence
        timerTriggerName: timerTriggerName
      properties:
        scheduleOccurrence:
          description: The occurrence that triggered the run.
          type: string
        timerTriggerName:
          description: The timer trigger name that caused the run.
          type: string
      type: object
    TimerTriggerUpdateParameters:
      description: The properties for updating a timer trigger.
      example:
        schedule: schedule
        name: name
        status: Enabled
      properties:
        name:
          description: The name of the trigger.
          type: string
        schedule:
          description: The CRON expression for the task schedule
          type: string
        status:
          default: Enabled
          description: The current status of trigger.
          enum:
          - Disabled
          - Enabled
          type: string
          x-ms-enum:
            modelAsString: true
            name: TriggerStatus
      required:
      - name
      type: object
    TriggerProperties:
      description: The properties of a trigger.
      example:
        timerTriggers:
        - schedule: schedule
          name: name
          status: Enabled
        - schedule: schedule
          name: name
          status: Enabled
        sourceTriggers:
        - sourceRepository:
            sourceControlAuthProperties:
              expiresIn: 6
              scope: scope
              tokenType: PAT
              refreshToken: refreshToken
              token: token
            sourceControlType: Github
            branch: branch
            repositoryUrl: repositoryUrl
          sourceTriggerEvents:
          - commit
          - commit
          name: name
          status: Enabled
        - sourceRepository:
            sourceControlAuthProperties:
              expiresIn: 6
              scope: scope
              tokenType: PAT
              refreshToken: refreshToken
              token: token
            sourceControlType: Github
            branch: branch
            repositoryUrl: repositoryUrl
          sourceTriggerEvents:
          - commit
          - commit
          name: name
          status: Enabled
        baseImageTrigger:
          baseImageTriggerType: All
          name: name
          status: Enabled
      properties:
        baseImageTrigger:
          $ref: '#/components/schemas/BaseImageTrigger'
        sourceTriggers:
          description: The collection of triggers based on source code repository.
          items:
            $ref: '#/components/schemas/SourceTrigger'
          type: array
        timerTriggers:
          description: The collection of timer triggers.
          items:
            $ref: '#/components/schemas/TimerTrigger'
          type: array
      type: object
    TriggerUpdateParameters:
      description: The properties for updating triggers.
      example:
        timerTriggers:
        - schedule: schedule
          name: name
          status: Enabled
        - schedule: schedule
          name: name
          status: Enabled
        sourceTriggers:
        - sourceRepository:
            sourceControlAuthProperties:
              expiresIn: 6
              scope: scope
              tokenType: PAT
              refreshToken: refreshToken
              token: token
            sourceControlType: Github
            branch: branch
            repositoryUrl: repositoryUrl
          sourceTriggerEvents:
          - commit
          - commit
          name: name
          status: Enabled
        - sourceRepository:
            sourceControlAuthProperties:
              expiresIn: 6
              scope: scope
              tokenType: PAT
              refreshToken: refreshToken
              token: token
            sourceControlType: Github
            branch: branch
            repositoryUrl: repositoryUrl
          sourceTriggerEvents:
          - commit
          - commit
          name: name
          status: Enabled
        baseImageTrigger:
          baseImageTriggerType: All
          name: name
          status: Enabled
      properties:
        baseImageTrigger:
          $ref: '#/components/schemas/BaseImageTriggerUpdateParameters'
        sourceTriggers:
          description: The collection of triggers based on source code repository.
          items:
            $ref: '#/components/schemas/SourceTriggerUpdateParameters'
          type: array
        timerTriggers:
          description: The collection of timer triggers.
          items:
            $ref: '#/components/schemas/TimerTriggerUpdateParameters'
          type: array
      type: object
    UserIdentityProperties:
      example:
        clientId: clientId
        principalId: principalId
      properties:
        clientId:
          description: The client id of user assigned identity.
          type: string
        principalId:
          description: The principal id of user assigned identity.
          type: string
      type: object
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
      type: oauth2
x-original-swagger-version: "2.0"

