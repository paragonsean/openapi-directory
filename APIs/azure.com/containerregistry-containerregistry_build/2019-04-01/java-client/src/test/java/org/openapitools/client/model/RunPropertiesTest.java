/*
 * ContainerRegistryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-04-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AgentProperties;
import org.openapitools.client.model.ImageDescriptor;
import org.openapitools.client.model.ImageUpdateTrigger;
import org.openapitools.client.model.PlatformProperties;
import org.openapitools.client.model.SourceTriggerDescriptor;
import org.openapitools.client.model.TimerTriggerDescriptor;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for RunProperties
 */
public class RunPropertiesTest {
    private final RunProperties model = new RunProperties();

    /**
     * Model tests for RunProperties
     */
    @Test
    public void testRunProperties() {
        // TODO: test RunProperties
    }

    /**
     * Test the property 'agentConfiguration'
     */
    @Test
    public void agentConfigurationTest() {
        // TODO: test agentConfiguration
    }

    /**
     * Test the property 'createTime'
     */
    @Test
    public void createTimeTest() {
        // TODO: test createTime
    }

    /**
     * Test the property 'customRegistries'
     */
    @Test
    public void customRegistriesTest() {
        // TODO: test customRegistries
    }

    /**
     * Test the property 'finishTime'
     */
    @Test
    public void finishTimeTest() {
        // TODO: test finishTime
    }

    /**
     * Test the property 'imageUpdateTrigger'
     */
    @Test
    public void imageUpdateTriggerTest() {
        // TODO: test imageUpdateTrigger
    }

    /**
     * Test the property 'isArchiveEnabled'
     */
    @Test
    public void isArchiveEnabledTest() {
        // TODO: test isArchiveEnabled
    }

    /**
     * Test the property 'lastUpdatedTime'
     */
    @Test
    public void lastUpdatedTimeTest() {
        // TODO: test lastUpdatedTime
    }

    /**
     * Test the property 'outputImages'
     */
    @Test
    public void outputImagesTest() {
        // TODO: test outputImages
    }

    /**
     * Test the property 'platform'
     */
    @Test
    public void platformTest() {
        // TODO: test platform
    }

    /**
     * Test the property 'provisioningState'
     */
    @Test
    public void provisioningStateTest() {
        // TODO: test provisioningState
    }

    /**
     * Test the property 'runErrorMessage'
     */
    @Test
    public void runErrorMessageTest() {
        // TODO: test runErrorMessage
    }

    /**
     * Test the property 'runId'
     */
    @Test
    public void runIdTest() {
        // TODO: test runId
    }

    /**
     * Test the property 'runType'
     */
    @Test
    public void runTypeTest() {
        // TODO: test runType
    }

    /**
     * Test the property 'sourceRegistryAuth'
     */
    @Test
    public void sourceRegistryAuthTest() {
        // TODO: test sourceRegistryAuth
    }

    /**
     * Test the property 'sourceTrigger'
     */
    @Test
    public void sourceTriggerTest() {
        // TODO: test sourceTrigger
    }

    /**
     * Test the property 'startTime'
     */
    @Test
    public void startTimeTest() {
        // TODO: test startTime
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'task'
     */
    @Test
    public void taskTest() {
        // TODO: test task
    }

    /**
     * Test the property 'timerTrigger'
     */
    @Test
    public void timerTriggerTest() {
        // TODO: test timerTrigger
    }

}
