/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2018-06-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties::OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties::OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties() {
    this->initializeModel();
}

OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties::~OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties() {}

void OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties::initializeModel() {

    m_dns_settings_isSet = false;
    m_dns_settings_isValid = false;

    m_enable_accelerated_networking_isSet = false;
    m_enable_accelerated_networking_isValid = false;

    m_enable_ip_forwarding_isSet = false;
    m_enable_ip_forwarding_isValid = false;

    m_ip_configurations_isSet = false;
    m_ip_configurations_isValid = false;

    m_mac_address_isSet = false;
    m_mac_address_isValid = false;

    m_network_security_group_isSet = false;
    m_network_security_group_isValid = false;

    m_primary_isSet = false;
    m_primary_isValid = false;

    m_provisioning_state_isSet = false;
    m_provisioning_state_isValid = false;

    m_resource_guid_isSet = false;
    m_resource_guid_isValid = false;

    m_virtual_machine_isSet = false;
    m_virtual_machine_isValid = false;
}

void OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties::fromJsonObject(QJsonObject json) {

    m_dns_settings_isValid = ::OpenAPI::fromJsonValue(m_dns_settings, json[QString("dnsSettings")]);
    m_dns_settings_isSet = !json[QString("dnsSettings")].isNull() && m_dns_settings_isValid;

    m_enable_accelerated_networking_isValid = ::OpenAPI::fromJsonValue(m_enable_accelerated_networking, json[QString("enableAcceleratedNetworking")]);
    m_enable_accelerated_networking_isSet = !json[QString("enableAcceleratedNetworking")].isNull() && m_enable_accelerated_networking_isValid;

    m_enable_ip_forwarding_isValid = ::OpenAPI::fromJsonValue(m_enable_ip_forwarding, json[QString("enableIPForwarding")]);
    m_enable_ip_forwarding_isSet = !json[QString("enableIPForwarding")].isNull() && m_enable_ip_forwarding_isValid;

    m_ip_configurations_isValid = ::OpenAPI::fromJsonValue(m_ip_configurations, json[QString("ipConfigurations")]);
    m_ip_configurations_isSet = !json[QString("ipConfigurations")].isNull() && m_ip_configurations_isValid;

    m_mac_address_isValid = ::OpenAPI::fromJsonValue(m_mac_address, json[QString("macAddress")]);
    m_mac_address_isSet = !json[QString("macAddress")].isNull() && m_mac_address_isValid;

    m_network_security_group_isValid = ::OpenAPI::fromJsonValue(m_network_security_group, json[QString("networkSecurityGroup")]);
    m_network_security_group_isSet = !json[QString("networkSecurityGroup")].isNull() && m_network_security_group_isValid;

    m_primary_isValid = ::OpenAPI::fromJsonValue(m_primary, json[QString("primary")]);
    m_primary_isSet = !json[QString("primary")].isNull() && m_primary_isValid;

    m_provisioning_state_isValid = ::OpenAPI::fromJsonValue(m_provisioning_state, json[QString("provisioningState")]);
    m_provisioning_state_isSet = !json[QString("provisioningState")].isNull() && m_provisioning_state_isValid;

    m_resource_guid_isValid = ::OpenAPI::fromJsonValue(m_resource_guid, json[QString("resourceGuid")]);
    m_resource_guid_isSet = !json[QString("resourceGuid")].isNull() && m_resource_guid_isValid;

    m_virtual_machine_isValid = ::OpenAPI::fromJsonValue(m_virtual_machine, json[QString("virtualMachine")]);
    m_virtual_machine_isSet = !json[QString("virtualMachine")].isNull() && m_virtual_machine_isValid;
}

QString OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties::asJsonObject() const {
    QJsonObject obj;
    if (m_dns_settings.isSet()) {
        obj.insert(QString("dnsSettings"), ::OpenAPI::toJsonValue(m_dns_settings));
    }
    if (m_enable_accelerated_networking_isSet) {
        obj.insert(QString("enableAcceleratedNetworking"), ::OpenAPI::toJsonValue(m_enable_accelerated_networking));
    }
    if (m_enable_ip_forwarding_isSet) {
        obj.insert(QString("enableIPForwarding"), ::OpenAPI::toJsonValue(m_enable_ip_forwarding));
    }
    if (m_ip_configurations.size() > 0) {
        obj.insert(QString("ipConfigurations"), ::OpenAPI::toJsonValue(m_ip_configurations));
    }
    if (m_mac_address_isSet) {
        obj.insert(QString("macAddress"), ::OpenAPI::toJsonValue(m_mac_address));
    }
    if (m_network_security_group.isSet()) {
        obj.insert(QString("networkSecurityGroup"), ::OpenAPI::toJsonValue(m_network_security_group));
    }
    if (m_primary_isSet) {
        obj.insert(QString("primary"), ::OpenAPI::toJsonValue(m_primary));
    }
    if (m_provisioning_state_isSet) {
        obj.insert(QString("provisioningState"), ::OpenAPI::toJsonValue(m_provisioning_state));
    }
    if (m_resource_guid_isSet) {
        obj.insert(QString("resourceGuid"), ::OpenAPI::toJsonValue(m_resource_guid));
    }
    if (m_virtual_machine.isSet()) {
        obj.insert(QString("virtualMachine"), ::OpenAPI::toJsonValue(m_virtual_machine));
    }
    return obj;
}

OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties_dnsSettings OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties::getDnsSettings() const {
    return m_dns_settings;
}
void OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties::setDnsSettings(const OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties_dnsSettings &dns_settings) {
    m_dns_settings = dns_settings;
    m_dns_settings_isSet = true;
}

bool OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties::is_dns_settings_Set() const{
    return m_dns_settings_isSet;
}

bool OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties::is_dns_settings_Valid() const{
    return m_dns_settings_isValid;
}

bool OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties::isEnableAcceleratedNetworking() const {
    return m_enable_accelerated_networking;
}
void OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties::setEnableAcceleratedNetworking(const bool &enable_accelerated_networking) {
    m_enable_accelerated_networking = enable_accelerated_networking;
    m_enable_accelerated_networking_isSet = true;
}

bool OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties::is_enable_accelerated_networking_Set() const{
    return m_enable_accelerated_networking_isSet;
}

bool OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties::is_enable_accelerated_networking_Valid() const{
    return m_enable_accelerated_networking_isValid;
}

bool OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties::isEnableIpForwarding() const {
    return m_enable_ip_forwarding;
}
void OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties::setEnableIpForwarding(const bool &enable_ip_forwarding) {
    m_enable_ip_forwarding = enable_ip_forwarding;
    m_enable_ip_forwarding_isSet = true;
}

bool OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties::is_enable_ip_forwarding_Set() const{
    return m_enable_ip_forwarding_isSet;
}

bool OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties::is_enable_ip_forwarding_Valid() const{
    return m_enable_ip_forwarding_isValid;
}

QList<OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_applicationGatewayBackendAddressPools_inner_properties_backendIPConfigurations_inner> OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties::getIpConfigurations() const {
    return m_ip_configurations;
}
void OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties::setIpConfigurations(const QList<OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_applicationGatewayBackendAddressPools_inner_properties_backendIPConfigurations_inner> &ip_configurations) {
    m_ip_configurations = ip_configurations;
    m_ip_configurations_isSet = true;
}

bool OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties::is_ip_configurations_Set() const{
    return m_ip_configurations_isSet;
}

bool OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties::is_ip_configurations_Valid() const{
    return m_ip_configurations_isValid;
}

QString OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties::getMacAddress() const {
    return m_mac_address;
}
void OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties::setMacAddress(const QString &mac_address) {
    m_mac_address = mac_address;
    m_mac_address_isSet = true;
}

bool OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties::is_mac_address_Set() const{
    return m_mac_address_isSet;
}

bool OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties::is_mac_address_Valid() const{
    return m_mac_address_isValid;
}

OAINetworkSecurityGroup OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties::getNetworkSecurityGroup() const {
    return m_network_security_group;
}
void OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties::setNetworkSecurityGroup(const OAINetworkSecurityGroup &network_security_group) {
    m_network_security_group = network_security_group;
    m_network_security_group_isSet = true;
}

bool OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties::is_network_security_group_Set() const{
    return m_network_security_group_isSet;
}

bool OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties::is_network_security_group_Valid() const{
    return m_network_security_group_isValid;
}

bool OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties::isPrimary() const {
    return m_primary;
}
void OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties::setPrimary(const bool &primary) {
    m_primary = primary;
    m_primary_isSet = true;
}

bool OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties::is_primary_Set() const{
    return m_primary_isSet;
}

bool OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties::is_primary_Valid() const{
    return m_primary_isValid;
}

QString OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties::getProvisioningState() const {
    return m_provisioning_state;
}
void OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties::setProvisioningState(const QString &provisioning_state) {
    m_provisioning_state = provisioning_state;
    m_provisioning_state_isSet = true;
}

bool OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties::is_provisioning_state_Set() const{
    return m_provisioning_state_isSet;
}

bool OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties::is_provisioning_state_Valid() const{
    return m_provisioning_state_isValid;
}

QString OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties::getResourceGuid() const {
    return m_resource_guid;
}
void OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties::setResourceGuid(const QString &resource_guid) {
    m_resource_guid = resource_guid;
    m_resource_guid_isSet = true;
}

bool OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties::is_resource_guid_Set() const{
    return m_resource_guid_isSet;
}

bool OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties::is_resource_guid_Valid() const{
    return m_resource_guid_isValid;
}

OAI0 OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties::getVirtualMachine() const {
    return m_virtual_machine;
}
void OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties::setVirtualMachine(const OAI0 &virtual_machine) {
    m_virtual_machine = virtual_machine;
    m_virtual_machine_isSet = true;
}

bool OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties::is_virtual_machine_Set() const{
    return m_virtual_machine_isSet;
}

bool OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties::is_virtual_machine_Valid() const{
    return m_virtual_machine_isValid;
}

bool OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_dns_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_enable_accelerated_networking_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enable_ip_forwarding_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ip_configurations.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_mac_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_network_security_group.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_primary_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_provisioning_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_guid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_virtual_machine.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
