/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2018-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.NetworkManagementClient);
  }
}(this, function(expect, NetworkManagementClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new NetworkManagementClient.ApplicationGatewayBackendHealthServerIpConfigurationPropertiesPublicIPAddressProperties();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ApplicationGatewayBackendHealthServerIpConfigurationPropertiesPublicIPAddressProperties', function() {
    it('should create an instance of ApplicationGatewayBackendHealthServerIpConfigurationPropertiesPublicIPAddressProperties', function() {
      // uncomment below and update the code to test ApplicationGatewayBackendHealthServerIpConfigurationPropertiesPublicIPAddressProperties
      //var instance = new NetworkManagementClient.ApplicationGatewayBackendHealthServerIpConfigurationPropertiesPublicIPAddressProperties();
      //expect(instance).to.be.a(NetworkManagementClient.ApplicationGatewayBackendHealthServerIpConfigurationPropertiesPublicIPAddressProperties);
    });

    it('should have the property dnsSettings (base name: "dnsSettings")', function() {
      // uncomment below and update the code to test the property dnsSettings
      //var instance = new NetworkManagementClient.ApplicationGatewayBackendHealthServerIpConfigurationPropertiesPublicIPAddressProperties();
      //expect(instance).to.be();
    });

    it('should have the property idleTimeoutInMinutes (base name: "idleTimeoutInMinutes")', function() {
      // uncomment below and update the code to test the property idleTimeoutInMinutes
      //var instance = new NetworkManagementClient.ApplicationGatewayBackendHealthServerIpConfigurationPropertiesPublicIPAddressProperties();
      //expect(instance).to.be();
    });

    it('should have the property ipAddress (base name: "ipAddress")', function() {
      // uncomment below and update the code to test the property ipAddress
      //var instance = new NetworkManagementClient.ApplicationGatewayBackendHealthServerIpConfigurationPropertiesPublicIPAddressProperties();
      //expect(instance).to.be();
    });

    it('should have the property ipConfiguration (base name: "ipConfiguration")', function() {
      // uncomment below and update the code to test the property ipConfiguration
      //var instance = new NetworkManagementClient.ApplicationGatewayBackendHealthServerIpConfigurationPropertiesPublicIPAddressProperties();
      //expect(instance).to.be();
    });

    it('should have the property ipTags (base name: "ipTags")', function() {
      // uncomment below and update the code to test the property ipTags
      //var instance = new NetworkManagementClient.ApplicationGatewayBackendHealthServerIpConfigurationPropertiesPublicIPAddressProperties();
      //expect(instance).to.be();
    });

    it('should have the property provisioningState (base name: "provisioningState")', function() {
      // uncomment below and update the code to test the property provisioningState
      //var instance = new NetworkManagementClient.ApplicationGatewayBackendHealthServerIpConfigurationPropertiesPublicIPAddressProperties();
      //expect(instance).to.be();
    });

    it('should have the property publicIPAddressVersion (base name: "publicIPAddressVersion")', function() {
      // uncomment below and update the code to test the property publicIPAddressVersion
      //var instance = new NetworkManagementClient.ApplicationGatewayBackendHealthServerIpConfigurationPropertiesPublicIPAddressProperties();
      //expect(instance).to.be();
    });

    it('should have the property publicIPAllocationMethod (base name: "publicIPAllocationMethod")', function() {
      // uncomment below and update the code to test the property publicIPAllocationMethod
      //var instance = new NetworkManagementClient.ApplicationGatewayBackendHealthServerIpConfigurationPropertiesPublicIPAddressProperties();
      //expect(instance).to.be();
    });

    it('should have the property resourceGuid (base name: "resourceGuid")', function() {
      // uncomment below and update the code to test the property resourceGuid
      //var instance = new NetworkManagementClient.ApplicationGatewayBackendHealthServerIpConfigurationPropertiesPublicIPAddressProperties();
      //expect(instance).to.be();
    });

  });

}));
