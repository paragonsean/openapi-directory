/*
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2018-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Allows to disable rules within a rule group or an entire rule group.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:14:22.734745-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ApplicationGatewayFirewallDisabledRuleGroup {
  public static final String SERIALIZED_NAME_RULE_GROUP_NAME = "ruleGroupName";
  @SerializedName(SERIALIZED_NAME_RULE_GROUP_NAME)
  private String ruleGroupName;

  public static final String SERIALIZED_NAME_RULES = "rules";
  @SerializedName(SERIALIZED_NAME_RULES)
  private List<Integer> rules = new ArrayList<>();

  public ApplicationGatewayFirewallDisabledRuleGroup() {
  }

  public ApplicationGatewayFirewallDisabledRuleGroup ruleGroupName(String ruleGroupName) {
    this.ruleGroupName = ruleGroupName;
    return this;
  }

  /**
   * The name of the rule group that will be disabled.
   * @return ruleGroupName
   */
  @javax.annotation.Nonnull
  public String getRuleGroupName() {
    return ruleGroupName;
  }

  public void setRuleGroupName(String ruleGroupName) {
    this.ruleGroupName = ruleGroupName;
  }


  public ApplicationGatewayFirewallDisabledRuleGroup rules(List<Integer> rules) {
    this.rules = rules;
    return this;
  }

  public ApplicationGatewayFirewallDisabledRuleGroup addRulesItem(Integer rulesItem) {
    if (this.rules == null) {
      this.rules = new ArrayList<>();
    }
    this.rules.add(rulesItem);
    return this;
  }

  /**
   * The list of rules that will be disabled. If null, all rules of the rule group will be disabled.
   * @return rules
   */
  @javax.annotation.Nullable
  public List<Integer> getRules() {
    return rules;
  }

  public void setRules(List<Integer> rules) {
    this.rules = rules;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApplicationGatewayFirewallDisabledRuleGroup applicationGatewayFirewallDisabledRuleGroup = (ApplicationGatewayFirewallDisabledRuleGroup) o;
    return Objects.equals(this.ruleGroupName, applicationGatewayFirewallDisabledRuleGroup.ruleGroupName) &&
        Objects.equals(this.rules, applicationGatewayFirewallDisabledRuleGroup.rules);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ruleGroupName, rules);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApplicationGatewayFirewallDisabledRuleGroup {\n");
    sb.append("    ruleGroupName: ").append(toIndentedString(ruleGroupName)).append("\n");
    sb.append("    rules: ").append(toIndentedString(rules)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ruleGroupName");
    openapiFields.add("rules");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("ruleGroupName");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ApplicationGatewayFirewallDisabledRuleGroup
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ApplicationGatewayFirewallDisabledRuleGroup.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ApplicationGatewayFirewallDisabledRuleGroup is not found in the empty JSON string", ApplicationGatewayFirewallDisabledRuleGroup.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ApplicationGatewayFirewallDisabledRuleGroup.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ApplicationGatewayFirewallDisabledRuleGroup` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ApplicationGatewayFirewallDisabledRuleGroup.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("ruleGroupName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ruleGroupName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ruleGroupName").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("rules") != null && !jsonObj.get("rules").isJsonNull() && !jsonObj.get("rules").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `rules` to be an array in the JSON string but got `%s`", jsonObj.get("rules").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ApplicationGatewayFirewallDisabledRuleGroup.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ApplicationGatewayFirewallDisabledRuleGroup' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ApplicationGatewayFirewallDisabledRuleGroup> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ApplicationGatewayFirewallDisabledRuleGroup.class));

       return (TypeAdapter<T>) new TypeAdapter<ApplicationGatewayFirewallDisabledRuleGroup>() {
           @Override
           public void write(JsonWriter out, ApplicationGatewayFirewallDisabledRuleGroup value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ApplicationGatewayFirewallDisabledRuleGroup read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ApplicationGatewayFirewallDisabledRuleGroup given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ApplicationGatewayFirewallDisabledRuleGroup
   * @throws IOException if the JSON string is invalid with respect to ApplicationGatewayFirewallDisabledRuleGroup
   */
  public static ApplicationGatewayFirewallDisabledRuleGroup fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ApplicationGatewayFirewallDisabledRuleGroup.class);
  }

  /**
   * Convert an instance of ApplicationGatewayFirewallDisabledRuleGroup to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

