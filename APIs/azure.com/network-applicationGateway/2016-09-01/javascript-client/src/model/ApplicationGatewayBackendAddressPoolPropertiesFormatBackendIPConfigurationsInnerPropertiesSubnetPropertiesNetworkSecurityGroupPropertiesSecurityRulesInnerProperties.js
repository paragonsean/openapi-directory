/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2016-09-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ApplicationGatewayBackendAddressPoolPropertiesFormatBackendIPConfigurationsInnerPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesSecurityRulesInnerProperties model module.
 * @module model/ApplicationGatewayBackendAddressPoolPropertiesFormatBackendIPConfigurationsInnerPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesSecurityRulesInnerProperties
 * @version 2016-09-01
 */
class ApplicationGatewayBackendAddressPoolPropertiesFormatBackendIPConfigurationsInnerPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesSecurityRulesInnerProperties {
    /**
     * Constructs a new <code>ApplicationGatewayBackendAddressPoolPropertiesFormatBackendIPConfigurationsInnerPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesSecurityRulesInnerProperties</code>.
     * @alias module:model/ApplicationGatewayBackendAddressPoolPropertiesFormatBackendIPConfigurationsInnerPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesSecurityRulesInnerProperties
     * @param access {module:model/ApplicationGatewayBackendAddressPoolPropertiesFormatBackendIPConfigurationsInnerPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesSecurityRulesInnerProperties.AccessEnum} The network traffic is allowed or denied. Possible values are: 'Allow' and 'Deny'.
     * @param destinationAddressPrefix {String} The destination address prefix. CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used.
     * @param direction {module:model/ApplicationGatewayBackendAddressPoolPropertiesFormatBackendIPConfigurationsInnerPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesSecurityRulesInnerProperties.DirectionEnum} The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic. Possible values are: 'Inbound' and 'Outbound'.
     * @param protocol {module:model/ApplicationGatewayBackendAddressPoolPropertiesFormatBackendIPConfigurationsInnerPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesSecurityRulesInnerProperties.ProtocolEnum} Network protocol this rule applies to. Possible values are 'Tcp', 'Udp', and '*'.
     * @param sourceAddressPrefix {String} The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from. 
     */
    constructor(access, destinationAddressPrefix, direction, protocol, sourceAddressPrefix) { 
        
        ApplicationGatewayBackendAddressPoolPropertiesFormatBackendIPConfigurationsInnerPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesSecurityRulesInnerProperties.initialize(this, access, destinationAddressPrefix, direction, protocol, sourceAddressPrefix);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, access, destinationAddressPrefix, direction, protocol, sourceAddressPrefix) { 
        obj['access'] = access;
        obj['destinationAddressPrefix'] = destinationAddressPrefix;
        obj['direction'] = direction;
        obj['protocol'] = protocol;
        obj['sourceAddressPrefix'] = sourceAddressPrefix;
    }

    /**
     * Constructs a <code>ApplicationGatewayBackendAddressPoolPropertiesFormatBackendIPConfigurationsInnerPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesSecurityRulesInnerProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApplicationGatewayBackendAddressPoolPropertiesFormatBackendIPConfigurationsInnerPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesSecurityRulesInnerProperties} obj Optional instance to populate.
     * @return {module:model/ApplicationGatewayBackendAddressPoolPropertiesFormatBackendIPConfigurationsInnerPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesSecurityRulesInnerProperties} The populated <code>ApplicationGatewayBackendAddressPoolPropertiesFormatBackendIPConfigurationsInnerPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesSecurityRulesInnerProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApplicationGatewayBackendAddressPoolPropertiesFormatBackendIPConfigurationsInnerPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesSecurityRulesInnerProperties();

            if (data.hasOwnProperty('access')) {
                obj['access'] = ApiClient.convertToType(data['access'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('destinationAddressPrefix')) {
                obj['destinationAddressPrefix'] = ApiClient.convertToType(data['destinationAddressPrefix'], 'String');
            }
            if (data.hasOwnProperty('destinationPortRange')) {
                obj['destinationPortRange'] = ApiClient.convertToType(data['destinationPortRange'], 'String');
            }
            if (data.hasOwnProperty('direction')) {
                obj['direction'] = ApiClient.convertToType(data['direction'], 'String');
            }
            if (data.hasOwnProperty('priority')) {
                obj['priority'] = ApiClient.convertToType(data['priority'], 'Number');
            }
            if (data.hasOwnProperty('protocol')) {
                obj['protocol'] = ApiClient.convertToType(data['protocol'], 'String');
            }
            if (data.hasOwnProperty('provisioningState')) {
                obj['provisioningState'] = ApiClient.convertToType(data['provisioningState'], 'String');
            }
            if (data.hasOwnProperty('sourceAddressPrefix')) {
                obj['sourceAddressPrefix'] = ApiClient.convertToType(data['sourceAddressPrefix'], 'String');
            }
            if (data.hasOwnProperty('sourcePortRange')) {
                obj['sourcePortRange'] = ApiClient.convertToType(data['sourcePortRange'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ApplicationGatewayBackendAddressPoolPropertiesFormatBackendIPConfigurationsInnerPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesSecurityRulesInnerProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ApplicationGatewayBackendAddressPoolPropertiesFormatBackendIPConfigurationsInnerPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesSecurityRulesInnerProperties</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ApplicationGatewayBackendAddressPoolPropertiesFormatBackendIPConfigurationsInnerPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesSecurityRulesInnerProperties.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['access'] && !(typeof data['access'] === 'string' || data['access'] instanceof String)) {
            throw new Error("Expected the field `access` to be a primitive type in the JSON string but got " + data['access']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['destinationAddressPrefix'] && !(typeof data['destinationAddressPrefix'] === 'string' || data['destinationAddressPrefix'] instanceof String)) {
            throw new Error("Expected the field `destinationAddressPrefix` to be a primitive type in the JSON string but got " + data['destinationAddressPrefix']);
        }
        // ensure the json data is a string
        if (data['destinationPortRange'] && !(typeof data['destinationPortRange'] === 'string' || data['destinationPortRange'] instanceof String)) {
            throw new Error("Expected the field `destinationPortRange` to be a primitive type in the JSON string but got " + data['destinationPortRange']);
        }
        // ensure the json data is a string
        if (data['direction'] && !(typeof data['direction'] === 'string' || data['direction'] instanceof String)) {
            throw new Error("Expected the field `direction` to be a primitive type in the JSON string but got " + data['direction']);
        }
        // ensure the json data is a string
        if (data['protocol'] && !(typeof data['protocol'] === 'string' || data['protocol'] instanceof String)) {
            throw new Error("Expected the field `protocol` to be a primitive type in the JSON string but got " + data['protocol']);
        }
        // ensure the json data is a string
        if (data['provisioningState'] && !(typeof data['provisioningState'] === 'string' || data['provisioningState'] instanceof String)) {
            throw new Error("Expected the field `provisioningState` to be a primitive type in the JSON string but got " + data['provisioningState']);
        }
        // ensure the json data is a string
        if (data['sourceAddressPrefix'] && !(typeof data['sourceAddressPrefix'] === 'string' || data['sourceAddressPrefix'] instanceof String)) {
            throw new Error("Expected the field `sourceAddressPrefix` to be a primitive type in the JSON string but got " + data['sourceAddressPrefix']);
        }
        // ensure the json data is a string
        if (data['sourcePortRange'] && !(typeof data['sourcePortRange'] === 'string' || data['sourcePortRange'] instanceof String)) {
            throw new Error("Expected the field `sourcePortRange` to be a primitive type in the JSON string but got " + data['sourcePortRange']);
        }

        return true;
    }


}

ApplicationGatewayBackendAddressPoolPropertiesFormatBackendIPConfigurationsInnerPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesSecurityRulesInnerProperties.RequiredProperties = ["access", "destinationAddressPrefix", "direction", "protocol", "sourceAddressPrefix"];

/**
 * The network traffic is allowed or denied. Possible values are: 'Allow' and 'Deny'.
 * @member {module:model/ApplicationGatewayBackendAddressPoolPropertiesFormatBackendIPConfigurationsInnerPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesSecurityRulesInnerProperties.AccessEnum} access
 */
ApplicationGatewayBackendAddressPoolPropertiesFormatBackendIPConfigurationsInnerPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesSecurityRulesInnerProperties.prototype['access'] = undefined;

/**
 * A description for this rule. Restricted to 140 chars.
 * @member {String} description
 */
ApplicationGatewayBackendAddressPoolPropertiesFormatBackendIPConfigurationsInnerPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesSecurityRulesInnerProperties.prototype['description'] = undefined;

/**
 * The destination address prefix. CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used.
 * @member {String} destinationAddressPrefix
 */
ApplicationGatewayBackendAddressPoolPropertiesFormatBackendIPConfigurationsInnerPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesSecurityRulesInnerProperties.prototype['destinationAddressPrefix'] = undefined;

/**
 * The destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
 * @member {String} destinationPortRange
 */
ApplicationGatewayBackendAddressPoolPropertiesFormatBackendIPConfigurationsInnerPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesSecurityRulesInnerProperties.prototype['destinationPortRange'] = undefined;

/**
 * The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic. Possible values are: 'Inbound' and 'Outbound'.
 * @member {module:model/ApplicationGatewayBackendAddressPoolPropertiesFormatBackendIPConfigurationsInnerPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesSecurityRulesInnerProperties.DirectionEnum} direction
 */
ApplicationGatewayBackendAddressPoolPropertiesFormatBackendIPConfigurationsInnerPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesSecurityRulesInnerProperties.prototype['direction'] = undefined;

/**
 * The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
 * @member {Number} priority
 */
ApplicationGatewayBackendAddressPoolPropertiesFormatBackendIPConfigurationsInnerPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesSecurityRulesInnerProperties.prototype['priority'] = undefined;

/**
 * Network protocol this rule applies to. Possible values are 'Tcp', 'Udp', and '*'.
 * @member {module:model/ApplicationGatewayBackendAddressPoolPropertiesFormatBackendIPConfigurationsInnerPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesSecurityRulesInnerProperties.ProtocolEnum} protocol
 */
ApplicationGatewayBackendAddressPoolPropertiesFormatBackendIPConfigurationsInnerPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesSecurityRulesInnerProperties.prototype['protocol'] = undefined;

/**
 * The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
 * @member {String} provisioningState
 */
ApplicationGatewayBackendAddressPoolPropertiesFormatBackendIPConfigurationsInnerPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesSecurityRulesInnerProperties.prototype['provisioningState'] = undefined;

/**
 * The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from. 
 * @member {String} sourceAddressPrefix
 */
ApplicationGatewayBackendAddressPoolPropertiesFormatBackendIPConfigurationsInnerPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesSecurityRulesInnerProperties.prototype['sourceAddressPrefix'] = undefined;

/**
 * The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
 * @member {String} sourcePortRange
 */
ApplicationGatewayBackendAddressPoolPropertiesFormatBackendIPConfigurationsInnerPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesSecurityRulesInnerProperties.prototype['sourcePortRange'] = undefined;





/**
 * Allowed values for the <code>access</code> property.
 * @enum {String}
 * @readonly
 */
ApplicationGatewayBackendAddressPoolPropertiesFormatBackendIPConfigurationsInnerPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesSecurityRulesInnerProperties['AccessEnum'] = {

    /**
     * value: "Allow"
     * @const
     */
    "Allow": "Allow",

    /**
     * value: "Deny"
     * @const
     */
    "Deny": "Deny"
};


/**
 * Allowed values for the <code>direction</code> property.
 * @enum {String}
 * @readonly
 */
ApplicationGatewayBackendAddressPoolPropertiesFormatBackendIPConfigurationsInnerPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesSecurityRulesInnerProperties['DirectionEnum'] = {

    /**
     * value: "Inbound"
     * @const
     */
    "Inbound": "Inbound",

    /**
     * value: "Outbound"
     * @const
     */
    "Outbound": "Outbound"
};


/**
 * Allowed values for the <code>protocol</code> property.
 * @enum {String}
 * @readonly
 */
ApplicationGatewayBackendAddressPoolPropertiesFormatBackendIPConfigurationsInnerPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesSecurityRulesInnerProperties['ProtocolEnum'] = {

    /**
     * value: "Tcp"
     * @const
     */
    "Tcp": "Tcp",

    /**
     * value: "Udp"
     * @const
     */
    "Udp": "Udp",

    /**
     * value: "*"
     * @const
     */
    "STAR": "*"
};



export default ApplicationGatewayBackendAddressPoolPropertiesFormatBackendIPConfigurationsInnerPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesSecurityRulesInnerProperties;

