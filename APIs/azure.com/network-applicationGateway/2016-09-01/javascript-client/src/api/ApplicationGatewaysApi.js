/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2016-09-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ApplicationGateway from '../model/ApplicationGateway';
import ApplicationGatewayBackendHealth from '../model/ApplicationGatewayBackendHealth';
import ApplicationGatewayListResult from '../model/ApplicationGatewayListResult';

/**
* ApplicationGateways service.
* @module api/ApplicationGatewaysApi
* @version 2016-09-01
*/
export default class ApplicationGatewaysApi {

    /**
    * Constructs a new ApplicationGatewaysApi. 
    * @alias module:api/ApplicationGatewaysApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the applicationGatewaysBackendHealth operation.
     * @callback module:api/ApplicationGatewaysApi~applicationGatewaysBackendHealthCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApplicationGatewayBackendHealth} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the backend health of the specified application gateway in a resource group.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} applicationGatewayName The name of the application gateway.
     * @param {String} apiVersion Client API version.
     * @param {String} subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {Object} opts Optional parameters
     * @param {String} [expand] Expands BackendAddressPool and BackendHttpSettings referenced in backend health.
     * @param {module:api/ApplicationGatewaysApi~applicationGatewaysBackendHealthCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApplicationGatewayBackendHealth}
     */
    applicationGatewaysBackendHealth(resourceGroupName, applicationGatewayName, apiVersion, subscriptionId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling applicationGatewaysBackendHealth");
      }
      // verify the required parameter 'applicationGatewayName' is set
      if (applicationGatewayName === undefined || applicationGatewayName === null) {
        throw new Error("Missing the required parameter 'applicationGatewayName' when calling applicationGatewaysBackendHealth");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling applicationGatewaysBackendHealth");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling applicationGatewaysBackendHealth");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'applicationGatewayName': applicationGatewayName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion,
        '$expand': opts['expand']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json'];
      let returnType = ApplicationGatewayBackendHealth;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}/backendhealth', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the applicationGatewaysCreateOrUpdate operation.
     * @callback module:api/ApplicationGatewaysApi~applicationGatewaysCreateOrUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApplicationGateway} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates or updates the specified application gateway.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} applicationGatewayName The name of the application gateway.
     * @param {String} apiVersion Client API version.
     * @param {String} subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:model/ApplicationGateway} parameters Parameters supplied to the create or update application gateway operation.
     * @param {module:api/ApplicationGatewaysApi~applicationGatewaysCreateOrUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApplicationGateway}
     */
    applicationGatewaysCreateOrUpdate(resourceGroupName, applicationGatewayName, apiVersion, subscriptionId, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling applicationGatewaysCreateOrUpdate");
      }
      // verify the required parameter 'applicationGatewayName' is set
      if (applicationGatewayName === undefined || applicationGatewayName === null) {
        throw new Error("Missing the required parameter 'applicationGatewayName' when calling applicationGatewaysCreateOrUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling applicationGatewaysCreateOrUpdate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling applicationGatewaysCreateOrUpdate");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling applicationGatewaysCreateOrUpdate");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'applicationGatewayName': applicationGatewayName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json', 'text/json'];
      let accepts = ['application/json', 'text/json'];
      let returnType = ApplicationGateway;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the applicationGatewaysDelete operation.
     * @callback module:api/ApplicationGatewaysApi~applicationGatewaysDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes the specified application gateway.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} applicationGatewayName The name of the application gateway.
     * @param {String} apiVersion Client API version.
     * @param {String} subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/ApplicationGatewaysApi~applicationGatewaysDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    applicationGatewaysDelete(resourceGroupName, applicationGatewayName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling applicationGatewaysDelete");
      }
      // verify the required parameter 'applicationGatewayName' is set
      if (applicationGatewayName === undefined || applicationGatewayName === null) {
        throw new Error("Missing the required parameter 'applicationGatewayName' when calling applicationGatewaysDelete");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling applicationGatewaysDelete");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling applicationGatewaysDelete");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'applicationGatewayName': applicationGatewayName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the applicationGatewaysGet operation.
     * @callback module:api/ApplicationGatewaysApi~applicationGatewaysGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApplicationGateway} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the specified application gateway.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} applicationGatewayName The name of the application gateway.
     * @param {String} apiVersion Client API version.
     * @param {String} subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/ApplicationGatewaysApi~applicationGatewaysGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApplicationGateway}
     */
    applicationGatewaysGet(resourceGroupName, applicationGatewayName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling applicationGatewaysGet");
      }
      // verify the required parameter 'applicationGatewayName' is set
      if (applicationGatewayName === undefined || applicationGatewayName === null) {
        throw new Error("Missing the required parameter 'applicationGatewayName' when calling applicationGatewaysGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling applicationGatewaysGet");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling applicationGatewaysGet");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'applicationGatewayName': applicationGatewayName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json'];
      let returnType = ApplicationGateway;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the applicationGatewaysList operation.
     * @callback module:api/ApplicationGatewaysApi~applicationGatewaysListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApplicationGatewayListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists all application gateways in a resource group.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} apiVersion Client API version.
     * @param {String} subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/ApplicationGatewaysApi~applicationGatewaysListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApplicationGatewayListResult}
     */
    applicationGatewaysList(resourceGroupName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling applicationGatewaysList");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling applicationGatewaysList");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling applicationGatewaysList");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json'];
      let returnType = ApplicationGatewayListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the applicationGatewaysListAll operation.
     * @callback module:api/ApplicationGatewaysApi~applicationGatewaysListAllCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApplicationGatewayListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets all the application gateways in a subscription.
     * @param {String} apiVersion Client API version.
     * @param {String} subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/ApplicationGatewaysApi~applicationGatewaysListAllCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApplicationGatewayListResult}
     */
    applicationGatewaysListAll(apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling applicationGatewaysListAll");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling applicationGatewaysListAll");
      }

      let pathParams = {
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json'];
      let returnType = ApplicationGatewayListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.Network/applicationGateways', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the applicationGatewaysStart operation.
     * @callback module:api/ApplicationGatewaysApi~applicationGatewaysStartCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Starts the specified application gateway.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} applicationGatewayName The name of the application gateway.
     * @param {String} apiVersion Client API version.
     * @param {String} subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/ApplicationGatewaysApi~applicationGatewaysStartCallback} callback The callback function, accepting three arguments: error, data, response
     */
    applicationGatewaysStart(resourceGroupName, applicationGatewayName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling applicationGatewaysStart");
      }
      // verify the required parameter 'applicationGatewayName' is set
      if (applicationGatewayName === undefined || applicationGatewayName === null) {
        throw new Error("Missing the required parameter 'applicationGatewayName' when calling applicationGatewaysStart");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling applicationGatewaysStart");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling applicationGatewaysStart");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'applicationGatewayName': applicationGatewayName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}/start', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the applicationGatewaysStop operation.
     * @callback module:api/ApplicationGatewaysApi~applicationGatewaysStopCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Stops the specified application gateway in a resource group.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} applicationGatewayName The name of the application gateway.
     * @param {String} apiVersion Client API version.
     * @param {String} subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/ApplicationGatewaysApi~applicationGatewaysStopCallback} callback The callback function, accepting three arguments: error, data, response
     */
    applicationGatewaysStop(resourceGroupName, applicationGatewayName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling applicationGatewaysStop");
      }
      // verify the required parameter 'applicationGatewayName' is set
      if (applicationGatewayName === undefined || applicationGatewayName === null) {
        throw new Error("Missing the required parameter 'applicationGatewayName' when calling applicationGatewaysStop");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling applicationGatewaysStop");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling applicationGatewaysStop");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'applicationGatewayName': applicationGatewayName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}/stop', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
