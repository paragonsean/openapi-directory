/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2016-09-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_publicIPAddress_properties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_publicIPAddress_properties::OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_publicIPAddress_properties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_publicIPAddress_properties::OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_publicIPAddress_properties() {
    this->initializeModel();
}

OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_publicIPAddress_properties::~OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_publicIPAddress_properties() {}

void OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_publicIPAddress_properties::initializeModel() {

    m_dns_settings_isSet = false;
    m_dns_settings_isValid = false;

    m_idle_timeout_in_minutes_isSet = false;
    m_idle_timeout_in_minutes_isValid = false;

    m_ip_address_isSet = false;
    m_ip_address_isValid = false;

    m_ip_configuration_isSet = false;
    m_ip_configuration_isValid = false;

    m_provisioning_state_isSet = false;
    m_provisioning_state_isValid = false;

    m_public_ip_address_version_isSet = false;
    m_public_ip_address_version_isValid = false;

    m_public_ip_allocation_method_isSet = false;
    m_public_ip_allocation_method_isValid = false;

    m_resource_guid_isSet = false;
    m_resource_guid_isValid = false;
}

void OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_publicIPAddress_properties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_publicIPAddress_properties::fromJsonObject(QJsonObject json) {

    m_dns_settings_isValid = ::OpenAPI::fromJsonValue(m_dns_settings, json[QString("dnsSettings")]);
    m_dns_settings_isSet = !json[QString("dnsSettings")].isNull() && m_dns_settings_isValid;

    m_idle_timeout_in_minutes_isValid = ::OpenAPI::fromJsonValue(m_idle_timeout_in_minutes, json[QString("idleTimeoutInMinutes")]);
    m_idle_timeout_in_minutes_isSet = !json[QString("idleTimeoutInMinutes")].isNull() && m_idle_timeout_in_minutes_isValid;

    m_ip_address_isValid = ::OpenAPI::fromJsonValue(m_ip_address, json[QString("ipAddress")]);
    m_ip_address_isSet = !json[QString("ipAddress")].isNull() && m_ip_address_isValid;

    m_ip_configuration_isValid = ::OpenAPI::fromJsonValue(m_ip_configuration, json[QString("ipConfiguration")]);
    m_ip_configuration_isSet = !json[QString("ipConfiguration")].isNull() && m_ip_configuration_isValid;

    m_provisioning_state_isValid = ::OpenAPI::fromJsonValue(m_provisioning_state, json[QString("provisioningState")]);
    m_provisioning_state_isSet = !json[QString("provisioningState")].isNull() && m_provisioning_state_isValid;

    m_public_ip_address_version_isValid = ::OpenAPI::fromJsonValue(m_public_ip_address_version, json[QString("publicIPAddressVersion")]);
    m_public_ip_address_version_isSet = !json[QString("publicIPAddressVersion")].isNull() && m_public_ip_address_version_isValid;

    m_public_ip_allocation_method_isValid = ::OpenAPI::fromJsonValue(m_public_ip_allocation_method, json[QString("publicIPAllocationMethod")]);
    m_public_ip_allocation_method_isSet = !json[QString("publicIPAllocationMethod")].isNull() && m_public_ip_allocation_method_isValid;

    m_resource_guid_isValid = ::OpenAPI::fromJsonValue(m_resource_guid, json[QString("resourceGuid")]);
    m_resource_guid_isSet = !json[QString("resourceGuid")].isNull() && m_resource_guid_isValid;
}

QString OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_publicIPAddress_properties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_publicIPAddress_properties::asJsonObject() const {
    QJsonObject obj;
    if (m_dns_settings.isSet()) {
        obj.insert(QString("dnsSettings"), ::OpenAPI::toJsonValue(m_dns_settings));
    }
    if (m_idle_timeout_in_minutes_isSet) {
        obj.insert(QString("idleTimeoutInMinutes"), ::OpenAPI::toJsonValue(m_idle_timeout_in_minutes));
    }
    if (m_ip_address_isSet) {
        obj.insert(QString("ipAddress"), ::OpenAPI::toJsonValue(m_ip_address));
    }
    if (m_ip_configuration.isSet()) {
        obj.insert(QString("ipConfiguration"), ::OpenAPI::toJsonValue(m_ip_configuration));
    }
    if (m_provisioning_state_isSet) {
        obj.insert(QString("provisioningState"), ::OpenAPI::toJsonValue(m_provisioning_state));
    }
    if (m_public_ip_address_version_isSet) {
        obj.insert(QString("publicIPAddressVersion"), ::OpenAPI::toJsonValue(m_public_ip_address_version));
    }
    if (m_public_ip_allocation_method_isSet) {
        obj.insert(QString("publicIPAllocationMethod"), ::OpenAPI::toJsonValue(m_public_ip_allocation_method));
    }
    if (m_resource_guid_isSet) {
        obj.insert(QString("resourceGuid"), ::OpenAPI::toJsonValue(m_resource_guid));
    }
    return obj;
}

OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_publicIPAddress_properties_dnsSettings OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_publicIPAddress_properties::getDnsSettings() const {
    return m_dns_settings;
}
void OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_publicIPAddress_properties::setDnsSettings(const OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_publicIPAddress_properties_dnsSettings &dns_settings) {
    m_dns_settings = dns_settings;
    m_dns_settings_isSet = true;
}

bool OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_publicIPAddress_properties::is_dns_settings_Set() const{
    return m_dns_settings_isSet;
}

bool OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_publicIPAddress_properties::is_dns_settings_Valid() const{
    return m_dns_settings_isValid;
}

qint32 OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_publicIPAddress_properties::getIdleTimeoutInMinutes() const {
    return m_idle_timeout_in_minutes;
}
void OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_publicIPAddress_properties::setIdleTimeoutInMinutes(const qint32 &idle_timeout_in_minutes) {
    m_idle_timeout_in_minutes = idle_timeout_in_minutes;
    m_idle_timeout_in_minutes_isSet = true;
}

bool OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_publicIPAddress_properties::is_idle_timeout_in_minutes_Set() const{
    return m_idle_timeout_in_minutes_isSet;
}

bool OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_publicIPAddress_properties::is_idle_timeout_in_minutes_Valid() const{
    return m_idle_timeout_in_minutes_isValid;
}

QString OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_publicIPAddress_properties::getIpAddress() const {
    return m_ip_address;
}
void OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_publicIPAddress_properties::setIpAddress(const QString &ip_address) {
    m_ip_address = ip_address;
    m_ip_address_isSet = true;
}

bool OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_publicIPAddress_properties::is_ip_address_Set() const{
    return m_ip_address_isSet;
}

bool OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_publicIPAddress_properties::is_ip_address_Valid() const{
    return m_ip_address_isValid;
}

OAIItems OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_publicIPAddress_properties::getIpConfiguration() const {
    return m_ip_configuration;
}
void OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_publicIPAddress_properties::setIpConfiguration(const OAIItems &ip_configuration) {
    m_ip_configuration = ip_configuration;
    m_ip_configuration_isSet = true;
}

bool OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_publicIPAddress_properties::is_ip_configuration_Set() const{
    return m_ip_configuration_isSet;
}

bool OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_publicIPAddress_properties::is_ip_configuration_Valid() const{
    return m_ip_configuration_isValid;
}

QString OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_publicIPAddress_properties::getProvisioningState() const {
    return m_provisioning_state;
}
void OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_publicIPAddress_properties::setProvisioningState(const QString &provisioning_state) {
    m_provisioning_state = provisioning_state;
    m_provisioning_state_isSet = true;
}

bool OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_publicIPAddress_properties::is_provisioning_state_Set() const{
    return m_provisioning_state_isSet;
}

bool OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_publicIPAddress_properties::is_provisioning_state_Valid() const{
    return m_provisioning_state_isValid;
}

QString OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_publicIPAddress_properties::getPublicIpAddressVersion() const {
    return m_public_ip_address_version;
}
void OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_publicIPAddress_properties::setPublicIpAddressVersion(const QString &public_ip_address_version) {
    m_public_ip_address_version = public_ip_address_version;
    m_public_ip_address_version_isSet = true;
}

bool OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_publicIPAddress_properties::is_public_ip_address_version_Set() const{
    return m_public_ip_address_version_isSet;
}

bool OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_publicIPAddress_properties::is_public_ip_address_version_Valid() const{
    return m_public_ip_address_version_isValid;
}

QString OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_publicIPAddress_properties::getPublicIpAllocationMethod() const {
    return m_public_ip_allocation_method;
}
void OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_publicIPAddress_properties::setPublicIpAllocationMethod(const QString &public_ip_allocation_method) {
    m_public_ip_allocation_method = public_ip_allocation_method;
    m_public_ip_allocation_method_isSet = true;
}

bool OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_publicIPAddress_properties::is_public_ip_allocation_method_Set() const{
    return m_public_ip_allocation_method_isSet;
}

bool OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_publicIPAddress_properties::is_public_ip_allocation_method_Valid() const{
    return m_public_ip_allocation_method_isValid;
}

QString OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_publicIPAddress_properties::getResourceGuid() const {
    return m_resource_guid;
}
void OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_publicIPAddress_properties::setResourceGuid(const QString &resource_guid) {
    m_resource_guid = resource_guid;
    m_resource_guid_isSet = true;
}

bool OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_publicIPAddress_properties::is_resource_guid_Set() const{
    return m_resource_guid_isSet;
}

bool OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_publicIPAddress_properties::is_resource_guid_Valid() const{
    return m_resource_guid_isValid;
}

bool OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_publicIPAddress_properties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_dns_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_idle_timeout_in_minutes_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ip_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ip_configuration.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_provisioning_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_public_ip_address_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_public_ip_allocation_method_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_guid_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_publicIPAddress_properties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
