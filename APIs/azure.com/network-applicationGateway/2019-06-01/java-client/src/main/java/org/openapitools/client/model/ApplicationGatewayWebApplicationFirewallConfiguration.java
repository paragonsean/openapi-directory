/*
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ApplicationGatewayFirewallDisabledRuleGroup;
import org.openapitools.client.model.ApplicationGatewayFirewallExclusion;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Application gateway web application firewall configuration.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:13:58.775570-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ApplicationGatewayWebApplicationFirewallConfiguration {
  public static final String SERIALIZED_NAME_DISABLED_RULE_GROUPS = "disabledRuleGroups";
  @SerializedName(SERIALIZED_NAME_DISABLED_RULE_GROUPS)
  private List<ApplicationGatewayFirewallDisabledRuleGroup> disabledRuleGroups = new ArrayList<>();

  public static final String SERIALIZED_NAME_ENABLED = "enabled";
  @SerializedName(SERIALIZED_NAME_ENABLED)
  private Boolean enabled;

  public static final String SERIALIZED_NAME_EXCLUSIONS = "exclusions";
  @SerializedName(SERIALIZED_NAME_EXCLUSIONS)
  private List<ApplicationGatewayFirewallExclusion> exclusions = new ArrayList<>();

  public static final String SERIALIZED_NAME_FILE_UPLOAD_LIMIT_IN_MB = "fileUploadLimitInMb";
  @SerializedName(SERIALIZED_NAME_FILE_UPLOAD_LIMIT_IN_MB)
  private Integer fileUploadLimitInMb;

  /**
   * Web application firewall mode.
   */
  @JsonAdapter(FirewallModeEnum.Adapter.class)
  public enum FirewallModeEnum {
    DETECTION("Detection"),
    
    PREVENTION("Prevention");

    private String value;

    FirewallModeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static FirewallModeEnum fromValue(String value) {
      for (FirewallModeEnum b : FirewallModeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<FirewallModeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final FirewallModeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public FirewallModeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return FirewallModeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      FirewallModeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_FIREWALL_MODE = "firewallMode";
  @SerializedName(SERIALIZED_NAME_FIREWALL_MODE)
  private FirewallModeEnum firewallMode;

  public static final String SERIALIZED_NAME_MAX_REQUEST_BODY_SIZE = "maxRequestBodySize";
  @SerializedName(SERIALIZED_NAME_MAX_REQUEST_BODY_SIZE)
  private Integer maxRequestBodySize;

  public static final String SERIALIZED_NAME_MAX_REQUEST_BODY_SIZE_IN_KB = "maxRequestBodySizeInKb";
  @SerializedName(SERIALIZED_NAME_MAX_REQUEST_BODY_SIZE_IN_KB)
  private Integer maxRequestBodySizeInKb;

  public static final String SERIALIZED_NAME_REQUEST_BODY_CHECK = "requestBodyCheck";
  @SerializedName(SERIALIZED_NAME_REQUEST_BODY_CHECK)
  private Boolean requestBodyCheck;

  public static final String SERIALIZED_NAME_RULE_SET_TYPE = "ruleSetType";
  @SerializedName(SERIALIZED_NAME_RULE_SET_TYPE)
  private String ruleSetType;

  public static final String SERIALIZED_NAME_RULE_SET_VERSION = "ruleSetVersion";
  @SerializedName(SERIALIZED_NAME_RULE_SET_VERSION)
  private String ruleSetVersion;

  public ApplicationGatewayWebApplicationFirewallConfiguration() {
  }

  public ApplicationGatewayWebApplicationFirewallConfiguration disabledRuleGroups(List<ApplicationGatewayFirewallDisabledRuleGroup> disabledRuleGroups) {
    this.disabledRuleGroups = disabledRuleGroups;
    return this;
  }

  public ApplicationGatewayWebApplicationFirewallConfiguration addDisabledRuleGroupsItem(ApplicationGatewayFirewallDisabledRuleGroup disabledRuleGroupsItem) {
    if (this.disabledRuleGroups == null) {
      this.disabledRuleGroups = new ArrayList<>();
    }
    this.disabledRuleGroups.add(disabledRuleGroupsItem);
    return this;
  }

  /**
   * The disabled rule groups.
   * @return disabledRuleGroups
   */
  @javax.annotation.Nullable
  public List<ApplicationGatewayFirewallDisabledRuleGroup> getDisabledRuleGroups() {
    return disabledRuleGroups;
  }

  public void setDisabledRuleGroups(List<ApplicationGatewayFirewallDisabledRuleGroup> disabledRuleGroups) {
    this.disabledRuleGroups = disabledRuleGroups;
  }


  public ApplicationGatewayWebApplicationFirewallConfiguration enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

  /**
   * Whether the web application firewall is enabled or not.
   * @return enabled
   */
  @javax.annotation.Nonnull
  public Boolean getEnabled() {
    return enabled;
  }

  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }


  public ApplicationGatewayWebApplicationFirewallConfiguration exclusions(List<ApplicationGatewayFirewallExclusion> exclusions) {
    this.exclusions = exclusions;
    return this;
  }

  public ApplicationGatewayWebApplicationFirewallConfiguration addExclusionsItem(ApplicationGatewayFirewallExclusion exclusionsItem) {
    if (this.exclusions == null) {
      this.exclusions = new ArrayList<>();
    }
    this.exclusions.add(exclusionsItem);
    return this;
  }

  /**
   * The exclusion list.
   * @return exclusions
   */
  @javax.annotation.Nullable
  public List<ApplicationGatewayFirewallExclusion> getExclusions() {
    return exclusions;
  }

  public void setExclusions(List<ApplicationGatewayFirewallExclusion> exclusions) {
    this.exclusions = exclusions;
  }


  public ApplicationGatewayWebApplicationFirewallConfiguration fileUploadLimitInMb(Integer fileUploadLimitInMb) {
    this.fileUploadLimitInMb = fileUploadLimitInMb;
    return this;
  }

  /**
   * Maximum file upload size in Mb for WAF.
   * minimum: 0
   * @return fileUploadLimitInMb
   */
  @javax.annotation.Nullable
  public Integer getFileUploadLimitInMb() {
    return fileUploadLimitInMb;
  }

  public void setFileUploadLimitInMb(Integer fileUploadLimitInMb) {
    this.fileUploadLimitInMb = fileUploadLimitInMb;
  }


  public ApplicationGatewayWebApplicationFirewallConfiguration firewallMode(FirewallModeEnum firewallMode) {
    this.firewallMode = firewallMode;
    return this;
  }

  /**
   * Web application firewall mode.
   * @return firewallMode
   */
  @javax.annotation.Nonnull
  public FirewallModeEnum getFirewallMode() {
    return firewallMode;
  }

  public void setFirewallMode(FirewallModeEnum firewallMode) {
    this.firewallMode = firewallMode;
  }


  public ApplicationGatewayWebApplicationFirewallConfiguration maxRequestBodySize(Integer maxRequestBodySize) {
    this.maxRequestBodySize = maxRequestBodySize;
    return this;
  }

  /**
   * Maximum request body size for WAF.
   * minimum: 8
   * maximum: 128
   * @return maxRequestBodySize
   */
  @javax.annotation.Nullable
  public Integer getMaxRequestBodySize() {
    return maxRequestBodySize;
  }

  public void setMaxRequestBodySize(Integer maxRequestBodySize) {
    this.maxRequestBodySize = maxRequestBodySize;
  }


  public ApplicationGatewayWebApplicationFirewallConfiguration maxRequestBodySizeInKb(Integer maxRequestBodySizeInKb) {
    this.maxRequestBodySizeInKb = maxRequestBodySizeInKb;
    return this;
  }

  /**
   * Maximum request body size in Kb for WAF.
   * minimum: 8
   * maximum: 128
   * @return maxRequestBodySizeInKb
   */
  @javax.annotation.Nullable
  public Integer getMaxRequestBodySizeInKb() {
    return maxRequestBodySizeInKb;
  }

  public void setMaxRequestBodySizeInKb(Integer maxRequestBodySizeInKb) {
    this.maxRequestBodySizeInKb = maxRequestBodySizeInKb;
  }


  public ApplicationGatewayWebApplicationFirewallConfiguration requestBodyCheck(Boolean requestBodyCheck) {
    this.requestBodyCheck = requestBodyCheck;
    return this;
  }

  /**
   * Whether allow WAF to check request Body.
   * @return requestBodyCheck
   */
  @javax.annotation.Nullable
  public Boolean getRequestBodyCheck() {
    return requestBodyCheck;
  }

  public void setRequestBodyCheck(Boolean requestBodyCheck) {
    this.requestBodyCheck = requestBodyCheck;
  }


  public ApplicationGatewayWebApplicationFirewallConfiguration ruleSetType(String ruleSetType) {
    this.ruleSetType = ruleSetType;
    return this;
  }

  /**
   * The type of the web application firewall rule set. Possible values are: &#39;OWASP&#39;.
   * @return ruleSetType
   */
  @javax.annotation.Nonnull
  public String getRuleSetType() {
    return ruleSetType;
  }

  public void setRuleSetType(String ruleSetType) {
    this.ruleSetType = ruleSetType;
  }


  public ApplicationGatewayWebApplicationFirewallConfiguration ruleSetVersion(String ruleSetVersion) {
    this.ruleSetVersion = ruleSetVersion;
    return this;
  }

  /**
   * The version of the rule set type.
   * @return ruleSetVersion
   */
  @javax.annotation.Nonnull
  public String getRuleSetVersion() {
    return ruleSetVersion;
  }

  public void setRuleSetVersion(String ruleSetVersion) {
    this.ruleSetVersion = ruleSetVersion;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApplicationGatewayWebApplicationFirewallConfiguration applicationGatewayWebApplicationFirewallConfiguration = (ApplicationGatewayWebApplicationFirewallConfiguration) o;
    return Objects.equals(this.disabledRuleGroups, applicationGatewayWebApplicationFirewallConfiguration.disabledRuleGroups) &&
        Objects.equals(this.enabled, applicationGatewayWebApplicationFirewallConfiguration.enabled) &&
        Objects.equals(this.exclusions, applicationGatewayWebApplicationFirewallConfiguration.exclusions) &&
        Objects.equals(this.fileUploadLimitInMb, applicationGatewayWebApplicationFirewallConfiguration.fileUploadLimitInMb) &&
        Objects.equals(this.firewallMode, applicationGatewayWebApplicationFirewallConfiguration.firewallMode) &&
        Objects.equals(this.maxRequestBodySize, applicationGatewayWebApplicationFirewallConfiguration.maxRequestBodySize) &&
        Objects.equals(this.maxRequestBodySizeInKb, applicationGatewayWebApplicationFirewallConfiguration.maxRequestBodySizeInKb) &&
        Objects.equals(this.requestBodyCheck, applicationGatewayWebApplicationFirewallConfiguration.requestBodyCheck) &&
        Objects.equals(this.ruleSetType, applicationGatewayWebApplicationFirewallConfiguration.ruleSetType) &&
        Objects.equals(this.ruleSetVersion, applicationGatewayWebApplicationFirewallConfiguration.ruleSetVersion);
  }

  @Override
  public int hashCode() {
    return Objects.hash(disabledRuleGroups, enabled, exclusions, fileUploadLimitInMb, firewallMode, maxRequestBodySize, maxRequestBodySizeInKb, requestBodyCheck, ruleSetType, ruleSetVersion);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApplicationGatewayWebApplicationFirewallConfiguration {\n");
    sb.append("    disabledRuleGroups: ").append(toIndentedString(disabledRuleGroups)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    exclusions: ").append(toIndentedString(exclusions)).append("\n");
    sb.append("    fileUploadLimitInMb: ").append(toIndentedString(fileUploadLimitInMb)).append("\n");
    sb.append("    firewallMode: ").append(toIndentedString(firewallMode)).append("\n");
    sb.append("    maxRequestBodySize: ").append(toIndentedString(maxRequestBodySize)).append("\n");
    sb.append("    maxRequestBodySizeInKb: ").append(toIndentedString(maxRequestBodySizeInKb)).append("\n");
    sb.append("    requestBodyCheck: ").append(toIndentedString(requestBodyCheck)).append("\n");
    sb.append("    ruleSetType: ").append(toIndentedString(ruleSetType)).append("\n");
    sb.append("    ruleSetVersion: ").append(toIndentedString(ruleSetVersion)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("disabledRuleGroups");
    openapiFields.add("enabled");
    openapiFields.add("exclusions");
    openapiFields.add("fileUploadLimitInMb");
    openapiFields.add("firewallMode");
    openapiFields.add("maxRequestBodySize");
    openapiFields.add("maxRequestBodySizeInKb");
    openapiFields.add("requestBodyCheck");
    openapiFields.add("ruleSetType");
    openapiFields.add("ruleSetVersion");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("enabled");
    openapiRequiredFields.add("firewallMode");
    openapiRequiredFields.add("ruleSetType");
    openapiRequiredFields.add("ruleSetVersion");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ApplicationGatewayWebApplicationFirewallConfiguration
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ApplicationGatewayWebApplicationFirewallConfiguration.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ApplicationGatewayWebApplicationFirewallConfiguration is not found in the empty JSON string", ApplicationGatewayWebApplicationFirewallConfiguration.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ApplicationGatewayWebApplicationFirewallConfiguration.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ApplicationGatewayWebApplicationFirewallConfiguration` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ApplicationGatewayWebApplicationFirewallConfiguration.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("disabledRuleGroups") != null && !jsonObj.get("disabledRuleGroups").isJsonNull()) {
        JsonArray jsonArraydisabledRuleGroups = jsonObj.getAsJsonArray("disabledRuleGroups");
        if (jsonArraydisabledRuleGroups != null) {
          // ensure the json data is an array
          if (!jsonObj.get("disabledRuleGroups").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `disabledRuleGroups` to be an array in the JSON string but got `%s`", jsonObj.get("disabledRuleGroups").toString()));
          }

          // validate the optional field `disabledRuleGroups` (array)
          for (int i = 0; i < jsonArraydisabledRuleGroups.size(); i++) {
            ApplicationGatewayFirewallDisabledRuleGroup.validateJsonElement(jsonArraydisabledRuleGroups.get(i));
          };
        }
      }
      if (jsonObj.get("exclusions") != null && !jsonObj.get("exclusions").isJsonNull()) {
        JsonArray jsonArrayexclusions = jsonObj.getAsJsonArray("exclusions");
        if (jsonArrayexclusions != null) {
          // ensure the json data is an array
          if (!jsonObj.get("exclusions").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `exclusions` to be an array in the JSON string but got `%s`", jsonObj.get("exclusions").toString()));
          }

          // validate the optional field `exclusions` (array)
          for (int i = 0; i < jsonArrayexclusions.size(); i++) {
            ApplicationGatewayFirewallExclusion.validateJsonElement(jsonArrayexclusions.get(i));
          };
        }
      }
      if (!jsonObj.get("firewallMode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `firewallMode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("firewallMode").toString()));
      }
      // validate the required field `firewallMode`
      FirewallModeEnum.validateJsonElement(jsonObj.get("firewallMode"));
      if (!jsonObj.get("ruleSetType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ruleSetType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ruleSetType").toString()));
      }
      if (!jsonObj.get("ruleSetVersion").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ruleSetVersion` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ruleSetVersion").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ApplicationGatewayWebApplicationFirewallConfiguration.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ApplicationGatewayWebApplicationFirewallConfiguration' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ApplicationGatewayWebApplicationFirewallConfiguration> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ApplicationGatewayWebApplicationFirewallConfiguration.class));

       return (TypeAdapter<T>) new TypeAdapter<ApplicationGatewayWebApplicationFirewallConfiguration>() {
           @Override
           public void write(JsonWriter out, ApplicationGatewayWebApplicationFirewallConfiguration value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ApplicationGatewayWebApplicationFirewallConfiguration read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ApplicationGatewayWebApplicationFirewallConfiguration given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ApplicationGatewayWebApplicationFirewallConfiguration
   * @throws IOException if the JSON string is invalid with respect to ApplicationGatewayWebApplicationFirewallConfiguration
   */
  public static ApplicationGatewayWebApplicationFirewallConfiguration fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ApplicationGatewayWebApplicationFirewallConfiguration.class);
  }

  /**
   * Convert an instance of ApplicationGatewayWebApplicationFirewallConfiguration to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

