/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2016-12-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApplicationGatewaySslPolicy.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApplicationGatewaySslPolicy::OAIApplicationGatewaySslPolicy(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApplicationGatewaySslPolicy::OAIApplicationGatewaySslPolicy() {
    this->initializeModel();
}

OAIApplicationGatewaySslPolicy::~OAIApplicationGatewaySslPolicy() {}

void OAIApplicationGatewaySslPolicy::initializeModel() {

    m_disabled_ssl_protocols_isSet = false;
    m_disabled_ssl_protocols_isValid = false;
}

void OAIApplicationGatewaySslPolicy::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIApplicationGatewaySslPolicy::fromJsonObject(QJsonObject json) {

    m_disabled_ssl_protocols_isValid = ::OpenAPI::fromJsonValue(m_disabled_ssl_protocols, json[QString("disabledSslProtocols")]);
    m_disabled_ssl_protocols_isSet = !json[QString("disabledSslProtocols")].isNull() && m_disabled_ssl_protocols_isValid;
}

QString OAIApplicationGatewaySslPolicy::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIApplicationGatewaySslPolicy::asJsonObject() const {
    QJsonObject obj;
    if (m_disabled_ssl_protocols.size() > 0) {
        obj.insert(QString("disabledSslProtocols"), ::OpenAPI::toJsonValue(m_disabled_ssl_protocols));
    }
    return obj;
}

QList<QString> OAIApplicationGatewaySslPolicy::getDisabledSslProtocols() const {
    return m_disabled_ssl_protocols;
}
void OAIApplicationGatewaySslPolicy::setDisabledSslProtocols(const QList<QString> &disabled_ssl_protocols) {
    m_disabled_ssl_protocols = disabled_ssl_protocols;
    m_disabled_ssl_protocols_isSet = true;
}

bool OAIApplicationGatewaySslPolicy::is_disabled_ssl_protocols_Set() const{
    return m_disabled_ssl_protocols_isSet;
}

bool OAIApplicationGatewaySslPolicy::is_disabled_ssl_protocols_Valid() const{
    return m_disabled_ssl_protocols_isValid;
}

bool OAIApplicationGatewaySslPolicy::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_disabled_ssl_protocols.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIApplicationGatewaySslPolicy::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
