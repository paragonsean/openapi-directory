/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2016-12-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_subnet_properties_networkSecurityGroup_properties_securityRules_inner_properties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_subnet_properties_networkSecurityGroup_properties_securityRules_inner_properties::OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_subnet_properties_networkSecurityGroup_properties_securityRules_inner_properties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_subnet_properties_networkSecurityGroup_properties_securityRules_inner_properties::OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_subnet_properties_networkSecurityGroup_properties_securityRules_inner_properties() {
    this->initializeModel();
}

OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_subnet_properties_networkSecurityGroup_properties_securityRules_inner_properties::~OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_subnet_properties_networkSecurityGroup_properties_securityRules_inner_properties() {}

void OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_subnet_properties_networkSecurityGroup_properties_securityRules_inner_properties::initializeModel() {

    m_access_isSet = false;
    m_access_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_destination_address_prefix_isSet = false;
    m_destination_address_prefix_isValid = false;

    m_destination_port_range_isSet = false;
    m_destination_port_range_isValid = false;

    m_direction_isSet = false;
    m_direction_isValid = false;

    m_priority_isSet = false;
    m_priority_isValid = false;

    m_protocol_isSet = false;
    m_protocol_isValid = false;

    m_provisioning_state_isSet = false;
    m_provisioning_state_isValid = false;

    m_source_address_prefix_isSet = false;
    m_source_address_prefix_isValid = false;

    m_source_port_range_isSet = false;
    m_source_port_range_isValid = false;
}

void OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_subnet_properties_networkSecurityGroup_properties_securityRules_inner_properties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_subnet_properties_networkSecurityGroup_properties_securityRules_inner_properties::fromJsonObject(QJsonObject json) {

    m_access_isValid = ::OpenAPI::fromJsonValue(m_access, json[QString("access")]);
    m_access_isSet = !json[QString("access")].isNull() && m_access_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_destination_address_prefix_isValid = ::OpenAPI::fromJsonValue(m_destination_address_prefix, json[QString("destinationAddressPrefix")]);
    m_destination_address_prefix_isSet = !json[QString("destinationAddressPrefix")].isNull() && m_destination_address_prefix_isValid;

    m_destination_port_range_isValid = ::OpenAPI::fromJsonValue(m_destination_port_range, json[QString("destinationPortRange")]);
    m_destination_port_range_isSet = !json[QString("destinationPortRange")].isNull() && m_destination_port_range_isValid;

    m_direction_isValid = ::OpenAPI::fromJsonValue(m_direction, json[QString("direction")]);
    m_direction_isSet = !json[QString("direction")].isNull() && m_direction_isValid;

    m_priority_isValid = ::OpenAPI::fromJsonValue(m_priority, json[QString("priority")]);
    m_priority_isSet = !json[QString("priority")].isNull() && m_priority_isValid;

    m_protocol_isValid = ::OpenAPI::fromJsonValue(m_protocol, json[QString("protocol")]);
    m_protocol_isSet = !json[QString("protocol")].isNull() && m_protocol_isValid;

    m_provisioning_state_isValid = ::OpenAPI::fromJsonValue(m_provisioning_state, json[QString("provisioningState")]);
    m_provisioning_state_isSet = !json[QString("provisioningState")].isNull() && m_provisioning_state_isValid;

    m_source_address_prefix_isValid = ::OpenAPI::fromJsonValue(m_source_address_prefix, json[QString("sourceAddressPrefix")]);
    m_source_address_prefix_isSet = !json[QString("sourceAddressPrefix")].isNull() && m_source_address_prefix_isValid;

    m_source_port_range_isValid = ::OpenAPI::fromJsonValue(m_source_port_range, json[QString("sourcePortRange")]);
    m_source_port_range_isSet = !json[QString("sourcePortRange")].isNull() && m_source_port_range_isValid;
}

QString OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_subnet_properties_networkSecurityGroup_properties_securityRules_inner_properties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_subnet_properties_networkSecurityGroup_properties_securityRules_inner_properties::asJsonObject() const {
    QJsonObject obj;
    if (m_access_isSet) {
        obj.insert(QString("access"), ::OpenAPI::toJsonValue(m_access));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_destination_address_prefix_isSet) {
        obj.insert(QString("destinationAddressPrefix"), ::OpenAPI::toJsonValue(m_destination_address_prefix));
    }
    if (m_destination_port_range_isSet) {
        obj.insert(QString("destinationPortRange"), ::OpenAPI::toJsonValue(m_destination_port_range));
    }
    if (m_direction_isSet) {
        obj.insert(QString("direction"), ::OpenAPI::toJsonValue(m_direction));
    }
    if (m_priority_isSet) {
        obj.insert(QString("priority"), ::OpenAPI::toJsonValue(m_priority));
    }
    if (m_protocol_isSet) {
        obj.insert(QString("protocol"), ::OpenAPI::toJsonValue(m_protocol));
    }
    if (m_provisioning_state_isSet) {
        obj.insert(QString("provisioningState"), ::OpenAPI::toJsonValue(m_provisioning_state));
    }
    if (m_source_address_prefix_isSet) {
        obj.insert(QString("sourceAddressPrefix"), ::OpenAPI::toJsonValue(m_source_address_prefix));
    }
    if (m_source_port_range_isSet) {
        obj.insert(QString("sourcePortRange"), ::OpenAPI::toJsonValue(m_source_port_range));
    }
    return obj;
}

QString OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_subnet_properties_networkSecurityGroup_properties_securityRules_inner_properties::getAccess() const {
    return m_access;
}
void OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_subnet_properties_networkSecurityGroup_properties_securityRules_inner_properties::setAccess(const QString &access) {
    m_access = access;
    m_access_isSet = true;
}

bool OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_subnet_properties_networkSecurityGroup_properties_securityRules_inner_properties::is_access_Set() const{
    return m_access_isSet;
}

bool OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_subnet_properties_networkSecurityGroup_properties_securityRules_inner_properties::is_access_Valid() const{
    return m_access_isValid;
}

QString OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_subnet_properties_networkSecurityGroup_properties_securityRules_inner_properties::getDescription() const {
    return m_description;
}
void OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_subnet_properties_networkSecurityGroup_properties_securityRules_inner_properties::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_subnet_properties_networkSecurityGroup_properties_securityRules_inner_properties::is_description_Set() const{
    return m_description_isSet;
}

bool OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_subnet_properties_networkSecurityGroup_properties_securityRules_inner_properties::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_subnet_properties_networkSecurityGroup_properties_securityRules_inner_properties::getDestinationAddressPrefix() const {
    return m_destination_address_prefix;
}
void OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_subnet_properties_networkSecurityGroup_properties_securityRules_inner_properties::setDestinationAddressPrefix(const QString &destination_address_prefix) {
    m_destination_address_prefix = destination_address_prefix;
    m_destination_address_prefix_isSet = true;
}

bool OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_subnet_properties_networkSecurityGroup_properties_securityRules_inner_properties::is_destination_address_prefix_Set() const{
    return m_destination_address_prefix_isSet;
}

bool OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_subnet_properties_networkSecurityGroup_properties_securityRules_inner_properties::is_destination_address_prefix_Valid() const{
    return m_destination_address_prefix_isValid;
}

QString OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_subnet_properties_networkSecurityGroup_properties_securityRules_inner_properties::getDestinationPortRange() const {
    return m_destination_port_range;
}
void OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_subnet_properties_networkSecurityGroup_properties_securityRules_inner_properties::setDestinationPortRange(const QString &destination_port_range) {
    m_destination_port_range = destination_port_range;
    m_destination_port_range_isSet = true;
}

bool OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_subnet_properties_networkSecurityGroup_properties_securityRules_inner_properties::is_destination_port_range_Set() const{
    return m_destination_port_range_isSet;
}

bool OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_subnet_properties_networkSecurityGroup_properties_securityRules_inner_properties::is_destination_port_range_Valid() const{
    return m_destination_port_range_isValid;
}

QString OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_subnet_properties_networkSecurityGroup_properties_securityRules_inner_properties::getDirection() const {
    return m_direction;
}
void OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_subnet_properties_networkSecurityGroup_properties_securityRules_inner_properties::setDirection(const QString &direction) {
    m_direction = direction;
    m_direction_isSet = true;
}

bool OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_subnet_properties_networkSecurityGroup_properties_securityRules_inner_properties::is_direction_Set() const{
    return m_direction_isSet;
}

bool OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_subnet_properties_networkSecurityGroup_properties_securityRules_inner_properties::is_direction_Valid() const{
    return m_direction_isValid;
}

qint32 OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_subnet_properties_networkSecurityGroup_properties_securityRules_inner_properties::getPriority() const {
    return m_priority;
}
void OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_subnet_properties_networkSecurityGroup_properties_securityRules_inner_properties::setPriority(const qint32 &priority) {
    m_priority = priority;
    m_priority_isSet = true;
}

bool OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_subnet_properties_networkSecurityGroup_properties_securityRules_inner_properties::is_priority_Set() const{
    return m_priority_isSet;
}

bool OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_subnet_properties_networkSecurityGroup_properties_securityRules_inner_properties::is_priority_Valid() const{
    return m_priority_isValid;
}

QString OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_subnet_properties_networkSecurityGroup_properties_securityRules_inner_properties::getProtocol() const {
    return m_protocol;
}
void OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_subnet_properties_networkSecurityGroup_properties_securityRules_inner_properties::setProtocol(const QString &protocol) {
    m_protocol = protocol;
    m_protocol_isSet = true;
}

bool OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_subnet_properties_networkSecurityGroup_properties_securityRules_inner_properties::is_protocol_Set() const{
    return m_protocol_isSet;
}

bool OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_subnet_properties_networkSecurityGroup_properties_securityRules_inner_properties::is_protocol_Valid() const{
    return m_protocol_isValid;
}

QString OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_subnet_properties_networkSecurityGroup_properties_securityRules_inner_properties::getProvisioningState() const {
    return m_provisioning_state;
}
void OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_subnet_properties_networkSecurityGroup_properties_securityRules_inner_properties::setProvisioningState(const QString &provisioning_state) {
    m_provisioning_state = provisioning_state;
    m_provisioning_state_isSet = true;
}

bool OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_subnet_properties_networkSecurityGroup_properties_securityRules_inner_properties::is_provisioning_state_Set() const{
    return m_provisioning_state_isSet;
}

bool OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_subnet_properties_networkSecurityGroup_properties_securityRules_inner_properties::is_provisioning_state_Valid() const{
    return m_provisioning_state_isValid;
}

QString OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_subnet_properties_networkSecurityGroup_properties_securityRules_inner_properties::getSourceAddressPrefix() const {
    return m_source_address_prefix;
}
void OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_subnet_properties_networkSecurityGroup_properties_securityRules_inner_properties::setSourceAddressPrefix(const QString &source_address_prefix) {
    m_source_address_prefix = source_address_prefix;
    m_source_address_prefix_isSet = true;
}

bool OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_subnet_properties_networkSecurityGroup_properties_securityRules_inner_properties::is_source_address_prefix_Set() const{
    return m_source_address_prefix_isSet;
}

bool OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_subnet_properties_networkSecurityGroup_properties_securityRules_inner_properties::is_source_address_prefix_Valid() const{
    return m_source_address_prefix_isValid;
}

QString OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_subnet_properties_networkSecurityGroup_properties_securityRules_inner_properties::getSourcePortRange() const {
    return m_source_port_range;
}
void OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_subnet_properties_networkSecurityGroup_properties_securityRules_inner_properties::setSourcePortRange(const QString &source_port_range) {
    m_source_port_range = source_port_range;
    m_source_port_range_isSet = true;
}

bool OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_subnet_properties_networkSecurityGroup_properties_securityRules_inner_properties::is_source_port_range_Set() const{
    return m_source_port_range_isSet;
}

bool OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_subnet_properties_networkSecurityGroup_properties_securityRules_inner_properties::is_source_port_range_Valid() const{
    return m_source_port_range_isValid;
}

bool OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_subnet_properties_networkSecurityGroup_properties_securityRules_inner_properties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_access_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_destination_address_prefix_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_destination_port_range_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_direction_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_priority_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_protocol_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_provisioning_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_source_address_prefix_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_source_port_range_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner_properties_subnet_properties_networkSecurityGroup_properties_securityRules_inner_properties::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_access_isValid && m_destination_address_prefix_isValid && m_direction_isValid && m_protocol_isValid && m_source_address_prefix_isValid && true;
}

} // namespace OpenAPI
