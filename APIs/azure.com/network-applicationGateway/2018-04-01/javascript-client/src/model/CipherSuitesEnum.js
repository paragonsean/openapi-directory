/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2018-04-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
/**
* Enum class CipherSuitesEnum.
* @enum {}
* @readonly
*/
export default class CipherSuitesEnum {
    
        /**
         * value: "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384"
         * @const
         */
        "ECDHE_RSA_WITH_AES_256_CBC_SHA384" = "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384";

    
        /**
         * value: "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256"
         * @const
         */
        "ECDHE_RSA_WITH_AES_128_CBC_SHA256" = "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256";

    
        /**
         * value: "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA"
         * @const
         */
        "ECDHE_RSA_WITH_AES_256_CBC_SHA" = "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA";

    
        /**
         * value: "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA"
         * @const
         */
        "ECDHE_RSA_WITH_AES_128_CBC_SHA" = "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA";

    
        /**
         * value: "TLS_DHE_RSA_WITH_AES_256_GCM_SHA384"
         * @const
         */
        "DHE_RSA_WITH_AES_256_GCM_SHA384" = "TLS_DHE_RSA_WITH_AES_256_GCM_SHA384";

    
        /**
         * value: "TLS_DHE_RSA_WITH_AES_128_GCM_SHA256"
         * @const
         */
        "DHE_RSA_WITH_AES_128_GCM_SHA256" = "TLS_DHE_RSA_WITH_AES_128_GCM_SHA256";

    
        /**
         * value: "TLS_DHE_RSA_WITH_AES_256_CBC_SHA"
         * @const
         */
        "DHE_RSA_WITH_AES_256_CBC_SHA" = "TLS_DHE_RSA_WITH_AES_256_CBC_SHA";

    
        /**
         * value: "TLS_DHE_RSA_WITH_AES_128_CBC_SHA"
         * @const
         */
        "DHE_RSA_WITH_AES_128_CBC_SHA" = "TLS_DHE_RSA_WITH_AES_128_CBC_SHA";

    
        /**
         * value: "TLS_RSA_WITH_AES_256_GCM_SHA384"
         * @const
         */
        "RSA_WITH_AES_256_GCM_SHA384" = "TLS_RSA_WITH_AES_256_GCM_SHA384";

    
        /**
         * value: "TLS_RSA_WITH_AES_128_GCM_SHA256"
         * @const
         */
        "RSA_WITH_AES_128_GCM_SHA256" = "TLS_RSA_WITH_AES_128_GCM_SHA256";

    
        /**
         * value: "TLS_RSA_WITH_AES_256_CBC_SHA256"
         * @const
         */
        "RSA_WITH_AES_256_CBC_SHA256" = "TLS_RSA_WITH_AES_256_CBC_SHA256";

    
        /**
         * value: "TLS_RSA_WITH_AES_128_CBC_SHA256"
         * @const
         */
        "RSA_WITH_AES_128_CBC_SHA256" = "TLS_RSA_WITH_AES_128_CBC_SHA256";

    
        /**
         * value: "TLS_RSA_WITH_AES_256_CBC_SHA"
         * @const
         */
        "RSA_WITH_AES_256_CBC_SHA" = "TLS_RSA_WITH_AES_256_CBC_SHA";

    
        /**
         * value: "TLS_RSA_WITH_AES_128_CBC_SHA"
         * @const
         */
        "RSA_WITH_AES_128_CBC_SHA" = "TLS_RSA_WITH_AES_128_CBC_SHA";

    
        /**
         * value: "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384"
         * @const
         */
        "ECDHE_ECDSA_WITH_AES_256_GCM_SHA384" = "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384";

    
        /**
         * value: "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256"
         * @const
         */
        "ECDHE_ECDSA_WITH_AES_128_GCM_SHA256" = "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256";

    
        /**
         * value: "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384"
         * @const
         */
        "ECDHE_ECDSA_WITH_AES_256_CBC_SHA384" = "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384";

    
        /**
         * value: "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256"
         * @const
         */
        "ECDHE_ECDSA_WITH_AES_128_CBC_SHA256" = "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256";

    
        /**
         * value: "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA"
         * @const
         */
        "ECDHE_ECDSA_WITH_AES_256_CBC_SHA" = "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA";

    
        /**
         * value: "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA"
         * @const
         */
        "ECDHE_ECDSA_WITH_AES_128_CBC_SHA" = "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA";

    
        /**
         * value: "TLS_DHE_DSS_WITH_AES_256_CBC_SHA256"
         * @const
         */
        "DHE_DSS_WITH_AES_256_CBC_SHA256" = "TLS_DHE_DSS_WITH_AES_256_CBC_SHA256";

    
        /**
         * value: "TLS_DHE_DSS_WITH_AES_128_CBC_SHA256"
         * @const
         */
        "DHE_DSS_WITH_AES_128_CBC_SHA256" = "TLS_DHE_DSS_WITH_AES_128_CBC_SHA256";

    
        /**
         * value: "TLS_DHE_DSS_WITH_AES_256_CBC_SHA"
         * @const
         */
        "DHE_DSS_WITH_AES_256_CBC_SHA" = "TLS_DHE_DSS_WITH_AES_256_CBC_SHA";

    
        /**
         * value: "TLS_DHE_DSS_WITH_AES_128_CBC_SHA"
         * @const
         */
        "DHE_DSS_WITH_AES_128_CBC_SHA" = "TLS_DHE_DSS_WITH_AES_128_CBC_SHA";

    
        /**
         * value: "TLS_RSA_WITH_3DES_EDE_CBC_SHA"
         * @const
         */
        "RSA_WITH_3DES_EDE_CBC_SHA" = "TLS_RSA_WITH_3DES_EDE_CBC_SHA";

    
        /**
         * value: "TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA"
         * @const
         */
        "DHE_DSS_WITH_3DES_EDE_CBC_SHA" = "TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA";

    
        /**
         * value: "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256"
         * @const
         */
        "ECDHE_RSA_WITH_AES_128_GCM_SHA256" = "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256";

    
        /**
         * value: "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384"
         * @const
         */
        "ECDHE_RSA_WITH_AES_256_GCM_SHA384" = "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384";

    

    /**
    * Returns a <code>CipherSuitesEnum</code> enum value from a Javascript object name.
    * @param {Object} data The plain JavaScript object containing the name of the enum value.
    * @return {module:model/CipherSuitesEnum} The enum <code>CipherSuitesEnum</code> value.
    */
    static constructFromObject(object) {
        return object;
    }
}

