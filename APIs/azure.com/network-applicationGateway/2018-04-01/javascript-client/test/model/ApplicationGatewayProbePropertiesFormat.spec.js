/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2018-04-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.NetworkManagementClient);
  }
}(this, function(expect, NetworkManagementClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new NetworkManagementClient.ApplicationGatewayProbePropertiesFormat();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ApplicationGatewayProbePropertiesFormat', function() {
    it('should create an instance of ApplicationGatewayProbePropertiesFormat', function() {
      // uncomment below and update the code to test ApplicationGatewayProbePropertiesFormat
      //var instance = new NetworkManagementClient.ApplicationGatewayProbePropertiesFormat();
      //expect(instance).to.be.a(NetworkManagementClient.ApplicationGatewayProbePropertiesFormat);
    });

    it('should have the property host (base name: "host")', function() {
      // uncomment below and update the code to test the property host
      //var instance = new NetworkManagementClient.ApplicationGatewayProbePropertiesFormat();
      //expect(instance).to.be();
    });

    it('should have the property interval (base name: "interval")', function() {
      // uncomment below and update the code to test the property interval
      //var instance = new NetworkManagementClient.ApplicationGatewayProbePropertiesFormat();
      //expect(instance).to.be();
    });

    it('should have the property match (base name: "match")', function() {
      // uncomment below and update the code to test the property match
      //var instance = new NetworkManagementClient.ApplicationGatewayProbePropertiesFormat();
      //expect(instance).to.be();
    });

    it('should have the property minServers (base name: "minServers")', function() {
      // uncomment below and update the code to test the property minServers
      //var instance = new NetworkManagementClient.ApplicationGatewayProbePropertiesFormat();
      //expect(instance).to.be();
    });

    it('should have the property path (base name: "path")', function() {
      // uncomment below and update the code to test the property path
      //var instance = new NetworkManagementClient.ApplicationGatewayProbePropertiesFormat();
      //expect(instance).to.be();
    });

    it('should have the property pickHostNameFromBackendHttpSettings (base name: "pickHostNameFromBackendHttpSettings")', function() {
      // uncomment below and update the code to test the property pickHostNameFromBackendHttpSettings
      //var instance = new NetworkManagementClient.ApplicationGatewayProbePropertiesFormat();
      //expect(instance).to.be();
    });

    it('should have the property protocol (base name: "protocol")', function() {
      // uncomment below and update the code to test the property protocol
      //var instance = new NetworkManagementClient.ApplicationGatewayProbePropertiesFormat();
      //expect(instance).to.be();
    });

    it('should have the property provisioningState (base name: "provisioningState")', function() {
      // uncomment below and update the code to test the property provisioningState
      //var instance = new NetworkManagementClient.ApplicationGatewayProbePropertiesFormat();
      //expect(instance).to.be();
    });

    it('should have the property timeout (base name: "timeout")', function() {
      // uncomment below and update the code to test the property timeout
      //var instance = new NetworkManagementClient.ApplicationGatewayProbePropertiesFormat();
      //expect(instance).to.be();
    });

    it('should have the property unhealthyThreshold (base name: "unhealthyThreshold")', function() {
      // uncomment below and update the code to test the property unhealthyThreshold
      //var instance = new NetworkManagementClient.ApplicationGatewayProbePropertiesFormat();
      //expect(instance).to.be();
    });

  });

}));
