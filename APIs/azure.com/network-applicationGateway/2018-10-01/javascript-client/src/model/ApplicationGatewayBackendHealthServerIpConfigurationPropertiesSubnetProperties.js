/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2018-10-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesDelegationsInner from './ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesDelegationsInner';
import ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesInterfaceEndpointsInner from './ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesInterfaceEndpointsInner';
import ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesIpConfigurationProfilesInner from './ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesIpConfigurationProfilesInner';
import ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesIpConfigurationsInner from './ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesIpConfigurationsInner';
import ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesNetworkSecurityGroup from './ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesNetworkSecurityGroup';
import ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesResourceNavigationLinksInner from './ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesResourceNavigationLinksInner';
import ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesRouteTable from './ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesRouteTable';
import ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesServiceAssociationLinksInner from './ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesServiceAssociationLinksInner';
import ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesServiceEndpointPoliciesInner from './ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesServiceEndpointPoliciesInner';
import ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesServiceEndpointsInner from './ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesServiceEndpointsInner';

/**
 * The ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetProperties model module.
 * @module model/ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetProperties
 * @version 2018-10-01
 */
class ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetProperties {
    /**
     * Constructs a new <code>ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetProperties</code>.
     * Properties of the subnet.
     * @alias module:model/ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetProperties
     */
    constructor() { 
        
        ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetProperties} obj Optional instance to populate.
     * @return {module:model/ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetProperties} The populated <code>ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetProperties();

            if (data.hasOwnProperty('addressPrefix')) {
                obj['addressPrefix'] = ApiClient.convertToType(data['addressPrefix'], 'String');
            }
            if (data.hasOwnProperty('addressPrefixes')) {
                obj['addressPrefixes'] = ApiClient.convertToType(data['addressPrefixes'], ['String']);
            }
            if (data.hasOwnProperty('delegations')) {
                obj['delegations'] = ApiClient.convertToType(data['delegations'], [ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesDelegationsInner]);
            }
            if (data.hasOwnProperty('interfaceEndpoints')) {
                obj['interfaceEndpoints'] = ApiClient.convertToType(data['interfaceEndpoints'], [ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesInterfaceEndpointsInner]);
            }
            if (data.hasOwnProperty('ipConfigurationProfiles')) {
                obj['ipConfigurationProfiles'] = ApiClient.convertToType(data['ipConfigurationProfiles'], [ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesIpConfigurationProfilesInner]);
            }
            if (data.hasOwnProperty('ipConfigurations')) {
                obj['ipConfigurations'] = ApiClient.convertToType(data['ipConfigurations'], [ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesIpConfigurationsInner]);
            }
            if (data.hasOwnProperty('networkSecurityGroup')) {
                obj['networkSecurityGroup'] = ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesNetworkSecurityGroup.constructFromObject(data['networkSecurityGroup']);
            }
            if (data.hasOwnProperty('provisioningState')) {
                obj['provisioningState'] = ApiClient.convertToType(data['provisioningState'], 'String');
            }
            if (data.hasOwnProperty('purpose')) {
                obj['purpose'] = ApiClient.convertToType(data['purpose'], 'String');
            }
            if (data.hasOwnProperty('resourceNavigationLinks')) {
                obj['resourceNavigationLinks'] = ApiClient.convertToType(data['resourceNavigationLinks'], [ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesResourceNavigationLinksInner]);
            }
            if (data.hasOwnProperty('routeTable')) {
                obj['routeTable'] = ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesRouteTable.constructFromObject(data['routeTable']);
            }
            if (data.hasOwnProperty('serviceAssociationLinks')) {
                obj['serviceAssociationLinks'] = ApiClient.convertToType(data['serviceAssociationLinks'], [ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesServiceAssociationLinksInner]);
            }
            if (data.hasOwnProperty('serviceEndpointPolicies')) {
                obj['serviceEndpointPolicies'] = ApiClient.convertToType(data['serviceEndpointPolicies'], [ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesServiceEndpointPoliciesInner]);
            }
            if (data.hasOwnProperty('serviceEndpoints')) {
                obj['serviceEndpoints'] = ApiClient.convertToType(data['serviceEndpoints'], [ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesServiceEndpointsInner]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['addressPrefix'] && !(typeof data['addressPrefix'] === 'string' || data['addressPrefix'] instanceof String)) {
            throw new Error("Expected the field `addressPrefix` to be a primitive type in the JSON string but got " + data['addressPrefix']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['addressPrefixes'])) {
            throw new Error("Expected the field `addressPrefixes` to be an array in the JSON data but got " + data['addressPrefixes']);
        }
        if (data['delegations']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['delegations'])) {
                throw new Error("Expected the field `delegations` to be an array in the JSON data but got " + data['delegations']);
            }
            // validate the optional field `delegations` (array)
            for (const item of data['delegations']) {
                ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesDelegationsInner.validateJSON(item);
            };
        }
        if (data['interfaceEndpoints']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['interfaceEndpoints'])) {
                throw new Error("Expected the field `interfaceEndpoints` to be an array in the JSON data but got " + data['interfaceEndpoints']);
            }
            // validate the optional field `interfaceEndpoints` (array)
            for (const item of data['interfaceEndpoints']) {
                ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesInterfaceEndpointsInner.validateJSON(item);
            };
        }
        if (data['ipConfigurationProfiles']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['ipConfigurationProfiles'])) {
                throw new Error("Expected the field `ipConfigurationProfiles` to be an array in the JSON data but got " + data['ipConfigurationProfiles']);
            }
            // validate the optional field `ipConfigurationProfiles` (array)
            for (const item of data['ipConfigurationProfiles']) {
                ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesIpConfigurationProfilesInner.validateJSON(item);
            };
        }
        if (data['ipConfigurations']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['ipConfigurations'])) {
                throw new Error("Expected the field `ipConfigurations` to be an array in the JSON data but got " + data['ipConfigurations']);
            }
            // validate the optional field `ipConfigurations` (array)
            for (const item of data['ipConfigurations']) {
                ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesIpConfigurationsInner.validateJSON(item);
            };
        }
        // validate the optional field `networkSecurityGroup`
        if (data['networkSecurityGroup']) { // data not null
          ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesNetworkSecurityGroup.validateJSON(data['networkSecurityGroup']);
        }
        // ensure the json data is a string
        if (data['provisioningState'] && !(typeof data['provisioningState'] === 'string' || data['provisioningState'] instanceof String)) {
            throw new Error("Expected the field `provisioningState` to be a primitive type in the JSON string but got " + data['provisioningState']);
        }
        // ensure the json data is a string
        if (data['purpose'] && !(typeof data['purpose'] === 'string' || data['purpose'] instanceof String)) {
            throw new Error("Expected the field `purpose` to be a primitive type in the JSON string but got " + data['purpose']);
        }
        if (data['resourceNavigationLinks']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['resourceNavigationLinks'])) {
                throw new Error("Expected the field `resourceNavigationLinks` to be an array in the JSON data but got " + data['resourceNavigationLinks']);
            }
            // validate the optional field `resourceNavigationLinks` (array)
            for (const item of data['resourceNavigationLinks']) {
                ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesResourceNavigationLinksInner.validateJSON(item);
            };
        }
        // validate the optional field `routeTable`
        if (data['routeTable']) { // data not null
          ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesRouteTable.validateJSON(data['routeTable']);
        }
        if (data['serviceAssociationLinks']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['serviceAssociationLinks'])) {
                throw new Error("Expected the field `serviceAssociationLinks` to be an array in the JSON data but got " + data['serviceAssociationLinks']);
            }
            // validate the optional field `serviceAssociationLinks` (array)
            for (const item of data['serviceAssociationLinks']) {
                ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesServiceAssociationLinksInner.validateJSON(item);
            };
        }
        if (data['serviceEndpointPolicies']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['serviceEndpointPolicies'])) {
                throw new Error("Expected the field `serviceEndpointPolicies` to be an array in the JSON data but got " + data['serviceEndpointPolicies']);
            }
            // validate the optional field `serviceEndpointPolicies` (array)
            for (const item of data['serviceEndpointPolicies']) {
                ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesServiceEndpointPoliciesInner.validateJSON(item);
            };
        }
        if (data['serviceEndpoints']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['serviceEndpoints'])) {
                throw new Error("Expected the field `serviceEndpoints` to be an array in the JSON data but got " + data['serviceEndpoints']);
            }
            // validate the optional field `serviceEndpoints` (array)
            for (const item of data['serviceEndpoints']) {
                ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesServiceEndpointsInner.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * The address prefix for the subnet.
 * @member {String} addressPrefix
 */
ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetProperties.prototype['addressPrefix'] = undefined;

/**
 * List of  address prefixes for the subnet.
 * @member {Array.<String>} addressPrefixes
 */
ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetProperties.prototype['addressPrefixes'] = undefined;

/**
 * Gets an array of references to the delegations on the subnet.
 * @member {Array.<module:model/ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesDelegationsInner>} delegations
 */
ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetProperties.prototype['delegations'] = undefined;

/**
 * An array of references to interface endpoints 
 * @member {Array.<module:model/ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesInterfaceEndpointsInner>} interfaceEndpoints
 */
ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetProperties.prototype['interfaceEndpoints'] = undefined;

/**
 * Array of IP configuration profiles which reference this subnet.
 * @member {Array.<module:model/ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesIpConfigurationProfilesInner>} ipConfigurationProfiles
 */
ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetProperties.prototype['ipConfigurationProfiles'] = undefined;

/**
 * Gets an array of references to the network interface IP configurations using subnet.
 * @member {Array.<module:model/ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesIpConfigurationsInner>} ipConfigurations
 */
ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetProperties.prototype['ipConfigurations'] = undefined;

/**
 * @member {module:model/ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesNetworkSecurityGroup} networkSecurityGroup
 */
ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetProperties.prototype['networkSecurityGroup'] = undefined;

/**
 * The provisioning state of the resource.
 * @member {String} provisioningState
 */
ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetProperties.prototype['provisioningState'] = undefined;

/**
 * A read-only string identifying the intention of use for this subnet based on delegations and other user-defined properties.
 * @member {String} purpose
 */
ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetProperties.prototype['purpose'] = undefined;

/**
 * Gets an array of references to the external resources using subnet.
 * @member {Array.<module:model/ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesResourceNavigationLinksInner>} resourceNavigationLinks
 */
ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetProperties.prototype['resourceNavigationLinks'] = undefined;

/**
 * @member {module:model/ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesRouteTable} routeTable
 */
ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetProperties.prototype['routeTable'] = undefined;

/**
 * Gets an array of references to services injecting into this subnet.
 * @member {Array.<module:model/ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesServiceAssociationLinksInner>} serviceAssociationLinks
 */
ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetProperties.prototype['serviceAssociationLinks'] = undefined;

/**
 * An array of service endpoint policies.
 * @member {Array.<module:model/ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesServiceEndpointPoliciesInner>} serviceEndpointPolicies
 */
ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetProperties.prototype['serviceEndpointPolicies'] = undefined;

/**
 * An array of service endpoints.
 * @member {Array.<module:model/ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesServiceEndpointsInner>} serviceEndpoints
 */
ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetProperties.prototype['serviceEndpoints'] = undefined;






export default ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetProperties;

