/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2018-10-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApplicationGatewayRedirectConfigurationPropertiesFormat.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApplicationGatewayRedirectConfigurationPropertiesFormat::OAIApplicationGatewayRedirectConfigurationPropertiesFormat(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApplicationGatewayRedirectConfigurationPropertiesFormat::OAIApplicationGatewayRedirectConfigurationPropertiesFormat() {
    this->initializeModel();
}

OAIApplicationGatewayRedirectConfigurationPropertiesFormat::~OAIApplicationGatewayRedirectConfigurationPropertiesFormat() {}

void OAIApplicationGatewayRedirectConfigurationPropertiesFormat::initializeModel() {

    m_include_path_isSet = false;
    m_include_path_isValid = false;

    m_include_query_string_isSet = false;
    m_include_query_string_isValid = false;

    m_path_rules_isSet = false;
    m_path_rules_isValid = false;

    m_redirect_type_isSet = false;
    m_redirect_type_isValid = false;

    m_request_routing_rules_isSet = false;
    m_request_routing_rules_isValid = false;

    m_target_listener_isSet = false;
    m_target_listener_isValid = false;

    m_target_url_isSet = false;
    m_target_url_isValid = false;

    m_url_path_maps_isSet = false;
    m_url_path_maps_isValid = false;
}

void OAIApplicationGatewayRedirectConfigurationPropertiesFormat::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIApplicationGatewayRedirectConfigurationPropertiesFormat::fromJsonObject(QJsonObject json) {

    m_include_path_isValid = ::OpenAPI::fromJsonValue(m_include_path, json[QString("includePath")]);
    m_include_path_isSet = !json[QString("includePath")].isNull() && m_include_path_isValid;

    m_include_query_string_isValid = ::OpenAPI::fromJsonValue(m_include_query_string, json[QString("includeQueryString")]);
    m_include_query_string_isSet = !json[QString("includeQueryString")].isNull() && m_include_query_string_isValid;

    m_path_rules_isValid = ::OpenAPI::fromJsonValue(m_path_rules, json[QString("pathRules")]);
    m_path_rules_isSet = !json[QString("pathRules")].isNull() && m_path_rules_isValid;

    m_redirect_type_isValid = ::OpenAPI::fromJsonValue(m_redirect_type, json[QString("redirectType")]);
    m_redirect_type_isSet = !json[QString("redirectType")].isNull() && m_redirect_type_isValid;

    m_request_routing_rules_isValid = ::OpenAPI::fromJsonValue(m_request_routing_rules, json[QString("requestRoutingRules")]);
    m_request_routing_rules_isSet = !json[QString("requestRoutingRules")].isNull() && m_request_routing_rules_isValid;

    m_target_listener_isValid = ::OpenAPI::fromJsonValue(m_target_listener, json[QString("targetListener")]);
    m_target_listener_isSet = !json[QString("targetListener")].isNull() && m_target_listener_isValid;

    m_target_url_isValid = ::OpenAPI::fromJsonValue(m_target_url, json[QString("targetUrl")]);
    m_target_url_isSet = !json[QString("targetUrl")].isNull() && m_target_url_isValid;

    m_url_path_maps_isValid = ::OpenAPI::fromJsonValue(m_url_path_maps, json[QString("urlPathMaps")]);
    m_url_path_maps_isSet = !json[QString("urlPathMaps")].isNull() && m_url_path_maps_isValid;
}

QString OAIApplicationGatewayRedirectConfigurationPropertiesFormat::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIApplicationGatewayRedirectConfigurationPropertiesFormat::asJsonObject() const {
    QJsonObject obj;
    if (m_include_path_isSet) {
        obj.insert(QString("includePath"), ::OpenAPI::toJsonValue(m_include_path));
    }
    if (m_include_query_string_isSet) {
        obj.insert(QString("includeQueryString"), ::OpenAPI::toJsonValue(m_include_query_string));
    }
    if (m_path_rules.size() > 0) {
        obj.insert(QString("pathRules"), ::OpenAPI::toJsonValue(m_path_rules));
    }
    if (m_redirect_type.isSet()) {
        obj.insert(QString("redirectType"), ::OpenAPI::toJsonValue(m_redirect_type));
    }
    if (m_request_routing_rules.size() > 0) {
        obj.insert(QString("requestRoutingRules"), ::OpenAPI::toJsonValue(m_request_routing_rules));
    }
    if (m_target_listener.isSet()) {
        obj.insert(QString("targetListener"), ::OpenAPI::toJsonValue(m_target_listener));
    }
    if (m_target_url_isSet) {
        obj.insert(QString("targetUrl"), ::OpenAPI::toJsonValue(m_target_url));
    }
    if (m_url_path_maps.size() > 0) {
        obj.insert(QString("urlPathMaps"), ::OpenAPI::toJsonValue(m_url_path_maps));
    }
    return obj;
}

bool OAIApplicationGatewayRedirectConfigurationPropertiesFormat::isIncludePath() const {
    return m_include_path;
}
void OAIApplicationGatewayRedirectConfigurationPropertiesFormat::setIncludePath(const bool &include_path) {
    m_include_path = include_path;
    m_include_path_isSet = true;
}

bool OAIApplicationGatewayRedirectConfigurationPropertiesFormat::is_include_path_Set() const{
    return m_include_path_isSet;
}

bool OAIApplicationGatewayRedirectConfigurationPropertiesFormat::is_include_path_Valid() const{
    return m_include_path_isValid;
}

bool OAIApplicationGatewayRedirectConfigurationPropertiesFormat::isIncludeQueryString() const {
    return m_include_query_string;
}
void OAIApplicationGatewayRedirectConfigurationPropertiesFormat::setIncludeQueryString(const bool &include_query_string) {
    m_include_query_string = include_query_string;
    m_include_query_string_isSet = true;
}

bool OAIApplicationGatewayRedirectConfigurationPropertiesFormat::is_include_query_string_Set() const{
    return m_include_query_string_isSet;
}

bool OAIApplicationGatewayRedirectConfigurationPropertiesFormat::is_include_query_string_Valid() const{
    return m_include_query_string_isValid;
}

QList<OAI0> OAIApplicationGatewayRedirectConfigurationPropertiesFormat::getPathRules() const {
    return m_path_rules;
}
void OAIApplicationGatewayRedirectConfigurationPropertiesFormat::setPathRules(const QList<OAI0> &path_rules) {
    m_path_rules = path_rules;
    m_path_rules_isSet = true;
}

bool OAIApplicationGatewayRedirectConfigurationPropertiesFormat::is_path_rules_Set() const{
    return m_path_rules_isSet;
}

bool OAIApplicationGatewayRedirectConfigurationPropertiesFormat::is_path_rules_Valid() const{
    return m_path_rules_isValid;
}

OAIRedirectTypeEnum OAIApplicationGatewayRedirectConfigurationPropertiesFormat::getRedirectType() const {
    return m_redirect_type;
}
void OAIApplicationGatewayRedirectConfigurationPropertiesFormat::setRedirectType(const OAIRedirectTypeEnum &redirect_type) {
    m_redirect_type = redirect_type;
    m_redirect_type_isSet = true;
}

bool OAIApplicationGatewayRedirectConfigurationPropertiesFormat::is_redirect_type_Set() const{
    return m_redirect_type_isSet;
}

bool OAIApplicationGatewayRedirectConfigurationPropertiesFormat::is_redirect_type_Valid() const{
    return m_redirect_type_isValid;
}

QList<OAI0> OAIApplicationGatewayRedirectConfigurationPropertiesFormat::getRequestRoutingRules() const {
    return m_request_routing_rules;
}
void OAIApplicationGatewayRedirectConfigurationPropertiesFormat::setRequestRoutingRules(const QList<OAI0> &request_routing_rules) {
    m_request_routing_rules = request_routing_rules;
    m_request_routing_rules_isSet = true;
}

bool OAIApplicationGatewayRedirectConfigurationPropertiesFormat::is_request_routing_rules_Set() const{
    return m_request_routing_rules_isSet;
}

bool OAIApplicationGatewayRedirectConfigurationPropertiesFormat::is_request_routing_rules_Valid() const{
    return m_request_routing_rules_isValid;
}

OAI0 OAIApplicationGatewayRedirectConfigurationPropertiesFormat::getTargetListener() const {
    return m_target_listener;
}
void OAIApplicationGatewayRedirectConfigurationPropertiesFormat::setTargetListener(const OAI0 &target_listener) {
    m_target_listener = target_listener;
    m_target_listener_isSet = true;
}

bool OAIApplicationGatewayRedirectConfigurationPropertiesFormat::is_target_listener_Set() const{
    return m_target_listener_isSet;
}

bool OAIApplicationGatewayRedirectConfigurationPropertiesFormat::is_target_listener_Valid() const{
    return m_target_listener_isValid;
}

QString OAIApplicationGatewayRedirectConfigurationPropertiesFormat::getTargetUrl() const {
    return m_target_url;
}
void OAIApplicationGatewayRedirectConfigurationPropertiesFormat::setTargetUrl(const QString &target_url) {
    m_target_url = target_url;
    m_target_url_isSet = true;
}

bool OAIApplicationGatewayRedirectConfigurationPropertiesFormat::is_target_url_Set() const{
    return m_target_url_isSet;
}

bool OAIApplicationGatewayRedirectConfigurationPropertiesFormat::is_target_url_Valid() const{
    return m_target_url_isValid;
}

QList<OAI0> OAIApplicationGatewayRedirectConfigurationPropertiesFormat::getUrlPathMaps() const {
    return m_url_path_maps;
}
void OAIApplicationGatewayRedirectConfigurationPropertiesFormat::setUrlPathMaps(const QList<OAI0> &url_path_maps) {
    m_url_path_maps = url_path_maps;
    m_url_path_maps_isSet = true;
}

bool OAIApplicationGatewayRedirectConfigurationPropertiesFormat::is_url_path_maps_Set() const{
    return m_url_path_maps_isSet;
}

bool OAIApplicationGatewayRedirectConfigurationPropertiesFormat::is_url_path_maps_Valid() const{
    return m_url_path_maps_isValid;
}

bool OAIApplicationGatewayRedirectConfigurationPropertiesFormat::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_include_path_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_include_query_string_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_path_rules.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_redirect_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_request_routing_rules.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_target_listener.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_target_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_path_maps.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIApplicationGatewayRedirectConfigurationPropertiesFormat::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
