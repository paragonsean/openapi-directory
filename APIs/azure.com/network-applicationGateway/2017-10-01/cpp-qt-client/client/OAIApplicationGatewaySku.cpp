/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2017-10-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApplicationGatewaySku.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApplicationGatewaySku::OAIApplicationGatewaySku(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApplicationGatewaySku::OAIApplicationGatewaySku() {
    this->initializeModel();
}

OAIApplicationGatewaySku::~OAIApplicationGatewaySku() {}

void OAIApplicationGatewaySku::initializeModel() {

    m_capacity_isSet = false;
    m_capacity_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_tier_isSet = false;
    m_tier_isValid = false;
}

void OAIApplicationGatewaySku::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIApplicationGatewaySku::fromJsonObject(QJsonObject json) {

    m_capacity_isValid = ::OpenAPI::fromJsonValue(m_capacity, json[QString("capacity")]);
    m_capacity_isSet = !json[QString("capacity")].isNull() && m_capacity_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_tier_isValid = ::OpenAPI::fromJsonValue(m_tier, json[QString("tier")]);
    m_tier_isSet = !json[QString("tier")].isNull() && m_tier_isValid;
}

QString OAIApplicationGatewaySku::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIApplicationGatewaySku::asJsonObject() const {
    QJsonObject obj;
    if (m_capacity_isSet) {
        obj.insert(QString("capacity"), ::OpenAPI::toJsonValue(m_capacity));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_tier_isSet) {
        obj.insert(QString("tier"), ::OpenAPI::toJsonValue(m_tier));
    }
    return obj;
}

qint32 OAIApplicationGatewaySku::getCapacity() const {
    return m_capacity;
}
void OAIApplicationGatewaySku::setCapacity(const qint32 &capacity) {
    m_capacity = capacity;
    m_capacity_isSet = true;
}

bool OAIApplicationGatewaySku::is_capacity_Set() const{
    return m_capacity_isSet;
}

bool OAIApplicationGatewaySku::is_capacity_Valid() const{
    return m_capacity_isValid;
}

QString OAIApplicationGatewaySku::getName() const {
    return m_name;
}
void OAIApplicationGatewaySku::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIApplicationGatewaySku::is_name_Set() const{
    return m_name_isSet;
}

bool OAIApplicationGatewaySku::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIApplicationGatewaySku::getTier() const {
    return m_tier;
}
void OAIApplicationGatewaySku::setTier(const QString &tier) {
    m_tier = tier;
    m_tier_isSet = true;
}

bool OAIApplicationGatewaySku::is_tier_Set() const{
    return m_tier_isSet;
}

bool OAIApplicationGatewaySku::is_tier_Valid() const{
    return m_tier_isValid;
}

bool OAIApplicationGatewaySku::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_capacity_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tier_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIApplicationGatewaySku::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
