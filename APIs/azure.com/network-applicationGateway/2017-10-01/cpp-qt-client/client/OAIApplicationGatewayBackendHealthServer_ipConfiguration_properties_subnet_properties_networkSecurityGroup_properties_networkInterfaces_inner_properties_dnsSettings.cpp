/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2017-10-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties_dnsSettings.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties_dnsSettings::OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties_dnsSettings(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties_dnsSettings::OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties_dnsSettings() {
    this->initializeModel();
}

OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties_dnsSettings::~OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties_dnsSettings() {}

void OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties_dnsSettings::initializeModel() {

    m_applied_dns_servers_isSet = false;
    m_applied_dns_servers_isValid = false;

    m_dns_servers_isSet = false;
    m_dns_servers_isValid = false;

    m_internal_dns_name_label_isSet = false;
    m_internal_dns_name_label_isValid = false;

    m_internal_domain_name_suffix_isSet = false;
    m_internal_domain_name_suffix_isValid = false;

    m_internal_fqdn_isSet = false;
    m_internal_fqdn_isValid = false;
}

void OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties_dnsSettings::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties_dnsSettings::fromJsonObject(QJsonObject json) {

    m_applied_dns_servers_isValid = ::OpenAPI::fromJsonValue(m_applied_dns_servers, json[QString("appliedDnsServers")]);
    m_applied_dns_servers_isSet = !json[QString("appliedDnsServers")].isNull() && m_applied_dns_servers_isValid;

    m_dns_servers_isValid = ::OpenAPI::fromJsonValue(m_dns_servers, json[QString("dnsServers")]);
    m_dns_servers_isSet = !json[QString("dnsServers")].isNull() && m_dns_servers_isValid;

    m_internal_dns_name_label_isValid = ::OpenAPI::fromJsonValue(m_internal_dns_name_label, json[QString("internalDnsNameLabel")]);
    m_internal_dns_name_label_isSet = !json[QString("internalDnsNameLabel")].isNull() && m_internal_dns_name_label_isValid;

    m_internal_domain_name_suffix_isValid = ::OpenAPI::fromJsonValue(m_internal_domain_name_suffix, json[QString("internalDomainNameSuffix")]);
    m_internal_domain_name_suffix_isSet = !json[QString("internalDomainNameSuffix")].isNull() && m_internal_domain_name_suffix_isValid;

    m_internal_fqdn_isValid = ::OpenAPI::fromJsonValue(m_internal_fqdn, json[QString("internalFqdn")]);
    m_internal_fqdn_isSet = !json[QString("internalFqdn")].isNull() && m_internal_fqdn_isValid;
}

QString OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties_dnsSettings::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties_dnsSettings::asJsonObject() const {
    QJsonObject obj;
    if (m_applied_dns_servers.size() > 0) {
        obj.insert(QString("appliedDnsServers"), ::OpenAPI::toJsonValue(m_applied_dns_servers));
    }
    if (m_dns_servers.size() > 0) {
        obj.insert(QString("dnsServers"), ::OpenAPI::toJsonValue(m_dns_servers));
    }
    if (m_internal_dns_name_label_isSet) {
        obj.insert(QString("internalDnsNameLabel"), ::OpenAPI::toJsonValue(m_internal_dns_name_label));
    }
    if (m_internal_domain_name_suffix_isSet) {
        obj.insert(QString("internalDomainNameSuffix"), ::OpenAPI::toJsonValue(m_internal_domain_name_suffix));
    }
    if (m_internal_fqdn_isSet) {
        obj.insert(QString("internalFqdn"), ::OpenAPI::toJsonValue(m_internal_fqdn));
    }
    return obj;
}

QList<QString> OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties_dnsSettings::getAppliedDnsServers() const {
    return m_applied_dns_servers;
}
void OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties_dnsSettings::setAppliedDnsServers(const QList<QString> &applied_dns_servers) {
    m_applied_dns_servers = applied_dns_servers;
    m_applied_dns_servers_isSet = true;
}

bool OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties_dnsSettings::is_applied_dns_servers_Set() const{
    return m_applied_dns_servers_isSet;
}

bool OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties_dnsSettings::is_applied_dns_servers_Valid() const{
    return m_applied_dns_servers_isValid;
}

QList<QString> OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties_dnsSettings::getDnsServers() const {
    return m_dns_servers;
}
void OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties_dnsSettings::setDnsServers(const QList<QString> &dns_servers) {
    m_dns_servers = dns_servers;
    m_dns_servers_isSet = true;
}

bool OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties_dnsSettings::is_dns_servers_Set() const{
    return m_dns_servers_isSet;
}

bool OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties_dnsSettings::is_dns_servers_Valid() const{
    return m_dns_servers_isValid;
}

QString OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties_dnsSettings::getInternalDnsNameLabel() const {
    return m_internal_dns_name_label;
}
void OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties_dnsSettings::setInternalDnsNameLabel(const QString &internal_dns_name_label) {
    m_internal_dns_name_label = internal_dns_name_label;
    m_internal_dns_name_label_isSet = true;
}

bool OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties_dnsSettings::is_internal_dns_name_label_Set() const{
    return m_internal_dns_name_label_isSet;
}

bool OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties_dnsSettings::is_internal_dns_name_label_Valid() const{
    return m_internal_dns_name_label_isValid;
}

QString OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties_dnsSettings::getInternalDomainNameSuffix() const {
    return m_internal_domain_name_suffix;
}
void OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties_dnsSettings::setInternalDomainNameSuffix(const QString &internal_domain_name_suffix) {
    m_internal_domain_name_suffix = internal_domain_name_suffix;
    m_internal_domain_name_suffix_isSet = true;
}

bool OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties_dnsSettings::is_internal_domain_name_suffix_Set() const{
    return m_internal_domain_name_suffix_isSet;
}

bool OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties_dnsSettings::is_internal_domain_name_suffix_Valid() const{
    return m_internal_domain_name_suffix_isValid;
}

QString OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties_dnsSettings::getInternalFqdn() const {
    return m_internal_fqdn;
}
void OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties_dnsSettings::setInternalFqdn(const QString &internal_fqdn) {
    m_internal_fqdn = internal_fqdn;
    m_internal_fqdn_isSet = true;
}

bool OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties_dnsSettings::is_internal_fqdn_Set() const{
    return m_internal_fqdn_isSet;
}

bool OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties_dnsSettings::is_internal_fqdn_Valid() const{
    return m_internal_fqdn_isValid;
}

bool OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties_dnsSettings::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_applied_dns_servers.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_dns_servers.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_internal_dns_name_label_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_internal_domain_name_suffix_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_internal_fqdn_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties_dnsSettings::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
