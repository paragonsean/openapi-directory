# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ApplicationGatewayFirewallDisabledRuleGroup(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, rule_group_name: str=None, rules: List[int]=None):
        """ApplicationGatewayFirewallDisabledRuleGroup - a model defined in OpenAPI

        :param rule_group_name: The rule_group_name of this ApplicationGatewayFirewallDisabledRuleGroup.
        :param rules: The rules of this ApplicationGatewayFirewallDisabledRuleGroup.
        """
        self.openapi_types = {
            'rule_group_name': str,
            'rules': List[int]
        }

        self.attribute_map = {
            'rule_group_name': 'ruleGroupName',
            'rules': 'rules'
        }

        self._rule_group_name = rule_group_name
        self._rules = rules

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApplicationGatewayFirewallDisabledRuleGroup':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ApplicationGatewayFirewallDisabledRuleGroup of this ApplicationGatewayFirewallDisabledRuleGroup.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def rule_group_name(self):
        """Gets the rule_group_name of this ApplicationGatewayFirewallDisabledRuleGroup.

        The name of the rule group that will be disabled.

        :return: The rule_group_name of this ApplicationGatewayFirewallDisabledRuleGroup.
        :rtype: str
        """
        return self._rule_group_name

    @rule_group_name.setter
    def rule_group_name(self, rule_group_name):
        """Sets the rule_group_name of this ApplicationGatewayFirewallDisabledRuleGroup.

        The name of the rule group that will be disabled.

        :param rule_group_name: The rule_group_name of this ApplicationGatewayFirewallDisabledRuleGroup.
        :type rule_group_name: str
        """
        if rule_group_name is None:
            raise ValueError("Invalid value for `rule_group_name`, must not be `None`")

        self._rule_group_name = rule_group_name

    @property
    def rules(self):
        """Gets the rules of this ApplicationGatewayFirewallDisabledRuleGroup.

        The list of rules that will be disabled. If null, all rules of the rule group will be disabled.

        :return: The rules of this ApplicationGatewayFirewallDisabledRuleGroup.
        :rtype: List[int]
        """
        return self._rules

    @rules.setter
    def rules(self, rules):
        """Sets the rules of this ApplicationGatewayFirewallDisabledRuleGroup.

        The list of rules that will be disabled. If null, all rules of the rule group will be disabled.

        :param rules: The rules of this ApplicationGatewayFirewallDisabledRuleGroup.
        :type rules: List[int]
        """

        self._rules = rules
