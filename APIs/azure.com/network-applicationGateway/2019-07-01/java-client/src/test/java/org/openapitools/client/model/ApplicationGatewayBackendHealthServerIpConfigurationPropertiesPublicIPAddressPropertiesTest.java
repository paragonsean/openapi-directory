/*
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-07-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ApplicationGatewayBackendHealthServerIpConfigurationPropertiesPublicIPAddressPropertiesDdosSettings;
import org.openapitools.client.model.ApplicationGatewayBackendHealthServerIpConfigurationPropertiesPublicIPAddressPropertiesDnsSettings;
import org.openapitools.client.model.ApplicationGatewayBackendHealthServerIpConfigurationPropertiesPublicIPAddressPropertiesIpTagsInner;
import org.openapitools.client.model.Items;
import org.openapitools.client.model.Model0;
import org.openapitools.client.model.PrivateIPAddressVersion;
import org.openapitools.client.model.PrivateIPAllocationMethod;
import org.openapitools.client.model.ProvisioningState;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ApplicationGatewayBackendHealthServerIpConfigurationPropertiesPublicIPAddressProperties
 */
public class ApplicationGatewayBackendHealthServerIpConfigurationPropertiesPublicIPAddressPropertiesTest {
    private final ApplicationGatewayBackendHealthServerIpConfigurationPropertiesPublicIPAddressProperties model = new ApplicationGatewayBackendHealthServerIpConfigurationPropertiesPublicIPAddressProperties();

    /**
     * Model tests for ApplicationGatewayBackendHealthServerIpConfigurationPropertiesPublicIPAddressProperties
     */
    @Test
    public void testApplicationGatewayBackendHealthServerIpConfigurationPropertiesPublicIPAddressProperties() {
        // TODO: test ApplicationGatewayBackendHealthServerIpConfigurationPropertiesPublicIPAddressProperties
    }

    /**
     * Test the property 'ddosSettings'
     */
    @Test
    public void ddosSettingsTest() {
        // TODO: test ddosSettings
    }

    /**
     * Test the property 'dnsSettings'
     */
    @Test
    public void dnsSettingsTest() {
        // TODO: test dnsSettings
    }

    /**
     * Test the property 'idleTimeoutInMinutes'
     */
    @Test
    public void idleTimeoutInMinutesTest() {
        // TODO: test idleTimeoutInMinutes
    }

    /**
     * Test the property 'ipAddress'
     */
    @Test
    public void ipAddressTest() {
        // TODO: test ipAddress
    }

    /**
     * Test the property 'ipConfiguration'
     */
    @Test
    public void ipConfigurationTest() {
        // TODO: test ipConfiguration
    }

    /**
     * Test the property 'ipTags'
     */
    @Test
    public void ipTagsTest() {
        // TODO: test ipTags
    }

    /**
     * Test the property 'provisioningState'
     */
    @Test
    public void provisioningStateTest() {
        // TODO: test provisioningState
    }

    /**
     * Test the property 'publicIPAddressVersion'
     */
    @Test
    public void publicIPAddressVersionTest() {
        // TODO: test publicIPAddressVersion
    }

    /**
     * Test the property 'publicIPAllocationMethod'
     */
    @Test
    public void publicIPAllocationMethodTest() {
        // TODO: test publicIPAllocationMethod
    }

    /**
     * Test the property 'publicIPPrefix'
     */
    @Test
    public void publicIPPrefixTest() {
        // TODO: test publicIPPrefix
    }

    /**
     * Test the property 'resourceGuid'
     */
    @Test
    public void resourceGuidTest() {
        // TODO: test resourceGuid
    }

}
