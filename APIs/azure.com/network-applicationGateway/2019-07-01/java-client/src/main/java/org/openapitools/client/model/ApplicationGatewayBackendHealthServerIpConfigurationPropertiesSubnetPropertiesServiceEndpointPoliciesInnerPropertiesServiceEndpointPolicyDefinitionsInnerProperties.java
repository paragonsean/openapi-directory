/*
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-07-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ProvisioningState;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Service Endpoint policy definition resource.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:13:52.280048-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesServiceEndpointPoliciesInnerPropertiesServiceEndpointPolicyDefinitionsInnerProperties {
  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_PROVISIONING_STATE = "provisioningState";
  @SerializedName(SERIALIZED_NAME_PROVISIONING_STATE)
  private ProvisioningState provisioningState = null;

  public static final String SERIALIZED_NAME_SERVICE = "service";
  @SerializedName(SERIALIZED_NAME_SERVICE)
  private String service;

  public static final String SERIALIZED_NAME_SERVICE_RESOURCES = "serviceResources";
  @SerializedName(SERIALIZED_NAME_SERVICE_RESOURCES)
  private List<String> serviceResources = new ArrayList<>();

  public ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesServiceEndpointPoliciesInnerPropertiesServiceEndpointPolicyDefinitionsInnerProperties() {
  }

  public ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesServiceEndpointPoliciesInnerPropertiesServiceEndpointPolicyDefinitionsInnerProperties description(String description) {
    this.description = description;
    return this;
  }

  /**
   * A description for this rule. Restricted to 140 chars.
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesServiceEndpointPoliciesInnerPropertiesServiceEndpointPolicyDefinitionsInnerProperties provisioningState(ProvisioningState provisioningState) {
    this.provisioningState = provisioningState;
    return this;
  }

  /**
   * Get provisioningState
   * @return provisioningState
   */
  @javax.annotation.Nullable
  public ProvisioningState getProvisioningState() {
    return provisioningState;
  }

  public void setProvisioningState(ProvisioningState provisioningState) {
    this.provisioningState = provisioningState;
  }


  public ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesServiceEndpointPoliciesInnerPropertiesServiceEndpointPolicyDefinitionsInnerProperties service(String service) {
    this.service = service;
    return this;
  }

  /**
   * Service endpoint name.
   * @return service
   */
  @javax.annotation.Nullable
  public String getService() {
    return service;
  }

  public void setService(String service) {
    this.service = service;
  }


  public ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesServiceEndpointPoliciesInnerPropertiesServiceEndpointPolicyDefinitionsInnerProperties serviceResources(List<String> serviceResources) {
    this.serviceResources = serviceResources;
    return this;
  }

  public ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesServiceEndpointPoliciesInnerPropertiesServiceEndpointPolicyDefinitionsInnerProperties addServiceResourcesItem(String serviceResourcesItem) {
    if (this.serviceResources == null) {
      this.serviceResources = new ArrayList<>();
    }
    this.serviceResources.add(serviceResourcesItem);
    return this;
  }

  /**
   * A list of service resources.
   * @return serviceResources
   */
  @javax.annotation.Nullable
  public List<String> getServiceResources() {
    return serviceResources;
  }

  public void setServiceResources(List<String> serviceResources) {
    this.serviceResources = serviceResources;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesServiceEndpointPoliciesInnerPropertiesServiceEndpointPolicyDefinitionsInnerProperties applicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesServiceEndpointPoliciesInnerPropertiesServiceEndpointPolicyDefinitionsInnerProperties = (ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesServiceEndpointPoliciesInnerPropertiesServiceEndpointPolicyDefinitionsInnerProperties) o;
    return Objects.equals(this.description, applicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesServiceEndpointPoliciesInnerPropertiesServiceEndpointPolicyDefinitionsInnerProperties.description) &&
        Objects.equals(this.provisioningState, applicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesServiceEndpointPoliciesInnerPropertiesServiceEndpointPolicyDefinitionsInnerProperties.provisioningState) &&
        Objects.equals(this.service, applicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesServiceEndpointPoliciesInnerPropertiesServiceEndpointPolicyDefinitionsInnerProperties.service) &&
        Objects.equals(this.serviceResources, applicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesServiceEndpointPoliciesInnerPropertiesServiceEndpointPolicyDefinitionsInnerProperties.serviceResources);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, provisioningState, service, serviceResources);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesServiceEndpointPoliciesInnerPropertiesServiceEndpointPolicyDefinitionsInnerProperties {\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    provisioningState: ").append(toIndentedString(provisioningState)).append("\n");
    sb.append("    service: ").append(toIndentedString(service)).append("\n");
    sb.append("    serviceResources: ").append(toIndentedString(serviceResources)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("description");
    openapiFields.add("provisioningState");
    openapiFields.add("service");
    openapiFields.add("serviceResources");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesServiceEndpointPoliciesInnerPropertiesServiceEndpointPolicyDefinitionsInnerProperties
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesServiceEndpointPoliciesInnerPropertiesServiceEndpointPolicyDefinitionsInnerProperties.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesServiceEndpointPoliciesInnerPropertiesServiceEndpointPolicyDefinitionsInnerProperties is not found in the empty JSON string", ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesServiceEndpointPoliciesInnerPropertiesServiceEndpointPolicyDefinitionsInnerProperties.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesServiceEndpointPoliciesInnerPropertiesServiceEndpointPolicyDefinitionsInnerProperties.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesServiceEndpointPoliciesInnerPropertiesServiceEndpointPolicyDefinitionsInnerProperties` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("service") != null && !jsonObj.get("service").isJsonNull()) && !jsonObj.get("service").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `service` to be a primitive type in the JSON string but got `%s`", jsonObj.get("service").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("serviceResources") != null && !jsonObj.get("serviceResources").isJsonNull() && !jsonObj.get("serviceResources").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `serviceResources` to be an array in the JSON string but got `%s`", jsonObj.get("serviceResources").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesServiceEndpointPoliciesInnerPropertiesServiceEndpointPolicyDefinitionsInnerProperties.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesServiceEndpointPoliciesInnerPropertiesServiceEndpointPolicyDefinitionsInnerProperties' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesServiceEndpointPoliciesInnerPropertiesServiceEndpointPolicyDefinitionsInnerProperties> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesServiceEndpointPoliciesInnerPropertiesServiceEndpointPolicyDefinitionsInnerProperties.class));

       return (TypeAdapter<T>) new TypeAdapter<ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesServiceEndpointPoliciesInnerPropertiesServiceEndpointPolicyDefinitionsInnerProperties>() {
           @Override
           public void write(JsonWriter out, ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesServiceEndpointPoliciesInnerPropertiesServiceEndpointPolicyDefinitionsInnerProperties value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesServiceEndpointPoliciesInnerPropertiesServiceEndpointPolicyDefinitionsInnerProperties read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesServiceEndpointPoliciesInnerPropertiesServiceEndpointPolicyDefinitionsInnerProperties given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesServiceEndpointPoliciesInnerPropertiesServiceEndpointPolicyDefinitionsInnerProperties
   * @throws IOException if the JSON string is invalid with respect to ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesServiceEndpointPoliciesInnerPropertiesServiceEndpointPolicyDefinitionsInnerProperties
   */
  public static ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesServiceEndpointPoliciesInnerPropertiesServiceEndpointPolicyDefinitionsInnerProperties fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesServiceEndpointPoliciesInnerPropertiesServiceEndpointPolicyDefinitionsInnerProperties.class);
  }

  /**
   * Convert an instance of ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesServiceEndpointPoliciesInnerPropertiesServiceEndpointPolicyDefinitionsInnerProperties to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

