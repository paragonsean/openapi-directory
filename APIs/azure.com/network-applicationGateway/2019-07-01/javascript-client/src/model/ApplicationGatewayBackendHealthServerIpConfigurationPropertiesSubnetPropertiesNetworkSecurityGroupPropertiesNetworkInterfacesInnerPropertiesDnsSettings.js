/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-07-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesNetworkInterfacesInnerPropertiesDnsSettings model module.
 * @module model/ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesNetworkInterfacesInnerPropertiesDnsSettings
 * @version 2019-07-01
 */
class ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesNetworkInterfacesInnerPropertiesDnsSettings {
    /**
     * Constructs a new <code>ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesNetworkInterfacesInnerPropertiesDnsSettings</code>.
     * DNS settings of a network interface.
     * @alias module:model/ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesNetworkInterfacesInnerPropertiesDnsSettings
     */
    constructor() { 
        
        ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesNetworkInterfacesInnerPropertiesDnsSettings.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesNetworkInterfacesInnerPropertiesDnsSettings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesNetworkInterfacesInnerPropertiesDnsSettings} obj Optional instance to populate.
     * @return {module:model/ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesNetworkInterfacesInnerPropertiesDnsSettings} The populated <code>ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesNetworkInterfacesInnerPropertiesDnsSettings</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesNetworkInterfacesInnerPropertiesDnsSettings();

            if (data.hasOwnProperty('appliedDnsServers')) {
                obj['appliedDnsServers'] = ApiClient.convertToType(data['appliedDnsServers'], ['String']);
            }
            if (data.hasOwnProperty('dnsServers')) {
                obj['dnsServers'] = ApiClient.convertToType(data['dnsServers'], ['String']);
            }
            if (data.hasOwnProperty('internalDnsNameLabel')) {
                obj['internalDnsNameLabel'] = ApiClient.convertToType(data['internalDnsNameLabel'], 'String');
            }
            if (data.hasOwnProperty('internalDomainNameSuffix')) {
                obj['internalDomainNameSuffix'] = ApiClient.convertToType(data['internalDomainNameSuffix'], 'String');
            }
            if (data.hasOwnProperty('internalFqdn')) {
                obj['internalFqdn'] = ApiClient.convertToType(data['internalFqdn'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesNetworkInterfacesInnerPropertiesDnsSettings</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesNetworkInterfacesInnerPropertiesDnsSettings</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['appliedDnsServers'])) {
            throw new Error("Expected the field `appliedDnsServers` to be an array in the JSON data but got " + data['appliedDnsServers']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['dnsServers'])) {
            throw new Error("Expected the field `dnsServers` to be an array in the JSON data but got " + data['dnsServers']);
        }
        // ensure the json data is a string
        if (data['internalDnsNameLabel'] && !(typeof data['internalDnsNameLabel'] === 'string' || data['internalDnsNameLabel'] instanceof String)) {
            throw new Error("Expected the field `internalDnsNameLabel` to be a primitive type in the JSON string but got " + data['internalDnsNameLabel']);
        }
        // ensure the json data is a string
        if (data['internalDomainNameSuffix'] && !(typeof data['internalDomainNameSuffix'] === 'string' || data['internalDomainNameSuffix'] instanceof String)) {
            throw new Error("Expected the field `internalDomainNameSuffix` to be a primitive type in the JSON string but got " + data['internalDomainNameSuffix']);
        }
        // ensure the json data is a string
        if (data['internalFqdn'] && !(typeof data['internalFqdn'] === 'string' || data['internalFqdn'] instanceof String)) {
            throw new Error("Expected the field `internalFqdn` to be a primitive type in the JSON string but got " + data['internalFqdn']);
        }

        return true;
    }


}



/**
 * If the VM that uses this NIC is part of an Availability Set, then this list will have the union of all DNS servers from all NICs that are part of the Availability Set. This property is what is configured on each of those VMs.
 * @member {Array.<String>} appliedDnsServers
 */
ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesNetworkInterfacesInnerPropertiesDnsSettings.prototype['appliedDnsServers'] = undefined;

/**
 * List of DNS servers IP addresses. Use 'AzureProvidedDNS' to switch to azure provided DNS resolution. 'AzureProvidedDNS' value cannot be combined with other IPs, it must be the only value in dnsServers collection.
 * @member {Array.<String>} dnsServers
 */
ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesNetworkInterfacesInnerPropertiesDnsSettings.prototype['dnsServers'] = undefined;

/**
 * Relative DNS name for this NIC used for internal communications between VMs in the same virtual network.
 * @member {String} internalDnsNameLabel
 */
ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesNetworkInterfacesInnerPropertiesDnsSettings.prototype['internalDnsNameLabel'] = undefined;

/**
 * Even if internalDnsNameLabel is not specified, a DNS entry is created for the primary NIC of the VM. This DNS name can be constructed by concatenating the VM name with the value of internalDomainNameSuffix.
 * @member {String} internalDomainNameSuffix
 */
ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesNetworkInterfacesInnerPropertiesDnsSettings.prototype['internalDomainNameSuffix'] = undefined;

/**
 * Fully qualified DNS name supporting internal communications between VMs in the same virtual network.
 * @member {String} internalFqdn
 */
ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesNetworkInterfacesInnerPropertiesDnsSettings.prototype['internalFqdn'] = undefined;






export default ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesNetworkInterfacesInnerPropertiesDnsSettings;

