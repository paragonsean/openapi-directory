/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2018-01-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApplicationGatewayConnectionDraining.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApplicationGatewayConnectionDraining::OAIApplicationGatewayConnectionDraining(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApplicationGatewayConnectionDraining::OAIApplicationGatewayConnectionDraining() {
    this->initializeModel();
}

OAIApplicationGatewayConnectionDraining::~OAIApplicationGatewayConnectionDraining() {}

void OAIApplicationGatewayConnectionDraining::initializeModel() {

    m_drain_timeout_in_sec_isSet = false;
    m_drain_timeout_in_sec_isValid = false;

    m_enabled_isSet = false;
    m_enabled_isValid = false;
}

void OAIApplicationGatewayConnectionDraining::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIApplicationGatewayConnectionDraining::fromJsonObject(QJsonObject json) {

    m_drain_timeout_in_sec_isValid = ::OpenAPI::fromJsonValue(m_drain_timeout_in_sec, json[QString("drainTimeoutInSec")]);
    m_drain_timeout_in_sec_isSet = !json[QString("drainTimeoutInSec")].isNull() && m_drain_timeout_in_sec_isValid;

    m_enabled_isValid = ::OpenAPI::fromJsonValue(m_enabled, json[QString("enabled")]);
    m_enabled_isSet = !json[QString("enabled")].isNull() && m_enabled_isValid;
}

QString OAIApplicationGatewayConnectionDraining::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIApplicationGatewayConnectionDraining::asJsonObject() const {
    QJsonObject obj;
    if (m_drain_timeout_in_sec_isSet) {
        obj.insert(QString("drainTimeoutInSec"), ::OpenAPI::toJsonValue(m_drain_timeout_in_sec));
    }
    if (m_enabled_isSet) {
        obj.insert(QString("enabled"), ::OpenAPI::toJsonValue(m_enabled));
    }
    return obj;
}

qint32 OAIApplicationGatewayConnectionDraining::getDrainTimeoutInSec() const {
    return m_drain_timeout_in_sec;
}
void OAIApplicationGatewayConnectionDraining::setDrainTimeoutInSec(const qint32 &drain_timeout_in_sec) {
    m_drain_timeout_in_sec = drain_timeout_in_sec;
    m_drain_timeout_in_sec_isSet = true;
}

bool OAIApplicationGatewayConnectionDraining::is_drain_timeout_in_sec_Set() const{
    return m_drain_timeout_in_sec_isSet;
}

bool OAIApplicationGatewayConnectionDraining::is_drain_timeout_in_sec_Valid() const{
    return m_drain_timeout_in_sec_isValid;
}

bool OAIApplicationGatewayConnectionDraining::isEnabled() const {
    return m_enabled;
}
void OAIApplicationGatewayConnectionDraining::setEnabled(const bool &enabled) {
    m_enabled = enabled;
    m_enabled_isSet = true;
}

bool OAIApplicationGatewayConnectionDraining::is_enabled_Set() const{
    return m_enabled_isSet;
}

bool OAIApplicationGatewayConnectionDraining::is_enabled_Valid() const{
    return m_enabled_isValid;
}

bool OAIApplicationGatewayConnectionDraining::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_drain_timeout_in_sec_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIApplicationGatewayConnectionDraining::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_drain_timeout_in_sec_isValid && m_enabled_isValid && true;
}

} // namespace OpenAPI
