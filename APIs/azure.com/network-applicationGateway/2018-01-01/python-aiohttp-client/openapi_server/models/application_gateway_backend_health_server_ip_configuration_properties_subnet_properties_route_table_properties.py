# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.application_gateway_backend_health_server_ip_configuration_properties_subnet_properties_route_table_properties_routes_inner import ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesRouteTablePropertiesRoutesInner
from openapi_server.models.subnet import Subnet
from openapi_server import util


class ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesRouteTableProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, disable_bgp_route_propagation: bool=None, provisioning_state: str=None, routes: List[ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesRouteTablePropertiesRoutesInner]=None, subnets: List[Subnet]=None):
        """ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesRouteTableProperties - a model defined in OpenAPI

        :param disable_bgp_route_propagation: The disable_bgp_route_propagation of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesRouteTableProperties.
        :param provisioning_state: The provisioning_state of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesRouteTableProperties.
        :param routes: The routes of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesRouteTableProperties.
        :param subnets: The subnets of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesRouteTableProperties.
        """
        self.openapi_types = {
            'disable_bgp_route_propagation': bool,
            'provisioning_state': str,
            'routes': List[ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesRouteTablePropertiesRoutesInner],
            'subnets': List[Subnet]
        }

        self.attribute_map = {
            'disable_bgp_route_propagation': 'disableBgpRoutePropagation',
            'provisioning_state': 'provisioningState',
            'routes': 'routes',
            'subnets': 'subnets'
        }

        self._disable_bgp_route_propagation = disable_bgp_route_propagation
        self._provisioning_state = provisioning_state
        self._routes = routes
        self._subnets = subnets

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesRouteTableProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_routeTable_properties of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesRouteTableProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def disable_bgp_route_propagation(self):
        """Gets the disable_bgp_route_propagation of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesRouteTableProperties.

        Gets or sets whether to disable the routes learned by BGP on that route table. True means disable.

        :return: The disable_bgp_route_propagation of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesRouteTableProperties.
        :rtype: bool
        """
        return self._disable_bgp_route_propagation

    @disable_bgp_route_propagation.setter
    def disable_bgp_route_propagation(self, disable_bgp_route_propagation):
        """Sets the disable_bgp_route_propagation of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesRouteTableProperties.

        Gets or sets whether to disable the routes learned by BGP on that route table. True means disable.

        :param disable_bgp_route_propagation: The disable_bgp_route_propagation of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesRouteTableProperties.
        :type disable_bgp_route_propagation: bool
        """

        self._disable_bgp_route_propagation = disable_bgp_route_propagation

    @property
    def provisioning_state(self):
        """Gets the provisioning_state of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesRouteTableProperties.

        The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.

        :return: The provisioning_state of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesRouteTableProperties.
        :rtype: str
        """
        return self._provisioning_state

    @provisioning_state.setter
    def provisioning_state(self, provisioning_state):
        """Sets the provisioning_state of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesRouteTableProperties.

        The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.

        :param provisioning_state: The provisioning_state of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesRouteTableProperties.
        :type provisioning_state: str
        """

        self._provisioning_state = provisioning_state

    @property
    def routes(self):
        """Gets the routes of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesRouteTableProperties.

        Collection of routes contained within a route table.

        :return: The routes of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesRouteTableProperties.
        :rtype: List[ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesRouteTablePropertiesRoutesInner]
        """
        return self._routes

    @routes.setter
    def routes(self, routes):
        """Sets the routes of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesRouteTableProperties.

        Collection of routes contained within a route table.

        :param routes: The routes of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesRouteTableProperties.
        :type routes: List[ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesRouteTablePropertiesRoutesInner]
        """

        self._routes = routes

    @property
    def subnets(self):
        """Gets the subnets of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesRouteTableProperties.

        A collection of references to subnets.

        :return: The subnets of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesRouteTableProperties.
        :rtype: List[Subnet]
        """
        return self._subnets

    @subnets.setter
    def subnets(self, subnets):
        """Sets the subnets of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesRouteTableProperties.

        A collection of references to subnets.

        :param subnets: The subnets of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesRouteTableProperties.
        :type subnets: List[Subnet]
        """

        self._subnets = subnets
