/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2018-07-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApplicationGatewayBackendHealthPool.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApplicationGatewayBackendHealthPool::OAIApplicationGatewayBackendHealthPool(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApplicationGatewayBackendHealthPool::OAIApplicationGatewayBackendHealthPool() {
    this->initializeModel();
}

OAIApplicationGatewayBackendHealthPool::~OAIApplicationGatewayBackendHealthPool() {}

void OAIApplicationGatewayBackendHealthPool::initializeModel() {

    m_backend_address_pool_isSet = false;
    m_backend_address_pool_isValid = false;

    m_backend_http_settings_collection_isSet = false;
    m_backend_http_settings_collection_isValid = false;
}

void OAIApplicationGatewayBackendHealthPool::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIApplicationGatewayBackendHealthPool::fromJsonObject(QJsonObject json) {

    m_backend_address_pool_isValid = ::OpenAPI::fromJsonValue(m_backend_address_pool, json[QString("backendAddressPool")]);
    m_backend_address_pool_isSet = !json[QString("backendAddressPool")].isNull() && m_backend_address_pool_isValid;

    m_backend_http_settings_collection_isValid = ::OpenAPI::fromJsonValue(m_backend_http_settings_collection, json[QString("backendHttpSettingsCollection")]);
    m_backend_http_settings_collection_isSet = !json[QString("backendHttpSettingsCollection")].isNull() && m_backend_http_settings_collection_isValid;
}

QString OAIApplicationGatewayBackendHealthPool::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIApplicationGatewayBackendHealthPool::asJsonObject() const {
    QJsonObject obj;
    if (m_backend_address_pool.isSet()) {
        obj.insert(QString("backendAddressPool"), ::OpenAPI::toJsonValue(m_backend_address_pool));
    }
    if (m_backend_http_settings_collection.size() > 0) {
        obj.insert(QString("backendHttpSettingsCollection"), ::OpenAPI::toJsonValue(m_backend_http_settings_collection));
    }
    return obj;
}

OAIObject OAIApplicationGatewayBackendHealthPool::getBackendAddressPool() const {
    return m_backend_address_pool;
}
void OAIApplicationGatewayBackendHealthPool::setBackendAddressPool(const OAIObject &backend_address_pool) {
    m_backend_address_pool = backend_address_pool;
    m_backend_address_pool_isSet = true;
}

bool OAIApplicationGatewayBackendHealthPool::is_backend_address_pool_Set() const{
    return m_backend_address_pool_isSet;
}

bool OAIApplicationGatewayBackendHealthPool::is_backend_address_pool_Valid() const{
    return m_backend_address_pool_isValid;
}

QList<OAIApplicationGatewayBackendHealthHttpSettings> OAIApplicationGatewayBackendHealthPool::getBackendHttpSettingsCollection() const {
    return m_backend_http_settings_collection;
}
void OAIApplicationGatewayBackendHealthPool::setBackendHttpSettingsCollection(const QList<OAIApplicationGatewayBackendHealthHttpSettings> &backend_http_settings_collection) {
    m_backend_http_settings_collection = backend_http_settings_collection;
    m_backend_http_settings_collection_isSet = true;
}

bool OAIApplicationGatewayBackendHealthPool::is_backend_http_settings_collection_Set() const{
    return m_backend_http_settings_collection_isSet;
}

bool OAIApplicationGatewayBackendHealthPool::is_backend_http_settings_collection_Valid() const{
    return m_backend_http_settings_collection_isValid;
}

bool OAIApplicationGatewayBackendHealthPool::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_backend_address_pool.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_backend_http_settings_collection.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIApplicationGatewayBackendHealthPool::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
