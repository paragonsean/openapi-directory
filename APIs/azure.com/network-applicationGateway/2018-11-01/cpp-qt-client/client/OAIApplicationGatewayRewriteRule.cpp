/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2018-11-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApplicationGatewayRewriteRule.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApplicationGatewayRewriteRule::OAIApplicationGatewayRewriteRule(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApplicationGatewayRewriteRule::OAIApplicationGatewayRewriteRule() {
    this->initializeModel();
}

OAIApplicationGatewayRewriteRule::~OAIApplicationGatewayRewriteRule() {}

void OAIApplicationGatewayRewriteRule::initializeModel() {

    m_action_set_isSet = false;
    m_action_set_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;
}

void OAIApplicationGatewayRewriteRule::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIApplicationGatewayRewriteRule::fromJsonObject(QJsonObject json) {

    m_action_set_isValid = ::OpenAPI::fromJsonValue(m_action_set, json[QString("actionSet")]);
    m_action_set_isSet = !json[QString("actionSet")].isNull() && m_action_set_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;
}

QString OAIApplicationGatewayRewriteRule::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIApplicationGatewayRewriteRule::asJsonObject() const {
    QJsonObject obj;
    if (m_action_set.isSet()) {
        obj.insert(QString("actionSet"), ::OpenAPI::toJsonValue(m_action_set));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    return obj;
}

OAIApplicationGatewayRewriteRuleActionSet OAIApplicationGatewayRewriteRule::getActionSet() const {
    return m_action_set;
}
void OAIApplicationGatewayRewriteRule::setActionSet(const OAIApplicationGatewayRewriteRuleActionSet &action_set) {
    m_action_set = action_set;
    m_action_set_isSet = true;
}

bool OAIApplicationGatewayRewriteRule::is_action_set_Set() const{
    return m_action_set_isSet;
}

bool OAIApplicationGatewayRewriteRule::is_action_set_Valid() const{
    return m_action_set_isValid;
}

QString OAIApplicationGatewayRewriteRule::getName() const {
    return m_name;
}
void OAIApplicationGatewayRewriteRule::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIApplicationGatewayRewriteRule::is_name_Set() const{
    return m_name_isSet;
}

bool OAIApplicationGatewayRewriteRule::is_name_Valid() const{
    return m_name_isValid;
}

bool OAIApplicationGatewayRewriteRule::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_action_set.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIApplicationGatewayRewriteRule::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
