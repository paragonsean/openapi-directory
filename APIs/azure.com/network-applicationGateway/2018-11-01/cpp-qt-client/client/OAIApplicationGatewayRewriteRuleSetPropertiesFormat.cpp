/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2018-11-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApplicationGatewayRewriteRuleSetPropertiesFormat.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApplicationGatewayRewriteRuleSetPropertiesFormat::OAIApplicationGatewayRewriteRuleSetPropertiesFormat(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApplicationGatewayRewriteRuleSetPropertiesFormat::OAIApplicationGatewayRewriteRuleSetPropertiesFormat() {
    this->initializeModel();
}

OAIApplicationGatewayRewriteRuleSetPropertiesFormat::~OAIApplicationGatewayRewriteRuleSetPropertiesFormat() {}

void OAIApplicationGatewayRewriteRuleSetPropertiesFormat::initializeModel() {

    m_provisioning_state_isSet = false;
    m_provisioning_state_isValid = false;

    m_rewrite_rules_isSet = false;
    m_rewrite_rules_isValid = false;
}

void OAIApplicationGatewayRewriteRuleSetPropertiesFormat::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIApplicationGatewayRewriteRuleSetPropertiesFormat::fromJsonObject(QJsonObject json) {

    m_provisioning_state_isValid = ::OpenAPI::fromJsonValue(m_provisioning_state, json[QString("provisioningState")]);
    m_provisioning_state_isSet = !json[QString("provisioningState")].isNull() && m_provisioning_state_isValid;

    m_rewrite_rules_isValid = ::OpenAPI::fromJsonValue(m_rewrite_rules, json[QString("rewriteRules")]);
    m_rewrite_rules_isSet = !json[QString("rewriteRules")].isNull() && m_rewrite_rules_isValid;
}

QString OAIApplicationGatewayRewriteRuleSetPropertiesFormat::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIApplicationGatewayRewriteRuleSetPropertiesFormat::asJsonObject() const {
    QJsonObject obj;
    if (m_provisioning_state_isSet) {
        obj.insert(QString("provisioningState"), ::OpenAPI::toJsonValue(m_provisioning_state));
    }
    if (m_rewrite_rules.size() > 0) {
        obj.insert(QString("rewriteRules"), ::OpenAPI::toJsonValue(m_rewrite_rules));
    }
    return obj;
}

QString OAIApplicationGatewayRewriteRuleSetPropertiesFormat::getProvisioningState() const {
    return m_provisioning_state;
}
void OAIApplicationGatewayRewriteRuleSetPropertiesFormat::setProvisioningState(const QString &provisioning_state) {
    m_provisioning_state = provisioning_state;
    m_provisioning_state_isSet = true;
}

bool OAIApplicationGatewayRewriteRuleSetPropertiesFormat::is_provisioning_state_Set() const{
    return m_provisioning_state_isSet;
}

bool OAIApplicationGatewayRewriteRuleSetPropertiesFormat::is_provisioning_state_Valid() const{
    return m_provisioning_state_isValid;
}

QList<OAIApplicationGatewayRewriteRule> OAIApplicationGatewayRewriteRuleSetPropertiesFormat::getRewriteRules() const {
    return m_rewrite_rules;
}
void OAIApplicationGatewayRewriteRuleSetPropertiesFormat::setRewriteRules(const QList<OAIApplicationGatewayRewriteRule> &rewrite_rules) {
    m_rewrite_rules = rewrite_rules;
    m_rewrite_rules_isSet = true;
}

bool OAIApplicationGatewayRewriteRuleSetPropertiesFormat::is_rewrite_rules_Set() const{
    return m_rewrite_rules_isSet;
}

bool OAIApplicationGatewayRewriteRuleSetPropertiesFormat::is_rewrite_rules_Valid() const{
    return m_rewrite_rules_isValid;
}

bool OAIApplicationGatewayRewriteRuleSetPropertiesFormat::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_provisioning_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rewrite_rules.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIApplicationGatewayRewriteRuleSetPropertiesFormat::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
