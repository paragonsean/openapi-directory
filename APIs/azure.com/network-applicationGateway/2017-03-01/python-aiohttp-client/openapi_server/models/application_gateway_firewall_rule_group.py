# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.application_gateway_firewall_rule import ApplicationGatewayFirewallRule
from openapi_server import util


class ApplicationGatewayFirewallRuleGroup(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, rule_group_name: str=None, rules: List[ApplicationGatewayFirewallRule]=None):
        """ApplicationGatewayFirewallRuleGroup - a model defined in OpenAPI

        :param description: The description of this ApplicationGatewayFirewallRuleGroup.
        :param rule_group_name: The rule_group_name of this ApplicationGatewayFirewallRuleGroup.
        :param rules: The rules of this ApplicationGatewayFirewallRuleGroup.
        """
        self.openapi_types = {
            'description': str,
            'rule_group_name': str,
            'rules': List[ApplicationGatewayFirewallRule]
        }

        self.attribute_map = {
            'description': 'description',
            'rule_group_name': 'ruleGroupName',
            'rules': 'rules'
        }

        self._description = description
        self._rule_group_name = rule_group_name
        self._rules = rules

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApplicationGatewayFirewallRuleGroup':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ApplicationGatewayFirewallRuleGroup of this ApplicationGatewayFirewallRuleGroup.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this ApplicationGatewayFirewallRuleGroup.

        The description of the web application firewall rule group.

        :return: The description of this ApplicationGatewayFirewallRuleGroup.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ApplicationGatewayFirewallRuleGroup.

        The description of the web application firewall rule group.

        :param description: The description of this ApplicationGatewayFirewallRuleGroup.
        :type description: str
        """

        self._description = description

    @property
    def rule_group_name(self):
        """Gets the rule_group_name of this ApplicationGatewayFirewallRuleGroup.

        The name of the web application firewall rule group.

        :return: The rule_group_name of this ApplicationGatewayFirewallRuleGroup.
        :rtype: str
        """
        return self._rule_group_name

    @rule_group_name.setter
    def rule_group_name(self, rule_group_name):
        """Sets the rule_group_name of this ApplicationGatewayFirewallRuleGroup.

        The name of the web application firewall rule group.

        :param rule_group_name: The rule_group_name of this ApplicationGatewayFirewallRuleGroup.
        :type rule_group_name: str
        """
        if rule_group_name is None:
            raise ValueError("Invalid value for `rule_group_name`, must not be `None`")

        self._rule_group_name = rule_group_name

    @property
    def rules(self):
        """Gets the rules of this ApplicationGatewayFirewallRuleGroup.

        The rules of the web application firewall rule group.

        :return: The rules of this ApplicationGatewayFirewallRuleGroup.
        :rtype: List[ApplicationGatewayFirewallRule]
        """
        return self._rules

    @rules.setter
    def rules(self, rules):
        """Sets the rules of this ApplicationGatewayFirewallRuleGroup.

        The rules of the web application firewall rule group.

        :param rules: The rules of this ApplicationGatewayFirewallRuleGroup.
        :type rules: List[ApplicationGatewayFirewallRule]
        """
        if rules is None:
            raise ValueError("Invalid value for `rules`, must not be `None`")

        self._rules = rules
