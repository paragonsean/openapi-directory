# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.application_gateway_backend_health_server import ApplicationGatewayBackendHealthServer
from openapi_server import util


class ApplicationGatewayBackendHealthHttpSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, backend_http_settings: object=None, servers: List[ApplicationGatewayBackendHealthServer]=None):
        """ApplicationGatewayBackendHealthHttpSettings - a model defined in OpenAPI

        :param backend_http_settings: The backend_http_settings of this ApplicationGatewayBackendHealthHttpSettings.
        :param servers: The servers of this ApplicationGatewayBackendHealthHttpSettings.
        """
        self.openapi_types = {
            'backend_http_settings': object,
            'servers': List[ApplicationGatewayBackendHealthServer]
        }

        self.attribute_map = {
            'backend_http_settings': 'backendHttpSettings',
            'servers': 'servers'
        }

        self._backend_http_settings = backend_http_settings
        self._servers = servers

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApplicationGatewayBackendHealthHttpSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ApplicationGatewayBackendHealthHttpSettings of this ApplicationGatewayBackendHealthHttpSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def backend_http_settings(self):
        """Gets the backend_http_settings of this ApplicationGatewayBackendHealthHttpSettings.


        :return: The backend_http_settings of this ApplicationGatewayBackendHealthHttpSettings.
        :rtype: object
        """
        return self._backend_http_settings

    @backend_http_settings.setter
    def backend_http_settings(self, backend_http_settings):
        """Sets the backend_http_settings of this ApplicationGatewayBackendHealthHttpSettings.


        :param backend_http_settings: The backend_http_settings of this ApplicationGatewayBackendHealthHttpSettings.
        :type backend_http_settings: object
        """

        self._backend_http_settings = backend_http_settings

    @property
    def servers(self):
        """Gets the servers of this ApplicationGatewayBackendHealthHttpSettings.

        List of ApplicationGatewayBackendHealthServer resources.

        :return: The servers of this ApplicationGatewayBackendHealthHttpSettings.
        :rtype: List[ApplicationGatewayBackendHealthServer]
        """
        return self._servers

    @servers.setter
    def servers(self, servers):
        """Sets the servers of this ApplicationGatewayBackendHealthHttpSettings.

        List of ApplicationGatewayBackendHealthServer resources.

        :param servers: The servers of this ApplicationGatewayBackendHealthHttpSettings.
        :type servers: List[ApplicationGatewayBackendHealthServer]
        """

        self._servers = servers
