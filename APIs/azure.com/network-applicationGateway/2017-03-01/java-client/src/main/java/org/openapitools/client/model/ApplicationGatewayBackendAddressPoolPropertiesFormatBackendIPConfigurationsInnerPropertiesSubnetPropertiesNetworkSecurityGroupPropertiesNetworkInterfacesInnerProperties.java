/*
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2017-03-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ApplicationGatewayBackendAddressPoolPropertiesFormatBackendIPConfigurationsInnerPropertiesApplicationGatewayBackendAddressPoolsInnerPropertiesBackendIPConfigurationsInner;
import org.openapitools.client.model.ApplicationGatewayBackendAddressPoolPropertiesFormatBackendIPConfigurationsInnerPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesNetworkInterfacesInnerPropertiesDnsSettings;
import org.openapitools.client.model.Model0;
import org.openapitools.client.model.NetworkSecurityGroup;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * NetworkInterface properties. 
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:14:15.298022-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ApplicationGatewayBackendAddressPoolPropertiesFormatBackendIPConfigurationsInnerPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesNetworkInterfacesInnerProperties {
  public static final String SERIALIZED_NAME_DNS_SETTINGS = "dnsSettings";
  @SerializedName(SERIALIZED_NAME_DNS_SETTINGS)
  private ApplicationGatewayBackendAddressPoolPropertiesFormatBackendIPConfigurationsInnerPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesNetworkInterfacesInnerPropertiesDnsSettings dnsSettings;

  public static final String SERIALIZED_NAME_ENABLE_ACCELERATED_NETWORKING = "enableAcceleratedNetworking";
  @SerializedName(SERIALIZED_NAME_ENABLE_ACCELERATED_NETWORKING)
  private Boolean enableAcceleratedNetworking;

  public static final String SERIALIZED_NAME_ENABLE_I_P_FORWARDING = "enableIPForwarding";
  @SerializedName(SERIALIZED_NAME_ENABLE_I_P_FORWARDING)
  private Boolean enableIPForwarding;

  public static final String SERIALIZED_NAME_IP_CONFIGURATIONS = "ipConfigurations";
  @SerializedName(SERIALIZED_NAME_IP_CONFIGURATIONS)
  private List<ApplicationGatewayBackendAddressPoolPropertiesFormatBackendIPConfigurationsInnerPropertiesApplicationGatewayBackendAddressPoolsInnerPropertiesBackendIPConfigurationsInner> ipConfigurations = new ArrayList<>();

  public static final String SERIALIZED_NAME_MAC_ADDRESS = "macAddress";
  @SerializedName(SERIALIZED_NAME_MAC_ADDRESS)
  private String macAddress;

  public static final String SERIALIZED_NAME_NETWORK_SECURITY_GROUP = "networkSecurityGroup";
  @SerializedName(SERIALIZED_NAME_NETWORK_SECURITY_GROUP)
  private NetworkSecurityGroup networkSecurityGroup = null;

  public static final String SERIALIZED_NAME_PRIMARY = "primary";
  @SerializedName(SERIALIZED_NAME_PRIMARY)
  private Boolean primary;

  public static final String SERIALIZED_NAME_PROVISIONING_STATE = "provisioningState";
  @SerializedName(SERIALIZED_NAME_PROVISIONING_STATE)
  private String provisioningState;

  public static final String SERIALIZED_NAME_RESOURCE_GUID = "resourceGuid";
  @SerializedName(SERIALIZED_NAME_RESOURCE_GUID)
  private String resourceGuid;

  public static final String SERIALIZED_NAME_VIRTUAL_MACHINE = "virtualMachine";
  @SerializedName(SERIALIZED_NAME_VIRTUAL_MACHINE)
  private Model0 virtualMachine = null;

  public ApplicationGatewayBackendAddressPoolPropertiesFormatBackendIPConfigurationsInnerPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesNetworkInterfacesInnerProperties() {
  }

  public ApplicationGatewayBackendAddressPoolPropertiesFormatBackendIPConfigurationsInnerPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesNetworkInterfacesInnerProperties dnsSettings(ApplicationGatewayBackendAddressPoolPropertiesFormatBackendIPConfigurationsInnerPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesNetworkInterfacesInnerPropertiesDnsSettings dnsSettings) {
    this.dnsSettings = dnsSettings;
    return this;
  }

  /**
   * Get dnsSettings
   * @return dnsSettings
   */
  @javax.annotation.Nullable
  public ApplicationGatewayBackendAddressPoolPropertiesFormatBackendIPConfigurationsInnerPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesNetworkInterfacesInnerPropertiesDnsSettings getDnsSettings() {
    return dnsSettings;
  }

  public void setDnsSettings(ApplicationGatewayBackendAddressPoolPropertiesFormatBackendIPConfigurationsInnerPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesNetworkInterfacesInnerPropertiesDnsSettings dnsSettings) {
    this.dnsSettings = dnsSettings;
  }


  public ApplicationGatewayBackendAddressPoolPropertiesFormatBackendIPConfigurationsInnerPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesNetworkInterfacesInnerProperties enableAcceleratedNetworking(Boolean enableAcceleratedNetworking) {
    this.enableAcceleratedNetworking = enableAcceleratedNetworking;
    return this;
  }

  /**
   * If the network interface is accelerated networking enabled.
   * @return enableAcceleratedNetworking
   */
  @javax.annotation.Nullable
  public Boolean getEnableAcceleratedNetworking() {
    return enableAcceleratedNetworking;
  }

  public void setEnableAcceleratedNetworking(Boolean enableAcceleratedNetworking) {
    this.enableAcceleratedNetworking = enableAcceleratedNetworking;
  }


  public ApplicationGatewayBackendAddressPoolPropertiesFormatBackendIPConfigurationsInnerPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesNetworkInterfacesInnerProperties enableIPForwarding(Boolean enableIPForwarding) {
    this.enableIPForwarding = enableIPForwarding;
    return this;
  }

  /**
   * Indicates whether IP forwarding is enabled on this network interface.
   * @return enableIPForwarding
   */
  @javax.annotation.Nullable
  public Boolean getEnableIPForwarding() {
    return enableIPForwarding;
  }

  public void setEnableIPForwarding(Boolean enableIPForwarding) {
    this.enableIPForwarding = enableIPForwarding;
  }


  public ApplicationGatewayBackendAddressPoolPropertiesFormatBackendIPConfigurationsInnerPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesNetworkInterfacesInnerProperties ipConfigurations(List<ApplicationGatewayBackendAddressPoolPropertiesFormatBackendIPConfigurationsInnerPropertiesApplicationGatewayBackendAddressPoolsInnerPropertiesBackendIPConfigurationsInner> ipConfigurations) {
    this.ipConfigurations = ipConfigurations;
    return this;
  }

  public ApplicationGatewayBackendAddressPoolPropertiesFormatBackendIPConfigurationsInnerPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesNetworkInterfacesInnerProperties addIpConfigurationsItem(ApplicationGatewayBackendAddressPoolPropertiesFormatBackendIPConfigurationsInnerPropertiesApplicationGatewayBackendAddressPoolsInnerPropertiesBackendIPConfigurationsInner ipConfigurationsItem) {
    if (this.ipConfigurations == null) {
      this.ipConfigurations = new ArrayList<>();
    }
    this.ipConfigurations.add(ipConfigurationsItem);
    return this;
  }

  /**
   * A list of IPConfigurations of the network interface.
   * @return ipConfigurations
   */
  @javax.annotation.Nullable
  public List<ApplicationGatewayBackendAddressPoolPropertiesFormatBackendIPConfigurationsInnerPropertiesApplicationGatewayBackendAddressPoolsInnerPropertiesBackendIPConfigurationsInner> getIpConfigurations() {
    return ipConfigurations;
  }

  public void setIpConfigurations(List<ApplicationGatewayBackendAddressPoolPropertiesFormatBackendIPConfigurationsInnerPropertiesApplicationGatewayBackendAddressPoolsInnerPropertiesBackendIPConfigurationsInner> ipConfigurations) {
    this.ipConfigurations = ipConfigurations;
  }


  public ApplicationGatewayBackendAddressPoolPropertiesFormatBackendIPConfigurationsInnerPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesNetworkInterfacesInnerProperties macAddress(String macAddress) {
    this.macAddress = macAddress;
    return this;
  }

  /**
   * The MAC address of the network interface.
   * @return macAddress
   */
  @javax.annotation.Nullable
  public String getMacAddress() {
    return macAddress;
  }

  public void setMacAddress(String macAddress) {
    this.macAddress = macAddress;
  }


  public ApplicationGatewayBackendAddressPoolPropertiesFormatBackendIPConfigurationsInnerPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesNetworkInterfacesInnerProperties networkSecurityGroup(NetworkSecurityGroup networkSecurityGroup) {
    this.networkSecurityGroup = networkSecurityGroup;
    return this;
  }

  /**
   * Get networkSecurityGroup
   * @return networkSecurityGroup
   */
  @javax.annotation.Nullable
  public NetworkSecurityGroup getNetworkSecurityGroup() {
    return networkSecurityGroup;
  }

  public void setNetworkSecurityGroup(NetworkSecurityGroup networkSecurityGroup) {
    this.networkSecurityGroup = networkSecurityGroup;
  }


  public ApplicationGatewayBackendAddressPoolPropertiesFormatBackendIPConfigurationsInnerPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesNetworkInterfacesInnerProperties primary(Boolean primary) {
    this.primary = primary;
    return this;
  }

  /**
   * Gets whether this is a primary network interface on a virtual machine.
   * @return primary
   */
  @javax.annotation.Nullable
  public Boolean getPrimary() {
    return primary;
  }

  public void setPrimary(Boolean primary) {
    this.primary = primary;
  }


  public ApplicationGatewayBackendAddressPoolPropertiesFormatBackendIPConfigurationsInnerPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesNetworkInterfacesInnerProperties provisioningState(String provisioningState) {
    this.provisioningState = provisioningState;
    return this;
  }

  /**
   * The provisioning state of the public IP resource. Possible values are: &#39;Updating&#39;, &#39;Deleting&#39;, and &#39;Failed&#39;.
   * @return provisioningState
   */
  @javax.annotation.Nullable
  public String getProvisioningState() {
    return provisioningState;
  }

  public void setProvisioningState(String provisioningState) {
    this.provisioningState = provisioningState;
  }


  public ApplicationGatewayBackendAddressPoolPropertiesFormatBackendIPConfigurationsInnerPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesNetworkInterfacesInnerProperties resourceGuid(String resourceGuid) {
    this.resourceGuid = resourceGuid;
    return this;
  }

  /**
   * The resource GUID property of the network interface resource.
   * @return resourceGuid
   */
  @javax.annotation.Nullable
  public String getResourceGuid() {
    return resourceGuid;
  }

  public void setResourceGuid(String resourceGuid) {
    this.resourceGuid = resourceGuid;
  }


  public ApplicationGatewayBackendAddressPoolPropertiesFormatBackendIPConfigurationsInnerPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesNetworkInterfacesInnerProperties virtualMachine(Model0 virtualMachine) {
    this.virtualMachine = virtualMachine;
    return this;
  }

  /**
   * Get virtualMachine
   * @return virtualMachine
   */
  @javax.annotation.Nullable
  public Model0 getVirtualMachine() {
    return virtualMachine;
  }

  public void setVirtualMachine(Model0 virtualMachine) {
    this.virtualMachine = virtualMachine;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApplicationGatewayBackendAddressPoolPropertiesFormatBackendIPConfigurationsInnerPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesNetworkInterfacesInnerProperties applicationGatewayBackendAddressPoolPropertiesFormatBackendIPConfigurationsInnerPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesNetworkInterfacesInnerProperties = (ApplicationGatewayBackendAddressPoolPropertiesFormatBackendIPConfigurationsInnerPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesNetworkInterfacesInnerProperties) o;
    return Objects.equals(this.dnsSettings, applicationGatewayBackendAddressPoolPropertiesFormatBackendIPConfigurationsInnerPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesNetworkInterfacesInnerProperties.dnsSettings) &&
        Objects.equals(this.enableAcceleratedNetworking, applicationGatewayBackendAddressPoolPropertiesFormatBackendIPConfigurationsInnerPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesNetworkInterfacesInnerProperties.enableAcceleratedNetworking) &&
        Objects.equals(this.enableIPForwarding, applicationGatewayBackendAddressPoolPropertiesFormatBackendIPConfigurationsInnerPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesNetworkInterfacesInnerProperties.enableIPForwarding) &&
        Objects.equals(this.ipConfigurations, applicationGatewayBackendAddressPoolPropertiesFormatBackendIPConfigurationsInnerPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesNetworkInterfacesInnerProperties.ipConfigurations) &&
        Objects.equals(this.macAddress, applicationGatewayBackendAddressPoolPropertiesFormatBackendIPConfigurationsInnerPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesNetworkInterfacesInnerProperties.macAddress) &&
        Objects.equals(this.networkSecurityGroup, applicationGatewayBackendAddressPoolPropertiesFormatBackendIPConfigurationsInnerPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesNetworkInterfacesInnerProperties.networkSecurityGroup) &&
        Objects.equals(this.primary, applicationGatewayBackendAddressPoolPropertiesFormatBackendIPConfigurationsInnerPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesNetworkInterfacesInnerProperties.primary) &&
        Objects.equals(this.provisioningState, applicationGatewayBackendAddressPoolPropertiesFormatBackendIPConfigurationsInnerPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesNetworkInterfacesInnerProperties.provisioningState) &&
        Objects.equals(this.resourceGuid, applicationGatewayBackendAddressPoolPropertiesFormatBackendIPConfigurationsInnerPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesNetworkInterfacesInnerProperties.resourceGuid) &&
        Objects.equals(this.virtualMachine, applicationGatewayBackendAddressPoolPropertiesFormatBackendIPConfigurationsInnerPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesNetworkInterfacesInnerProperties.virtualMachine);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dnsSettings, enableAcceleratedNetworking, enableIPForwarding, ipConfigurations, macAddress, networkSecurityGroup, primary, provisioningState, resourceGuid, virtualMachine);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApplicationGatewayBackendAddressPoolPropertiesFormatBackendIPConfigurationsInnerPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesNetworkInterfacesInnerProperties {\n");
    sb.append("    dnsSettings: ").append(toIndentedString(dnsSettings)).append("\n");
    sb.append("    enableAcceleratedNetworking: ").append(toIndentedString(enableAcceleratedNetworking)).append("\n");
    sb.append("    enableIPForwarding: ").append(toIndentedString(enableIPForwarding)).append("\n");
    sb.append("    ipConfigurations: ").append(toIndentedString(ipConfigurations)).append("\n");
    sb.append("    macAddress: ").append(toIndentedString(macAddress)).append("\n");
    sb.append("    networkSecurityGroup: ").append(toIndentedString(networkSecurityGroup)).append("\n");
    sb.append("    primary: ").append(toIndentedString(primary)).append("\n");
    sb.append("    provisioningState: ").append(toIndentedString(provisioningState)).append("\n");
    sb.append("    resourceGuid: ").append(toIndentedString(resourceGuid)).append("\n");
    sb.append("    virtualMachine: ").append(toIndentedString(virtualMachine)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("dnsSettings");
    openapiFields.add("enableAcceleratedNetworking");
    openapiFields.add("enableIPForwarding");
    openapiFields.add("ipConfigurations");
    openapiFields.add("macAddress");
    openapiFields.add("networkSecurityGroup");
    openapiFields.add("primary");
    openapiFields.add("provisioningState");
    openapiFields.add("resourceGuid");
    openapiFields.add("virtualMachine");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ApplicationGatewayBackendAddressPoolPropertiesFormatBackendIPConfigurationsInnerPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesNetworkInterfacesInnerProperties
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ApplicationGatewayBackendAddressPoolPropertiesFormatBackendIPConfigurationsInnerPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesNetworkInterfacesInnerProperties.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ApplicationGatewayBackendAddressPoolPropertiesFormatBackendIPConfigurationsInnerPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesNetworkInterfacesInnerProperties is not found in the empty JSON string", ApplicationGatewayBackendAddressPoolPropertiesFormatBackendIPConfigurationsInnerPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesNetworkInterfacesInnerProperties.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ApplicationGatewayBackendAddressPoolPropertiesFormatBackendIPConfigurationsInnerPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesNetworkInterfacesInnerProperties.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ApplicationGatewayBackendAddressPoolPropertiesFormatBackendIPConfigurationsInnerPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesNetworkInterfacesInnerProperties` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `dnsSettings`
      if (jsonObj.get("dnsSettings") != null && !jsonObj.get("dnsSettings").isJsonNull()) {
        ApplicationGatewayBackendAddressPoolPropertiesFormatBackendIPConfigurationsInnerPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesNetworkInterfacesInnerPropertiesDnsSettings.validateJsonElement(jsonObj.get("dnsSettings"));
      }
      if (jsonObj.get("ipConfigurations") != null && !jsonObj.get("ipConfigurations").isJsonNull()) {
        JsonArray jsonArrayipConfigurations = jsonObj.getAsJsonArray("ipConfigurations");
        if (jsonArrayipConfigurations != null) {
          // ensure the json data is an array
          if (!jsonObj.get("ipConfigurations").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `ipConfigurations` to be an array in the JSON string but got `%s`", jsonObj.get("ipConfigurations").toString()));
          }

          // validate the optional field `ipConfigurations` (array)
          for (int i = 0; i < jsonArrayipConfigurations.size(); i++) {
            ApplicationGatewayBackendAddressPoolPropertiesFormatBackendIPConfigurationsInnerPropertiesApplicationGatewayBackendAddressPoolsInnerPropertiesBackendIPConfigurationsInner.validateJsonElement(jsonArrayipConfigurations.get(i));
          };
        }
      }
      if ((jsonObj.get("macAddress") != null && !jsonObj.get("macAddress").isJsonNull()) && !jsonObj.get("macAddress").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `macAddress` to be a primitive type in the JSON string but got `%s`", jsonObj.get("macAddress").toString()));
      }
      if ((jsonObj.get("provisioningState") != null && !jsonObj.get("provisioningState").isJsonNull()) && !jsonObj.get("provisioningState").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `provisioningState` to be a primitive type in the JSON string but got `%s`", jsonObj.get("provisioningState").toString()));
      }
      if ((jsonObj.get("resourceGuid") != null && !jsonObj.get("resourceGuid").isJsonNull()) && !jsonObj.get("resourceGuid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `resourceGuid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("resourceGuid").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ApplicationGatewayBackendAddressPoolPropertiesFormatBackendIPConfigurationsInnerPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesNetworkInterfacesInnerProperties.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ApplicationGatewayBackendAddressPoolPropertiesFormatBackendIPConfigurationsInnerPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesNetworkInterfacesInnerProperties' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ApplicationGatewayBackendAddressPoolPropertiesFormatBackendIPConfigurationsInnerPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesNetworkInterfacesInnerProperties> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ApplicationGatewayBackendAddressPoolPropertiesFormatBackendIPConfigurationsInnerPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesNetworkInterfacesInnerProperties.class));

       return (TypeAdapter<T>) new TypeAdapter<ApplicationGatewayBackendAddressPoolPropertiesFormatBackendIPConfigurationsInnerPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesNetworkInterfacesInnerProperties>() {
           @Override
           public void write(JsonWriter out, ApplicationGatewayBackendAddressPoolPropertiesFormatBackendIPConfigurationsInnerPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesNetworkInterfacesInnerProperties value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ApplicationGatewayBackendAddressPoolPropertiesFormatBackendIPConfigurationsInnerPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesNetworkInterfacesInnerProperties read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ApplicationGatewayBackendAddressPoolPropertiesFormatBackendIPConfigurationsInnerPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesNetworkInterfacesInnerProperties given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ApplicationGatewayBackendAddressPoolPropertiesFormatBackendIPConfigurationsInnerPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesNetworkInterfacesInnerProperties
   * @throws IOException if the JSON string is invalid with respect to ApplicationGatewayBackendAddressPoolPropertiesFormatBackendIPConfigurationsInnerPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesNetworkInterfacesInnerProperties
   */
  public static ApplicationGatewayBackendAddressPoolPropertiesFormatBackendIPConfigurationsInnerPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesNetworkInterfacesInnerProperties fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ApplicationGatewayBackendAddressPoolPropertiesFormatBackendIPConfigurationsInnerPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesNetworkInterfacesInnerProperties.class);
  }

  /**
   * Convert an instance of ApplicationGatewayBackendAddressPoolPropertiesFormatBackendIPConfigurationsInnerPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesNetworkInterfacesInnerProperties to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

