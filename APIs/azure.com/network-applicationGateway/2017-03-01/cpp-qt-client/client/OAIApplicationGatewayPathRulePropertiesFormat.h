/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2017-03-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIApplicationGatewayPathRulePropertiesFormat.h
 *
 * Properties of probe of an application gateway.
 */

#ifndef OAIApplicationGatewayPathRulePropertiesFormat_H
#define OAIApplicationGatewayPathRulePropertiesFormat_H

#include <QJsonObject>

#include "OAIApplicationGatewayHttpListenerPropertiesFormat_frontendPort.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIApplicationGatewayHttpListenerPropertiesFormat_frontendPort;

class OAIApplicationGatewayPathRulePropertiesFormat : public OAIObject {
public:
    OAIApplicationGatewayPathRulePropertiesFormat();
    OAIApplicationGatewayPathRulePropertiesFormat(QString json);
    ~OAIApplicationGatewayPathRulePropertiesFormat() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIApplicationGatewayHttpListenerPropertiesFormat_frontendPort getBackendAddressPool() const;
    void setBackendAddressPool(const OAIApplicationGatewayHttpListenerPropertiesFormat_frontendPort &backend_address_pool);
    bool is_backend_address_pool_Set() const;
    bool is_backend_address_pool_Valid() const;

    OAIApplicationGatewayHttpListenerPropertiesFormat_frontendPort getBackendHttpSettings() const;
    void setBackendHttpSettings(const OAIApplicationGatewayHttpListenerPropertiesFormat_frontendPort &backend_http_settings);
    bool is_backend_http_settings_Set() const;
    bool is_backend_http_settings_Valid() const;

    QList<QString> getPaths() const;
    void setPaths(const QList<QString> &paths);
    bool is_paths_Set() const;
    bool is_paths_Valid() const;

    QString getProvisioningState() const;
    void setProvisioningState(const QString &provisioning_state);
    bool is_provisioning_state_Set() const;
    bool is_provisioning_state_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIApplicationGatewayHttpListenerPropertiesFormat_frontendPort m_backend_address_pool;
    bool m_backend_address_pool_isSet;
    bool m_backend_address_pool_isValid;

    OAIApplicationGatewayHttpListenerPropertiesFormat_frontendPort m_backend_http_settings;
    bool m_backend_http_settings_isSet;
    bool m_backend_http_settings_isValid;

    QList<QString> m_paths;
    bool m_paths_isSet;
    bool m_paths_isValid;

    QString m_provisioning_state;
    bool m_provisioning_state_isSet;
    bool m_provisioning_state_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIApplicationGatewayPathRulePropertiesFormat)

#endif // OAIApplicationGatewayPathRulePropertiesFormat_H
