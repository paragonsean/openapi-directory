# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.application_gateway_sku import ApplicationGatewaySku
from openapi_server.models.application_gateway_ssl_policy import ApplicationGatewaySslPolicy
from openapi_server.models.application_gateway_web_application_firewall_configuration import ApplicationGatewayWebApplicationFirewallConfiguration
from openapi_server import util


class ApplicationGatewayPropertiesFormat(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, authentication_certificates: List[object]=None, backend_address_pools: List[object]=None, backend_http_settings_collection: List[object]=None, enable_http2: bool=None, frontend_ip_configurations: List[object]=None, frontend_ports: List[object]=None, gateway_ip_configurations: List[object]=None, http_listeners: List[object]=None, operational_state: str=None, probes: List[object]=None, provisioning_state: str=None, redirect_configurations: List[object]=None, request_routing_rules: List[object]=None, resource_guid: str=None, sku: ApplicationGatewaySku=None, ssl_certificates: List[object]=None, ssl_policy: ApplicationGatewaySslPolicy=None, url_path_maps: List[object]=None, web_application_firewall_configuration: ApplicationGatewayWebApplicationFirewallConfiguration=None):
        """ApplicationGatewayPropertiesFormat - a model defined in OpenAPI

        :param authentication_certificates: The authentication_certificates of this ApplicationGatewayPropertiesFormat.
        :param backend_address_pools: The backend_address_pools of this ApplicationGatewayPropertiesFormat.
        :param backend_http_settings_collection: The backend_http_settings_collection of this ApplicationGatewayPropertiesFormat.
        :param enable_http2: The enable_http2 of this ApplicationGatewayPropertiesFormat.
        :param frontend_ip_configurations: The frontend_ip_configurations of this ApplicationGatewayPropertiesFormat.
        :param frontend_ports: The frontend_ports of this ApplicationGatewayPropertiesFormat.
        :param gateway_ip_configurations: The gateway_ip_configurations of this ApplicationGatewayPropertiesFormat.
        :param http_listeners: The http_listeners of this ApplicationGatewayPropertiesFormat.
        :param operational_state: The operational_state of this ApplicationGatewayPropertiesFormat.
        :param probes: The probes of this ApplicationGatewayPropertiesFormat.
        :param provisioning_state: The provisioning_state of this ApplicationGatewayPropertiesFormat.
        :param redirect_configurations: The redirect_configurations of this ApplicationGatewayPropertiesFormat.
        :param request_routing_rules: The request_routing_rules of this ApplicationGatewayPropertiesFormat.
        :param resource_guid: The resource_guid of this ApplicationGatewayPropertiesFormat.
        :param sku: The sku of this ApplicationGatewayPropertiesFormat.
        :param ssl_certificates: The ssl_certificates of this ApplicationGatewayPropertiesFormat.
        :param ssl_policy: The ssl_policy of this ApplicationGatewayPropertiesFormat.
        :param url_path_maps: The url_path_maps of this ApplicationGatewayPropertiesFormat.
        :param web_application_firewall_configuration: The web_application_firewall_configuration of this ApplicationGatewayPropertiesFormat.
        """
        self.openapi_types = {
            'authentication_certificates': List[object],
            'backend_address_pools': List[object],
            'backend_http_settings_collection': List[object],
            'enable_http2': bool,
            'frontend_ip_configurations': List[object],
            'frontend_ports': List[object],
            'gateway_ip_configurations': List[object],
            'http_listeners': List[object],
            'operational_state': str,
            'probes': List[object],
            'provisioning_state': str,
            'redirect_configurations': List[object],
            'request_routing_rules': List[object],
            'resource_guid': str,
            'sku': ApplicationGatewaySku,
            'ssl_certificates': List[object],
            'ssl_policy': ApplicationGatewaySslPolicy,
            'url_path_maps': List[object],
            'web_application_firewall_configuration': ApplicationGatewayWebApplicationFirewallConfiguration
        }

        self.attribute_map = {
            'authentication_certificates': 'authenticationCertificates',
            'backend_address_pools': 'backendAddressPools',
            'backend_http_settings_collection': 'backendHttpSettingsCollection',
            'enable_http2': 'enableHttp2',
            'frontend_ip_configurations': 'frontendIPConfigurations',
            'frontend_ports': 'frontendPorts',
            'gateway_ip_configurations': 'gatewayIPConfigurations',
            'http_listeners': 'httpListeners',
            'operational_state': 'operationalState',
            'probes': 'probes',
            'provisioning_state': 'provisioningState',
            'redirect_configurations': 'redirectConfigurations',
            'request_routing_rules': 'requestRoutingRules',
            'resource_guid': 'resourceGuid',
            'sku': 'sku',
            'ssl_certificates': 'sslCertificates',
            'ssl_policy': 'sslPolicy',
            'url_path_maps': 'urlPathMaps',
            'web_application_firewall_configuration': 'webApplicationFirewallConfiguration'
        }

        self._authentication_certificates = authentication_certificates
        self._backend_address_pools = backend_address_pools
        self._backend_http_settings_collection = backend_http_settings_collection
        self._enable_http2 = enable_http2
        self._frontend_ip_configurations = frontend_ip_configurations
        self._frontend_ports = frontend_ports
        self._gateway_ip_configurations = gateway_ip_configurations
        self._http_listeners = http_listeners
        self._operational_state = operational_state
        self._probes = probes
        self._provisioning_state = provisioning_state
        self._redirect_configurations = redirect_configurations
        self._request_routing_rules = request_routing_rules
        self._resource_guid = resource_guid
        self._sku = sku
        self._ssl_certificates = ssl_certificates
        self._ssl_policy = ssl_policy
        self._url_path_maps = url_path_maps
        self._web_application_firewall_configuration = web_application_firewall_configuration

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApplicationGatewayPropertiesFormat':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ApplicationGatewayPropertiesFormat of this ApplicationGatewayPropertiesFormat.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def authentication_certificates(self):
        """Gets the authentication_certificates of this ApplicationGatewayPropertiesFormat.

        Authentication certificates of the application gateway resource.

        :return: The authentication_certificates of this ApplicationGatewayPropertiesFormat.
        :rtype: List[object]
        """
        return self._authentication_certificates

    @authentication_certificates.setter
    def authentication_certificates(self, authentication_certificates):
        """Sets the authentication_certificates of this ApplicationGatewayPropertiesFormat.

        Authentication certificates of the application gateway resource.

        :param authentication_certificates: The authentication_certificates of this ApplicationGatewayPropertiesFormat.
        :type authentication_certificates: List[object]
        """

        self._authentication_certificates = authentication_certificates

    @property
    def backend_address_pools(self):
        """Gets the backend_address_pools of this ApplicationGatewayPropertiesFormat.

        Backend address pool of the application gateway resource.

        :return: The backend_address_pools of this ApplicationGatewayPropertiesFormat.
        :rtype: List[object]
        """
        return self._backend_address_pools

    @backend_address_pools.setter
    def backend_address_pools(self, backend_address_pools):
        """Sets the backend_address_pools of this ApplicationGatewayPropertiesFormat.

        Backend address pool of the application gateway resource.

        :param backend_address_pools: The backend_address_pools of this ApplicationGatewayPropertiesFormat.
        :type backend_address_pools: List[object]
        """

        self._backend_address_pools = backend_address_pools

    @property
    def backend_http_settings_collection(self):
        """Gets the backend_http_settings_collection of this ApplicationGatewayPropertiesFormat.

        Backend http settings of the application gateway resource.

        :return: The backend_http_settings_collection of this ApplicationGatewayPropertiesFormat.
        :rtype: List[object]
        """
        return self._backend_http_settings_collection

    @backend_http_settings_collection.setter
    def backend_http_settings_collection(self, backend_http_settings_collection):
        """Sets the backend_http_settings_collection of this ApplicationGatewayPropertiesFormat.

        Backend http settings of the application gateway resource.

        :param backend_http_settings_collection: The backend_http_settings_collection of this ApplicationGatewayPropertiesFormat.
        :type backend_http_settings_collection: List[object]
        """

        self._backend_http_settings_collection = backend_http_settings_collection

    @property
    def enable_http2(self):
        """Gets the enable_http2 of this ApplicationGatewayPropertiesFormat.

        Whether HTTP2 is enabled on the application gateway resource.

        :return: The enable_http2 of this ApplicationGatewayPropertiesFormat.
        :rtype: bool
        """
        return self._enable_http2

    @enable_http2.setter
    def enable_http2(self, enable_http2):
        """Sets the enable_http2 of this ApplicationGatewayPropertiesFormat.

        Whether HTTP2 is enabled on the application gateway resource.

        :param enable_http2: The enable_http2 of this ApplicationGatewayPropertiesFormat.
        :type enable_http2: bool
        """

        self._enable_http2 = enable_http2

    @property
    def frontend_ip_configurations(self):
        """Gets the frontend_ip_configurations of this ApplicationGatewayPropertiesFormat.

        Frontend IP addresses of the application gateway resource.

        :return: The frontend_ip_configurations of this ApplicationGatewayPropertiesFormat.
        :rtype: List[object]
        """
        return self._frontend_ip_configurations

    @frontend_ip_configurations.setter
    def frontend_ip_configurations(self, frontend_ip_configurations):
        """Sets the frontend_ip_configurations of this ApplicationGatewayPropertiesFormat.

        Frontend IP addresses of the application gateway resource.

        :param frontend_ip_configurations: The frontend_ip_configurations of this ApplicationGatewayPropertiesFormat.
        :type frontend_ip_configurations: List[object]
        """

        self._frontend_ip_configurations = frontend_ip_configurations

    @property
    def frontend_ports(self):
        """Gets the frontend_ports of this ApplicationGatewayPropertiesFormat.

        Frontend ports of the application gateway resource.

        :return: The frontend_ports of this ApplicationGatewayPropertiesFormat.
        :rtype: List[object]
        """
        return self._frontend_ports

    @frontend_ports.setter
    def frontend_ports(self, frontend_ports):
        """Sets the frontend_ports of this ApplicationGatewayPropertiesFormat.

        Frontend ports of the application gateway resource.

        :param frontend_ports: The frontend_ports of this ApplicationGatewayPropertiesFormat.
        :type frontend_ports: List[object]
        """

        self._frontend_ports = frontend_ports

    @property
    def gateway_ip_configurations(self):
        """Gets the gateway_ip_configurations of this ApplicationGatewayPropertiesFormat.

        Subnets of application the gateway resource.

        :return: The gateway_ip_configurations of this ApplicationGatewayPropertiesFormat.
        :rtype: List[object]
        """
        return self._gateway_ip_configurations

    @gateway_ip_configurations.setter
    def gateway_ip_configurations(self, gateway_ip_configurations):
        """Sets the gateway_ip_configurations of this ApplicationGatewayPropertiesFormat.

        Subnets of application the gateway resource.

        :param gateway_ip_configurations: The gateway_ip_configurations of this ApplicationGatewayPropertiesFormat.
        :type gateway_ip_configurations: List[object]
        """

        self._gateway_ip_configurations = gateway_ip_configurations

    @property
    def http_listeners(self):
        """Gets the http_listeners of this ApplicationGatewayPropertiesFormat.

        Http listeners of the application gateway resource.

        :return: The http_listeners of this ApplicationGatewayPropertiesFormat.
        :rtype: List[object]
        """
        return self._http_listeners

    @http_listeners.setter
    def http_listeners(self, http_listeners):
        """Sets the http_listeners of this ApplicationGatewayPropertiesFormat.

        Http listeners of the application gateway resource.

        :param http_listeners: The http_listeners of this ApplicationGatewayPropertiesFormat.
        :type http_listeners: List[object]
        """

        self._http_listeners = http_listeners

    @property
    def operational_state(self):
        """Gets the operational_state of this ApplicationGatewayPropertiesFormat.

        Operational state of the application gateway resource.

        :return: The operational_state of this ApplicationGatewayPropertiesFormat.
        :rtype: str
        """
        return self._operational_state

    @operational_state.setter
    def operational_state(self, operational_state):
        """Sets the operational_state of this ApplicationGatewayPropertiesFormat.

        Operational state of the application gateway resource.

        :param operational_state: The operational_state of this ApplicationGatewayPropertiesFormat.
        :type operational_state: str
        """
        allowed_values = ["Stopped", "Starting", "Running", "Stopping"]  # noqa: E501
        if operational_state not in allowed_values:
            raise ValueError(
                "Invalid value for `operational_state` ({0}), must be one of {1}"
                .format(operational_state, allowed_values)
            )

        self._operational_state = operational_state

    @property
    def probes(self):
        """Gets the probes of this ApplicationGatewayPropertiesFormat.

        Probes of the application gateway resource.

        :return: The probes of this ApplicationGatewayPropertiesFormat.
        :rtype: List[object]
        """
        return self._probes

    @probes.setter
    def probes(self, probes):
        """Sets the probes of this ApplicationGatewayPropertiesFormat.

        Probes of the application gateway resource.

        :param probes: The probes of this ApplicationGatewayPropertiesFormat.
        :type probes: List[object]
        """

        self._probes = probes

    @property
    def provisioning_state(self):
        """Gets the provisioning_state of this ApplicationGatewayPropertiesFormat.

        Provisioning state of the application gateway resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.

        :return: The provisioning_state of this ApplicationGatewayPropertiesFormat.
        :rtype: str
        """
        return self._provisioning_state

    @provisioning_state.setter
    def provisioning_state(self, provisioning_state):
        """Sets the provisioning_state of this ApplicationGatewayPropertiesFormat.

        Provisioning state of the application gateway resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.

        :param provisioning_state: The provisioning_state of this ApplicationGatewayPropertiesFormat.
        :type provisioning_state: str
        """

        self._provisioning_state = provisioning_state

    @property
    def redirect_configurations(self):
        """Gets the redirect_configurations of this ApplicationGatewayPropertiesFormat.

        Redirect configurations of the application gateway resource.

        :return: The redirect_configurations of this ApplicationGatewayPropertiesFormat.
        :rtype: List[object]
        """
        return self._redirect_configurations

    @redirect_configurations.setter
    def redirect_configurations(self, redirect_configurations):
        """Sets the redirect_configurations of this ApplicationGatewayPropertiesFormat.

        Redirect configurations of the application gateway resource.

        :param redirect_configurations: The redirect_configurations of this ApplicationGatewayPropertiesFormat.
        :type redirect_configurations: List[object]
        """

        self._redirect_configurations = redirect_configurations

    @property
    def request_routing_rules(self):
        """Gets the request_routing_rules of this ApplicationGatewayPropertiesFormat.

        Request routing rules of the application gateway resource.

        :return: The request_routing_rules of this ApplicationGatewayPropertiesFormat.
        :rtype: List[object]
        """
        return self._request_routing_rules

    @request_routing_rules.setter
    def request_routing_rules(self, request_routing_rules):
        """Sets the request_routing_rules of this ApplicationGatewayPropertiesFormat.

        Request routing rules of the application gateway resource.

        :param request_routing_rules: The request_routing_rules of this ApplicationGatewayPropertiesFormat.
        :type request_routing_rules: List[object]
        """

        self._request_routing_rules = request_routing_rules

    @property
    def resource_guid(self):
        """Gets the resource_guid of this ApplicationGatewayPropertiesFormat.

        Resource GUID property of the application gateway resource.

        :return: The resource_guid of this ApplicationGatewayPropertiesFormat.
        :rtype: str
        """
        return self._resource_guid

    @resource_guid.setter
    def resource_guid(self, resource_guid):
        """Sets the resource_guid of this ApplicationGatewayPropertiesFormat.

        Resource GUID property of the application gateway resource.

        :param resource_guid: The resource_guid of this ApplicationGatewayPropertiesFormat.
        :type resource_guid: str
        """

        self._resource_guid = resource_guid

    @property
    def sku(self):
        """Gets the sku of this ApplicationGatewayPropertiesFormat.


        :return: The sku of this ApplicationGatewayPropertiesFormat.
        :rtype: ApplicationGatewaySku
        """
        return self._sku

    @sku.setter
    def sku(self, sku):
        """Sets the sku of this ApplicationGatewayPropertiesFormat.


        :param sku: The sku of this ApplicationGatewayPropertiesFormat.
        :type sku: ApplicationGatewaySku
        """

        self._sku = sku

    @property
    def ssl_certificates(self):
        """Gets the ssl_certificates of this ApplicationGatewayPropertiesFormat.

        SSL certificates of the application gateway resource.

        :return: The ssl_certificates of this ApplicationGatewayPropertiesFormat.
        :rtype: List[object]
        """
        return self._ssl_certificates

    @ssl_certificates.setter
    def ssl_certificates(self, ssl_certificates):
        """Sets the ssl_certificates of this ApplicationGatewayPropertiesFormat.

        SSL certificates of the application gateway resource.

        :param ssl_certificates: The ssl_certificates of this ApplicationGatewayPropertiesFormat.
        :type ssl_certificates: List[object]
        """

        self._ssl_certificates = ssl_certificates

    @property
    def ssl_policy(self):
        """Gets the ssl_policy of this ApplicationGatewayPropertiesFormat.


        :return: The ssl_policy of this ApplicationGatewayPropertiesFormat.
        :rtype: ApplicationGatewaySslPolicy
        """
        return self._ssl_policy

    @ssl_policy.setter
    def ssl_policy(self, ssl_policy):
        """Sets the ssl_policy of this ApplicationGatewayPropertiesFormat.


        :param ssl_policy: The ssl_policy of this ApplicationGatewayPropertiesFormat.
        :type ssl_policy: ApplicationGatewaySslPolicy
        """

        self._ssl_policy = ssl_policy

    @property
    def url_path_maps(self):
        """Gets the url_path_maps of this ApplicationGatewayPropertiesFormat.

        URL path map of the application gateway resource.

        :return: The url_path_maps of this ApplicationGatewayPropertiesFormat.
        :rtype: List[object]
        """
        return self._url_path_maps

    @url_path_maps.setter
    def url_path_maps(self, url_path_maps):
        """Sets the url_path_maps of this ApplicationGatewayPropertiesFormat.

        URL path map of the application gateway resource.

        :param url_path_maps: The url_path_maps of this ApplicationGatewayPropertiesFormat.
        :type url_path_maps: List[object]
        """

        self._url_path_maps = url_path_maps

    @property
    def web_application_firewall_configuration(self):
        """Gets the web_application_firewall_configuration of this ApplicationGatewayPropertiesFormat.


        :return: The web_application_firewall_configuration of this ApplicationGatewayPropertiesFormat.
        :rtype: ApplicationGatewayWebApplicationFirewallConfiguration
        """
        return self._web_application_firewall_configuration

    @web_application_firewall_configuration.setter
    def web_application_firewall_configuration(self, web_application_firewall_configuration):
        """Sets the web_application_firewall_configuration of this ApplicationGatewayPropertiesFormat.


        :param web_application_firewall_configuration: The web_application_firewall_configuration of this ApplicationGatewayPropertiesFormat.
        :type web_application_firewall_configuration: ApplicationGatewayWebApplicationFirewallConfiguration
        """

        self._web_application_firewall_configuration = web_application_firewall_configuration
