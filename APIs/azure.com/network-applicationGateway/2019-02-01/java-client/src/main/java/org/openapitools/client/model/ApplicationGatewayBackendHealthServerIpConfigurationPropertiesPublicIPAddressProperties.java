/*
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-02-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ApplicationGatewayBackendHealthServerIpConfigurationPropertiesPublicIPAddressPropertiesDdosSettings;
import org.openapitools.client.model.ApplicationGatewayBackendHealthServerIpConfigurationPropertiesPublicIPAddressPropertiesDnsSettings;
import org.openapitools.client.model.ApplicationGatewayBackendHealthServerIpConfigurationPropertiesPublicIPAddressPropertiesIpTagsInner;
import org.openapitools.client.model.Items;
import org.openapitools.client.model.Model0;
import org.openapitools.client.model.PrivateIPAddressVersion;
import org.openapitools.client.model.PrivateIPAllocationMethod;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Public IP address properties.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:13:46.096636-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ApplicationGatewayBackendHealthServerIpConfigurationPropertiesPublicIPAddressProperties {
  public static final String SERIALIZED_NAME_DDOS_SETTINGS = "ddosSettings";
  @SerializedName(SERIALIZED_NAME_DDOS_SETTINGS)
  private ApplicationGatewayBackendHealthServerIpConfigurationPropertiesPublicIPAddressPropertiesDdosSettings ddosSettings;

  public static final String SERIALIZED_NAME_DNS_SETTINGS = "dnsSettings";
  @SerializedName(SERIALIZED_NAME_DNS_SETTINGS)
  private ApplicationGatewayBackendHealthServerIpConfigurationPropertiesPublicIPAddressPropertiesDnsSettings dnsSettings;

  public static final String SERIALIZED_NAME_IDLE_TIMEOUT_IN_MINUTES = "idleTimeoutInMinutes";
  @SerializedName(SERIALIZED_NAME_IDLE_TIMEOUT_IN_MINUTES)
  private Integer idleTimeoutInMinutes;

  public static final String SERIALIZED_NAME_IP_ADDRESS = "ipAddress";
  @SerializedName(SERIALIZED_NAME_IP_ADDRESS)
  private String ipAddress;

  public static final String SERIALIZED_NAME_IP_CONFIGURATION = "ipConfiguration";
  @SerializedName(SERIALIZED_NAME_IP_CONFIGURATION)
  private Items ipConfiguration = null;

  public static final String SERIALIZED_NAME_IP_TAGS = "ipTags";
  @SerializedName(SERIALIZED_NAME_IP_TAGS)
  private List<ApplicationGatewayBackendHealthServerIpConfigurationPropertiesPublicIPAddressPropertiesIpTagsInner> ipTags = new ArrayList<>();

  public static final String SERIALIZED_NAME_PROVISIONING_STATE = "provisioningState";
  @SerializedName(SERIALIZED_NAME_PROVISIONING_STATE)
  private String provisioningState;

  public static final String SERIALIZED_NAME_PUBLIC_I_P_ADDRESS_VERSION = "publicIPAddressVersion";
  @SerializedName(SERIALIZED_NAME_PUBLIC_I_P_ADDRESS_VERSION)
  private PrivateIPAddressVersion publicIPAddressVersion = null;

  public static final String SERIALIZED_NAME_PUBLIC_I_P_ALLOCATION_METHOD = "publicIPAllocationMethod";
  @SerializedName(SERIALIZED_NAME_PUBLIC_I_P_ALLOCATION_METHOD)
  private PrivateIPAllocationMethod publicIPAllocationMethod = null;

  public static final String SERIALIZED_NAME_PUBLIC_I_P_PREFIX = "publicIPPrefix";
  @SerializedName(SERIALIZED_NAME_PUBLIC_I_P_PREFIX)
  private Model0 publicIPPrefix = null;

  public static final String SERIALIZED_NAME_RESOURCE_GUID = "resourceGuid";
  @SerializedName(SERIALIZED_NAME_RESOURCE_GUID)
  private String resourceGuid;

  public ApplicationGatewayBackendHealthServerIpConfigurationPropertiesPublicIPAddressProperties() {
  }

  public ApplicationGatewayBackendHealthServerIpConfigurationPropertiesPublicIPAddressProperties ddosSettings(ApplicationGatewayBackendHealthServerIpConfigurationPropertiesPublicIPAddressPropertiesDdosSettings ddosSettings) {
    this.ddosSettings = ddosSettings;
    return this;
  }

  /**
   * Get ddosSettings
   * @return ddosSettings
   */
  @javax.annotation.Nullable
  public ApplicationGatewayBackendHealthServerIpConfigurationPropertiesPublicIPAddressPropertiesDdosSettings getDdosSettings() {
    return ddosSettings;
  }

  public void setDdosSettings(ApplicationGatewayBackendHealthServerIpConfigurationPropertiesPublicIPAddressPropertiesDdosSettings ddosSettings) {
    this.ddosSettings = ddosSettings;
  }


  public ApplicationGatewayBackendHealthServerIpConfigurationPropertiesPublicIPAddressProperties dnsSettings(ApplicationGatewayBackendHealthServerIpConfigurationPropertiesPublicIPAddressPropertiesDnsSettings dnsSettings) {
    this.dnsSettings = dnsSettings;
    return this;
  }

  /**
   * Get dnsSettings
   * @return dnsSettings
   */
  @javax.annotation.Nullable
  public ApplicationGatewayBackendHealthServerIpConfigurationPropertiesPublicIPAddressPropertiesDnsSettings getDnsSettings() {
    return dnsSettings;
  }

  public void setDnsSettings(ApplicationGatewayBackendHealthServerIpConfigurationPropertiesPublicIPAddressPropertiesDnsSettings dnsSettings) {
    this.dnsSettings = dnsSettings;
  }


  public ApplicationGatewayBackendHealthServerIpConfigurationPropertiesPublicIPAddressProperties idleTimeoutInMinutes(Integer idleTimeoutInMinutes) {
    this.idleTimeoutInMinutes = idleTimeoutInMinutes;
    return this;
  }

  /**
   * The idle timeout of the public IP address.
   * @return idleTimeoutInMinutes
   */
  @javax.annotation.Nullable
  public Integer getIdleTimeoutInMinutes() {
    return idleTimeoutInMinutes;
  }

  public void setIdleTimeoutInMinutes(Integer idleTimeoutInMinutes) {
    this.idleTimeoutInMinutes = idleTimeoutInMinutes;
  }


  public ApplicationGatewayBackendHealthServerIpConfigurationPropertiesPublicIPAddressProperties ipAddress(String ipAddress) {
    this.ipAddress = ipAddress;
    return this;
  }

  /**
   * The IP address associated with the public IP address resource.
   * @return ipAddress
   */
  @javax.annotation.Nullable
  public String getIpAddress() {
    return ipAddress;
  }

  public void setIpAddress(String ipAddress) {
    this.ipAddress = ipAddress;
  }


  public ApplicationGatewayBackendHealthServerIpConfigurationPropertiesPublicIPAddressProperties ipConfiguration(Items ipConfiguration) {
    this.ipConfiguration = ipConfiguration;
    return this;
  }

  /**
   * Get ipConfiguration
   * @return ipConfiguration
   */
  @javax.annotation.Nullable
  public Items getIpConfiguration() {
    return ipConfiguration;
  }

  public void setIpConfiguration(Items ipConfiguration) {
    this.ipConfiguration = ipConfiguration;
  }


  public ApplicationGatewayBackendHealthServerIpConfigurationPropertiesPublicIPAddressProperties ipTags(List<ApplicationGatewayBackendHealthServerIpConfigurationPropertiesPublicIPAddressPropertiesIpTagsInner> ipTags) {
    this.ipTags = ipTags;
    return this;
  }

  public ApplicationGatewayBackendHealthServerIpConfigurationPropertiesPublicIPAddressProperties addIpTagsItem(ApplicationGatewayBackendHealthServerIpConfigurationPropertiesPublicIPAddressPropertiesIpTagsInner ipTagsItem) {
    if (this.ipTags == null) {
      this.ipTags = new ArrayList<>();
    }
    this.ipTags.add(ipTagsItem);
    return this;
  }

  /**
   * The list of tags associated with the public IP address.
   * @return ipTags
   */
  @javax.annotation.Nullable
  public List<ApplicationGatewayBackendHealthServerIpConfigurationPropertiesPublicIPAddressPropertiesIpTagsInner> getIpTags() {
    return ipTags;
  }

  public void setIpTags(List<ApplicationGatewayBackendHealthServerIpConfigurationPropertiesPublicIPAddressPropertiesIpTagsInner> ipTags) {
    this.ipTags = ipTags;
  }


  public ApplicationGatewayBackendHealthServerIpConfigurationPropertiesPublicIPAddressProperties provisioningState(String provisioningState) {
    this.provisioningState = provisioningState;
    return this;
  }

  /**
   * The provisioning state of the PublicIP resource. Possible values are: &#39;Updating&#39;, &#39;Deleting&#39;, and &#39;Failed&#39;.
   * @return provisioningState
   */
  @javax.annotation.Nullable
  public String getProvisioningState() {
    return provisioningState;
  }

  public void setProvisioningState(String provisioningState) {
    this.provisioningState = provisioningState;
  }


  public ApplicationGatewayBackendHealthServerIpConfigurationPropertiesPublicIPAddressProperties publicIPAddressVersion(PrivateIPAddressVersion publicIPAddressVersion) {
    this.publicIPAddressVersion = publicIPAddressVersion;
    return this;
  }

  /**
   * Get publicIPAddressVersion
   * @return publicIPAddressVersion
   */
  @javax.annotation.Nullable
  public PrivateIPAddressVersion getPublicIPAddressVersion() {
    return publicIPAddressVersion;
  }

  public void setPublicIPAddressVersion(PrivateIPAddressVersion publicIPAddressVersion) {
    this.publicIPAddressVersion = publicIPAddressVersion;
  }


  public ApplicationGatewayBackendHealthServerIpConfigurationPropertiesPublicIPAddressProperties publicIPAllocationMethod(PrivateIPAllocationMethod publicIPAllocationMethod) {
    this.publicIPAllocationMethod = publicIPAllocationMethod;
    return this;
  }

  /**
   * Get publicIPAllocationMethod
   * @return publicIPAllocationMethod
   */
  @javax.annotation.Nullable
  public PrivateIPAllocationMethod getPublicIPAllocationMethod() {
    return publicIPAllocationMethod;
  }

  public void setPublicIPAllocationMethod(PrivateIPAllocationMethod publicIPAllocationMethod) {
    this.publicIPAllocationMethod = publicIPAllocationMethod;
  }


  public ApplicationGatewayBackendHealthServerIpConfigurationPropertiesPublicIPAddressProperties publicIPPrefix(Model0 publicIPPrefix) {
    this.publicIPPrefix = publicIPPrefix;
    return this;
  }

  /**
   * Get publicIPPrefix
   * @return publicIPPrefix
   */
  @javax.annotation.Nullable
  public Model0 getPublicIPPrefix() {
    return publicIPPrefix;
  }

  public void setPublicIPPrefix(Model0 publicIPPrefix) {
    this.publicIPPrefix = publicIPPrefix;
  }


  public ApplicationGatewayBackendHealthServerIpConfigurationPropertiesPublicIPAddressProperties resourceGuid(String resourceGuid) {
    this.resourceGuid = resourceGuid;
    return this;
  }

  /**
   * The resource GUID property of the public IP resource.
   * @return resourceGuid
   */
  @javax.annotation.Nullable
  public String getResourceGuid() {
    return resourceGuid;
  }

  public void setResourceGuid(String resourceGuid) {
    this.resourceGuid = resourceGuid;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApplicationGatewayBackendHealthServerIpConfigurationPropertiesPublicIPAddressProperties applicationGatewayBackendHealthServerIpConfigurationPropertiesPublicIPAddressProperties = (ApplicationGatewayBackendHealthServerIpConfigurationPropertiesPublicIPAddressProperties) o;
    return Objects.equals(this.ddosSettings, applicationGatewayBackendHealthServerIpConfigurationPropertiesPublicIPAddressProperties.ddosSettings) &&
        Objects.equals(this.dnsSettings, applicationGatewayBackendHealthServerIpConfigurationPropertiesPublicIPAddressProperties.dnsSettings) &&
        Objects.equals(this.idleTimeoutInMinutes, applicationGatewayBackendHealthServerIpConfigurationPropertiesPublicIPAddressProperties.idleTimeoutInMinutes) &&
        Objects.equals(this.ipAddress, applicationGatewayBackendHealthServerIpConfigurationPropertiesPublicIPAddressProperties.ipAddress) &&
        Objects.equals(this.ipConfiguration, applicationGatewayBackendHealthServerIpConfigurationPropertiesPublicIPAddressProperties.ipConfiguration) &&
        Objects.equals(this.ipTags, applicationGatewayBackendHealthServerIpConfigurationPropertiesPublicIPAddressProperties.ipTags) &&
        Objects.equals(this.provisioningState, applicationGatewayBackendHealthServerIpConfigurationPropertiesPublicIPAddressProperties.provisioningState) &&
        Objects.equals(this.publicIPAddressVersion, applicationGatewayBackendHealthServerIpConfigurationPropertiesPublicIPAddressProperties.publicIPAddressVersion) &&
        Objects.equals(this.publicIPAllocationMethod, applicationGatewayBackendHealthServerIpConfigurationPropertiesPublicIPAddressProperties.publicIPAllocationMethod) &&
        Objects.equals(this.publicIPPrefix, applicationGatewayBackendHealthServerIpConfigurationPropertiesPublicIPAddressProperties.publicIPPrefix) &&
        Objects.equals(this.resourceGuid, applicationGatewayBackendHealthServerIpConfigurationPropertiesPublicIPAddressProperties.resourceGuid);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ddosSettings, dnsSettings, idleTimeoutInMinutes, ipAddress, ipConfiguration, ipTags, provisioningState, publicIPAddressVersion, publicIPAllocationMethod, publicIPPrefix, resourceGuid);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApplicationGatewayBackendHealthServerIpConfigurationPropertiesPublicIPAddressProperties {\n");
    sb.append("    ddosSettings: ").append(toIndentedString(ddosSettings)).append("\n");
    sb.append("    dnsSettings: ").append(toIndentedString(dnsSettings)).append("\n");
    sb.append("    idleTimeoutInMinutes: ").append(toIndentedString(idleTimeoutInMinutes)).append("\n");
    sb.append("    ipAddress: ").append(toIndentedString(ipAddress)).append("\n");
    sb.append("    ipConfiguration: ").append(toIndentedString(ipConfiguration)).append("\n");
    sb.append("    ipTags: ").append(toIndentedString(ipTags)).append("\n");
    sb.append("    provisioningState: ").append(toIndentedString(provisioningState)).append("\n");
    sb.append("    publicIPAddressVersion: ").append(toIndentedString(publicIPAddressVersion)).append("\n");
    sb.append("    publicIPAllocationMethod: ").append(toIndentedString(publicIPAllocationMethod)).append("\n");
    sb.append("    publicIPPrefix: ").append(toIndentedString(publicIPPrefix)).append("\n");
    sb.append("    resourceGuid: ").append(toIndentedString(resourceGuid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ddosSettings");
    openapiFields.add("dnsSettings");
    openapiFields.add("idleTimeoutInMinutes");
    openapiFields.add("ipAddress");
    openapiFields.add("ipConfiguration");
    openapiFields.add("ipTags");
    openapiFields.add("provisioningState");
    openapiFields.add("publicIPAddressVersion");
    openapiFields.add("publicIPAllocationMethod");
    openapiFields.add("publicIPPrefix");
    openapiFields.add("resourceGuid");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ApplicationGatewayBackendHealthServerIpConfigurationPropertiesPublicIPAddressProperties
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ApplicationGatewayBackendHealthServerIpConfigurationPropertiesPublicIPAddressProperties.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ApplicationGatewayBackendHealthServerIpConfigurationPropertiesPublicIPAddressProperties is not found in the empty JSON string", ApplicationGatewayBackendHealthServerIpConfigurationPropertiesPublicIPAddressProperties.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ApplicationGatewayBackendHealthServerIpConfigurationPropertiesPublicIPAddressProperties.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ApplicationGatewayBackendHealthServerIpConfigurationPropertiesPublicIPAddressProperties` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `ddosSettings`
      if (jsonObj.get("ddosSettings") != null && !jsonObj.get("ddosSettings").isJsonNull()) {
        ApplicationGatewayBackendHealthServerIpConfigurationPropertiesPublicIPAddressPropertiesDdosSettings.validateJsonElement(jsonObj.get("ddosSettings"));
      }
      // validate the optional field `dnsSettings`
      if (jsonObj.get("dnsSettings") != null && !jsonObj.get("dnsSettings").isJsonNull()) {
        ApplicationGatewayBackendHealthServerIpConfigurationPropertiesPublicIPAddressPropertiesDnsSettings.validateJsonElement(jsonObj.get("dnsSettings"));
      }
      if ((jsonObj.get("ipAddress") != null && !jsonObj.get("ipAddress").isJsonNull()) && !jsonObj.get("ipAddress").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ipAddress` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ipAddress").toString()));
      }
      if (jsonObj.get("ipTags") != null && !jsonObj.get("ipTags").isJsonNull()) {
        JsonArray jsonArrayipTags = jsonObj.getAsJsonArray("ipTags");
        if (jsonArrayipTags != null) {
          // ensure the json data is an array
          if (!jsonObj.get("ipTags").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `ipTags` to be an array in the JSON string but got `%s`", jsonObj.get("ipTags").toString()));
          }

          // validate the optional field `ipTags` (array)
          for (int i = 0; i < jsonArrayipTags.size(); i++) {
            ApplicationGatewayBackendHealthServerIpConfigurationPropertiesPublicIPAddressPropertiesIpTagsInner.validateJsonElement(jsonArrayipTags.get(i));
          };
        }
      }
      if ((jsonObj.get("provisioningState") != null && !jsonObj.get("provisioningState").isJsonNull()) && !jsonObj.get("provisioningState").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `provisioningState` to be a primitive type in the JSON string but got `%s`", jsonObj.get("provisioningState").toString()));
      }
      if ((jsonObj.get("resourceGuid") != null && !jsonObj.get("resourceGuid").isJsonNull()) && !jsonObj.get("resourceGuid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `resourceGuid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("resourceGuid").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ApplicationGatewayBackendHealthServerIpConfigurationPropertiesPublicIPAddressProperties.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ApplicationGatewayBackendHealthServerIpConfigurationPropertiesPublicIPAddressProperties' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ApplicationGatewayBackendHealthServerIpConfigurationPropertiesPublicIPAddressProperties> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ApplicationGatewayBackendHealthServerIpConfigurationPropertiesPublicIPAddressProperties.class));

       return (TypeAdapter<T>) new TypeAdapter<ApplicationGatewayBackendHealthServerIpConfigurationPropertiesPublicIPAddressProperties>() {
           @Override
           public void write(JsonWriter out, ApplicationGatewayBackendHealthServerIpConfigurationPropertiesPublicIPAddressProperties value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ApplicationGatewayBackendHealthServerIpConfigurationPropertiesPublicIPAddressProperties read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ApplicationGatewayBackendHealthServerIpConfigurationPropertiesPublicIPAddressProperties given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ApplicationGatewayBackendHealthServerIpConfigurationPropertiesPublicIPAddressProperties
   * @throws IOException if the JSON string is invalid with respect to ApplicationGatewayBackendHealthServerIpConfigurationPropertiesPublicIPAddressProperties
   */
  public static ApplicationGatewayBackendHealthServerIpConfigurationPropertiesPublicIPAddressProperties fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ApplicationGatewayBackendHealthServerIpConfigurationPropertiesPublicIPAddressProperties.class);
  }

  /**
   * Convert an instance of ApplicationGatewayBackendHealthServerIpConfigurationPropertiesPublicIPAddressProperties to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

