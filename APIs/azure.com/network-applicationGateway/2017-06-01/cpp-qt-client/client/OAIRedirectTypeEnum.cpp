/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2017-06-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRedirectTypeEnum.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRedirectTypeEnum::OAIRedirectTypeEnum(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRedirectTypeEnum::OAIRedirectTypeEnum() {
    this->initializeModel();
}

OAIRedirectTypeEnum::~OAIRedirectTypeEnum() {}

void OAIRedirectTypeEnum::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIRedirectTypeEnum::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIRedirectTypeEnum::fromJson(QString jsonString) {
    
    if ( jsonString.compare("Permanent", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRedirectTypeEnum::PERMANENT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Found", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRedirectTypeEnum::FOUND;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SeeOther", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRedirectTypeEnum::SEEOTHER;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Temporary", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRedirectTypeEnum::TEMPORARY;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIRedirectTypeEnum::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIRedirectTypeEnum::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIRedirectTypeEnum::PERMANENT:
            val = "Permanent";
            break;
        case eOAIRedirectTypeEnum::FOUND:
            val = "Found";
            break;
        case eOAIRedirectTypeEnum::SEEOTHER:
            val = "SeeOther";
            break;
        case eOAIRedirectTypeEnum::TEMPORARY:
            val = "Temporary";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIRedirectTypeEnum::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIRedirectTypeEnum::eOAIRedirectTypeEnum OAIRedirectTypeEnum::getValue() const {
    return m_value;
}

void OAIRedirectTypeEnum::setValue(const OAIRedirectTypeEnum::eOAIRedirectTypeEnum& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIRedirectTypeEnum::isSet() const {
    
    return m_value_isSet;
}

bool OAIRedirectTypeEnum::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
