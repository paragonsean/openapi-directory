# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.application_gateway_backend_health_server_ip_configuration_properties_subnet_properties_ip_configurations_inner import ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesIpConfigurationsInner
from openapi_server.models.application_gateway_backend_health_server_ip_configuration_properties_subnet_properties_network_security_group import ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesNetworkSecurityGroup
from openapi_server.models.application_gateway_backend_health_server_ip_configuration_properties_subnet_properties_resource_navigation_links_inner import ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesResourceNavigationLinksInner
from openapi_server.models.application_gateway_backend_health_server_ip_configuration_properties_subnet_properties_route_table import ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesRouteTable
from openapi_server.models.application_gateway_backend_health_server_ip_configuration_properties_subnet_properties_service_endpoints_inner import ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesServiceEndpointsInner
from openapi_server import util


class ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, address_prefix: str=None, ip_configurations: List[ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesIpConfigurationsInner]=None, network_security_group: ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesNetworkSecurityGroup=None, provisioning_state: str=None, resource_navigation_links: List[ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesResourceNavigationLinksInner]=None, route_table: ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesRouteTable=None, service_endpoints: List[ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesServiceEndpointsInner]=None):
        """ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetProperties - a model defined in OpenAPI

        :param address_prefix: The address_prefix of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetProperties.
        :param ip_configurations: The ip_configurations of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetProperties.
        :param network_security_group: The network_security_group of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetProperties.
        :param provisioning_state: The provisioning_state of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetProperties.
        :param resource_navigation_links: The resource_navigation_links of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetProperties.
        :param route_table: The route_table of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetProperties.
        :param service_endpoints: The service_endpoints of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetProperties.
        """
        self.openapi_types = {
            'address_prefix': str,
            'ip_configurations': List[ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesIpConfigurationsInner],
            'network_security_group': ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesNetworkSecurityGroup,
            'provisioning_state': str,
            'resource_navigation_links': List[ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesResourceNavigationLinksInner],
            'route_table': ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesRouteTable,
            'service_endpoints': List[ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesServiceEndpointsInner]
        }

        self.attribute_map = {
            'address_prefix': 'addressPrefix',
            'ip_configurations': 'ipConfigurations',
            'network_security_group': 'networkSecurityGroup',
            'provisioning_state': 'provisioningState',
            'resource_navigation_links': 'resourceNavigationLinks',
            'route_table': 'routeTable',
            'service_endpoints': 'serviceEndpoints'
        }

        self._address_prefix = address_prefix
        self._ip_configurations = ip_configurations
        self._network_security_group = network_security_group
        self._provisioning_state = provisioning_state
        self._resource_navigation_links = resource_navigation_links
        self._route_table = route_table
        self._service_endpoints = service_endpoints

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def address_prefix(self):
        """Gets the address_prefix of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetProperties.

        The address prefix for the subnet.

        :return: The address_prefix of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetProperties.
        :rtype: str
        """
        return self._address_prefix

    @address_prefix.setter
    def address_prefix(self, address_prefix):
        """Sets the address_prefix of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetProperties.

        The address prefix for the subnet.

        :param address_prefix: The address_prefix of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetProperties.
        :type address_prefix: str
        """

        self._address_prefix = address_prefix

    @property
    def ip_configurations(self):
        """Gets the ip_configurations of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetProperties.

        Gets an array of references to the network interface IP configurations using subnet.

        :return: The ip_configurations of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetProperties.
        :rtype: List[ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesIpConfigurationsInner]
        """
        return self._ip_configurations

    @ip_configurations.setter
    def ip_configurations(self, ip_configurations):
        """Sets the ip_configurations of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetProperties.

        Gets an array of references to the network interface IP configurations using subnet.

        :param ip_configurations: The ip_configurations of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetProperties.
        :type ip_configurations: List[ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesIpConfigurationsInner]
        """

        self._ip_configurations = ip_configurations

    @property
    def network_security_group(self):
        """Gets the network_security_group of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetProperties.


        :return: The network_security_group of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetProperties.
        :rtype: ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesNetworkSecurityGroup
        """
        return self._network_security_group

    @network_security_group.setter
    def network_security_group(self, network_security_group):
        """Sets the network_security_group of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetProperties.


        :param network_security_group: The network_security_group of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetProperties.
        :type network_security_group: ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesNetworkSecurityGroup
        """

        self._network_security_group = network_security_group

    @property
    def provisioning_state(self):
        """Gets the provisioning_state of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetProperties.

        The provisioning state of the resource.

        :return: The provisioning_state of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetProperties.
        :rtype: str
        """
        return self._provisioning_state

    @provisioning_state.setter
    def provisioning_state(self, provisioning_state):
        """Sets the provisioning_state of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetProperties.

        The provisioning state of the resource.

        :param provisioning_state: The provisioning_state of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetProperties.
        :type provisioning_state: str
        """

        self._provisioning_state = provisioning_state

    @property
    def resource_navigation_links(self):
        """Gets the resource_navigation_links of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetProperties.

        Gets an array of references to the external resources using subnet.

        :return: The resource_navigation_links of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetProperties.
        :rtype: List[ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesResourceNavigationLinksInner]
        """
        return self._resource_navigation_links

    @resource_navigation_links.setter
    def resource_navigation_links(self, resource_navigation_links):
        """Sets the resource_navigation_links of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetProperties.

        Gets an array of references to the external resources using subnet.

        :param resource_navigation_links: The resource_navigation_links of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetProperties.
        :type resource_navigation_links: List[ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesResourceNavigationLinksInner]
        """

        self._resource_navigation_links = resource_navigation_links

    @property
    def route_table(self):
        """Gets the route_table of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetProperties.


        :return: The route_table of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetProperties.
        :rtype: ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesRouteTable
        """
        return self._route_table

    @route_table.setter
    def route_table(self, route_table):
        """Sets the route_table of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetProperties.


        :param route_table: The route_table of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetProperties.
        :type route_table: ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesRouteTable
        """

        self._route_table = route_table

    @property
    def service_endpoints(self):
        """Gets the service_endpoints of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetProperties.

        An array of service endpoints.

        :return: The service_endpoints of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetProperties.
        :rtype: List[ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesServiceEndpointsInner]
        """
        return self._service_endpoints

    @service_endpoints.setter
    def service_endpoints(self, service_endpoints):
        """Sets the service_endpoints of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetProperties.

        An array of service endpoints.

        :param service_endpoints: The service_endpoints of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetProperties.
        :type service_endpoints: List[ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesServiceEndpointsInner]
        """

        self._service_endpoints = service_endpoints
