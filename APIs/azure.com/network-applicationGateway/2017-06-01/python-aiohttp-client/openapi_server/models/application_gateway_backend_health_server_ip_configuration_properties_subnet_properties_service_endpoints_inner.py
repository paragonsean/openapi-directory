# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesServiceEndpointsInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, locations: List[str]=None, provisioning_state: str=None, service: str=None):
        """ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesServiceEndpointsInner - a model defined in OpenAPI

        :param locations: The locations of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesServiceEndpointsInner.
        :param provisioning_state: The provisioning_state of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesServiceEndpointsInner.
        :param service: The service of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesServiceEndpointsInner.
        """
        self.openapi_types = {
            'locations': List[str],
            'provisioning_state': str,
            'service': str
        }

        self.attribute_map = {
            'locations': 'locations',
            'provisioning_state': 'provisioningState',
            'service': 'service'
        }

        self._locations = locations
        self._provisioning_state = provisioning_state
        self._service = service

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesServiceEndpointsInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_serviceEndpoints_inner of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesServiceEndpointsInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def locations(self):
        """Gets the locations of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesServiceEndpointsInner.

        A list of locations.

        :return: The locations of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesServiceEndpointsInner.
        :rtype: List[str]
        """
        return self._locations

    @locations.setter
    def locations(self, locations):
        """Sets the locations of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesServiceEndpointsInner.

        A list of locations.

        :param locations: The locations of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesServiceEndpointsInner.
        :type locations: List[str]
        """

        self._locations = locations

    @property
    def provisioning_state(self):
        """Gets the provisioning_state of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesServiceEndpointsInner.

        The provisioning state of the resource.

        :return: The provisioning_state of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesServiceEndpointsInner.
        :rtype: str
        """
        return self._provisioning_state

    @provisioning_state.setter
    def provisioning_state(self, provisioning_state):
        """Sets the provisioning_state of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesServiceEndpointsInner.

        The provisioning state of the resource.

        :param provisioning_state: The provisioning_state of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesServiceEndpointsInner.
        :type provisioning_state: str
        """

        self._provisioning_state = provisioning_state

    @property
    def service(self):
        """Gets the service of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesServiceEndpointsInner.

        The type of the endpoint service.

        :return: The service of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesServiceEndpointsInner.
        :rtype: str
        """
        return self._service

    @service.setter
    def service(self, service):
        """Sets the service of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesServiceEndpointsInner.

        The type of the endpoint service.

        :param service: The service of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesServiceEndpointsInner.
        :type service: str
        """

        self._service = service
