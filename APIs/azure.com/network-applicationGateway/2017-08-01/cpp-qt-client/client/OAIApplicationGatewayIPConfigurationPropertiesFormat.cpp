/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2017-08-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApplicationGatewayIPConfigurationPropertiesFormat.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApplicationGatewayIPConfigurationPropertiesFormat::OAIApplicationGatewayIPConfigurationPropertiesFormat(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApplicationGatewayIPConfigurationPropertiesFormat::OAIApplicationGatewayIPConfigurationPropertiesFormat() {
    this->initializeModel();
}

OAIApplicationGatewayIPConfigurationPropertiesFormat::~OAIApplicationGatewayIPConfigurationPropertiesFormat() {}

void OAIApplicationGatewayIPConfigurationPropertiesFormat::initializeModel() {

    m_provisioning_state_isSet = false;
    m_provisioning_state_isValid = false;

    m_subnet_isSet = false;
    m_subnet_isValid = false;
}

void OAIApplicationGatewayIPConfigurationPropertiesFormat::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIApplicationGatewayIPConfigurationPropertiesFormat::fromJsonObject(QJsonObject json) {

    m_provisioning_state_isValid = ::OpenAPI::fromJsonValue(m_provisioning_state, json[QString("provisioningState")]);
    m_provisioning_state_isSet = !json[QString("provisioningState")].isNull() && m_provisioning_state_isValid;

    m_subnet_isValid = ::OpenAPI::fromJsonValue(m_subnet, json[QString("subnet")]);
    m_subnet_isSet = !json[QString("subnet")].isNull() && m_subnet_isValid;
}

QString OAIApplicationGatewayIPConfigurationPropertiesFormat::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIApplicationGatewayIPConfigurationPropertiesFormat::asJsonObject() const {
    QJsonObject obj;
    if (m_provisioning_state_isSet) {
        obj.insert(QString("provisioningState"), ::OpenAPI::toJsonValue(m_provisioning_state));
    }
    if (m_subnet.isSet()) {
        obj.insert(QString("subnet"), ::OpenAPI::toJsonValue(m_subnet));
    }
    return obj;
}

QString OAIApplicationGatewayIPConfigurationPropertiesFormat::getProvisioningState() const {
    return m_provisioning_state;
}
void OAIApplicationGatewayIPConfigurationPropertiesFormat::setProvisioningState(const QString &provisioning_state) {
    m_provisioning_state = provisioning_state;
    m_provisioning_state_isSet = true;
}

bool OAIApplicationGatewayIPConfigurationPropertiesFormat::is_provisioning_state_Set() const{
    return m_provisioning_state_isSet;
}

bool OAIApplicationGatewayIPConfigurationPropertiesFormat::is_provisioning_state_Valid() const{
    return m_provisioning_state_isValid;
}

OAI0 OAIApplicationGatewayIPConfigurationPropertiesFormat::getSubnet() const {
    return m_subnet;
}
void OAIApplicationGatewayIPConfigurationPropertiesFormat::setSubnet(const OAI0 &subnet) {
    m_subnet = subnet;
    m_subnet_isSet = true;
}

bool OAIApplicationGatewayIPConfigurationPropertiesFormat::is_subnet_Set() const{
    return m_subnet_isSet;
}

bool OAIApplicationGatewayIPConfigurationPropertiesFormat::is_subnet_Valid() const{
    return m_subnet_isValid;
}

bool OAIApplicationGatewayIPConfigurationPropertiesFormat::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_provisioning_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_subnet.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIApplicationGatewayIPConfigurationPropertiesFormat::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
