/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2018-12-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApplicationGatewayRewriteRuleActionSet.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApplicationGatewayRewriteRuleActionSet::OAIApplicationGatewayRewriteRuleActionSet(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApplicationGatewayRewriteRuleActionSet::OAIApplicationGatewayRewriteRuleActionSet() {
    this->initializeModel();
}

OAIApplicationGatewayRewriteRuleActionSet::~OAIApplicationGatewayRewriteRuleActionSet() {}

void OAIApplicationGatewayRewriteRuleActionSet::initializeModel() {

    m_request_header_configurations_isSet = false;
    m_request_header_configurations_isValid = false;

    m_response_header_configurations_isSet = false;
    m_response_header_configurations_isValid = false;
}

void OAIApplicationGatewayRewriteRuleActionSet::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIApplicationGatewayRewriteRuleActionSet::fromJsonObject(QJsonObject json) {

    m_request_header_configurations_isValid = ::OpenAPI::fromJsonValue(m_request_header_configurations, json[QString("requestHeaderConfigurations")]);
    m_request_header_configurations_isSet = !json[QString("requestHeaderConfigurations")].isNull() && m_request_header_configurations_isValid;

    m_response_header_configurations_isValid = ::OpenAPI::fromJsonValue(m_response_header_configurations, json[QString("responseHeaderConfigurations")]);
    m_response_header_configurations_isSet = !json[QString("responseHeaderConfigurations")].isNull() && m_response_header_configurations_isValid;
}

QString OAIApplicationGatewayRewriteRuleActionSet::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIApplicationGatewayRewriteRuleActionSet::asJsonObject() const {
    QJsonObject obj;
    if (m_request_header_configurations.size() > 0) {
        obj.insert(QString("requestHeaderConfigurations"), ::OpenAPI::toJsonValue(m_request_header_configurations));
    }
    if (m_response_header_configurations.size() > 0) {
        obj.insert(QString("responseHeaderConfigurations"), ::OpenAPI::toJsonValue(m_response_header_configurations));
    }
    return obj;
}

QList<OAIApplicationGatewayHeaderConfiguration> OAIApplicationGatewayRewriteRuleActionSet::getRequestHeaderConfigurations() const {
    return m_request_header_configurations;
}
void OAIApplicationGatewayRewriteRuleActionSet::setRequestHeaderConfigurations(const QList<OAIApplicationGatewayHeaderConfiguration> &request_header_configurations) {
    m_request_header_configurations = request_header_configurations;
    m_request_header_configurations_isSet = true;
}

bool OAIApplicationGatewayRewriteRuleActionSet::is_request_header_configurations_Set() const{
    return m_request_header_configurations_isSet;
}

bool OAIApplicationGatewayRewriteRuleActionSet::is_request_header_configurations_Valid() const{
    return m_request_header_configurations_isValid;
}

QList<OAIApplicationGatewayHeaderConfiguration> OAIApplicationGatewayRewriteRuleActionSet::getResponseHeaderConfigurations() const {
    return m_response_header_configurations;
}
void OAIApplicationGatewayRewriteRuleActionSet::setResponseHeaderConfigurations(const QList<OAIApplicationGatewayHeaderConfiguration> &response_header_configurations) {
    m_response_header_configurations = response_header_configurations;
    m_response_header_configurations_isSet = true;
}

bool OAIApplicationGatewayRewriteRuleActionSet::is_response_header_configurations_Set() const{
    return m_response_header_configurations_isSet;
}

bool OAIApplicationGatewayRewriteRuleActionSet::is_response_header_configurations_Valid() const{
    return m_response_header_configurations_isValid;
}

bool OAIApplicationGatewayRewriteRuleActionSet::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_request_header_configurations.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_response_header_configurations.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIApplicationGatewayRewriteRuleActionSet::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
