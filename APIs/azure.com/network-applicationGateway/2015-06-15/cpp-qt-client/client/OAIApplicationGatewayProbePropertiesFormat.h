/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2015-06-15
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIApplicationGatewayProbePropertiesFormat.h
 *
 * Properties of probe of an application gateway.
 */

#ifndef OAIApplicationGatewayProbePropertiesFormat_H
#define OAIApplicationGatewayProbePropertiesFormat_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIApplicationGatewayProbePropertiesFormat : public OAIObject {
public:
    OAIApplicationGatewayProbePropertiesFormat();
    OAIApplicationGatewayProbePropertiesFormat(QString json);
    ~OAIApplicationGatewayProbePropertiesFormat() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getHost() const;
    void setHost(const QString &host);
    bool is_host_Set() const;
    bool is_host_Valid() const;

    qint32 getInterval() const;
    void setInterval(const qint32 &interval);
    bool is_interval_Set() const;
    bool is_interval_Valid() const;

    QString getPath() const;
    void setPath(const QString &path);
    bool is_path_Set() const;
    bool is_path_Valid() const;

    QString getProtocol() const;
    void setProtocol(const QString &protocol);
    bool is_protocol_Set() const;
    bool is_protocol_Valid() const;

    QString getProvisioningState() const;
    void setProvisioningState(const QString &provisioning_state);
    bool is_provisioning_state_Set() const;
    bool is_provisioning_state_Valid() const;

    qint32 getTimeout() const;
    void setTimeout(const qint32 &timeout);
    bool is_timeout_Set() const;
    bool is_timeout_Valid() const;

    qint32 getUnhealthyThreshold() const;
    void setUnhealthyThreshold(const qint32 &unhealthy_threshold);
    bool is_unhealthy_threshold_Set() const;
    bool is_unhealthy_threshold_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_host;
    bool m_host_isSet;
    bool m_host_isValid;

    qint32 m_interval;
    bool m_interval_isSet;
    bool m_interval_isValid;

    QString m_path;
    bool m_path_isSet;
    bool m_path_isValid;

    QString m_protocol;
    bool m_protocol_isSet;
    bool m_protocol_isValid;

    QString m_provisioning_state;
    bool m_provisioning_state_isSet;
    bool m_provisioning_state_isValid;

    qint32 m_timeout;
    bool m_timeout_isSet;
    bool m_timeout_isValid;

    qint32 m_unhealthy_threshold;
    bool m_unhealthy_threshold_isSet;
    bool m_unhealthy_threshold_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIApplicationGatewayProbePropertiesFormat)

#endif // OAIApplicationGatewayProbePropertiesFormat_H
