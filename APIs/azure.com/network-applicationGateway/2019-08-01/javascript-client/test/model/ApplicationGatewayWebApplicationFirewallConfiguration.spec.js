/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-08-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.NetworkManagementClient);
  }
}(this, function(expect, NetworkManagementClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new NetworkManagementClient.ApplicationGatewayWebApplicationFirewallConfiguration();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ApplicationGatewayWebApplicationFirewallConfiguration', function() {
    it('should create an instance of ApplicationGatewayWebApplicationFirewallConfiguration', function() {
      // uncomment below and update the code to test ApplicationGatewayWebApplicationFirewallConfiguration
      //var instance = new NetworkManagementClient.ApplicationGatewayWebApplicationFirewallConfiguration();
      //expect(instance).to.be.a(NetworkManagementClient.ApplicationGatewayWebApplicationFirewallConfiguration);
    });

    it('should have the property disabledRuleGroups (base name: "disabledRuleGroups")', function() {
      // uncomment below and update the code to test the property disabledRuleGroups
      //var instance = new NetworkManagementClient.ApplicationGatewayWebApplicationFirewallConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property enabled (base name: "enabled")', function() {
      // uncomment below and update the code to test the property enabled
      //var instance = new NetworkManagementClient.ApplicationGatewayWebApplicationFirewallConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property exclusions (base name: "exclusions")', function() {
      // uncomment below and update the code to test the property exclusions
      //var instance = new NetworkManagementClient.ApplicationGatewayWebApplicationFirewallConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property fileUploadLimitInMb (base name: "fileUploadLimitInMb")', function() {
      // uncomment below and update the code to test the property fileUploadLimitInMb
      //var instance = new NetworkManagementClient.ApplicationGatewayWebApplicationFirewallConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property firewallMode (base name: "firewallMode")', function() {
      // uncomment below and update the code to test the property firewallMode
      //var instance = new NetworkManagementClient.ApplicationGatewayWebApplicationFirewallConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property maxRequestBodySize (base name: "maxRequestBodySize")', function() {
      // uncomment below and update the code to test the property maxRequestBodySize
      //var instance = new NetworkManagementClient.ApplicationGatewayWebApplicationFirewallConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property maxRequestBodySizeInKb (base name: "maxRequestBodySizeInKb")', function() {
      // uncomment below and update the code to test the property maxRequestBodySizeInKb
      //var instance = new NetworkManagementClient.ApplicationGatewayWebApplicationFirewallConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property requestBodyCheck (base name: "requestBodyCheck")', function() {
      // uncomment below and update the code to test the property requestBodyCheck
      //var instance = new NetworkManagementClient.ApplicationGatewayWebApplicationFirewallConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property ruleSetType (base name: "ruleSetType")', function() {
      // uncomment below and update the code to test the property ruleSetType
      //var instance = new NetworkManagementClient.ApplicationGatewayWebApplicationFirewallConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property ruleSetVersion (base name: "ruleSetVersion")', function() {
      // uncomment below and update the code to test the property ruleSetVersion
      //var instance = new NetworkManagementClient.ApplicationGatewayWebApplicationFirewallConfiguration();
      //expect(instance).to.be();
    });

  });

}));
