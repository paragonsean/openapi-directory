/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-08-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApplicationGatewayFirewallRuleGroup.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApplicationGatewayFirewallRuleGroup::OAIApplicationGatewayFirewallRuleGroup(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApplicationGatewayFirewallRuleGroup::OAIApplicationGatewayFirewallRuleGroup() {
    this->initializeModel();
}

OAIApplicationGatewayFirewallRuleGroup::~OAIApplicationGatewayFirewallRuleGroup() {}

void OAIApplicationGatewayFirewallRuleGroup::initializeModel() {

    m_description_isSet = false;
    m_description_isValid = false;

    m_rule_group_name_isSet = false;
    m_rule_group_name_isValid = false;

    m_rules_isSet = false;
    m_rules_isValid = false;
}

void OAIApplicationGatewayFirewallRuleGroup::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIApplicationGatewayFirewallRuleGroup::fromJsonObject(QJsonObject json) {

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_rule_group_name_isValid = ::OpenAPI::fromJsonValue(m_rule_group_name, json[QString("ruleGroupName")]);
    m_rule_group_name_isSet = !json[QString("ruleGroupName")].isNull() && m_rule_group_name_isValid;

    m_rules_isValid = ::OpenAPI::fromJsonValue(m_rules, json[QString("rules")]);
    m_rules_isSet = !json[QString("rules")].isNull() && m_rules_isValid;
}

QString OAIApplicationGatewayFirewallRuleGroup::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIApplicationGatewayFirewallRuleGroup::asJsonObject() const {
    QJsonObject obj;
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_rule_group_name_isSet) {
        obj.insert(QString("ruleGroupName"), ::OpenAPI::toJsonValue(m_rule_group_name));
    }
    if (m_rules.size() > 0) {
        obj.insert(QString("rules"), ::OpenAPI::toJsonValue(m_rules));
    }
    return obj;
}

QString OAIApplicationGatewayFirewallRuleGroup::getDescription() const {
    return m_description;
}
void OAIApplicationGatewayFirewallRuleGroup::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIApplicationGatewayFirewallRuleGroup::is_description_Set() const{
    return m_description_isSet;
}

bool OAIApplicationGatewayFirewallRuleGroup::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIApplicationGatewayFirewallRuleGroup::getRuleGroupName() const {
    return m_rule_group_name;
}
void OAIApplicationGatewayFirewallRuleGroup::setRuleGroupName(const QString &rule_group_name) {
    m_rule_group_name = rule_group_name;
    m_rule_group_name_isSet = true;
}

bool OAIApplicationGatewayFirewallRuleGroup::is_rule_group_name_Set() const{
    return m_rule_group_name_isSet;
}

bool OAIApplicationGatewayFirewallRuleGroup::is_rule_group_name_Valid() const{
    return m_rule_group_name_isValid;
}

QList<OAIApplicationGatewayFirewallRule> OAIApplicationGatewayFirewallRuleGroup::getRules() const {
    return m_rules;
}
void OAIApplicationGatewayFirewallRuleGroup::setRules(const QList<OAIApplicationGatewayFirewallRule> &rules) {
    m_rules = rules;
    m_rules_isSet = true;
}

bool OAIApplicationGatewayFirewallRuleGroup::is_rules_Set() const{
    return m_rules_isSet;
}

bool OAIApplicationGatewayFirewallRuleGroup::is_rules_Valid() const{
    return m_rules_isValid;
}

bool OAIApplicationGatewayFirewallRuleGroup::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rule_group_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rules.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIApplicationGatewayFirewallRuleGroup::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_rule_group_name_isValid && m_rules_isValid && true;
}

} // namespace OpenAPI
