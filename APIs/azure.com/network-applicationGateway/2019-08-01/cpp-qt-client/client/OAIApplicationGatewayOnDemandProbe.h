/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-08-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIApplicationGatewayOnDemandProbe.h
 *
 * Details of on demand test probe request.
 */

#ifndef OAIApplicationGatewayOnDemandProbe_H
#define OAIApplicationGatewayOnDemandProbe_H

#include <QJsonObject>

#include "OAIApplicationGatewayPathRulePropertiesFormat_rewriteRuleSet.h"
#include "OAIApplicationGatewayProbeHealthResponseMatch.h"
#include "OAIApplicationGatewayProtocol.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIApplicationGatewayPathRulePropertiesFormat_rewriteRuleSet;
class OAIApplicationGatewayProbeHealthResponseMatch;

class OAIApplicationGatewayOnDemandProbe : public OAIObject {
public:
    OAIApplicationGatewayOnDemandProbe();
    OAIApplicationGatewayOnDemandProbe(QString json);
    ~OAIApplicationGatewayOnDemandProbe() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIApplicationGatewayPathRulePropertiesFormat_rewriteRuleSet getBackendAddressPool() const;
    void setBackendAddressPool(const OAIApplicationGatewayPathRulePropertiesFormat_rewriteRuleSet &backend_address_pool);
    bool is_backend_address_pool_Set() const;
    bool is_backend_address_pool_Valid() const;

    OAIApplicationGatewayPathRulePropertiesFormat_rewriteRuleSet getBackendHttpSettings() const;
    void setBackendHttpSettings(const OAIApplicationGatewayPathRulePropertiesFormat_rewriteRuleSet &backend_http_settings);
    bool is_backend_http_settings_Set() const;
    bool is_backend_http_settings_Valid() const;

    QString getHost() const;
    void setHost(const QString &host);
    bool is_host_Set() const;
    bool is_host_Valid() const;

    OAIApplicationGatewayProbeHealthResponseMatch getMatch() const;
    void setMatch(const OAIApplicationGatewayProbeHealthResponseMatch &match);
    bool is_match_Set() const;
    bool is_match_Valid() const;

    QString getPath() const;
    void setPath(const QString &path);
    bool is_path_Set() const;
    bool is_path_Valid() const;

    bool isPickHostNameFromBackendHttpSettings() const;
    void setPickHostNameFromBackendHttpSettings(const bool &pick_host_name_from_backend_http_settings);
    bool is_pick_host_name_from_backend_http_settings_Set() const;
    bool is_pick_host_name_from_backend_http_settings_Valid() const;

    OAIApplicationGatewayProtocol getProtocol() const;
    void setProtocol(const OAIApplicationGatewayProtocol &protocol);
    bool is_protocol_Set() const;
    bool is_protocol_Valid() const;

    qint32 getTimeout() const;
    void setTimeout(const qint32 &timeout);
    bool is_timeout_Set() const;
    bool is_timeout_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIApplicationGatewayPathRulePropertiesFormat_rewriteRuleSet m_backend_address_pool;
    bool m_backend_address_pool_isSet;
    bool m_backend_address_pool_isValid;

    OAIApplicationGatewayPathRulePropertiesFormat_rewriteRuleSet m_backend_http_settings;
    bool m_backend_http_settings_isSet;
    bool m_backend_http_settings_isValid;

    QString m_host;
    bool m_host_isSet;
    bool m_host_isValid;

    OAIApplicationGatewayProbeHealthResponseMatch m_match;
    bool m_match_isSet;
    bool m_match_isValid;

    QString m_path;
    bool m_path_isSet;
    bool m_path_isValid;

    bool m_pick_host_name_from_backend_http_settings;
    bool m_pick_host_name_from_backend_http_settings_isSet;
    bool m_pick_host_name_from_backend_http_settings_isValid;

    OAIApplicationGatewayProtocol m_protocol;
    bool m_protocol_isSet;
    bool m_protocol_isValid;

    qint32 m_timeout;
    bool m_timeout_isSet;
    bool m_timeout_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIApplicationGatewayOnDemandProbe)

#endif // OAIApplicationGatewayOnDemandProbe_H
