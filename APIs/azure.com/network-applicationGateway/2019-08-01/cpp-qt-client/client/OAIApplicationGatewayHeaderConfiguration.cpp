/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-08-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApplicationGatewayHeaderConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApplicationGatewayHeaderConfiguration::OAIApplicationGatewayHeaderConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApplicationGatewayHeaderConfiguration::OAIApplicationGatewayHeaderConfiguration() {
    this->initializeModel();
}

OAIApplicationGatewayHeaderConfiguration::~OAIApplicationGatewayHeaderConfiguration() {}

void OAIApplicationGatewayHeaderConfiguration::initializeModel() {

    m_header_name_isSet = false;
    m_header_name_isValid = false;

    m_header_value_isSet = false;
    m_header_value_isValid = false;
}

void OAIApplicationGatewayHeaderConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIApplicationGatewayHeaderConfiguration::fromJsonObject(QJsonObject json) {

    m_header_name_isValid = ::OpenAPI::fromJsonValue(m_header_name, json[QString("headerName")]);
    m_header_name_isSet = !json[QString("headerName")].isNull() && m_header_name_isValid;

    m_header_value_isValid = ::OpenAPI::fromJsonValue(m_header_value, json[QString("headerValue")]);
    m_header_value_isSet = !json[QString("headerValue")].isNull() && m_header_value_isValid;
}

QString OAIApplicationGatewayHeaderConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIApplicationGatewayHeaderConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_header_name_isSet) {
        obj.insert(QString("headerName"), ::OpenAPI::toJsonValue(m_header_name));
    }
    if (m_header_value_isSet) {
        obj.insert(QString("headerValue"), ::OpenAPI::toJsonValue(m_header_value));
    }
    return obj;
}

QString OAIApplicationGatewayHeaderConfiguration::getHeaderName() const {
    return m_header_name;
}
void OAIApplicationGatewayHeaderConfiguration::setHeaderName(const QString &header_name) {
    m_header_name = header_name;
    m_header_name_isSet = true;
}

bool OAIApplicationGatewayHeaderConfiguration::is_header_name_Set() const{
    return m_header_name_isSet;
}

bool OAIApplicationGatewayHeaderConfiguration::is_header_name_Valid() const{
    return m_header_name_isValid;
}

QString OAIApplicationGatewayHeaderConfiguration::getHeaderValue() const {
    return m_header_value;
}
void OAIApplicationGatewayHeaderConfiguration::setHeaderValue(const QString &header_value) {
    m_header_value = header_value;
    m_header_value_isSet = true;
}

bool OAIApplicationGatewayHeaderConfiguration::is_header_value_Set() const{
    return m_header_value_isSet;
}

bool OAIApplicationGatewayHeaderConfiguration::is_header_value_Valid() const{
    return m_header_value_isValid;
}

bool OAIApplicationGatewayHeaderConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_header_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_header_value_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIApplicationGatewayHeaderConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
