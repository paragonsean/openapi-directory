/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2018-08-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_virtualNetworkTaps_inner_properties.h
 *
 * Virtual Network Tap properties.
 */

#ifndef OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_virtualNetworkTaps_inner_properties_H
#define OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_virtualNetworkTaps_inner_properties_H

#include <QJsonObject>

#include "OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties_ipConfigurations_inner.h"
#include "OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties_tapConfigurations_inner.h"
#include "OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_virtualNetworkTaps_inner_properties_destinationLoadBalancerFrontEndIPConfiguration.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_virtualNetworkTaps_inner_properties_destinationLoadBalancerFrontEndIPConfiguration;
class OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties_ipConfigurations_inner;
class OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties_tapConfigurations_inner;

class OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_virtualNetworkTaps_inner_properties : public OAIObject {
public:
    OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_virtualNetworkTaps_inner_properties();
    OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_virtualNetworkTaps_inner_properties(QString json);
    ~OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_virtualNetworkTaps_inner_properties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_virtualNetworkTaps_inner_properties_destinationLoadBalancerFrontEndIPConfiguration getDestinationLoadBalancerFrontEndIpConfiguration() const;
    void setDestinationLoadBalancerFrontEndIpConfiguration(const OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_virtualNetworkTaps_inner_properties_destinationLoadBalancerFrontEndIPConfiguration &destination_load_balancer_front_end_ip_configuration);
    bool is_destination_load_balancer_front_end_ip_configuration_Set() const;
    bool is_destination_load_balancer_front_end_ip_configuration_Valid() const;

    OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties_ipConfigurations_inner getDestinationNetworkInterfaceIpConfiguration() const;
    void setDestinationNetworkInterfaceIpConfiguration(const OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties_ipConfigurations_inner &destination_network_interface_ip_configuration);
    bool is_destination_network_interface_ip_configuration_Set() const;
    bool is_destination_network_interface_ip_configuration_Valid() const;

    qint32 getDestinationPort() const;
    void setDestinationPort(const qint32 &destination_port);
    bool is_destination_port_Set() const;
    bool is_destination_port_Valid() const;

    QList<OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties_tapConfigurations_inner> getNetworkInterfaceTapConfigurations() const;
    void setNetworkInterfaceTapConfigurations(const QList<OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties_tapConfigurations_inner> &network_interface_tap_configurations);
    bool is_network_interface_tap_configurations_Set() const;
    bool is_network_interface_tap_configurations_Valid() const;

    QString getProvisioningState() const;
    void setProvisioningState(const QString &provisioning_state);
    bool is_provisioning_state_Set() const;
    bool is_provisioning_state_Valid() const;

    QString getResourceGuid() const;
    void setResourceGuid(const QString &resource_guid);
    bool is_resource_guid_Set() const;
    bool is_resource_guid_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_virtualNetworkTaps_inner_properties_destinationLoadBalancerFrontEndIPConfiguration m_destination_load_balancer_front_end_ip_configuration;
    bool m_destination_load_balancer_front_end_ip_configuration_isSet;
    bool m_destination_load_balancer_front_end_ip_configuration_isValid;

    OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties_ipConfigurations_inner m_destination_network_interface_ip_configuration;
    bool m_destination_network_interface_ip_configuration_isSet;
    bool m_destination_network_interface_ip_configuration_isValid;

    qint32 m_destination_port;
    bool m_destination_port_isSet;
    bool m_destination_port_isValid;

    QList<OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties_tapConfigurations_inner> m_network_interface_tap_configurations;
    bool m_network_interface_tap_configurations_isSet;
    bool m_network_interface_tap_configurations_isValid;

    QString m_provisioning_state;
    bool m_provisioning_state_isSet;
    bool m_provisioning_state_isValid;

    QString m_resource_guid;
    bool m_resource_guid_isSet;
    bool m_resource_guid_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_virtualNetworkTaps_inner_properties)

#endif // OAIApplicationGatewayBackendHealthServer_ipConfiguration_properties_virtualNetworkTaps_inner_properties_H
