/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2018-08-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApplicationGatewayPathRulePropertiesFormat.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApplicationGatewayPathRulePropertiesFormat::OAIApplicationGatewayPathRulePropertiesFormat(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApplicationGatewayPathRulePropertiesFormat::OAIApplicationGatewayPathRulePropertiesFormat() {
    this->initializeModel();
}

OAIApplicationGatewayPathRulePropertiesFormat::~OAIApplicationGatewayPathRulePropertiesFormat() {}

void OAIApplicationGatewayPathRulePropertiesFormat::initializeModel() {

    m_backend_address_pool_isSet = false;
    m_backend_address_pool_isValid = false;

    m_backend_http_settings_isSet = false;
    m_backend_http_settings_isValid = false;

    m_paths_isSet = false;
    m_paths_isValid = false;

    m_provisioning_state_isSet = false;
    m_provisioning_state_isValid = false;

    m_redirect_configuration_isSet = false;
    m_redirect_configuration_isValid = false;
}

void OAIApplicationGatewayPathRulePropertiesFormat::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIApplicationGatewayPathRulePropertiesFormat::fromJsonObject(QJsonObject json) {

    m_backend_address_pool_isValid = ::OpenAPI::fromJsonValue(m_backend_address_pool, json[QString("backendAddressPool")]);
    m_backend_address_pool_isSet = !json[QString("backendAddressPool")].isNull() && m_backend_address_pool_isValid;

    m_backend_http_settings_isValid = ::OpenAPI::fromJsonValue(m_backend_http_settings, json[QString("backendHttpSettings")]);
    m_backend_http_settings_isSet = !json[QString("backendHttpSettings")].isNull() && m_backend_http_settings_isValid;

    m_paths_isValid = ::OpenAPI::fromJsonValue(m_paths, json[QString("paths")]);
    m_paths_isSet = !json[QString("paths")].isNull() && m_paths_isValid;

    m_provisioning_state_isValid = ::OpenAPI::fromJsonValue(m_provisioning_state, json[QString("provisioningState")]);
    m_provisioning_state_isSet = !json[QString("provisioningState")].isNull() && m_provisioning_state_isValid;

    m_redirect_configuration_isValid = ::OpenAPI::fromJsonValue(m_redirect_configuration, json[QString("redirectConfiguration")]);
    m_redirect_configuration_isSet = !json[QString("redirectConfiguration")].isNull() && m_redirect_configuration_isValid;
}

QString OAIApplicationGatewayPathRulePropertiesFormat::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIApplicationGatewayPathRulePropertiesFormat::asJsonObject() const {
    QJsonObject obj;
    if (m_backend_address_pool.isSet()) {
        obj.insert(QString("backendAddressPool"), ::OpenAPI::toJsonValue(m_backend_address_pool));
    }
    if (m_backend_http_settings.isSet()) {
        obj.insert(QString("backendHttpSettings"), ::OpenAPI::toJsonValue(m_backend_http_settings));
    }
    if (m_paths.size() > 0) {
        obj.insert(QString("paths"), ::OpenAPI::toJsonValue(m_paths));
    }
    if (m_provisioning_state_isSet) {
        obj.insert(QString("provisioningState"), ::OpenAPI::toJsonValue(m_provisioning_state));
    }
    if (m_redirect_configuration.isSet()) {
        obj.insert(QString("redirectConfiguration"), ::OpenAPI::toJsonValue(m_redirect_configuration));
    }
    return obj;
}

OAIApplicationGatewayPathRulePropertiesFormat_redirectConfiguration OAIApplicationGatewayPathRulePropertiesFormat::getBackendAddressPool() const {
    return m_backend_address_pool;
}
void OAIApplicationGatewayPathRulePropertiesFormat::setBackendAddressPool(const OAIApplicationGatewayPathRulePropertiesFormat_redirectConfiguration &backend_address_pool) {
    m_backend_address_pool = backend_address_pool;
    m_backend_address_pool_isSet = true;
}

bool OAIApplicationGatewayPathRulePropertiesFormat::is_backend_address_pool_Set() const{
    return m_backend_address_pool_isSet;
}

bool OAIApplicationGatewayPathRulePropertiesFormat::is_backend_address_pool_Valid() const{
    return m_backend_address_pool_isValid;
}

OAIApplicationGatewayPathRulePropertiesFormat_redirectConfiguration OAIApplicationGatewayPathRulePropertiesFormat::getBackendHttpSettings() const {
    return m_backend_http_settings;
}
void OAIApplicationGatewayPathRulePropertiesFormat::setBackendHttpSettings(const OAIApplicationGatewayPathRulePropertiesFormat_redirectConfiguration &backend_http_settings) {
    m_backend_http_settings = backend_http_settings;
    m_backend_http_settings_isSet = true;
}

bool OAIApplicationGatewayPathRulePropertiesFormat::is_backend_http_settings_Set() const{
    return m_backend_http_settings_isSet;
}

bool OAIApplicationGatewayPathRulePropertiesFormat::is_backend_http_settings_Valid() const{
    return m_backend_http_settings_isValid;
}

QList<QString> OAIApplicationGatewayPathRulePropertiesFormat::getPaths() const {
    return m_paths;
}
void OAIApplicationGatewayPathRulePropertiesFormat::setPaths(const QList<QString> &paths) {
    m_paths = paths;
    m_paths_isSet = true;
}

bool OAIApplicationGatewayPathRulePropertiesFormat::is_paths_Set() const{
    return m_paths_isSet;
}

bool OAIApplicationGatewayPathRulePropertiesFormat::is_paths_Valid() const{
    return m_paths_isValid;
}

QString OAIApplicationGatewayPathRulePropertiesFormat::getProvisioningState() const {
    return m_provisioning_state;
}
void OAIApplicationGatewayPathRulePropertiesFormat::setProvisioningState(const QString &provisioning_state) {
    m_provisioning_state = provisioning_state;
    m_provisioning_state_isSet = true;
}

bool OAIApplicationGatewayPathRulePropertiesFormat::is_provisioning_state_Set() const{
    return m_provisioning_state_isSet;
}

bool OAIApplicationGatewayPathRulePropertiesFormat::is_provisioning_state_Valid() const{
    return m_provisioning_state_isValid;
}

OAIApplicationGatewayPathRulePropertiesFormat_redirectConfiguration OAIApplicationGatewayPathRulePropertiesFormat::getRedirectConfiguration() const {
    return m_redirect_configuration;
}
void OAIApplicationGatewayPathRulePropertiesFormat::setRedirectConfiguration(const OAIApplicationGatewayPathRulePropertiesFormat_redirectConfiguration &redirect_configuration) {
    m_redirect_configuration = redirect_configuration;
    m_redirect_configuration_isSet = true;
}

bool OAIApplicationGatewayPathRulePropertiesFormat::is_redirect_configuration_Set() const{
    return m_redirect_configuration_isSet;
}

bool OAIApplicationGatewayPathRulePropertiesFormat::is_redirect_configuration_Valid() const{
    return m_redirect_configuration_isValid;
}

bool OAIApplicationGatewayPathRulePropertiesFormat::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_backend_address_pool.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_backend_http_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_paths.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_provisioning_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_redirect_configuration.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIApplicationGatewayPathRulePropertiesFormat::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
