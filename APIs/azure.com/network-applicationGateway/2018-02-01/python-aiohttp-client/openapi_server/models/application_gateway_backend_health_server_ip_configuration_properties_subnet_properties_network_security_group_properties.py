# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.application_gateway_backend_health_server_ip_configuration_properties_subnet_properties_network_security_group_properties_network_interfaces_inner import ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesNetworkInterfacesInner
from openapi_server.models.application_gateway_backend_health_server_ip_configuration_properties_subnet_properties_network_security_group_properties_security_rules_inner import ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesSecurityRulesInner
from openapi_server.models.items import Items
from openapi_server.models.subnet import Subnet
from openapi_server import util


class ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesNetworkSecurityGroupProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, default_security_rules: List[Items]=None, network_interfaces: List[ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesNetworkInterfacesInner]=None, provisioning_state: str=None, resource_guid: str=None, security_rules: List[ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesSecurityRulesInner]=None, subnets: List[Subnet]=None):
        """ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesNetworkSecurityGroupProperties - a model defined in OpenAPI

        :param default_security_rules: The default_security_rules of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesNetworkSecurityGroupProperties.
        :param network_interfaces: The network_interfaces of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesNetworkSecurityGroupProperties.
        :param provisioning_state: The provisioning_state of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesNetworkSecurityGroupProperties.
        :param resource_guid: The resource_guid of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesNetworkSecurityGroupProperties.
        :param security_rules: The security_rules of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesNetworkSecurityGroupProperties.
        :param subnets: The subnets of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesNetworkSecurityGroupProperties.
        """
        self.openapi_types = {
            'default_security_rules': List[Items],
            'network_interfaces': List[ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesNetworkInterfacesInner],
            'provisioning_state': str,
            'resource_guid': str,
            'security_rules': List[ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesSecurityRulesInner],
            'subnets': List[Subnet]
        }

        self.attribute_map = {
            'default_security_rules': 'defaultSecurityRules',
            'network_interfaces': 'networkInterfaces',
            'provisioning_state': 'provisioningState',
            'resource_guid': 'resourceGuid',
            'security_rules': 'securityRules',
            'subnets': 'subnets'
        }

        self._default_security_rules = default_security_rules
        self._network_interfaces = network_interfaces
        self._provisioning_state = provisioning_state
        self._resource_guid = resource_guid
        self._security_rules = security_rules
        self._subnets = subnets

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesNetworkSecurityGroupProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesNetworkSecurityGroupProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def default_security_rules(self):
        """Gets the default_security_rules of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesNetworkSecurityGroupProperties.

        The default security rules of network security group.

        :return: The default_security_rules of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesNetworkSecurityGroupProperties.
        :rtype: List[Items]
        """
        return self._default_security_rules

    @default_security_rules.setter
    def default_security_rules(self, default_security_rules):
        """Sets the default_security_rules of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesNetworkSecurityGroupProperties.

        The default security rules of network security group.

        :param default_security_rules: The default_security_rules of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesNetworkSecurityGroupProperties.
        :type default_security_rules: List[Items]
        """

        self._default_security_rules = default_security_rules

    @property
    def network_interfaces(self):
        """Gets the network_interfaces of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesNetworkSecurityGroupProperties.

        A collection of references to network interfaces.

        :return: The network_interfaces of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesNetworkSecurityGroupProperties.
        :rtype: List[ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesNetworkInterfacesInner]
        """
        return self._network_interfaces

    @network_interfaces.setter
    def network_interfaces(self, network_interfaces):
        """Sets the network_interfaces of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesNetworkSecurityGroupProperties.

        A collection of references to network interfaces.

        :param network_interfaces: The network_interfaces of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesNetworkSecurityGroupProperties.
        :type network_interfaces: List[ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesNetworkInterfacesInner]
        """

        self._network_interfaces = network_interfaces

    @property
    def provisioning_state(self):
        """Gets the provisioning_state of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesNetworkSecurityGroupProperties.

        The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.

        :return: The provisioning_state of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesNetworkSecurityGroupProperties.
        :rtype: str
        """
        return self._provisioning_state

    @provisioning_state.setter
    def provisioning_state(self, provisioning_state):
        """Sets the provisioning_state of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesNetworkSecurityGroupProperties.

        The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.

        :param provisioning_state: The provisioning_state of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesNetworkSecurityGroupProperties.
        :type provisioning_state: str
        """

        self._provisioning_state = provisioning_state

    @property
    def resource_guid(self):
        """Gets the resource_guid of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesNetworkSecurityGroupProperties.

        The resource GUID property of the network security group resource.

        :return: The resource_guid of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesNetworkSecurityGroupProperties.
        :rtype: str
        """
        return self._resource_guid

    @resource_guid.setter
    def resource_guid(self, resource_guid):
        """Sets the resource_guid of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesNetworkSecurityGroupProperties.

        The resource GUID property of the network security group resource.

        :param resource_guid: The resource_guid of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesNetworkSecurityGroupProperties.
        :type resource_guid: str
        """

        self._resource_guid = resource_guid

    @property
    def security_rules(self):
        """Gets the security_rules of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesNetworkSecurityGroupProperties.

        A collection of security rules of the network security group.

        :return: The security_rules of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesNetworkSecurityGroupProperties.
        :rtype: List[ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesSecurityRulesInner]
        """
        return self._security_rules

    @security_rules.setter
    def security_rules(self, security_rules):
        """Sets the security_rules of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesNetworkSecurityGroupProperties.

        A collection of security rules of the network security group.

        :param security_rules: The security_rules of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesNetworkSecurityGroupProperties.
        :type security_rules: List[ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesNetworkSecurityGroupPropertiesSecurityRulesInner]
        """

        self._security_rules = security_rules

    @property
    def subnets(self):
        """Gets the subnets of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesNetworkSecurityGroupProperties.

        A collection of references to subnets.

        :return: The subnets of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesNetworkSecurityGroupProperties.
        :rtype: List[Subnet]
        """
        return self._subnets

    @subnets.setter
    def subnets(self, subnets):
        """Sets the subnets of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesNetworkSecurityGroupProperties.

        A collection of references to subnets.

        :param subnets: The subnets of this ApplicationGatewayBackendHealthServerIpConfigurationPropertiesSubnetPropertiesNetworkSecurityGroupProperties.
        :type subnets: List[Subnet]
        """

        self._subnets = subnets
