/**
 * PolicyClient
 * To manage and control access to your resources, you can define customized policies and assign them at a scope.
 *
 * The version of the OpenAPI document: 2018-03-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPolicyDefinitionReference.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPolicyDefinitionReference::OAIPolicyDefinitionReference(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPolicyDefinitionReference::OAIPolicyDefinitionReference() {
    this->initializeModel();
}

OAIPolicyDefinitionReference::~OAIPolicyDefinitionReference() {}

void OAIPolicyDefinitionReference::initializeModel() {

    m_parameters_isSet = false;
    m_parameters_isValid = false;

    m_policy_definition_id_isSet = false;
    m_policy_definition_id_isValid = false;
}

void OAIPolicyDefinitionReference::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPolicyDefinitionReference::fromJsonObject(QJsonObject json) {

    m_parameters_isValid = ::OpenAPI::fromJsonValue(m_parameters, json[QString("parameters")]);
    m_parameters_isSet = !json[QString("parameters")].isNull() && m_parameters_isValid;

    m_policy_definition_id_isValid = ::OpenAPI::fromJsonValue(m_policy_definition_id, json[QString("policyDefinitionId")]);
    m_policy_definition_id_isSet = !json[QString("policyDefinitionId")].isNull() && m_policy_definition_id_isValid;
}

QString OAIPolicyDefinitionReference::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPolicyDefinitionReference::asJsonObject() const {
    QJsonObject obj;
    if (m_parameters_isSet) {
        obj.insert(QString("parameters"), ::OpenAPI::toJsonValue(m_parameters));
    }
    if (m_policy_definition_id_isSet) {
        obj.insert(QString("policyDefinitionId"), ::OpenAPI::toJsonValue(m_policy_definition_id));
    }
    return obj;
}

OAIObject OAIPolicyDefinitionReference::getParameters() const {
    return m_parameters;
}
void OAIPolicyDefinitionReference::setParameters(const OAIObject &parameters) {
    m_parameters = parameters;
    m_parameters_isSet = true;
}

bool OAIPolicyDefinitionReference::is_parameters_Set() const{
    return m_parameters_isSet;
}

bool OAIPolicyDefinitionReference::is_parameters_Valid() const{
    return m_parameters_isValid;
}

QString OAIPolicyDefinitionReference::getPolicyDefinitionId() const {
    return m_policy_definition_id;
}
void OAIPolicyDefinitionReference::setPolicyDefinitionId(const QString &policy_definition_id) {
    m_policy_definition_id = policy_definition_id;
    m_policy_definition_id_isSet = true;
}

bool OAIPolicyDefinitionReference::is_policy_definition_id_Set() const{
    return m_policy_definition_id_isSet;
}

bool OAIPolicyDefinitionReference::is_policy_definition_id_Valid() const{
    return m_policy_definition_id_isValid;
}

bool OAIPolicyDefinitionReference::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_parameters_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_policy_definition_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPolicyDefinitionReference::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
