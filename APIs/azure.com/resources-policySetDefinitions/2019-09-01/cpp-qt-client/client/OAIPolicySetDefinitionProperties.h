/**
 * PolicyClient
 * To manage and control access to your resources, you can define customized policies and assign them at a scope.
 *
 * The version of the OpenAPI document: 2019-09-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPolicySetDefinitionProperties.h
 *
 * The policy set definition properties.
 */

#ifndef OAIPolicySetDefinitionProperties_H
#define OAIPolicySetDefinitionProperties_H

#include <QJsonObject>

#include "OAIObject.h"
#include "OAIPolicyDefinitionGroup.h"
#include "OAIPolicyDefinitionReference.h"
#include "OAIPolicySetDefinitionProperties_parameters_value.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPolicySetDefinitionProperties_parameters_value;
class OAIPolicyDefinitionGroup;
class OAIPolicyDefinitionReference;

class OAIPolicySetDefinitionProperties : public OAIObject {
public:
    OAIPolicySetDefinitionProperties();
    OAIPolicySetDefinitionProperties(QString json);
    ~OAIPolicySetDefinitionProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    OAIObject getMetadata() const;
    void setMetadata(const OAIObject &metadata);
    bool is_metadata_Set() const;
    bool is_metadata_Valid() const;

    QMap<QString, OAIPolicySetDefinitionProperties_parameters_value> getParameters() const;
    void setParameters(const QMap<QString, OAIPolicySetDefinitionProperties_parameters_value> &parameters);
    bool is_parameters_Set() const;
    bool is_parameters_Valid() const;

    QList<OAIPolicyDefinitionGroup> getPolicyDefinitionGroups() const;
    void setPolicyDefinitionGroups(const QList<OAIPolicyDefinitionGroup> &policy_definition_groups);
    bool is_policy_definition_groups_Set() const;
    bool is_policy_definition_groups_Valid() const;

    QList<OAIPolicyDefinitionReference> getPolicyDefinitions() const;
    void setPolicyDefinitions(const QList<OAIPolicyDefinitionReference> &policy_definitions);
    bool is_policy_definitions_Set() const;
    bool is_policy_definitions_Valid() const;

    QString getPolicyType() const;
    void setPolicyType(const QString &policy_type);
    bool is_policy_type_Set() const;
    bool is_policy_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    OAIObject m_metadata;
    bool m_metadata_isSet;
    bool m_metadata_isValid;

    QMap<QString, OAIPolicySetDefinitionProperties_parameters_value> m_parameters;
    bool m_parameters_isSet;
    bool m_parameters_isValid;

    QList<OAIPolicyDefinitionGroup> m_policy_definition_groups;
    bool m_policy_definition_groups_isSet;
    bool m_policy_definition_groups_isValid;

    QList<OAIPolicyDefinitionReference> m_policy_definitions;
    bool m_policy_definitions_isSet;
    bool m_policy_definitions_isValid;

    QString m_policy_type;
    bool m_policy_type_isSet;
    bool m_policy_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPolicySetDefinitionProperties)

#endif // OAIPolicySetDefinitionProperties_H
