/**
 * MonitorManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-03-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErrorResponse from '../model/ErrorResponse';
import LogProfileResource from '../model/LogProfileResource';
import LogProfileResourcePatch from '../model/LogProfileResourcePatch';

/**
* Default service.
* @module api/DefaultApi
* @version 2016-03-01
*/
export default class DefaultApi {

    /**
    * Constructs a new DefaultApi. 
    * @alias module:api/DefaultApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the logProfilesUpdate operation.
     * @callback module:api/DefaultApi~logProfilesUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/LogProfileResource} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates an existing LogProfilesResource. To update other fields use the CreateOrUpdate method.
     * @param {String} subscriptionId The Azure subscription Id.
     * @param {String} logProfileName The name of the log profile.
     * @param {String} apiVersion Client Api Version.
     * @param {module:model/LogProfileResourcePatch} logProfilesResource Parameters supplied to the operation.
     * @param {module:api/DefaultApi~logProfilesUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/LogProfileResource}
     */
    logProfilesUpdate(subscriptionId, logProfileName, apiVersion, logProfilesResource, callback) {
      let postBody = logProfilesResource;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling logProfilesUpdate");
      }
      // verify the required parameter 'logProfileName' is set
      if (logProfileName === undefined || logProfileName === null) {
        throw new Error("Missing the required parameter 'logProfileName' when calling logProfilesUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling logProfilesUpdate");
      }
      // verify the required parameter 'logProfilesResource' is set
      if (logProfilesResource === undefined || logProfilesResource === null) {
        throw new Error("Missing the required parameter 'logProfilesResource' when calling logProfilesUpdate");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'logProfileName': logProfileName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = LogProfileResource;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/microsoft.insights/logprofiles/{logProfileName}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
