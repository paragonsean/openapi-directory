# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ManagedInstancePairInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, partner_managed_instance_id: str=None, primary_managed_instance_id: str=None):
        """ManagedInstancePairInfo - a model defined in OpenAPI

        :param partner_managed_instance_id: The partner_managed_instance_id of this ManagedInstancePairInfo.
        :param primary_managed_instance_id: The primary_managed_instance_id of this ManagedInstancePairInfo.
        """
        self.openapi_types = {
            'partner_managed_instance_id': str,
            'primary_managed_instance_id': str
        }

        self.attribute_map = {
            'partner_managed_instance_id': 'partnerManagedInstanceId',
            'primary_managed_instance_id': 'primaryManagedInstanceId'
        }

        self._partner_managed_instance_id = partner_managed_instance_id
        self._primary_managed_instance_id = primary_managed_instance_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ManagedInstancePairInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ManagedInstancePairInfo of this ManagedInstancePairInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def partner_managed_instance_id(self):
        """Gets the partner_managed_instance_id of this ManagedInstancePairInfo.

        Id of Partner Managed Instance in pair.

        :return: The partner_managed_instance_id of this ManagedInstancePairInfo.
        :rtype: str
        """
        return self._partner_managed_instance_id

    @partner_managed_instance_id.setter
    def partner_managed_instance_id(self, partner_managed_instance_id):
        """Sets the partner_managed_instance_id of this ManagedInstancePairInfo.

        Id of Partner Managed Instance in pair.

        :param partner_managed_instance_id: The partner_managed_instance_id of this ManagedInstancePairInfo.
        :type partner_managed_instance_id: str
        """

        self._partner_managed_instance_id = partner_managed_instance_id

    @property
    def primary_managed_instance_id(self):
        """Gets the primary_managed_instance_id of this ManagedInstancePairInfo.

        Id of Primary Managed Instance in pair.

        :return: The primary_managed_instance_id of this ManagedInstancePairInfo.
        :rtype: str
        """
        return self._primary_managed_instance_id

    @primary_managed_instance_id.setter
    def primary_managed_instance_id(self, primary_managed_instance_id):
        """Sets the primary_managed_instance_id of this ManagedInstancePairInfo.

        Id of Primary Managed Instance in pair.

        :param primary_managed_instance_id: The primary_managed_instance_id of this ManagedInstancePairInfo.
        :type primary_managed_instance_id: str
        """

        self._primary_managed_instance_id = primary_managed_instance_id
