# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class InstanceFailoverGroupReadOnlyEndpoint(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, failover_policy: str=None):
        """InstanceFailoverGroupReadOnlyEndpoint - a model defined in OpenAPI

        :param failover_policy: The failover_policy of this InstanceFailoverGroupReadOnlyEndpoint.
        """
        self.openapi_types = {
            'failover_policy': str
        }

        self.attribute_map = {
            'failover_policy': 'failoverPolicy'
        }

        self._failover_policy = failover_policy

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InstanceFailoverGroupReadOnlyEndpoint':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InstanceFailoverGroupReadOnlyEndpoint of this InstanceFailoverGroupReadOnlyEndpoint.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def failover_policy(self):
        """Gets the failover_policy of this InstanceFailoverGroupReadOnlyEndpoint.

        Failover policy of the read-only endpoint for the failover group.

        :return: The failover_policy of this InstanceFailoverGroupReadOnlyEndpoint.
        :rtype: str
        """
        return self._failover_policy

    @failover_policy.setter
    def failover_policy(self, failover_policy):
        """Sets the failover_policy of this InstanceFailoverGroupReadOnlyEndpoint.

        Failover policy of the read-only endpoint for the failover group.

        :param failover_policy: The failover_policy of this InstanceFailoverGroupReadOnlyEndpoint.
        :type failover_policy: str
        """
        allowed_values = ["Disabled", "Enabled"]  # noqa: E501
        if failover_policy not in allowed_values:
            raise ValueError(
                "Invalid value for `failover_policy` ({0}), must be one of {1}"
                .format(failover_policy, allowed_values)
            )

        self._failover_policy = failover_policy
