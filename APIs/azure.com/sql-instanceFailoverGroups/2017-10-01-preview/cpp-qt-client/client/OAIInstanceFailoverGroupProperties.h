/**
 * SqlManagementClient
 * The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.
 *
 * The version of the OpenAPI document: 2017-10-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInstanceFailoverGroupProperties.h
 *
 * Properties of a instance failover group.
 */

#ifndef OAIInstanceFailoverGroupProperties_H
#define OAIInstanceFailoverGroupProperties_H

#include <QJsonObject>

#include "OAIInstanceFailoverGroupReadOnlyEndpoint.h"
#include "OAIInstanceFailoverGroupReadWriteEndpoint.h"
#include "OAIManagedInstancePairInfo.h"
#include "OAIPartnerRegionInfo.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIManagedInstancePairInfo;
class OAIPartnerRegionInfo;
class OAIInstanceFailoverGroupReadOnlyEndpoint;
class OAIInstanceFailoverGroupReadWriteEndpoint;

class OAIInstanceFailoverGroupProperties : public OAIObject {
public:
    OAIInstanceFailoverGroupProperties();
    OAIInstanceFailoverGroupProperties(QString json);
    ~OAIInstanceFailoverGroupProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIManagedInstancePairInfo> getManagedInstancePairs() const;
    void setManagedInstancePairs(const QList<OAIManagedInstancePairInfo> &managed_instance_pairs);
    bool is_managed_instance_pairs_Set() const;
    bool is_managed_instance_pairs_Valid() const;

    QList<OAIPartnerRegionInfo> getPartnerRegions() const;
    void setPartnerRegions(const QList<OAIPartnerRegionInfo> &partner_regions);
    bool is_partner_regions_Set() const;
    bool is_partner_regions_Valid() const;

    OAIInstanceFailoverGroupReadOnlyEndpoint getReadOnlyEndpoint() const;
    void setReadOnlyEndpoint(const OAIInstanceFailoverGroupReadOnlyEndpoint &read_only_endpoint);
    bool is_read_only_endpoint_Set() const;
    bool is_read_only_endpoint_Valid() const;

    OAIInstanceFailoverGroupReadWriteEndpoint getReadWriteEndpoint() const;
    void setReadWriteEndpoint(const OAIInstanceFailoverGroupReadWriteEndpoint &read_write_endpoint);
    bool is_read_write_endpoint_Set() const;
    bool is_read_write_endpoint_Valid() const;

    QString getReplicationRole() const;
    void setReplicationRole(const QString &replication_role);
    bool is_replication_role_Set() const;
    bool is_replication_role_Valid() const;

    QString getReplicationState() const;
    void setReplicationState(const QString &replication_state);
    bool is_replication_state_Set() const;
    bool is_replication_state_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIManagedInstancePairInfo> m_managed_instance_pairs;
    bool m_managed_instance_pairs_isSet;
    bool m_managed_instance_pairs_isValid;

    QList<OAIPartnerRegionInfo> m_partner_regions;
    bool m_partner_regions_isSet;
    bool m_partner_regions_isValid;

    OAIInstanceFailoverGroupReadOnlyEndpoint m_read_only_endpoint;
    bool m_read_only_endpoint_isSet;
    bool m_read_only_endpoint_isValid;

    OAIInstanceFailoverGroupReadWriteEndpoint m_read_write_endpoint;
    bool m_read_write_endpoint_isSet;
    bool m_read_write_endpoint_isValid;

    QString m_replication_role;
    bool m_replication_role_isSet;
    bool m_replication_role_isValid;

    QString m_replication_state;
    bool m_replication_state_isSet;
    bool m_replication_state_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIInstanceFailoverGroupProperties)

#endif // OAIInstanceFailoverGroupProperties_H
