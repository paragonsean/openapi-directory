/*
 * Certificates API Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-11-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Certificate;
import org.openapitools.client.model.CertificateCollection;
import org.openapitools.client.model.CertificatePatchResource;
import org.openapitools.client.model.CertificatesListDefaultResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CertificatesApi
 */
@Disabled
public class CertificatesApiTest {

    private final CertificatesApi api = new CertificatesApi();

    /**
     * Create or update a certificate.
     *
     * Create or update a certificate.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void certificatesCreateOrUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String name = null;
        String subscriptionId = null;
        String apiVersion = null;
        Certificate certificateEnvelope = null;
        Certificate response = api.certificatesCreateOrUpdate(resourceGroupName, name, subscriptionId, apiVersion, certificateEnvelope);
        // TODO: test validations
    }

    /**
     * Delete a certificate.
     *
     * Delete a certificate.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void certificatesDeleteTest() throws ApiException {
        String resourceGroupName = null;
        String name = null;
        String subscriptionId = null;
        String apiVersion = null;
        api.certificatesDelete(resourceGroupName, name, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Get a certificate.
     *
     * Get a certificate.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void certificatesGetTest() throws ApiException {
        String resourceGroupName = null;
        String name = null;
        String subscriptionId = null;
        String apiVersion = null;
        Certificate response = api.certificatesGet(resourceGroupName, name, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Get all certificates for a subscription.
     *
     * Get all certificates for a subscription.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void certificatesListTest() throws ApiException {
        String subscriptionId = null;
        String apiVersion = null;
        CertificateCollection response = api.certificatesList(subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Get all certificates in a resource group.
     *
     * Get all certificates in a resource group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void certificatesListByResourceGroupTest() throws ApiException {
        String resourceGroupName = null;
        String subscriptionId = null;
        String apiVersion = null;
        CertificateCollection response = api.certificatesListByResourceGroup(resourceGroupName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Create or update a certificate.
     *
     * Create or update a certificate.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void certificatesUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String name = null;
        String subscriptionId = null;
        String apiVersion = null;
        CertificatePatchResource certificateEnvelope = null;
        Certificate response = api.certificatesUpdate(resourceGroupName, name, subscriptionId, apiVersion, certificateEnvelope);
        // TODO: test validations
    }

}
