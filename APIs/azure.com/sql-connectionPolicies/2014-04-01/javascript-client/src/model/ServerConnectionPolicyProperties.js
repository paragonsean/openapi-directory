/**
 * Azure SQL Server API spec
 * The Azure SQL Server management API provides a RESTful set of web services that interact with Azure SQL Server services to manage your databases. The API enables users update server connection policy.
 *
 * The version of the OpenAPI document: 2014-04-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ServerConnectionPolicyProperties model module.
 * @module model/ServerConnectionPolicyProperties
 * @version 2014-04-01
 */
class ServerConnectionPolicyProperties {
    /**
     * Constructs a new <code>ServerConnectionPolicyProperties</code>.
     * The properties of a server secure connection policy.
     * @alias module:model/ServerConnectionPolicyProperties
     * @param connectionType {module:model/ServerConnectionPolicyProperties.ConnectionTypeEnum} The server connection type.
     */
    constructor(connectionType) { 
        
        ServerConnectionPolicyProperties.initialize(this, connectionType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, connectionType) { 
        obj['connectionType'] = connectionType;
    }

    /**
     * Constructs a <code>ServerConnectionPolicyProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ServerConnectionPolicyProperties} obj Optional instance to populate.
     * @return {module:model/ServerConnectionPolicyProperties} The populated <code>ServerConnectionPolicyProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ServerConnectionPolicyProperties();

            if (data.hasOwnProperty('connectionType')) {
                obj['connectionType'] = ApiClient.convertToType(data['connectionType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ServerConnectionPolicyProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ServerConnectionPolicyProperties</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ServerConnectionPolicyProperties.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['connectionType'] && !(typeof data['connectionType'] === 'string' || data['connectionType'] instanceof String)) {
            throw new Error("Expected the field `connectionType` to be a primitive type in the JSON string but got " + data['connectionType']);
        }

        return true;
    }


}

ServerConnectionPolicyProperties.RequiredProperties = ["connectionType"];

/**
 * The server connection type.
 * @member {module:model/ServerConnectionPolicyProperties.ConnectionTypeEnum} connectionType
 */
ServerConnectionPolicyProperties.prototype['connectionType'] = undefined;





/**
 * Allowed values for the <code>connectionType</code> property.
 * @enum {String}
 * @readonly
 */
ServerConnectionPolicyProperties['ConnectionTypeEnum'] = {

    /**
     * value: "Default"
     * @const
     */
    "Default": "Default",

    /**
     * value: "Proxy"
     * @const
     */
    "Proxy": "Proxy",

    /**
     * value: "Redirect"
     * @const
     */
    "Redirect": "Redirect"
};



export default ServerConnectionPolicyProperties;

