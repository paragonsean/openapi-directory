/*
 * ExpressRouteCrossConnection REST APIs
 * The Microsoft Azure ExpressRouteCrossConnection Resource Provider REST APIs describes the operations for the connectivity provider to provision ExpressRoute circuit, create and modify BGP peering entities and troubleshoot connectivity on customer's ExpressRoute circuit.
 *
 * The version of the OpenAPI document: 2019-04-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ExpressRouteCrossConnection;
import org.openapitools.client.model.ExpressRouteCrossConnectionListResult;
import org.openapitools.client.model.ExpressRouteCrossConnectionsUpdateTagsRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ExpressRouteCrossConnectionsApi
 */
@Disabled
public class ExpressRouteCrossConnectionsApiTest {

    private final ExpressRouteCrossConnectionsApi api = new ExpressRouteCrossConnectionsApi();

    /**
     * Update the specified ExpressRouteCrossConnection.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void expressRouteCrossConnectionsCreateOrUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String crossConnectionName = null;
        String apiVersion = null;
        String subscriptionId = null;
        ExpressRouteCrossConnection parameters = null;
        ExpressRouteCrossConnection response = api.expressRouteCrossConnectionsCreateOrUpdate(resourceGroupName, crossConnectionName, apiVersion, subscriptionId, parameters);
        // TODO: test validations
    }

    /**
     * Gets details about the specified ExpressRouteCrossConnection.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void expressRouteCrossConnectionsGetTest() throws ApiException {
        String resourceGroupName = null;
        String crossConnectionName = null;
        String apiVersion = null;
        String subscriptionId = null;
        ExpressRouteCrossConnection response = api.expressRouteCrossConnectionsGet(resourceGroupName, crossConnectionName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Retrieves all the ExpressRouteCrossConnections in a subscription.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void expressRouteCrossConnectionsListTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        ExpressRouteCrossConnectionListResult response = api.expressRouteCrossConnectionsList(apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Retrieves all the ExpressRouteCrossConnections in a resource group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void expressRouteCrossConnectionsListByResourceGroupTest() throws ApiException {
        String resourceGroupName = null;
        String apiVersion = null;
        String subscriptionId = null;
        ExpressRouteCrossConnectionListResult response = api.expressRouteCrossConnectionsListByResourceGroup(resourceGroupName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Updates an express route cross connection tags.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void expressRouteCrossConnectionsUpdateTagsTest() throws ApiException {
        String resourceGroupName = null;
        String crossConnectionName = null;
        String apiVersion = null;
        String subscriptionId = null;
        ExpressRouteCrossConnectionsUpdateTagsRequest crossConnectionParameters = null;
        ExpressRouteCrossConnection response = api.expressRouteCrossConnectionsUpdateTags(resourceGroupName, crossConnectionName, apiVersion, subscriptionId, crossConnectionParameters);
        // TODO: test validations
    }

}
