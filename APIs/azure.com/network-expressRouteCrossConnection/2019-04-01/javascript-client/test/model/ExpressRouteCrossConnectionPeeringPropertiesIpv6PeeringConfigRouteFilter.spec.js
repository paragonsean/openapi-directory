/**
 * ExpressRouteCrossConnection REST APIs
 * The Microsoft Azure ExpressRouteCrossConnection Resource Provider REST APIs describes the operations for the connectivity provider to provision ExpressRoute circuit, create and modify BGP peering entities and troubleshoot connectivity on customer's ExpressRoute circuit.
 *
 * The version of the OpenAPI document: 2019-04-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ExpressRouteCrossConnectionRestApis);
  }
}(this, function(expect, ExpressRouteCrossConnectionRestApis) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ExpressRouteCrossConnectionRestApis.ExpressRouteCrossConnectionPeeringPropertiesIpv6PeeringConfigRouteFilter();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ExpressRouteCrossConnectionPeeringPropertiesIpv6PeeringConfigRouteFilter', function() {
    it('should create an instance of ExpressRouteCrossConnectionPeeringPropertiesIpv6PeeringConfigRouteFilter', function() {
      // uncomment below and update the code to test ExpressRouteCrossConnectionPeeringPropertiesIpv6PeeringConfigRouteFilter
      //var instance = new ExpressRouteCrossConnectionRestApis.ExpressRouteCrossConnectionPeeringPropertiesIpv6PeeringConfigRouteFilter();
      //expect(instance).to.be.a(ExpressRouteCrossConnectionRestApis.ExpressRouteCrossConnectionPeeringPropertiesIpv6PeeringConfigRouteFilter);
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new ExpressRouteCrossConnectionRestApis.ExpressRouteCrossConnectionPeeringPropertiesIpv6PeeringConfigRouteFilter();
      //expect(instance).to.be();
    });

  });

}));
