/**
 * ExpressRouteCrossConnection REST APIs
 * The Microsoft Azure ExpressRouteCrossConnection Resource Provider REST APIs describes the operations for the connectivity provider to provision ExpressRoute circuit, create and modify BGP peering entities and troubleshoot connectivity on customer's ExpressRoute circuit.
 *
 * The version of the OpenAPI document: 2019-04-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIExpressRouteCircuitReference.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIExpressRouteCircuitReference::OAIExpressRouteCircuitReference(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIExpressRouteCircuitReference::OAIExpressRouteCircuitReference() {
    this->initializeModel();
}

OAIExpressRouteCircuitReference::~OAIExpressRouteCircuitReference() {}

void OAIExpressRouteCircuitReference::initializeModel() {

    m_id_isSet = false;
    m_id_isValid = false;
}

void OAIExpressRouteCircuitReference::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIExpressRouteCircuitReference::fromJsonObject(QJsonObject json) {

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;
}

QString OAIExpressRouteCircuitReference::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIExpressRouteCircuitReference::asJsonObject() const {
    QJsonObject obj;
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    return obj;
}

QString OAIExpressRouteCircuitReference::getId() const {
    return m_id;
}
void OAIExpressRouteCircuitReference::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIExpressRouteCircuitReference::is_id_Set() const{
    return m_id_isSet;
}

bool OAIExpressRouteCircuitReference::is_id_Valid() const{
    return m_id_isValid;
}

bool OAIExpressRouteCircuitReference::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIExpressRouteCircuitReference::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
