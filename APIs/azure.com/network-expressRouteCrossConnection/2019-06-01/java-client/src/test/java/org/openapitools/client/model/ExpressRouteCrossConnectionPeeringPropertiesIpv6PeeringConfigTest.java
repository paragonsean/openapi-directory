/*
 * ExpressRouteCrossConnection REST APIs
 * The Microsoft Azure ExpressRouteCrossConnection Resource Provider REST APIs describes the operations for the connectivity provider to provision ExpressRoute circuit, create and modify BGP peering entities and troubleshoot connectivity on customer's ExpressRoute circuit.
 *
 * The version of the OpenAPI document: 2019-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.ExpressRouteCrossConnectionPeeringPropertiesIpv6PeeringConfigMicrosoftPeeringConfig;
import org.openapitools.client.model.ExpressRouteCrossConnectionPeeringPropertiesIpv6PeeringConfigRouteFilter;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ExpressRouteCrossConnectionPeeringPropertiesIpv6PeeringConfig
 */
public class ExpressRouteCrossConnectionPeeringPropertiesIpv6PeeringConfigTest {
    private final ExpressRouteCrossConnectionPeeringPropertiesIpv6PeeringConfig model = new ExpressRouteCrossConnectionPeeringPropertiesIpv6PeeringConfig();

    /**
     * Model tests for ExpressRouteCrossConnectionPeeringPropertiesIpv6PeeringConfig
     */
    @Test
    public void testExpressRouteCrossConnectionPeeringPropertiesIpv6PeeringConfig() {
        // TODO: test ExpressRouteCrossConnectionPeeringPropertiesIpv6PeeringConfig
    }

    /**
     * Test the property 'microsoftPeeringConfig'
     */
    @Test
    public void microsoftPeeringConfigTest() {
        // TODO: test microsoftPeeringConfig
    }

    /**
     * Test the property 'primaryPeerAddressPrefix'
     */
    @Test
    public void primaryPeerAddressPrefixTest() {
        // TODO: test primaryPeerAddressPrefix
    }

    /**
     * Test the property 'routeFilter'
     */
    @Test
    public void routeFilterTest() {
        // TODO: test routeFilter
    }

    /**
     * Test the property 'secondaryPeerAddressPrefix'
     */
    @Test
    public void secondaryPeerAddressPrefixTest() {
        // TODO: test secondaryPeerAddressPrefix
    }

    /**
     * Test the property 'state'
     */
    @Test
    public void stateTest() {
        // TODO: test state
    }

}
