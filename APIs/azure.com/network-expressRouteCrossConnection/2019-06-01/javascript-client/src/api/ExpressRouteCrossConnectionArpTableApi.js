/**
 * ExpressRouteCrossConnection REST APIs
 * The Microsoft Azure ExpressRouteCrossConnection Resource Provider REST APIs describes the operations for the connectivity provider to provision ExpressRoute circuit, create and modify BGP peering entities and troubleshoot connectivity on customer's ExpressRoute circuit.
 *
 * The version of the OpenAPI document: 2019-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ExpressRouteCrossConnectionsListArpTable200Response from '../model/ExpressRouteCrossConnectionsListArpTable200Response';

/**
* ExpressRouteCrossConnectionArpTable service.
* @module api/ExpressRouteCrossConnectionArpTableApi
* @version 2019-06-01
*/
export default class ExpressRouteCrossConnectionArpTableApi {

    /**
    * Constructs a new ExpressRouteCrossConnectionArpTableApi. 
    * @alias module:api/ExpressRouteCrossConnectionArpTableApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the expressRouteCrossConnectionsListArpTable operation.
     * @callback module:api/ExpressRouteCrossConnectionArpTableApi~expressRouteCrossConnectionsListArpTableCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ExpressRouteCrossConnectionsListArpTable200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the currently advertised ARP table associated with the express route cross connection in a resource group.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} crossConnectionName The name of the ExpressRouteCrossConnection.
     * @param {String} peeringName The name of the peering.
     * @param {String} devicePath The path of the device.
     * @param {String} apiVersion Client API version.
     * @param {String} subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/ExpressRouteCrossConnectionArpTableApi~expressRouteCrossConnectionsListArpTableCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ExpressRouteCrossConnectionsListArpTable200Response}
     */
    expressRouteCrossConnectionsListArpTable(resourceGroupName, crossConnectionName, peeringName, devicePath, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling expressRouteCrossConnectionsListArpTable");
      }
      // verify the required parameter 'crossConnectionName' is set
      if (crossConnectionName === undefined || crossConnectionName === null) {
        throw new Error("Missing the required parameter 'crossConnectionName' when calling expressRouteCrossConnectionsListArpTable");
      }
      // verify the required parameter 'peeringName' is set
      if (peeringName === undefined || peeringName === null) {
        throw new Error("Missing the required parameter 'peeringName' when calling expressRouteCrossConnectionsListArpTable");
      }
      // verify the required parameter 'devicePath' is set
      if (devicePath === undefined || devicePath === null) {
        throw new Error("Missing the required parameter 'devicePath' when calling expressRouteCrossConnectionsListArpTable");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling expressRouteCrossConnectionsListArpTable");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling expressRouteCrossConnectionsListArpTable");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'crossConnectionName': crossConnectionName,
        'peeringName': peeringName,
        'devicePath': devicePath,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ExpressRouteCrossConnectionsListArpTable200Response;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCrossConnections/{crossConnectionName}/peerings/{peeringName}/arpTables/{devicePath}', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
