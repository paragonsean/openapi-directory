/**
 * ExpressRouteCrossConnection REST APIs
 * The Microsoft Azure ExpressRouteCrossConnection Resource Provider REST APIs describes the operations for the connectivity provider to provision ExpressRoute circuit, create and modify BGP peering entities and troubleshoot connectivity on customer's ExpressRoute circuit.
 *
 * The version of the OpenAPI document: 2019-07-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import ExpressRouteCircuitReference from './model/ExpressRouteCircuitReference';
import ExpressRouteCrossConnection from './model/ExpressRouteCrossConnection';
import ExpressRouteCrossConnectionListResult from './model/ExpressRouteCrossConnectionListResult';
import ExpressRouteCrossConnectionPeering from './model/ExpressRouteCrossConnectionPeering';
import ExpressRouteCrossConnectionPeeringList from './model/ExpressRouteCrossConnectionPeeringList';
import ExpressRouteCrossConnectionPeeringProperties from './model/ExpressRouteCrossConnectionPeeringProperties';
import ExpressRouteCrossConnectionPeeringPropertiesIpv6PeeringConfig from './model/ExpressRouteCrossConnectionPeeringPropertiesIpv6PeeringConfig';
import ExpressRouteCrossConnectionPeeringPropertiesIpv6PeeringConfigMicrosoftPeeringConfig from './model/ExpressRouteCrossConnectionPeeringPropertiesIpv6PeeringConfigMicrosoftPeeringConfig';
import ExpressRouteCrossConnectionPeeringPropertiesIpv6PeeringConfigRouteFilter from './model/ExpressRouteCrossConnectionPeeringPropertiesIpv6PeeringConfigRouteFilter';
import ExpressRouteCrossConnectionProperties from './model/ExpressRouteCrossConnectionProperties';
import ExpressRouteCrossConnectionRoutesTableSummary from './model/ExpressRouteCrossConnectionRoutesTableSummary';
import ExpressRouteCrossConnectionsListArpTable200Response from './model/ExpressRouteCrossConnectionsListArpTable200Response';
import ExpressRouteCrossConnectionsListArpTable200ResponseValueInner from './model/ExpressRouteCrossConnectionsListArpTable200ResponseValueInner';
import ExpressRouteCrossConnectionsListRoutesTable200Response from './model/ExpressRouteCrossConnectionsListRoutesTable200Response';
import ExpressRouteCrossConnectionsListRoutesTable200ResponseValueInner from './model/ExpressRouteCrossConnectionsListRoutesTable200ResponseValueInner';
import ExpressRouteCrossConnectionsRoutesTableSummaryListResult from './model/ExpressRouteCrossConnectionsRoutesTableSummaryListResult';
import ExpressRouteCrossConnectionsUpdateTagsRequest from './model/ExpressRouteCrossConnectionsUpdateTagsRequest';
import ExpressRouteCrossConnectionArpTableApi from './api/ExpressRouteCrossConnectionArpTableApi';
import ExpressRouteCrossConnectionPeeringsApi from './api/ExpressRouteCrossConnectionPeeringsApi';
import ExpressRouteCrossConnectionRouteTableApi from './api/ExpressRouteCrossConnectionRouteTableApi';
import ExpressRouteCrossConnectionRouteTableSummaryApi from './api/ExpressRouteCrossConnectionRouteTableSummaryApi';
import ExpressRouteCrossConnectionsApi from './api/ExpressRouteCrossConnectionsApi';


/**
* The Microsoft Azure ExpressRouteCrossConnection Resource Provider REST APIs describes the operations for the connectivity provider to provision ExpressRoute circuit, create and modify BGP peering entities and troubleshoot connectivity on customer&#39;s ExpressRoute circuit..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var ExpressRouteCrossConnectionRestApis = require('index'); // See note below*.
* var xxxSvc = new ExpressRouteCrossConnectionRestApis.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new ExpressRouteCrossConnectionRestApis.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new ExpressRouteCrossConnectionRestApis.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new ExpressRouteCrossConnectionRestApis.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2019-07-01
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The ExpressRouteCircuitReference model constructor.
     * @property {module:model/ExpressRouteCircuitReference}
     */
    ExpressRouteCircuitReference,

    /**
     * The ExpressRouteCrossConnection model constructor.
     * @property {module:model/ExpressRouteCrossConnection}
     */
    ExpressRouteCrossConnection,

    /**
     * The ExpressRouteCrossConnectionListResult model constructor.
     * @property {module:model/ExpressRouteCrossConnectionListResult}
     */
    ExpressRouteCrossConnectionListResult,

    /**
     * The ExpressRouteCrossConnectionPeering model constructor.
     * @property {module:model/ExpressRouteCrossConnectionPeering}
     */
    ExpressRouteCrossConnectionPeering,

    /**
     * The ExpressRouteCrossConnectionPeeringList model constructor.
     * @property {module:model/ExpressRouteCrossConnectionPeeringList}
     */
    ExpressRouteCrossConnectionPeeringList,

    /**
     * The ExpressRouteCrossConnectionPeeringProperties model constructor.
     * @property {module:model/ExpressRouteCrossConnectionPeeringProperties}
     */
    ExpressRouteCrossConnectionPeeringProperties,

    /**
     * The ExpressRouteCrossConnectionPeeringPropertiesIpv6PeeringConfig model constructor.
     * @property {module:model/ExpressRouteCrossConnectionPeeringPropertiesIpv6PeeringConfig}
     */
    ExpressRouteCrossConnectionPeeringPropertiesIpv6PeeringConfig,

    /**
     * The ExpressRouteCrossConnectionPeeringPropertiesIpv6PeeringConfigMicrosoftPeeringConfig model constructor.
     * @property {module:model/ExpressRouteCrossConnectionPeeringPropertiesIpv6PeeringConfigMicrosoftPeeringConfig}
     */
    ExpressRouteCrossConnectionPeeringPropertiesIpv6PeeringConfigMicrosoftPeeringConfig,

    /**
     * The ExpressRouteCrossConnectionPeeringPropertiesIpv6PeeringConfigRouteFilter model constructor.
     * @property {module:model/ExpressRouteCrossConnectionPeeringPropertiesIpv6PeeringConfigRouteFilter}
     */
    ExpressRouteCrossConnectionPeeringPropertiesIpv6PeeringConfigRouteFilter,

    /**
     * The ExpressRouteCrossConnectionProperties model constructor.
     * @property {module:model/ExpressRouteCrossConnectionProperties}
     */
    ExpressRouteCrossConnectionProperties,

    /**
     * The ExpressRouteCrossConnectionRoutesTableSummary model constructor.
     * @property {module:model/ExpressRouteCrossConnectionRoutesTableSummary}
     */
    ExpressRouteCrossConnectionRoutesTableSummary,

    /**
     * The ExpressRouteCrossConnectionsListArpTable200Response model constructor.
     * @property {module:model/ExpressRouteCrossConnectionsListArpTable200Response}
     */
    ExpressRouteCrossConnectionsListArpTable200Response,

    /**
     * The ExpressRouteCrossConnectionsListArpTable200ResponseValueInner model constructor.
     * @property {module:model/ExpressRouteCrossConnectionsListArpTable200ResponseValueInner}
     */
    ExpressRouteCrossConnectionsListArpTable200ResponseValueInner,

    /**
     * The ExpressRouteCrossConnectionsListRoutesTable200Response model constructor.
     * @property {module:model/ExpressRouteCrossConnectionsListRoutesTable200Response}
     */
    ExpressRouteCrossConnectionsListRoutesTable200Response,

    /**
     * The ExpressRouteCrossConnectionsListRoutesTable200ResponseValueInner model constructor.
     * @property {module:model/ExpressRouteCrossConnectionsListRoutesTable200ResponseValueInner}
     */
    ExpressRouteCrossConnectionsListRoutesTable200ResponseValueInner,

    /**
     * The ExpressRouteCrossConnectionsRoutesTableSummaryListResult model constructor.
     * @property {module:model/ExpressRouteCrossConnectionsRoutesTableSummaryListResult}
     */
    ExpressRouteCrossConnectionsRoutesTableSummaryListResult,

    /**
     * The ExpressRouteCrossConnectionsUpdateTagsRequest model constructor.
     * @property {module:model/ExpressRouteCrossConnectionsUpdateTagsRequest}
     */
    ExpressRouteCrossConnectionsUpdateTagsRequest,

    /**
    * The ExpressRouteCrossConnectionArpTableApi service constructor.
    * @property {module:api/ExpressRouteCrossConnectionArpTableApi}
    */
    ExpressRouteCrossConnectionArpTableApi,

    /**
    * The ExpressRouteCrossConnectionPeeringsApi service constructor.
    * @property {module:api/ExpressRouteCrossConnectionPeeringsApi}
    */
    ExpressRouteCrossConnectionPeeringsApi,

    /**
    * The ExpressRouteCrossConnectionRouteTableApi service constructor.
    * @property {module:api/ExpressRouteCrossConnectionRouteTableApi}
    */
    ExpressRouteCrossConnectionRouteTableApi,

    /**
    * The ExpressRouteCrossConnectionRouteTableSummaryApi service constructor.
    * @property {module:api/ExpressRouteCrossConnectionRouteTableSummaryApi}
    */
    ExpressRouteCrossConnectionRouteTableSummaryApi,

    /**
    * The ExpressRouteCrossConnectionsApi service constructor.
    * @property {module:api/ExpressRouteCrossConnectionsApi}
    */
    ExpressRouteCrossConnectionsApi
};
