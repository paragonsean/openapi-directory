/*
 * ExpressRouteCrossConnection REST APIs
 * The Microsoft Azure ExpressRouteCrossConnection Resource Provider REST APIs describes the operations for the connectivity provider to provision ExpressRoute circuit, create and modify BGP peering entities and troubleshoot connectivity on customer's ExpressRoute circuit.
 *
 * The version of the OpenAPI document: 2019-08-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ExpressRouteCrossConnectionPeering;
import org.openapitools.client.model.ExpressRouteCrossConnectionPeeringList;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ExpressRouteCrossConnectionPeeringsApi
 */
@Disabled
public class ExpressRouteCrossConnectionPeeringsApiTest {

    private final ExpressRouteCrossConnectionPeeringsApi api = new ExpressRouteCrossConnectionPeeringsApi();

    /**
     * Creates or updates a peering in the specified ExpressRouteCrossConnection.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void expressRouteCrossConnectionPeeringsCreateOrUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String crossConnectionName = null;
        String peeringName = null;
        String apiVersion = null;
        String subscriptionId = null;
        ExpressRouteCrossConnectionPeering peeringParameters = null;
        ExpressRouteCrossConnectionPeering response = api.expressRouteCrossConnectionPeeringsCreateOrUpdate(resourceGroupName, crossConnectionName, peeringName, apiVersion, subscriptionId, peeringParameters);
        // TODO: test validations
    }

    /**
     * Deletes the specified peering from the ExpressRouteCrossConnection.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void expressRouteCrossConnectionPeeringsDeleteTest() throws ApiException {
        String resourceGroupName = null;
        String crossConnectionName = null;
        String peeringName = null;
        String apiVersion = null;
        String subscriptionId = null;
        api.expressRouteCrossConnectionPeeringsDelete(resourceGroupName, crossConnectionName, peeringName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Gets the specified peering for the ExpressRouteCrossConnection.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void expressRouteCrossConnectionPeeringsGetTest() throws ApiException {
        String resourceGroupName = null;
        String crossConnectionName = null;
        String peeringName = null;
        String apiVersion = null;
        String subscriptionId = null;
        ExpressRouteCrossConnectionPeering response = api.expressRouteCrossConnectionPeeringsGet(resourceGroupName, crossConnectionName, peeringName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Gets all peerings in a specified ExpressRouteCrossConnection.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void expressRouteCrossConnectionPeeringsListTest() throws ApiException {
        String resourceGroupName = null;
        String crossConnectionName = null;
        String apiVersion = null;
        String subscriptionId = null;
        ExpressRouteCrossConnectionPeeringList response = api.expressRouteCrossConnectionPeeringsList(resourceGroupName, crossConnectionName, apiVersion, subscriptionId);
        // TODO: test validations
    }

}
