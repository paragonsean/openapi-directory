/*
 * ExpressRouteCrossConnection REST APIs
 * The Microsoft Azure ExpressRouteCrossConnection Resource Provider REST APIs describes the operations for the connectivity provider to provision ExpressRoute circuit, create and modify BGP peering entities and troubleshoot connectivity on customer's ExpressRoute circuit.
 *
 * The version of the OpenAPI document: 2019-08-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.ExpressRouteCrossConnectionPeeringPropertiesIpv6PeeringConfig;
import org.openapitools.client.model.ExpressRouteCrossConnectionPeeringPropertiesIpv6PeeringConfigMicrosoftPeeringConfig;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ExpressRouteCrossConnectionPeeringProperties
 */
public class ExpressRouteCrossConnectionPeeringPropertiesTest {
    private final ExpressRouteCrossConnectionPeeringProperties model = new ExpressRouteCrossConnectionPeeringProperties();

    /**
     * Model tests for ExpressRouteCrossConnectionPeeringProperties
     */
    @Test
    public void testExpressRouteCrossConnectionPeeringProperties() {
        // TODO: test ExpressRouteCrossConnectionPeeringProperties
    }

    /**
     * Test the property 'azureASN'
     */
    @Test
    public void azureASNTest() {
        // TODO: test azureASN
    }

    /**
     * Test the property 'gatewayManagerEtag'
     */
    @Test
    public void gatewayManagerEtagTest() {
        // TODO: test gatewayManagerEtag
    }

    /**
     * Test the property 'ipv6PeeringConfig'
     */
    @Test
    public void ipv6PeeringConfigTest() {
        // TODO: test ipv6PeeringConfig
    }

    /**
     * Test the property 'lastModifiedBy'
     */
    @Test
    public void lastModifiedByTest() {
        // TODO: test lastModifiedBy
    }

    /**
     * Test the property 'microsoftPeeringConfig'
     */
    @Test
    public void microsoftPeeringConfigTest() {
        // TODO: test microsoftPeeringConfig
    }

    /**
     * Test the property 'peerASN'
     */
    @Test
    public void peerASNTest() {
        // TODO: test peerASN
    }

    /**
     * Test the property 'peeringType'
     */
    @Test
    public void peeringTypeTest() {
        // TODO: test peeringType
    }

    /**
     * Test the property 'primaryAzurePort'
     */
    @Test
    public void primaryAzurePortTest() {
        // TODO: test primaryAzurePort
    }

    /**
     * Test the property 'primaryPeerAddressPrefix'
     */
    @Test
    public void primaryPeerAddressPrefixTest() {
        // TODO: test primaryPeerAddressPrefix
    }

    /**
     * Test the property 'provisioningState'
     */
    @Test
    public void provisioningStateTest() {
        // TODO: test provisioningState
    }

    /**
     * Test the property 'secondaryAzurePort'
     */
    @Test
    public void secondaryAzurePortTest() {
        // TODO: test secondaryAzurePort
    }

    /**
     * Test the property 'secondaryPeerAddressPrefix'
     */
    @Test
    public void secondaryPeerAddressPrefixTest() {
        // TODO: test secondaryPeerAddressPrefix
    }

    /**
     * Test the property 'sharedKey'
     */
    @Test
    public void sharedKeyTest() {
        // TODO: test sharedKey
    }

    /**
     * Test the property 'state'
     */
    @Test
    public void stateTest() {
        // TODO: test state
    }

    /**
     * Test the property 'vlanId'
     */
    @Test
    public void vlanIdTest() {
        // TODO: test vlanId
    }

}
