/**
 * ApplicationInsightsManagementClient
 * Azure Application Insights workbook template type.
 *
 * The version of the OpenAPI document: 2019-10-17-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIWorkbookTemplateLocalizedGallery.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIWorkbookTemplateLocalizedGallery::OAIWorkbookTemplateLocalizedGallery(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIWorkbookTemplateLocalizedGallery::OAIWorkbookTemplateLocalizedGallery() {
    this->initializeModel();
}

OAIWorkbookTemplateLocalizedGallery::~OAIWorkbookTemplateLocalizedGallery() {}

void OAIWorkbookTemplateLocalizedGallery::initializeModel() {

    m_galleries_isSet = false;
    m_galleries_isValid = false;

    m_template_data_isSet = false;
    m_template_data_isValid = false;
}

void OAIWorkbookTemplateLocalizedGallery::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIWorkbookTemplateLocalizedGallery::fromJsonObject(QJsonObject json) {

    m_galleries_isValid = ::OpenAPI::fromJsonValue(m_galleries, json[QString("galleries")]);
    m_galleries_isSet = !json[QString("galleries")].isNull() && m_galleries_isValid;

    m_template_data_isValid = ::OpenAPI::fromJsonValue(m_template_data, json[QString("templateData")]);
    m_template_data_isSet = !json[QString("templateData")].isNull() && m_template_data_isValid;
}

QString OAIWorkbookTemplateLocalizedGallery::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIWorkbookTemplateLocalizedGallery::asJsonObject() const {
    QJsonObject obj;
    if (m_galleries.size() > 0) {
        obj.insert(QString("galleries"), ::OpenAPI::toJsonValue(m_galleries));
    }
    if (m_template_data_isSet) {
        obj.insert(QString("templateData"), ::OpenAPI::toJsonValue(m_template_data));
    }
    return obj;
}

QList<OAIWorkbookTemplateGallery> OAIWorkbookTemplateLocalizedGallery::getGalleries() const {
    return m_galleries;
}
void OAIWorkbookTemplateLocalizedGallery::setGalleries(const QList<OAIWorkbookTemplateGallery> &galleries) {
    m_galleries = galleries;
    m_galleries_isSet = true;
}

bool OAIWorkbookTemplateLocalizedGallery::is_galleries_Set() const{
    return m_galleries_isSet;
}

bool OAIWorkbookTemplateLocalizedGallery::is_galleries_Valid() const{
    return m_galleries_isValid;
}

OAIObject OAIWorkbookTemplateLocalizedGallery::getTemplateData() const {
    return m_template_data;
}
void OAIWorkbookTemplateLocalizedGallery::setTemplateData(const OAIObject &template_data) {
    m_template_data = template_data;
    m_template_data_isSet = true;
}

bool OAIWorkbookTemplateLocalizedGallery::is_template_data_Set() const{
    return m_template_data_isSet;
}

bool OAIWorkbookTemplateLocalizedGallery::is_template_data_Valid() const{
    return m_template_data_isValid;
}

bool OAIWorkbookTemplateLocalizedGallery::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_galleries.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_template_data_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIWorkbookTemplateLocalizedGallery::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
