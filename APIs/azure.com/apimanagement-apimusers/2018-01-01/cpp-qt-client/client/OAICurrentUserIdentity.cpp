/**
 * ApiManagementClient
 * Use these REST APIs for performing operations on User entity in Azure API Management deployment. The User entity in API Management represents the developers that call the APIs of the products to which they are subscribed.
 *
 * The version of the OpenAPI document: 2018-01-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICurrentUserIdentity.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICurrentUserIdentity::OAICurrentUserIdentity(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICurrentUserIdentity::OAICurrentUserIdentity() {
    this->initializeModel();
}

OAICurrentUserIdentity::~OAICurrentUserIdentity() {}

void OAICurrentUserIdentity::initializeModel() {

    m_id_isSet = false;
    m_id_isValid = false;
}

void OAICurrentUserIdentity::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICurrentUserIdentity::fromJsonObject(QJsonObject json) {

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;
}

QString OAICurrentUserIdentity::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICurrentUserIdentity::asJsonObject() const {
    QJsonObject obj;
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    return obj;
}

QString OAICurrentUserIdentity::getId() const {
    return m_id;
}
void OAICurrentUserIdentity::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAICurrentUserIdentity::is_id_Set() const{
    return m_id_isSet;
}

bool OAICurrentUserIdentity::is_id_Valid() const{
    return m_id_isValid;
}

bool OAICurrentUserIdentity::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICurrentUserIdentity::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
