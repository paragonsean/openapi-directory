/**
 * ApiManagementClient
 * Use these REST APIs for performing operations on User entity in Azure API Management deployment. The User entity in API Management represents the developers that call the APIs of the products to which they are subscribed.
 *
 * The version of the OpenAPI document: 2018-01-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUserSubscription_List_200_response_value_inner_properties.h
 *
 * Subscription details.
 */

#ifndef OAIUserSubscription_List_200_response_value_inner_properties_H
#define OAIUserSubscription_List_200_response_value_inner_properties_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIUserSubscription_List_200_response_value_inner_properties : public OAIObject {
public:
    OAIUserSubscription_List_200_response_value_inner_properties();
    OAIUserSubscription_List_200_response_value_inner_properties(QString json);
    ~OAIUserSubscription_List_200_response_value_inner_properties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getCreatedDate() const;
    void setCreatedDate(const QDateTime &created_date);
    bool is_created_date_Set() const;
    bool is_created_date_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    QDateTime getEndDate() const;
    void setEndDate(const QDateTime &end_date);
    bool is_end_date_Set() const;
    bool is_end_date_Valid() const;

    QDateTime getExpirationDate() const;
    void setExpirationDate(const QDateTime &expiration_date);
    bool is_expiration_date_Set() const;
    bool is_expiration_date_Valid() const;

    QDateTime getNotificationDate() const;
    void setNotificationDate(const QDateTime &notification_date);
    bool is_notification_date_Set() const;
    bool is_notification_date_Valid() const;

    QString getPrimaryKey() const;
    void setPrimaryKey(const QString &primary_key);
    bool is_primary_key_Set() const;
    bool is_primary_key_Valid() const;

    QString getProductId() const;
    void setProductId(const QString &product_id);
    bool is_product_id_Set() const;
    bool is_product_id_Valid() const;

    QString getSecondaryKey() const;
    void setSecondaryKey(const QString &secondary_key);
    bool is_secondary_key_Set() const;
    bool is_secondary_key_Valid() const;

    QDateTime getStartDate() const;
    void setStartDate(const QDateTime &start_date);
    bool is_start_date_Set() const;
    bool is_start_date_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QString getStateComment() const;
    void setStateComment(const QString &state_comment);
    bool is_state_comment_Set() const;
    bool is_state_comment_Valid() const;

    QString getUserId() const;
    void setUserId(const QString &user_id);
    bool is_user_id_Set() const;
    bool is_user_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_created_date;
    bool m_created_date_isSet;
    bool m_created_date_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    QDateTime m_end_date;
    bool m_end_date_isSet;
    bool m_end_date_isValid;

    QDateTime m_expiration_date;
    bool m_expiration_date_isSet;
    bool m_expiration_date_isValid;

    QDateTime m_notification_date;
    bool m_notification_date_isSet;
    bool m_notification_date_isValid;

    QString m_primary_key;
    bool m_primary_key_isSet;
    bool m_primary_key_isValid;

    QString m_product_id;
    bool m_product_id_isSet;
    bool m_product_id_isValid;

    QString m_secondary_key;
    bool m_secondary_key_isSet;
    bool m_secondary_key_isValid;

    QDateTime m_start_date;
    bool m_start_date_isSet;
    bool m_start_date_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QString m_state_comment;
    bool m_state_comment_isSet;
    bool m_state_comment_isValid;

    QString m_user_id;
    bool m_user_id_isSet;
    bool m_user_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUserSubscription_List_200_response_value_inner_properties)

#endif // OAIUserSubscription_List_200_response_value_inner_properties_H
