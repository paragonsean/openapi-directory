/**
 * ApiManagementClient
 * Use these REST APIs for performing operations on User entity in Azure API Management deployment. The User entity in API Management represents the developers that call the APIs of the products to which they are subscribed.
 *
 * The version of the OpenAPI document: 2018-01-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUserContractProperties.h
 *
 * User profile.
 */

#ifndef OAIUserContractProperties_H
#define OAIUserContractProperties_H

#include <QJsonObject>

#include "OAIObject.h"
#include "OAIUserIdentityContract.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUserIdentityContract;

class OAIUserContractProperties : public OAIObject {
public:
    OAIUserContractProperties();
    OAIUserContractProperties(QString json);
    ~OAIUserContractProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getEmail() const;
    void setEmail(const QString &email);
    bool is_email_Set() const;
    bool is_email_Valid() const;

    QString getFirstName() const;
    void setFirstName(const QString &first_name);
    bool is_first_name_Set() const;
    bool is_first_name_Valid() const;

    QList<OAIObject> getGroups() const;
    void setGroups(const QList<OAIObject> &groups);
    bool is_groups_Set() const;
    bool is_groups_Valid() const;

    QString getLastName() const;
    void setLastName(const QString &last_name);
    bool is_last_name_Set() const;
    bool is_last_name_Valid() const;

    QDateTime getRegistrationDate() const;
    void setRegistrationDate(const QDateTime &registration_date);
    bool is_registration_date_Set() const;
    bool is_registration_date_Valid() const;

    QList<OAIUserIdentityContract> getIdentities() const;
    void setIdentities(const QList<OAIUserIdentityContract> &identities);
    bool is_identities_Set() const;
    bool is_identities_Valid() const;

    QString getNote() const;
    void setNote(const QString &note);
    bool is_note_Set() const;
    bool is_note_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_email;
    bool m_email_isSet;
    bool m_email_isValid;

    QString m_first_name;
    bool m_first_name_isSet;
    bool m_first_name_isValid;

    QList<OAIObject> m_groups;
    bool m_groups_isSet;
    bool m_groups_isValid;

    QString m_last_name;
    bool m_last_name_isSet;
    bool m_last_name_isValid;

    QDateTime m_registration_date;
    bool m_registration_date_isSet;
    bool m_registration_date_isValid;

    QList<OAIUserIdentityContract> m_identities;
    bool m_identities_isSet;
    bool m_identities_isValid;

    QString m_note;
    bool m_note_isSet;
    bool m_note_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUserContractProperties)

#endif // OAIUserContractProperties_H
