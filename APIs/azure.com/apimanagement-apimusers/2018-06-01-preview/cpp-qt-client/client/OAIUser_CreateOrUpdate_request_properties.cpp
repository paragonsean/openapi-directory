/**
 * ApiManagementClient
 * Use these REST APIs for performing operations on User entity in Azure API Management deployment. The User entity in API Management represents the developers that call the APIs of the products to which they are subscribed.
 *
 * The version of the OpenAPI document: 2018-06-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUser_CreateOrUpdate_request_properties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUser_CreateOrUpdate_request_properties::OAIUser_CreateOrUpdate_request_properties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUser_CreateOrUpdate_request_properties::OAIUser_CreateOrUpdate_request_properties() {
    this->initializeModel();
}

OAIUser_CreateOrUpdate_request_properties::~OAIUser_CreateOrUpdate_request_properties() {}

void OAIUser_CreateOrUpdate_request_properties::initializeModel() {

    m_confirmation_isSet = false;
    m_confirmation_isValid = false;

    m_email_isSet = false;
    m_email_isValid = false;

    m_first_name_isSet = false;
    m_first_name_isValid = false;

    m_last_name_isSet = false;
    m_last_name_isValid = false;

    m_password_isSet = false;
    m_password_isValid = false;
}

void OAIUser_CreateOrUpdate_request_properties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUser_CreateOrUpdate_request_properties::fromJsonObject(QJsonObject json) {

    m_confirmation_isValid = ::OpenAPI::fromJsonValue(m_confirmation, json[QString("confirmation")]);
    m_confirmation_isSet = !json[QString("confirmation")].isNull() && m_confirmation_isValid;

    m_email_isValid = ::OpenAPI::fromJsonValue(m_email, json[QString("email")]);
    m_email_isSet = !json[QString("email")].isNull() && m_email_isValid;

    m_first_name_isValid = ::OpenAPI::fromJsonValue(m_first_name, json[QString("firstName")]);
    m_first_name_isSet = !json[QString("firstName")].isNull() && m_first_name_isValid;

    m_last_name_isValid = ::OpenAPI::fromJsonValue(m_last_name, json[QString("lastName")]);
    m_last_name_isSet = !json[QString("lastName")].isNull() && m_last_name_isValid;

    m_password_isValid = ::OpenAPI::fromJsonValue(m_password, json[QString("password")]);
    m_password_isSet = !json[QString("password")].isNull() && m_password_isValid;
}

QString OAIUser_CreateOrUpdate_request_properties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUser_CreateOrUpdate_request_properties::asJsonObject() const {
    QJsonObject obj;
    if (m_confirmation_isSet) {
        obj.insert(QString("confirmation"), ::OpenAPI::toJsonValue(m_confirmation));
    }
    if (m_email_isSet) {
        obj.insert(QString("email"), ::OpenAPI::toJsonValue(m_email));
    }
    if (m_first_name_isSet) {
        obj.insert(QString("firstName"), ::OpenAPI::toJsonValue(m_first_name));
    }
    if (m_last_name_isSet) {
        obj.insert(QString("lastName"), ::OpenAPI::toJsonValue(m_last_name));
    }
    if (m_password_isSet) {
        obj.insert(QString("password"), ::OpenAPI::toJsonValue(m_password));
    }
    return obj;
}

QString OAIUser_CreateOrUpdate_request_properties::getConfirmation() const {
    return m_confirmation;
}
void OAIUser_CreateOrUpdate_request_properties::setConfirmation(const QString &confirmation) {
    m_confirmation = confirmation;
    m_confirmation_isSet = true;
}

bool OAIUser_CreateOrUpdate_request_properties::is_confirmation_Set() const{
    return m_confirmation_isSet;
}

bool OAIUser_CreateOrUpdate_request_properties::is_confirmation_Valid() const{
    return m_confirmation_isValid;
}

QString OAIUser_CreateOrUpdate_request_properties::getEmail() const {
    return m_email;
}
void OAIUser_CreateOrUpdate_request_properties::setEmail(const QString &email) {
    m_email = email;
    m_email_isSet = true;
}

bool OAIUser_CreateOrUpdate_request_properties::is_email_Set() const{
    return m_email_isSet;
}

bool OAIUser_CreateOrUpdate_request_properties::is_email_Valid() const{
    return m_email_isValid;
}

QString OAIUser_CreateOrUpdate_request_properties::getFirstName() const {
    return m_first_name;
}
void OAIUser_CreateOrUpdate_request_properties::setFirstName(const QString &first_name) {
    m_first_name = first_name;
    m_first_name_isSet = true;
}

bool OAIUser_CreateOrUpdate_request_properties::is_first_name_Set() const{
    return m_first_name_isSet;
}

bool OAIUser_CreateOrUpdate_request_properties::is_first_name_Valid() const{
    return m_first_name_isValid;
}

QString OAIUser_CreateOrUpdate_request_properties::getLastName() const {
    return m_last_name;
}
void OAIUser_CreateOrUpdate_request_properties::setLastName(const QString &last_name) {
    m_last_name = last_name;
    m_last_name_isSet = true;
}

bool OAIUser_CreateOrUpdate_request_properties::is_last_name_Set() const{
    return m_last_name_isSet;
}

bool OAIUser_CreateOrUpdate_request_properties::is_last_name_Valid() const{
    return m_last_name_isValid;
}

QString OAIUser_CreateOrUpdate_request_properties::getPassword() const {
    return m_password;
}
void OAIUser_CreateOrUpdate_request_properties::setPassword(const QString &password) {
    m_password = password;
    m_password_isSet = true;
}

bool OAIUser_CreateOrUpdate_request_properties::is_password_Set() const{
    return m_password_isSet;
}

bool OAIUser_CreateOrUpdate_request_properties::is_password_Valid() const{
    return m_password_isValid;
}

bool OAIUser_CreateOrUpdate_request_properties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_confirmation_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_first_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_password_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUser_CreateOrUpdate_request_properties::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_email_isValid && m_first_name_isValid && m_last_name_isValid && true;
}

} // namespace OpenAPI
