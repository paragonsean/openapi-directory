/**
 * ApiManagementClient
 * Use these REST APIs for performing operations on User entity in Azure API Management deployment. The User entity in API Management represents the developers that call the APIs of the products to which they are subscribed.
 *
 * The version of the OpenAPI document: 2018-06-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUser_ListByService_200_response_value_inner_properties_groups_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUser_ListByService_200_response_value_inner_properties_groups_inner::OAIUser_ListByService_200_response_value_inner_properties_groups_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUser_ListByService_200_response_value_inner_properties_groups_inner::OAIUser_ListByService_200_response_value_inner_properties_groups_inner() {
    this->initializeModel();
}

OAIUser_ListByService_200_response_value_inner_properties_groups_inner::~OAIUser_ListByService_200_response_value_inner_properties_groups_inner() {}

void OAIUser_ListByService_200_response_value_inner_properties_groups_inner::initializeModel() {

    m_built_in_isSet = false;
    m_built_in_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_external_id_isSet = false;
    m_external_id_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAIUser_ListByService_200_response_value_inner_properties_groups_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUser_ListByService_200_response_value_inner_properties_groups_inner::fromJsonObject(QJsonObject json) {

    m_built_in_isValid = ::OpenAPI::fromJsonValue(m_built_in, json[QString("builtIn")]);
    m_built_in_isSet = !json[QString("builtIn")].isNull() && m_built_in_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_external_id_isValid = ::OpenAPI::fromJsonValue(m_external_id, json[QString("externalId")]);
    m_external_id_isSet = !json[QString("externalId")].isNull() && m_external_id_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAIUser_ListByService_200_response_value_inner_properties_groups_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUser_ListByService_200_response_value_inner_properties_groups_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_built_in_isSet) {
        obj.insert(QString("builtIn"), ::OpenAPI::toJsonValue(m_built_in));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_external_id_isSet) {
        obj.insert(QString("externalId"), ::OpenAPI::toJsonValue(m_external_id));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

bool OAIUser_ListByService_200_response_value_inner_properties_groups_inner::isBuiltIn() const {
    return m_built_in;
}
void OAIUser_ListByService_200_response_value_inner_properties_groups_inner::setBuiltIn(const bool &built_in) {
    m_built_in = built_in;
    m_built_in_isSet = true;
}

bool OAIUser_ListByService_200_response_value_inner_properties_groups_inner::is_built_in_Set() const{
    return m_built_in_isSet;
}

bool OAIUser_ListByService_200_response_value_inner_properties_groups_inner::is_built_in_Valid() const{
    return m_built_in_isValid;
}

QString OAIUser_ListByService_200_response_value_inner_properties_groups_inner::getDescription() const {
    return m_description;
}
void OAIUser_ListByService_200_response_value_inner_properties_groups_inner::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIUser_ListByService_200_response_value_inner_properties_groups_inner::is_description_Set() const{
    return m_description_isSet;
}

bool OAIUser_ListByService_200_response_value_inner_properties_groups_inner::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIUser_ListByService_200_response_value_inner_properties_groups_inner::getDisplayName() const {
    return m_display_name;
}
void OAIUser_ListByService_200_response_value_inner_properties_groups_inner::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIUser_ListByService_200_response_value_inner_properties_groups_inner::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIUser_ListByService_200_response_value_inner_properties_groups_inner::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QString OAIUser_ListByService_200_response_value_inner_properties_groups_inner::getExternalId() const {
    return m_external_id;
}
void OAIUser_ListByService_200_response_value_inner_properties_groups_inner::setExternalId(const QString &external_id) {
    m_external_id = external_id;
    m_external_id_isSet = true;
}

bool OAIUser_ListByService_200_response_value_inner_properties_groups_inner::is_external_id_Set() const{
    return m_external_id_isSet;
}

bool OAIUser_ListByService_200_response_value_inner_properties_groups_inner::is_external_id_Valid() const{
    return m_external_id_isValid;
}

QString OAIUser_ListByService_200_response_value_inner_properties_groups_inner::getType() const {
    return m_type;
}
void OAIUser_ListByService_200_response_value_inner_properties_groups_inner::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIUser_ListByService_200_response_value_inner_properties_groups_inner::is_type_Set() const{
    return m_type_isSet;
}

bool OAIUser_ListByService_200_response_value_inner_properties_groups_inner::is_type_Valid() const{
    return m_type_isValid;
}

bool OAIUser_ListByService_200_response_value_inner_properties_groups_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_built_in_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_external_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUser_ListByService_200_response_value_inner_properties_groups_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_display_name_isValid && true;
}

} // namespace OpenAPI
