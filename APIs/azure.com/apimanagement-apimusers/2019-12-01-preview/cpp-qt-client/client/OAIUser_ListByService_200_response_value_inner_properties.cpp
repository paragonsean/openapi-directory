/**
 * ApiManagementClient
 * Use these REST APIs for performing operations on User entity in Azure API Management deployment. The User entity in API Management represents the developers that call the APIs of the products to which they are subscribed.
 *
 * The version of the OpenAPI document: 2019-12-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUser_ListByService_200_response_value_inner_properties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUser_ListByService_200_response_value_inner_properties::OAIUser_ListByService_200_response_value_inner_properties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUser_ListByService_200_response_value_inner_properties::OAIUser_ListByService_200_response_value_inner_properties() {
    this->initializeModel();
}

OAIUser_ListByService_200_response_value_inner_properties::~OAIUser_ListByService_200_response_value_inner_properties() {}

void OAIUser_ListByService_200_response_value_inner_properties::initializeModel() {

    m_email_isSet = false;
    m_email_isValid = false;

    m_first_name_isSet = false;
    m_first_name_isValid = false;

    m_groups_isSet = false;
    m_groups_isValid = false;

    m_last_name_isSet = false;
    m_last_name_isValid = false;

    m_registration_date_isSet = false;
    m_registration_date_isValid = false;
}

void OAIUser_ListByService_200_response_value_inner_properties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUser_ListByService_200_response_value_inner_properties::fromJsonObject(QJsonObject json) {

    m_email_isValid = ::OpenAPI::fromJsonValue(m_email, json[QString("email")]);
    m_email_isSet = !json[QString("email")].isNull() && m_email_isValid;

    m_first_name_isValid = ::OpenAPI::fromJsonValue(m_first_name, json[QString("firstName")]);
    m_first_name_isSet = !json[QString("firstName")].isNull() && m_first_name_isValid;

    m_groups_isValid = ::OpenAPI::fromJsonValue(m_groups, json[QString("groups")]);
    m_groups_isSet = !json[QString("groups")].isNull() && m_groups_isValid;

    m_last_name_isValid = ::OpenAPI::fromJsonValue(m_last_name, json[QString("lastName")]);
    m_last_name_isSet = !json[QString("lastName")].isNull() && m_last_name_isValid;

    m_registration_date_isValid = ::OpenAPI::fromJsonValue(m_registration_date, json[QString("registrationDate")]);
    m_registration_date_isSet = !json[QString("registrationDate")].isNull() && m_registration_date_isValid;
}

QString OAIUser_ListByService_200_response_value_inner_properties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUser_ListByService_200_response_value_inner_properties::asJsonObject() const {
    QJsonObject obj;
    if (m_email_isSet) {
        obj.insert(QString("email"), ::OpenAPI::toJsonValue(m_email));
    }
    if (m_first_name_isSet) {
        obj.insert(QString("firstName"), ::OpenAPI::toJsonValue(m_first_name));
    }
    if (m_groups.size() > 0) {
        obj.insert(QString("groups"), ::OpenAPI::toJsonValue(m_groups));
    }
    if (m_last_name_isSet) {
        obj.insert(QString("lastName"), ::OpenAPI::toJsonValue(m_last_name));
    }
    if (m_registration_date_isSet) {
        obj.insert(QString("registrationDate"), ::OpenAPI::toJsonValue(m_registration_date));
    }
    return obj;
}

QString OAIUser_ListByService_200_response_value_inner_properties::getEmail() const {
    return m_email;
}
void OAIUser_ListByService_200_response_value_inner_properties::setEmail(const QString &email) {
    m_email = email;
    m_email_isSet = true;
}

bool OAIUser_ListByService_200_response_value_inner_properties::is_email_Set() const{
    return m_email_isSet;
}

bool OAIUser_ListByService_200_response_value_inner_properties::is_email_Valid() const{
    return m_email_isValid;
}

QString OAIUser_ListByService_200_response_value_inner_properties::getFirstName() const {
    return m_first_name;
}
void OAIUser_ListByService_200_response_value_inner_properties::setFirstName(const QString &first_name) {
    m_first_name = first_name;
    m_first_name_isSet = true;
}

bool OAIUser_ListByService_200_response_value_inner_properties::is_first_name_Set() const{
    return m_first_name_isSet;
}

bool OAIUser_ListByService_200_response_value_inner_properties::is_first_name_Valid() const{
    return m_first_name_isValid;
}

QList<OAIUser_ListByService_200_response_value_inner_properties_groups_inner> OAIUser_ListByService_200_response_value_inner_properties::getGroups() const {
    return m_groups;
}
void OAIUser_ListByService_200_response_value_inner_properties::setGroups(const QList<OAIUser_ListByService_200_response_value_inner_properties_groups_inner> &groups) {
    m_groups = groups;
    m_groups_isSet = true;
}

bool OAIUser_ListByService_200_response_value_inner_properties::is_groups_Set() const{
    return m_groups_isSet;
}

bool OAIUser_ListByService_200_response_value_inner_properties::is_groups_Valid() const{
    return m_groups_isValid;
}

QString OAIUser_ListByService_200_response_value_inner_properties::getLastName() const {
    return m_last_name;
}
void OAIUser_ListByService_200_response_value_inner_properties::setLastName(const QString &last_name) {
    m_last_name = last_name;
    m_last_name_isSet = true;
}

bool OAIUser_ListByService_200_response_value_inner_properties::is_last_name_Set() const{
    return m_last_name_isSet;
}

bool OAIUser_ListByService_200_response_value_inner_properties::is_last_name_Valid() const{
    return m_last_name_isValid;
}

QDateTime OAIUser_ListByService_200_response_value_inner_properties::getRegistrationDate() const {
    return m_registration_date;
}
void OAIUser_ListByService_200_response_value_inner_properties::setRegistrationDate(const QDateTime &registration_date) {
    m_registration_date = registration_date;
    m_registration_date_isSet = true;
}

bool OAIUser_ListByService_200_response_value_inner_properties::is_registration_date_Set() const{
    return m_registration_date_isSet;
}

bool OAIUser_ListByService_200_response_value_inner_properties::is_registration_date_Valid() const{
    return m_registration_date_isValid;
}

bool OAIUser_ListByService_200_response_value_inner_properties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_first_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_groups.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_registration_date_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUser_ListByService_200_response_value_inner_properties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
