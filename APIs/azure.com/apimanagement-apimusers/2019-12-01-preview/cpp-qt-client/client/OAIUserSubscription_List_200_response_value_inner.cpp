/**
 * ApiManagementClient
 * Use these REST APIs for performing operations on User entity in Azure API Management deployment. The User entity in API Management represents the developers that call the APIs of the products to which they are subscribed.
 *
 * The version of the OpenAPI document: 2019-12-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUserSubscription_List_200_response_value_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUserSubscription_List_200_response_value_inner::OAIUserSubscription_List_200_response_value_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUserSubscription_List_200_response_value_inner::OAIUserSubscription_List_200_response_value_inner() {
    this->initializeModel();
}

OAIUserSubscription_List_200_response_value_inner::~OAIUserSubscription_List_200_response_value_inner() {}

void OAIUserSubscription_List_200_response_value_inner::initializeModel() {

    m_properties_isSet = false;
    m_properties_isValid = false;
}

void OAIUserSubscription_List_200_response_value_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUserSubscription_List_200_response_value_inner::fromJsonObject(QJsonObject json) {

    m_properties_isValid = ::OpenAPI::fromJsonValue(m_properties, json[QString("properties")]);
    m_properties_isSet = !json[QString("properties")].isNull() && m_properties_isValid;
}

QString OAIUserSubscription_List_200_response_value_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUserSubscription_List_200_response_value_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_properties.isSet()) {
        obj.insert(QString("properties"), ::OpenAPI::toJsonValue(m_properties));
    }
    return obj;
}

OAIUserSubscription_List_200_response_value_inner_properties OAIUserSubscription_List_200_response_value_inner::getProperties() const {
    return m_properties;
}
void OAIUserSubscription_List_200_response_value_inner::setProperties(const OAIUserSubscription_List_200_response_value_inner_properties &properties) {
    m_properties = properties;
    m_properties_isSet = true;
}

bool OAIUserSubscription_List_200_response_value_inner::is_properties_Set() const{
    return m_properties_isSet;
}

bool OAIUserSubscription_List_200_response_value_inner::is_properties_Valid() const{
    return m_properties_isValid;
}

bool OAIUserSubscription_List_200_response_value_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_properties.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUserSubscription_List_200_response_value_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
