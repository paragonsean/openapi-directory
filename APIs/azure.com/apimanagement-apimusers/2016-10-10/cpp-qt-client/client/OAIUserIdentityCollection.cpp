/**
 * ApiManagementClient
 * Use these REST APIs for performing operations on User entity in Azure API Management deployment. The User entity in API Management represents the developers that call the APIs of the products to which they are subscribed.
 *
 * The version of the OpenAPI document: 2016-10-10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUserIdentityCollection.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUserIdentityCollection::OAIUserIdentityCollection(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUserIdentityCollection::OAIUserIdentityCollection() {
    this->initializeModel();
}

OAIUserIdentityCollection::~OAIUserIdentityCollection() {}

void OAIUserIdentityCollection::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
}

void OAIUserIdentityCollection::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUserIdentityCollection::fromJsonObject(QJsonObject json) {

    m_value_isValid = ::OpenAPI::fromJsonValue(m_value, json[QString("value")]);
    m_value_isSet = !json[QString("value")].isNull() && m_value_isValid;
}

QString OAIUserIdentityCollection::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUserIdentityCollection::asJsonObject() const {
    QJsonObject obj;
    if (m_value.size() > 0) {
        obj.insert(QString("value"), ::OpenAPI::toJsonValue(m_value));
    }
    return obj;
}

QList<OAIUserIdentityContract> OAIUserIdentityCollection::getValue() const {
    return m_value;
}
void OAIUserIdentityCollection::setValue(const QList<OAIUserIdentityContract> &value) {
    m_value = value;
    m_value_isSet = true;
}

bool OAIUserIdentityCollection::is_value_Set() const{
    return m_value_isSet;
}

bool OAIUserIdentityCollection::is_value_Valid() const{
    return m_value_isValid;
}

bool OAIUserIdentityCollection::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_value.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUserIdentityCollection::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
