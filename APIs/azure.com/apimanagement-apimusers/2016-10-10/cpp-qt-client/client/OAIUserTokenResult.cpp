/**
 * ApiManagementClient
 * Use these REST APIs for performing operations on User entity in Azure API Management deployment. The User entity in API Management represents the developers that call the APIs of the products to which they are subscribed.
 *
 * The version of the OpenAPI document: 2016-10-10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUserTokenResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUserTokenResult::OAIUserTokenResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUserTokenResult::OAIUserTokenResult() {
    this->initializeModel();
}

OAIUserTokenResult::~OAIUserTokenResult() {}

void OAIUserTokenResult::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
}

void OAIUserTokenResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUserTokenResult::fromJsonObject(QJsonObject json) {

    m_value_isValid = ::OpenAPI::fromJsonValue(m_value, json[QString("value")]);
    m_value_isSet = !json[QString("value")].isNull() && m_value_isValid;
}

QString OAIUserTokenResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUserTokenResult::asJsonObject() const {
    QJsonObject obj;
    if (m_value_isSet) {
        obj.insert(QString("value"), ::OpenAPI::toJsonValue(m_value));
    }
    return obj;
}

QString OAIUserTokenResult::getValue() const {
    return m_value;
}
void OAIUserTokenResult::setValue(const QString &value) {
    m_value = value;
    m_value_isSet = true;
}

bool OAIUserTokenResult::is_value_Set() const{
    return m_value_isSet;
}

bool OAIUserTokenResult::is_value_Valid() const{
    return m_value_isValid;
}

bool OAIUserTokenResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_value_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUserTokenResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
