/**
 * ApiManagementClient
 * Use these REST APIs for performing operations on User entity in Azure API Management deployment. The User entity in API Management represents the developers that call the APIs of the products to which they are subscribed.
 *
 * The version of the OpenAPI document: 2016-10-10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUserSubscriptions_ListByUsers_200_response.h
 *
 * Paged Subscriptions list representation.
 */

#ifndef OAIUserSubscriptions_ListByUsers_200_response_H
#define OAIUserSubscriptions_ListByUsers_200_response_H

#include <QJsonObject>

#include "OAIUserSubscriptions_ListByUsers_200_response_value_inner.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUserSubscriptions_ListByUsers_200_response_value_inner;

class OAIUserSubscriptions_ListByUsers_200_response : public OAIObject {
public:
    OAIUserSubscriptions_ListByUsers_200_response();
    OAIUserSubscriptions_ListByUsers_200_response(QString json);
    ~OAIUserSubscriptions_ListByUsers_200_response() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint64 getCount() const;
    void setCount(const qint64 &count);
    bool is_count_Set() const;
    bool is_count_Valid() const;

    QString getNextLink() const;
    void setNextLink(const QString &next_link);
    bool is_next_link_Set() const;
    bool is_next_link_Valid() const;

    QList<OAIUserSubscriptions_ListByUsers_200_response_value_inner> getValue() const;
    void setValue(const QList<OAIUserSubscriptions_ListByUsers_200_response_value_inner> &value);
    bool is_value_Set() const;
    bool is_value_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint64 m_count;
    bool m_count_isSet;
    bool m_count_isValid;

    QString m_next_link;
    bool m_next_link_isSet;
    bool m_next_link_isValid;

    QList<OAIUserSubscriptions_ListByUsers_200_response_value_inner> m_value;
    bool m_value_isSet;
    bool m_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUserSubscriptions_ListByUsers_200_response)

#endif // OAIUserSubscriptions_ListByUsers_200_response_H
