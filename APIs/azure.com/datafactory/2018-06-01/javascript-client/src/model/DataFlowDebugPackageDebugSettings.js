/**
 * DataFactoryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DataFlowSourceSetting from './DataFlowSourceSetting';

/**
 * The DataFlowDebugPackageDebugSettings model module.
 * @module model/DataFlowDebugPackageDebugSettings
 * @version 2018-06-01
 */
class DataFlowDebugPackageDebugSettings {
    /**
     * Constructs a new <code>DataFlowDebugPackageDebugSettings</code>.
     * Data flow debug settings.
     * @alias module:model/DataFlowDebugPackageDebugSettings
     */
    constructor() { 
        
        DataFlowDebugPackageDebugSettings.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DataFlowDebugPackageDebugSettings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DataFlowDebugPackageDebugSettings} obj Optional instance to populate.
     * @return {module:model/DataFlowDebugPackageDebugSettings} The populated <code>DataFlowDebugPackageDebugSettings</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DataFlowDebugPackageDebugSettings();

            if (data.hasOwnProperty('datasetParameters')) {
                obj['datasetParameters'] = ApiClient.convertToType(data['datasetParameters'], Object);
            }
            if (data.hasOwnProperty('parameters')) {
                obj['parameters'] = ApiClient.convertToType(data['parameters'], {'String': Object});
            }
            if (data.hasOwnProperty('sourceSettings')) {
                obj['sourceSettings'] = ApiClient.convertToType(data['sourceSettings'], [DataFlowSourceSetting]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DataFlowDebugPackageDebugSettings</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DataFlowDebugPackageDebugSettings</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['sourceSettings'])) {
            throw new Error("Expected the field `sourceSettings` to be an array in the JSON data but got " + data['sourceSettings']);
        }

        return true;
    }


}



/**
 * Parameters for dataset.
 * @member {Object} datasetParameters
 */
DataFlowDebugPackageDebugSettings.prototype['datasetParameters'] = undefined;

/**
 * An object mapping parameter names to argument values.
 * @member {Object.<String, Object>} parameters
 */
DataFlowDebugPackageDebugSettings.prototype['parameters'] = undefined;

/**
 * Source setting for data flow debug.
 * @member {Array.<module:model/DataFlowSourceSetting>} sourceSettings
 */
DataFlowDebugPackageDebugSettings.prototype['sourceSettings'] = undefined;






export default DataFlowDebugPackageDebugSettings;

