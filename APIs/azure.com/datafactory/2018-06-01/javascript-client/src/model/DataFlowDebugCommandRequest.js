/**
 * DataFactoryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DataFlowDebugCommandPayload from './DataFlowDebugCommandPayload';

/**
 * The DataFlowDebugCommandRequest model module.
 * @module model/DataFlowDebugCommandRequest
 * @version 2018-06-01
 */
class DataFlowDebugCommandRequest {
    /**
     * Constructs a new <code>DataFlowDebugCommandRequest</code>.
     * Request body structure for data flow debug command.
     * @alias module:model/DataFlowDebugCommandRequest
     */
    constructor() { 
        
        DataFlowDebugCommandRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DataFlowDebugCommandRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DataFlowDebugCommandRequest} obj Optional instance to populate.
     * @return {module:model/DataFlowDebugCommandRequest} The populated <code>DataFlowDebugCommandRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DataFlowDebugCommandRequest();

            if (data.hasOwnProperty('command')) {
                obj['command'] = ApiClient.convertToType(data['command'], 'String');
            }
            if (data.hasOwnProperty('commandPayload')) {
                obj['commandPayload'] = DataFlowDebugCommandPayload.constructFromObject(data['commandPayload']);
            }
            if (data.hasOwnProperty('sessionId')) {
                obj['sessionId'] = ApiClient.convertToType(data['sessionId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DataFlowDebugCommandRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DataFlowDebugCommandRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['command'] && !(typeof data['command'] === 'string' || data['command'] instanceof String)) {
            throw new Error("Expected the field `command` to be a primitive type in the JSON string but got " + data['command']);
        }
        // validate the optional field `commandPayload`
        if (data['commandPayload']) { // data not null
          DataFlowDebugCommandPayload.validateJSON(data['commandPayload']);
        }
        // ensure the json data is a string
        if (data['sessionId'] && !(typeof data['sessionId'] === 'string' || data['sessionId'] instanceof String)) {
            throw new Error("Expected the field `sessionId` to be a primitive type in the JSON string but got " + data['sessionId']);
        }

        return true;
    }


}



/**
 * The command type.
 * @member {module:model/DataFlowDebugCommandRequest.CommandEnum} command
 */
DataFlowDebugCommandRequest.prototype['command'] = undefined;

/**
 * @member {module:model/DataFlowDebugCommandPayload} commandPayload
 */
DataFlowDebugCommandRequest.prototype['commandPayload'] = undefined;

/**
 * The ID of data flow debug session.
 * @member {String} sessionId
 */
DataFlowDebugCommandRequest.prototype['sessionId'] = undefined;





/**
 * Allowed values for the <code>command</code> property.
 * @enum {String}
 * @readonly
 */
DataFlowDebugCommandRequest['CommandEnum'] = {

    /**
     * value: "executePreviewQuery"
     * @const
     */
    "executePreviewQuery": "executePreviewQuery",

    /**
     * value: "executeStatisticsQuery"
     * @const
     */
    "executeStatisticsQuery": "executeStatisticsQuery",

    /**
     * value: "executeExpressionQuery"
     * @const
     */
    "executeExpressionQuery": "executeExpressionQuery"
};



export default DataFlowDebugCommandRequest;

