/**
 * DataFactoryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import IntegrationRuntimeDebugResource from './IntegrationRuntimeDebugResource';

/**
 * The CreateDataFlowDebugSessionRequest model module.
 * @module model/CreateDataFlowDebugSessionRequest
 * @version 2018-06-01
 */
class CreateDataFlowDebugSessionRequest {
    /**
     * Constructs a new <code>CreateDataFlowDebugSessionRequest</code>.
     * Request body structure for creating data flow debug session.
     * @alias module:model/CreateDataFlowDebugSessionRequest
     */
    constructor() { 
        
        CreateDataFlowDebugSessionRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CreateDataFlowDebugSessionRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateDataFlowDebugSessionRequest} obj Optional instance to populate.
     * @return {module:model/CreateDataFlowDebugSessionRequest} The populated <code>CreateDataFlowDebugSessionRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateDataFlowDebugSessionRequest();

            if (data.hasOwnProperty('computeType')) {
                obj['computeType'] = ApiClient.convertToType(data['computeType'], 'String');
            }
            if (data.hasOwnProperty('coreCount')) {
                obj['coreCount'] = ApiClient.convertToType(data['coreCount'], 'Number');
            }
            if (data.hasOwnProperty('integrationRuntime')) {
                obj['integrationRuntime'] = IntegrationRuntimeDebugResource.constructFromObject(data['integrationRuntime']);
            }
            if (data.hasOwnProperty('timeToLive')) {
                obj['timeToLive'] = ApiClient.convertToType(data['timeToLive'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateDataFlowDebugSessionRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateDataFlowDebugSessionRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['computeType'] && !(typeof data['computeType'] === 'string' || data['computeType'] instanceof String)) {
            throw new Error("Expected the field `computeType` to be a primitive type in the JSON string but got " + data['computeType']);
        }
        // validate the optional field `integrationRuntime`
        if (data['integrationRuntime']) { // data not null
          IntegrationRuntimeDebugResource.validateJSON(data['integrationRuntime']);
        }

        return true;
    }


}



/**
 * Compute type of the cluster. The value will be overwritten by the same setting in integration runtime if provided.
 * @member {String} computeType
 */
CreateDataFlowDebugSessionRequest.prototype['computeType'] = undefined;

/**
 * Core count of the cluster. The value will be overwritten by the same setting in integration runtime if provided.
 * @member {Number} coreCount
 */
CreateDataFlowDebugSessionRequest.prototype['coreCount'] = undefined;

/**
 * @member {module:model/IntegrationRuntimeDebugResource} integrationRuntime
 */
CreateDataFlowDebugSessionRequest.prototype['integrationRuntime'] = undefined;

/**
 * Time to live setting of the cluster in minutes.
 * @member {Number} timeToLive
 */
CreateDataFlowDebugSessionRequest.prototype['timeToLive'] = undefined;






export default CreateDataFlowDebugSessionRequest;

