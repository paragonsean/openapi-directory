/**
 * DataFactoryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CloudError from '../model/CloudError';
import GetSsisObjectMetadataRequest from '../model/GetSsisObjectMetadataRequest';
import IntegrationRuntimeObjectMetadataGet200Response from '../model/IntegrationRuntimeObjectMetadataGet200Response';
import SsisObjectMetadataStatusResponse from '../model/SsisObjectMetadataStatusResponse';

/**
* IntegrationRuntimeObjectMetadata service.
* @module api/IntegrationRuntimeObjectMetadataApi
* @version 2018-06-01
*/
export default class IntegrationRuntimeObjectMetadataApi {

    /**
    * Constructs a new IntegrationRuntimeObjectMetadataApi. 
    * @alias module:api/IntegrationRuntimeObjectMetadataApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the integrationRuntimeObjectMetadataGet operation.
     * @callback module:api/IntegrationRuntimeObjectMetadataApi~integrationRuntimeObjectMetadataGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/IntegrationRuntimeObjectMetadataGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a SSIS integration runtime object metadata by specified path. The return is pageable metadata list.
     * @param {String} subscriptionId The subscription identifier.
     * @param {String} resourceGroupName The resource group name.
     * @param {String} factoryName The factory name.
     * @param {String} integrationRuntimeName The integration runtime name.
     * @param {String} apiVersion The API version.
     * @param {Object} opts Optional parameters
     * @param {module:model/GetSsisObjectMetadataRequest} [getMetadataRequest] The parameters for getting a SSIS object metadata.
     * @param {module:api/IntegrationRuntimeObjectMetadataApi~integrationRuntimeObjectMetadataGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/IntegrationRuntimeObjectMetadataGet200Response}
     */
    integrationRuntimeObjectMetadataGet(subscriptionId, resourceGroupName, factoryName, integrationRuntimeName, apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = opts['getMetadataRequest'];
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling integrationRuntimeObjectMetadataGet");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling integrationRuntimeObjectMetadataGet");
      }
      // verify the required parameter 'factoryName' is set
      if (factoryName === undefined || factoryName === null) {
        throw new Error("Missing the required parameter 'factoryName' when calling integrationRuntimeObjectMetadataGet");
      }
      // verify the required parameter 'integrationRuntimeName' is set
      if (integrationRuntimeName === undefined || integrationRuntimeName === null) {
        throw new Error("Missing the required parameter 'integrationRuntimeName' when calling integrationRuntimeObjectMetadataGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling integrationRuntimeObjectMetadataGet");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'factoryName': factoryName,
        'integrationRuntimeName': integrationRuntimeName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = IntegrationRuntimeObjectMetadataGet200Response;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/getObjectMetadata', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the integrationRuntimeObjectMetadataRefresh operation.
     * @callback module:api/IntegrationRuntimeObjectMetadataApi~integrationRuntimeObjectMetadataRefreshCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SsisObjectMetadataStatusResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Refresh a SSIS integration runtime object metadata.
     * @param {String} subscriptionId The subscription identifier.
     * @param {String} resourceGroupName The resource group name.
     * @param {String} factoryName The factory name.
     * @param {String} integrationRuntimeName The integration runtime name.
     * @param {String} apiVersion The API version.
     * @param {module:api/IntegrationRuntimeObjectMetadataApi~integrationRuntimeObjectMetadataRefreshCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SsisObjectMetadataStatusResponse}
     */
    integrationRuntimeObjectMetadataRefresh(subscriptionId, resourceGroupName, factoryName, integrationRuntimeName, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling integrationRuntimeObjectMetadataRefresh");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling integrationRuntimeObjectMetadataRefresh");
      }
      // verify the required parameter 'factoryName' is set
      if (factoryName === undefined || factoryName === null) {
        throw new Error("Missing the required parameter 'factoryName' when calling integrationRuntimeObjectMetadataRefresh");
      }
      // verify the required parameter 'integrationRuntimeName' is set
      if (integrationRuntimeName === undefined || integrationRuntimeName === null) {
        throw new Error("Missing the required parameter 'integrationRuntimeName' when calling integrationRuntimeObjectMetadataRefresh");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling integrationRuntimeObjectMetadataRefresh");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'factoryName': factoryName,
        'integrationRuntimeName': integrationRuntimeName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = SsisObjectMetadataStatusResponse;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/refreshObjectMetadata', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
