/**
 * DataFactoryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CloudError from '../model/CloudError';
import ExposureControlRequest from '../model/ExposureControlRequest';
import ExposureControlResponse from '../model/ExposureControlResponse';

/**
* ExposureControl service.
* @module api/ExposureControlApi
* @version 2018-06-01
*/
export default class ExposureControlApi {

    /**
    * Constructs a new ExposureControlApi. 
    * @alias module:api/ExposureControlApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the exposureControlGetFeatureValue operation.
     * @callback module:api/ExposureControlApi~exposureControlGetFeatureValueCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ExposureControlResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get exposure control feature for specific location.
     * @param {String} subscriptionId The subscription identifier.
     * @param {String} locationId The location identifier.
     * @param {String} apiVersion The API version.
     * @param {module:model/ExposureControlRequest} exposureControlRequest The exposure control request.
     * @param {module:api/ExposureControlApi~exposureControlGetFeatureValueCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ExposureControlResponse}
     */
    exposureControlGetFeatureValue(subscriptionId, locationId, apiVersion, exposureControlRequest, callback) {
      let postBody = exposureControlRequest;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling exposureControlGetFeatureValue");
      }
      // verify the required parameter 'locationId' is set
      if (locationId === undefined || locationId === null) {
        throw new Error("Missing the required parameter 'locationId' when calling exposureControlGetFeatureValue");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling exposureControlGetFeatureValue");
      }
      // verify the required parameter 'exposureControlRequest' is set
      if (exposureControlRequest === undefined || exposureControlRequest === null) {
        throw new Error("Missing the required parameter 'exposureControlRequest' when calling exposureControlGetFeatureValue");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'locationId': locationId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ExposureControlResponse;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.DataFactory/locations/{locationId}/getFeatureValue', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the exposureControlGetFeatureValueByFactory operation.
     * @callback module:api/ExposureControlApi~exposureControlGetFeatureValueByFactoryCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ExposureControlResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get exposure control feature for specific factory.
     * @param {String} subscriptionId The subscription identifier.
     * @param {String} resourceGroupName The resource group name.
     * @param {String} factoryName The factory name.
     * @param {String} apiVersion The API version.
     * @param {module:model/ExposureControlRequest} exposureControlRequest The exposure control request.
     * @param {module:api/ExposureControlApi~exposureControlGetFeatureValueByFactoryCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ExposureControlResponse}
     */
    exposureControlGetFeatureValueByFactory(subscriptionId, resourceGroupName, factoryName, apiVersion, exposureControlRequest, callback) {
      let postBody = exposureControlRequest;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling exposureControlGetFeatureValueByFactory");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling exposureControlGetFeatureValueByFactory");
      }
      // verify the required parameter 'factoryName' is set
      if (factoryName === undefined || factoryName === null) {
        throw new Error("Missing the required parameter 'factoryName' when calling exposureControlGetFeatureValueByFactory");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling exposureControlGetFeatureValueByFactory");
      }
      // verify the required parameter 'exposureControlRequest' is set
      if (exposureControlRequest === undefined || exposureControlRequest === null) {
        throw new Error("Missing the required parameter 'exposureControlRequest' when calling exposureControlGetFeatureValueByFactory");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'factoryName': factoryName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ExposureControlResponse;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/getFeatureValue', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
