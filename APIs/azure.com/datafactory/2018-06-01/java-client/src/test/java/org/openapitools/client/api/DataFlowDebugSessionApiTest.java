/*
 * DataFactoryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AddDataFlowToDebugSessionResponse;
import org.openapitools.client.model.CloudError;
import org.openapitools.client.model.CreateDataFlowDebugSessionRequest;
import org.openapitools.client.model.CreateDataFlowDebugSessionResponse;
import org.openapitools.client.model.DataFlowDebugCommandRequest;
import org.openapitools.client.model.DataFlowDebugCommandResponse;
import org.openapitools.client.model.DataFlowDebugPackage;
import org.openapitools.client.model.DeleteDataFlowDebugSessionRequest;
import org.openapitools.client.model.QueryDataFlowDebugSessionsResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DataFlowDebugSessionApi
 */
@Disabled
public class DataFlowDebugSessionApiTest {

    private final DataFlowDebugSessionApi api = new DataFlowDebugSessionApi();

    /**
     * Add a data flow into debug session.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dataFlowDebugSessionAddDataFlowTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String factoryName = null;
        String apiVersion = null;
        DataFlowDebugPackage request = null;
        AddDataFlowToDebugSessionResponse response = api.dataFlowDebugSessionAddDataFlow(subscriptionId, resourceGroupName, factoryName, apiVersion, request);
        // TODO: test validations
    }

    /**
     * Creates a data flow debug session.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dataFlowDebugSessionCreateTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String factoryName = null;
        String apiVersion = null;
        CreateDataFlowDebugSessionRequest request = null;
        CreateDataFlowDebugSessionResponse response = api.dataFlowDebugSessionCreate(subscriptionId, resourceGroupName, factoryName, apiVersion, request);
        // TODO: test validations
    }

    /**
     * Deletes a data flow debug session.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dataFlowDebugSessionDeleteTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String factoryName = null;
        String apiVersion = null;
        DeleteDataFlowDebugSessionRequest request = null;
        api.dataFlowDebugSessionDelete(subscriptionId, resourceGroupName, factoryName, apiVersion, request);
        // TODO: test validations
    }

    /**
     * Execute a data flow debug command.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dataFlowDebugSessionExecuteCommandTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String factoryName = null;
        String apiVersion = null;
        DataFlowDebugCommandRequest request = null;
        DataFlowDebugCommandResponse response = api.dataFlowDebugSessionExecuteCommand(subscriptionId, resourceGroupName, factoryName, apiVersion, request);
        // TODO: test validations
    }

    /**
     * Query all active data flow debug sessions.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dataFlowDebugSessionQueryByFactoryTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String factoryName = null;
        String apiVersion = null;
        QueryDataFlowDebugSessionsResponse response = api.dataFlowDebugSessionQueryByFactory(subscriptionId, resourceGroupName, factoryName, apiVersion);
        // TODO: test validations
    }

}
