# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.factory_repo_configuration import FactoryRepoConfiguration
from openapi_server import util


class FactoryProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, create_time: datetime=None, provisioning_state: str=None, repo_configuration: FactoryRepoConfiguration=None, version: str=None):
        """FactoryProperties - a model defined in OpenAPI

        :param create_time: The create_time of this FactoryProperties.
        :param provisioning_state: The provisioning_state of this FactoryProperties.
        :param repo_configuration: The repo_configuration of this FactoryProperties.
        :param version: The version of this FactoryProperties.
        """
        self.openapi_types = {
            'create_time': datetime,
            'provisioning_state': str,
            'repo_configuration': FactoryRepoConfiguration,
            'version': str
        }

        self.attribute_map = {
            'create_time': 'createTime',
            'provisioning_state': 'provisioningState',
            'repo_configuration': 'repoConfiguration',
            'version': 'version'
        }

        self._create_time = create_time
        self._provisioning_state = provisioning_state
        self._repo_configuration = repo_configuration
        self._version = version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FactoryProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FactoryProperties of this FactoryProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def create_time(self):
        """Gets the create_time of this FactoryProperties.

        Time the factory was created in ISO8601 format.

        :return: The create_time of this FactoryProperties.
        :rtype: datetime
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this FactoryProperties.

        Time the factory was created in ISO8601 format.

        :param create_time: The create_time of this FactoryProperties.
        :type create_time: datetime
        """

        self._create_time = create_time

    @property
    def provisioning_state(self):
        """Gets the provisioning_state of this FactoryProperties.

        Factory provisioning state, example Succeeded.

        :return: The provisioning_state of this FactoryProperties.
        :rtype: str
        """
        return self._provisioning_state

    @provisioning_state.setter
    def provisioning_state(self, provisioning_state):
        """Sets the provisioning_state of this FactoryProperties.

        Factory provisioning state, example Succeeded.

        :param provisioning_state: The provisioning_state of this FactoryProperties.
        :type provisioning_state: str
        """

        self._provisioning_state = provisioning_state

    @property
    def repo_configuration(self):
        """Gets the repo_configuration of this FactoryProperties.


        :return: The repo_configuration of this FactoryProperties.
        :rtype: FactoryRepoConfiguration
        """
        return self._repo_configuration

    @repo_configuration.setter
    def repo_configuration(self, repo_configuration):
        """Sets the repo_configuration of this FactoryProperties.


        :param repo_configuration: The repo_configuration of this FactoryProperties.
        :type repo_configuration: FactoryRepoConfiguration
        """

        self._repo_configuration = repo_configuration

    @property
    def version(self):
        """Gets the version of this FactoryProperties.

        Version of the factory.

        :return: The version of this FactoryProperties.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this FactoryProperties.

        Version of the factory.

        :param version: The version of this FactoryProperties.
        :type version: str
        """

        self._version = version
