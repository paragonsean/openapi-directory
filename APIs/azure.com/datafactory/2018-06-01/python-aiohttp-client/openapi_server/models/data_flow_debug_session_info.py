# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DataFlowDebugSessionInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, compute_type: str=None, core_count: int=None, data_flow_name: str=None, integration_runtime_name: str=None, last_activity_time: str=None, node_count: int=None, session_id: str=None, start_time: str=None, time_to_live_in_minutes: int=None):
        """DataFlowDebugSessionInfo - a model defined in OpenAPI

        :param compute_type: The compute_type of this DataFlowDebugSessionInfo.
        :param core_count: The core_count of this DataFlowDebugSessionInfo.
        :param data_flow_name: The data_flow_name of this DataFlowDebugSessionInfo.
        :param integration_runtime_name: The integration_runtime_name of this DataFlowDebugSessionInfo.
        :param last_activity_time: The last_activity_time of this DataFlowDebugSessionInfo.
        :param node_count: The node_count of this DataFlowDebugSessionInfo.
        :param session_id: The session_id of this DataFlowDebugSessionInfo.
        :param start_time: The start_time of this DataFlowDebugSessionInfo.
        :param time_to_live_in_minutes: The time_to_live_in_minutes of this DataFlowDebugSessionInfo.
        """
        self.openapi_types = {
            'compute_type': str,
            'core_count': int,
            'data_flow_name': str,
            'integration_runtime_name': str,
            'last_activity_time': str,
            'node_count': int,
            'session_id': str,
            'start_time': str,
            'time_to_live_in_minutes': int
        }

        self.attribute_map = {
            'compute_type': 'computeType',
            'core_count': 'coreCount',
            'data_flow_name': 'dataFlowName',
            'integration_runtime_name': 'integrationRuntimeName',
            'last_activity_time': 'lastActivityTime',
            'node_count': 'nodeCount',
            'session_id': 'sessionId',
            'start_time': 'startTime',
            'time_to_live_in_minutes': 'timeToLiveInMinutes'
        }

        self._compute_type = compute_type
        self._core_count = core_count
        self._data_flow_name = data_flow_name
        self._integration_runtime_name = integration_runtime_name
        self._last_activity_time = last_activity_time
        self._node_count = node_count
        self._session_id = session_id
        self._start_time = start_time
        self._time_to_live_in_minutes = time_to_live_in_minutes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DataFlowDebugSessionInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DataFlowDebugSessionInfo of this DataFlowDebugSessionInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def compute_type(self):
        """Gets the compute_type of this DataFlowDebugSessionInfo.

        Compute type of the cluster.

        :return: The compute_type of this DataFlowDebugSessionInfo.
        :rtype: str
        """
        return self._compute_type

    @compute_type.setter
    def compute_type(self, compute_type):
        """Sets the compute_type of this DataFlowDebugSessionInfo.

        Compute type of the cluster.

        :param compute_type: The compute_type of this DataFlowDebugSessionInfo.
        :type compute_type: str
        """

        self._compute_type = compute_type

    @property
    def core_count(self):
        """Gets the core_count of this DataFlowDebugSessionInfo.

        Core count of the cluster.

        :return: The core_count of this DataFlowDebugSessionInfo.
        :rtype: int
        """
        return self._core_count

    @core_count.setter
    def core_count(self, core_count):
        """Sets the core_count of this DataFlowDebugSessionInfo.

        Core count of the cluster.

        :param core_count: The core_count of this DataFlowDebugSessionInfo.
        :type core_count: int
        """

        self._core_count = core_count

    @property
    def data_flow_name(self):
        """Gets the data_flow_name of this DataFlowDebugSessionInfo.

        The name of the data flow.

        :return: The data_flow_name of this DataFlowDebugSessionInfo.
        :rtype: str
        """
        return self._data_flow_name

    @data_flow_name.setter
    def data_flow_name(self, data_flow_name):
        """Sets the data_flow_name of this DataFlowDebugSessionInfo.

        The name of the data flow.

        :param data_flow_name: The data_flow_name of this DataFlowDebugSessionInfo.
        :type data_flow_name: str
        """

        self._data_flow_name = data_flow_name

    @property
    def integration_runtime_name(self):
        """Gets the integration_runtime_name of this DataFlowDebugSessionInfo.

        Attached integration runtime name of data flow debug session.

        :return: The integration_runtime_name of this DataFlowDebugSessionInfo.
        :rtype: str
        """
        return self._integration_runtime_name

    @integration_runtime_name.setter
    def integration_runtime_name(self, integration_runtime_name):
        """Sets the integration_runtime_name of this DataFlowDebugSessionInfo.

        Attached integration runtime name of data flow debug session.

        :param integration_runtime_name: The integration_runtime_name of this DataFlowDebugSessionInfo.
        :type integration_runtime_name: str
        """

        self._integration_runtime_name = integration_runtime_name

    @property
    def last_activity_time(self):
        """Gets the last_activity_time of this DataFlowDebugSessionInfo.

        Last activity time of data flow debug session.

        :return: The last_activity_time of this DataFlowDebugSessionInfo.
        :rtype: str
        """
        return self._last_activity_time

    @last_activity_time.setter
    def last_activity_time(self, last_activity_time):
        """Sets the last_activity_time of this DataFlowDebugSessionInfo.

        Last activity time of data flow debug session.

        :param last_activity_time: The last_activity_time of this DataFlowDebugSessionInfo.
        :type last_activity_time: str
        """

        self._last_activity_time = last_activity_time

    @property
    def node_count(self):
        """Gets the node_count of this DataFlowDebugSessionInfo.

        Node count of the cluster. (deprecated property)

        :return: The node_count of this DataFlowDebugSessionInfo.
        :rtype: int
        """
        return self._node_count

    @node_count.setter
    def node_count(self, node_count):
        """Sets the node_count of this DataFlowDebugSessionInfo.

        Node count of the cluster. (deprecated property)

        :param node_count: The node_count of this DataFlowDebugSessionInfo.
        :type node_count: int
        """

        self._node_count = node_count

    @property
    def session_id(self):
        """Gets the session_id of this DataFlowDebugSessionInfo.

        The ID of data flow debug session.

        :return: The session_id of this DataFlowDebugSessionInfo.
        :rtype: str
        """
        return self._session_id

    @session_id.setter
    def session_id(self, session_id):
        """Sets the session_id of this DataFlowDebugSessionInfo.

        The ID of data flow debug session.

        :param session_id: The session_id of this DataFlowDebugSessionInfo.
        :type session_id: str
        """

        self._session_id = session_id

    @property
    def start_time(self):
        """Gets the start_time of this DataFlowDebugSessionInfo.

        Start time of data flow debug session.

        :return: The start_time of this DataFlowDebugSessionInfo.
        :rtype: str
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this DataFlowDebugSessionInfo.

        Start time of data flow debug session.

        :param start_time: The start_time of this DataFlowDebugSessionInfo.
        :type start_time: str
        """

        self._start_time = start_time

    @property
    def time_to_live_in_minutes(self):
        """Gets the time_to_live_in_minutes of this DataFlowDebugSessionInfo.

        Compute type of the cluster.

        :return: The time_to_live_in_minutes of this DataFlowDebugSessionInfo.
        :rtype: int
        """
        return self._time_to_live_in_minutes

    @time_to_live_in_minutes.setter
    def time_to_live_in_minutes(self, time_to_live_in_minutes):
        """Sets the time_to_live_in_minutes of this DataFlowDebugSessionInfo.

        Compute type of the cluster.

        :param time_to_live_in_minutes: The time_to_live_in_minutes of this DataFlowDebugSessionInfo.
        :type time_to_live_in_minutes: int
        """

        self._time_to_live_in_minutes = time_to_live_in_minutes
