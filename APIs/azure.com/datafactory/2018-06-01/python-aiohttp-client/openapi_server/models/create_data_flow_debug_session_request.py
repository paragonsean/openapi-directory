# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.integration_runtime_debug_resource import IntegrationRuntimeDebugResource
from openapi_server import util


class CreateDataFlowDebugSessionRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, compute_type: str=None, core_count: int=None, integration_runtime: IntegrationRuntimeDebugResource=None, time_to_live: int=None):
        """CreateDataFlowDebugSessionRequest - a model defined in OpenAPI

        :param compute_type: The compute_type of this CreateDataFlowDebugSessionRequest.
        :param core_count: The core_count of this CreateDataFlowDebugSessionRequest.
        :param integration_runtime: The integration_runtime of this CreateDataFlowDebugSessionRequest.
        :param time_to_live: The time_to_live of this CreateDataFlowDebugSessionRequest.
        """
        self.openapi_types = {
            'compute_type': str,
            'core_count': int,
            'integration_runtime': IntegrationRuntimeDebugResource,
            'time_to_live': int
        }

        self.attribute_map = {
            'compute_type': 'computeType',
            'core_count': 'coreCount',
            'integration_runtime': 'integrationRuntime',
            'time_to_live': 'timeToLive'
        }

        self._compute_type = compute_type
        self._core_count = core_count
        self._integration_runtime = integration_runtime
        self._time_to_live = time_to_live

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateDataFlowDebugSessionRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateDataFlowDebugSessionRequest of this CreateDataFlowDebugSessionRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def compute_type(self):
        """Gets the compute_type of this CreateDataFlowDebugSessionRequest.

        Compute type of the cluster. The value will be overwritten by the same setting in integration runtime if provided.

        :return: The compute_type of this CreateDataFlowDebugSessionRequest.
        :rtype: str
        """
        return self._compute_type

    @compute_type.setter
    def compute_type(self, compute_type):
        """Sets the compute_type of this CreateDataFlowDebugSessionRequest.

        Compute type of the cluster. The value will be overwritten by the same setting in integration runtime if provided.

        :param compute_type: The compute_type of this CreateDataFlowDebugSessionRequest.
        :type compute_type: str
        """

        self._compute_type = compute_type

    @property
    def core_count(self):
        """Gets the core_count of this CreateDataFlowDebugSessionRequest.

        Core count of the cluster. The value will be overwritten by the same setting in integration runtime if provided.

        :return: The core_count of this CreateDataFlowDebugSessionRequest.
        :rtype: int
        """
        return self._core_count

    @core_count.setter
    def core_count(self, core_count):
        """Sets the core_count of this CreateDataFlowDebugSessionRequest.

        Core count of the cluster. The value will be overwritten by the same setting in integration runtime if provided.

        :param core_count: The core_count of this CreateDataFlowDebugSessionRequest.
        :type core_count: int
        """

        self._core_count = core_count

    @property
    def integration_runtime(self):
        """Gets the integration_runtime of this CreateDataFlowDebugSessionRequest.


        :return: The integration_runtime of this CreateDataFlowDebugSessionRequest.
        :rtype: IntegrationRuntimeDebugResource
        """
        return self._integration_runtime

    @integration_runtime.setter
    def integration_runtime(self, integration_runtime):
        """Sets the integration_runtime of this CreateDataFlowDebugSessionRequest.


        :param integration_runtime: The integration_runtime of this CreateDataFlowDebugSessionRequest.
        :type integration_runtime: IntegrationRuntimeDebugResource
        """

        self._integration_runtime = integration_runtime

    @property
    def time_to_live(self):
        """Gets the time_to_live of this CreateDataFlowDebugSessionRequest.

        Time to live setting of the cluster in minutes.

        :return: The time_to_live of this CreateDataFlowDebugSessionRequest.
        :rtype: int
        """
        return self._time_to_live

    @time_to_live.setter
    def time_to_live(self, time_to_live):
        """Sets the time_to_live of this CreateDataFlowDebugSessionRequest.

        Time to live setting of the cluster in minutes.

        :param time_to_live: The time_to_live of this CreateDataFlowDebugSessionRequest.
        :type time_to_live: int
        """

        self._time_to_live = time_to_live
