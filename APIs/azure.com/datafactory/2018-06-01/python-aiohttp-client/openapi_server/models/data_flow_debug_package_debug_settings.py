# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.data_flow_source_setting import DataFlowSourceSetting
from openapi_server import util


class DataFlowDebugPackageDebugSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, dataset_parameters: object=None, parameters: Dict[str, object]=None, source_settings: List[DataFlowSourceSetting]=None):
        """DataFlowDebugPackageDebugSettings - a model defined in OpenAPI

        :param dataset_parameters: The dataset_parameters of this DataFlowDebugPackageDebugSettings.
        :param parameters: The parameters of this DataFlowDebugPackageDebugSettings.
        :param source_settings: The source_settings of this DataFlowDebugPackageDebugSettings.
        """
        self.openapi_types = {
            'dataset_parameters': object,
            'parameters': Dict[str, object],
            'source_settings': List[DataFlowSourceSetting]
        }

        self.attribute_map = {
            'dataset_parameters': 'datasetParameters',
            'parameters': 'parameters',
            'source_settings': 'sourceSettings'
        }

        self._dataset_parameters = dataset_parameters
        self._parameters = parameters
        self._source_settings = source_settings

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DataFlowDebugPackageDebugSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DataFlowDebugPackage_debugSettings of this DataFlowDebugPackageDebugSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def dataset_parameters(self):
        """Gets the dataset_parameters of this DataFlowDebugPackageDebugSettings.

        Parameters for dataset.

        :return: The dataset_parameters of this DataFlowDebugPackageDebugSettings.
        :rtype: object
        """
        return self._dataset_parameters

    @dataset_parameters.setter
    def dataset_parameters(self, dataset_parameters):
        """Sets the dataset_parameters of this DataFlowDebugPackageDebugSettings.

        Parameters for dataset.

        :param dataset_parameters: The dataset_parameters of this DataFlowDebugPackageDebugSettings.
        :type dataset_parameters: object
        """

        self._dataset_parameters = dataset_parameters

    @property
    def parameters(self):
        """Gets the parameters of this DataFlowDebugPackageDebugSettings.

        An object mapping parameter names to argument values.

        :return: The parameters of this DataFlowDebugPackageDebugSettings.
        :rtype: Dict[str, object]
        """
        return self._parameters

    @parameters.setter
    def parameters(self, parameters):
        """Sets the parameters of this DataFlowDebugPackageDebugSettings.

        An object mapping parameter names to argument values.

        :param parameters: The parameters of this DataFlowDebugPackageDebugSettings.
        :type parameters: Dict[str, object]
        """

        self._parameters = parameters

    @property
    def source_settings(self):
        """Gets the source_settings of this DataFlowDebugPackageDebugSettings.

        Source setting for data flow debug.

        :return: The source_settings of this DataFlowDebugPackageDebugSettings.
        :rtype: List[DataFlowSourceSetting]
        """
        return self._source_settings

    @source_settings.setter
    def source_settings(self, source_settings):
        """Sets the source_settings of this DataFlowDebugPackageDebugSettings.

        Source setting for data flow debug.

        :param source_settings: The source_settings of this DataFlowDebugPackageDebugSettings.
        :type source_settings: List[DataFlowSourceSetting]
        """

        self._source_settings = source_settings
