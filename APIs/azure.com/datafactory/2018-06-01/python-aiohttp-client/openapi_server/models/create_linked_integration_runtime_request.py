# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateLinkedIntegrationRuntimeRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, data_factory_location: str=None, data_factory_name: str=None, name: str=None, subscription_id: str=None):
        """CreateLinkedIntegrationRuntimeRequest - a model defined in OpenAPI

        :param data_factory_location: The data_factory_location of this CreateLinkedIntegrationRuntimeRequest.
        :param data_factory_name: The data_factory_name of this CreateLinkedIntegrationRuntimeRequest.
        :param name: The name of this CreateLinkedIntegrationRuntimeRequest.
        :param subscription_id: The subscription_id of this CreateLinkedIntegrationRuntimeRequest.
        """
        self.openapi_types = {
            'data_factory_location': str,
            'data_factory_name': str,
            'name': str,
            'subscription_id': str
        }

        self.attribute_map = {
            'data_factory_location': 'dataFactoryLocation',
            'data_factory_name': 'dataFactoryName',
            'name': 'name',
            'subscription_id': 'subscriptionId'
        }

        self._data_factory_location = data_factory_location
        self._data_factory_name = data_factory_name
        self._name = name
        self._subscription_id = subscription_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateLinkedIntegrationRuntimeRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateLinkedIntegrationRuntimeRequest of this CreateLinkedIntegrationRuntimeRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def data_factory_location(self):
        """Gets the data_factory_location of this CreateLinkedIntegrationRuntimeRequest.

        The location of the data factory that the linked integration runtime belongs to.

        :return: The data_factory_location of this CreateLinkedIntegrationRuntimeRequest.
        :rtype: str
        """
        return self._data_factory_location

    @data_factory_location.setter
    def data_factory_location(self, data_factory_location):
        """Sets the data_factory_location of this CreateLinkedIntegrationRuntimeRequest.

        The location of the data factory that the linked integration runtime belongs to.

        :param data_factory_location: The data_factory_location of this CreateLinkedIntegrationRuntimeRequest.
        :type data_factory_location: str
        """

        self._data_factory_location = data_factory_location

    @property
    def data_factory_name(self):
        """Gets the data_factory_name of this CreateLinkedIntegrationRuntimeRequest.

        The name of the data factory that the linked integration runtime belongs to.

        :return: The data_factory_name of this CreateLinkedIntegrationRuntimeRequest.
        :rtype: str
        """
        return self._data_factory_name

    @data_factory_name.setter
    def data_factory_name(self, data_factory_name):
        """Sets the data_factory_name of this CreateLinkedIntegrationRuntimeRequest.

        The name of the data factory that the linked integration runtime belongs to.

        :param data_factory_name: The data_factory_name of this CreateLinkedIntegrationRuntimeRequest.
        :type data_factory_name: str
        """

        self._data_factory_name = data_factory_name

    @property
    def name(self):
        """Gets the name of this CreateLinkedIntegrationRuntimeRequest.

        The name of the linked integration runtime.

        :return: The name of this CreateLinkedIntegrationRuntimeRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CreateLinkedIntegrationRuntimeRequest.

        The name of the linked integration runtime.

        :param name: The name of this CreateLinkedIntegrationRuntimeRequest.
        :type name: str
        """

        self._name = name

    @property
    def subscription_id(self):
        """Gets the subscription_id of this CreateLinkedIntegrationRuntimeRequest.

        The ID of the subscription that the linked integration runtime belongs to.

        :return: The subscription_id of this CreateLinkedIntegrationRuntimeRequest.
        :rtype: str
        """
        return self._subscription_id

    @subscription_id.setter
    def subscription_id(self, subscription_id):
        """Sets the subscription_id of this CreateLinkedIntegrationRuntimeRequest.

        The ID of the subscription that the linked integration runtime belongs to.

        :param subscription_id: The subscription_id of this CreateLinkedIntegrationRuntimeRequest.
        :type subscription_id: str
        """

        self._subscription_id = subscription_id
