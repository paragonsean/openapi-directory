# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.activity_run import ActivityRun
from openapi_server import util


class ActivityRunsQueryResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, continuation_token: str=None, value: List[ActivityRun]=None):
        """ActivityRunsQueryResponse - a model defined in OpenAPI

        :param continuation_token: The continuation_token of this ActivityRunsQueryResponse.
        :param value: The value of this ActivityRunsQueryResponse.
        """
        self.openapi_types = {
            'continuation_token': str,
            'value': List[ActivityRun]
        }

        self.attribute_map = {
            'continuation_token': 'continuationToken',
            'value': 'value'
        }

        self._continuation_token = continuation_token
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ActivityRunsQueryResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ActivityRunsQueryResponse of this ActivityRunsQueryResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def continuation_token(self):
        """Gets the continuation_token of this ActivityRunsQueryResponse.

        The continuation token for getting the next page of results, if any remaining results exist, null otherwise.

        :return: The continuation_token of this ActivityRunsQueryResponse.
        :rtype: str
        """
        return self._continuation_token

    @continuation_token.setter
    def continuation_token(self, continuation_token):
        """Sets the continuation_token of this ActivityRunsQueryResponse.

        The continuation token for getting the next page of results, if any remaining results exist, null otherwise.

        :param continuation_token: The continuation_token of this ActivityRunsQueryResponse.
        :type continuation_token: str
        """

        self._continuation_token = continuation_token

    @property
    def value(self):
        """Gets the value of this ActivityRunsQueryResponse.

        List of activity runs.

        :return: The value of this ActivityRunsQueryResponse.
        :rtype: List[ActivityRun]
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this ActivityRunsQueryResponse.

        List of activity runs.

        :param value: The value of this ActivityRunsQueryResponse.
        :type value: List[ActivityRun]
        """
        if value is None:
            raise ValueError("Invalid value for `value`, must not be `None`")

        self._value = value
