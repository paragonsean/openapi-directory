# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.pipeline_run_invoked_by import PipelineRunInvokedBy
from openapi_server import util


class PipelineRun(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, duration_in_ms: int=None, invoked_by: PipelineRunInvokedBy=None, is_latest: bool=None, last_updated: datetime=None, message: str=None, parameters: Dict[str, str]=None, pipeline_name: str=None, run_dimensions: Dict[str, str]=None, run_end: datetime=None, run_group_id: str=None, run_id: str=None, run_start: datetime=None, status: str=None):
        """PipelineRun - a model defined in OpenAPI

        :param duration_in_ms: The duration_in_ms of this PipelineRun.
        :param invoked_by: The invoked_by of this PipelineRun.
        :param is_latest: The is_latest of this PipelineRun.
        :param last_updated: The last_updated of this PipelineRun.
        :param message: The message of this PipelineRun.
        :param parameters: The parameters of this PipelineRun.
        :param pipeline_name: The pipeline_name of this PipelineRun.
        :param run_dimensions: The run_dimensions of this PipelineRun.
        :param run_end: The run_end of this PipelineRun.
        :param run_group_id: The run_group_id of this PipelineRun.
        :param run_id: The run_id of this PipelineRun.
        :param run_start: The run_start of this PipelineRun.
        :param status: The status of this PipelineRun.
        """
        self.openapi_types = {
            'duration_in_ms': int,
            'invoked_by': PipelineRunInvokedBy,
            'is_latest': bool,
            'last_updated': datetime,
            'message': str,
            'parameters': Dict[str, str],
            'pipeline_name': str,
            'run_dimensions': Dict[str, str],
            'run_end': datetime,
            'run_group_id': str,
            'run_id': str,
            'run_start': datetime,
            'status': str
        }

        self.attribute_map = {
            'duration_in_ms': 'durationInMs',
            'invoked_by': 'invokedBy',
            'is_latest': 'isLatest',
            'last_updated': 'lastUpdated',
            'message': 'message',
            'parameters': 'parameters',
            'pipeline_name': 'pipelineName',
            'run_dimensions': 'runDimensions',
            'run_end': 'runEnd',
            'run_group_id': 'runGroupId',
            'run_id': 'runId',
            'run_start': 'runStart',
            'status': 'status'
        }

        self._duration_in_ms = duration_in_ms
        self._invoked_by = invoked_by
        self._is_latest = is_latest
        self._last_updated = last_updated
        self._message = message
        self._parameters = parameters
        self._pipeline_name = pipeline_name
        self._run_dimensions = run_dimensions
        self._run_end = run_end
        self._run_group_id = run_group_id
        self._run_id = run_id
        self._run_start = run_start
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PipelineRun':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PipelineRun of this PipelineRun.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def duration_in_ms(self):
        """Gets the duration_in_ms of this PipelineRun.

        The duration of a pipeline run.

        :return: The duration_in_ms of this PipelineRun.
        :rtype: int
        """
        return self._duration_in_ms

    @duration_in_ms.setter
    def duration_in_ms(self, duration_in_ms):
        """Sets the duration_in_ms of this PipelineRun.

        The duration of a pipeline run.

        :param duration_in_ms: The duration_in_ms of this PipelineRun.
        :type duration_in_ms: int
        """

        self._duration_in_ms = duration_in_ms

    @property
    def invoked_by(self):
        """Gets the invoked_by of this PipelineRun.


        :return: The invoked_by of this PipelineRun.
        :rtype: PipelineRunInvokedBy
        """
        return self._invoked_by

    @invoked_by.setter
    def invoked_by(self, invoked_by):
        """Sets the invoked_by of this PipelineRun.


        :param invoked_by: The invoked_by of this PipelineRun.
        :type invoked_by: PipelineRunInvokedBy
        """

        self._invoked_by = invoked_by

    @property
    def is_latest(self):
        """Gets the is_latest of this PipelineRun.

        Indicates if the recovered pipeline run is the latest in its group.

        :return: The is_latest of this PipelineRun.
        :rtype: bool
        """
        return self._is_latest

    @is_latest.setter
    def is_latest(self, is_latest):
        """Sets the is_latest of this PipelineRun.

        Indicates if the recovered pipeline run is the latest in its group.

        :param is_latest: The is_latest of this PipelineRun.
        :type is_latest: bool
        """

        self._is_latest = is_latest

    @property
    def last_updated(self):
        """Gets the last_updated of this PipelineRun.

        The last updated timestamp for the pipeline run event in ISO8601 format.

        :return: The last_updated of this PipelineRun.
        :rtype: datetime
        """
        return self._last_updated

    @last_updated.setter
    def last_updated(self, last_updated):
        """Sets the last_updated of this PipelineRun.

        The last updated timestamp for the pipeline run event in ISO8601 format.

        :param last_updated: The last_updated of this PipelineRun.
        :type last_updated: datetime
        """

        self._last_updated = last_updated

    @property
    def message(self):
        """Gets the message of this PipelineRun.

        The message from a pipeline run.

        :return: The message of this PipelineRun.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this PipelineRun.

        The message from a pipeline run.

        :param message: The message of this PipelineRun.
        :type message: str
        """

        self._message = message

    @property
    def parameters(self):
        """Gets the parameters of this PipelineRun.

        The full or partial list of parameter name, value pair used in the pipeline run.

        :return: The parameters of this PipelineRun.
        :rtype: Dict[str, str]
        """
        return self._parameters

    @parameters.setter
    def parameters(self, parameters):
        """Sets the parameters of this PipelineRun.

        The full or partial list of parameter name, value pair used in the pipeline run.

        :param parameters: The parameters of this PipelineRun.
        :type parameters: Dict[str, str]
        """

        self._parameters = parameters

    @property
    def pipeline_name(self):
        """Gets the pipeline_name of this PipelineRun.

        The pipeline name.

        :return: The pipeline_name of this PipelineRun.
        :rtype: str
        """
        return self._pipeline_name

    @pipeline_name.setter
    def pipeline_name(self, pipeline_name):
        """Sets the pipeline_name of this PipelineRun.

        The pipeline name.

        :param pipeline_name: The pipeline_name of this PipelineRun.
        :type pipeline_name: str
        """

        self._pipeline_name = pipeline_name

    @property
    def run_dimensions(self):
        """Gets the run_dimensions of this PipelineRun.

        Run dimensions emitted by Pipeline run.

        :return: The run_dimensions of this PipelineRun.
        :rtype: Dict[str, str]
        """
        return self._run_dimensions

    @run_dimensions.setter
    def run_dimensions(self, run_dimensions):
        """Sets the run_dimensions of this PipelineRun.

        Run dimensions emitted by Pipeline run.

        :param run_dimensions: The run_dimensions of this PipelineRun.
        :type run_dimensions: Dict[str, str]
        """

        self._run_dimensions = run_dimensions

    @property
    def run_end(self):
        """Gets the run_end of this PipelineRun.

        The end time of a pipeline run in ISO8601 format.

        :return: The run_end of this PipelineRun.
        :rtype: datetime
        """
        return self._run_end

    @run_end.setter
    def run_end(self, run_end):
        """Sets the run_end of this PipelineRun.

        The end time of a pipeline run in ISO8601 format.

        :param run_end: The run_end of this PipelineRun.
        :type run_end: datetime
        """

        self._run_end = run_end

    @property
    def run_group_id(self):
        """Gets the run_group_id of this PipelineRun.

        Identifier that correlates all the recovery runs of a pipeline run.

        :return: The run_group_id of this PipelineRun.
        :rtype: str
        """
        return self._run_group_id

    @run_group_id.setter
    def run_group_id(self, run_group_id):
        """Sets the run_group_id of this PipelineRun.

        Identifier that correlates all the recovery runs of a pipeline run.

        :param run_group_id: The run_group_id of this PipelineRun.
        :type run_group_id: str
        """

        self._run_group_id = run_group_id

    @property
    def run_id(self):
        """Gets the run_id of this PipelineRun.

        Identifier of a run.

        :return: The run_id of this PipelineRun.
        :rtype: str
        """
        return self._run_id

    @run_id.setter
    def run_id(self, run_id):
        """Sets the run_id of this PipelineRun.

        Identifier of a run.

        :param run_id: The run_id of this PipelineRun.
        :type run_id: str
        """

        self._run_id = run_id

    @property
    def run_start(self):
        """Gets the run_start of this PipelineRun.

        The start time of a pipeline run in ISO8601 format.

        :return: The run_start of this PipelineRun.
        :rtype: datetime
        """
        return self._run_start

    @run_start.setter
    def run_start(self, run_start):
        """Sets the run_start of this PipelineRun.

        The start time of a pipeline run in ISO8601 format.

        :param run_start: The run_start of this PipelineRun.
        :type run_start: datetime
        """

        self._run_start = run_start

    @property
    def status(self):
        """Gets the status of this PipelineRun.

        The status of a pipeline run.

        :return: The status of this PipelineRun.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this PipelineRun.

        The status of a pipeline run.

        :param status: The status of this PipelineRun.
        :type status: str
        """

        self._status = status
