# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GitHubAccessTokenRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, git_hub_access_code: str=None, git_hub_access_token_base_url: str=None, git_hub_client_id: str=None):
        """GitHubAccessTokenRequest - a model defined in OpenAPI

        :param git_hub_access_code: The git_hub_access_code of this GitHubAccessTokenRequest.
        :param git_hub_access_token_base_url: The git_hub_access_token_base_url of this GitHubAccessTokenRequest.
        :param git_hub_client_id: The git_hub_client_id of this GitHubAccessTokenRequest.
        """
        self.openapi_types = {
            'git_hub_access_code': str,
            'git_hub_access_token_base_url': str,
            'git_hub_client_id': str
        }

        self.attribute_map = {
            'git_hub_access_code': 'gitHubAccessCode',
            'git_hub_access_token_base_url': 'gitHubAccessTokenBaseUrl',
            'git_hub_client_id': 'gitHubClientId'
        }

        self._git_hub_access_code = git_hub_access_code
        self._git_hub_access_token_base_url = git_hub_access_token_base_url
        self._git_hub_client_id = git_hub_client_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GitHubAccessTokenRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GitHubAccessTokenRequest of this GitHubAccessTokenRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def git_hub_access_code(self):
        """Gets the git_hub_access_code of this GitHubAccessTokenRequest.

        GitHub access code.

        :return: The git_hub_access_code of this GitHubAccessTokenRequest.
        :rtype: str
        """
        return self._git_hub_access_code

    @git_hub_access_code.setter
    def git_hub_access_code(self, git_hub_access_code):
        """Sets the git_hub_access_code of this GitHubAccessTokenRequest.

        GitHub access code.

        :param git_hub_access_code: The git_hub_access_code of this GitHubAccessTokenRequest.
        :type git_hub_access_code: str
        """
        if git_hub_access_code is None:
            raise ValueError("Invalid value for `git_hub_access_code`, must not be `None`")

        self._git_hub_access_code = git_hub_access_code

    @property
    def git_hub_access_token_base_url(self):
        """Gets the git_hub_access_token_base_url of this GitHubAccessTokenRequest.

        GitHub access token base URL.

        :return: The git_hub_access_token_base_url of this GitHubAccessTokenRequest.
        :rtype: str
        """
        return self._git_hub_access_token_base_url

    @git_hub_access_token_base_url.setter
    def git_hub_access_token_base_url(self, git_hub_access_token_base_url):
        """Sets the git_hub_access_token_base_url of this GitHubAccessTokenRequest.

        GitHub access token base URL.

        :param git_hub_access_token_base_url: The git_hub_access_token_base_url of this GitHubAccessTokenRequest.
        :type git_hub_access_token_base_url: str
        """
        if git_hub_access_token_base_url is None:
            raise ValueError("Invalid value for `git_hub_access_token_base_url`, must not be `None`")

        self._git_hub_access_token_base_url = git_hub_access_token_base_url

    @property
    def git_hub_client_id(self):
        """Gets the git_hub_client_id of this GitHubAccessTokenRequest.

        GitHub application client ID.

        :return: The git_hub_client_id of this GitHubAccessTokenRequest.
        :rtype: str
        """
        return self._git_hub_client_id

    @git_hub_client_id.setter
    def git_hub_client_id(self, git_hub_client_id):
        """Sets the git_hub_client_id of this GitHubAccessTokenRequest.

        GitHub application client ID.

        :param git_hub_client_id: The git_hub_client_id of this GitHubAccessTokenRequest.
        :type git_hub_client_id: str
        """

        self._git_hub_client_id = git_hub_client_id
