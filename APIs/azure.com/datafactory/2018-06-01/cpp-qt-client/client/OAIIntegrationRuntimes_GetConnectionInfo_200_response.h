/**
 * DataFactoryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-06-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIIntegrationRuntimes_GetConnectionInfo_200_response.h
 *
 * Connection information for encrypting the on-premises data source credentials.
 */

#ifndef OAIIntegrationRuntimes_GetConnectionInfo_200_response_H
#define OAIIntegrationRuntimes_GetConnectionInfo_200_response_H

#include <QJsonObject>

#include "OAIObject.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIIntegrationRuntimes_GetConnectionInfo_200_response : public OAIObject {
public:
    OAIIntegrationRuntimes_GetConnectionInfo_200_response();
    OAIIntegrationRuntimes_GetConnectionInfo_200_response(QString json);
    ~OAIIntegrationRuntimes_GetConnectionInfo_200_response() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getHostServiceUri() const;
    void setHostServiceUri(const QString &host_service_uri);
    bool is_host_service_uri_Set() const;
    bool is_host_service_uri_Valid() const;

    QString getIdentityCertThumbprint() const;
    void setIdentityCertThumbprint(const QString &identity_cert_thumbprint);
    bool is_identity_cert_thumbprint_Set() const;
    bool is_identity_cert_thumbprint_Valid() const;

    bool isIsIdentityCertExprired() const;
    void setIsIdentityCertExprired(const bool &is_identity_cert_exprired);
    bool is_is_identity_cert_exprired_Set() const;
    bool is_is_identity_cert_exprired_Valid() const;

    QString getPublicKey() const;
    void setPublicKey(const QString &public_key);
    bool is_public_key_Set() const;
    bool is_public_key_Valid() const;

    QString getServiceToken() const;
    void setServiceToken(const QString &service_token);
    bool is_service_token_Set() const;
    bool is_service_token_Valid() const;

    QString getVersion() const;
    void setVersion(const QString &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_host_service_uri;
    bool m_host_service_uri_isSet;
    bool m_host_service_uri_isValid;

    QString m_identity_cert_thumbprint;
    bool m_identity_cert_thumbprint_isSet;
    bool m_identity_cert_thumbprint_isValid;

    bool m_is_identity_cert_exprired;
    bool m_is_identity_cert_exprired_isSet;
    bool m_is_identity_cert_exprired_isValid;

    QString m_public_key;
    bool m_public_key_isSet;
    bool m_public_key_isValid;

    QString m_service_token;
    bool m_service_token_isSet;
    bool m_service_token_isValid;

    QString m_version;
    bool m_version_isSet;
    bool m_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIIntegrationRuntimes_GetConnectionInfo_200_response)

#endif // OAIIntegrationRuntimes_GetConnectionInfo_200_response_H
