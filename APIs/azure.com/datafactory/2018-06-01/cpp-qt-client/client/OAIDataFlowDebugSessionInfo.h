/**
 * DataFactoryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-06-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDataFlowDebugSessionInfo.h
 *
 * Data flow debug session info.
 */

#ifndef OAIDataFlowDebugSessionInfo_H
#define OAIDataFlowDebugSessionInfo_H

#include <QJsonObject>

#include "OAIObject.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDataFlowDebugSessionInfo : public OAIObject {
public:
    OAIDataFlowDebugSessionInfo();
    OAIDataFlowDebugSessionInfo(QString json);
    ~OAIDataFlowDebugSessionInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getComputeType() const;
    void setComputeType(const QString &compute_type);
    bool is_compute_type_Set() const;
    bool is_compute_type_Valid() const;

    qint32 getCoreCount() const;
    void setCoreCount(const qint32 &core_count);
    bool is_core_count_Set() const;
    bool is_core_count_Valid() const;

    QString getDataFlowName() const;
    void setDataFlowName(const QString &data_flow_name);
    bool is_data_flow_name_Set() const;
    bool is_data_flow_name_Valid() const;

    QString getIntegrationRuntimeName() const;
    void setIntegrationRuntimeName(const QString &integration_runtime_name);
    bool is_integration_runtime_name_Set() const;
    bool is_integration_runtime_name_Valid() const;

    QString getLastActivityTime() const;
    void setLastActivityTime(const QString &last_activity_time);
    bool is_last_activity_time_Set() const;
    bool is_last_activity_time_Valid() const;

    qint32 getNodeCount() const;
    void setNodeCount(const qint32 &node_count);
    bool is_node_count_Set() const;
    bool is_node_count_Valid() const;

    QString getSessionId() const;
    void setSessionId(const QString &session_id);
    bool is_session_id_Set() const;
    bool is_session_id_Valid() const;

    QString getStartTime() const;
    void setStartTime(const QString &start_time);
    bool is_start_time_Set() const;
    bool is_start_time_Valid() const;

    qint32 getTimeToLiveInMinutes() const;
    void setTimeToLiveInMinutes(const qint32 &time_to_live_in_minutes);
    bool is_time_to_live_in_minutes_Set() const;
    bool is_time_to_live_in_minutes_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_compute_type;
    bool m_compute_type_isSet;
    bool m_compute_type_isValid;

    qint32 m_core_count;
    bool m_core_count_isSet;
    bool m_core_count_isValid;

    QString m_data_flow_name;
    bool m_data_flow_name_isSet;
    bool m_data_flow_name_isValid;

    QString m_integration_runtime_name;
    bool m_integration_runtime_name_isSet;
    bool m_integration_runtime_name_isValid;

    QString m_last_activity_time;
    bool m_last_activity_time_isSet;
    bool m_last_activity_time_isValid;

    qint32 m_node_count;
    bool m_node_count_isSet;
    bool m_node_count_isValid;

    QString m_session_id;
    bool m_session_id_isSet;
    bool m_session_id_isValid;

    QString m_start_time;
    bool m_start_time_isSet;
    bool m_start_time_isValid;

    qint32 m_time_to_live_in_minutes;
    bool m_time_to_live_in_minutes_isSet;
    bool m_time_to_live_in_minutes_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDataFlowDebugSessionInfo)

#endif // OAIDataFlowDebugSessionInfo_H
