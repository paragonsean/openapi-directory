/**
 * DataFactoryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-06-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOperationMetricAvailability.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOperationMetricAvailability::OAIOperationMetricAvailability(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOperationMetricAvailability::OAIOperationMetricAvailability() {
    this->initializeModel();
}

OAIOperationMetricAvailability::~OAIOperationMetricAvailability() {}

void OAIOperationMetricAvailability::initializeModel() {

    m_blob_duration_isSet = false;
    m_blob_duration_isValid = false;

    m_time_grain_isSet = false;
    m_time_grain_isValid = false;
}

void OAIOperationMetricAvailability::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOperationMetricAvailability::fromJsonObject(QJsonObject json) {

    m_blob_duration_isValid = ::OpenAPI::fromJsonValue(m_blob_duration, json[QString("blobDuration")]);
    m_blob_duration_isSet = !json[QString("blobDuration")].isNull() && m_blob_duration_isValid;

    m_time_grain_isValid = ::OpenAPI::fromJsonValue(m_time_grain, json[QString("timeGrain")]);
    m_time_grain_isSet = !json[QString("timeGrain")].isNull() && m_time_grain_isValid;
}

QString OAIOperationMetricAvailability::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOperationMetricAvailability::asJsonObject() const {
    QJsonObject obj;
    if (m_blob_duration_isSet) {
        obj.insert(QString("blobDuration"), ::OpenAPI::toJsonValue(m_blob_duration));
    }
    if (m_time_grain_isSet) {
        obj.insert(QString("timeGrain"), ::OpenAPI::toJsonValue(m_time_grain));
    }
    return obj;
}

QString OAIOperationMetricAvailability::getBlobDuration() const {
    return m_blob_duration;
}
void OAIOperationMetricAvailability::setBlobDuration(const QString &blob_duration) {
    m_blob_duration = blob_duration;
    m_blob_duration_isSet = true;
}

bool OAIOperationMetricAvailability::is_blob_duration_Set() const{
    return m_blob_duration_isSet;
}

bool OAIOperationMetricAvailability::is_blob_duration_Valid() const{
    return m_blob_duration_isValid;
}

QString OAIOperationMetricAvailability::getTimeGrain() const {
    return m_time_grain;
}
void OAIOperationMetricAvailability::setTimeGrain(const QString &time_grain) {
    m_time_grain = time_grain;
    m_time_grain_isSet = true;
}

bool OAIOperationMetricAvailability::is_time_grain_Set() const{
    return m_time_grain_isSet;
}

bool OAIOperationMetricAvailability::is_time_grain_Valid() const{
    return m_time_grain_isValid;
}

bool OAIOperationMetricAvailability::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_blob_duration_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_time_grain_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOperationMetricAvailability::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
