/**
 * DataFactoryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-09-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErrorResponse from '../model/ErrorResponse';
import PipelineRun from '../model/PipelineRun';
import PipelineRunFilterParameters from '../model/PipelineRunFilterParameters';
import PipelineRunQueryResponse from '../model/PipelineRunQueryResponse';

/**
* Pipelineruns service.
* @module api/PipelinerunsApi
* @version 2017-09-01-preview
*/
export default class PipelinerunsApi {

    /**
    * Constructs a new PipelinerunsApi. 
    * @alias module:api/PipelinerunsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the factoriesCancelPipelineRun operation.
     * @callback module:api/PipelinerunsApi~factoriesCancelPipelineRunCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Cancel a pipeline run by its run ID.
     * @param {String} subscriptionId The subscription identifier.
     * @param {String} resourceGroupName The resource group name.
     * @param {String} factoryName The factory name.
     * @param {String} runId The pipeline run identifier.
     * @param {String} apiVersion The API version.
     * @param {module:api/PipelinerunsApi~factoriesCancelPipelineRunCallback} callback The callback function, accepting three arguments: error, data, response
     */
    factoriesCancelPipelineRun(subscriptionId, resourceGroupName, factoryName, runId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling factoriesCancelPipelineRun");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling factoriesCancelPipelineRun");
      }
      // verify the required parameter 'factoryName' is set
      if (factoryName === undefined || factoryName === null) {
        throw new Error("Missing the required parameter 'factoryName' when calling factoriesCancelPipelineRun");
      }
      // verify the required parameter 'runId' is set
      if (runId === undefined || runId === null) {
        throw new Error("Missing the required parameter 'runId' when calling factoriesCancelPipelineRun");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling factoriesCancelPipelineRun");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'factoryName': factoryName,
        'runId': runId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/cancelpipelinerun/{runId}', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pipelineRunsGet operation.
     * @callback module:api/PipelinerunsApi~pipelineRunsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PipelineRun} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a pipeline run by its run ID.
     * @param {String} subscriptionId The subscription identifier.
     * @param {String} resourceGroupName The resource group name.
     * @param {String} factoryName The factory name.
     * @param {String} runId The pipeline run identifier.
     * @param {String} apiVersion The API version.
     * @param {module:api/PipelinerunsApi~pipelineRunsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PipelineRun}
     */
    pipelineRunsGet(subscriptionId, resourceGroupName, factoryName, runId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling pipelineRunsGet");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling pipelineRunsGet");
      }
      // verify the required parameter 'factoryName' is set
      if (factoryName === undefined || factoryName === null) {
        throw new Error("Missing the required parameter 'factoryName' when calling pipelineRunsGet");
      }
      // verify the required parameter 'runId' is set
      if (runId === undefined || runId === null) {
        throw new Error("Missing the required parameter 'runId' when calling pipelineRunsGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling pipelineRunsGet");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'factoryName': factoryName,
        'runId': runId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PipelineRun;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/pipelineruns/{runId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pipelineRunsQueryByFactory operation.
     * @callback module:api/PipelinerunsApi~pipelineRunsQueryByFactoryCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PipelineRunQueryResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Query pipeline runs in the factory based on input filter conditions.
     * @param {String} subscriptionId The subscription identifier.
     * @param {String} resourceGroupName The resource group name.
     * @param {String} factoryName The factory name.
     * @param {String} apiVersion The API version.
     * @param {module:model/PipelineRunFilterParameters} filterParameters Parameters to filter the pipeline run.
     * @param {module:api/PipelinerunsApi~pipelineRunsQueryByFactoryCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PipelineRunQueryResponse}
     */
    pipelineRunsQueryByFactory(subscriptionId, resourceGroupName, factoryName, apiVersion, filterParameters, callback) {
      let postBody = filterParameters;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling pipelineRunsQueryByFactory");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling pipelineRunsQueryByFactory");
      }
      // verify the required parameter 'factoryName' is set
      if (factoryName === undefined || factoryName === null) {
        throw new Error("Missing the required parameter 'factoryName' when calling pipelineRunsQueryByFactory");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling pipelineRunsQueryByFactory");
      }
      // verify the required parameter 'filterParameters' is set
      if (filterParameters === undefined || filterParameters === null) {
        throw new Error("Missing the required parameter 'filterParameters' when calling pipelineRunsQueryByFactory");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'factoryName': factoryName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = PipelineRunQueryResponse;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/pipelineruns', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
