/**
 * DataFactoryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-09-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErrorResponse from '../model/ErrorResponse';
import Factory from '../model/Factory';
import FactoryRepoUpdate from '../model/FactoryRepoUpdate';

/**
* ConfigureFactoryRepo service.
* @module api/ConfigureFactoryRepoApi
* @version 2017-09-01-preview
*/
export default class ConfigureFactoryRepoApi {

    /**
    * Constructs a new ConfigureFactoryRepoApi. 
    * @alias module:api/ConfigureFactoryRepoApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the factoriesConfigureFactoryRepo operation.
     * @callback module:api/ConfigureFactoryRepoApi~factoriesConfigureFactoryRepoCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Factory} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates a factory's repo information.
     * @param {String} subscriptionId The subscription identifier.
     * @param {String} locationId The location identifier.
     * @param {String} apiVersion The API version.
     * @param {module:model/FactoryRepoUpdate} factoryRepoUpdate Update factory repo request definition.
     * @param {module:api/ConfigureFactoryRepoApi~factoriesConfigureFactoryRepoCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Factory}
     */
    factoriesConfigureFactoryRepo(subscriptionId, locationId, apiVersion, factoryRepoUpdate, callback) {
      let postBody = factoryRepoUpdate;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling factoriesConfigureFactoryRepo");
      }
      // verify the required parameter 'locationId' is set
      if (locationId === undefined || locationId === null) {
        throw new Error("Missing the required parameter 'locationId' when calling factoriesConfigureFactoryRepo");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling factoriesConfigureFactoryRepo");
      }
      // verify the required parameter 'factoryRepoUpdate' is set
      if (factoryRepoUpdate === undefined || factoryRepoUpdate === null) {
        throw new Error("Missing the required parameter 'factoryRepoUpdate' when calling factoriesConfigureFactoryRepo");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'locationId': locationId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Factory;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.DataFactory/locations/{locationId}/configureFactoryRepo', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
