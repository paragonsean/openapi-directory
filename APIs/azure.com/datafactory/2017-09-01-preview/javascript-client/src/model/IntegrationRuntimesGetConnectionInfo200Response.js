/**
 * DataFactoryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-09-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The IntegrationRuntimesGetConnectionInfo200Response model module.
 * @module model/IntegrationRuntimesGetConnectionInfo200Response
 * @version 2017-09-01-preview
 */
class IntegrationRuntimesGetConnectionInfo200Response {
    /**
     * Constructs a new <code>IntegrationRuntimesGetConnectionInfo200Response</code>.
     * Connection information for encrypting the on-premises data source credentials.
     * @alias module:model/IntegrationRuntimesGetConnectionInfo200Response
     * @extends Object
     */
    constructor() { 
        
        IntegrationRuntimesGetConnectionInfo200Response.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>IntegrationRuntimesGetConnectionInfo200Response</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IntegrationRuntimesGetConnectionInfo200Response} obj Optional instance to populate.
     * @return {module:model/IntegrationRuntimesGetConnectionInfo200Response} The populated <code>IntegrationRuntimesGetConnectionInfo200Response</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IntegrationRuntimesGetConnectionInfo200Response();

            ApiClient.constructFromObject(data, obj, 'Object');
            

            if (data.hasOwnProperty('hostServiceUri')) {
                obj['hostServiceUri'] = ApiClient.convertToType(data['hostServiceUri'], 'String');
            }
            if (data.hasOwnProperty('identityCertThumbprint')) {
                obj['identityCertThumbprint'] = ApiClient.convertToType(data['identityCertThumbprint'], 'String');
            }
            if (data.hasOwnProperty('isIdentityCertExprired')) {
                obj['isIdentityCertExprired'] = ApiClient.convertToType(data['isIdentityCertExprired'], 'Boolean');
            }
            if (data.hasOwnProperty('publicKey')) {
                obj['publicKey'] = ApiClient.convertToType(data['publicKey'], 'String');
            }
            if (data.hasOwnProperty('serviceToken')) {
                obj['serviceToken'] = ApiClient.convertToType(data['serviceToken'], 'String');
            }
            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IntegrationRuntimesGetConnectionInfo200Response</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IntegrationRuntimesGetConnectionInfo200Response</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['hostServiceUri'] && !(typeof data['hostServiceUri'] === 'string' || data['hostServiceUri'] instanceof String)) {
            throw new Error("Expected the field `hostServiceUri` to be a primitive type in the JSON string but got " + data['hostServiceUri']);
        }
        // ensure the json data is a string
        if (data['identityCertThumbprint'] && !(typeof data['identityCertThumbprint'] === 'string' || data['identityCertThumbprint'] instanceof String)) {
            throw new Error("Expected the field `identityCertThumbprint` to be a primitive type in the JSON string but got " + data['identityCertThumbprint']);
        }
        // ensure the json data is a string
        if (data['publicKey'] && !(typeof data['publicKey'] === 'string' || data['publicKey'] instanceof String)) {
            throw new Error("Expected the field `publicKey` to be a primitive type in the JSON string but got " + data['publicKey']);
        }
        // ensure the json data is a string
        if (data['serviceToken'] && !(typeof data['serviceToken'] === 'string' || data['serviceToken'] instanceof String)) {
            throw new Error("Expected the field `serviceToken` to be a primitive type in the JSON string but got " + data['serviceToken']);
        }
        // ensure the json data is a string
        if (data['version'] && !(typeof data['version'] === 'string' || data['version'] instanceof String)) {
            throw new Error("Expected the field `version` to be a primitive type in the JSON string but got " + data['version']);
        }

        return true;
    }


}



/**
 * The on-premises integration runtime host URL.
 * @member {String} hostServiceUri
 */
IntegrationRuntimesGetConnectionInfo200Response.prototype['hostServiceUri'] = undefined;

/**
 * The integration runtime SSL certificate thumbprint. Click-Once application uses it to do server validation.
 * @member {String} identityCertThumbprint
 */
IntegrationRuntimesGetConnectionInfo200Response.prototype['identityCertThumbprint'] = undefined;

/**
 * Whether the identity certificate is expired.
 * @member {Boolean} isIdentityCertExprired
 */
IntegrationRuntimesGetConnectionInfo200Response.prototype['isIdentityCertExprired'] = undefined;

/**
 * The public key for encrypting a credential when transferring the credential to the integration runtime.
 * @member {String} publicKey
 */
IntegrationRuntimesGetConnectionInfo200Response.prototype['publicKey'] = undefined;

/**
 * The token generated in service. Callers use this token to authenticate to integration runtime.
 * @member {String} serviceToken
 */
IntegrationRuntimesGetConnectionInfo200Response.prototype['serviceToken'] = undefined;

/**
 * The integration runtime version.
 * @member {String} version
 */
IntegrationRuntimesGetConnectionInfo200Response.prototype['version'] = undefined;






export default IntegrationRuntimesGetConnectionInfo200Response;

