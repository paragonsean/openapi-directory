/**
 * DataFactoryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-09-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LinkedServiceReference from './LinkedServiceReference';
import SecretBase from './SecretBase';

/**
 * The AzureKeyVaultSecretReference model module.
 * @module model/AzureKeyVaultSecretReference
 * @version 2017-09-01-preview
 */
class AzureKeyVaultSecretReference {
    /**
     * Constructs a new <code>AzureKeyVaultSecretReference</code>.
     * Azure Key Vault secret reference.
     * @alias module:model/AzureKeyVaultSecretReference
     * @extends module:model/SecretBase
     * @implements module:model/SecretBase
     * @param type {String} Type of the secret.
     */
    constructor(type) { 
        SecretBase.initialize(this, type);
        AzureKeyVaultSecretReference.initialize(this, type);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, type) { 
        obj['secretName'] = secretName;
        obj['store'] = store;
    }

    /**
     * Constructs a <code>AzureKeyVaultSecretReference</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AzureKeyVaultSecretReference} obj Optional instance to populate.
     * @return {module:model/AzureKeyVaultSecretReference} The populated <code>AzureKeyVaultSecretReference</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AzureKeyVaultSecretReference();
            SecretBase.constructFromObject(data, obj);
            SecretBase.constructFromObject(data, obj);

            if (data.hasOwnProperty('secretName')) {
                obj['secretName'] = ApiClient.convertToType(data['secretName'], Object);
            }
            if (data.hasOwnProperty('secretVersion')) {
                obj['secretVersion'] = ApiClient.convertToType(data['secretVersion'], Object);
            }
            if (data.hasOwnProperty('store')) {
                obj['store'] = LinkedServiceReference.constructFromObject(data['store']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AzureKeyVaultSecretReference</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AzureKeyVaultSecretReference</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AzureKeyVaultSecretReference.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `store`
        if (data['store']) { // data not null
          LinkedServiceReference.validateJSON(data['store']);
        }

        return true;
    }


}

AzureKeyVaultSecretReference.RequiredProperties = ["secretName", "store", "type"];

/**
 * The name of the secret in Azure Key Vault. Type: string (or Expression with resultType string).
 * @member {Object} secretName
 */
AzureKeyVaultSecretReference.prototype['secretName'] = undefined;

/**
 * The version of the secret in Azure Key Vault. The default value is the latest version of the secret. Type: string (or Expression with resultType string).
 * @member {Object} secretVersion
 */
AzureKeyVaultSecretReference.prototype['secretVersion'] = undefined;

/**
 * @member {module:model/LinkedServiceReference} store
 */
AzureKeyVaultSecretReference.prototype['store'] = undefined;


// Implement SecretBase interface:
/**
 * Type of the secret.
 * @member {String} type
 */
SecretBase.prototype['type'] = undefined;




export default AzureKeyVaultSecretReference;

