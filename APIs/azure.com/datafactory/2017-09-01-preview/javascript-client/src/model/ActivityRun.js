/**
 * DataFactoryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-09-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ActivityRun model module.
 * @module model/ActivityRun
 * @version 2017-09-01-preview
 */
class ActivityRun {
    /**
     * Constructs a new <code>ActivityRun</code>.
     * Information about an activity run in a pipeline.
     * @alias module:model/ActivityRun
     * @extends Object
     */
    constructor() { 
        
        ActivityRun.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ActivityRun</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ActivityRun} obj Optional instance to populate.
     * @return {module:model/ActivityRun} The populated <code>ActivityRun</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ActivityRun();

            ApiClient.constructFromObject(data, obj, 'Object');
            

            if (data.hasOwnProperty('activityName')) {
                obj['activityName'] = ApiClient.convertToType(data['activityName'], 'String');
            }
            if (data.hasOwnProperty('activityRunEnd')) {
                obj['activityRunEnd'] = ApiClient.convertToType(data['activityRunEnd'], 'Date');
            }
            if (data.hasOwnProperty('activityRunId')) {
                obj['activityRunId'] = ApiClient.convertToType(data['activityRunId'], 'String');
            }
            if (data.hasOwnProperty('activityRunStart')) {
                obj['activityRunStart'] = ApiClient.convertToType(data['activityRunStart'], 'Date');
            }
            if (data.hasOwnProperty('activityType')) {
                obj['activityType'] = ApiClient.convertToType(data['activityType'], 'String');
            }
            if (data.hasOwnProperty('durationInMs')) {
                obj['durationInMs'] = ApiClient.convertToType(data['durationInMs'], 'Number');
            }
            if (data.hasOwnProperty('error')) {
                obj['error'] = ApiClient.convertToType(data['error'], Object);
            }
            if (data.hasOwnProperty('input')) {
                obj['input'] = ApiClient.convertToType(data['input'], Object);
            }
            if (data.hasOwnProperty('linkedServiceName')) {
                obj['linkedServiceName'] = ApiClient.convertToType(data['linkedServiceName'], 'String');
            }
            if (data.hasOwnProperty('output')) {
                obj['output'] = ApiClient.convertToType(data['output'], Object);
            }
            if (data.hasOwnProperty('pipelineName')) {
                obj['pipelineName'] = ApiClient.convertToType(data['pipelineName'], 'String');
            }
            if (data.hasOwnProperty('pipelineRunId')) {
                obj['pipelineRunId'] = ApiClient.convertToType(data['pipelineRunId'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ActivityRun</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ActivityRun</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['activityName'] && !(typeof data['activityName'] === 'string' || data['activityName'] instanceof String)) {
            throw new Error("Expected the field `activityName` to be a primitive type in the JSON string but got " + data['activityName']);
        }
        // ensure the json data is a string
        if (data['activityRunId'] && !(typeof data['activityRunId'] === 'string' || data['activityRunId'] instanceof String)) {
            throw new Error("Expected the field `activityRunId` to be a primitive type in the JSON string but got " + data['activityRunId']);
        }
        // ensure the json data is a string
        if (data['activityType'] && !(typeof data['activityType'] === 'string' || data['activityType'] instanceof String)) {
            throw new Error("Expected the field `activityType` to be a primitive type in the JSON string but got " + data['activityType']);
        }
        // ensure the json data is a string
        if (data['linkedServiceName'] && !(typeof data['linkedServiceName'] === 'string' || data['linkedServiceName'] instanceof String)) {
            throw new Error("Expected the field `linkedServiceName` to be a primitive type in the JSON string but got " + data['linkedServiceName']);
        }
        // ensure the json data is a string
        if (data['pipelineName'] && !(typeof data['pipelineName'] === 'string' || data['pipelineName'] instanceof String)) {
            throw new Error("Expected the field `pipelineName` to be a primitive type in the JSON string but got " + data['pipelineName']);
        }
        // ensure the json data is a string
        if (data['pipelineRunId'] && !(typeof data['pipelineRunId'] === 'string' || data['pipelineRunId'] instanceof String)) {
            throw new Error("Expected the field `pipelineRunId` to be a primitive type in the JSON string but got " + data['pipelineRunId']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }

        return true;
    }


}



/**
 * The name of the activity.
 * @member {String} activityName
 */
ActivityRun.prototype['activityName'] = undefined;

/**
 * The end time of the activity run in 'ISO 8601' format.
 * @member {Date} activityRunEnd
 */
ActivityRun.prototype['activityRunEnd'] = undefined;

/**
 * The id of the activity run.
 * @member {String} activityRunId
 */
ActivityRun.prototype['activityRunId'] = undefined;

/**
 * The start time of the activity run in 'ISO 8601' format.
 * @member {Date} activityRunStart
 */
ActivityRun.prototype['activityRunStart'] = undefined;

/**
 * The type of the activity.
 * @member {String} activityType
 */
ActivityRun.prototype['activityType'] = undefined;

/**
 * The duration of the activity run.
 * @member {Number} durationInMs
 */
ActivityRun.prototype['durationInMs'] = undefined;

/**
 * The error if any from the activity run.
 * @member {Object} error
 */
ActivityRun.prototype['error'] = undefined;

/**
 * The input for the activity.
 * @member {Object} input
 */
ActivityRun.prototype['input'] = undefined;

/**
 * The name of the compute linked service.
 * @member {String} linkedServiceName
 */
ActivityRun.prototype['linkedServiceName'] = undefined;

/**
 * The output for the activity.
 * @member {Object} output
 */
ActivityRun.prototype['output'] = undefined;

/**
 * The name of the pipeline.
 * @member {String} pipelineName
 */
ActivityRun.prototype['pipelineName'] = undefined;

/**
 * The id of the pipeline run.
 * @member {String} pipelineRunId
 */
ActivityRun.prototype['pipelineRunId'] = undefined;

/**
 * The status of the activity run.
 * @member {String} status
 */
ActivityRun.prototype['status'] = undefined;






export default ActivityRun;

