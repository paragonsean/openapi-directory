/**
 * DataFactoryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-09-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PipelineRunInvokedBy from './PipelineRunInvokedBy';

/**
 * The PipelineRun model module.
 * @module model/PipelineRun
 * @version 2017-09-01-preview
 */
class PipelineRun {
    /**
     * Constructs a new <code>PipelineRun</code>.
     * Information about a pipeline run.
     * @alias module:model/PipelineRun
     * @extends Object
     */
    constructor() { 
        
        PipelineRun.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PipelineRun</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PipelineRun} obj Optional instance to populate.
     * @return {module:model/PipelineRun} The populated <code>PipelineRun</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PipelineRun();

            ApiClient.constructFromObject(data, obj, 'Object');
            

            if (data.hasOwnProperty('durationInMs')) {
                obj['durationInMs'] = ApiClient.convertToType(data['durationInMs'], 'Number');
            }
            if (data.hasOwnProperty('invokedBy')) {
                obj['invokedBy'] = PipelineRunInvokedBy.constructFromObject(data['invokedBy']);
            }
            if (data.hasOwnProperty('lastUpdated')) {
                obj['lastUpdated'] = ApiClient.convertToType(data['lastUpdated'], 'Date');
            }
            if (data.hasOwnProperty('message')) {
                obj['message'] = ApiClient.convertToType(data['message'], 'String');
            }
            if (data.hasOwnProperty('parameters')) {
                obj['parameters'] = ApiClient.convertToType(data['parameters'], {'String': 'String'});
            }
            if (data.hasOwnProperty('pipelineName')) {
                obj['pipelineName'] = ApiClient.convertToType(data['pipelineName'], 'String');
            }
            if (data.hasOwnProperty('runEnd')) {
                obj['runEnd'] = ApiClient.convertToType(data['runEnd'], 'Date');
            }
            if (data.hasOwnProperty('runId')) {
                obj['runId'] = ApiClient.convertToType(data['runId'], 'String');
            }
            if (data.hasOwnProperty('runStart')) {
                obj['runStart'] = ApiClient.convertToType(data['runStart'], 'Date');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PipelineRun</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PipelineRun</code>.
     */
    static validateJSON(data) {
        // validate the optional field `invokedBy`
        if (data['invokedBy']) { // data not null
          PipelineRunInvokedBy.validateJSON(data['invokedBy']);
        }
        // ensure the json data is a string
        if (data['message'] && !(typeof data['message'] === 'string' || data['message'] instanceof String)) {
            throw new Error("Expected the field `message` to be a primitive type in the JSON string but got " + data['message']);
        }
        // ensure the json data is a string
        if (data['pipelineName'] && !(typeof data['pipelineName'] === 'string' || data['pipelineName'] instanceof String)) {
            throw new Error("Expected the field `pipelineName` to be a primitive type in the JSON string but got " + data['pipelineName']);
        }
        // ensure the json data is a string
        if (data['runId'] && !(typeof data['runId'] === 'string' || data['runId'] instanceof String)) {
            throw new Error("Expected the field `runId` to be a primitive type in the JSON string but got " + data['runId']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }

        return true;
    }


}



/**
 * The duration of a pipeline run.
 * @member {Number} durationInMs
 */
PipelineRun.prototype['durationInMs'] = undefined;

/**
 * @member {module:model/PipelineRunInvokedBy} invokedBy
 */
PipelineRun.prototype['invokedBy'] = undefined;

/**
 * The last updated timestamp for the pipeline run event in ISO8601 format.
 * @member {Date} lastUpdated
 */
PipelineRun.prototype['lastUpdated'] = undefined;

/**
 * The message from a pipeline run.
 * @member {String} message
 */
PipelineRun.prototype['message'] = undefined;

/**
 * The full or partial list of parameter name, value pair used in the pipeline run.
 * @member {Object.<String, String>} parameters
 */
PipelineRun.prototype['parameters'] = undefined;

/**
 * The pipeline name.
 * @member {String} pipelineName
 */
PipelineRun.prototype['pipelineName'] = undefined;

/**
 * The end time of a pipeline run in ISO8601 format.
 * @member {Date} runEnd
 */
PipelineRun.prototype['runEnd'] = undefined;

/**
 * Identifier of a run.
 * @member {String} runId
 */
PipelineRun.prototype['runId'] = undefined;

/**
 * The start time of a pipeline run in ISO8601 format.
 * @member {Date} runStart
 */
PipelineRun.prototype['runStart'] = undefined;

/**
 * The status of a pipeline run.
 * @member {String} status
 */
PipelineRun.prototype['status'] = undefined;






export default PipelineRun;

