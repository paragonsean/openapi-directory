/**
 * DataFactoryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-09-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.DataFactoryManagementClient);
  }
}(this, function(expect, DataFactoryManagementClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new DataFactoryManagementClient.IntegrationRuntimesApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('IntegrationRuntimesApi', function() {
    describe('integrationRuntimesCreateOrUpdate', function() {
      it('should call integrationRuntimesCreateOrUpdate successfully', function(done) {
        //uncomment below and update the code to test integrationRuntimesCreateOrUpdate
        //instance.integrationRuntimesCreateOrUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('integrationRuntimesDelete', function() {
      it('should call integrationRuntimesDelete successfully', function(done) {
        //uncomment below and update the code to test integrationRuntimesDelete
        //instance.integrationRuntimesDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('integrationRuntimesGet', function() {
      it('should call integrationRuntimesGet successfully', function(done) {
        //uncomment below and update the code to test integrationRuntimesGet
        //instance.integrationRuntimesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('integrationRuntimesGetConnectionInfo', function() {
      it('should call integrationRuntimesGetConnectionInfo successfully', function(done) {
        //uncomment below and update the code to test integrationRuntimesGetConnectionInfo
        //instance.integrationRuntimesGetConnectionInfo(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('integrationRuntimesGetMonitoringData', function() {
      it('should call integrationRuntimesGetMonitoringData successfully', function(done) {
        //uncomment below and update the code to test integrationRuntimesGetMonitoringData
        //instance.integrationRuntimesGetMonitoringData(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('integrationRuntimesGetStatus', function() {
      it('should call integrationRuntimesGetStatus successfully', function(done) {
        //uncomment below and update the code to test integrationRuntimesGetStatus
        //instance.integrationRuntimesGetStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('integrationRuntimesListAuthKeys', function() {
      it('should call integrationRuntimesListAuthKeys successfully', function(done) {
        //uncomment below and update the code to test integrationRuntimesListAuthKeys
        //instance.integrationRuntimesListAuthKeys(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('integrationRuntimesListByFactory', function() {
      it('should call integrationRuntimesListByFactory successfully', function(done) {
        //uncomment below and update the code to test integrationRuntimesListByFactory
        //instance.integrationRuntimesListByFactory(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('integrationRuntimesRegenerateAuthKey', function() {
      it('should call integrationRuntimesRegenerateAuthKey successfully', function(done) {
        //uncomment below and update the code to test integrationRuntimesRegenerateAuthKey
        //instance.integrationRuntimesRegenerateAuthKey(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('integrationRuntimesRemoveNode', function() {
      it('should call integrationRuntimesRemoveNode successfully', function(done) {
        //uncomment below and update the code to test integrationRuntimesRemoveNode
        //instance.integrationRuntimesRemoveNode(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('integrationRuntimesStart', function() {
      it('should call integrationRuntimesStart successfully', function(done) {
        //uncomment below and update the code to test integrationRuntimesStart
        //instance.integrationRuntimesStart(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('integrationRuntimesStop', function() {
      it('should call integrationRuntimesStop successfully', function(done) {
        //uncomment below and update the code to test integrationRuntimesStop
        //instance.integrationRuntimesStop(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('integrationRuntimesSyncCredentials', function() {
      it('should call integrationRuntimesSyncCredentials successfully', function(done) {
        //uncomment below and update the code to test integrationRuntimesSyncCredentials
        //instance.integrationRuntimesSyncCredentials(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('integrationRuntimesUpdate', function() {
      it('should call integrationRuntimesUpdate successfully', function(done) {
        //uncomment below and update the code to test integrationRuntimesUpdate
        //instance.integrationRuntimesUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('integrationRuntimesUpgrade', function() {
      it('should call integrationRuntimesUpgrade successfully', function(done) {
        //uncomment below and update the code to test integrationRuntimesUpgrade
        //instance.integrationRuntimesUpgrade(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
