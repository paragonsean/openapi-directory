/*
 * DataFactoryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-09-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CreateRunResponse;
import org.openapitools.client.model.ErrorResponse;
import org.openapitools.client.model.PipelineListResponse;
import org.openapitools.client.model.PipelineResource;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PipelinesApi
 */
@Disabled
public class PipelinesApiTest {

    private final PipelinesApi api = new PipelinesApi();

    /**
     * Creates or updates a pipeline.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pipelinesCreateOrUpdateTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String factoryName = null;
        String pipelineName = null;
        String apiVersion = null;
        PipelineResource pipeline = null;
        String ifMatch = null;
        PipelineResource response = api.pipelinesCreateOrUpdate(subscriptionId, resourceGroupName, factoryName, pipelineName, apiVersion, pipeline, ifMatch);
        // TODO: test validations
    }

    /**
     * Creates a run of a pipeline.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pipelinesCreateRunTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String factoryName = null;
        String pipelineName = null;
        String apiVersion = null;
        Map<String, Object> parameters = null;
        CreateRunResponse response = api.pipelinesCreateRun(subscriptionId, resourceGroupName, factoryName, pipelineName, apiVersion, parameters);
        // TODO: test validations
    }

    /**
     * Deletes a pipeline.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pipelinesDeleteTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String factoryName = null;
        String pipelineName = null;
        String apiVersion = null;
        api.pipelinesDelete(subscriptionId, resourceGroupName, factoryName, pipelineName, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets a pipeline.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pipelinesGetTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String factoryName = null;
        String pipelineName = null;
        String apiVersion = null;
        PipelineResource response = api.pipelinesGet(subscriptionId, resourceGroupName, factoryName, pipelineName, apiVersion);
        // TODO: test validations
    }

    /**
     * Lists pipelines.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pipelinesListByFactoryTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String factoryName = null;
        String apiVersion = null;
        PipelineListResponse response = api.pipelinesListByFactory(subscriptionId, resourceGroupName, factoryName, apiVersion);
        // TODO: test validations
    }

}
