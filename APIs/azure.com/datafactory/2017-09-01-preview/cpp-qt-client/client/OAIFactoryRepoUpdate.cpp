/**
 * DataFactoryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-09-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFactoryRepoUpdate.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFactoryRepoUpdate::OAIFactoryRepoUpdate(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFactoryRepoUpdate::OAIFactoryRepoUpdate() {
    this->initializeModel();
}

OAIFactoryRepoUpdate::~OAIFactoryRepoUpdate() {}

void OAIFactoryRepoUpdate::initializeModel() {

    m_factory_resource_id_isSet = false;
    m_factory_resource_id_isValid = false;

    m_resource_group_name_isSet = false;
    m_resource_group_name_isValid = false;

    m_vsts_configuration_isSet = false;
    m_vsts_configuration_isValid = false;
}

void OAIFactoryRepoUpdate::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFactoryRepoUpdate::fromJsonObject(QJsonObject json) {

    m_factory_resource_id_isValid = ::OpenAPI::fromJsonValue(m_factory_resource_id, json[QString("factoryResourceId")]);
    m_factory_resource_id_isSet = !json[QString("factoryResourceId")].isNull() && m_factory_resource_id_isValid;

    m_resource_group_name_isValid = ::OpenAPI::fromJsonValue(m_resource_group_name, json[QString("resourceGroupName")]);
    m_resource_group_name_isSet = !json[QString("resourceGroupName")].isNull() && m_resource_group_name_isValid;

    m_vsts_configuration_isValid = ::OpenAPI::fromJsonValue(m_vsts_configuration, json[QString("vstsConfiguration")]);
    m_vsts_configuration_isSet = !json[QString("vstsConfiguration")].isNull() && m_vsts_configuration_isValid;
}

QString OAIFactoryRepoUpdate::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFactoryRepoUpdate::asJsonObject() const {
    QJsonObject obj;
    if (m_factory_resource_id_isSet) {
        obj.insert(QString("factoryResourceId"), ::OpenAPI::toJsonValue(m_factory_resource_id));
    }
    if (m_resource_group_name_isSet) {
        obj.insert(QString("resourceGroupName"), ::OpenAPI::toJsonValue(m_resource_group_name));
    }
    if (m_vsts_configuration.isSet()) {
        obj.insert(QString("vstsConfiguration"), ::OpenAPI::toJsonValue(m_vsts_configuration));
    }
    return obj;
}

QString OAIFactoryRepoUpdate::getFactoryResourceId() const {
    return m_factory_resource_id;
}
void OAIFactoryRepoUpdate::setFactoryResourceId(const QString &factory_resource_id) {
    m_factory_resource_id = factory_resource_id;
    m_factory_resource_id_isSet = true;
}

bool OAIFactoryRepoUpdate::is_factory_resource_id_Set() const{
    return m_factory_resource_id_isSet;
}

bool OAIFactoryRepoUpdate::is_factory_resource_id_Valid() const{
    return m_factory_resource_id_isValid;
}

QString OAIFactoryRepoUpdate::getResourceGroupName() const {
    return m_resource_group_name;
}
void OAIFactoryRepoUpdate::setResourceGroupName(const QString &resource_group_name) {
    m_resource_group_name = resource_group_name;
    m_resource_group_name_isSet = true;
}

bool OAIFactoryRepoUpdate::is_resource_group_name_Set() const{
    return m_resource_group_name_isSet;
}

bool OAIFactoryRepoUpdate::is_resource_group_name_Valid() const{
    return m_resource_group_name_isValid;
}

OAIFactoryVSTSConfiguration OAIFactoryRepoUpdate::getVstsConfiguration() const {
    return m_vsts_configuration;
}
void OAIFactoryRepoUpdate::setVstsConfiguration(const OAIFactoryVSTSConfiguration &vsts_configuration) {
    m_vsts_configuration = vsts_configuration;
    m_vsts_configuration_isSet = true;
}

bool OAIFactoryRepoUpdate::is_vsts_configuration_Set() const{
    return m_vsts_configuration_isSet;
}

bool OAIFactoryRepoUpdate::is_vsts_configuration_Valid() const{
    return m_vsts_configuration_isValid;
}

bool OAIFactoryRepoUpdate::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_factory_resource_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_group_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_vsts_configuration.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFactoryRepoUpdate::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
