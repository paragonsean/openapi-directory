/**
 * DataFactoryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-09-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITriggerRun.h
 *
 * Trigger runs.
 */

#ifndef OAITriggerRun_H
#define OAITriggerRun_H

#include <QJsonObject>

#include "OAIObject.h"
#include <QDateTime>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITriggerRun : public OAIObject {
public:
    OAITriggerRun();
    OAITriggerRun(QString json);
    ~OAITriggerRun() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getMessage() const;
    void setMessage(const QString &message);
    bool is_message_Set() const;
    bool is_message_Valid() const;

    QMap<QString, QString> getProperties() const;
    void setProperties(const QMap<QString, QString> &properties);
    bool is_properties_Set() const;
    bool is_properties_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getTriggerName() const;
    void setTriggerName(const QString &trigger_name);
    bool is_trigger_name_Set() const;
    bool is_trigger_name_Valid() const;

    QString getTriggerRunId() const;
    void setTriggerRunId(const QString &trigger_run_id);
    bool is_trigger_run_id_Set() const;
    bool is_trigger_run_id_Valid() const;

    QDateTime getTriggerRunTimestamp() const;
    void setTriggerRunTimestamp(const QDateTime &trigger_run_timestamp);
    bool is_trigger_run_timestamp_Set() const;
    bool is_trigger_run_timestamp_Valid() const;

    QString getTriggerType() const;
    void setTriggerType(const QString &trigger_type);
    bool is_trigger_type_Set() const;
    bool is_trigger_type_Valid() const;

    QMap<QString, QString> getTriggeredPipelines() const;
    void setTriggeredPipelines(const QMap<QString, QString> &triggered_pipelines);
    bool is_triggered_pipelines_Set() const;
    bool is_triggered_pipelines_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_message;
    bool m_message_isSet;
    bool m_message_isValid;

    QMap<QString, QString> m_properties;
    bool m_properties_isSet;
    bool m_properties_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_trigger_name;
    bool m_trigger_name_isSet;
    bool m_trigger_name_isValid;

    QString m_trigger_run_id;
    bool m_trigger_run_id_isSet;
    bool m_trigger_run_id_isValid;

    QDateTime m_trigger_run_timestamp;
    bool m_trigger_run_timestamp_isSet;
    bool m_trigger_run_timestamp_isValid;

    QString m_trigger_type;
    bool m_trigger_type_isSet;
    bool m_trigger_type_isValid;

    QMap<QString, QString> m_triggered_pipelines;
    bool m_triggered_pipelines_isSet;
    bool m_triggered_pipelines_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITriggerRun)

#endif // OAITriggerRun_H
