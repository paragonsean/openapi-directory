/**
 * DataFactoryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-09-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateIntegrationRuntimeRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateIntegrationRuntimeRequest::OAIUpdateIntegrationRuntimeRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateIntegrationRuntimeRequest::OAIUpdateIntegrationRuntimeRequest() {
    this->initializeModel();
}

OAIUpdateIntegrationRuntimeRequest::~OAIUpdateIntegrationRuntimeRequest() {}

void OAIUpdateIntegrationRuntimeRequest::initializeModel() {

    m_auto_update_isSet = false;
    m_auto_update_isValid = false;

    m_update_delay_offset_isSet = false;
    m_update_delay_offset_isValid = false;
}

void OAIUpdateIntegrationRuntimeRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateIntegrationRuntimeRequest::fromJsonObject(QJsonObject json) {

    m_auto_update_isValid = ::OpenAPI::fromJsonValue(m_auto_update, json[QString("autoUpdate")]);
    m_auto_update_isSet = !json[QString("autoUpdate")].isNull() && m_auto_update_isValid;

    m_update_delay_offset_isValid = ::OpenAPI::fromJsonValue(m_update_delay_offset, json[QString("updateDelayOffset")]);
    m_update_delay_offset_isSet = !json[QString("updateDelayOffset")].isNull() && m_update_delay_offset_isValid;
}

QString OAIUpdateIntegrationRuntimeRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateIntegrationRuntimeRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_auto_update_isSet) {
        obj.insert(QString("autoUpdate"), ::OpenAPI::toJsonValue(m_auto_update));
    }
    if (m_update_delay_offset_isSet) {
        obj.insert(QString("updateDelayOffset"), ::OpenAPI::toJsonValue(m_update_delay_offset));
    }
    return obj;
}

QString OAIUpdateIntegrationRuntimeRequest::getAutoUpdate() const {
    return m_auto_update;
}
void OAIUpdateIntegrationRuntimeRequest::setAutoUpdate(const QString &auto_update) {
    m_auto_update = auto_update;
    m_auto_update_isSet = true;
}

bool OAIUpdateIntegrationRuntimeRequest::is_auto_update_Set() const{
    return m_auto_update_isSet;
}

bool OAIUpdateIntegrationRuntimeRequest::is_auto_update_Valid() const{
    return m_auto_update_isValid;
}

QString OAIUpdateIntegrationRuntimeRequest::getUpdateDelayOffset() const {
    return m_update_delay_offset;
}
void OAIUpdateIntegrationRuntimeRequest::setUpdateDelayOffset(const QString &update_delay_offset) {
    m_update_delay_offset = update_delay_offset;
    m_update_delay_offset_isSet = true;
}

bool OAIUpdateIntegrationRuntimeRequest::is_update_delay_offset_Set() const{
    return m_update_delay_offset_isSet;
}

bool OAIUpdateIntegrationRuntimeRequest::is_update_delay_offset_Valid() const{
    return m_update_delay_offset_isValid;
}

bool OAIUpdateIntegrationRuntimeRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_auto_update_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_delay_offset_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateIntegrationRuntimeRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
