/**
 * DataFactoryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-09-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPipelineRunQueryOrderBy.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPipelineRunQueryOrderBy::OAIPipelineRunQueryOrderBy(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPipelineRunQueryOrderBy::OAIPipelineRunQueryOrderBy() {
    this->initializeModel();
}

OAIPipelineRunQueryOrderBy::~OAIPipelineRunQueryOrderBy() {}

void OAIPipelineRunQueryOrderBy::initializeModel() {

    m_order_isSet = false;
    m_order_isValid = false;

    m_order_by_isSet = false;
    m_order_by_isValid = false;
}

void OAIPipelineRunQueryOrderBy::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPipelineRunQueryOrderBy::fromJsonObject(QJsonObject json) {

    m_order_isValid = ::OpenAPI::fromJsonValue(m_order, json[QString("order")]);
    m_order_isSet = !json[QString("order")].isNull() && m_order_isValid;

    m_order_by_isValid = ::OpenAPI::fromJsonValue(m_order_by, json[QString("orderBy")]);
    m_order_by_isSet = !json[QString("orderBy")].isNull() && m_order_by_isValid;
}

QString OAIPipelineRunQueryOrderBy::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPipelineRunQueryOrderBy::asJsonObject() const {
    QJsonObject obj;
    if (m_order_isSet) {
        obj.insert(QString("order"), ::OpenAPI::toJsonValue(m_order));
    }
    if (m_order_by_isSet) {
        obj.insert(QString("orderBy"), ::OpenAPI::toJsonValue(m_order_by));
    }
    return obj;
}

QString OAIPipelineRunQueryOrderBy::getOrder() const {
    return m_order;
}
void OAIPipelineRunQueryOrderBy::setOrder(const QString &order) {
    m_order = order;
    m_order_isSet = true;
}

bool OAIPipelineRunQueryOrderBy::is_order_Set() const{
    return m_order_isSet;
}

bool OAIPipelineRunQueryOrderBy::is_order_Valid() const{
    return m_order_isValid;
}

QString OAIPipelineRunQueryOrderBy::getOrderBy() const {
    return m_order_by;
}
void OAIPipelineRunQueryOrderBy::setOrderBy(const QString &order_by) {
    m_order_by = order_by;
    m_order_by_isSet = true;
}

bool OAIPipelineRunQueryOrderBy::is_order_by_Set() const{
    return m_order_by_isSet;
}

bool OAIPipelineRunQueryOrderBy::is_order_by_Valid() const{
    return m_order_by_isValid;
}

bool OAIPipelineRunQueryOrderBy::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_order_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_by_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPipelineRunQueryOrderBy::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_order_isValid && m_order_by_isValid && true;
}

} // namespace OpenAPI
