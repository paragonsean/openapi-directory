# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ActivityRun(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, activity_name: str=None, activity_run_end: datetime=None, activity_run_id: str=None, activity_run_start: datetime=None, activity_type: str=None, duration_in_ms: int=None, error: object=None, input: object=None, linked_service_name: str=None, output: object=None, pipeline_name: str=None, pipeline_run_id: str=None, status: str=None):
        """ActivityRun - a model defined in OpenAPI

        :param activity_name: The activity_name of this ActivityRun.
        :param activity_run_end: The activity_run_end of this ActivityRun.
        :param activity_run_id: The activity_run_id of this ActivityRun.
        :param activity_run_start: The activity_run_start of this ActivityRun.
        :param activity_type: The activity_type of this ActivityRun.
        :param duration_in_ms: The duration_in_ms of this ActivityRun.
        :param error: The error of this ActivityRun.
        :param input: The input of this ActivityRun.
        :param linked_service_name: The linked_service_name of this ActivityRun.
        :param output: The output of this ActivityRun.
        :param pipeline_name: The pipeline_name of this ActivityRun.
        :param pipeline_run_id: The pipeline_run_id of this ActivityRun.
        :param status: The status of this ActivityRun.
        """
        self.openapi_types = {
            'activity_name': str,
            'activity_run_end': datetime,
            'activity_run_id': str,
            'activity_run_start': datetime,
            'activity_type': str,
            'duration_in_ms': int,
            'error': object,
            'input': object,
            'linked_service_name': str,
            'output': object,
            'pipeline_name': str,
            'pipeline_run_id': str,
            'status': str
        }

        self.attribute_map = {
            'activity_name': 'activityName',
            'activity_run_end': 'activityRunEnd',
            'activity_run_id': 'activityRunId',
            'activity_run_start': 'activityRunStart',
            'activity_type': 'activityType',
            'duration_in_ms': 'durationInMs',
            'error': 'error',
            'input': 'input',
            'linked_service_name': 'linkedServiceName',
            'output': 'output',
            'pipeline_name': 'pipelineName',
            'pipeline_run_id': 'pipelineRunId',
            'status': 'status'
        }

        self._activity_name = activity_name
        self._activity_run_end = activity_run_end
        self._activity_run_id = activity_run_id
        self._activity_run_start = activity_run_start
        self._activity_type = activity_type
        self._duration_in_ms = duration_in_ms
        self._error = error
        self._input = input
        self._linked_service_name = linked_service_name
        self._output = output
        self._pipeline_name = pipeline_name
        self._pipeline_run_id = pipeline_run_id
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ActivityRun':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ActivityRun of this ActivityRun.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def activity_name(self):
        """Gets the activity_name of this ActivityRun.

        The name of the activity.

        :return: The activity_name of this ActivityRun.
        :rtype: str
        """
        return self._activity_name

    @activity_name.setter
    def activity_name(self, activity_name):
        """Sets the activity_name of this ActivityRun.

        The name of the activity.

        :param activity_name: The activity_name of this ActivityRun.
        :type activity_name: str
        """

        self._activity_name = activity_name

    @property
    def activity_run_end(self):
        """Gets the activity_run_end of this ActivityRun.

        The end time of the activity run in 'ISO 8601' format.

        :return: The activity_run_end of this ActivityRun.
        :rtype: datetime
        """
        return self._activity_run_end

    @activity_run_end.setter
    def activity_run_end(self, activity_run_end):
        """Sets the activity_run_end of this ActivityRun.

        The end time of the activity run in 'ISO 8601' format.

        :param activity_run_end: The activity_run_end of this ActivityRun.
        :type activity_run_end: datetime
        """

        self._activity_run_end = activity_run_end

    @property
    def activity_run_id(self):
        """Gets the activity_run_id of this ActivityRun.

        The id of the activity run.

        :return: The activity_run_id of this ActivityRun.
        :rtype: str
        """
        return self._activity_run_id

    @activity_run_id.setter
    def activity_run_id(self, activity_run_id):
        """Sets the activity_run_id of this ActivityRun.

        The id of the activity run.

        :param activity_run_id: The activity_run_id of this ActivityRun.
        :type activity_run_id: str
        """

        self._activity_run_id = activity_run_id

    @property
    def activity_run_start(self):
        """Gets the activity_run_start of this ActivityRun.

        The start time of the activity run in 'ISO 8601' format.

        :return: The activity_run_start of this ActivityRun.
        :rtype: datetime
        """
        return self._activity_run_start

    @activity_run_start.setter
    def activity_run_start(self, activity_run_start):
        """Sets the activity_run_start of this ActivityRun.

        The start time of the activity run in 'ISO 8601' format.

        :param activity_run_start: The activity_run_start of this ActivityRun.
        :type activity_run_start: datetime
        """

        self._activity_run_start = activity_run_start

    @property
    def activity_type(self):
        """Gets the activity_type of this ActivityRun.

        The type of the activity.

        :return: The activity_type of this ActivityRun.
        :rtype: str
        """
        return self._activity_type

    @activity_type.setter
    def activity_type(self, activity_type):
        """Sets the activity_type of this ActivityRun.

        The type of the activity.

        :param activity_type: The activity_type of this ActivityRun.
        :type activity_type: str
        """

        self._activity_type = activity_type

    @property
    def duration_in_ms(self):
        """Gets the duration_in_ms of this ActivityRun.

        The duration of the activity run.

        :return: The duration_in_ms of this ActivityRun.
        :rtype: int
        """
        return self._duration_in_ms

    @duration_in_ms.setter
    def duration_in_ms(self, duration_in_ms):
        """Sets the duration_in_ms of this ActivityRun.

        The duration of the activity run.

        :param duration_in_ms: The duration_in_ms of this ActivityRun.
        :type duration_in_ms: int
        """

        self._duration_in_ms = duration_in_ms

    @property
    def error(self):
        """Gets the error of this ActivityRun.

        The error if any from the activity run.

        :return: The error of this ActivityRun.
        :rtype: object
        """
        return self._error

    @error.setter
    def error(self, error):
        """Sets the error of this ActivityRun.

        The error if any from the activity run.

        :param error: The error of this ActivityRun.
        :type error: object
        """

        self._error = error

    @property
    def input(self):
        """Gets the input of this ActivityRun.

        The input for the activity.

        :return: The input of this ActivityRun.
        :rtype: object
        """
        return self._input

    @input.setter
    def input(self, input):
        """Sets the input of this ActivityRun.

        The input for the activity.

        :param input: The input of this ActivityRun.
        :type input: object
        """

        self._input = input

    @property
    def linked_service_name(self):
        """Gets the linked_service_name of this ActivityRun.

        The name of the compute linked service.

        :return: The linked_service_name of this ActivityRun.
        :rtype: str
        """
        return self._linked_service_name

    @linked_service_name.setter
    def linked_service_name(self, linked_service_name):
        """Sets the linked_service_name of this ActivityRun.

        The name of the compute linked service.

        :param linked_service_name: The linked_service_name of this ActivityRun.
        :type linked_service_name: str
        """

        self._linked_service_name = linked_service_name

    @property
    def output(self):
        """Gets the output of this ActivityRun.

        The output for the activity.

        :return: The output of this ActivityRun.
        :rtype: object
        """
        return self._output

    @output.setter
    def output(self, output):
        """Sets the output of this ActivityRun.

        The output for the activity.

        :param output: The output of this ActivityRun.
        :type output: object
        """

        self._output = output

    @property
    def pipeline_name(self):
        """Gets the pipeline_name of this ActivityRun.

        The name of the pipeline.

        :return: The pipeline_name of this ActivityRun.
        :rtype: str
        """
        return self._pipeline_name

    @pipeline_name.setter
    def pipeline_name(self, pipeline_name):
        """Sets the pipeline_name of this ActivityRun.

        The name of the pipeline.

        :param pipeline_name: The pipeline_name of this ActivityRun.
        :type pipeline_name: str
        """

        self._pipeline_name = pipeline_name

    @property
    def pipeline_run_id(self):
        """Gets the pipeline_run_id of this ActivityRun.

        The id of the pipeline run.

        :return: The pipeline_run_id of this ActivityRun.
        :rtype: str
        """
        return self._pipeline_run_id

    @pipeline_run_id.setter
    def pipeline_run_id(self, pipeline_run_id):
        """Sets the pipeline_run_id of this ActivityRun.

        The id of the pipeline run.

        :param pipeline_run_id: The pipeline_run_id of this ActivityRun.
        :type pipeline_run_id: str
        """

        self._pipeline_run_id = pipeline_run_id

    @property
    def status(self):
        """Gets the status of this ActivityRun.

        The status of the activity run.

        :return: The status of this ActivityRun.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this ActivityRun.

        The status of the activity run.

        :param status: The status of this ActivityRun.
        :type status: str
        """

        self._status = status
