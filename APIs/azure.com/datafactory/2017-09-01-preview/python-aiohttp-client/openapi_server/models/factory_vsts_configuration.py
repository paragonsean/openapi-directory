# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class FactoryVSTSConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_name: str=None, collaboration_branch: str=None, last_commit_id: str=None, project_name: str=None, repository_name: str=None, root_folder: str=None, tenant_id: str=None):
        """FactoryVSTSConfiguration - a model defined in OpenAPI

        :param account_name: The account_name of this FactoryVSTSConfiguration.
        :param collaboration_branch: The collaboration_branch of this FactoryVSTSConfiguration.
        :param last_commit_id: The last_commit_id of this FactoryVSTSConfiguration.
        :param project_name: The project_name of this FactoryVSTSConfiguration.
        :param repository_name: The repository_name of this FactoryVSTSConfiguration.
        :param root_folder: The root_folder of this FactoryVSTSConfiguration.
        :param tenant_id: The tenant_id of this FactoryVSTSConfiguration.
        """
        self.openapi_types = {
            'account_name': str,
            'collaboration_branch': str,
            'last_commit_id': str,
            'project_name': str,
            'repository_name': str,
            'root_folder': str,
            'tenant_id': str
        }

        self.attribute_map = {
            'account_name': 'accountName',
            'collaboration_branch': 'collaborationBranch',
            'last_commit_id': 'lastCommitId',
            'project_name': 'projectName',
            'repository_name': 'repositoryName',
            'root_folder': 'rootFolder',
            'tenant_id': 'tenantId'
        }

        self._account_name = account_name
        self._collaboration_branch = collaboration_branch
        self._last_commit_id = last_commit_id
        self._project_name = project_name
        self._repository_name = repository_name
        self._root_folder = root_folder
        self._tenant_id = tenant_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FactoryVSTSConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FactoryVSTSConfiguration of this FactoryVSTSConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_name(self):
        """Gets the account_name of this FactoryVSTSConfiguration.

        VSTS account name.

        :return: The account_name of this FactoryVSTSConfiguration.
        :rtype: str
        """
        return self._account_name

    @account_name.setter
    def account_name(self, account_name):
        """Sets the account_name of this FactoryVSTSConfiguration.

        VSTS account name.

        :param account_name: The account_name of this FactoryVSTSConfiguration.
        :type account_name: str
        """

        self._account_name = account_name

    @property
    def collaboration_branch(self):
        """Gets the collaboration_branch of this FactoryVSTSConfiguration.

        VSTS collaboration branch.

        :return: The collaboration_branch of this FactoryVSTSConfiguration.
        :rtype: str
        """
        return self._collaboration_branch

    @collaboration_branch.setter
    def collaboration_branch(self, collaboration_branch):
        """Sets the collaboration_branch of this FactoryVSTSConfiguration.

        VSTS collaboration branch.

        :param collaboration_branch: The collaboration_branch of this FactoryVSTSConfiguration.
        :type collaboration_branch: str
        """

        self._collaboration_branch = collaboration_branch

    @property
    def last_commit_id(self):
        """Gets the last_commit_id of this FactoryVSTSConfiguration.

        VSTS last commit id.

        :return: The last_commit_id of this FactoryVSTSConfiguration.
        :rtype: str
        """
        return self._last_commit_id

    @last_commit_id.setter
    def last_commit_id(self, last_commit_id):
        """Sets the last_commit_id of this FactoryVSTSConfiguration.

        VSTS last commit id.

        :param last_commit_id: The last_commit_id of this FactoryVSTSConfiguration.
        :type last_commit_id: str
        """

        self._last_commit_id = last_commit_id

    @property
    def project_name(self):
        """Gets the project_name of this FactoryVSTSConfiguration.

        VSTS project name.

        :return: The project_name of this FactoryVSTSConfiguration.
        :rtype: str
        """
        return self._project_name

    @project_name.setter
    def project_name(self, project_name):
        """Sets the project_name of this FactoryVSTSConfiguration.

        VSTS project name.

        :param project_name: The project_name of this FactoryVSTSConfiguration.
        :type project_name: str
        """

        self._project_name = project_name

    @property
    def repository_name(self):
        """Gets the repository_name of this FactoryVSTSConfiguration.

        VSTS repository name.

        :return: The repository_name of this FactoryVSTSConfiguration.
        :rtype: str
        """
        return self._repository_name

    @repository_name.setter
    def repository_name(self, repository_name):
        """Sets the repository_name of this FactoryVSTSConfiguration.

        VSTS repository name.

        :param repository_name: The repository_name of this FactoryVSTSConfiguration.
        :type repository_name: str
        """

        self._repository_name = repository_name

    @property
    def root_folder(self):
        """Gets the root_folder of this FactoryVSTSConfiguration.

        VSTS root folder.

        :return: The root_folder of this FactoryVSTSConfiguration.
        :rtype: str
        """
        return self._root_folder

    @root_folder.setter
    def root_folder(self, root_folder):
        """Sets the root_folder of this FactoryVSTSConfiguration.

        VSTS root folder.

        :param root_folder: The root_folder of this FactoryVSTSConfiguration.
        :type root_folder: str
        """

        self._root_folder = root_folder

    @property
    def tenant_id(self):
        """Gets the tenant_id of this FactoryVSTSConfiguration.

        VSTS tenant id.

        :return: The tenant_id of this FactoryVSTSConfiguration.
        :rtype: str
        """
        return self._tenant_id

    @tenant_id.setter
    def tenant_id(self, tenant_id):
        """Sets the tenant_id of this FactoryVSTSConfiguration.

        VSTS tenant id.

        :param tenant_id: The tenant_id of this FactoryVSTSConfiguration.
        :type tenant_id: str
        """

        self._tenant_id = tenant_id
