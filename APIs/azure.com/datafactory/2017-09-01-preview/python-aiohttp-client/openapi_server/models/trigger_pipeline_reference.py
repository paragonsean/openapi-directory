# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.pipeline_reference import PipelineReference
from openapi_server import util


class TriggerPipelineReference(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, parameters: Dict[str, object]=None, pipeline_reference: PipelineReference=None):
        """TriggerPipelineReference - a model defined in OpenAPI

        :param parameters: The parameters of this TriggerPipelineReference.
        :param pipeline_reference: The pipeline_reference of this TriggerPipelineReference.
        """
        self.openapi_types = {
            'parameters': Dict[str, object],
            'pipeline_reference': PipelineReference
        }

        self.attribute_map = {
            'parameters': 'parameters',
            'pipeline_reference': 'pipelineReference'
        }

        self._parameters = parameters
        self._pipeline_reference = pipeline_reference

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TriggerPipelineReference':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TriggerPipelineReference of this TriggerPipelineReference.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def parameters(self):
        """Gets the parameters of this TriggerPipelineReference.

        An object mapping parameter names to argument values.

        :return: The parameters of this TriggerPipelineReference.
        :rtype: Dict[str, object]
        """
        return self._parameters

    @parameters.setter
    def parameters(self, parameters):
        """Sets the parameters of this TriggerPipelineReference.

        An object mapping parameter names to argument values.

        :param parameters: The parameters of this TriggerPipelineReference.
        :type parameters: Dict[str, object]
        """

        self._parameters = parameters

    @property
    def pipeline_reference(self):
        """Gets the pipeline_reference of this TriggerPipelineReference.


        :return: The pipeline_reference of this TriggerPipelineReference.
        :rtype: PipelineReference
        """
        return self._pipeline_reference

    @pipeline_reference.setter
    def pipeline_reference(self, pipeline_reference):
        """Sets the pipeline_reference of this TriggerPipelineReference.


        :param pipeline_reference: The pipeline_reference of this TriggerPipelineReference.
        :type pipeline_reference: PipelineReference
        """

        self._pipeline_reference = pipeline_reference
