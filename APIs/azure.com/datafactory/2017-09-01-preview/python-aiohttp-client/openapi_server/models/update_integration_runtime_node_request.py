# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateIntegrationRuntimeNodeRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, concurrent_jobs_limit: int=None):
        """UpdateIntegrationRuntimeNodeRequest - a model defined in OpenAPI

        :param concurrent_jobs_limit: The concurrent_jobs_limit of this UpdateIntegrationRuntimeNodeRequest.
        """
        self.openapi_types = {
            'concurrent_jobs_limit': int
        }

        self.attribute_map = {
            'concurrent_jobs_limit': 'concurrentJobsLimit'
        }

        self._concurrent_jobs_limit = concurrent_jobs_limit

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateIntegrationRuntimeNodeRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateIntegrationRuntimeNodeRequest of this UpdateIntegrationRuntimeNodeRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def concurrent_jobs_limit(self):
        """Gets the concurrent_jobs_limit of this UpdateIntegrationRuntimeNodeRequest.

        The number of concurrent jobs permitted to run on the integration runtime node. Values between 1 and maxConcurrentJobs(inclusive) are allowed.

        :return: The concurrent_jobs_limit of this UpdateIntegrationRuntimeNodeRequest.
        :rtype: int
        """
        return self._concurrent_jobs_limit

    @concurrent_jobs_limit.setter
    def concurrent_jobs_limit(self, concurrent_jobs_limit):
        """Sets the concurrent_jobs_limit of this UpdateIntegrationRuntimeNodeRequest.

        The number of concurrent jobs permitted to run on the integration runtime node. Values between 1 and maxConcurrentJobs(inclusive) are allowed.

        :param concurrent_jobs_limit: The concurrent_jobs_limit of this UpdateIntegrationRuntimeNodeRequest.
        :type concurrent_jobs_limit: int
        """
        if concurrent_jobs_limit is not None and concurrent_jobs_limit < 1:
            raise ValueError("Invalid value for `concurrent_jobs_limit`, must be a value greater than or equal to `1`")

        self._concurrent_jobs_limit = concurrent_jobs_limit
