# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class IntegrationRuntimesGetConnectionInfo200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, host_service_uri: str=None, identity_cert_thumbprint: str=None, is_identity_cert_exprired: bool=None, public_key: str=None, service_token: str=None, version: str=None):
        """IntegrationRuntimesGetConnectionInfo200Response - a model defined in OpenAPI

        :param host_service_uri: The host_service_uri of this IntegrationRuntimesGetConnectionInfo200Response.
        :param identity_cert_thumbprint: The identity_cert_thumbprint of this IntegrationRuntimesGetConnectionInfo200Response.
        :param is_identity_cert_exprired: The is_identity_cert_exprired of this IntegrationRuntimesGetConnectionInfo200Response.
        :param public_key: The public_key of this IntegrationRuntimesGetConnectionInfo200Response.
        :param service_token: The service_token of this IntegrationRuntimesGetConnectionInfo200Response.
        :param version: The version of this IntegrationRuntimesGetConnectionInfo200Response.
        """
        self.openapi_types = {
            'host_service_uri': str,
            'identity_cert_thumbprint': str,
            'is_identity_cert_exprired': bool,
            'public_key': str,
            'service_token': str,
            'version': str
        }

        self.attribute_map = {
            'host_service_uri': 'hostServiceUri',
            'identity_cert_thumbprint': 'identityCertThumbprint',
            'is_identity_cert_exprired': 'isIdentityCertExprired',
            'public_key': 'publicKey',
            'service_token': 'serviceToken',
            'version': 'version'
        }

        self._host_service_uri = host_service_uri
        self._identity_cert_thumbprint = identity_cert_thumbprint
        self._is_identity_cert_exprired = is_identity_cert_exprired
        self._public_key = public_key
        self._service_token = service_token
        self._version = version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IntegrationRuntimesGetConnectionInfo200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IntegrationRuntimes_GetConnectionInfo_200_response of this IntegrationRuntimesGetConnectionInfo200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def host_service_uri(self):
        """Gets the host_service_uri of this IntegrationRuntimesGetConnectionInfo200Response.

        The on-premises integration runtime host URL.

        :return: The host_service_uri of this IntegrationRuntimesGetConnectionInfo200Response.
        :rtype: str
        """
        return self._host_service_uri

    @host_service_uri.setter
    def host_service_uri(self, host_service_uri):
        """Sets the host_service_uri of this IntegrationRuntimesGetConnectionInfo200Response.

        The on-premises integration runtime host URL.

        :param host_service_uri: The host_service_uri of this IntegrationRuntimesGetConnectionInfo200Response.
        :type host_service_uri: str
        """

        self._host_service_uri = host_service_uri

    @property
    def identity_cert_thumbprint(self):
        """Gets the identity_cert_thumbprint of this IntegrationRuntimesGetConnectionInfo200Response.

        The integration runtime SSL certificate thumbprint. Click-Once application uses it to do server validation.

        :return: The identity_cert_thumbprint of this IntegrationRuntimesGetConnectionInfo200Response.
        :rtype: str
        """
        return self._identity_cert_thumbprint

    @identity_cert_thumbprint.setter
    def identity_cert_thumbprint(self, identity_cert_thumbprint):
        """Sets the identity_cert_thumbprint of this IntegrationRuntimesGetConnectionInfo200Response.

        The integration runtime SSL certificate thumbprint. Click-Once application uses it to do server validation.

        :param identity_cert_thumbprint: The identity_cert_thumbprint of this IntegrationRuntimesGetConnectionInfo200Response.
        :type identity_cert_thumbprint: str
        """

        self._identity_cert_thumbprint = identity_cert_thumbprint

    @property
    def is_identity_cert_exprired(self):
        """Gets the is_identity_cert_exprired of this IntegrationRuntimesGetConnectionInfo200Response.

        Whether the identity certificate is expired.

        :return: The is_identity_cert_exprired of this IntegrationRuntimesGetConnectionInfo200Response.
        :rtype: bool
        """
        return self._is_identity_cert_exprired

    @is_identity_cert_exprired.setter
    def is_identity_cert_exprired(self, is_identity_cert_exprired):
        """Sets the is_identity_cert_exprired of this IntegrationRuntimesGetConnectionInfo200Response.

        Whether the identity certificate is expired.

        :param is_identity_cert_exprired: The is_identity_cert_exprired of this IntegrationRuntimesGetConnectionInfo200Response.
        :type is_identity_cert_exprired: bool
        """

        self._is_identity_cert_exprired = is_identity_cert_exprired

    @property
    def public_key(self):
        """Gets the public_key of this IntegrationRuntimesGetConnectionInfo200Response.

        The public key for encrypting a credential when transferring the credential to the integration runtime.

        :return: The public_key of this IntegrationRuntimesGetConnectionInfo200Response.
        :rtype: str
        """
        return self._public_key

    @public_key.setter
    def public_key(self, public_key):
        """Sets the public_key of this IntegrationRuntimesGetConnectionInfo200Response.

        The public key for encrypting a credential when transferring the credential to the integration runtime.

        :param public_key: The public_key of this IntegrationRuntimesGetConnectionInfo200Response.
        :type public_key: str
        """

        self._public_key = public_key

    @property
    def service_token(self):
        """Gets the service_token of this IntegrationRuntimesGetConnectionInfo200Response.

        The token generated in service. Callers use this token to authenticate to integration runtime.

        :return: The service_token of this IntegrationRuntimesGetConnectionInfo200Response.
        :rtype: str
        """
        return self._service_token

    @service_token.setter
    def service_token(self, service_token):
        """Sets the service_token of this IntegrationRuntimesGetConnectionInfo200Response.

        The token generated in service. Callers use this token to authenticate to integration runtime.

        :param service_token: The service_token of this IntegrationRuntimesGetConnectionInfo200Response.
        :type service_token: str
        """

        self._service_token = service_token

    @property
    def version(self):
        """Gets the version of this IntegrationRuntimesGetConnectionInfo200Response.

        The integration runtime version.

        :return: The version of this IntegrationRuntimesGetConnectionInfo200Response.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this IntegrationRuntimesGetConnectionInfo200Response.

        The integration runtime version.

        :param version: The version of this IntegrationRuntimesGetConnectionInfo200Response.
        :type version: str
        """

        self._version = version
