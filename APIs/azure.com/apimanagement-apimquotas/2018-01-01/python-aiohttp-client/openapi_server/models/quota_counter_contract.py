# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.quota_counter_value_contract_properties import QuotaCounterValueContractProperties
from openapi_server import util


class QuotaCounterContract(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, counter_key: str=None, period_end_time: datetime=None, period_key: str=None, period_start_time: datetime=None, value: QuotaCounterValueContractProperties=None):
        """QuotaCounterContract - a model defined in OpenAPI

        :param counter_key: The counter_key of this QuotaCounterContract.
        :param period_end_time: The period_end_time of this QuotaCounterContract.
        :param period_key: The period_key of this QuotaCounterContract.
        :param period_start_time: The period_start_time of this QuotaCounterContract.
        :param value: The value of this QuotaCounterContract.
        """
        self.openapi_types = {
            'counter_key': str,
            'period_end_time': datetime,
            'period_key': str,
            'period_start_time': datetime,
            'value': QuotaCounterValueContractProperties
        }

        self.attribute_map = {
            'counter_key': 'counterKey',
            'period_end_time': 'periodEndTime',
            'period_key': 'periodKey',
            'period_start_time': 'periodStartTime',
            'value': 'value'
        }

        self._counter_key = counter_key
        self._period_end_time = period_end_time
        self._period_key = period_key
        self._period_start_time = period_start_time
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'QuotaCounterContract':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The QuotaCounterContract of this QuotaCounterContract.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def counter_key(self):
        """Gets the counter_key of this QuotaCounterContract.

        The Key value of the Counter. Must not be empty.

        :return: The counter_key of this QuotaCounterContract.
        :rtype: str
        """
        return self._counter_key

    @counter_key.setter
    def counter_key(self, counter_key):
        """Sets the counter_key of this QuotaCounterContract.

        The Key value of the Counter. Must not be empty.

        :param counter_key: The counter_key of this QuotaCounterContract.
        :type counter_key: str
        """
        if counter_key is None:
            raise ValueError("Invalid value for `counter_key`, must not be `None`")
        if counter_key is not None and len(counter_key) < 1:
            raise ValueError("Invalid value for `counter_key`, length must be greater than or equal to `1`")

        self._counter_key = counter_key

    @property
    def period_end_time(self):
        """Gets the period_end_time of this QuotaCounterContract.

        The date of the end of Counter Period. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard. 

        :return: The period_end_time of this QuotaCounterContract.
        :rtype: datetime
        """
        return self._period_end_time

    @period_end_time.setter
    def period_end_time(self, period_end_time):
        """Sets the period_end_time of this QuotaCounterContract.

        The date of the end of Counter Period. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard. 

        :param period_end_time: The period_end_time of this QuotaCounterContract.
        :type period_end_time: datetime
        """
        if period_end_time is None:
            raise ValueError("Invalid value for `period_end_time`, must not be `None`")

        self._period_end_time = period_end_time

    @property
    def period_key(self):
        """Gets the period_key of this QuotaCounterContract.

        Identifier of the Period for which the counter was collected. Must not be empty.

        :return: The period_key of this QuotaCounterContract.
        :rtype: str
        """
        return self._period_key

    @period_key.setter
    def period_key(self, period_key):
        """Sets the period_key of this QuotaCounterContract.

        Identifier of the Period for which the counter was collected. Must not be empty.

        :param period_key: The period_key of this QuotaCounterContract.
        :type period_key: str
        """
        if period_key is None:
            raise ValueError("Invalid value for `period_key`, must not be `None`")
        if period_key is not None and len(period_key) < 1:
            raise ValueError("Invalid value for `period_key`, length must be greater than or equal to `1`")

        self._period_key = period_key

    @property
    def period_start_time(self):
        """Gets the period_start_time of this QuotaCounterContract.

        The date of the start of Counter Period. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard. 

        :return: The period_start_time of this QuotaCounterContract.
        :rtype: datetime
        """
        return self._period_start_time

    @period_start_time.setter
    def period_start_time(self, period_start_time):
        """Sets the period_start_time of this QuotaCounterContract.

        The date of the start of Counter Period. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard. 

        :param period_start_time: The period_start_time of this QuotaCounterContract.
        :type period_start_time: datetime
        """
        if period_start_time is None:
            raise ValueError("Invalid value for `period_start_time`, must not be `None`")

        self._period_start_time = period_start_time

    @property
    def value(self):
        """Gets the value of this QuotaCounterContract.


        :return: The value of this QuotaCounterContract.
        :rtype: QuotaCounterValueContractProperties
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this QuotaCounterContract.


        :param value: The value of this QuotaCounterContract.
        :type value: QuotaCounterValueContractProperties
        """

        self._value = value
