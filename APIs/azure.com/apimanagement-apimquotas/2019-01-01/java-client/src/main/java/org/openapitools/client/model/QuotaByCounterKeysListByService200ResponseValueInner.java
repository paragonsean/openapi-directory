/*
 * ApiManagementClient
 * Use these REST APIs for performing operations on Quota entity associated with your Azure API Management deployment. To configure call rate limit and quota policies refer to [how to configure call rate limit and quota](https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-product-with-rules#a-namepolicies-ato-configure-call-rate-limit-and-quota-policies).
 *
 * The version of the OpenAPI document: 2019-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.QuotaByCounterKeysListByService200ResponseValueInnerValue;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Quota counter details.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:46:05.648032-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class QuotaByCounterKeysListByService200ResponseValueInner {
  public static final String SERIALIZED_NAME_COUNTER_KEY = "counterKey";
  @SerializedName(SERIALIZED_NAME_COUNTER_KEY)
  private String counterKey;

  public static final String SERIALIZED_NAME_PERIOD_END_TIME = "periodEndTime";
  @SerializedName(SERIALIZED_NAME_PERIOD_END_TIME)
  private OffsetDateTime periodEndTime;

  public static final String SERIALIZED_NAME_PERIOD_KEY = "periodKey";
  @SerializedName(SERIALIZED_NAME_PERIOD_KEY)
  private String periodKey;

  public static final String SERIALIZED_NAME_PERIOD_START_TIME = "periodStartTime";
  @SerializedName(SERIALIZED_NAME_PERIOD_START_TIME)
  private OffsetDateTime periodStartTime;

  public static final String SERIALIZED_NAME_VALUE = "value";
  @SerializedName(SERIALIZED_NAME_VALUE)
  private QuotaByCounterKeysListByService200ResponseValueInnerValue value;

  public QuotaByCounterKeysListByService200ResponseValueInner() {
  }

  public QuotaByCounterKeysListByService200ResponseValueInner counterKey(String counterKey) {
    this.counterKey = counterKey;
    return this;
  }

  /**
   * The Key value of the Counter. Must not be empty.
   * @return counterKey
   */
  @javax.annotation.Nonnull
  public String getCounterKey() {
    return counterKey;
  }

  public void setCounterKey(String counterKey) {
    this.counterKey = counterKey;
  }


  public QuotaByCounterKeysListByService200ResponseValueInner periodEndTime(OffsetDateTime periodEndTime) {
    this.periodEndTime = periodEndTime;
    return this;
  }

  /**
   * The date of the end of Counter Period. The date conforms to the following format: &#x60;yyyy-MM-ddTHH:mm:ssZ&#x60; as specified by the ISO 8601 standard. 
   * @return periodEndTime
   */
  @javax.annotation.Nonnull
  public OffsetDateTime getPeriodEndTime() {
    return periodEndTime;
  }

  public void setPeriodEndTime(OffsetDateTime periodEndTime) {
    this.periodEndTime = periodEndTime;
  }


  public QuotaByCounterKeysListByService200ResponseValueInner periodKey(String periodKey) {
    this.periodKey = periodKey;
    return this;
  }

  /**
   * Identifier of the Period for which the counter was collected. Must not be empty.
   * @return periodKey
   */
  @javax.annotation.Nonnull
  public String getPeriodKey() {
    return periodKey;
  }

  public void setPeriodKey(String periodKey) {
    this.periodKey = periodKey;
  }


  public QuotaByCounterKeysListByService200ResponseValueInner periodStartTime(OffsetDateTime periodStartTime) {
    this.periodStartTime = periodStartTime;
    return this;
  }

  /**
   * The date of the start of Counter Period. The date conforms to the following format: &#x60;yyyy-MM-ddTHH:mm:ssZ&#x60; as specified by the ISO 8601 standard. 
   * @return periodStartTime
   */
  @javax.annotation.Nonnull
  public OffsetDateTime getPeriodStartTime() {
    return periodStartTime;
  }

  public void setPeriodStartTime(OffsetDateTime periodStartTime) {
    this.periodStartTime = periodStartTime;
  }


  public QuotaByCounterKeysListByService200ResponseValueInner value(QuotaByCounterKeysListByService200ResponseValueInnerValue value) {
    this.value = value;
    return this;
  }

  /**
   * Get value
   * @return value
   */
  @javax.annotation.Nullable
  public QuotaByCounterKeysListByService200ResponseValueInnerValue getValue() {
    return value;
  }

  public void setValue(QuotaByCounterKeysListByService200ResponseValueInnerValue value) {
    this.value = value;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    QuotaByCounterKeysListByService200ResponseValueInner quotaByCounterKeysListByService200ResponseValueInner = (QuotaByCounterKeysListByService200ResponseValueInner) o;
    return Objects.equals(this.counterKey, quotaByCounterKeysListByService200ResponseValueInner.counterKey) &&
        Objects.equals(this.periodEndTime, quotaByCounterKeysListByService200ResponseValueInner.periodEndTime) &&
        Objects.equals(this.periodKey, quotaByCounterKeysListByService200ResponseValueInner.periodKey) &&
        Objects.equals(this.periodStartTime, quotaByCounterKeysListByService200ResponseValueInner.periodStartTime) &&
        Objects.equals(this.value, quotaByCounterKeysListByService200ResponseValueInner.value);
  }

  @Override
  public int hashCode() {
    return Objects.hash(counterKey, periodEndTime, periodKey, periodStartTime, value);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class QuotaByCounterKeysListByService200ResponseValueInner {\n");
    sb.append("    counterKey: ").append(toIndentedString(counterKey)).append("\n");
    sb.append("    periodEndTime: ").append(toIndentedString(periodEndTime)).append("\n");
    sb.append("    periodKey: ").append(toIndentedString(periodKey)).append("\n");
    sb.append("    periodStartTime: ").append(toIndentedString(periodStartTime)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("counterKey");
    openapiFields.add("periodEndTime");
    openapiFields.add("periodKey");
    openapiFields.add("periodStartTime");
    openapiFields.add("value");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("counterKey");
    openapiRequiredFields.add("periodEndTime");
    openapiRequiredFields.add("periodKey");
    openapiRequiredFields.add("periodStartTime");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to QuotaByCounterKeysListByService200ResponseValueInner
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!QuotaByCounterKeysListByService200ResponseValueInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in QuotaByCounterKeysListByService200ResponseValueInner is not found in the empty JSON string", QuotaByCounterKeysListByService200ResponseValueInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!QuotaByCounterKeysListByService200ResponseValueInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `QuotaByCounterKeysListByService200ResponseValueInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : QuotaByCounterKeysListByService200ResponseValueInner.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("counterKey").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `counterKey` to be a primitive type in the JSON string but got `%s`", jsonObj.get("counterKey").toString()));
      }
      if (!jsonObj.get("periodKey").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `periodKey` to be a primitive type in the JSON string but got `%s`", jsonObj.get("periodKey").toString()));
      }
      // validate the optional field `value`
      if (jsonObj.get("value") != null && !jsonObj.get("value").isJsonNull()) {
        QuotaByCounterKeysListByService200ResponseValueInnerValue.validateJsonElement(jsonObj.get("value"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!QuotaByCounterKeysListByService200ResponseValueInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'QuotaByCounterKeysListByService200ResponseValueInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<QuotaByCounterKeysListByService200ResponseValueInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(QuotaByCounterKeysListByService200ResponseValueInner.class));

       return (TypeAdapter<T>) new TypeAdapter<QuotaByCounterKeysListByService200ResponseValueInner>() {
           @Override
           public void write(JsonWriter out, QuotaByCounterKeysListByService200ResponseValueInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public QuotaByCounterKeysListByService200ResponseValueInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of QuotaByCounterKeysListByService200ResponseValueInner given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of QuotaByCounterKeysListByService200ResponseValueInner
   * @throws IOException if the JSON string is invalid with respect to QuotaByCounterKeysListByService200ResponseValueInner
   */
  public static QuotaByCounterKeysListByService200ResponseValueInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, QuotaByCounterKeysListByService200ResponseValueInner.class);
  }

  /**
   * Convert an instance of QuotaByCounterKeysListByService200ResponseValueInner to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

