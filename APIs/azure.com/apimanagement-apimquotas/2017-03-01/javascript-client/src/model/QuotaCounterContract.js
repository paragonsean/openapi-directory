/**
 * ApiManagementClient
 * Use these REST APIs for performing operations on Quota entity associated with your Azure API Management deployment. To configure call rate limit and quota policies refer to [how to configure call rate limit and quota](https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-product-with-rules#a-namepolicies-ato-configure-call-rate-limit-and-quota-policies).
 *
 * The version of the OpenAPI document: 2017-03-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import QuotaCounterValueContractProperties from './QuotaCounterValueContractProperties';

/**
 * The QuotaCounterContract model module.
 * @module model/QuotaCounterContract
 * @version 2017-03-01
 */
class QuotaCounterContract {
    /**
     * Constructs a new <code>QuotaCounterContract</code>.
     * Quota counter details.
     * @alias module:model/QuotaCounterContract
     * @param counterKey {String} The Key value of the Counter. Must not be empty.
     * @param periodEndTime {Date} The date of the end of Counter Period. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard. 
     * @param periodKey {String} Identifier of the Period for which the counter was collected. Must not be empty.
     * @param periodStartTime {Date} The date of the start of Counter Period. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard. 
     */
    constructor(counterKey, periodEndTime, periodKey, periodStartTime) { 
        
        QuotaCounterContract.initialize(this, counterKey, periodEndTime, periodKey, periodStartTime);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, counterKey, periodEndTime, periodKey, periodStartTime) { 
        obj['counterKey'] = counterKey;
        obj['periodEndTime'] = periodEndTime;
        obj['periodKey'] = periodKey;
        obj['periodStartTime'] = periodStartTime;
    }

    /**
     * Constructs a <code>QuotaCounterContract</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/QuotaCounterContract} obj Optional instance to populate.
     * @return {module:model/QuotaCounterContract} The populated <code>QuotaCounterContract</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new QuotaCounterContract();

            if (data.hasOwnProperty('Value')) {
                obj['Value'] = QuotaCounterValueContractProperties.constructFromObject(data['Value']);
            }
            if (data.hasOwnProperty('counterKey')) {
                obj['counterKey'] = ApiClient.convertToType(data['counterKey'], 'String');
            }
            if (data.hasOwnProperty('periodEndTime')) {
                obj['periodEndTime'] = ApiClient.convertToType(data['periodEndTime'], 'Date');
            }
            if (data.hasOwnProperty('periodKey')) {
                obj['periodKey'] = ApiClient.convertToType(data['periodKey'], 'String');
            }
            if (data.hasOwnProperty('periodStartTime')) {
                obj['periodStartTime'] = ApiClient.convertToType(data['periodStartTime'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>QuotaCounterContract</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>QuotaCounterContract</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of QuotaCounterContract.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `Value`
        if (data['Value']) { // data not null
          QuotaCounterValueContractProperties.validateJSON(data['Value']);
        }
        // ensure the json data is a string
        if (data['counterKey'] && !(typeof data['counterKey'] === 'string' || data['counterKey'] instanceof String)) {
            throw new Error("Expected the field `counterKey` to be a primitive type in the JSON string but got " + data['counterKey']);
        }
        // ensure the json data is a string
        if (data['periodKey'] && !(typeof data['periodKey'] === 'string' || data['periodKey'] instanceof String)) {
            throw new Error("Expected the field `periodKey` to be a primitive type in the JSON string but got " + data['periodKey']);
        }

        return true;
    }


}

QuotaCounterContract.RequiredProperties = ["counterKey", "periodEndTime", "periodKey", "periodStartTime"];

/**
 * @member {module:model/QuotaCounterValueContractProperties} Value
 */
QuotaCounterContract.prototype['Value'] = undefined;

/**
 * The Key value of the Counter. Must not be empty.
 * @member {String} counterKey
 */
QuotaCounterContract.prototype['counterKey'] = undefined;

/**
 * The date of the end of Counter Period. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard. 
 * @member {Date} periodEndTime
 */
QuotaCounterContract.prototype['periodEndTime'] = undefined;

/**
 * Identifier of the Period for which the counter was collected. Must not be empty.
 * @member {String} periodKey
 */
QuotaCounterContract.prototype['periodKey'] = undefined;

/**
 * The date of the start of Counter Period. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard. 
 * @member {Date} periodStartTime
 */
QuotaCounterContract.prototype['periodStartTime'] = undefined;






export default QuotaCounterContract;

