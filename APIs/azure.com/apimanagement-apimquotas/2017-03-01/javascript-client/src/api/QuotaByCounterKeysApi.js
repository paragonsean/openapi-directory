/**
 * ApiManagementClient
 * Use these REST APIs for performing operations on Quota entity associated with your Azure API Management deployment. To configure call rate limit and quota policies refer to [how to configure call rate limit and quota](https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-product-with-rules#a-namepolicies-ato-configure-call-rate-limit-and-quota-policies).
 *
 * The version of the OpenAPI document: 2017-03-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import QuotaByCounterKeysListDefaultResponse from '../model/QuotaByCounterKeysListDefaultResponse';
import QuotaCounterCollection from '../model/QuotaCounterCollection';
import QuotaCounterValueContractProperties from '../model/QuotaCounterValueContractProperties';

/**
* QuotaByCounterKeys service.
* @module api/QuotaByCounterKeysApi
* @version 2017-03-01
*/
export default class QuotaByCounterKeysApi {

    /**
    * Constructs a new QuotaByCounterKeysApi. 
    * @alias module:api/QuotaByCounterKeysApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the quotaByCounterKeysList operation.
     * @callback module:api/QuotaByCounterKeysApi~quotaByCounterKeysListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/QuotaCounterCollection} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists a collection of current quota counter periods associated with the counter-key configured in the policy on the specified service instance. The api does not support paging yet.
     * @param {String} quotaCounterKey Quota counter key identifier.This is the result of expression defined in counter-key attribute of the quota-by-key policy.For Example, if you specify counter-key=\"boo\" in the policy, then it’s accessible by \"boo\" counter key. But if it’s defined as counter-key=\"@(\"b\"+\"a\")\" then it will be accessible by \"ba\" key
     * @param {String} apiVersion Version of the API to be used with the client request.
     * @param {module:api/QuotaByCounterKeysApi~quotaByCounterKeysListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/QuotaCounterCollection}
     */
    quotaByCounterKeysList(quotaCounterKey, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'quotaCounterKey' is set
      if (quotaCounterKey === undefined || quotaCounterKey === null) {
        throw new Error("Missing the required parameter 'quotaCounterKey' when calling quotaByCounterKeysList");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling quotaByCounterKeysList");
      }

      let pathParams = {
        'quotaCounterKey': quotaCounterKey
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apim_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = QuotaCounterCollection;
      return this.apiClient.callApi(
        '/quotas/{quotaCounterKey}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the quotaByCounterKeysUpdate operation.
     * @callback module:api/QuotaByCounterKeysApi~quotaByCounterKeysUpdateCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates all the quota counter values specified with the existing quota counter key to a value in the specified service instance. This should be used for reset of the quota counter values.
     * @param {String} quotaCounterKey Quota counter key identifier.This is the result of expression defined in counter-key attribute of the quota-by-key policy.For Example, if you specify counter-key=\"boo\" in the policy, then it’s accessible by \"boo\" counter key. But if it’s defined as counter-key=\"@(\"b\"+\"a\")\" then it will be accessible by \"ba\" key
     * @param {String} apiVersion Version of the API to be used with the client request.
     * @param {module:model/QuotaCounterValueContractProperties} parameters The value of the quota counter to be applied to all quota counter periods.
     * @param {module:api/QuotaByCounterKeysApi~quotaByCounterKeysUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     */
    quotaByCounterKeysUpdate(quotaCounterKey, apiVersion, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'quotaCounterKey' is set
      if (quotaCounterKey === undefined || quotaCounterKey === null) {
        throw new Error("Missing the required parameter 'quotaCounterKey' when calling quotaByCounterKeysUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling quotaByCounterKeysUpdate");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling quotaByCounterKeysUpdate");
      }

      let pathParams = {
        'quotaCounterKey': quotaCounterKey
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apim_key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/quotas/{quotaCounterKey}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
