/**
 * ApiManagementClient
 * Use these REST APIs for performing operations on Quota entity associated with your Azure API Management deployment. To configure call rate limit and quota policies refer to [how to configure call rate limit and quota](https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-product-with-rules#a-namepolicies-ato-configure-call-rate-limit-and-quota-policies).
 *
 * The version of the OpenAPI document: 2018-06-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIQuotaByCounterKeys_ListByService_200_response_value_inner.h
 *
 * Quota counter details.
 */

#ifndef OAIQuotaByCounterKeys_ListByService_200_response_value_inner_H
#define OAIQuotaByCounterKeys_ListByService_200_response_value_inner_H

#include <QJsonObject>

#include "OAIQuotaByCounterKeys_ListByService_200_response_value_inner_value.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIQuotaByCounterKeys_ListByService_200_response_value_inner_value;

class OAIQuotaByCounterKeys_ListByService_200_response_value_inner : public OAIObject {
public:
    OAIQuotaByCounterKeys_ListByService_200_response_value_inner();
    OAIQuotaByCounterKeys_ListByService_200_response_value_inner(QString json);
    ~OAIQuotaByCounterKeys_ListByService_200_response_value_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCounterKey() const;
    void setCounterKey(const QString &counter_key);
    bool is_counter_key_Set() const;
    bool is_counter_key_Valid() const;

    QDateTime getPeriodEndTime() const;
    void setPeriodEndTime(const QDateTime &period_end_time);
    bool is_period_end_time_Set() const;
    bool is_period_end_time_Valid() const;

    QString getPeriodKey() const;
    void setPeriodKey(const QString &period_key);
    bool is_period_key_Set() const;
    bool is_period_key_Valid() const;

    QDateTime getPeriodStartTime() const;
    void setPeriodStartTime(const QDateTime &period_start_time);
    bool is_period_start_time_Set() const;
    bool is_period_start_time_Valid() const;

    OAIQuotaByCounterKeys_ListByService_200_response_value_inner_value getValue() const;
    void setValue(const OAIQuotaByCounterKeys_ListByService_200_response_value_inner_value &value);
    bool is_value_Set() const;
    bool is_value_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_counter_key;
    bool m_counter_key_isSet;
    bool m_counter_key_isValid;

    QDateTime m_period_end_time;
    bool m_period_end_time_isSet;
    bool m_period_end_time_isValid;

    QString m_period_key;
    bool m_period_key_isSet;
    bool m_period_key_isValid;

    QDateTime m_period_start_time;
    bool m_period_start_time_isSet;
    bool m_period_start_time_isValid;

    OAIQuotaByCounterKeys_ListByService_200_response_value_inner_value m_value;
    bool m_value_isSet;
    bool m_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIQuotaByCounterKeys_ListByService_200_response_value_inner)

#endif // OAIQuotaByCounterKeys_ListByService_200_response_value_inner_H
