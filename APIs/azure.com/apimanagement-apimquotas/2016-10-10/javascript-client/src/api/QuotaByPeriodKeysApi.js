/**
 * ApiManagementClient
 * Use these REST APIs for performing operations on Quota entity associated with your Azure API Management deployment. To configure call rate limit and quota policies refer to [how to configure call rate limit and quota](https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-product-with-rules#a-namepolicies-ato-configure-call-rate-limit-and-quota-policies).
 *
 * The version of the OpenAPI document: 2016-10-10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import QuotaByCounterKeysListByServiceDefaultResponse from '../model/QuotaByCounterKeysListByServiceDefaultResponse';
import QuotaCounterContract from '../model/QuotaCounterContract';
import QuotaCounterValueContract from '../model/QuotaCounterValueContract';

/**
* QuotaByPeriodKeys service.
* @module api/QuotaByPeriodKeysApi
* @version 2016-10-10
*/
export default class QuotaByPeriodKeysApi {

    /**
    * Constructs a new QuotaByPeriodKeysApi. 
    * @alias module:api/QuotaByPeriodKeysApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the quotaByPeriodKeysGet operation.
     * @callback module:api/QuotaByPeriodKeysApi~quotaByPeriodKeysGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/QuotaCounterContract} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the value of the quota counter associated with the counter-key in the policy for the specific period in service instance.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} serviceName The name of the API Management service.
     * @param {String} quotaCounterKey Quota counter key identifier.
     * @param {String} quotaPeriodKey Quota period key identifier.
     * @param {String} apiVersion Version of the API to be used with the client request.
     * @param {module:api/QuotaByPeriodKeysApi~quotaByPeriodKeysGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/QuotaCounterContract}
     */
    quotaByPeriodKeysGet(subscriptionId, resourceGroupName, serviceName, quotaCounterKey, quotaPeriodKey, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling quotaByPeriodKeysGet");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling quotaByPeriodKeysGet");
      }
      // verify the required parameter 'serviceName' is set
      if (serviceName === undefined || serviceName === null) {
        throw new Error("Missing the required parameter 'serviceName' when calling quotaByPeriodKeysGet");
      }
      // verify the required parameter 'quotaCounterKey' is set
      if (quotaCounterKey === undefined || quotaCounterKey === null) {
        throw new Error("Missing the required parameter 'quotaCounterKey' when calling quotaByPeriodKeysGet");
      }
      // verify the required parameter 'quotaPeriodKey' is set
      if (quotaPeriodKey === undefined || quotaPeriodKey === null) {
        throw new Error("Missing the required parameter 'quotaPeriodKey' when calling quotaByPeriodKeysGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling quotaByPeriodKeysGet");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'serviceName': serviceName,
        'quotaCounterKey': quotaCounterKey,
        'quotaPeriodKey': quotaPeriodKey
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = QuotaCounterContract;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}/{quotaPeriodKey}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the quotaByPeriodKeysUpdate operation.
     * @callback module:api/QuotaByPeriodKeysApi~quotaByPeriodKeysUpdateCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates an existing quota counter value in the specified service instance.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} serviceName The name of the API Management service.
     * @param {String} quotaCounterKey Quota counter key identifier.
     * @param {String} quotaPeriodKey Quota period key identifier.
     * @param {String} apiVersion Version of the API to be used with the client request.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:model/QuotaCounterValueContract} parameters The value of the Quota counter to be applied on the specified period.
     * @param {module:api/QuotaByPeriodKeysApi~quotaByPeriodKeysUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     */
    quotaByPeriodKeysUpdate(resourceGroupName, serviceName, quotaCounterKey, quotaPeriodKey, apiVersion, subscriptionId, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling quotaByPeriodKeysUpdate");
      }
      // verify the required parameter 'serviceName' is set
      if (serviceName === undefined || serviceName === null) {
        throw new Error("Missing the required parameter 'serviceName' when calling quotaByPeriodKeysUpdate");
      }
      // verify the required parameter 'quotaCounterKey' is set
      if (quotaCounterKey === undefined || quotaCounterKey === null) {
        throw new Error("Missing the required parameter 'quotaCounterKey' when calling quotaByPeriodKeysUpdate");
      }
      // verify the required parameter 'quotaPeriodKey' is set
      if (quotaPeriodKey === undefined || quotaPeriodKey === null) {
        throw new Error("Missing the required parameter 'quotaPeriodKey' when calling quotaByPeriodKeysUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling quotaByPeriodKeysUpdate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling quotaByPeriodKeysUpdate");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling quotaByPeriodKeysUpdate");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'serviceName': serviceName,
        'quotaCounterKey': quotaCounterKey,
        'quotaPeriodKey': quotaPeriodKey,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}/{quotaPeriodKey}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
