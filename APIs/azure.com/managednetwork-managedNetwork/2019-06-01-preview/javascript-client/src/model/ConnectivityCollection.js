/**
 * ManagedNetworkManagementClient
 * The Microsoft Azure Managed Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to programmatically view, control, change, and monitor your entire Azure network centrally and with ease.
 *
 * The version of the OpenAPI document: 2019-06-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ManagedNetworkGroup from './ManagedNetworkGroup';
import ManagedNetworkPeeringPolicy from './ManagedNetworkPeeringPolicy';

/**
 * The ConnectivityCollection model module.
 * @module model/ConnectivityCollection
 * @version 2019-06-01-preview
 */
class ConnectivityCollection {
    /**
     * Constructs a new <code>ConnectivityCollection</code>.
     * The collection of Connectivity related groups and policies within the Managed Network
     * @alias module:model/ConnectivityCollection
     */
    constructor() { 
        
        ConnectivityCollection.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ConnectivityCollection</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ConnectivityCollection} obj Optional instance to populate.
     * @return {module:model/ConnectivityCollection} The populated <code>ConnectivityCollection</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ConnectivityCollection();

            if (data.hasOwnProperty('groups')) {
                obj['groups'] = ApiClient.convertToType(data['groups'], [ManagedNetworkGroup]);
            }
            if (data.hasOwnProperty('peerings')) {
                obj['peerings'] = ApiClient.convertToType(data['peerings'], [ManagedNetworkPeeringPolicy]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ConnectivityCollection</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ConnectivityCollection</code>.
     */
    static validateJSON(data) {
        if (data['groups']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['groups'])) {
                throw new Error("Expected the field `groups` to be an array in the JSON data but got " + data['groups']);
            }
            // validate the optional field `groups` (array)
            for (const item of data['groups']) {
                ManagedNetworkGroup.validateJSON(item);
            };
        }
        if (data['peerings']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['peerings'])) {
                throw new Error("Expected the field `peerings` to be an array in the JSON data but got " + data['peerings']);
            }
            // validate the optional field `peerings` (array)
            for (const item of data['peerings']) {
                ManagedNetworkPeeringPolicy.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * The collection of connectivity related Managed Network Groups within the Managed Network
 * @member {Array.<module:model/ManagedNetworkGroup>} groups
 */
ConnectivityCollection.prototype['groups'] = undefined;

/**
 * The collection of Managed Network Peering Policies within the Managed Network
 * @member {Array.<module:model/ManagedNetworkPeeringPolicy>} peerings
 */
ConnectivityCollection.prototype['peerings'] = undefined;






export default ConnectivityCollection;

