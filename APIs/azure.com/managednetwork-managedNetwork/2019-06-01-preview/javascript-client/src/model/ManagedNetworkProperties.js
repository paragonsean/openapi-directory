/**
 * ManagedNetworkManagementClient
 * The Microsoft Azure Managed Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to programmatically view, control, change, and monitor your entire Azure network centrally and with ease.
 *
 * The version of the OpenAPI document: 2019-06-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ConnectivityCollection from './ConnectivityCollection';
import ResourceProperties from './ResourceProperties';
import Scope from './Scope';

/**
 * The ManagedNetworkProperties model module.
 * @module model/ManagedNetworkProperties
 * @version 2019-06-01-preview
 */
class ManagedNetworkProperties {
    /**
     * Constructs a new <code>ManagedNetworkProperties</code>.
     * Properties of Managed Network
     * @alias module:model/ManagedNetworkProperties
     * @implements module:model/ResourceProperties
     */
    constructor() { 
        ResourceProperties.initialize(this);
        ManagedNetworkProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ManagedNetworkProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ManagedNetworkProperties} obj Optional instance to populate.
     * @return {module:model/ManagedNetworkProperties} The populated <code>ManagedNetworkProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ManagedNetworkProperties();
            ResourceProperties.constructFromObject(data, obj);

            if (data.hasOwnProperty('connectivity')) {
                obj['connectivity'] = ConnectivityCollection.constructFromObject(data['connectivity']);
            }
            if (data.hasOwnProperty('scope')) {
                obj['scope'] = Scope.constructFromObject(data['scope']);
            }
            if (data.hasOwnProperty('etag')) {
                obj['etag'] = ApiClient.convertToType(data['etag'], 'String');
            }
            if (data.hasOwnProperty('provisioningState')) {
                obj['provisioningState'] = ApiClient.convertToType(data['provisioningState'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ManagedNetworkProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ManagedNetworkProperties</code>.
     */
    static validateJSON(data) {
        // validate the optional field `connectivity`
        if (data['connectivity']) { // data not null
          ConnectivityCollection.validateJSON(data['connectivity']);
        }
        // validate the optional field `scope`
        if (data['scope']) { // data not null
          Scope.validateJSON(data['scope']);
        }
        // ensure the json data is a string
        if (data['etag'] && !(typeof data['etag'] === 'string' || data['etag'] instanceof String)) {
            throw new Error("Expected the field `etag` to be a primitive type in the JSON string but got " + data['etag']);
        }
        // ensure the json data is a string
        if (data['provisioningState'] && !(typeof data['provisioningState'] === 'string' || data['provisioningState'] instanceof String)) {
            throw new Error("Expected the field `provisioningState` to be a primitive type in the JSON string but got " + data['provisioningState']);
        }

        return true;
    }


}



/**
 * @member {module:model/ConnectivityCollection} connectivity
 */
ManagedNetworkProperties.prototype['connectivity'] = undefined;

/**
 * @member {module:model/Scope} scope
 */
ManagedNetworkProperties.prototype['scope'] = undefined;

/**
 * A unique read-only string that changes whenever the resource is updated.
 * @member {String} etag
 */
ManagedNetworkProperties.prototype['etag'] = undefined;

/**
 * Provisioning state of the ManagedNetwork resource.
 * @member {module:model/ManagedNetworkProperties.ProvisioningStateEnum} provisioningState
 */
ManagedNetworkProperties.prototype['provisioningState'] = undefined;


// Implement ResourceProperties interface:
/**
 * A unique read-only string that changes whenever the resource is updated.
 * @member {String} etag
 */
ResourceProperties.prototype['etag'] = undefined;
/**
 * Provisioning state of the ManagedNetwork resource.
 * @member {module:model/ResourceProperties.ProvisioningStateEnum} provisioningState
 */
ResourceProperties.prototype['provisioningState'] = undefined;



/**
 * Allowed values for the <code>provisioningState</code> property.
 * @enum {String}
 * @readonly
 */
ManagedNetworkProperties['ProvisioningStateEnum'] = {

    /**
     * value: "Updating"
     * @const
     */
    "Updating": "Updating",

    /**
     * value: "Deleting"
     * @const
     */
    "Deleting": "Deleting",

    /**
     * value: "Failed"
     * @const
     */
    "Failed": "Failed",

    /**
     * value: "Succeeded"
     * @const
     */
    "Succeeded": "Succeeded"
};



export default ManagedNetworkProperties;

