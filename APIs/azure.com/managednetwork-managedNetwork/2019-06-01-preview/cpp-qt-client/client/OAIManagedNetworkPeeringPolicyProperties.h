/**
 * ManagedNetworkManagementClient
 * The Microsoft Azure Managed Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to programmatically view, control, change, and monitor your entire Azure network centrally and with ease.
 *
 * The version of the OpenAPI document: 2019-06-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIManagedNetworkPeeringPolicyProperties.h
 *
 * Properties of a Managed Network Peering Policy
 */

#ifndef OAIManagedNetworkPeeringPolicyProperties_H
#define OAIManagedNetworkPeeringPolicyProperties_H

#include <QJsonObject>

#include "OAIResourceId.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIResourceId;

class OAIManagedNetworkPeeringPolicyProperties : public OAIObject {
public:
    OAIManagedNetworkPeeringPolicyProperties();
    OAIManagedNetworkPeeringPolicyProperties(QString json);
    ~OAIManagedNetworkPeeringPolicyProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIResourceId getHub() const;
    void setHub(const OAIResourceId &hub);
    bool is_hub_Set() const;
    bool is_hub_Valid() const;

    QList<OAIResourceId> getMesh() const;
    void setMesh(const QList<OAIResourceId> &mesh);
    bool is_mesh_Set() const;
    bool is_mesh_Valid() const;

    QList<OAIResourceId> getSpokes() const;
    void setSpokes(const QList<OAIResourceId> &spokes);
    bool is_spokes_Set() const;
    bool is_spokes_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getEtag() const;
    void setEtag(const QString &etag);
    bool is_etag_Set() const;
    bool is_etag_Valid() const;

    QString getProvisioningState() const;
    void setProvisioningState(const QString &provisioning_state);
    bool is_provisioning_state_Set() const;
    bool is_provisioning_state_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIResourceId m_hub;
    bool m_hub_isSet;
    bool m_hub_isValid;

    QList<OAIResourceId> m_mesh;
    bool m_mesh_isSet;
    bool m_mesh_isValid;

    QList<OAIResourceId> m_spokes;
    bool m_spokes_isSet;
    bool m_spokes_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_etag;
    bool m_etag_isSet;
    bool m_etag_isValid;

    QString m_provisioning_state;
    bool m_provisioning_state_isSet;
    bool m_provisioning_state_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIManagedNetworkPeeringPolicyProperties)

#endif // OAIManagedNetworkPeeringPolicyProperties_H
