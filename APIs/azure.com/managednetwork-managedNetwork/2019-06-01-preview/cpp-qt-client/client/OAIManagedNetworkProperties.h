/**
 * ManagedNetworkManagementClient
 * The Microsoft Azure Managed Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to programmatically view, control, change, and monitor your entire Azure network centrally and with ease.
 *
 * The version of the OpenAPI document: 2019-06-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIManagedNetworkProperties.h
 *
 * Properties of Managed Network
 */

#ifndef OAIManagedNetworkProperties_H
#define OAIManagedNetworkProperties_H

#include <QJsonObject>

#include "OAIConnectivityCollection.h"
#include "OAIScope.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIConnectivityCollection;
class OAIScope;

class OAIManagedNetworkProperties : public OAIObject {
public:
    OAIManagedNetworkProperties();
    OAIManagedNetworkProperties(QString json);
    ~OAIManagedNetworkProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIConnectivityCollection getConnectivity() const;
    void setConnectivity(const OAIConnectivityCollection &connectivity);
    bool is_connectivity_Set() const;
    bool is_connectivity_Valid() const;

    OAIScope getScope() const;
    void setScope(const OAIScope &scope);
    bool is_scope_Set() const;
    bool is_scope_Valid() const;

    QString getEtag() const;
    void setEtag(const QString &etag);
    bool is_etag_Set() const;
    bool is_etag_Valid() const;

    QString getProvisioningState() const;
    void setProvisioningState(const QString &provisioning_state);
    bool is_provisioning_state_Set() const;
    bool is_provisioning_state_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIConnectivityCollection m_connectivity;
    bool m_connectivity_isSet;
    bool m_connectivity_isValid;

    OAIScope m_scope;
    bool m_scope_isSet;
    bool m_scope_isValid;

    QString m_etag;
    bool m_etag_isSet;
    bool m_etag_isValid;

    QString m_provisioning_state;
    bool m_provisioning_state_isSet;
    bool m_provisioning_state_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIManagedNetworkProperties)

#endif // OAIManagedNetworkProperties_H
