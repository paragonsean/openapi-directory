/**
 * ManagedNetworkManagementClient
 * The Microsoft Azure Managed Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to programmatically view, control, change, and monitor your entire Azure network centrally and with ease.
 *
 * The version of the OpenAPI document: 2019-06-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIScopeAssignmentProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIScopeAssignmentProperties::OAIScopeAssignmentProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIScopeAssignmentProperties::OAIScopeAssignmentProperties() {
    this->initializeModel();
}

OAIScopeAssignmentProperties::~OAIScopeAssignmentProperties() {}

void OAIScopeAssignmentProperties::initializeModel() {

    m_assigned_managed_network_isSet = false;
    m_assigned_managed_network_isValid = false;

    m_etag_isSet = false;
    m_etag_isValid = false;

    m_provisioning_state_isSet = false;
    m_provisioning_state_isValid = false;
}

void OAIScopeAssignmentProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIScopeAssignmentProperties::fromJsonObject(QJsonObject json) {

    m_assigned_managed_network_isValid = ::OpenAPI::fromJsonValue(m_assigned_managed_network, json[QString("assignedManagedNetwork")]);
    m_assigned_managed_network_isSet = !json[QString("assignedManagedNetwork")].isNull() && m_assigned_managed_network_isValid;

    m_etag_isValid = ::OpenAPI::fromJsonValue(m_etag, json[QString("etag")]);
    m_etag_isSet = !json[QString("etag")].isNull() && m_etag_isValid;

    m_provisioning_state_isValid = ::OpenAPI::fromJsonValue(m_provisioning_state, json[QString("provisioningState")]);
    m_provisioning_state_isSet = !json[QString("provisioningState")].isNull() && m_provisioning_state_isValid;
}

QString OAIScopeAssignmentProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIScopeAssignmentProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_assigned_managed_network_isSet) {
        obj.insert(QString("assignedManagedNetwork"), ::OpenAPI::toJsonValue(m_assigned_managed_network));
    }
    if (m_etag_isSet) {
        obj.insert(QString("etag"), ::OpenAPI::toJsonValue(m_etag));
    }
    if (m_provisioning_state_isSet) {
        obj.insert(QString("provisioningState"), ::OpenAPI::toJsonValue(m_provisioning_state));
    }
    return obj;
}

QString OAIScopeAssignmentProperties::getAssignedManagedNetwork() const {
    return m_assigned_managed_network;
}
void OAIScopeAssignmentProperties::setAssignedManagedNetwork(const QString &assigned_managed_network) {
    m_assigned_managed_network = assigned_managed_network;
    m_assigned_managed_network_isSet = true;
}

bool OAIScopeAssignmentProperties::is_assigned_managed_network_Set() const{
    return m_assigned_managed_network_isSet;
}

bool OAIScopeAssignmentProperties::is_assigned_managed_network_Valid() const{
    return m_assigned_managed_network_isValid;
}

QString OAIScopeAssignmentProperties::getEtag() const {
    return m_etag;
}
void OAIScopeAssignmentProperties::setEtag(const QString &etag) {
    m_etag = etag;
    m_etag_isSet = true;
}

bool OAIScopeAssignmentProperties::is_etag_Set() const{
    return m_etag_isSet;
}

bool OAIScopeAssignmentProperties::is_etag_Valid() const{
    return m_etag_isValid;
}

QString OAIScopeAssignmentProperties::getProvisioningState() const {
    return m_provisioning_state;
}
void OAIScopeAssignmentProperties::setProvisioningState(const QString &provisioning_state) {
    m_provisioning_state = provisioning_state;
    m_provisioning_state_isSet = true;
}

bool OAIScopeAssignmentProperties::is_provisioning_state_Set() const{
    return m_provisioning_state_isSet;
}

bool OAIScopeAssignmentProperties::is_provisioning_state_Valid() const{
    return m_provisioning_state_isValid;
}

bool OAIScopeAssignmentProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_assigned_managed_network_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_etag_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_provisioning_state_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIScopeAssignmentProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
