/*
 * StorageManagementClient
 * The Admin Storage Management Client.
 *
 * The version of the OpenAPI document: 2015-12-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.QueueServicesListMetricDefinitions200ResponseValueInnerName;
import org.openapitools.client.model.QueueServicesListMetrics200ResponseValueInnerMetricValuesInner;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Metric information.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:47:15.354399-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class QueueServicesListMetrics200ResponseValueInner {
  public static final String SERIALIZED_NAME_END_TIME = "endTime";
  @SerializedName(SERIALIZED_NAME_END_TIME)
  private OffsetDateTime endTime;

  /**
   * Metric unit.
   */
  @JsonAdapter(MetricUnitEnum.Adapter.class)
  public enum MetricUnitEnum {
    COUNT("Count"),
    
    BYTES("Bytes"),
    
    SECONDS("Seconds"),
    
    COUNT_PER_SECOND("CountPerSecond"),
    
    BYTES_PER_SECOND("BytesPerSecond");

    private String value;

    MetricUnitEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static MetricUnitEnum fromValue(String value) {
      for (MetricUnitEnum b : MetricUnitEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<MetricUnitEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final MetricUnitEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public MetricUnitEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return MetricUnitEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      MetricUnitEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_METRIC_UNIT = "metricUnit";
  @SerializedName(SERIALIZED_NAME_METRIC_UNIT)
  private MetricUnitEnum metricUnit;

  public static final String SERIALIZED_NAME_METRIC_VALUES = "metricValues";
  @SerializedName(SERIALIZED_NAME_METRIC_VALUES)
  private List<QueueServicesListMetrics200ResponseValueInnerMetricValuesInner> metricValues = new ArrayList<>();

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private QueueServicesListMetricDefinitions200ResponseValueInnerName name;

  public static final String SERIALIZED_NAME_START_TIME = "startTime";
  @SerializedName(SERIALIZED_NAME_START_TIME)
  private OffsetDateTime startTime;

  public static final String SERIALIZED_NAME_TIME_GRAIN = "timeGrain";
  @SerializedName(SERIALIZED_NAME_TIME_GRAIN)
  private String timeGrain;

  public QueueServicesListMetrics200ResponseValueInner() {
  }

  public QueueServicesListMetrics200ResponseValueInner(
     OffsetDateTime endTime, 
     List<QueueServicesListMetrics200ResponseValueInnerMetricValuesInner> metricValues, 
     OffsetDateTime startTime, 
     String timeGrain
  ) {
    this();
    this.endTime = endTime;
    this.metricValues = metricValues;
    this.startTime = startTime;
    this.timeGrain = timeGrain;
  }

  /**
   * Metric end time.
   * @return endTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getEndTime() {
    return endTime;
  }



  public QueueServicesListMetrics200ResponseValueInner metricUnit(MetricUnitEnum metricUnit) {
    this.metricUnit = metricUnit;
    return this;
  }

  /**
   * Metric unit.
   * @return metricUnit
   */
  @javax.annotation.Nullable
  public MetricUnitEnum getMetricUnit() {
    return metricUnit;
  }

  public void setMetricUnit(MetricUnitEnum metricUnit) {
    this.metricUnit = metricUnit;
  }


  /**
   * List of metric values.
   * @return metricValues
   */
  @javax.annotation.Nullable
  public List<QueueServicesListMetrics200ResponseValueInnerMetricValuesInner> getMetricValues() {
    return metricValues;
  }



  public QueueServicesListMetrics200ResponseValueInner name(QueueServicesListMetricDefinitions200ResponseValueInnerName name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public QueueServicesListMetricDefinitions200ResponseValueInnerName getName() {
    return name;
  }

  public void setName(QueueServicesListMetricDefinitions200ResponseValueInnerName name) {
    this.name = name;
  }


  /**
   * Metric start time.
   * @return startTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getStartTime() {
    return startTime;
  }



  /**
   * Metric time grain.
   * @return timeGrain
   */
  @javax.annotation.Nullable
  public String getTimeGrain() {
    return timeGrain;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    QueueServicesListMetrics200ResponseValueInner queueServicesListMetrics200ResponseValueInner = (QueueServicesListMetrics200ResponseValueInner) o;
    return Objects.equals(this.endTime, queueServicesListMetrics200ResponseValueInner.endTime) &&
        Objects.equals(this.metricUnit, queueServicesListMetrics200ResponseValueInner.metricUnit) &&
        Objects.equals(this.metricValues, queueServicesListMetrics200ResponseValueInner.metricValues) &&
        Objects.equals(this.name, queueServicesListMetrics200ResponseValueInner.name) &&
        Objects.equals(this.startTime, queueServicesListMetrics200ResponseValueInner.startTime) &&
        Objects.equals(this.timeGrain, queueServicesListMetrics200ResponseValueInner.timeGrain);
  }

  @Override
  public int hashCode() {
    return Objects.hash(endTime, metricUnit, metricValues, name, startTime, timeGrain);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class QueueServicesListMetrics200ResponseValueInner {\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    metricUnit: ").append(toIndentedString(metricUnit)).append("\n");
    sb.append("    metricValues: ").append(toIndentedString(metricValues)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    timeGrain: ").append(toIndentedString(timeGrain)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("endTime");
    openapiFields.add("metricUnit");
    openapiFields.add("metricValues");
    openapiFields.add("name");
    openapiFields.add("startTime");
    openapiFields.add("timeGrain");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to QueueServicesListMetrics200ResponseValueInner
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!QueueServicesListMetrics200ResponseValueInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in QueueServicesListMetrics200ResponseValueInner is not found in the empty JSON string", QueueServicesListMetrics200ResponseValueInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!QueueServicesListMetrics200ResponseValueInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `QueueServicesListMetrics200ResponseValueInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("metricUnit") != null && !jsonObj.get("metricUnit").isJsonNull()) && !jsonObj.get("metricUnit").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `metricUnit` to be a primitive type in the JSON string but got `%s`", jsonObj.get("metricUnit").toString()));
      }
      // validate the optional field `metricUnit`
      if (jsonObj.get("metricUnit") != null && !jsonObj.get("metricUnit").isJsonNull()) {
        MetricUnitEnum.validateJsonElement(jsonObj.get("metricUnit"));
      }
      if (jsonObj.get("metricValues") != null && !jsonObj.get("metricValues").isJsonNull()) {
        JsonArray jsonArraymetricValues = jsonObj.getAsJsonArray("metricValues");
        if (jsonArraymetricValues != null) {
          // ensure the json data is an array
          if (!jsonObj.get("metricValues").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `metricValues` to be an array in the JSON string but got `%s`", jsonObj.get("metricValues").toString()));
          }

          // validate the optional field `metricValues` (array)
          for (int i = 0; i < jsonArraymetricValues.size(); i++) {
            QueueServicesListMetrics200ResponseValueInnerMetricValuesInner.validateJsonElement(jsonArraymetricValues.get(i));
          };
        }
      }
      // validate the optional field `name`
      if (jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) {
        QueueServicesListMetricDefinitions200ResponseValueInnerName.validateJsonElement(jsonObj.get("name"));
      }
      if ((jsonObj.get("timeGrain") != null && !jsonObj.get("timeGrain").isJsonNull()) && !jsonObj.get("timeGrain").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `timeGrain` to be a primitive type in the JSON string but got `%s`", jsonObj.get("timeGrain").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!QueueServicesListMetrics200ResponseValueInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'QueueServicesListMetrics200ResponseValueInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<QueueServicesListMetrics200ResponseValueInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(QueueServicesListMetrics200ResponseValueInner.class));

       return (TypeAdapter<T>) new TypeAdapter<QueueServicesListMetrics200ResponseValueInner>() {
           @Override
           public void write(JsonWriter out, QueueServicesListMetrics200ResponseValueInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public QueueServicesListMetrics200ResponseValueInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of QueueServicesListMetrics200ResponseValueInner given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of QueueServicesListMetrics200ResponseValueInner
   * @throws IOException if the JSON string is invalid with respect to QueueServicesListMetrics200ResponseValueInner
   */
  public static QueueServicesListMetrics200ResponseValueInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, QueueServicesListMetrics200ResponseValueInner.class);
  }

  /**
   * Convert an instance of QueueServicesListMetrics200ResponseValueInner to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

