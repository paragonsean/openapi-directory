/**
 * RecoveryServicesBackupClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-07-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Job from './Job';
import MabErrorInfo from './MabErrorInfo';
import MabJobExtendedInfo from './MabJobExtendedInfo';

/**
 * The MabJob model module.
 * @module model/MabJob
 * @version 2017-07-01
 */
class MabJob {
    /**
     * Constructs a new <code>MabJob</code>.
     * MAB workload-specific job.
     * @alias module:model/MabJob
     * @extends module:model/Job
     * @implements module:model/Job
     * @param jobType {String} This property will be used as the discriminator for deciding the specific types in the polymorhpic chain of types.
     */
    constructor(jobType) { 
        Job.initialize(this, jobType);
        MabJob.initialize(this, jobType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, jobType) { 
    }

    /**
     * Constructs a <code>MabJob</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MabJob} obj Optional instance to populate.
     * @return {module:model/MabJob} The populated <code>MabJob</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MabJob();
            Job.constructFromObject(data, obj);
            Job.constructFromObject(data, obj);

            if (data.hasOwnProperty('actionsInfo')) {
                obj['actionsInfo'] = ApiClient.convertToType(data['actionsInfo'], ['String']);
            }
            if (data.hasOwnProperty('duration')) {
                obj['duration'] = ApiClient.convertToType(data['duration'], 'String');
            }
            if (data.hasOwnProperty('errorDetails')) {
                obj['errorDetails'] = ApiClient.convertToType(data['errorDetails'], [MabErrorInfo]);
            }
            if (data.hasOwnProperty('extendedInfo')) {
                obj['extendedInfo'] = MabJobExtendedInfo.constructFromObject(data['extendedInfo']);
            }
            if (data.hasOwnProperty('mabServerName')) {
                obj['mabServerName'] = ApiClient.convertToType(data['mabServerName'], 'String');
            }
            if (data.hasOwnProperty('mabServerType')) {
                obj['mabServerType'] = ApiClient.convertToType(data['mabServerType'], 'String');
            }
            if (data.hasOwnProperty('workloadType')) {
                obj['workloadType'] = ApiClient.convertToType(data['workloadType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MabJob</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MabJob</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of MabJob.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is an array
        if (!Array.isArray(data['actionsInfo'])) {
            throw new Error("Expected the field `actionsInfo` to be an array in the JSON data but got " + data['actionsInfo']);
        }
        // ensure the json data is a string
        if (data['duration'] && !(typeof data['duration'] === 'string' || data['duration'] instanceof String)) {
            throw new Error("Expected the field `duration` to be a primitive type in the JSON string but got " + data['duration']);
        }
        if (data['errorDetails']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['errorDetails'])) {
                throw new Error("Expected the field `errorDetails` to be an array in the JSON data but got " + data['errorDetails']);
            }
            // validate the optional field `errorDetails` (array)
            for (const item of data['errorDetails']) {
                MabErrorInfo.validateJSON(item);
            };
        }
        // validate the optional field `extendedInfo`
        if (data['extendedInfo']) { // data not null
          MabJobExtendedInfo.validateJSON(data['extendedInfo']);
        }
        // ensure the json data is a string
        if (data['mabServerName'] && !(typeof data['mabServerName'] === 'string' || data['mabServerName'] instanceof String)) {
            throw new Error("Expected the field `mabServerName` to be a primitive type in the JSON string but got " + data['mabServerName']);
        }
        // ensure the json data is a string
        if (data['mabServerType'] && !(typeof data['mabServerType'] === 'string' || data['mabServerType'] instanceof String)) {
            throw new Error("Expected the field `mabServerType` to be a primitive type in the JSON string but got " + data['mabServerType']);
        }
        // ensure the json data is a string
        if (data['workloadType'] && !(typeof data['workloadType'] === 'string' || data['workloadType'] instanceof String)) {
            throw new Error("Expected the field `workloadType` to be a primitive type in the JSON string but got " + data['workloadType']);
        }

        return true;
    }


}

MabJob.RequiredProperties = ["jobType"];

/**
 * The state/actions applicable on jobs like cancel/retry.
 * @member {Array.<module:model/MabJob.ActionsInfoEnum>} actionsInfo
 */
MabJob.prototype['actionsInfo'] = undefined;

/**
 * Time taken by job to run.
 * @member {String} duration
 */
MabJob.prototype['duration'] = undefined;

/**
 * The errors.
 * @member {Array.<module:model/MabErrorInfo>} errorDetails
 */
MabJob.prototype['errorDetails'] = undefined;

/**
 * @member {module:model/MabJobExtendedInfo} extendedInfo
 */
MabJob.prototype['extendedInfo'] = undefined;

/**
 * Name of server protecting the DS.
 * @member {String} mabServerName
 */
MabJob.prototype['mabServerName'] = undefined;

/**
 * Server type of MAB container.
 * @member {module:model/MabJob.MabServerTypeEnum} mabServerType
 */
MabJob.prototype['mabServerType'] = undefined;

/**
 * Workload type of backup item.
 * @member {module:model/MabJob.WorkloadTypeEnum} workloadType
 */
MabJob.prototype['workloadType'] = undefined;


// Implement Job interface:
/**
 * ActivityId of job.
 * @member {String} activityId
 */
Job.prototype['activityId'] = undefined;
/**
 * Backup management type to execute the current job.
 * @member {module:model/Job.BackupManagementTypeEnum} backupManagementType
 */
Job.prototype['backupManagementType'] = undefined;
/**
 * The end time.
 * @member {Date} endTime
 */
Job.prototype['endTime'] = undefined;
/**
 * Friendly name of the entity on which the current job is executing.
 * @member {String} entityFriendlyName
 */
Job.prototype['entityFriendlyName'] = undefined;
/**
 * This property will be used as the discriminator for deciding the specific types in the polymorhpic chain of types.
 * @member {String} jobType
 */
Job.prototype['jobType'] = undefined;
/**
 * The operation name.
 * @member {String} operation
 */
Job.prototype['operation'] = undefined;
/**
 * The start time.
 * @member {Date} startTime
 */
Job.prototype['startTime'] = undefined;
/**
 * Job status.
 * @member {String} status
 */
Job.prototype['status'] = undefined;



/**
 * Allowed values for the <code>actionsInfo</code> property.
 * @enum {String}
 * @readonly
 */
MabJob['ActionsInfoEnum'] = {

    /**
     * value: "Invalid"
     * @const
     */
    "Invalid": "Invalid",

    /**
     * value: "Cancellable"
     * @const
     */
    "Cancellable": "Cancellable",

    /**
     * value: "Retriable"
     * @const
     */
    "Retriable": "Retriable"
};


/**
 * Allowed values for the <code>mabServerType</code> property.
 * @enum {String}
 * @readonly
 */
MabJob['MabServerTypeEnum'] = {

    /**
     * value: "Invalid"
     * @const
     */
    "Invalid": "Invalid",

    /**
     * value: "Unknown"
     * @const
     */
    "Unknown": "Unknown",

    /**
     * value: "IaasVMContainer"
     * @const
     */
    "IaasVMContainer": "IaasVMContainer",

    /**
     * value: "IaasVMServiceContainer"
     * @const
     */
    "IaasVMServiceContainer": "IaasVMServiceContainer",

    /**
     * value: "DPMContainer"
     * @const
     */
    "DPMContainer": "DPMContainer",

    /**
     * value: "AzureBackupServerContainer"
     * @const
     */
    "AzureBackupServerContainer": "AzureBackupServerContainer",

    /**
     * value: "MABContainer"
     * @const
     */
    "MABContainer": "MABContainer",

    /**
     * value: "Cluster"
     * @const
     */
    "Cluster": "Cluster",

    /**
     * value: "AzureSqlContainer"
     * @const
     */
    "AzureSqlContainer": "AzureSqlContainer",

    /**
     * value: "Windows"
     * @const
     */
    "Windows": "Windows",

    /**
     * value: "VCenter"
     * @const
     */
    "VCenter": "VCenter"
};


/**
 * Allowed values for the <code>workloadType</code> property.
 * @enum {String}
 * @readonly
 */
MabJob['WorkloadTypeEnum'] = {

    /**
     * value: "Invalid"
     * @const
     */
    "Invalid": "Invalid",

    /**
     * value: "VM"
     * @const
     */
    "VM": "VM",

    /**
     * value: "FileFolder"
     * @const
     */
    "FileFolder": "FileFolder",

    /**
     * value: "AzureSqlDb"
     * @const
     */
    "AzureSqlDb": "AzureSqlDb",

    /**
     * value: "SQLDB"
     * @const
     */
    "SQLDB": "SQLDB",

    /**
     * value: "Exchange"
     * @const
     */
    "Exchange": "Exchange",

    /**
     * value: "Sharepoint"
     * @const
     */
    "Sharepoint": "Sharepoint",

    /**
     * value: "VMwareVM"
     * @const
     */
    "VMwareVM": "VMwareVM",

    /**
     * value: "SystemState"
     * @const
     */
    "SystemState": "SystemState",

    /**
     * value: "Client"
     * @const
     */
    "Client": "Client",

    /**
     * value: "GenericDataSource"
     * @const
     */
    "GenericDataSource": "GenericDataSource"
};



export default MabJob;

