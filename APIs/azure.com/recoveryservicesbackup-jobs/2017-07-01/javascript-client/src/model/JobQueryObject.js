/**
 * RecoveryServicesBackupClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-07-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The JobQueryObject model module.
 * @module model/JobQueryObject
 * @version 2017-07-01
 */
class JobQueryObject {
    /**
     * Constructs a new <code>JobQueryObject</code>.
     * Filters to list the jobs.
     * @alias module:model/JobQueryObject
     */
    constructor() { 
        
        JobQueryObject.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>JobQueryObject</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/JobQueryObject} obj Optional instance to populate.
     * @return {module:model/JobQueryObject} The populated <code>JobQueryObject</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new JobQueryObject();

            if (data.hasOwnProperty('backupManagementType')) {
                obj['backupManagementType'] = ApiClient.convertToType(data['backupManagementType'], 'String');
            }
            if (data.hasOwnProperty('endTime')) {
                obj['endTime'] = ApiClient.convertToType(data['endTime'], 'Date');
            }
            if (data.hasOwnProperty('jobId')) {
                obj['jobId'] = ApiClient.convertToType(data['jobId'], 'String');
            }
            if (data.hasOwnProperty('operation')) {
                obj['operation'] = ApiClient.convertToType(data['operation'], 'String');
            }
            if (data.hasOwnProperty('startTime')) {
                obj['startTime'] = ApiClient.convertToType(data['startTime'], 'Date');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>JobQueryObject</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>JobQueryObject</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['backupManagementType'] && !(typeof data['backupManagementType'] === 'string' || data['backupManagementType'] instanceof String)) {
            throw new Error("Expected the field `backupManagementType` to be a primitive type in the JSON string but got " + data['backupManagementType']);
        }
        // ensure the json data is a string
        if (data['jobId'] && !(typeof data['jobId'] === 'string' || data['jobId'] instanceof String)) {
            throw new Error("Expected the field `jobId` to be a primitive type in the JSON string but got " + data['jobId']);
        }
        // ensure the json data is a string
        if (data['operation'] && !(typeof data['operation'] === 'string' || data['operation'] instanceof String)) {
            throw new Error("Expected the field `operation` to be a primitive type in the JSON string but got " + data['operation']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }

        return true;
    }


}



/**
 * Type of backup managmenent for the job.
 * @member {module:model/JobQueryObject.BackupManagementTypeEnum} backupManagementType
 */
JobQueryObject.prototype['backupManagementType'] = undefined;

/**
 * Job has ended at this time. Value is in UTC.
 * @member {Date} endTime
 */
JobQueryObject.prototype['endTime'] = undefined;

/**
 * JobID represents the job uniquely.
 * @member {String} jobId
 */
JobQueryObject.prototype['jobId'] = undefined;

/**
 * Type of operation.
 * @member {module:model/JobQueryObject.OperationEnum} operation
 */
JobQueryObject.prototype['operation'] = undefined;

/**
 * Job has started at this time. Value is in UTC.
 * @member {Date} startTime
 */
JobQueryObject.prototype['startTime'] = undefined;

/**
 * Status of the job.
 * @member {module:model/JobQueryObject.StatusEnum} status
 */
JobQueryObject.prototype['status'] = undefined;





/**
 * Allowed values for the <code>backupManagementType</code> property.
 * @enum {String}
 * @readonly
 */
JobQueryObject['BackupManagementTypeEnum'] = {

    /**
     * value: "Invalid"
     * @const
     */
    "Invalid": "Invalid",

    /**
     * value: "AzureIaasVM"
     * @const
     */
    "AzureIaasVM": "AzureIaasVM",

    /**
     * value: "MAB"
     * @const
     */
    "MAB": "MAB",

    /**
     * value: "DPM"
     * @const
     */
    "DPM": "DPM",

    /**
     * value: "AzureBackupServer"
     * @const
     */
    "AzureBackupServer": "AzureBackupServer",

    /**
     * value: "AzureSql"
     * @const
     */
    "AzureSql": "AzureSql"
};


/**
 * Allowed values for the <code>operation</code> property.
 * @enum {String}
 * @readonly
 */
JobQueryObject['OperationEnum'] = {

    /**
     * value: "Invalid"
     * @const
     */
    "Invalid": "Invalid",

    /**
     * value: "Register"
     * @const
     */
    "Register": "Register",

    /**
     * value: "UnRegister"
     * @const
     */
    "UnRegister": "UnRegister",

    /**
     * value: "ConfigureBackup"
     * @const
     */
    "ConfigureBackup": "ConfigureBackup",

    /**
     * value: "Backup"
     * @const
     */
    "Backup": "Backup",

    /**
     * value: "Restore"
     * @const
     */
    "Restore": "Restore",

    /**
     * value: "DisableBackup"
     * @const
     */
    "DisableBackup": "DisableBackup",

    /**
     * value: "DeleteBackupData"
     * @const
     */
    "DeleteBackupData": "DeleteBackupData"
};


/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
JobQueryObject['StatusEnum'] = {

    /**
     * value: "Invalid"
     * @const
     */
    "Invalid": "Invalid",

    /**
     * value: "InProgress"
     * @const
     */
    "InProgress": "InProgress",

    /**
     * value: "Completed"
     * @const
     */
    "Completed": "Completed",

    /**
     * value: "Failed"
     * @const
     */
    "Failed": "Failed",

    /**
     * value: "CompletedWithWarnings"
     * @const
     */
    "CompletedWithWarnings": "CompletedWithWarnings",

    /**
     * value: "Cancelled"
     * @const
     */
    "Cancelled": "Cancelled",

    /**
     * value: "Cancelling"
     * @const
     */
    "Cancelling": "Cancelling"
};



export default JobQueryObject;

