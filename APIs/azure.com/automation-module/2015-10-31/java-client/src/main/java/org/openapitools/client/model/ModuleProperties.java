/*
 * AutomationManagement
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2015-10-31
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.ContentLink;
import org.openapitools.client.model.ModuleErrorInfo;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Definition of the module property type.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:28:30.553558-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ModuleProperties {
  public static final String SERIALIZED_NAME_ACTIVITY_COUNT = "activityCount";
  @SerializedName(SERIALIZED_NAME_ACTIVITY_COUNT)
  private Integer activityCount;

  public static final String SERIALIZED_NAME_CONTENT_LINK = "contentLink";
  @SerializedName(SERIALIZED_NAME_CONTENT_LINK)
  private ContentLink contentLink;

  public static final String SERIALIZED_NAME_CREATION_TIME = "creationTime";
  @SerializedName(SERIALIZED_NAME_CREATION_TIME)
  private OffsetDateTime creationTime;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_ERROR = "error";
  @SerializedName(SERIALIZED_NAME_ERROR)
  private ModuleErrorInfo error;

  public static final String SERIALIZED_NAME_IS_COMPOSITE = "isComposite";
  @SerializedName(SERIALIZED_NAME_IS_COMPOSITE)
  private Boolean isComposite;

  public static final String SERIALIZED_NAME_IS_GLOBAL = "isGlobal";
  @SerializedName(SERIALIZED_NAME_IS_GLOBAL)
  private Boolean isGlobal;

  public static final String SERIALIZED_NAME_LAST_MODIFIED_TIME = "lastModifiedTime";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED_TIME)
  private OffsetDateTime lastModifiedTime;

  /**
   * Gets or sets the provisioning state of the module.
   */
  @JsonAdapter(ProvisioningStateEnum.Adapter.class)
  public enum ProvisioningStateEnum {
    CREATED("Created"),
    
    CREATING("Creating"),
    
    STARTING_IMPORT_MODULE_RUNBOOK("StartingImportModuleRunbook"),
    
    RUNNING_IMPORT_MODULE_RUNBOOK("RunningImportModuleRunbook"),
    
    CONTENT_RETRIEVED("ContentRetrieved"),
    
    CONTENT_DOWNLOADED("ContentDownloaded"),
    
    CONTENT_VALIDATED("ContentValidated"),
    
    CONNECTION_TYPE_IMPORTED("ConnectionTypeImported"),
    
    CONTENT_STORED("ContentStored"),
    
    MODULE_DATA_STORED("ModuleDataStored"),
    
    ACTIVITIES_STORED("ActivitiesStored"),
    
    MODULE_IMPORT_RUNBOOK_COMPLETE("ModuleImportRunbookComplete"),
    
    SUCCEEDED("Succeeded"),
    
    FAILED("Failed"),
    
    CANCELLED("Cancelled"),
    
    UPDATING("Updating");

    private String value;

    ProvisioningStateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ProvisioningStateEnum fromValue(String value) {
      for (ProvisioningStateEnum b : ProvisioningStateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ProvisioningStateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ProvisioningStateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ProvisioningStateEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ProvisioningStateEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      ProvisioningStateEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_PROVISIONING_STATE = "provisioningState";
  @SerializedName(SERIALIZED_NAME_PROVISIONING_STATE)
  private ProvisioningStateEnum provisioningState;

  public static final String SERIALIZED_NAME_SIZE_IN_BYTES = "sizeInBytes";
  @SerializedName(SERIALIZED_NAME_SIZE_IN_BYTES)
  private Long sizeInBytes;

  public static final String SERIALIZED_NAME_VERSION = "version";
  @SerializedName(SERIALIZED_NAME_VERSION)
  private String version;

  public ModuleProperties() {
  }

  public ModuleProperties activityCount(Integer activityCount) {
    this.activityCount = activityCount;
    return this;
  }

  /**
   * Gets or sets the activity count of the module.
   * @return activityCount
   */
  @javax.annotation.Nullable
  public Integer getActivityCount() {
    return activityCount;
  }

  public void setActivityCount(Integer activityCount) {
    this.activityCount = activityCount;
  }


  public ModuleProperties contentLink(ContentLink contentLink) {
    this.contentLink = contentLink;
    return this;
  }

  /**
   * Get contentLink
   * @return contentLink
   */
  @javax.annotation.Nullable
  public ContentLink getContentLink() {
    return contentLink;
  }

  public void setContentLink(ContentLink contentLink) {
    this.contentLink = contentLink;
  }


  public ModuleProperties creationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
    return this;
  }

  /**
   * Gets or sets the creation time.
   * @return creationTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreationTime() {
    return creationTime;
  }

  public void setCreationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
  }


  public ModuleProperties description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Gets or sets the description.
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public ModuleProperties error(ModuleErrorInfo error) {
    this.error = error;
    return this;
  }

  /**
   * Get error
   * @return error
   */
  @javax.annotation.Nullable
  public ModuleErrorInfo getError() {
    return error;
  }

  public void setError(ModuleErrorInfo error) {
    this.error = error;
  }


  public ModuleProperties isComposite(Boolean isComposite) {
    this.isComposite = isComposite;
    return this;
  }

  /**
   * Gets or sets type of module, if its composite or not.
   * @return isComposite
   */
  @javax.annotation.Nullable
  public Boolean getIsComposite() {
    return isComposite;
  }

  public void setIsComposite(Boolean isComposite) {
    this.isComposite = isComposite;
  }


  public ModuleProperties isGlobal(Boolean isGlobal) {
    this.isGlobal = isGlobal;
    return this;
  }

  /**
   * Gets or sets the isGlobal flag of the module.
   * @return isGlobal
   */
  @javax.annotation.Nullable
  public Boolean getIsGlobal() {
    return isGlobal;
  }

  public void setIsGlobal(Boolean isGlobal) {
    this.isGlobal = isGlobal;
  }


  public ModuleProperties lastModifiedTime(OffsetDateTime lastModifiedTime) {
    this.lastModifiedTime = lastModifiedTime;
    return this;
  }

  /**
   * Gets or sets the last modified time.
   * @return lastModifiedTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastModifiedTime() {
    return lastModifiedTime;
  }

  public void setLastModifiedTime(OffsetDateTime lastModifiedTime) {
    this.lastModifiedTime = lastModifiedTime;
  }


  public ModuleProperties provisioningState(ProvisioningStateEnum provisioningState) {
    this.provisioningState = provisioningState;
    return this;
  }

  /**
   * Gets or sets the provisioning state of the module.
   * @return provisioningState
   */
  @javax.annotation.Nullable
  public ProvisioningStateEnum getProvisioningState() {
    return provisioningState;
  }

  public void setProvisioningState(ProvisioningStateEnum provisioningState) {
    this.provisioningState = provisioningState;
  }


  public ModuleProperties sizeInBytes(Long sizeInBytes) {
    this.sizeInBytes = sizeInBytes;
    return this;
  }

  /**
   * Gets or sets the size in bytes of the module.
   * @return sizeInBytes
   */
  @javax.annotation.Nullable
  public Long getSizeInBytes() {
    return sizeInBytes;
  }

  public void setSizeInBytes(Long sizeInBytes) {
    this.sizeInBytes = sizeInBytes;
  }


  public ModuleProperties version(String version) {
    this.version = version;
    return this;
  }

  /**
   * Gets or sets the version of the module.
   * @return version
   */
  @javax.annotation.Nullable
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModuleProperties moduleProperties = (ModuleProperties) o;
    return Objects.equals(this.activityCount, moduleProperties.activityCount) &&
        Objects.equals(this.contentLink, moduleProperties.contentLink) &&
        Objects.equals(this.creationTime, moduleProperties.creationTime) &&
        Objects.equals(this.description, moduleProperties.description) &&
        Objects.equals(this.error, moduleProperties.error) &&
        Objects.equals(this.isComposite, moduleProperties.isComposite) &&
        Objects.equals(this.isGlobal, moduleProperties.isGlobal) &&
        Objects.equals(this.lastModifiedTime, moduleProperties.lastModifiedTime) &&
        Objects.equals(this.provisioningState, moduleProperties.provisioningState) &&
        Objects.equals(this.sizeInBytes, moduleProperties.sizeInBytes) &&
        Objects.equals(this.version, moduleProperties.version);
  }

  @Override
  public int hashCode() {
    return Objects.hash(activityCount, contentLink, creationTime, description, error, isComposite, isGlobal, lastModifiedTime, provisioningState, sizeInBytes, version);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModuleProperties {\n");
    sb.append("    activityCount: ").append(toIndentedString(activityCount)).append("\n");
    sb.append("    contentLink: ").append(toIndentedString(contentLink)).append("\n");
    sb.append("    creationTime: ").append(toIndentedString(creationTime)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    error: ").append(toIndentedString(error)).append("\n");
    sb.append("    isComposite: ").append(toIndentedString(isComposite)).append("\n");
    sb.append("    isGlobal: ").append(toIndentedString(isGlobal)).append("\n");
    sb.append("    lastModifiedTime: ").append(toIndentedString(lastModifiedTime)).append("\n");
    sb.append("    provisioningState: ").append(toIndentedString(provisioningState)).append("\n");
    sb.append("    sizeInBytes: ").append(toIndentedString(sizeInBytes)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("activityCount");
    openapiFields.add("contentLink");
    openapiFields.add("creationTime");
    openapiFields.add("description");
    openapiFields.add("error");
    openapiFields.add("isComposite");
    openapiFields.add("isGlobal");
    openapiFields.add("lastModifiedTime");
    openapiFields.add("provisioningState");
    openapiFields.add("sizeInBytes");
    openapiFields.add("version");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ModuleProperties
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ModuleProperties.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ModuleProperties is not found in the empty JSON string", ModuleProperties.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ModuleProperties.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ModuleProperties` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `contentLink`
      if (jsonObj.get("contentLink") != null && !jsonObj.get("contentLink").isJsonNull()) {
        ContentLink.validateJsonElement(jsonObj.get("contentLink"));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      // validate the optional field `error`
      if (jsonObj.get("error") != null && !jsonObj.get("error").isJsonNull()) {
        ModuleErrorInfo.validateJsonElement(jsonObj.get("error"));
      }
      if ((jsonObj.get("provisioningState") != null && !jsonObj.get("provisioningState").isJsonNull()) && !jsonObj.get("provisioningState").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `provisioningState` to be a primitive type in the JSON string but got `%s`", jsonObj.get("provisioningState").toString()));
      }
      // validate the optional field `provisioningState`
      if (jsonObj.get("provisioningState") != null && !jsonObj.get("provisioningState").isJsonNull()) {
        ProvisioningStateEnum.validateJsonElement(jsonObj.get("provisioningState"));
      }
      if ((jsonObj.get("version") != null && !jsonObj.get("version").isJsonNull()) && !jsonObj.get("version").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `version` to be a primitive type in the JSON string but got `%s`", jsonObj.get("version").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ModuleProperties.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ModuleProperties' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ModuleProperties> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ModuleProperties.class));

       return (TypeAdapter<T>) new TypeAdapter<ModuleProperties>() {
           @Override
           public void write(JsonWriter out, ModuleProperties value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ModuleProperties read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ModuleProperties given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ModuleProperties
   * @throws IOException if the JSON string is invalid with respect to ModuleProperties
   */
  public static ModuleProperties fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ModuleProperties.class);
  }

  /**
   * Convert an instance of ModuleProperties to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

