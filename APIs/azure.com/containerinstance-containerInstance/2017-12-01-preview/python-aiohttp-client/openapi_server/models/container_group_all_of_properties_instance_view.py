# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.event import Event
from openapi_server import util


class ContainerGroupAllOfPropertiesInstanceView(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, events: List[Event]=None, state: str=None):
        """ContainerGroupAllOfPropertiesInstanceView - a model defined in OpenAPI

        :param events: The events of this ContainerGroupAllOfPropertiesInstanceView.
        :param state: The state of this ContainerGroupAllOfPropertiesInstanceView.
        """
        self.openapi_types = {
            'events': List[Event],
            'state': str
        }

        self.attribute_map = {
            'events': 'events',
            'state': 'state'
        }

        self._events = events
        self._state = state

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ContainerGroupAllOfPropertiesInstanceView':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ContainerGroup_allOf_properties_instanceView of this ContainerGroupAllOfPropertiesInstanceView.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def events(self):
        """Gets the events of this ContainerGroupAllOfPropertiesInstanceView.

        The events of this container group.

        :return: The events of this ContainerGroupAllOfPropertiesInstanceView.
        :rtype: List[Event]
        """
        return self._events

    @events.setter
    def events(self, events):
        """Sets the events of this ContainerGroupAllOfPropertiesInstanceView.

        The events of this container group.

        :param events: The events of this ContainerGroupAllOfPropertiesInstanceView.
        :type events: List[Event]
        """

        self._events = events

    @property
    def state(self):
        """Gets the state of this ContainerGroupAllOfPropertiesInstanceView.

        The state of the container group. Only valid in response.

        :return: The state of this ContainerGroupAllOfPropertiesInstanceView.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this ContainerGroupAllOfPropertiesInstanceView.

        The state of the container group. Only valid in response.

        :param state: The state of this ContainerGroupAllOfPropertiesInstanceView.
        :type state: str
        """

        self._state = state
