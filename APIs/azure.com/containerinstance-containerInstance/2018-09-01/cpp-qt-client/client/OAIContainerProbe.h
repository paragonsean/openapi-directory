/**
 * ContainerInstanceManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-09-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIContainerProbe.h
 *
 * The container probe, for liveness or readiness
 */

#ifndef OAIContainerProbe_H
#define OAIContainerProbe_H

#include <QJsonObject>

#include "OAIContainerExec.h"
#include "OAIContainerHttpGet.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIContainerExec;
class OAIContainerHttpGet;

class OAIContainerProbe : public OAIObject {
public:
    OAIContainerProbe();
    OAIContainerProbe(QString json);
    ~OAIContainerProbe() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIContainerExec getExec() const;
    void setExec(const OAIContainerExec &exec);
    bool is_exec_Set() const;
    bool is_exec_Valid() const;

    qint32 getFailureThreshold() const;
    void setFailureThreshold(const qint32 &failure_threshold);
    bool is_failure_threshold_Set() const;
    bool is_failure_threshold_Valid() const;

    OAIContainerHttpGet getHttpGet() const;
    void setHttpGet(const OAIContainerHttpGet &http_get);
    bool is_http_get_Set() const;
    bool is_http_get_Valid() const;

    qint32 getInitialDelaySeconds() const;
    void setInitialDelaySeconds(const qint32 &initial_delay_seconds);
    bool is_initial_delay_seconds_Set() const;
    bool is_initial_delay_seconds_Valid() const;

    qint32 getPeriodSeconds() const;
    void setPeriodSeconds(const qint32 &period_seconds);
    bool is_period_seconds_Set() const;
    bool is_period_seconds_Valid() const;

    qint32 getSuccessThreshold() const;
    void setSuccessThreshold(const qint32 &success_threshold);
    bool is_success_threshold_Set() const;
    bool is_success_threshold_Valid() const;

    qint32 getTimeoutSeconds() const;
    void setTimeoutSeconds(const qint32 &timeout_seconds);
    bool is_timeout_seconds_Set() const;
    bool is_timeout_seconds_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIContainerExec m_exec;
    bool m_exec_isSet;
    bool m_exec_isValid;

    qint32 m_failure_threshold;
    bool m_failure_threshold_isSet;
    bool m_failure_threshold_isValid;

    OAIContainerHttpGet m_http_get;
    bool m_http_get_isSet;
    bool m_http_get_isValid;

    qint32 m_initial_delay_seconds;
    bool m_initial_delay_seconds_isSet;
    bool m_initial_delay_seconds_isValid;

    qint32 m_period_seconds;
    bool m_period_seconds_isSet;
    bool m_period_seconds_isValid;

    qint32 m_success_threshold;
    bool m_success_threshold_isSet;
    bool m_success_threshold_isValid;

    qint32 m_timeout_seconds;
    bool m_timeout_seconds_isSet;
    bool m_timeout_seconds_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIContainerProbe)

#endif // OAIContainerProbe_H
