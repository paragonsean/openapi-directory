/**
 * ContainerInstanceManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-09-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIContainerGroup_allOf_properties.h
 *
 * 
 */

#ifndef OAIContainerGroup_allOf_properties_H
#define OAIContainerGroup_allOf_properties_H

#include <QJsonObject>

#include "OAIContainer.h"
#include "OAIContainerGroupDiagnostics.h"
#include "OAIContainerGroupNetworkProfile.h"
#include "OAIContainerGroup_allOf_properties_instanceView.h"
#include "OAIImageRegistryCredential.h"
#include "OAIIpAddress.h"
#include "OAIVolume.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIContainer;
class OAIContainerGroupDiagnostics;
class OAIImageRegistryCredential;
class OAIContainerGroup_allOf_properties_instanceView;
class OAIIpAddress;
class OAIContainerGroupNetworkProfile;
class OAIVolume;

class OAIContainerGroup_allOf_properties : public OAIObject {
public:
    OAIContainerGroup_allOf_properties();
    OAIContainerGroup_allOf_properties(QString json);
    ~OAIContainerGroup_allOf_properties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIContainer> getContainers() const;
    void setContainers(const QList<OAIContainer> &containers);
    bool is_containers_Set() const;
    bool is_containers_Valid() const;

    OAIContainerGroupDiagnostics getDiagnostics() const;
    void setDiagnostics(const OAIContainerGroupDiagnostics &diagnostics);
    bool is_diagnostics_Set() const;
    bool is_diagnostics_Valid() const;

    QList<OAIImageRegistryCredential> getImageRegistryCredentials() const;
    void setImageRegistryCredentials(const QList<OAIImageRegistryCredential> &image_registry_credentials);
    bool is_image_registry_credentials_Set() const;
    bool is_image_registry_credentials_Valid() const;

    OAIContainerGroup_allOf_properties_instanceView getInstanceView() const;
    void setInstanceView(const OAIContainerGroup_allOf_properties_instanceView &instance_view);
    bool is_instance_view_Set() const;
    bool is_instance_view_Valid() const;

    OAIIpAddress getIpAddress() const;
    void setIpAddress(const OAIIpAddress &ip_address);
    bool is_ip_address_Set() const;
    bool is_ip_address_Valid() const;

    OAIContainerGroupNetworkProfile getNetworkProfile() const;
    void setNetworkProfile(const OAIContainerGroupNetworkProfile &network_profile);
    bool is_network_profile_Set() const;
    bool is_network_profile_Valid() const;

    QString getOsType() const;
    void setOsType(const QString &os_type);
    bool is_os_type_Set() const;
    bool is_os_type_Valid() const;

    QString getProvisioningState() const;
    void setProvisioningState(const QString &provisioning_state);
    bool is_provisioning_state_Set() const;
    bool is_provisioning_state_Valid() const;

    QString getRestartPolicy() const;
    void setRestartPolicy(const QString &restart_policy);
    bool is_restart_policy_Set() const;
    bool is_restart_policy_Valid() const;

    QList<OAIVolume> getVolumes() const;
    void setVolumes(const QList<OAIVolume> &volumes);
    bool is_volumes_Set() const;
    bool is_volumes_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIContainer> m_containers;
    bool m_containers_isSet;
    bool m_containers_isValid;

    OAIContainerGroupDiagnostics m_diagnostics;
    bool m_diagnostics_isSet;
    bool m_diagnostics_isValid;

    QList<OAIImageRegistryCredential> m_image_registry_credentials;
    bool m_image_registry_credentials_isSet;
    bool m_image_registry_credentials_isValid;

    OAIContainerGroup_allOf_properties_instanceView m_instance_view;
    bool m_instance_view_isSet;
    bool m_instance_view_isValid;

    OAIIpAddress m_ip_address;
    bool m_ip_address_isSet;
    bool m_ip_address_isValid;

    OAIContainerGroupNetworkProfile m_network_profile;
    bool m_network_profile_isSet;
    bool m_network_profile_isValid;

    QString m_os_type;
    bool m_os_type_isSet;
    bool m_os_type_isValid;

    QString m_provisioning_state;
    bool m_provisioning_state_isSet;
    bool m_provisioning_state_isValid;

    QString m_restart_policy;
    bool m_restart_policy_isSet;
    bool m_restart_policy_isValid;

    QList<OAIVolume> m_volumes;
    bool m_volumes_isSet;
    bool m_volumes_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIContainerGroup_allOf_properties)

#endif // OAIContainerGroup_allOf_properties_H
