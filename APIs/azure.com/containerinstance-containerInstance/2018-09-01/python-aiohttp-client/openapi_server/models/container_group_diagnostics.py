# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.log_analytics import LogAnalytics
from openapi_server import util


class ContainerGroupDiagnostics(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, log_analytics: LogAnalytics=None):
        """ContainerGroupDiagnostics - a model defined in OpenAPI

        :param log_analytics: The log_analytics of this ContainerGroupDiagnostics.
        """
        self.openapi_types = {
            'log_analytics': LogAnalytics
        }

        self.attribute_map = {
            'log_analytics': 'logAnalytics'
        }

        self._log_analytics = log_analytics

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ContainerGroupDiagnostics':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ContainerGroupDiagnostics of this ContainerGroupDiagnostics.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def log_analytics(self):
        """Gets the log_analytics of this ContainerGroupDiagnostics.


        :return: The log_analytics of this ContainerGroupDiagnostics.
        :rtype: LogAnalytics
        """
        return self._log_analytics

    @log_analytics.setter
    def log_analytics(self, log_analytics):
        """Sets the log_analytics of this ContainerGroupDiagnostics.


        :param log_analytics: The log_analytics of this ContainerGroupDiagnostics.
        :type log_analytics: LogAnalytics
        """

        self._log_analytics = log_analytics
