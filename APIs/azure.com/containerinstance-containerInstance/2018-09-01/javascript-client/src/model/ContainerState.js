/**
 * ContainerInstanceManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-09-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ContainerState model module.
 * @module model/ContainerState
 * @version 2018-09-01
 */
class ContainerState {
    /**
     * Constructs a new <code>ContainerState</code>.
     * The container instance state.
     * @alias module:model/ContainerState
     */
    constructor() { 
        
        ContainerState.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ContainerState</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ContainerState} obj Optional instance to populate.
     * @return {module:model/ContainerState} The populated <code>ContainerState</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ContainerState();

            if (data.hasOwnProperty('detailStatus')) {
                obj['detailStatus'] = ApiClient.convertToType(data['detailStatus'], 'String');
            }
            if (data.hasOwnProperty('exitCode')) {
                obj['exitCode'] = ApiClient.convertToType(data['exitCode'], 'Number');
            }
            if (data.hasOwnProperty('finishTime')) {
                obj['finishTime'] = ApiClient.convertToType(data['finishTime'], 'Date');
            }
            if (data.hasOwnProperty('startTime')) {
                obj['startTime'] = ApiClient.convertToType(data['startTime'], 'Date');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ContainerState</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ContainerState</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['detailStatus'] && !(typeof data['detailStatus'] === 'string' || data['detailStatus'] instanceof String)) {
            throw new Error("Expected the field `detailStatus` to be a primitive type in the JSON string but got " + data['detailStatus']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }

        return true;
    }


}



/**
 * The human-readable status of the container instance state.
 * @member {String} detailStatus
 */
ContainerState.prototype['detailStatus'] = undefined;

/**
 * The container instance exit codes correspond to those from the `docker run` command.
 * @member {Number} exitCode
 */
ContainerState.prototype['exitCode'] = undefined;

/**
 * The date-time when the container instance state finished.
 * @member {Date} finishTime
 */
ContainerState.prototype['finishTime'] = undefined;

/**
 * The date-time when the container instance state started.
 * @member {Date} startTime
 */
ContainerState.prototype['startTime'] = undefined;

/**
 * The state of the container instance.
 * @member {String} state
 */
ContainerState.prototype['state'] = undefined;






export default ContainerState;

