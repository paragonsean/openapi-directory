/*
 * ContainerInstanceManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-09-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ContainerExecRequest;
import org.openapitools.client.model.ContainerExecResponse;
import org.openapitools.client.model.ContainerGroup;
import org.openapitools.client.model.ContainerGroupListResult;
import org.openapitools.client.model.Logs;
import org.openapitools.client.model.Resource;
import org.openapitools.client.model.UsageListResult;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Disabled
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    /**
     * Executes a command in a specific container instance.
     *
     * Executes a command for a specific container instance in a specified resource group and container group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void containerExecuteCommandTest() throws ApiException {
        String subscriptionId = null;
        String apiVersion = null;
        String resourceGroupName = null;
        String containerGroupName = null;
        String containerName = null;
        ContainerExecRequest containerExecRequest = null;
        ContainerExecResponse response = api.containerExecuteCommand(subscriptionId, apiVersion, resourceGroupName, containerGroupName, containerName, containerExecRequest);
        // TODO: test validations
    }

    /**
     * Get the usage for a subscription
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void containerGroupUsageListTest() throws ApiException {
        String subscriptionId = null;
        String location = null;
        String apiVersion = null;
        UsageListResult response = api.containerGroupUsageList(subscriptionId, location, apiVersion);
        // TODO: test validations
    }

    /**
     * Create or update container groups.
     *
     * Create or update container groups with specified configurations.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void containerGroupsCreateOrUpdateTest() throws ApiException {
        String subscriptionId = null;
        String apiVersion = null;
        String resourceGroupName = null;
        String containerGroupName = null;
        ContainerGroup containerGroup = null;
        ContainerGroup response = api.containerGroupsCreateOrUpdate(subscriptionId, apiVersion, resourceGroupName, containerGroupName, containerGroup);
        // TODO: test validations
    }

    /**
     * Delete the specified container group.
     *
     * Delete the specified container group in the specified subscription and resource group. The operation does not delete other resources provided by the user, such as volumes.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void containerGroupsDeleteTest() throws ApiException {
        String subscriptionId = null;
        String apiVersion = null;
        String resourceGroupName = null;
        String containerGroupName = null;
        ContainerGroup response = api.containerGroupsDelete(subscriptionId, apiVersion, resourceGroupName, containerGroupName);
        // TODO: test validations
    }

    /**
     * Get the properties of the specified container group.
     *
     * Gets the properties of the specified container group in the specified subscription and resource group. The operation returns the properties of each container group including containers, image registry credentials, restart policy, IP address type, OS type, state, and volumes.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void containerGroupsGetTest() throws ApiException {
        String subscriptionId = null;
        String apiVersion = null;
        String resourceGroupName = null;
        String containerGroupName = null;
        ContainerGroup response = api.containerGroupsGet(subscriptionId, apiVersion, resourceGroupName, containerGroupName);
        // TODO: test validations
    }

    /**
     * Get a list of container groups in the specified subscription.
     *
     * Get a list of container groups in the specified subscription. This operation returns properties of each container group including containers, image registry credentials, restart policy, IP address type, OS type, state, and volumes.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void containerGroupsListTest() throws ApiException {
        String subscriptionId = null;
        String apiVersion = null;
        ContainerGroupListResult response = api.containerGroupsList(subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Get a list of container groups in the specified subscription and resource group.
     *
     * Get a list of container groups in a specified subscription and resource group. This operation returns properties of each container group including containers, image registry credentials, restart policy, IP address type, OS type, state, and volumes.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void containerGroupsListByResourceGroupTest() throws ApiException {
        String subscriptionId = null;
        String apiVersion = null;
        String resourceGroupName = null;
        ContainerGroupListResult response = api.containerGroupsListByResourceGroup(subscriptionId, apiVersion, resourceGroupName);
        // TODO: test validations
    }

    /**
     * Restarts all containers in a container group.
     *
     * Restarts all containers in a container group in place. If container image has updates, new image will be downloaded.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void containerGroupsRestartTest() throws ApiException {
        String subscriptionId = null;
        String apiVersion = null;
        String resourceGroupName = null;
        String containerGroupName = null;
        api.containerGroupsRestart(subscriptionId, apiVersion, resourceGroupName, containerGroupName);
        // TODO: test validations
    }

    /**
     * Stops all containers in a container group.
     *
     * Stops all containers in a container group. Compute resources will be deallocated and billing will stop.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void containerGroupsStopTest() throws ApiException {
        String subscriptionId = null;
        String apiVersion = null;
        String resourceGroupName = null;
        String containerGroupName = null;
        api.containerGroupsStop(subscriptionId, apiVersion, resourceGroupName, containerGroupName);
        // TODO: test validations
    }

    /**
     * Update container groups.
     *
     * Updates container group tags with specified values.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void containerGroupsUpdateTest() throws ApiException {
        String subscriptionId = null;
        String apiVersion = null;
        String resourceGroupName = null;
        String containerGroupName = null;
        Resource resource = null;
        ContainerGroup response = api.containerGroupsUpdate(subscriptionId, apiVersion, resourceGroupName, containerGroupName, resource);
        // TODO: test validations
    }

    /**
     * Get the logs for a specified container instance.
     *
     * Get the logs for a specified container instance in a specified resource group and container group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void containerListLogsTest() throws ApiException {
        String subscriptionId = null;
        String apiVersion = null;
        String resourceGroupName = null;
        String containerGroupName = null;
        String containerName = null;
        Integer tail = null;
        Logs response = api.containerListLogs(subscriptionId, apiVersion, resourceGroupName, containerGroupName, containerName, tail);
        // TODO: test validations
    }

}
