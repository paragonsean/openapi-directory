/**
 * ContainerInstanceManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-04-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIContainerExecRequest_terminalSize.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIContainerExecRequest_terminalSize::OAIContainerExecRequest_terminalSize(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIContainerExecRequest_terminalSize::OAIContainerExecRequest_terminalSize() {
    this->initializeModel();
}

OAIContainerExecRequest_terminalSize::~OAIContainerExecRequest_terminalSize() {}

void OAIContainerExecRequest_terminalSize::initializeModel() {

    m_column_isSet = false;
    m_column_isValid = false;

    m_row_isSet = false;
    m_row_isValid = false;
}

void OAIContainerExecRequest_terminalSize::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIContainerExecRequest_terminalSize::fromJsonObject(QJsonObject json) {

    m_column_isValid = ::OpenAPI::fromJsonValue(m_column, json[QString("column")]);
    m_column_isSet = !json[QString("column")].isNull() && m_column_isValid;

    m_row_isValid = ::OpenAPI::fromJsonValue(m_row, json[QString("row")]);
    m_row_isSet = !json[QString("row")].isNull() && m_row_isValid;
}

QString OAIContainerExecRequest_terminalSize::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIContainerExecRequest_terminalSize::asJsonObject() const {
    QJsonObject obj;
    if (m_column_isSet) {
        obj.insert(QString("column"), ::OpenAPI::toJsonValue(m_column));
    }
    if (m_row_isSet) {
        obj.insert(QString("row"), ::OpenAPI::toJsonValue(m_row));
    }
    return obj;
}

qint32 OAIContainerExecRequest_terminalSize::getColumn() const {
    return m_column;
}
void OAIContainerExecRequest_terminalSize::setColumn(const qint32 &column) {
    m_column = column;
    m_column_isSet = true;
}

bool OAIContainerExecRequest_terminalSize::is_column_Set() const{
    return m_column_isSet;
}

bool OAIContainerExecRequest_terminalSize::is_column_Valid() const{
    return m_column_isValid;
}

qint32 OAIContainerExecRequest_terminalSize::getRow() const {
    return m_row;
}
void OAIContainerExecRequest_terminalSize::setRow(const qint32 &row) {
    m_row = row;
    m_row_isSet = true;
}

bool OAIContainerExecRequest_terminalSize::is_row_Set() const{
    return m_row_isSet;
}

bool OAIContainerExecRequest_terminalSize::is_row_Valid() const{
    return m_row_isValid;
}

bool OAIContainerExecRequest_terminalSize::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_column_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_row_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIContainerExecRequest_terminalSize::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
