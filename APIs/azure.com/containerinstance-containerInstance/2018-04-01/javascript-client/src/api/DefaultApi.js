/**
 * ContainerInstanceManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-04-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ContainerExecRequest from '../model/ContainerExecRequest';
import ContainerExecResponse from '../model/ContainerExecResponse';
import ContainerGroup from '../model/ContainerGroup';
import ContainerGroupListResult from '../model/ContainerGroupListResult';
import Logs from '../model/Logs';
import Resource from '../model/Resource';
import UsageListResult from '../model/UsageListResult';

/**
* Default service.
* @module api/DefaultApi
* @version 2018-04-01
*/
export default class DefaultApi {

    /**
    * Constructs a new DefaultApi. 
    * @alias module:api/DefaultApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the containerGroupUsageList operation.
     * @callback module:api/DefaultApi~containerGroupUsageListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UsageListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the usage for a subscription
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} location The identifier for the physical azure location.
     * @param {String} apiVersion Client API version
     * @param {module:api/DefaultApi~containerGroupUsageListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UsageListResult}
     */
    containerGroupUsageList(subscriptionId, location, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling containerGroupUsageList");
      }
      // verify the required parameter 'location' is set
      if (location === undefined || location === null) {
        throw new Error("Missing the required parameter 'location' when calling containerGroupUsageList");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling containerGroupUsageList");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'location': location
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = UsageListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.ContainerInstance/locations/{location}/usages', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the containerGroupsCreateOrUpdate operation.
     * @callback module:api/DefaultApi~containerGroupsCreateOrUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ContainerGroup} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create or update container groups.
     * Create or update container groups with specified configurations.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} apiVersion Client API version
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} containerGroupName The name of the container group.
     * @param {module:model/ContainerGroup} containerGroup The properties of the container group to be created or updated.
     * @param {module:api/DefaultApi~containerGroupsCreateOrUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ContainerGroup}
     */
    containerGroupsCreateOrUpdate(subscriptionId, apiVersion, resourceGroupName, containerGroupName, containerGroup, callback) {
      let postBody = containerGroup;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling containerGroupsCreateOrUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling containerGroupsCreateOrUpdate");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling containerGroupsCreateOrUpdate");
      }
      // verify the required parameter 'containerGroupName' is set
      if (containerGroupName === undefined || containerGroupName === null) {
        throw new Error("Missing the required parameter 'containerGroupName' when calling containerGroupsCreateOrUpdate");
      }
      // verify the required parameter 'containerGroup' is set
      if (containerGroup === undefined || containerGroup === null) {
        throw new Error("Missing the required parameter 'containerGroup' when calling containerGroupsCreateOrUpdate");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'containerGroupName': containerGroupName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ContainerGroup;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerInstance/containerGroups/{containerGroupName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the containerGroupsDelete operation.
     * @callback module:api/DefaultApi~containerGroupsDeleteCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ContainerGroup} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete the specified container group.
     * Delete the specified container group in the specified subscription and resource group. The operation does not delete other resources provided by the user, such as volumes.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} apiVersion Client API version
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} containerGroupName The name of the container group.
     * @param {module:api/DefaultApi~containerGroupsDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ContainerGroup}
     */
    containerGroupsDelete(subscriptionId, apiVersion, resourceGroupName, containerGroupName, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling containerGroupsDelete");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling containerGroupsDelete");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling containerGroupsDelete");
      }
      // verify the required parameter 'containerGroupName' is set
      if (containerGroupName === undefined || containerGroupName === null) {
        throw new Error("Missing the required parameter 'containerGroupName' when calling containerGroupsDelete");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'containerGroupName': containerGroupName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ContainerGroup;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerInstance/containerGroups/{containerGroupName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the containerGroupsGet operation.
     * @callback module:api/DefaultApi~containerGroupsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ContainerGroup} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the properties of the specified container group.
     * Gets the properties of the specified container group in the specified subscription and resource group. The operation returns the properties of each container group including containers, image registry credentials, restart policy, IP address type, OS type, state, and volumes.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} apiVersion Client API version
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} containerGroupName The name of the container group.
     * @param {module:api/DefaultApi~containerGroupsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ContainerGroup}
     */
    containerGroupsGet(subscriptionId, apiVersion, resourceGroupName, containerGroupName, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling containerGroupsGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling containerGroupsGet");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling containerGroupsGet");
      }
      // verify the required parameter 'containerGroupName' is set
      if (containerGroupName === undefined || containerGroupName === null) {
        throw new Error("Missing the required parameter 'containerGroupName' when calling containerGroupsGet");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'containerGroupName': containerGroupName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ContainerGroup;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerInstance/containerGroups/{containerGroupName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the containerGroupsList operation.
     * @callback module:api/DefaultApi~containerGroupsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ContainerGroupListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a list of container groups in the specified subscription.
     * Get a list of container groups in the specified subscription. This operation returns properties of each container group including containers, image registry credentials, restart policy, IP address type, OS type, state, and volumes.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} apiVersion Client API version
     * @param {module:api/DefaultApi~containerGroupsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ContainerGroupListResult}
     */
    containerGroupsList(subscriptionId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling containerGroupsList");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling containerGroupsList");
      }

      let pathParams = {
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ContainerGroupListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.ContainerInstance/containerGroups', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the containerGroupsListByResourceGroup operation.
     * @callback module:api/DefaultApi~containerGroupsListByResourceGroupCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ContainerGroupListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a list of container groups in the specified subscription and resource group.
     * Get a list of container groups in a specified subscription and resource group. This operation returns properties of each container group including containers, image registry credentials, restart policy, IP address type, OS type, state, and volumes.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} apiVersion Client API version
     * @param {String} resourceGroupName The name of the resource group.
     * @param {module:api/DefaultApi~containerGroupsListByResourceGroupCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ContainerGroupListResult}
     */
    containerGroupsListByResourceGroup(subscriptionId, apiVersion, resourceGroupName, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling containerGroupsListByResourceGroup");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling containerGroupsListByResourceGroup");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling containerGroupsListByResourceGroup");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ContainerGroupListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerInstance/containerGroups', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the containerGroupsUpdate operation.
     * @callback module:api/DefaultApi~containerGroupsUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ContainerGroup} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update container groups.
     * Updates container group tags with specified values.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} apiVersion Client API version
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} containerGroupName The name of the container group.
     * @param {module:model/Resource} resource The container group resource with just the tags to be updated.
     * @param {module:api/DefaultApi~containerGroupsUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ContainerGroup}
     */
    containerGroupsUpdate(subscriptionId, apiVersion, resourceGroupName, containerGroupName, resource, callback) {
      let postBody = resource;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling containerGroupsUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling containerGroupsUpdate");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling containerGroupsUpdate");
      }
      // verify the required parameter 'containerGroupName' is set
      if (containerGroupName === undefined || containerGroupName === null) {
        throw new Error("Missing the required parameter 'containerGroupName' when calling containerGroupsUpdate");
      }
      // verify the required parameter 'resource' is set
      if (resource === undefined || resource === null) {
        throw new Error("Missing the required parameter 'resource' when calling containerGroupsUpdate");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'containerGroupName': containerGroupName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ContainerGroup;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerInstance/containerGroups/{containerGroupName}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the containerLogsList operation.
     * @callback module:api/DefaultApi~containerLogsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Logs} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the logs for a specified container instance.
     * Get the logs for a specified container instance in a specified resource group and container group.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} apiVersion Client API version
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} containerGroupName The name of the container group.
     * @param {String} containerName The name of the container instance.
     * @param {Object} opts Optional parameters
     * @param {Number} [tail] The number of lines to show from the tail of the container instance log. If not provided, all available logs are shown up to 4mb.
     * @param {module:api/DefaultApi~containerLogsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Logs}
     */
    containerLogsList(subscriptionId, apiVersion, resourceGroupName, containerGroupName, containerName, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling containerLogsList");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling containerLogsList");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling containerLogsList");
      }
      // verify the required parameter 'containerGroupName' is set
      if (containerGroupName === undefined || containerGroupName === null) {
        throw new Error("Missing the required parameter 'containerGroupName' when calling containerLogsList");
      }
      // verify the required parameter 'containerName' is set
      if (containerName === undefined || containerName === null) {
        throw new Error("Missing the required parameter 'containerName' when calling containerLogsList");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'containerGroupName': containerGroupName,
        'containerName': containerName
      };
      let queryParams = {
        'api-version': apiVersion,
        'tail': opts['tail']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Logs;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerInstance/containerGroups/{containerGroupName}/containers/{containerName}/logs', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the startContainerLaunchExec operation.
     * @callback module:api/DefaultApi~startContainerLaunchExecCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ContainerExecResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Starts the exec command for a specific container instance.
     * Starts the exec command for a specified container instance in a specified resource group and container group.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} apiVersion Client API version
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} containerGroupName The name of the container group.
     * @param {String} containerName The name of the container instance.
     * @param {module:model/ContainerExecRequest} containerExecRequest The request for the exec command.
     * @param {module:api/DefaultApi~startContainerLaunchExecCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ContainerExecResponse}
     */
    startContainerLaunchExec(subscriptionId, apiVersion, resourceGroupName, containerGroupName, containerName, containerExecRequest, callback) {
      let postBody = containerExecRequest;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling startContainerLaunchExec");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling startContainerLaunchExec");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling startContainerLaunchExec");
      }
      // verify the required parameter 'containerGroupName' is set
      if (containerGroupName === undefined || containerGroupName === null) {
        throw new Error("Missing the required parameter 'containerGroupName' when calling startContainerLaunchExec");
      }
      // verify the required parameter 'containerName' is set
      if (containerName === undefined || containerName === null) {
        throw new Error("Missing the required parameter 'containerName' when calling startContainerLaunchExec");
      }
      // verify the required parameter 'containerExecRequest' is set
      if (containerExecRequest === undefined || containerExecRequest === null) {
        throw new Error("Missing the required parameter 'containerExecRequest' when calling startContainerLaunchExec");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'containerGroupName': containerGroupName,
        'containerName': containerName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ContainerExecResponse;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerInstance/containerGroups/{containerGroupName}/containers/{containerName}/exec', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
