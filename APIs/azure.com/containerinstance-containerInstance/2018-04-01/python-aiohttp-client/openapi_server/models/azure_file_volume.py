# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AzureFileVolume(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, read_only: bool=None, share_name: str=None, storage_account_key: str=None, storage_account_name: str=None):
        """AzureFileVolume - a model defined in OpenAPI

        :param read_only: The read_only of this AzureFileVolume.
        :param share_name: The share_name of this AzureFileVolume.
        :param storage_account_key: The storage_account_key of this AzureFileVolume.
        :param storage_account_name: The storage_account_name of this AzureFileVolume.
        """
        self.openapi_types = {
            'read_only': bool,
            'share_name': str,
            'storage_account_key': str,
            'storage_account_name': str
        }

        self.attribute_map = {
            'read_only': 'readOnly',
            'share_name': 'shareName',
            'storage_account_key': 'storageAccountKey',
            'storage_account_name': 'storageAccountName'
        }

        self._read_only = read_only
        self._share_name = share_name
        self._storage_account_key = storage_account_key
        self._storage_account_name = storage_account_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AzureFileVolume':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AzureFileVolume of this AzureFileVolume.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def read_only(self):
        """Gets the read_only of this AzureFileVolume.

        The flag indicating whether the Azure File shared mounted as a volume is read-only.

        :return: The read_only of this AzureFileVolume.
        :rtype: bool
        """
        return self._read_only

    @read_only.setter
    def read_only(self, read_only):
        """Sets the read_only of this AzureFileVolume.

        The flag indicating whether the Azure File shared mounted as a volume is read-only.

        :param read_only: The read_only of this AzureFileVolume.
        :type read_only: bool
        """

        self._read_only = read_only

    @property
    def share_name(self):
        """Gets the share_name of this AzureFileVolume.

        The name of the Azure File share to be mounted as a volume.

        :return: The share_name of this AzureFileVolume.
        :rtype: str
        """
        return self._share_name

    @share_name.setter
    def share_name(self, share_name):
        """Sets the share_name of this AzureFileVolume.

        The name of the Azure File share to be mounted as a volume.

        :param share_name: The share_name of this AzureFileVolume.
        :type share_name: str
        """
        if share_name is None:
            raise ValueError("Invalid value for `share_name`, must not be `None`")

        self._share_name = share_name

    @property
    def storage_account_key(self):
        """Gets the storage_account_key of this AzureFileVolume.

        The storage account access key used to access the Azure File share.

        :return: The storage_account_key of this AzureFileVolume.
        :rtype: str
        """
        return self._storage_account_key

    @storage_account_key.setter
    def storage_account_key(self, storage_account_key):
        """Sets the storage_account_key of this AzureFileVolume.

        The storage account access key used to access the Azure File share.

        :param storage_account_key: The storage_account_key of this AzureFileVolume.
        :type storage_account_key: str
        """

        self._storage_account_key = storage_account_key

    @property
    def storage_account_name(self):
        """Gets the storage_account_name of this AzureFileVolume.

        The name of the storage account that contains the Azure File share.

        :return: The storage_account_name of this AzureFileVolume.
        :rtype: str
        """
        return self._storage_account_name

    @storage_account_name.setter
    def storage_account_name(self, storage_account_name):
        """Sets the storage_account_name of this AzureFileVolume.

        The name of the storage account that contains the Azure File share.

        :param storage_account_name: The storage_account_name of this AzureFileVolume.
        :type storage_account_name: str
        """
        if storage_account_name is None:
            raise ValueError("Invalid value for `storage_account_name`, must not be `None`")

        self._storage_account_name = storage_account_name
