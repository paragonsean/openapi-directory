/**
 * ContainerInstanceManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-08-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIContainerProperties.h
 *
 * The container instance properties.
 */

#ifndef OAIContainerProperties_H
#define OAIContainerProperties_H

#include <QJsonObject>

#include "OAIContainerPort.h"
#include "OAIContainerProperties_instanceView.h"
#include "OAIEnvironmentVariable.h"
#include "OAIResourceRequirements.h"
#include "OAIVolumeMount.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIEnvironmentVariable;
class OAIContainerProperties_instanceView;
class OAIContainerPort;
class OAIResourceRequirements;
class OAIVolumeMount;

class OAIContainerProperties : public OAIObject {
public:
    OAIContainerProperties();
    OAIContainerProperties(QString json);
    ~OAIContainerProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getCommand() const;
    void setCommand(const QList<QString> &command);
    bool is_command_Set() const;
    bool is_command_Valid() const;

    QList<OAIEnvironmentVariable> getEnvironmentVariables() const;
    void setEnvironmentVariables(const QList<OAIEnvironmentVariable> &environment_variables);
    bool is_environment_variables_Set() const;
    bool is_environment_variables_Valid() const;

    QString getImage() const;
    void setImage(const QString &image);
    bool is_image_Set() const;
    bool is_image_Valid() const;

    OAIContainerProperties_instanceView getInstanceView() const;
    void setInstanceView(const OAIContainerProperties_instanceView &instance_view);
    bool is_instance_view_Set() const;
    bool is_instance_view_Valid() const;

    QList<OAIContainerPort> getPorts() const;
    void setPorts(const QList<OAIContainerPort> &ports);
    bool is_ports_Set() const;
    bool is_ports_Valid() const;

    OAIResourceRequirements getResources() const;
    void setResources(const OAIResourceRequirements &resources);
    bool is_resources_Set() const;
    bool is_resources_Valid() const;

    QList<OAIVolumeMount> getVolumeMounts() const;
    void setVolumeMounts(const QList<OAIVolumeMount> &volume_mounts);
    bool is_volume_mounts_Set() const;
    bool is_volume_mounts_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_command;
    bool m_command_isSet;
    bool m_command_isValid;

    QList<OAIEnvironmentVariable> m_environment_variables;
    bool m_environment_variables_isSet;
    bool m_environment_variables_isValid;

    QString m_image;
    bool m_image_isSet;
    bool m_image_isValid;

    OAIContainerProperties_instanceView m_instance_view;
    bool m_instance_view_isSet;
    bool m_instance_view_isValid;

    QList<OAIContainerPort> m_ports;
    bool m_ports_isSet;
    bool m_ports_isValid;

    OAIResourceRequirements m_resources;
    bool m_resources_isSet;
    bool m_resources_isValid;

    QList<OAIVolumeMount> m_volume_mounts;
    bool m_volume_mounts_isSet;
    bool m_volume_mounts_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIContainerProperties)

#endif // OAIContainerProperties_H
