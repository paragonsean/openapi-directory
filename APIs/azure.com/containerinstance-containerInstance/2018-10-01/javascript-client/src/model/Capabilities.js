/**
 * ContainerInstanceManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-10-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CapabilitiesCapabilities from './CapabilitiesCapabilities';

/**
 * The Capabilities model module.
 * @module model/Capabilities
 * @version 2018-10-01
 */
class Capabilities {
    /**
     * Constructs a new <code>Capabilities</code>.
     * The regional capabilities.
     * @alias module:model/Capabilities
     */
    constructor() { 
        
        Capabilities.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Capabilities</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Capabilities} obj Optional instance to populate.
     * @return {module:model/Capabilities} The populated <code>Capabilities</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Capabilities();

            if (data.hasOwnProperty('capabilities')) {
                obj['capabilities'] = CapabilitiesCapabilities.constructFromObject(data['capabilities']);
            }
            if (data.hasOwnProperty('gpu')) {
                obj['gpu'] = ApiClient.convertToType(data['gpu'], 'String');
            }
            if (data.hasOwnProperty('ipAddressType')) {
                obj['ipAddressType'] = ApiClient.convertToType(data['ipAddressType'], 'String');
            }
            if (data.hasOwnProperty('location')) {
                obj['location'] = ApiClient.convertToType(data['location'], 'String');
            }
            if (data.hasOwnProperty('osType')) {
                obj['osType'] = ApiClient.convertToType(data['osType'], 'String');
            }
            if (data.hasOwnProperty('resourceType')) {
                obj['resourceType'] = ApiClient.convertToType(data['resourceType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Capabilities</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Capabilities</code>.
     */
    static validateJSON(data) {
        // validate the optional field `capabilities`
        if (data['capabilities']) { // data not null
          CapabilitiesCapabilities.validateJSON(data['capabilities']);
        }
        // ensure the json data is a string
        if (data['gpu'] && !(typeof data['gpu'] === 'string' || data['gpu'] instanceof String)) {
            throw new Error("Expected the field `gpu` to be a primitive type in the JSON string but got " + data['gpu']);
        }
        // ensure the json data is a string
        if (data['ipAddressType'] && !(typeof data['ipAddressType'] === 'string' || data['ipAddressType'] instanceof String)) {
            throw new Error("Expected the field `ipAddressType` to be a primitive type in the JSON string but got " + data['ipAddressType']);
        }
        // ensure the json data is a string
        if (data['location'] && !(typeof data['location'] === 'string' || data['location'] instanceof String)) {
            throw new Error("Expected the field `location` to be a primitive type in the JSON string but got " + data['location']);
        }
        // ensure the json data is a string
        if (data['osType'] && !(typeof data['osType'] === 'string' || data['osType'] instanceof String)) {
            throw new Error("Expected the field `osType` to be a primitive type in the JSON string but got " + data['osType']);
        }
        // ensure the json data is a string
        if (data['resourceType'] && !(typeof data['resourceType'] === 'string' || data['resourceType'] instanceof String)) {
            throw new Error("Expected the field `resourceType` to be a primitive type in the JSON string but got " + data['resourceType']);
        }

        return true;
    }


}



/**
 * @member {module:model/CapabilitiesCapabilities} capabilities
 */
Capabilities.prototype['capabilities'] = undefined;

/**
 * The GPU sku that this capability describes.
 * @member {String} gpu
 */
Capabilities.prototype['gpu'] = undefined;

/**
 * The ip address type that this capability describes.
 * @member {String} ipAddressType
 */
Capabilities.prototype['ipAddressType'] = undefined;

/**
 * The resource location.
 * @member {String} location
 */
Capabilities.prototype['location'] = undefined;

/**
 * The OS type that this capability describes.
 * @member {String} osType
 */
Capabilities.prototype['osType'] = undefined;

/**
 * The resource type that this capability describes.
 * @member {String} resourceType
 */
Capabilities.prototype['resourceType'] = undefined;






export default Capabilities;

