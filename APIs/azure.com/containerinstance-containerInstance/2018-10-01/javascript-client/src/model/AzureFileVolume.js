/**
 * ContainerInstanceManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-10-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AzureFileVolume model module.
 * @module model/AzureFileVolume
 * @version 2018-10-01
 */
class AzureFileVolume {
    /**
     * Constructs a new <code>AzureFileVolume</code>.
     * The properties of the Azure File volume. Azure File shares are mounted as volumes.
     * @alias module:model/AzureFileVolume
     * @param shareName {String} The name of the Azure File share to be mounted as a volume.
     * @param storageAccountName {String} The name of the storage account that contains the Azure File share.
     */
    constructor(shareName, storageAccountName) { 
        
        AzureFileVolume.initialize(this, shareName, storageAccountName);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, shareName, storageAccountName) { 
        obj['shareName'] = shareName;
        obj['storageAccountName'] = storageAccountName;
    }

    /**
     * Constructs a <code>AzureFileVolume</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AzureFileVolume} obj Optional instance to populate.
     * @return {module:model/AzureFileVolume} The populated <code>AzureFileVolume</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AzureFileVolume();

            if (data.hasOwnProperty('readOnly')) {
                obj['readOnly'] = ApiClient.convertToType(data['readOnly'], 'Boolean');
            }
            if (data.hasOwnProperty('shareName')) {
                obj['shareName'] = ApiClient.convertToType(data['shareName'], 'String');
            }
            if (data.hasOwnProperty('storageAccountKey')) {
                obj['storageAccountKey'] = ApiClient.convertToType(data['storageAccountKey'], 'String');
            }
            if (data.hasOwnProperty('storageAccountName')) {
                obj['storageAccountName'] = ApiClient.convertToType(data['storageAccountName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AzureFileVolume</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AzureFileVolume</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AzureFileVolume.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['shareName'] && !(typeof data['shareName'] === 'string' || data['shareName'] instanceof String)) {
            throw new Error("Expected the field `shareName` to be a primitive type in the JSON string but got " + data['shareName']);
        }
        // ensure the json data is a string
        if (data['storageAccountKey'] && !(typeof data['storageAccountKey'] === 'string' || data['storageAccountKey'] instanceof String)) {
            throw new Error("Expected the field `storageAccountKey` to be a primitive type in the JSON string but got " + data['storageAccountKey']);
        }
        // ensure the json data is a string
        if (data['storageAccountName'] && !(typeof data['storageAccountName'] === 'string' || data['storageAccountName'] instanceof String)) {
            throw new Error("Expected the field `storageAccountName` to be a primitive type in the JSON string but got " + data['storageAccountName']);
        }

        return true;
    }


}

AzureFileVolume.RequiredProperties = ["shareName", "storageAccountName"];

/**
 * The flag indicating whether the Azure File shared mounted as a volume is read-only.
 * @member {Boolean} readOnly
 */
AzureFileVolume.prototype['readOnly'] = undefined;

/**
 * The name of the Azure File share to be mounted as a volume.
 * @member {String} shareName
 */
AzureFileVolume.prototype['shareName'] = undefined;

/**
 * The storage account access key used to access the Azure File share.
 * @member {String} storageAccountKey
 */
AzureFileVolume.prototype['storageAccountKey'] = undefined;

/**
 * The name of the storage account that contains the Azure File share.
 * @member {String} storageAccountName
 */
AzureFileVolume.prototype['storageAccountName'] = undefined;






export default AzureFileVolume;

