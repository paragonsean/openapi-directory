/**
 * ContainerInstanceManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-10-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GpuResource model module.
 * @module model/GpuResource
 * @version 2018-10-01
 */
class GpuResource {
    /**
     * Constructs a new <code>GpuResource</code>.
     * The GPU resource.
     * @alias module:model/GpuResource
     * @param count {Number} The count of the GPU resource.
     * @param sku {module:model/GpuResource.SkuEnum} The SKU of the GPU resource.
     */
    constructor(count, sku) { 
        
        GpuResource.initialize(this, count, sku);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, count, sku) { 
        obj['count'] = count;
        obj['sku'] = sku;
    }

    /**
     * Constructs a <code>GpuResource</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GpuResource} obj Optional instance to populate.
     * @return {module:model/GpuResource} The populated <code>GpuResource</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GpuResource();

            if (data.hasOwnProperty('count')) {
                obj['count'] = ApiClient.convertToType(data['count'], 'Number');
            }
            if (data.hasOwnProperty('sku')) {
                obj['sku'] = ApiClient.convertToType(data['sku'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GpuResource</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GpuResource</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of GpuResource.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['sku'] && !(typeof data['sku'] === 'string' || data['sku'] instanceof String)) {
            throw new Error("Expected the field `sku` to be a primitive type in the JSON string but got " + data['sku']);
        }

        return true;
    }


}

GpuResource.RequiredProperties = ["count", "sku"];

/**
 * The count of the GPU resource.
 * @member {Number} count
 */
GpuResource.prototype['count'] = undefined;

/**
 * The SKU of the GPU resource.
 * @member {module:model/GpuResource.SkuEnum} sku
 */
GpuResource.prototype['sku'] = undefined;





/**
 * Allowed values for the <code>sku</code> property.
 * @enum {String}
 * @readonly
 */
GpuResource['SkuEnum'] = {

    /**
     * value: "K80"
     * @const
     */
    "K80": "K80",

    /**
     * value: "P100"
     * @const
     */
    "P100": "P100",

    /**
     * value: "V100"
     * @const
     */
    "V100": "V100"
};



export default GpuResource;

