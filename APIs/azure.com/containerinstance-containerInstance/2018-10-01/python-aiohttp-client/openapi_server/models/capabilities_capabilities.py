# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CapabilitiesCapabilities(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, max_cpu: float=None, max_gpu_count: float=None, max_memory_in_gb: float=None):
        """CapabilitiesCapabilities - a model defined in OpenAPI

        :param max_cpu: The max_cpu of this CapabilitiesCapabilities.
        :param max_gpu_count: The max_gpu_count of this CapabilitiesCapabilities.
        :param max_memory_in_gb: The max_memory_in_gb of this CapabilitiesCapabilities.
        """
        self.openapi_types = {
            'max_cpu': float,
            'max_gpu_count': float,
            'max_memory_in_gb': float
        }

        self.attribute_map = {
            'max_cpu': 'maxCpu',
            'max_gpu_count': 'maxGpuCount',
            'max_memory_in_gb': 'maxMemoryInGB'
        }

        self._max_cpu = max_cpu
        self._max_gpu_count = max_gpu_count
        self._max_memory_in_gb = max_memory_in_gb

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CapabilitiesCapabilities':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Capabilities_capabilities of this CapabilitiesCapabilities.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def max_cpu(self):
        """Gets the max_cpu of this CapabilitiesCapabilities.

        The maximum allowed CPU request in cores.

        :return: The max_cpu of this CapabilitiesCapabilities.
        :rtype: float
        """
        return self._max_cpu

    @max_cpu.setter
    def max_cpu(self, max_cpu):
        """Sets the max_cpu of this CapabilitiesCapabilities.

        The maximum allowed CPU request in cores.

        :param max_cpu: The max_cpu of this CapabilitiesCapabilities.
        :type max_cpu: float
        """

        self._max_cpu = max_cpu

    @property
    def max_gpu_count(self):
        """Gets the max_gpu_count of this CapabilitiesCapabilities.

        The maximum allowed GPU count.

        :return: The max_gpu_count of this CapabilitiesCapabilities.
        :rtype: float
        """
        return self._max_gpu_count

    @max_gpu_count.setter
    def max_gpu_count(self, max_gpu_count):
        """Sets the max_gpu_count of this CapabilitiesCapabilities.

        The maximum allowed GPU count.

        :param max_gpu_count: The max_gpu_count of this CapabilitiesCapabilities.
        :type max_gpu_count: float
        """

        self._max_gpu_count = max_gpu_count

    @property
    def max_memory_in_gb(self):
        """Gets the max_memory_in_gb of this CapabilitiesCapabilities.

        The maximum allowed memory request in GB.

        :return: The max_memory_in_gb of this CapabilitiesCapabilities.
        :rtype: float
        """
        return self._max_memory_in_gb

    @max_memory_in_gb.setter
    def max_memory_in_gb(self, max_memory_in_gb):
        """Sets the max_memory_in_gb of this CapabilitiesCapabilities.

        The maximum allowed memory request in GB.

        :param max_memory_in_gb: The max_memory_in_gb of this CapabilitiesCapabilities.
        :type max_memory_in_gb: float
        """

        self._max_memory_in_gb = max_memory_in_gb
