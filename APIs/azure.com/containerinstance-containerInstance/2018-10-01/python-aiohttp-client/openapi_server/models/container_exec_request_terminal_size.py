# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ContainerExecRequestTerminalSize(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cols: int=None, rows: int=None):
        """ContainerExecRequestTerminalSize - a model defined in OpenAPI

        :param cols: The cols of this ContainerExecRequestTerminalSize.
        :param rows: The rows of this ContainerExecRequestTerminalSize.
        """
        self.openapi_types = {
            'cols': int,
            'rows': int
        }

        self.attribute_map = {
            'cols': 'cols',
            'rows': 'rows'
        }

        self._cols = cols
        self._rows = rows

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ContainerExecRequestTerminalSize':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ContainerExecRequest_terminalSize of this ContainerExecRequestTerminalSize.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cols(self):
        """Gets the cols of this ContainerExecRequestTerminalSize.

        The column size of the terminal

        :return: The cols of this ContainerExecRequestTerminalSize.
        :rtype: int
        """
        return self._cols

    @cols.setter
    def cols(self, cols):
        """Sets the cols of this ContainerExecRequestTerminalSize.

        The column size of the terminal

        :param cols: The cols of this ContainerExecRequestTerminalSize.
        :type cols: int
        """

        self._cols = cols

    @property
    def rows(self):
        """Gets the rows of this ContainerExecRequestTerminalSize.

        The row size of the terminal

        :return: The rows of this ContainerExecRequestTerminalSize.
        :rtype: int
        """
        return self._rows

    @rows.setter
    def rows(self, rows):
        """Sets the rows of this ContainerExecRequestTerminalSize.

        The row size of the terminal

        :param rows: The rows of this ContainerExecRequestTerminalSize.
        :type rows: int
        """

        self._rows = rows
