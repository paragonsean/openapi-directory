/**
 * ContainerInstanceManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-10-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIContainerProperties_instanceView.h
 *
 * The instance view of the container instance. Only valid in response.
 */

#ifndef OAIContainerProperties_instanceView_H
#define OAIContainerProperties_instanceView_H

#include <QJsonObject>

#include "OAIContainerState.h"
#include "OAIEvent.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIContainerState;
class OAIEvent;

class OAIContainerProperties_instanceView : public OAIObject {
public:
    OAIContainerProperties_instanceView();
    OAIContainerProperties_instanceView(QString json);
    ~OAIContainerProperties_instanceView() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIContainerState getCurrentState() const;
    void setCurrentState(const OAIContainerState &current_state);
    bool is_current_state_Set() const;
    bool is_current_state_Valid() const;

    QList<OAIEvent> getEvents() const;
    void setEvents(const QList<OAIEvent> &events);
    bool is_events_Set() const;
    bool is_events_Valid() const;

    OAIContainerState getPreviousState() const;
    void setPreviousState(const OAIContainerState &previous_state);
    bool is_previous_state_Set() const;
    bool is_previous_state_Valid() const;

    qint32 getRestartCount() const;
    void setRestartCount(const qint32 &restart_count);
    bool is_restart_count_Set() const;
    bool is_restart_count_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIContainerState m_current_state;
    bool m_current_state_isSet;
    bool m_current_state_isValid;

    QList<OAIEvent> m_events;
    bool m_events_isSet;
    bool m_events_isValid;

    OAIContainerState m_previous_state;
    bool m_previous_state_isSet;
    bool m_previous_state_isValid;

    qint32 m_restart_count;
    bool m_restart_count_isSet;
    bool m_restart_count_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIContainerProperties_instanceView)

#endif // OAIContainerProperties_instanceView_H
