/**
 * FabricAdminClient
 * File share operation endpoints and objects.
 *
 * The version of the OpenAPI document: 2016-05-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The FileShareModel model module.
 * @module model/FileShareModel
 * @version 2016-05-01
 */
class FileShareModel {
    /**
     * Constructs a new <code>FileShareModel</code>.
     * Properties of a file share resource.
     * @alias module:model/FileShareModel
     */
    constructor() { 
        
        FileShareModel.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FileShareModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FileShareModel} obj Optional instance to populate.
     * @return {module:model/FileShareModel} The populated <code>FileShareModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FileShareModel();

            if (data.hasOwnProperty('associatedVolume')) {
                obj['associatedVolume'] = ApiClient.convertToType(data['associatedVolume'], 'String');
            }
            if (data.hasOwnProperty('uncPath')) {
                obj['uncPath'] = ApiClient.convertToType(data['uncPath'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FileShareModel</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FileShareModel</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['associatedVolume'] && !(typeof data['associatedVolume'] === 'string' || data['associatedVolume'] instanceof String)) {
            throw new Error("Expected the field `associatedVolume` to be a primitive type in the JSON string but got " + data['associatedVolume']);
        }
        // ensure the json data is a string
        if (data['uncPath'] && !(typeof data['uncPath'] === 'string' || data['uncPath'] instanceof String)) {
            throw new Error("Expected the field `uncPath` to be a primitive type in the JSON string but got " + data['uncPath']);
        }

        return true;
    }


}



/**
 * Associated volume ID.
 * @member {String} associatedVolume
 */
FileShareModel.prototype['associatedVolume'] = undefined;

/**
 * The UNCPath for the fileshare.
 * @member {String} uncPath
 */
FileShareModel.prototype['uncPath'] = undefined;






export default FileShareModel;

