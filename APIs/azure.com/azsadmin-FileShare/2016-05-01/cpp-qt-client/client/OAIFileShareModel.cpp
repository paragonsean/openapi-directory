/**
 * FabricAdminClient
 * File share operation endpoints and objects.
 *
 * The version of the OpenAPI document: 2016-05-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFileShareModel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFileShareModel::OAIFileShareModel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFileShareModel::OAIFileShareModel() {
    this->initializeModel();
}

OAIFileShareModel::~OAIFileShareModel() {}

void OAIFileShareModel::initializeModel() {

    m_associated_volume_isSet = false;
    m_associated_volume_isValid = false;

    m_unc_path_isSet = false;
    m_unc_path_isValid = false;
}

void OAIFileShareModel::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFileShareModel::fromJsonObject(QJsonObject json) {

    m_associated_volume_isValid = ::OpenAPI::fromJsonValue(m_associated_volume, json[QString("associatedVolume")]);
    m_associated_volume_isSet = !json[QString("associatedVolume")].isNull() && m_associated_volume_isValid;

    m_unc_path_isValid = ::OpenAPI::fromJsonValue(m_unc_path, json[QString("uncPath")]);
    m_unc_path_isSet = !json[QString("uncPath")].isNull() && m_unc_path_isValid;
}

QString OAIFileShareModel::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFileShareModel::asJsonObject() const {
    QJsonObject obj;
    if (m_associated_volume_isSet) {
        obj.insert(QString("associatedVolume"), ::OpenAPI::toJsonValue(m_associated_volume));
    }
    if (m_unc_path_isSet) {
        obj.insert(QString("uncPath"), ::OpenAPI::toJsonValue(m_unc_path));
    }
    return obj;
}

QString OAIFileShareModel::getAssociatedVolume() const {
    return m_associated_volume;
}
void OAIFileShareModel::setAssociatedVolume(const QString &associated_volume) {
    m_associated_volume = associated_volume;
    m_associated_volume_isSet = true;
}

bool OAIFileShareModel::is_associated_volume_Set() const{
    return m_associated_volume_isSet;
}

bool OAIFileShareModel::is_associated_volume_Valid() const{
    return m_associated_volume_isValid;
}

QString OAIFileShareModel::getUncPath() const {
    return m_unc_path;
}
void OAIFileShareModel::setUncPath(const QString &unc_path) {
    m_unc_path = unc_path;
    m_unc_path_isSet = true;
}

bool OAIFileShareModel::is_unc_path_Set() const{
    return m_unc_path_isSet;
}

bool OAIFileShareModel::is_unc_path_Valid() const{
    return m_unc_path_isValid;
}

bool OAIFileShareModel::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_associated_volume_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_unc_path_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFileShareModel::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
