/**
 * StorageManagementClient
 * The Admin Storage Management Client.
 *
 * The version of the OpenAPI document: 2015-12-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BlobServiceSettings from './BlobServiceSettings';

/**
 * The BlobServiceProperties model module.
 * @module model/BlobServiceProperties
 * @version 2015-12-01-preview
 */
class BlobServiceProperties {
    /**
     * Constructs a new <code>BlobServiceProperties</code>.
     * Blob service properties.
     * @alias module:model/BlobServiceProperties
     */
    constructor() { 
        
        BlobServiceProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BlobServiceProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BlobServiceProperties} obj Optional instance to populate.
     * @return {module:model/BlobServiceProperties} The populated <code>BlobServiceProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BlobServiceProperties();

            if (data.hasOwnProperty('settings')) {
                obj['settings'] = BlobServiceSettings.constructFromObject(data['settings']);
            }
            if (data.hasOwnProperty('healthStatus')) {
                obj['healthStatus'] = ApiClient.convertToType(data['healthStatus'], 'String');
            }
            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BlobServiceProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BlobServiceProperties</code>.
     */
    static validateJSON(data) {
        // validate the optional field `settings`
        if (data['settings']) { // data not null
          BlobServiceSettings.validateJSON(data['settings']);
        }
        // ensure the json data is a string
        if (data['healthStatus'] && !(typeof data['healthStatus'] === 'string' || data['healthStatus'] instanceof String)) {
            throw new Error("Expected the field `healthStatus` to be a primitive type in the JSON string but got " + data['healthStatus']);
        }
        // ensure the json data is a string
        if (data['version'] && !(typeof data['version'] === 'string' || data['version'] instanceof String)) {
            throw new Error("Expected the field `version` to be a primitive type in the JSON string but got " + data['version']);
        }

        return true;
    }


}



/**
 * @member {module:model/BlobServiceSettings} settings
 */
BlobServiceProperties.prototype['settings'] = undefined;

/**
 * Current health status.
 * @member {module:model/BlobServiceProperties.HealthStatusEnum} healthStatus
 */
BlobServiceProperties.prototype['healthStatus'] = undefined;

/**
 * Storage service version.
 * @member {String} version
 */
BlobServiceProperties.prototype['version'] = undefined;





/**
 * Allowed values for the <code>healthStatus</code> property.
 * @enum {String}
 * @readonly
 */
BlobServiceProperties['HealthStatusEnum'] = {

    /**
     * value: "Unknown"
     * @const
     */
    "Unknown": "Unknown",

    /**
     * value: "Healthy"
     * @const
     */
    "Healthy": "Healthy",

    /**
     * value: "Warning"
     * @const
     */
    "Warning": "Warning",

    /**
     * value: "Critical"
     * @const
     */
    "Critical": "Critical"
};



export default BlobServiceProperties;

