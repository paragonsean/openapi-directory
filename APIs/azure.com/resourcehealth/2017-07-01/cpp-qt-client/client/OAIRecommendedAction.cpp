/**
 * Microsoft.ResourceHealth
 * The Resource Health Client.
 *
 * The version of the OpenAPI document: 2017-07-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRecommendedAction.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRecommendedAction::OAIRecommendedAction(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRecommendedAction::OAIRecommendedAction() {
    this->initializeModel();
}

OAIRecommendedAction::~OAIRecommendedAction() {}

void OAIRecommendedAction::initializeModel() {

    m_action_isSet = false;
    m_action_isValid = false;

    m_action_url_isSet = false;
    m_action_url_isValid = false;

    m_action_url_text_isSet = false;
    m_action_url_text_isValid = false;
}

void OAIRecommendedAction::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRecommendedAction::fromJsonObject(QJsonObject json) {

    m_action_isValid = ::OpenAPI::fromJsonValue(m_action, json[QString("action")]);
    m_action_isSet = !json[QString("action")].isNull() && m_action_isValid;

    m_action_url_isValid = ::OpenAPI::fromJsonValue(m_action_url, json[QString("actionUrl")]);
    m_action_url_isSet = !json[QString("actionUrl")].isNull() && m_action_url_isValid;

    m_action_url_text_isValid = ::OpenAPI::fromJsonValue(m_action_url_text, json[QString("actionUrlText")]);
    m_action_url_text_isSet = !json[QString("actionUrlText")].isNull() && m_action_url_text_isValid;
}

QString OAIRecommendedAction::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRecommendedAction::asJsonObject() const {
    QJsonObject obj;
    if (m_action_isSet) {
        obj.insert(QString("action"), ::OpenAPI::toJsonValue(m_action));
    }
    if (m_action_url_isSet) {
        obj.insert(QString("actionUrl"), ::OpenAPI::toJsonValue(m_action_url));
    }
    if (m_action_url_text_isSet) {
        obj.insert(QString("actionUrlText"), ::OpenAPI::toJsonValue(m_action_url_text));
    }
    return obj;
}

QString OAIRecommendedAction::getAction() const {
    return m_action;
}
void OAIRecommendedAction::setAction(const QString &action) {
    m_action = action;
    m_action_isSet = true;
}

bool OAIRecommendedAction::is_action_Set() const{
    return m_action_isSet;
}

bool OAIRecommendedAction::is_action_Valid() const{
    return m_action_isValid;
}

QString OAIRecommendedAction::getActionUrl() const {
    return m_action_url;
}
void OAIRecommendedAction::setActionUrl(const QString &action_url) {
    m_action_url = action_url;
    m_action_url_isSet = true;
}

bool OAIRecommendedAction::is_action_url_Set() const{
    return m_action_url_isSet;
}

bool OAIRecommendedAction::is_action_url_Valid() const{
    return m_action_url_isValid;
}

QString OAIRecommendedAction::getActionUrlText() const {
    return m_action_url_text;
}
void OAIRecommendedAction::setActionUrlText(const QString &action_url_text) {
    m_action_url_text = action_url_text;
    m_action_url_text_isSet = true;
}

bool OAIRecommendedAction::is_action_url_text_Set() const{
    return m_action_url_text_isSet;
}

bool OAIRecommendedAction::is_action_url_text_Valid() const{
    return m_action_url_text_isValid;
}

bool OAIRecommendedAction::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_action_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_action_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_action_url_text_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRecommendedAction::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
