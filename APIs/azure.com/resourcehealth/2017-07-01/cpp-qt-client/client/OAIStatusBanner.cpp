/**
 * Microsoft.ResourceHealth
 * The Resource Health Client.
 *
 * The version of the OpenAPI document: 2017-07-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIStatusBanner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIStatusBanner::OAIStatusBanner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIStatusBanner::OAIStatusBanner() {
    this->initializeModel();
}

OAIStatusBanner::~OAIStatusBanner() {}

void OAIStatusBanner::initializeModel() {

    m_cloud_isSet = false;
    m_cloud_isValid = false;

    m_last_modified_time_isSet = false;
    m_last_modified_time_isValid = false;

    m_message_isSet = false;
    m_message_isValid = false;

    m_title_isSet = false;
    m_title_isValid = false;
}

void OAIStatusBanner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIStatusBanner::fromJsonObject(QJsonObject json) {

    m_cloud_isValid = ::OpenAPI::fromJsonValue(m_cloud, json[QString("cloud")]);
    m_cloud_isSet = !json[QString("cloud")].isNull() && m_cloud_isValid;

    m_last_modified_time_isValid = ::OpenAPI::fromJsonValue(m_last_modified_time, json[QString("lastModifiedTime")]);
    m_last_modified_time_isSet = !json[QString("lastModifiedTime")].isNull() && m_last_modified_time_isValid;

    m_message_isValid = ::OpenAPI::fromJsonValue(m_message, json[QString("message")]);
    m_message_isSet = !json[QString("message")].isNull() && m_message_isValid;

    m_title_isValid = ::OpenAPI::fromJsonValue(m_title, json[QString("title")]);
    m_title_isSet = !json[QString("title")].isNull() && m_title_isValid;
}

QString OAIStatusBanner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIStatusBanner::asJsonObject() const {
    QJsonObject obj;
    if (m_cloud_isSet) {
        obj.insert(QString("cloud"), ::OpenAPI::toJsonValue(m_cloud));
    }
    if (m_last_modified_time_isSet) {
        obj.insert(QString("lastModifiedTime"), ::OpenAPI::toJsonValue(m_last_modified_time));
    }
    if (m_message_isSet) {
        obj.insert(QString("message"), ::OpenAPI::toJsonValue(m_message));
    }
    if (m_title_isSet) {
        obj.insert(QString("title"), ::OpenAPI::toJsonValue(m_title));
    }
    return obj;
}

QString OAIStatusBanner::getCloud() const {
    return m_cloud;
}
void OAIStatusBanner::setCloud(const QString &cloud) {
    m_cloud = cloud;
    m_cloud_isSet = true;
}

bool OAIStatusBanner::is_cloud_Set() const{
    return m_cloud_isSet;
}

bool OAIStatusBanner::is_cloud_Valid() const{
    return m_cloud_isValid;
}

QDateTime OAIStatusBanner::getLastModifiedTime() const {
    return m_last_modified_time;
}
void OAIStatusBanner::setLastModifiedTime(const QDateTime &last_modified_time) {
    m_last_modified_time = last_modified_time;
    m_last_modified_time_isSet = true;
}

bool OAIStatusBanner::is_last_modified_time_Set() const{
    return m_last_modified_time_isSet;
}

bool OAIStatusBanner::is_last_modified_time_Valid() const{
    return m_last_modified_time_isValid;
}

QString OAIStatusBanner::getMessage() const {
    return m_message;
}
void OAIStatusBanner::setMessage(const QString &message) {
    m_message = message;
    m_message_isSet = true;
}

bool OAIStatusBanner::is_message_Set() const{
    return m_message_isSet;
}

bool OAIStatusBanner::is_message_Valid() const{
    return m_message_isValid;
}

QString OAIStatusBanner::getTitle() const {
    return m_title;
}
void OAIStatusBanner::setTitle(const QString &title) {
    m_title = title;
    m_title_isSet = true;
}

bool OAIStatusBanner::is_title_Set() const{
    return m_title_isSet;
}

bool OAIStatusBanner::is_title_Valid() const{
    return m_title_isValid;
}

bool OAIStatusBanner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cloud_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_message_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIStatusBanner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
