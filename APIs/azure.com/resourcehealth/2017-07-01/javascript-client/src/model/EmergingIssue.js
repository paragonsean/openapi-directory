/**
 * Microsoft.ResourceHealth
 * The Resource Health Client.
 *
 * The version of the OpenAPI document: 2017-07-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import StatusActiveEvent from './StatusActiveEvent';
import StatusBanner from './StatusBanner';

/**
 * The EmergingIssue model module.
 * @module model/EmergingIssue
 * @version 2017-07-01
 */
class EmergingIssue {
    /**
     * Constructs a new <code>EmergingIssue</code>.
     * On-going emerging issue from azure status.
     * @alias module:model/EmergingIssue
     */
    constructor() { 
        
        EmergingIssue.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EmergingIssue</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EmergingIssue} obj Optional instance to populate.
     * @return {module:model/EmergingIssue} The populated <code>EmergingIssue</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EmergingIssue();

            if (data.hasOwnProperty('refreshTimestamp')) {
                obj['refreshTimestamp'] = ApiClient.convertToType(data['refreshTimestamp'], 'Date');
            }
            if (data.hasOwnProperty('statusActiveEvents')) {
                obj['statusActiveEvents'] = ApiClient.convertToType(data['statusActiveEvents'], [StatusActiveEvent]);
            }
            if (data.hasOwnProperty('statusBanners')) {
                obj['statusBanners'] = ApiClient.convertToType(data['statusBanners'], [StatusBanner]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EmergingIssue</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EmergingIssue</code>.
     */
    static validateJSON(data) {
        if (data['statusActiveEvents']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['statusActiveEvents'])) {
                throw new Error("Expected the field `statusActiveEvents` to be an array in the JSON data but got " + data['statusActiveEvents']);
            }
            // validate the optional field `statusActiveEvents` (array)
            for (const item of data['statusActiveEvents']) {
                StatusActiveEvent.validateJSON(item);
            };
        }
        if (data['statusBanners']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['statusBanners'])) {
                throw new Error("Expected the field `statusBanners` to be an array in the JSON data but got " + data['statusBanners']);
            }
            // validate the optional field `statusBanners` (array)
            for (const item of data['statusBanners']) {
                StatusBanner.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Timestamp for when last time refreshed for ongoing emerging issue.
 * @member {Date} refreshTimestamp
 */
EmergingIssue.prototype['refreshTimestamp'] = undefined;

/**
 * The list of emerging issues of active event type.
 * @member {Array.<module:model/StatusActiveEvent>} statusActiveEvents
 */
EmergingIssue.prototype['statusActiveEvents'] = undefined;

/**
 * The list of emerging issues of banner type.
 * @member {Array.<module:model/StatusBanner>} statusBanners
 */
EmergingIssue.prototype['statusBanners'] = undefined;






export default EmergingIssue;

