/**
 * Microsoft.ResourceHealth
 * The Resource Health Client.
 *
 * The version of the OpenAPI document: 2015-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MicrosoftResourceHealth);
  }
}(this, function(expect, MicrosoftResourceHealth) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MicrosoftResourceHealth.AvailabilityStatusProperties();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AvailabilityStatusProperties', function() {
    it('should create an instance of AvailabilityStatusProperties', function() {
      // uncomment below and update the code to test AvailabilityStatusProperties
      //var instance = new MicrosoftResourceHealth.AvailabilityStatusProperties();
      //expect(instance).to.be.a(MicrosoftResourceHealth.AvailabilityStatusProperties);
    });

    it('should have the property availabilityState (base name: "availabilityState")', function() {
      // uncomment below and update the code to test the property availabilityState
      //var instance = new MicrosoftResourceHealth.AvailabilityStatusProperties();
      //expect(instance).to.be();
    });

    it('should have the property detailedStatus (base name: "detailedStatus")', function() {
      // uncomment below and update the code to test the property detailedStatus
      //var instance = new MicrosoftResourceHealth.AvailabilityStatusProperties();
      //expect(instance).to.be();
    });

    it('should have the property isArmResource (base name: "isArmResource")', function() {
      // uncomment below and update the code to test the property isArmResource
      //var instance = new MicrosoftResourceHealth.AvailabilityStatusProperties();
      //expect(instance).to.be();
    });

    it('should have the property occuredTime (base name: "occuredTime")', function() {
      // uncomment below and update the code to test the property occuredTime
      //var instance = new MicrosoftResourceHealth.AvailabilityStatusProperties();
      //expect(instance).to.be();
    });

    it('should have the property reasonChronicity (base name: "reasonChronicity")', function() {
      // uncomment below and update the code to test the property reasonChronicity
      //var instance = new MicrosoftResourceHealth.AvailabilityStatusProperties();
      //expect(instance).to.be();
    });

    it('should have the property reasonType (base name: "reasonType")', function() {
      // uncomment below and update the code to test the property reasonType
      //var instance = new MicrosoftResourceHealth.AvailabilityStatusProperties();
      //expect(instance).to.be();
    });

    it('should have the property recentlyResolvedState (base name: "recentlyResolvedState")', function() {
      // uncomment below and update the code to test the property recentlyResolvedState
      //var instance = new MicrosoftResourceHealth.AvailabilityStatusProperties();
      //expect(instance).to.be();
    });

    it('should have the property recommendedActions (base name: "recommendedActions")', function() {
      // uncomment below and update the code to test the property recommendedActions
      //var instance = new MicrosoftResourceHealth.AvailabilityStatusProperties();
      //expect(instance).to.be();
    });

    it('should have the property reportedTime (base name: "reportedTime")', function() {
      // uncomment below and update the code to test the property reportedTime
      //var instance = new MicrosoftResourceHealth.AvailabilityStatusProperties();
      //expect(instance).to.be();
    });

    it('should have the property resolutionETA (base name: "resolutionETA")', function() {
      // uncomment below and update the code to test the property resolutionETA
      //var instance = new MicrosoftResourceHealth.AvailabilityStatusProperties();
      //expect(instance).to.be();
    });

    it('should have the property rootCauseAttributionTime (base name: "rootCauseAttributionTime")', function() {
      // uncomment below and update the code to test the property rootCauseAttributionTime
      //var instance = new MicrosoftResourceHealth.AvailabilityStatusProperties();
      //expect(instance).to.be();
    });

    it('should have the property serviceImpactingEvents (base name: "serviceImpactingEvents")', function() {
      // uncomment below and update the code to test the property serviceImpactingEvents
      //var instance = new MicrosoftResourceHealth.AvailabilityStatusProperties();
      //expect(instance).to.be();
    });

    it('should have the property summary (base name: "summary")', function() {
      // uncomment below and update the code to test the property summary
      //var instance = new MicrosoftResourceHealth.AvailabilityStatusProperties();
      //expect(instance).to.be();
    });

  });

}));
