/**
 * Microsoft.ResourceHealth
 * The Resource Health Client.
 *
 * The version of the OpenAPI document: 2015-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ServiceImpactingEventIncidentProperties model module.
 * @module model/ServiceImpactingEventIncidentProperties
 * @version 2015-01-01
 */
class ServiceImpactingEventIncidentProperties {
    /**
     * Constructs a new <code>ServiceImpactingEventIncidentProperties</code>.
     * Properties of the service impacting event.
     * @alias module:model/ServiceImpactingEventIncidentProperties
     */
    constructor() { 
        
        ServiceImpactingEventIncidentProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ServiceImpactingEventIncidentProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ServiceImpactingEventIncidentProperties} obj Optional instance to populate.
     * @return {module:model/ServiceImpactingEventIncidentProperties} The populated <code>ServiceImpactingEventIncidentProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ServiceImpactingEventIncidentProperties();

            if (data.hasOwnProperty('incidentType')) {
                obj['incidentType'] = ApiClient.convertToType(data['incidentType'], 'String');
            }
            if (data.hasOwnProperty('region')) {
                obj['region'] = ApiClient.convertToType(data['region'], 'String');
            }
            if (data.hasOwnProperty('service')) {
                obj['service'] = ApiClient.convertToType(data['service'], 'String');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ServiceImpactingEventIncidentProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ServiceImpactingEventIncidentProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['incidentType'] && !(typeof data['incidentType'] === 'string' || data['incidentType'] instanceof String)) {
            throw new Error("Expected the field `incidentType` to be a primitive type in the JSON string but got " + data['incidentType']);
        }
        // ensure the json data is a string
        if (data['region'] && !(typeof data['region'] === 'string' || data['region'] instanceof String)) {
            throw new Error("Expected the field `region` to be a primitive type in the JSON string but got " + data['region']);
        }
        // ensure the json data is a string
        if (data['service'] && !(typeof data['service'] === 'string' || data['service'] instanceof String)) {
            throw new Error("Expected the field `service` to be a primitive type in the JSON string but got " + data['service']);
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }

        return true;
    }


}



/**
 * Type of Event.
 * @member {String} incidentType
 */
ServiceImpactingEventIncidentProperties.prototype['incidentType'] = undefined;

/**
 * Region impacted by the event.
 * @member {String} region
 */
ServiceImpactingEventIncidentProperties.prototype['region'] = undefined;

/**
 * Service impacted by the event.
 * @member {String} service
 */
ServiceImpactingEventIncidentProperties.prototype['service'] = undefined;

/**
 * Title of the incident.
 * @member {String} title
 */
ServiceImpactingEventIncidentProperties.prototype['title'] = undefined;






export default ServiceImpactingEventIncidentProperties;

