/**
 * Microsoft.ResourceHealth
 * The Resource Health Client.
 *
 * The version of the OpenAPI document: 2015-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AvailabilityStatusPropertiesRecentlyResolvedState model module.
 * @module model/AvailabilityStatusPropertiesRecentlyResolvedState
 * @version 2015-01-01
 */
class AvailabilityStatusPropertiesRecentlyResolvedState {
    /**
     * Constructs a new <code>AvailabilityStatusPropertiesRecentlyResolvedState</code>.
     * An annotation describing a change in the availabilityState to Available from Unavailable with a reasonType of type Unplanned
     * @alias module:model/AvailabilityStatusPropertiesRecentlyResolvedState
     */
    constructor() { 
        
        AvailabilityStatusPropertiesRecentlyResolvedState.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AvailabilityStatusPropertiesRecentlyResolvedState</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AvailabilityStatusPropertiesRecentlyResolvedState} obj Optional instance to populate.
     * @return {module:model/AvailabilityStatusPropertiesRecentlyResolvedState} The populated <code>AvailabilityStatusPropertiesRecentlyResolvedState</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AvailabilityStatusPropertiesRecentlyResolvedState();

            if (data.hasOwnProperty('resolvedTime')) {
                obj['resolvedTime'] = ApiClient.convertToType(data['resolvedTime'], 'Date');
            }
            if (data.hasOwnProperty('unavailabilitySummary')) {
                obj['unavailabilitySummary'] = ApiClient.convertToType(data['unavailabilitySummary'], 'String');
            }
            if (data.hasOwnProperty('unavailableOccurredTime')) {
                obj['unavailableOccurredTime'] = ApiClient.convertToType(data['unavailableOccurredTime'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AvailabilityStatusPropertiesRecentlyResolvedState</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AvailabilityStatusPropertiesRecentlyResolvedState</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['unavailabilitySummary'] && !(typeof data['unavailabilitySummary'] === 'string' || data['unavailabilitySummary'] instanceof String)) {
            throw new Error("Expected the field `unavailabilitySummary` to be a primitive type in the JSON string but got " + data['unavailabilitySummary']);
        }

        return true;
    }


}



/**
 * Timestamp when the availabilityState changes to Available.
 * @member {Date} resolvedTime
 */
AvailabilityStatusPropertiesRecentlyResolvedState.prototype['resolvedTime'] = undefined;

/**
 * Brief description of cause of the resource becoming unavailable.
 * @member {String} unavailabilitySummary
 */
AvailabilityStatusPropertiesRecentlyResolvedState.prototype['unavailabilitySummary'] = undefined;

/**
 * Timestamp for when the availabilityState changed to Unavailable
 * @member {Date} unavailableOccurredTime
 */
AvailabilityStatusPropertiesRecentlyResolvedState.prototype['unavailableOccurredTime'] = undefined;






export default AvailabilityStatusPropertiesRecentlyResolvedState;

