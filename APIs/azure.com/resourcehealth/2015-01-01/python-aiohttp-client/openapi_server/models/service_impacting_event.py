# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.service_impacting_event_incident_properties import ServiceImpactingEventIncidentProperties
from openapi_server.models.service_impacting_event_status import ServiceImpactingEventStatus
from openapi_server import util


class ServiceImpactingEvent(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, correlation_id: str=None, event_start_time: datetime=None, event_status_last_modified_time: datetime=None, incident_properties: ServiceImpactingEventIncidentProperties=None, status: ServiceImpactingEventStatus=None):
        """ServiceImpactingEvent - a model defined in OpenAPI

        :param correlation_id: The correlation_id of this ServiceImpactingEvent.
        :param event_start_time: The event_start_time of this ServiceImpactingEvent.
        :param event_status_last_modified_time: The event_status_last_modified_time of this ServiceImpactingEvent.
        :param incident_properties: The incident_properties of this ServiceImpactingEvent.
        :param status: The status of this ServiceImpactingEvent.
        """
        self.openapi_types = {
            'correlation_id': str,
            'event_start_time': datetime,
            'event_status_last_modified_time': datetime,
            'incident_properties': ServiceImpactingEventIncidentProperties,
            'status': ServiceImpactingEventStatus
        }

        self.attribute_map = {
            'correlation_id': 'correlationId',
            'event_start_time': 'eventStartTime',
            'event_status_last_modified_time': 'eventStatusLastModifiedTime',
            'incident_properties': 'incidentProperties',
            'status': 'status'
        }

        self._correlation_id = correlation_id
        self._event_start_time = event_start_time
        self._event_status_last_modified_time = event_status_last_modified_time
        self._incident_properties = incident_properties
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ServiceImpactingEvent':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The serviceImpactingEvent of this ServiceImpactingEvent.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def correlation_id(self):
        """Gets the correlation_id of this ServiceImpactingEvent.

        Correlation id for the event

        :return: The correlation_id of this ServiceImpactingEvent.
        :rtype: str
        """
        return self._correlation_id

    @correlation_id.setter
    def correlation_id(self, correlation_id):
        """Sets the correlation_id of this ServiceImpactingEvent.

        Correlation id for the event

        :param correlation_id: The correlation_id of this ServiceImpactingEvent.
        :type correlation_id: str
        """

        self._correlation_id = correlation_id

    @property
    def event_start_time(self):
        """Gets the event_start_time of this ServiceImpactingEvent.

        Timestamp for when the event started.

        :return: The event_start_time of this ServiceImpactingEvent.
        :rtype: datetime
        """
        return self._event_start_time

    @event_start_time.setter
    def event_start_time(self, event_start_time):
        """Sets the event_start_time of this ServiceImpactingEvent.

        Timestamp for when the event started.

        :param event_start_time: The event_start_time of this ServiceImpactingEvent.
        :type event_start_time: datetime
        """

        self._event_start_time = event_start_time

    @property
    def event_status_last_modified_time(self):
        """Gets the event_status_last_modified_time of this ServiceImpactingEvent.

        Timestamp for when event was submitted/detected.

        :return: The event_status_last_modified_time of this ServiceImpactingEvent.
        :rtype: datetime
        """
        return self._event_status_last_modified_time

    @event_status_last_modified_time.setter
    def event_status_last_modified_time(self, event_status_last_modified_time):
        """Sets the event_status_last_modified_time of this ServiceImpactingEvent.

        Timestamp for when event was submitted/detected.

        :param event_status_last_modified_time: The event_status_last_modified_time of this ServiceImpactingEvent.
        :type event_status_last_modified_time: datetime
        """

        self._event_status_last_modified_time = event_status_last_modified_time

    @property
    def incident_properties(self):
        """Gets the incident_properties of this ServiceImpactingEvent.


        :return: The incident_properties of this ServiceImpactingEvent.
        :rtype: ServiceImpactingEventIncidentProperties
        """
        return self._incident_properties

    @incident_properties.setter
    def incident_properties(self, incident_properties):
        """Sets the incident_properties of this ServiceImpactingEvent.


        :param incident_properties: The incident_properties of this ServiceImpactingEvent.
        :type incident_properties: ServiceImpactingEventIncidentProperties
        """

        self._incident_properties = incident_properties

    @property
    def status(self):
        """Gets the status of this ServiceImpactingEvent.


        :return: The status of this ServiceImpactingEvent.
        :rtype: ServiceImpactingEventStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this ServiceImpactingEvent.


        :param status: The status of this ServiceImpactingEvent.
        :type status: ServiceImpactingEventStatus
        """

        self._status = status
