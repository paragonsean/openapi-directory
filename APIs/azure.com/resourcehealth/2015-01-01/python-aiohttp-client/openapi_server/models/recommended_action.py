# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RecommendedAction(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, action: str=None, action_url: str=None, action_url_text: str=None):
        """RecommendedAction - a model defined in OpenAPI

        :param action: The action of this RecommendedAction.
        :param action_url: The action_url of this RecommendedAction.
        :param action_url_text: The action_url_text of this RecommendedAction.
        """
        self.openapi_types = {
            'action': str,
            'action_url': str,
            'action_url_text': str
        }

        self.attribute_map = {
            'action': 'action',
            'action_url': 'actionUrl',
            'action_url_text': 'actionUrlText'
        }

        self._action = action
        self._action_url = action_url
        self._action_url_text = action_url_text

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RecommendedAction':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The recommendedAction of this RecommendedAction.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def action(self):
        """Gets the action of this RecommendedAction.

        Recommended action.

        :return: The action of this RecommendedAction.
        :rtype: str
        """
        return self._action

    @action.setter
    def action(self, action):
        """Sets the action of this RecommendedAction.

        Recommended action.

        :param action: The action of this RecommendedAction.
        :type action: str
        """

        self._action = action

    @property
    def action_url(self):
        """Gets the action_url of this RecommendedAction.

        Link to the action

        :return: The action_url of this RecommendedAction.
        :rtype: str
        """
        return self._action_url

    @action_url.setter
    def action_url(self, action_url):
        """Sets the action_url of this RecommendedAction.

        Link to the action

        :param action_url: The action_url of this RecommendedAction.
        :type action_url: str
        """

        self._action_url = action_url

    @property
    def action_url_text(self):
        """Gets the action_url_text of this RecommendedAction.

        Substring of action, it describes which text should host the action url.

        :return: The action_url_text of this RecommendedAction.
        :rtype: str
        """
        return self._action_url_text

    @action_url_text.setter
    def action_url_text(self, action_url_text):
        """Sets the action_url_text of this RecommendedAction.

        Substring of action, it describes which text should host the action url.

        :param action_url_text: The action_url_text of this RecommendedAction.
        :type action_url_text: str
        """

        self._action_url_text = action_url_text
