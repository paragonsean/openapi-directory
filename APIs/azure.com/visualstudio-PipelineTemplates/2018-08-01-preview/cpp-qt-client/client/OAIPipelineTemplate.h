/**
 * Visual Studio Projects Resource Provider Client
 * Use these APIs to manage Visual Studio Team Services resources through the Azure Resource Manager. All task operations conform to the HTTP/1.1 protocol specification and each operation returns an x-ms-request-id header that can be used to obtain information about the request. You must make sure that requests made to these resources are secure. For more information, see https://docs.microsoft.com/en-us/rest/api/index.
 *
 * The version of the OpenAPI document: 2018-08-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPipelineTemplate.h
 *
 * Defines a pipeline template resource.
 */

#ifndef OAIPipelineTemplate_H
#define OAIPipelineTemplate_H

#include <QJsonObject>

#include "OAIInputDescriptor.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIInputDescriptor;

class OAIPipelineTemplate : public OAIObject {
public:
    OAIPipelineTemplate();
    OAIPipelineTemplate(QString json);
    ~OAIPipelineTemplate() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QList<OAIInputDescriptor> getInputs() const;
    void setInputs(const QList<OAIInputDescriptor> &inputs);
    bool is_inputs_Set() const;
    bool is_inputs_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QList<OAIInputDescriptor> m_inputs;
    bool m_inputs_isSet;
    bool m_inputs_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPipelineTemplate)

#endif // OAIPipelineTemplate_H
