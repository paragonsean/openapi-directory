/**
 * CommerceManagementClient
 * The Admin Commerce Management Client.
 *
 * The version of the OpenAPI document: 2015-06-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UsageAggregateModel model module.
 * @module model/UsageAggregateModel
 * @version 2015-06-01-preview
 */
class UsageAggregateModel {
    /**
     * Constructs a new <code>UsageAggregateModel</code>.
     * Properties for aggregate usage.
     * @alias module:model/UsageAggregateModel
     */
    constructor() { 
        
        UsageAggregateModel.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UsageAggregateModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UsageAggregateModel} obj Optional instance to populate.
     * @return {module:model/UsageAggregateModel} The populated <code>UsageAggregateModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UsageAggregateModel();

            if (data.hasOwnProperty('instanceData')) {
                obj['instanceData'] = ApiClient.convertToType(data['instanceData'], 'String');
            }
            if (data.hasOwnProperty('meterId')) {
                obj['meterId'] = ApiClient.convertToType(data['meterId'], 'String');
            }
            if (data.hasOwnProperty('quantity')) {
                obj['quantity'] = ApiClient.convertToType(data['quantity'], 'String');
            }
            if (data.hasOwnProperty('subscriptionId')) {
                obj['subscriptionId'] = ApiClient.convertToType(data['subscriptionId'], 'String');
            }
            if (data.hasOwnProperty('usageEndTime')) {
                obj['usageEndTime'] = ApiClient.convertToType(data['usageEndTime'], 'Date');
            }
            if (data.hasOwnProperty('usageStartTime')) {
                obj['usageStartTime'] = ApiClient.convertToType(data['usageStartTime'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UsageAggregateModel</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UsageAggregateModel</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['instanceData'] && !(typeof data['instanceData'] === 'string' || data['instanceData'] instanceof String)) {
            throw new Error("Expected the field `instanceData` to be a primitive type in the JSON string but got " + data['instanceData']);
        }
        // ensure the json data is a string
        if (data['meterId'] && !(typeof data['meterId'] === 'string' || data['meterId'] instanceof String)) {
            throw new Error("Expected the field `meterId` to be a primitive type in the JSON string but got " + data['meterId']);
        }
        // ensure the json data is a string
        if (data['quantity'] && !(typeof data['quantity'] === 'string' || data['quantity'] instanceof String)) {
            throw new Error("Expected the field `quantity` to be a primitive type in the JSON string but got " + data['quantity']);
        }
        // ensure the json data is a string
        if (data['subscriptionId'] && !(typeof data['subscriptionId'] === 'string' || data['subscriptionId'] instanceof String)) {
            throw new Error("Expected the field `subscriptionId` to be a primitive type in the JSON string but got " + data['subscriptionId']);
        }

        return true;
    }


}



/**
 * Key-value pairs of instance details represented as a string.
 * @member {String} instanceData
 */
UsageAggregateModel.prototype['instanceData'] = undefined;

/**
 * Unique ID for the resource that was consumed, for example, the Resource ID.
 * @member {String} meterId
 */
UsageAggregateModel.prototype['meterId'] = undefined;

/**
 * The amount of the resource consumption that occurred in this time frame.
 * @member {String} quantity
 */
UsageAggregateModel.prototype['quantity'] = undefined;

/**
 * Subscription ID of tenant using plan.
 * @member {String} subscriptionId
 */
UsageAggregateModel.prototype['subscriptionId'] = undefined;

/**
 * UTC end time for the usage category to which this usage aggregate belongs.
 * @member {Date} usageEndTime
 */
UsageAggregateModel.prototype['usageEndTime'] = undefined;

/**
 * UTC start time for the usage category to which this usage aggregate belongs.
 * @member {Date} usageStartTime
 */
UsageAggregateModel.prototype['usageStartTime'] = undefined;






export default UsageAggregateModel;

