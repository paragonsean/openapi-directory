/**
 * UpdateAdminClient
 * Update location operation endpoints and objects.
 *
 * The version of the OpenAPI document: 2016-05-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRegionUpdateState.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRegionUpdateState::OAIRegionUpdateState(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRegionUpdateState::OAIRegionUpdateState() {
    this->initializeModel();
}

OAIRegionUpdateState::~OAIRegionUpdateState() {}

void OAIRegionUpdateState::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIRegionUpdateState::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIRegionUpdateState::fromJson(QString jsonString) {
    
    if ( jsonString.compare("Unknown", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRegionUpdateState::UNKNOWN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("AppliedSuccessfully", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRegionUpdateState::APPLIEDSUCCESSFULLY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("AppliedUpdateAvailableSuccessfully", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRegionUpdateState::APPLIEDUPDATEAVAILABLESUCCESSFULLY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("UpdateInProgress", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRegionUpdateState::UPDATEINPROGRESS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("UpdateFailed", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRegionUpdateState::UPDATEFAILED;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIRegionUpdateState::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIRegionUpdateState::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIRegionUpdateState::UNKNOWN:
            val = "Unknown";
            break;
        case eOAIRegionUpdateState::APPLIEDSUCCESSFULLY:
            val = "AppliedSuccessfully";
            break;
        case eOAIRegionUpdateState::APPLIEDUPDATEAVAILABLESUCCESSFULLY:
            val = "AppliedUpdateAvailableSuccessfully";
            break;
        case eOAIRegionUpdateState::UPDATEINPROGRESS:
            val = "UpdateInProgress";
            break;
        case eOAIRegionUpdateState::UPDATEFAILED:
            val = "UpdateFailed";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIRegionUpdateState::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIRegionUpdateState::eOAIRegionUpdateState OAIRegionUpdateState::getValue() const {
    return m_value;
}

void OAIRegionUpdateState::setValue(const OAIRegionUpdateState::eOAIRegionUpdateState& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIRegionUpdateState::isSet() const {
    
    return m_value_isSet;
}

bool OAIRegionUpdateState::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
