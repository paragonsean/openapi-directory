/**
 * UpdateAdminClient
 * Update location operation endpoints and objects.
 *
 * The version of the OpenAPI document: 2016-05-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import UpdateLocation from '../model/UpdateLocation';
import UpdateLocationList from '../model/UpdateLocationList';

/**
* UpdateLocations service.
* @module api/UpdateLocationsApi
* @version 2016-05-01
*/
export default class UpdateLocationsApi {

    /**
    * Constructs a new UpdateLocationsApi. 
    * @alias module:api/UpdateLocationsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the updateLocationsGet operation.
     * @callback module:api/UpdateLocationsApi~updateLocationsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UpdateLocation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get an update location based on name.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription.  The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroupName Resource group name.
     * @param {String} updateLocation The name of the update location.
     * @param {String} apiVersion Client API Version.
     * @param {module:api/UpdateLocationsApi~updateLocationsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UpdateLocation}
     */
    updateLocationsGet(subscriptionId, resourceGroupName, updateLocation, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling updateLocationsGet");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling updateLocationsGet");
      }
      // verify the required parameter 'updateLocation' is set
      if (updateLocation === undefined || updateLocation === null) {
        throw new Error("Missing the required parameter 'updateLocation' when calling updateLocationsGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling updateLocationsGet");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'updateLocation': updateLocation
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = UpdateLocation;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Update.Admin/updateLocations/{updateLocation}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateLocationsList operation.
     * @callback module:api/UpdateLocationsApi~updateLocationsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UpdateLocationList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the list of update locations.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription.  The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroupName Resource group name.
     * @param {String} apiVersion Client API Version.
     * @param {module:api/UpdateLocationsApi~updateLocationsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UpdateLocationList}
     */
    updateLocationsList(subscriptionId, resourceGroupName, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling updateLocationsList");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling updateLocationsList");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling updateLocationsList");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = UpdateLocationList;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Update.Admin/updateLocations/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
