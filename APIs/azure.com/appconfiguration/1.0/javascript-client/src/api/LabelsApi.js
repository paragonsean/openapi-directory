/**
 * Azure App Configuration
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Error from '../model/Error';
import LabelListResult from '../model/LabelListResult';

/**
* Labels service.
* @module api/LabelsApi
* @version 1.0
*/
export default class LabelsApi {

    /**
    * Constructs a new LabelsApi. 
    * @alias module:api/LabelsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the checkLabels operation.
     * @callback module:api/LabelsApi~checkLabelsCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Requests the headers and status of the given resource.
     * @param {String} apiVersion The API version to be used with the HTTP request.
     * @param {Object} opts Optional parameters
     * @param {String} [name] A filter for the name of the returned labels.
     * @param {String} [syncToken] Used to guarantee real-time consistency between requests.
     * @param {String} [after] Instructs the server to return elements that appear after the element referred to by the specified token.
     * @param {String} [acceptDatetime] Requests the server to respond with the state of the resource at the specified time.
     * @param {Array.<module:model/String>} [select] Used to select what fields are present in the returned resource(s).
     * @param {module:api/LabelsApi~checkLabelsCallback} callback The callback function, accepting three arguments: error, data, response
     */
    checkLabels(apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling checkLabels");
      }

      let pathParams = {
      };
      let queryParams = {
        'name': opts['name'],
        'api-version': apiVersion,
        'After': opts['after'],
        '$Select': this.apiClient.buildCollectionParam(opts['select'], 'csv')
      };
      let headerParams = {
        'Sync-Token': opts['syncToken'],
        'Accept-Datetime': opts['acceptDatetime']
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/labels', 'HEAD',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getLabels operation.
     * @callback module:api/LabelsApi~getLabelsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/LabelListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets a list of labels.
     * @param {String} apiVersion The API version to be used with the HTTP request.
     * @param {Object} opts Optional parameters
     * @param {String} [name] A filter for the name of the returned labels.
     * @param {String} [syncToken] Used to guarantee real-time consistency between requests.
     * @param {String} [after] Instructs the server to return elements that appear after the element referred to by the specified token.
     * @param {String} [acceptDatetime] Requests the server to respond with the state of the resource at the specified time.
     * @param {Array.<module:model/String>} [select] Used to select what fields are present in the returned resource(s).
     * @param {module:api/LabelsApi~getLabelsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/LabelListResult}
     */
    getLabels(apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling getLabels");
      }

      let pathParams = {
      };
      let queryParams = {
        'name': opts['name'],
        'api-version': apiVersion,
        'After': opts['after'],
        '$Select': this.apiClient.buildCollectionParam(opts['select'], 'csv')
      };
      let headerParams = {
        'Sync-Token': opts['syncToken'],
        'Accept-Datetime': opts['acceptDatetime']
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/vnd.microsoft.appconfig.labelset+json', 'application/json', 'application/problem+json'];
      let returnType = LabelListResult;
      return this.apiClient.callApi(
        '/labels', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
