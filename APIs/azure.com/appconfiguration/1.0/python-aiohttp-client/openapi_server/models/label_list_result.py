# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.label import Label
from openapi_server import util


class LabelListResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, next_link: str=None, items: List[Label]=None):
        """LabelListResult - a model defined in OpenAPI

        :param next_link: The next_link of this LabelListResult.
        :param items: The items of this LabelListResult.
        """
        self.openapi_types = {
            'next_link': str,
            'items': List[Label]
        }

        self.attribute_map = {
            'next_link': '@nextLink',
            'items': 'items'
        }

        self._next_link = next_link
        self._items = items

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LabelListResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LabelListResult of this LabelListResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def next_link(self):
        """Gets the next_link of this LabelListResult.

        The URI that can be used to request the next set of paged results.

        :return: The next_link of this LabelListResult.
        :rtype: str
        """
        return self._next_link

    @next_link.setter
    def next_link(self, next_link):
        """Sets the next_link of this LabelListResult.

        The URI that can be used to request the next set of paged results.

        :param next_link: The next_link of this LabelListResult.
        :type next_link: str
        """

        self._next_link = next_link

    @property
    def items(self):
        """Gets the items of this LabelListResult.

        The collection value.

        :return: The items of this LabelListResult.
        :rtype: List[Label]
        """
        return self._items

    @items.setter
    def items(self, items):
        """Sets the items of this LabelListResult.

        The collection value.

        :param items: The items of this LabelListResult.
        :type items: List[Label]
        """

        self._items = items
