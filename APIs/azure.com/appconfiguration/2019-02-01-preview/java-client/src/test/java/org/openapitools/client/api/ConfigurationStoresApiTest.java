/*
 * AppConfigurationManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-02-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ApiKey;
import org.openapitools.client.model.ApiKeyListResult;
import org.openapitools.client.model.ConfigurationStore;
import org.openapitools.client.model.ConfigurationStoreListResult;
import org.openapitools.client.model.ConfigurationStoreUpdateParameters;
import org.openapitools.client.model.Error;
import org.openapitools.client.model.KeyValue;
import org.openapitools.client.model.ListKeyValueParameters;
import org.openapitools.client.model.RegenerateKeyParameters;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ConfigurationStoresApi
 */
@Disabled
public class ConfigurationStoresApiTest {

    private final ConfigurationStoresApi api = new ConfigurationStoresApi();

    /**
     * Creates a configuration store with the specified parameters.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void configurationStoresCreateTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String configStoreName = null;
        String apiVersion = null;
        ConfigurationStore configStoreCreationParameters = null;
        ConfigurationStore response = api.configurationStoresCreate(subscriptionId, resourceGroupName, configStoreName, apiVersion, configStoreCreationParameters);
        // TODO: test validations
    }

    /**
     * Deletes a configuration store.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void configurationStoresDeleteTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String configStoreName = null;
        String apiVersion = null;
        api.configurationStoresDelete(subscriptionId, resourceGroupName, configStoreName, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets the properties of the specified configuration store.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void configurationStoresGetTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String configStoreName = null;
        String apiVersion = null;
        ConfigurationStore response = api.configurationStoresGet(subscriptionId, resourceGroupName, configStoreName, apiVersion);
        // TODO: test validations
    }

    /**
     * Lists the configuration stores for a given subscription.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void configurationStoresListTest() throws ApiException {
        String subscriptionId = null;
        String apiVersion = null;
        String $skipToken = null;
        ConfigurationStoreListResult response = api.configurationStoresList(subscriptionId, apiVersion, $skipToken);
        // TODO: test validations
    }

    /**
     * Lists the configuration stores for a given resource group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void configurationStoresListByResourceGroupTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String apiVersion = null;
        String $skipToken = null;
        ConfigurationStoreListResult response = api.configurationStoresListByResourceGroup(subscriptionId, resourceGroupName, apiVersion, $skipToken);
        // TODO: test validations
    }

    /**
     * Lists a configuration store key-value.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void configurationStoresListKeyValueTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String configStoreName = null;
        String apiVersion = null;
        ListKeyValueParameters listKeyValueParameters = null;
        KeyValue response = api.configurationStoresListKeyValue(subscriptionId, resourceGroupName, configStoreName, apiVersion, listKeyValueParameters);
        // TODO: test validations
    }

    /**
     * Lists the access key for the specified configuration store.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void configurationStoresListKeysTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String configStoreName = null;
        String apiVersion = null;
        String $skipToken = null;
        ApiKeyListResult response = api.configurationStoresListKeys(subscriptionId, resourceGroupName, configStoreName, apiVersion, $skipToken);
        // TODO: test validations
    }

    /**
     * Regenerates an access key for the specified configuration store.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void configurationStoresRegenerateKeyTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String configStoreName = null;
        String apiVersion = null;
        RegenerateKeyParameters regenerateKeyParameters = null;
        ApiKey response = api.configurationStoresRegenerateKey(subscriptionId, resourceGroupName, configStoreName, apiVersion, regenerateKeyParameters);
        // TODO: test validations
    }

    /**
     * Updates a configuration store with the specified parameters.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void configurationStoresUpdateTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String configStoreName = null;
        String apiVersion = null;
        ConfigurationStoreUpdateParameters configStoreUpdateParameters = null;
        ConfigurationStore response = api.configurationStoresUpdate(subscriptionId, resourceGroupName, configStoreName, apiVersion, configStoreUpdateParameters);
        // TODO: test validations
    }

}
