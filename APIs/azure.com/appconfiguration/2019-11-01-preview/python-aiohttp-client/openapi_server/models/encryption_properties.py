# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.key_vault_properties import KeyVaultProperties
from openapi_server import util


class EncryptionProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, key_vault_properties: KeyVaultProperties=None):
        """EncryptionProperties - a model defined in OpenAPI

        :param key_vault_properties: The key_vault_properties of this EncryptionProperties.
        """
        self.openapi_types = {
            'key_vault_properties': KeyVaultProperties
        }

        self.attribute_map = {
            'key_vault_properties': 'keyVaultProperties'
        }

        self._key_vault_properties = key_vault_properties

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EncryptionProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EncryptionProperties of this EncryptionProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def key_vault_properties(self):
        """Gets the key_vault_properties of this EncryptionProperties.


        :return: The key_vault_properties of this EncryptionProperties.
        :rtype: KeyVaultProperties
        """
        return self._key_vault_properties

    @key_vault_properties.setter
    def key_vault_properties(self, key_vault_properties):
        """Sets the key_vault_properties of this EncryptionProperties.


        :param key_vault_properties: The key_vault_properties of this EncryptionProperties.
        :type key_vault_properties: KeyVaultProperties
        """

        self._key_vault_properties = key_vault_properties
