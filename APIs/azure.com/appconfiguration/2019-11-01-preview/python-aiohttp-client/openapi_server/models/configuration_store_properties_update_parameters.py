# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.encryption_properties import EncryptionProperties
from openapi_server import util


class ConfigurationStorePropertiesUpdateParameters(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, encryption: EncryptionProperties=None):
        """ConfigurationStorePropertiesUpdateParameters - a model defined in OpenAPI

        :param encryption: The encryption of this ConfigurationStorePropertiesUpdateParameters.
        """
        self.openapi_types = {
            'encryption': EncryptionProperties
        }

        self.attribute_map = {
            'encryption': 'encryption'
        }

        self._encryption = encryption

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ConfigurationStorePropertiesUpdateParameters':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ConfigurationStorePropertiesUpdateParameters of this ConfigurationStorePropertiesUpdateParameters.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def encryption(self):
        """Gets the encryption of this ConfigurationStorePropertiesUpdateParameters.


        :return: The encryption of this ConfigurationStorePropertiesUpdateParameters.
        :rtype: EncryptionProperties
        """
        return self._encryption

    @encryption.setter
    def encryption(self, encryption):
        """Sets the encryption of this ConfigurationStorePropertiesUpdateParameters.


        :param encryption: The encryption of this ConfigurationStorePropertiesUpdateParameters.
        :type encryption: EncryptionProperties
        """

        self._encryption = encryption
