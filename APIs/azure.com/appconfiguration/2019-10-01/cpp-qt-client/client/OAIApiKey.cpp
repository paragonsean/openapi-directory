/**
 * AppConfigurationManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-10-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApiKey.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApiKey::OAIApiKey(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApiKey::OAIApiKey() {
    this->initializeModel();
}

OAIApiKey::~OAIApiKey() {}

void OAIApiKey::initializeModel() {

    m_connection_string_isSet = false;
    m_connection_string_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_last_modified_isSet = false;
    m_last_modified_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_read_only_isSet = false;
    m_read_only_isValid = false;

    m_value_isSet = false;
    m_value_isValid = false;
}

void OAIApiKey::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIApiKey::fromJsonObject(QJsonObject json) {

    m_connection_string_isValid = ::OpenAPI::fromJsonValue(m_connection_string, json[QString("connectionString")]);
    m_connection_string_isSet = !json[QString("connectionString")].isNull() && m_connection_string_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_last_modified_isValid = ::OpenAPI::fromJsonValue(m_last_modified, json[QString("lastModified")]);
    m_last_modified_isSet = !json[QString("lastModified")].isNull() && m_last_modified_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_read_only_isValid = ::OpenAPI::fromJsonValue(m_read_only, json[QString("readOnly")]);
    m_read_only_isSet = !json[QString("readOnly")].isNull() && m_read_only_isValid;

    m_value_isValid = ::OpenAPI::fromJsonValue(m_value, json[QString("value")]);
    m_value_isSet = !json[QString("value")].isNull() && m_value_isValid;
}

QString OAIApiKey::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIApiKey::asJsonObject() const {
    QJsonObject obj;
    if (m_connection_string_isSet) {
        obj.insert(QString("connectionString"), ::OpenAPI::toJsonValue(m_connection_string));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_last_modified_isSet) {
        obj.insert(QString("lastModified"), ::OpenAPI::toJsonValue(m_last_modified));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_read_only_isSet) {
        obj.insert(QString("readOnly"), ::OpenAPI::toJsonValue(m_read_only));
    }
    if (m_value_isSet) {
        obj.insert(QString("value"), ::OpenAPI::toJsonValue(m_value));
    }
    return obj;
}

QString OAIApiKey::getConnectionString() const {
    return m_connection_string;
}
void OAIApiKey::setConnectionString(const QString &connection_string) {
    m_connection_string = connection_string;
    m_connection_string_isSet = true;
}

bool OAIApiKey::is_connection_string_Set() const{
    return m_connection_string_isSet;
}

bool OAIApiKey::is_connection_string_Valid() const{
    return m_connection_string_isValid;
}

QString OAIApiKey::getId() const {
    return m_id;
}
void OAIApiKey::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIApiKey::is_id_Set() const{
    return m_id_isSet;
}

bool OAIApiKey::is_id_Valid() const{
    return m_id_isValid;
}

QDateTime OAIApiKey::getLastModified() const {
    return m_last_modified;
}
void OAIApiKey::setLastModified(const QDateTime &last_modified) {
    m_last_modified = last_modified;
    m_last_modified_isSet = true;
}

bool OAIApiKey::is_last_modified_Set() const{
    return m_last_modified_isSet;
}

bool OAIApiKey::is_last_modified_Valid() const{
    return m_last_modified_isValid;
}

QString OAIApiKey::getName() const {
    return m_name;
}
void OAIApiKey::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIApiKey::is_name_Set() const{
    return m_name_isSet;
}

bool OAIApiKey::is_name_Valid() const{
    return m_name_isValid;
}

bool OAIApiKey::isReadOnly() const {
    return m_read_only;
}
void OAIApiKey::setReadOnly(const bool &read_only) {
    m_read_only = read_only;
    m_read_only_isSet = true;
}

bool OAIApiKey::is_read_only_Set() const{
    return m_read_only_isSet;
}

bool OAIApiKey::is_read_only_Valid() const{
    return m_read_only_isValid;
}

QString OAIApiKey::getValue() const {
    return m_value;
}
void OAIApiKey::setValue(const QString &value) {
    m_value = value;
    m_value_isSet = true;
}

bool OAIApiKey::is_value_Set() const{
    return m_value_isSet;
}

bool OAIApiKey::is_value_Valid() const{
    return m_value_isValid;
}

bool OAIApiKey::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_connection_string_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_read_only_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_value_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIApiKey::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
