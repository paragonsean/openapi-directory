/**
 * AppConfigurationManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-10-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOperationDefinitionDisplay.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOperationDefinitionDisplay::OAIOperationDefinitionDisplay(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOperationDefinitionDisplay::OAIOperationDefinitionDisplay() {
    this->initializeModel();
}

OAIOperationDefinitionDisplay::~OAIOperationDefinitionDisplay() {}

void OAIOperationDefinitionDisplay::initializeModel() {

    m_description_isSet = false;
    m_description_isValid = false;

    m_operation_isSet = false;
    m_operation_isValid = false;

    m_provider_isSet = false;
    m_provider_isValid = false;

    m_resource_isSet = false;
    m_resource_isValid = false;
}

void OAIOperationDefinitionDisplay::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOperationDefinitionDisplay::fromJsonObject(QJsonObject json) {

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_operation_isValid = ::OpenAPI::fromJsonValue(m_operation, json[QString("operation")]);
    m_operation_isSet = !json[QString("operation")].isNull() && m_operation_isValid;

    m_provider_isValid = ::OpenAPI::fromJsonValue(m_provider, json[QString("provider")]);
    m_provider_isSet = !json[QString("provider")].isNull() && m_provider_isValid;

    m_resource_isValid = ::OpenAPI::fromJsonValue(m_resource, json[QString("resource")]);
    m_resource_isSet = !json[QString("resource")].isNull() && m_resource_isValid;
}

QString OAIOperationDefinitionDisplay::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOperationDefinitionDisplay::asJsonObject() const {
    QJsonObject obj;
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_operation_isSet) {
        obj.insert(QString("operation"), ::OpenAPI::toJsonValue(m_operation));
    }
    if (m_provider_isSet) {
        obj.insert(QString("provider"), ::OpenAPI::toJsonValue(m_provider));
    }
    if (m_resource_isSet) {
        obj.insert(QString("resource"), ::OpenAPI::toJsonValue(m_resource));
    }
    return obj;
}

QString OAIOperationDefinitionDisplay::getDescription() const {
    return m_description;
}
void OAIOperationDefinitionDisplay::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIOperationDefinitionDisplay::is_description_Set() const{
    return m_description_isSet;
}

bool OAIOperationDefinitionDisplay::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIOperationDefinitionDisplay::getOperation() const {
    return m_operation;
}
void OAIOperationDefinitionDisplay::setOperation(const QString &operation) {
    m_operation = operation;
    m_operation_isSet = true;
}

bool OAIOperationDefinitionDisplay::is_operation_Set() const{
    return m_operation_isSet;
}

bool OAIOperationDefinitionDisplay::is_operation_Valid() const{
    return m_operation_isValid;
}

QString OAIOperationDefinitionDisplay::getProvider() const {
    return m_provider;
}
void OAIOperationDefinitionDisplay::setProvider(const QString &provider) {
    m_provider = provider;
    m_provider_isSet = true;
}

bool OAIOperationDefinitionDisplay::is_provider_Set() const{
    return m_provider_isSet;
}

bool OAIOperationDefinitionDisplay::is_provider_Valid() const{
    return m_provider_isValid;
}

QString OAIOperationDefinitionDisplay::getResource() const {
    return m_resource;
}
void OAIOperationDefinitionDisplay::setResource(const QString &resource) {
    m_resource = resource;
    m_resource_isSet = true;
}

bool OAIOperationDefinitionDisplay::is_resource_Set() const{
    return m_resource_isSet;
}

bool OAIOperationDefinitionDisplay::is_resource_Valid() const{
    return m_resource_isValid;
}

bool OAIOperationDefinitionDisplay::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_operation_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_provider_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOperationDefinitionDisplay::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
