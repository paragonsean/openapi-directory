/*
 * StorageManagementClient
 * The Admin Storage Management Client.
 *
 * The version of the OpenAPI document: 2015-12-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for FarmSettings
 */
public class FarmSettingsTest {
    private final FarmSettings model = new FarmSettings();

    /**
     * Model tests for FarmSettings
     */
    @Test
    public void testFarmSettings() {
        // TODO: test FarmSettings
    }

    /**
     * Test the property 'bandwidthThrottleIsEnabled'
     */
    @Test
    public void bandwidthThrottleIsEnabledTest() {
        // TODO: test bandwidthThrottleIsEnabled
    }

    /**
     * Test the property 'corsAllowedOriginsList'
     */
    @Test
    public void corsAllowedOriginsListTest() {
        // TODO: test corsAllowedOriginsList
    }

    /**
     * Test the property 'dataCenterUriHostSuffixes'
     */
    @Test
    public void dataCenterUriHostSuffixesTest() {
        // TODO: test dataCenterUriHostSuffixes
    }

    /**
     * Test the property 'defaultEgressThresholdInGbps'
     */
    @Test
    public void defaultEgressThresholdInGbpsTest() {
        // TODO: test defaultEgressThresholdInGbps
    }

    /**
     * Test the property 'defaultIngressThresholdInGbps'
     */
    @Test
    public void defaultIngressThresholdInGbpsTest() {
        // TODO: test defaultIngressThresholdInGbps
    }

    /**
     * Test the property 'defaultIntranetEgressThresholdInGbps'
     */
    @Test
    public void defaultIntranetEgressThresholdInGbpsTest() {
        // TODO: test defaultIntranetEgressThresholdInGbps
    }

    /**
     * Test the property 'defaultIntranetIngressThresholdInGbps'
     */
    @Test
    public void defaultIntranetIngressThresholdInGbpsTest() {
        // TODO: test defaultIntranetIngressThresholdInGbps
    }

    /**
     * Test the property 'defaultRequestThresholdInTps'
     */
    @Test
    public void defaultRequestThresholdInTpsTest() {
        // TODO: test defaultRequestThresholdInTps
    }

    /**
     * Test the property 'defaultThrottleProbabilityDecayIntervalInSeconds'
     */
    @Test
    public void defaultThrottleProbabilityDecayIntervalInSecondsTest() {
        // TODO: test defaultThrottleProbabilityDecayIntervalInSeconds
    }

    /**
     * Test the property 'defaultTotalEgressThresholdInGbps'
     */
    @Test
    public void defaultTotalEgressThresholdInGbpsTest() {
        // TODO: test defaultTotalEgressThresholdInGbps
    }

    /**
     * Test the property 'defaultTotalIngressThresholdInGbps'
     */
    @Test
    public void defaultTotalIngressThresholdInGbpsTest() {
        // TODO: test defaultTotalIngressThresholdInGbps
    }

    /**
     * Test the property 'feedbackRefreshIntervalInSeconds'
     */
    @Test
    public void feedbackRefreshIntervalInSecondsTest() {
        // TODO: test feedbackRefreshIntervalInSeconds
    }

    /**
     * Test the property 'gracePeriodForFullThrottlingInRefreshIntervals'
     */
    @Test
    public void gracePeriodForFullThrottlingInRefreshIntervalsTest() {
        // TODO: test gracePeriodForFullThrottlingInRefreshIntervals
    }

    /**
     * Test the property 'gracePeriodMaxThrottleProbability'
     */
    @Test
    public void gracePeriodMaxThrottleProbabilityTest() {
        // TODO: test gracePeriodMaxThrottleProbability
    }

    /**
     * Test the property 'hostStyleHttpPort'
     */
    @Test
    public void hostStyleHttpPortTest() {
        // TODO: test hostStyleHttpPort
    }

    /**
     * Test the property 'hostStyleHttpsPort'
     */
    @Test
    public void hostStyleHttpsPortTest() {
        // TODO: test hostStyleHttpsPort
    }

    /**
     * Test the property 'minimumEgressThresholdInGbps'
     */
    @Test
    public void minimumEgressThresholdInGbpsTest() {
        // TODO: test minimumEgressThresholdInGbps
    }

    /**
     * Test the property 'minimumIngressThresholdInGbps'
     */
    @Test
    public void minimumIngressThresholdInGbpsTest() {
        // TODO: test minimumIngressThresholdInGbps
    }

    /**
     * Test the property 'minimumIntranetEgressThresholdInGbps'
     */
    @Test
    public void minimumIntranetEgressThresholdInGbpsTest() {
        // TODO: test minimumIntranetEgressThresholdInGbps
    }

    /**
     * Test the property 'minimumIntranetIngressThresholdInGbps'
     */
    @Test
    public void minimumIntranetIngressThresholdInGbpsTest() {
        // TODO: test minimumIntranetIngressThresholdInGbps
    }

    /**
     * Test the property 'minimumRequestThresholdInTps'
     */
    @Test
    public void minimumRequestThresholdInTpsTest() {
        // TODO: test minimumRequestThresholdInTps
    }

    /**
     * Test the property 'minimumTotalEgressThresholdInGbps'
     */
    @Test
    public void minimumTotalEgressThresholdInGbpsTest() {
        // TODO: test minimumTotalEgressThresholdInGbps
    }

    /**
     * Test the property 'minimumTotalIngressThresholdInGbps'
     */
    @Test
    public void minimumTotalIngressThresholdInGbpsTest() {
        // TODO: test minimumTotalIngressThresholdInGbps
    }

    /**
     * Test the property 'numberOfAccountsToSync'
     */
    @Test
    public void numberOfAccountsToSyncTest() {
        // TODO: test numberOfAccountsToSync
    }

    /**
     * Test the property 'overallEgressThresholdInGbps'
     */
    @Test
    public void overallEgressThresholdInGbpsTest() {
        // TODO: test overallEgressThresholdInGbps
    }

    /**
     * Test the property 'overallIngressThresholdInGbps'
     */
    @Test
    public void overallIngressThresholdInGbpsTest() {
        // TODO: test overallIngressThresholdInGbps
    }

    /**
     * Test the property 'overallIntranetEgressThresholdInGbps'
     */
    @Test
    public void overallIntranetEgressThresholdInGbpsTest() {
        // TODO: test overallIntranetEgressThresholdInGbps
    }

    /**
     * Test the property 'overallIntranetIngressThresholdInGbps'
     */
    @Test
    public void overallIntranetIngressThresholdInGbpsTest() {
        // TODO: test overallIntranetIngressThresholdInGbps
    }

    /**
     * Test the property 'overallRequestThresholdInTps'
     */
    @Test
    public void overallRequestThresholdInTpsTest() {
        // TODO: test overallRequestThresholdInTps
    }

    /**
     * Test the property 'overallTotalEgressThresholdInGbps'
     */
    @Test
    public void overallTotalEgressThresholdInGbpsTest() {
        // TODO: test overallTotalEgressThresholdInGbps
    }

    /**
     * Test the property 'overallTotalIngressThresholdInGbps'
     */
    @Test
    public void overallTotalIngressThresholdInGbpsTest() {
        // TODO: test overallTotalIngressThresholdInGbps
    }

    /**
     * Test the property 'retentionPeriodForDeletedStorageAccountsInDays'
     */
    @Test
    public void retentionPeriodForDeletedStorageAccountsInDaysTest() {
        // TODO: test retentionPeriodForDeletedStorageAccountsInDays
    }

    /**
     * Test the property 'settingsPollingIntervalInSecond'
     */
    @Test
    public void settingsPollingIntervalInSecondTest() {
        // TODO: test settingsPollingIntervalInSecond
    }

    /**
     * Test the property 'toleranceFactorForEgress'
     */
    @Test
    public void toleranceFactorForEgressTest() {
        // TODO: test toleranceFactorForEgress
    }

    /**
     * Test the property 'toleranceFactorForIngress'
     */
    @Test
    public void toleranceFactorForIngressTest() {
        // TODO: test toleranceFactorForIngress
    }

    /**
     * Test the property 'toleranceFactorForIntranetEgress'
     */
    @Test
    public void toleranceFactorForIntranetEgressTest() {
        // TODO: test toleranceFactorForIntranetEgress
    }

    /**
     * Test the property 'toleranceFactorForIntranetIngress'
     */
    @Test
    public void toleranceFactorForIntranetIngressTest() {
        // TODO: test toleranceFactorForIntranetIngress
    }

    /**
     * Test the property 'toleranceFactorForTotalEgress'
     */
    @Test
    public void toleranceFactorForTotalEgressTest() {
        // TODO: test toleranceFactorForTotalEgress
    }

    /**
     * Test the property 'toleranceFactorForTotalIngress'
     */
    @Test
    public void toleranceFactorForTotalIngressTest() {
        // TODO: test toleranceFactorForTotalIngress
    }

    /**
     * Test the property 'toleranceFactorForTps'
     */
    @Test
    public void toleranceFactorForTpsTest() {
        // TODO: test toleranceFactorForTps
    }

    /**
     * Test the property 'usageCollectionIntervalInSeconds'
     */
    @Test
    public void usageCollectionIntervalInSecondsTest() {
        // TODO: test usageCollectionIntervalInSeconds
    }

}
