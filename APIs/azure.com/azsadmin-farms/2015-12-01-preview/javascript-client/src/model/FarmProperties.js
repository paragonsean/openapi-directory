/**
 * StorageManagementClient
 * The Admin Storage Management Client.
 *
 * The version of the OpenAPI document: 2015-12-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FarmSettings from './FarmSettings';

/**
 * The FarmProperties model module.
 * @module model/FarmProperties
 * @version 2015-12-01-preview
 */
class FarmProperties {
    /**
     * Constructs a new <code>FarmProperties</code>.
     * The properties of storage farm.
     * @alias module:model/FarmProperties
     */
    constructor() { 
        
        FarmProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FarmProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FarmProperties} obj Optional instance to populate.
     * @return {module:model/FarmProperties} The populated <code>FarmProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FarmProperties();

            if (data.hasOwnProperty('farmId')) {
                obj['farmId'] = ApiClient.convertToType(data['farmId'], 'String');
            }
            if (data.hasOwnProperty('settings')) {
                obj['settings'] = FarmSettings.constructFromObject(data['settings']);
            }
            if (data.hasOwnProperty('settingsStore')) {
                obj['settingsStore'] = ApiClient.convertToType(data['settingsStore'], 'String');
            }
            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FarmProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FarmProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['farmId'] && !(typeof data['farmId'] === 'string' || data['farmId'] instanceof String)) {
            throw new Error("Expected the field `farmId` to be a primitive type in the JSON string but got " + data['farmId']);
        }
        // validate the optional field `settings`
        if (data['settings']) { // data not null
          FarmSettings.validateJSON(data['settings']);
        }
        // ensure the json data is a string
        if (data['settingsStore'] && !(typeof data['settingsStore'] === 'string' || data['settingsStore'] instanceof String)) {
            throw new Error("Expected the field `settingsStore` to be a primitive type in the JSON string but got " + data['settingsStore']);
        }
        // ensure the json data is a string
        if (data['version'] && !(typeof data['version'] === 'string' || data['version'] instanceof String)) {
            throw new Error("Expected the field `version` to be a primitive type in the JSON string but got " + data['version']);
        }

        return true;
    }


}



/**
 * Farm identifier.
 * @member {String} farmId
 */
FarmProperties.prototype['farmId'] = undefined;

/**
 * @member {module:model/FarmSettings} settings
 */
FarmProperties.prototype['settings'] = undefined;

/**
 * The settings of storage farm.
 * @member {String} settingsStore
 */
FarmProperties.prototype['settingsStore'] = undefined;

/**
 * Resource version.
 * @member {String} version
 */
FarmProperties.prototype['version'] = undefined;






export default FarmProperties;

