/**
 * StorageManagementClient
 * The Admin Storage Management Client.
 *
 * The version of the OpenAPI document: 2015-12-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The FarmSettings model module.
 * @module model/FarmSettings
 * @version 2015-12-01-preview
 */
class FarmSettings {
    /**
     * Constructs a new <code>FarmSettings</code>.
     * Storage farm settings.
     * @alias module:model/FarmSettings
     */
    constructor() { 
        
        FarmSettings.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FarmSettings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FarmSettings} obj Optional instance to populate.
     * @return {module:model/FarmSettings} The populated <code>FarmSettings</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FarmSettings();

            if (data.hasOwnProperty('bandwidthThrottleIsEnabled')) {
                obj['bandwidthThrottleIsEnabled'] = ApiClient.convertToType(data['bandwidthThrottleIsEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('corsAllowedOriginsList')) {
                obj['corsAllowedOriginsList'] = ApiClient.convertToType(data['corsAllowedOriginsList'], 'String');
            }
            if (data.hasOwnProperty('dataCenterUriHostSuffixes')) {
                obj['dataCenterUriHostSuffixes'] = ApiClient.convertToType(data['dataCenterUriHostSuffixes'], 'String');
            }
            if (data.hasOwnProperty('defaultEgressThresholdInGbps')) {
                obj['defaultEgressThresholdInGbps'] = ApiClient.convertToType(data['defaultEgressThresholdInGbps'], 'Number');
            }
            if (data.hasOwnProperty('defaultIngressThresholdInGbps')) {
                obj['defaultIngressThresholdInGbps'] = ApiClient.convertToType(data['defaultIngressThresholdInGbps'], 'Number');
            }
            if (data.hasOwnProperty('defaultIntranetEgressThresholdInGbps')) {
                obj['defaultIntranetEgressThresholdInGbps'] = ApiClient.convertToType(data['defaultIntranetEgressThresholdInGbps'], 'Number');
            }
            if (data.hasOwnProperty('defaultIntranetIngressThresholdInGbps')) {
                obj['defaultIntranetIngressThresholdInGbps'] = ApiClient.convertToType(data['defaultIntranetIngressThresholdInGbps'], 'Number');
            }
            if (data.hasOwnProperty('defaultRequestThresholdInTps')) {
                obj['defaultRequestThresholdInTps'] = ApiClient.convertToType(data['defaultRequestThresholdInTps'], 'Number');
            }
            if (data.hasOwnProperty('defaultThrottleProbabilityDecayIntervalInSeconds')) {
                obj['defaultThrottleProbabilityDecayIntervalInSeconds'] = ApiClient.convertToType(data['defaultThrottleProbabilityDecayIntervalInSeconds'], 'Number');
            }
            if (data.hasOwnProperty('defaultTotalEgressThresholdInGbps')) {
                obj['defaultTotalEgressThresholdInGbps'] = ApiClient.convertToType(data['defaultTotalEgressThresholdInGbps'], 'Number');
            }
            if (data.hasOwnProperty('defaultTotalIngressThresholdInGbps')) {
                obj['defaultTotalIngressThresholdInGbps'] = ApiClient.convertToType(data['defaultTotalIngressThresholdInGbps'], 'Number');
            }
            if (data.hasOwnProperty('feedbackRefreshIntervalInSeconds')) {
                obj['feedbackRefreshIntervalInSeconds'] = ApiClient.convertToType(data['feedbackRefreshIntervalInSeconds'], 'Number');
            }
            if (data.hasOwnProperty('gracePeriodForFullThrottlingInRefreshIntervals')) {
                obj['gracePeriodForFullThrottlingInRefreshIntervals'] = ApiClient.convertToType(data['gracePeriodForFullThrottlingInRefreshIntervals'], 'Number');
            }
            if (data.hasOwnProperty('gracePeriodMaxThrottleProbability')) {
                obj['gracePeriodMaxThrottleProbability'] = ApiClient.convertToType(data['gracePeriodMaxThrottleProbability'], 'Number');
            }
            if (data.hasOwnProperty('hostStyleHttpPort')) {
                obj['hostStyleHttpPort'] = ApiClient.convertToType(data['hostStyleHttpPort'], 'Number');
            }
            if (data.hasOwnProperty('hostStyleHttpsPort')) {
                obj['hostStyleHttpsPort'] = ApiClient.convertToType(data['hostStyleHttpsPort'], 'Number');
            }
            if (data.hasOwnProperty('minimumEgressThresholdInGbps')) {
                obj['minimumEgressThresholdInGbps'] = ApiClient.convertToType(data['minimumEgressThresholdInGbps'], 'Number');
            }
            if (data.hasOwnProperty('minimumIngressThresholdInGbps')) {
                obj['minimumIngressThresholdInGbps'] = ApiClient.convertToType(data['minimumIngressThresholdInGbps'], 'Number');
            }
            if (data.hasOwnProperty('minimumIntranetEgressThresholdInGbps')) {
                obj['minimumIntranetEgressThresholdInGbps'] = ApiClient.convertToType(data['minimumIntranetEgressThresholdInGbps'], 'Number');
            }
            if (data.hasOwnProperty('minimumIntranetIngressThresholdInGbps')) {
                obj['minimumIntranetIngressThresholdInGbps'] = ApiClient.convertToType(data['minimumIntranetIngressThresholdInGbps'], 'Number');
            }
            if (data.hasOwnProperty('minimumRequestThresholdInTps')) {
                obj['minimumRequestThresholdInTps'] = ApiClient.convertToType(data['minimumRequestThresholdInTps'], 'Number');
            }
            if (data.hasOwnProperty('minimumTotalEgressThresholdInGbps')) {
                obj['minimumTotalEgressThresholdInGbps'] = ApiClient.convertToType(data['minimumTotalEgressThresholdInGbps'], 'Number');
            }
            if (data.hasOwnProperty('minimumTotalIngressThresholdInGbps')) {
                obj['minimumTotalIngressThresholdInGbps'] = ApiClient.convertToType(data['minimumTotalIngressThresholdInGbps'], 'Number');
            }
            if (data.hasOwnProperty('numberOfAccountsToSync')) {
                obj['numberOfAccountsToSync'] = ApiClient.convertToType(data['numberOfAccountsToSync'], 'Number');
            }
            if (data.hasOwnProperty('overallEgressThresholdInGbps')) {
                obj['overallEgressThresholdInGbps'] = ApiClient.convertToType(data['overallEgressThresholdInGbps'], 'Number');
            }
            if (data.hasOwnProperty('overallIngressThresholdInGbps')) {
                obj['overallIngressThresholdInGbps'] = ApiClient.convertToType(data['overallIngressThresholdInGbps'], 'Number');
            }
            if (data.hasOwnProperty('overallIntranetEgressThresholdInGbps')) {
                obj['overallIntranetEgressThresholdInGbps'] = ApiClient.convertToType(data['overallIntranetEgressThresholdInGbps'], 'Number');
            }
            if (data.hasOwnProperty('overallIntranetIngressThresholdInGbps')) {
                obj['overallIntranetIngressThresholdInGbps'] = ApiClient.convertToType(data['overallIntranetIngressThresholdInGbps'], 'Number');
            }
            if (data.hasOwnProperty('overallRequestThresholdInTps')) {
                obj['overallRequestThresholdInTps'] = ApiClient.convertToType(data['overallRequestThresholdInTps'], 'Number');
            }
            if (data.hasOwnProperty('overallTotalEgressThresholdInGbps')) {
                obj['overallTotalEgressThresholdInGbps'] = ApiClient.convertToType(data['overallTotalEgressThresholdInGbps'], 'Number');
            }
            if (data.hasOwnProperty('overallTotalIngressThresholdInGbps')) {
                obj['overallTotalIngressThresholdInGbps'] = ApiClient.convertToType(data['overallTotalIngressThresholdInGbps'], 'Number');
            }
            if (data.hasOwnProperty('retentionPeriodForDeletedStorageAccountsInDays')) {
                obj['retentionPeriodForDeletedStorageAccountsInDays'] = ApiClient.convertToType(data['retentionPeriodForDeletedStorageAccountsInDays'], 'Number');
            }
            if (data.hasOwnProperty('settingsPollingIntervalInSecond')) {
                obj['settingsPollingIntervalInSecond'] = ApiClient.convertToType(data['settingsPollingIntervalInSecond'], 'Number');
            }
            if (data.hasOwnProperty('toleranceFactorForEgress')) {
                obj['toleranceFactorForEgress'] = ApiClient.convertToType(data['toleranceFactorForEgress'], 'Number');
            }
            if (data.hasOwnProperty('toleranceFactorForIngress')) {
                obj['toleranceFactorForIngress'] = ApiClient.convertToType(data['toleranceFactorForIngress'], 'Number');
            }
            if (data.hasOwnProperty('toleranceFactorForIntranetEgress')) {
                obj['toleranceFactorForIntranetEgress'] = ApiClient.convertToType(data['toleranceFactorForIntranetEgress'], 'Number');
            }
            if (data.hasOwnProperty('toleranceFactorForIntranetIngress')) {
                obj['toleranceFactorForIntranetIngress'] = ApiClient.convertToType(data['toleranceFactorForIntranetIngress'], 'Number');
            }
            if (data.hasOwnProperty('toleranceFactorForTotalEgress')) {
                obj['toleranceFactorForTotalEgress'] = ApiClient.convertToType(data['toleranceFactorForTotalEgress'], 'Number');
            }
            if (data.hasOwnProperty('toleranceFactorForTotalIngress')) {
                obj['toleranceFactorForTotalIngress'] = ApiClient.convertToType(data['toleranceFactorForTotalIngress'], 'Number');
            }
            if (data.hasOwnProperty('toleranceFactorForTps')) {
                obj['toleranceFactorForTps'] = ApiClient.convertToType(data['toleranceFactorForTps'], 'Number');
            }
            if (data.hasOwnProperty('usageCollectionIntervalInSeconds')) {
                obj['usageCollectionIntervalInSeconds'] = ApiClient.convertToType(data['usageCollectionIntervalInSeconds'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FarmSettings</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FarmSettings</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['corsAllowedOriginsList'] && !(typeof data['corsAllowedOriginsList'] === 'string' || data['corsAllowedOriginsList'] instanceof String)) {
            throw new Error("Expected the field `corsAllowedOriginsList` to be a primitive type in the JSON string but got " + data['corsAllowedOriginsList']);
        }
        // ensure the json data is a string
        if (data['dataCenterUriHostSuffixes'] && !(typeof data['dataCenterUriHostSuffixes'] === 'string' || data['dataCenterUriHostSuffixes'] instanceof String)) {
            throw new Error("Expected the field `dataCenterUriHostSuffixes` to be a primitive type in the JSON string but got " + data['dataCenterUriHostSuffixes']);
        }

        return true;
    }


}



/**
 * Switch of bandwidth throttle enablement.
 * @member {Boolean} bandwidthThrottleIsEnabled
 */
FarmSettings.prototype['bandwidthThrottleIsEnabled'] = undefined;

/**
 * The list of allowed origins.
 * @member {String} corsAllowedOriginsList
 */
FarmSettings.prototype['corsAllowedOriginsList'] = undefined;

/**
 * The suffixes of URI of hosts in data center.
 * @member {String} dataCenterUriHostSuffixes
 */
FarmSettings.prototype['dataCenterUriHostSuffixes'] = undefined;

/**
 * Default egress threshold (in Gbps).
 * @member {Number} defaultEgressThresholdInGbps
 */
FarmSettings.prototype['defaultEgressThresholdInGbps'] = undefined;

/**
 * Default ingress threshold (in Gbps).
 * @member {Number} defaultIngressThresholdInGbps
 */
FarmSettings.prototype['defaultIngressThresholdInGbps'] = undefined;

/**
 * Default Intranet egress threshold (in Gbps).
 * @member {Number} defaultIntranetEgressThresholdInGbps
 */
FarmSettings.prototype['defaultIntranetEgressThresholdInGbps'] = undefined;

/**
 * Default Intranet ingress threshold (in Gbps).
 * @member {Number} defaultIntranetIngressThresholdInGbps
 */
FarmSettings.prototype['defaultIntranetIngressThresholdInGbps'] = undefined;

/**
 * Default request threshold (in TPS).
 * @member {Number} defaultRequestThresholdInTps
 */
FarmSettings.prototype['defaultRequestThresholdInTps'] = undefined;

/**
 * Interval (in seconds) of default throttle probability decay.
 * @member {Number} defaultThrottleProbabilityDecayIntervalInSeconds
 */
FarmSettings.prototype['defaultThrottleProbabilityDecayIntervalInSeconds'] = undefined;

/**
 * Default total egress threshold (in Gbps).
 * @member {Number} defaultTotalEgressThresholdInGbps
 */
FarmSettings.prototype['defaultTotalEgressThresholdInGbps'] = undefined;

/**
 * Default total ingress threshold (in Gbps).
 * @member {Number} defaultTotalIngressThresholdInGbps
 */
FarmSettings.prototype['defaultTotalIngressThresholdInGbps'] = undefined;

/**
 * Interval (in seconds) of feedback refresh.
 * @member {Number} feedbackRefreshIntervalInSeconds
 */
FarmSettings.prototype['feedbackRefreshIntervalInSeconds'] = undefined;

/**
 * Grace period for full throttling in refresh intervals.
 * @member {Number} gracePeriodForFullThrottlingInRefreshIntervals
 */
FarmSettings.prototype['gracePeriodForFullThrottlingInRefreshIntervals'] = undefined;

/**
 * Maximum probability of throttle in grace period.
 * @member {Number} gracePeriodMaxThrottleProbability
 */
FarmSettings.prototype['gracePeriodMaxThrottleProbability'] = undefined;

/**
 * Host style HTTP port.
 * @member {Number} hostStyleHttpPort
 */
FarmSettings.prototype['hostStyleHttpPort'] = undefined;

/**
 * Host style HTTPs port.
 * @member {Number} hostStyleHttpsPort
 */
FarmSettings.prototype['hostStyleHttpsPort'] = undefined;

/**
 * Minimum egress threshold (in Gbps).
 * @member {Number} minimumEgressThresholdInGbps
 */
FarmSettings.prototype['minimumEgressThresholdInGbps'] = undefined;

/**
 * Minimum ingress threshold (in Gbps).
 * @member {Number} minimumIngressThresholdInGbps
 */
FarmSettings.prototype['minimumIngressThresholdInGbps'] = undefined;

/**
 * Minimum Intranet egress threshold (in Gbps).
 * @member {Number} minimumIntranetEgressThresholdInGbps
 */
FarmSettings.prototype['minimumIntranetEgressThresholdInGbps'] = undefined;

/**
 * Minimum Intranet ingress threshold (in Gbps).
 * @member {Number} minimumIntranetIngressThresholdInGbps
 */
FarmSettings.prototype['minimumIntranetIngressThresholdInGbps'] = undefined;

/**
 * Minimum request threshold (in TPS).
 * @member {Number} minimumRequestThresholdInTps
 */
FarmSettings.prototype['minimumRequestThresholdInTps'] = undefined;

/**
 * Minimum total egress threshold (in Gbp
 * @member {Number} minimumTotalEgressThresholdInGbps
 */
FarmSettings.prototype['minimumTotalEgressThresholdInGbps'] = undefined;

/**
 * Minimum total ingress threshold (in Gbps).
 * @member {Number} minimumTotalIngressThresholdInGbps
 */
FarmSettings.prototype['minimumTotalIngressThresholdInGbps'] = undefined;

/**
 * Number of accounts to sync.
 * @member {Number} numberOfAccountsToSync
 */
FarmSettings.prototype['numberOfAccountsToSync'] = undefined;

/**
 * Overall egress threshold (in Gbps).
 * @member {Number} overallEgressThresholdInGbps
 */
FarmSettings.prototype['overallEgressThresholdInGbps'] = undefined;

/**
 * Overall ingress threshold (in Gbps)
 * @member {Number} overallIngressThresholdInGbps
 */
FarmSettings.prototype['overallIngressThresholdInGbps'] = undefined;

/**
 * Overall Intranet egress threshold (in Gbps).
 * @member {Number} overallIntranetEgressThresholdInGbps
 */
FarmSettings.prototype['overallIntranetEgressThresholdInGbps'] = undefined;

/**
 * Overall Intranet ingress threshold (in Gbps).
 * @member {Number} overallIntranetIngressThresholdInGbps
 */
FarmSettings.prototype['overallIntranetIngressThresholdInGbps'] = undefined;

/**
 * Overall request threshold (in TPS).
 * @member {Number} overallRequestThresholdInTps
 */
FarmSettings.prototype['overallRequestThresholdInTps'] = undefined;

/**
 * Overall total egress threshold (in Gbps).
 * @member {Number} overallTotalEgressThresholdInGbps
 */
FarmSettings.prototype['overallTotalEgressThresholdInGbps'] = undefined;

/**
 * Overall total ingress threshold (in Gbps).
 * @member {Number} overallTotalIngressThresholdInGbps
 */
FarmSettings.prototype['overallTotalIngressThresholdInGbps'] = undefined;

/**
 * The retention period (in days) for deleted storage account.
 * @member {Number} retentionPeriodForDeletedStorageAccountsInDays
 */
FarmSettings.prototype['retentionPeriodForDeletedStorageAccountsInDays'] = undefined;

/**
 * The polling interval (in second).
 * @member {Number} settingsPollingIntervalInSecond
 */
FarmSettings.prototype['settingsPollingIntervalInSecond'] = undefined;

/**
 * Tolerance factor for egress.
 * @member {Number} toleranceFactorForEgress
 */
FarmSettings.prototype['toleranceFactorForEgress'] = undefined;

/**
 * Tolerance factor for ingress.
 * @member {Number} toleranceFactorForIngress
 */
FarmSettings.prototype['toleranceFactorForIngress'] = undefined;

/**
 * Tolerance factor for Intranet egress.
 * @member {Number} toleranceFactorForIntranetEgress
 */
FarmSettings.prototype['toleranceFactorForIntranetEgress'] = undefined;

/**
 * Tolerance factor for Intranet ingress.
 * @member {Number} toleranceFactorForIntranetIngress
 */
FarmSettings.prototype['toleranceFactorForIntranetIngress'] = undefined;

/**
 * Tolerance factor for total egress.
 * @member {Number} toleranceFactorForTotalEgress
 */
FarmSettings.prototype['toleranceFactorForTotalEgress'] = undefined;

/**
 * Tolerance factor for total ingress.
 * @member {Number} toleranceFactorForTotalIngress
 */
FarmSettings.prototype['toleranceFactorForTotalIngress'] = undefined;

/**
 * Tolerance factor for TPS.
 * @member {Number} toleranceFactorForTps
 */
FarmSettings.prototype['toleranceFactorForTps'] = undefined;

/**
 * Interval (in seconds) of storage usage collection.
 * @member {Number} usageCollectionIntervalInSeconds
 */
FarmSettings.prototype['usageCollectionIntervalInSeconds'] = undefined;






export default FarmSettings;

