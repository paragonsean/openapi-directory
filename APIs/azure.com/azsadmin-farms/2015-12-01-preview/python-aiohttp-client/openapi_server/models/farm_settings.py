# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class FarmSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bandwidth_throttle_is_enabled: bool=None, cors_allowed_origins_list: str=None, data_center_uri_host_suffixes: str=None, default_egress_threshold_in_gbps: float=None, default_ingress_threshold_in_gbps: float=None, default_intranet_egress_threshold_in_gbps: float=None, default_intranet_ingress_threshold_in_gbps: float=None, default_request_threshold_in_tps: float=None, default_throttle_probability_decay_interval_in_seconds: int=None, default_total_egress_threshold_in_gbps: float=None, default_total_ingress_threshold_in_gbps: float=None, feedback_refresh_interval_in_seconds: int=None, grace_period_for_full_throttling_in_refresh_intervals: int=None, grace_period_max_throttle_probability: float=None, host_style_http_port: int=None, host_style_https_port: int=None, minimum_egress_threshold_in_gbps: float=None, minimum_ingress_threshold_in_gbps: float=None, minimum_intranet_egress_threshold_in_gbps: float=None, minimum_intranet_ingress_threshold_in_gbps: float=None, minimum_request_threshold_in_tps: float=None, minimum_total_egress_threshold_in_gbps: float=None, minimum_total_ingress_threshold_in_gbps: float=None, number_of_accounts_to_sync: int=None, overall_egress_threshold_in_gbps: float=None, overall_ingress_threshold_in_gbps: float=None, overall_intranet_egress_threshold_in_gbps: float=None, overall_intranet_ingress_threshold_in_gbps: float=None, overall_request_threshold_in_tps: float=None, overall_total_egress_threshold_in_gbps: float=None, overall_total_ingress_threshold_in_gbps: float=None, retention_period_for_deleted_storage_accounts_in_days: int=None, settings_polling_interval_in_second: int=None, tolerance_factor_for_egress: float=None, tolerance_factor_for_ingress: float=None, tolerance_factor_for_intranet_egress: float=None, tolerance_factor_for_intranet_ingress: float=None, tolerance_factor_for_total_egress: float=None, tolerance_factor_for_total_ingress: float=None, tolerance_factor_for_tps: float=None, usage_collection_interval_in_seconds: int=None):
        """FarmSettings - a model defined in OpenAPI

        :param bandwidth_throttle_is_enabled: The bandwidth_throttle_is_enabled of this FarmSettings.
        :param cors_allowed_origins_list: The cors_allowed_origins_list of this FarmSettings.
        :param data_center_uri_host_suffixes: The data_center_uri_host_suffixes of this FarmSettings.
        :param default_egress_threshold_in_gbps: The default_egress_threshold_in_gbps of this FarmSettings.
        :param default_ingress_threshold_in_gbps: The default_ingress_threshold_in_gbps of this FarmSettings.
        :param default_intranet_egress_threshold_in_gbps: The default_intranet_egress_threshold_in_gbps of this FarmSettings.
        :param default_intranet_ingress_threshold_in_gbps: The default_intranet_ingress_threshold_in_gbps of this FarmSettings.
        :param default_request_threshold_in_tps: The default_request_threshold_in_tps of this FarmSettings.
        :param default_throttle_probability_decay_interval_in_seconds: The default_throttle_probability_decay_interval_in_seconds of this FarmSettings.
        :param default_total_egress_threshold_in_gbps: The default_total_egress_threshold_in_gbps of this FarmSettings.
        :param default_total_ingress_threshold_in_gbps: The default_total_ingress_threshold_in_gbps of this FarmSettings.
        :param feedback_refresh_interval_in_seconds: The feedback_refresh_interval_in_seconds of this FarmSettings.
        :param grace_period_for_full_throttling_in_refresh_intervals: The grace_period_for_full_throttling_in_refresh_intervals of this FarmSettings.
        :param grace_period_max_throttle_probability: The grace_period_max_throttle_probability of this FarmSettings.
        :param host_style_http_port: The host_style_http_port of this FarmSettings.
        :param host_style_https_port: The host_style_https_port of this FarmSettings.
        :param minimum_egress_threshold_in_gbps: The minimum_egress_threshold_in_gbps of this FarmSettings.
        :param minimum_ingress_threshold_in_gbps: The minimum_ingress_threshold_in_gbps of this FarmSettings.
        :param minimum_intranet_egress_threshold_in_gbps: The minimum_intranet_egress_threshold_in_gbps of this FarmSettings.
        :param minimum_intranet_ingress_threshold_in_gbps: The minimum_intranet_ingress_threshold_in_gbps of this FarmSettings.
        :param minimum_request_threshold_in_tps: The minimum_request_threshold_in_tps of this FarmSettings.
        :param minimum_total_egress_threshold_in_gbps: The minimum_total_egress_threshold_in_gbps of this FarmSettings.
        :param minimum_total_ingress_threshold_in_gbps: The minimum_total_ingress_threshold_in_gbps of this FarmSettings.
        :param number_of_accounts_to_sync: The number_of_accounts_to_sync of this FarmSettings.
        :param overall_egress_threshold_in_gbps: The overall_egress_threshold_in_gbps of this FarmSettings.
        :param overall_ingress_threshold_in_gbps: The overall_ingress_threshold_in_gbps of this FarmSettings.
        :param overall_intranet_egress_threshold_in_gbps: The overall_intranet_egress_threshold_in_gbps of this FarmSettings.
        :param overall_intranet_ingress_threshold_in_gbps: The overall_intranet_ingress_threshold_in_gbps of this FarmSettings.
        :param overall_request_threshold_in_tps: The overall_request_threshold_in_tps of this FarmSettings.
        :param overall_total_egress_threshold_in_gbps: The overall_total_egress_threshold_in_gbps of this FarmSettings.
        :param overall_total_ingress_threshold_in_gbps: The overall_total_ingress_threshold_in_gbps of this FarmSettings.
        :param retention_period_for_deleted_storage_accounts_in_days: The retention_period_for_deleted_storage_accounts_in_days of this FarmSettings.
        :param settings_polling_interval_in_second: The settings_polling_interval_in_second of this FarmSettings.
        :param tolerance_factor_for_egress: The tolerance_factor_for_egress of this FarmSettings.
        :param tolerance_factor_for_ingress: The tolerance_factor_for_ingress of this FarmSettings.
        :param tolerance_factor_for_intranet_egress: The tolerance_factor_for_intranet_egress of this FarmSettings.
        :param tolerance_factor_for_intranet_ingress: The tolerance_factor_for_intranet_ingress of this FarmSettings.
        :param tolerance_factor_for_total_egress: The tolerance_factor_for_total_egress of this FarmSettings.
        :param tolerance_factor_for_total_ingress: The tolerance_factor_for_total_ingress of this FarmSettings.
        :param tolerance_factor_for_tps: The tolerance_factor_for_tps of this FarmSettings.
        :param usage_collection_interval_in_seconds: The usage_collection_interval_in_seconds of this FarmSettings.
        """
        self.openapi_types = {
            'bandwidth_throttle_is_enabled': bool,
            'cors_allowed_origins_list': str,
            'data_center_uri_host_suffixes': str,
            'default_egress_threshold_in_gbps': float,
            'default_ingress_threshold_in_gbps': float,
            'default_intranet_egress_threshold_in_gbps': float,
            'default_intranet_ingress_threshold_in_gbps': float,
            'default_request_threshold_in_tps': float,
            'default_throttle_probability_decay_interval_in_seconds': int,
            'default_total_egress_threshold_in_gbps': float,
            'default_total_ingress_threshold_in_gbps': float,
            'feedback_refresh_interval_in_seconds': int,
            'grace_period_for_full_throttling_in_refresh_intervals': int,
            'grace_period_max_throttle_probability': float,
            'host_style_http_port': int,
            'host_style_https_port': int,
            'minimum_egress_threshold_in_gbps': float,
            'minimum_ingress_threshold_in_gbps': float,
            'minimum_intranet_egress_threshold_in_gbps': float,
            'minimum_intranet_ingress_threshold_in_gbps': float,
            'minimum_request_threshold_in_tps': float,
            'minimum_total_egress_threshold_in_gbps': float,
            'minimum_total_ingress_threshold_in_gbps': float,
            'number_of_accounts_to_sync': int,
            'overall_egress_threshold_in_gbps': float,
            'overall_ingress_threshold_in_gbps': float,
            'overall_intranet_egress_threshold_in_gbps': float,
            'overall_intranet_ingress_threshold_in_gbps': float,
            'overall_request_threshold_in_tps': float,
            'overall_total_egress_threshold_in_gbps': float,
            'overall_total_ingress_threshold_in_gbps': float,
            'retention_period_for_deleted_storage_accounts_in_days': int,
            'settings_polling_interval_in_second': int,
            'tolerance_factor_for_egress': float,
            'tolerance_factor_for_ingress': float,
            'tolerance_factor_for_intranet_egress': float,
            'tolerance_factor_for_intranet_ingress': float,
            'tolerance_factor_for_total_egress': float,
            'tolerance_factor_for_total_ingress': float,
            'tolerance_factor_for_tps': float,
            'usage_collection_interval_in_seconds': int
        }

        self.attribute_map = {
            'bandwidth_throttle_is_enabled': 'bandwidthThrottleIsEnabled',
            'cors_allowed_origins_list': 'corsAllowedOriginsList',
            'data_center_uri_host_suffixes': 'dataCenterUriHostSuffixes',
            'default_egress_threshold_in_gbps': 'defaultEgressThresholdInGbps',
            'default_ingress_threshold_in_gbps': 'defaultIngressThresholdInGbps',
            'default_intranet_egress_threshold_in_gbps': 'defaultIntranetEgressThresholdInGbps',
            'default_intranet_ingress_threshold_in_gbps': 'defaultIntranetIngressThresholdInGbps',
            'default_request_threshold_in_tps': 'defaultRequestThresholdInTps',
            'default_throttle_probability_decay_interval_in_seconds': 'defaultThrottleProbabilityDecayIntervalInSeconds',
            'default_total_egress_threshold_in_gbps': 'defaultTotalEgressThresholdInGbps',
            'default_total_ingress_threshold_in_gbps': 'defaultTotalIngressThresholdInGbps',
            'feedback_refresh_interval_in_seconds': 'feedbackRefreshIntervalInSeconds',
            'grace_period_for_full_throttling_in_refresh_intervals': 'gracePeriodForFullThrottlingInRefreshIntervals',
            'grace_period_max_throttle_probability': 'gracePeriodMaxThrottleProbability',
            'host_style_http_port': 'hostStyleHttpPort',
            'host_style_https_port': 'hostStyleHttpsPort',
            'minimum_egress_threshold_in_gbps': 'minimumEgressThresholdInGbps',
            'minimum_ingress_threshold_in_gbps': 'minimumIngressThresholdInGbps',
            'minimum_intranet_egress_threshold_in_gbps': 'minimumIntranetEgressThresholdInGbps',
            'minimum_intranet_ingress_threshold_in_gbps': 'minimumIntranetIngressThresholdInGbps',
            'minimum_request_threshold_in_tps': 'minimumRequestThresholdInTps',
            'minimum_total_egress_threshold_in_gbps': 'minimumTotalEgressThresholdInGbps',
            'minimum_total_ingress_threshold_in_gbps': 'minimumTotalIngressThresholdInGbps',
            'number_of_accounts_to_sync': 'numberOfAccountsToSync',
            'overall_egress_threshold_in_gbps': 'overallEgressThresholdInGbps',
            'overall_ingress_threshold_in_gbps': 'overallIngressThresholdInGbps',
            'overall_intranet_egress_threshold_in_gbps': 'overallIntranetEgressThresholdInGbps',
            'overall_intranet_ingress_threshold_in_gbps': 'overallIntranetIngressThresholdInGbps',
            'overall_request_threshold_in_tps': 'overallRequestThresholdInTps',
            'overall_total_egress_threshold_in_gbps': 'overallTotalEgressThresholdInGbps',
            'overall_total_ingress_threshold_in_gbps': 'overallTotalIngressThresholdInGbps',
            'retention_period_for_deleted_storage_accounts_in_days': 'retentionPeriodForDeletedStorageAccountsInDays',
            'settings_polling_interval_in_second': 'settingsPollingIntervalInSecond',
            'tolerance_factor_for_egress': 'toleranceFactorForEgress',
            'tolerance_factor_for_ingress': 'toleranceFactorForIngress',
            'tolerance_factor_for_intranet_egress': 'toleranceFactorForIntranetEgress',
            'tolerance_factor_for_intranet_ingress': 'toleranceFactorForIntranetIngress',
            'tolerance_factor_for_total_egress': 'toleranceFactorForTotalEgress',
            'tolerance_factor_for_total_ingress': 'toleranceFactorForTotalIngress',
            'tolerance_factor_for_tps': 'toleranceFactorForTps',
            'usage_collection_interval_in_seconds': 'usageCollectionIntervalInSeconds'
        }

        self._bandwidth_throttle_is_enabled = bandwidth_throttle_is_enabled
        self._cors_allowed_origins_list = cors_allowed_origins_list
        self._data_center_uri_host_suffixes = data_center_uri_host_suffixes
        self._default_egress_threshold_in_gbps = default_egress_threshold_in_gbps
        self._default_ingress_threshold_in_gbps = default_ingress_threshold_in_gbps
        self._default_intranet_egress_threshold_in_gbps = default_intranet_egress_threshold_in_gbps
        self._default_intranet_ingress_threshold_in_gbps = default_intranet_ingress_threshold_in_gbps
        self._default_request_threshold_in_tps = default_request_threshold_in_tps
        self._default_throttle_probability_decay_interval_in_seconds = default_throttle_probability_decay_interval_in_seconds
        self._default_total_egress_threshold_in_gbps = default_total_egress_threshold_in_gbps
        self._default_total_ingress_threshold_in_gbps = default_total_ingress_threshold_in_gbps
        self._feedback_refresh_interval_in_seconds = feedback_refresh_interval_in_seconds
        self._grace_period_for_full_throttling_in_refresh_intervals = grace_period_for_full_throttling_in_refresh_intervals
        self._grace_period_max_throttle_probability = grace_period_max_throttle_probability
        self._host_style_http_port = host_style_http_port
        self._host_style_https_port = host_style_https_port
        self._minimum_egress_threshold_in_gbps = minimum_egress_threshold_in_gbps
        self._minimum_ingress_threshold_in_gbps = minimum_ingress_threshold_in_gbps
        self._minimum_intranet_egress_threshold_in_gbps = minimum_intranet_egress_threshold_in_gbps
        self._minimum_intranet_ingress_threshold_in_gbps = minimum_intranet_ingress_threshold_in_gbps
        self._minimum_request_threshold_in_tps = minimum_request_threshold_in_tps
        self._minimum_total_egress_threshold_in_gbps = minimum_total_egress_threshold_in_gbps
        self._minimum_total_ingress_threshold_in_gbps = minimum_total_ingress_threshold_in_gbps
        self._number_of_accounts_to_sync = number_of_accounts_to_sync
        self._overall_egress_threshold_in_gbps = overall_egress_threshold_in_gbps
        self._overall_ingress_threshold_in_gbps = overall_ingress_threshold_in_gbps
        self._overall_intranet_egress_threshold_in_gbps = overall_intranet_egress_threshold_in_gbps
        self._overall_intranet_ingress_threshold_in_gbps = overall_intranet_ingress_threshold_in_gbps
        self._overall_request_threshold_in_tps = overall_request_threshold_in_tps
        self._overall_total_egress_threshold_in_gbps = overall_total_egress_threshold_in_gbps
        self._overall_total_ingress_threshold_in_gbps = overall_total_ingress_threshold_in_gbps
        self._retention_period_for_deleted_storage_accounts_in_days = retention_period_for_deleted_storage_accounts_in_days
        self._settings_polling_interval_in_second = settings_polling_interval_in_second
        self._tolerance_factor_for_egress = tolerance_factor_for_egress
        self._tolerance_factor_for_ingress = tolerance_factor_for_ingress
        self._tolerance_factor_for_intranet_egress = tolerance_factor_for_intranet_egress
        self._tolerance_factor_for_intranet_ingress = tolerance_factor_for_intranet_ingress
        self._tolerance_factor_for_total_egress = tolerance_factor_for_total_egress
        self._tolerance_factor_for_total_ingress = tolerance_factor_for_total_ingress
        self._tolerance_factor_for_tps = tolerance_factor_for_tps
        self._usage_collection_interval_in_seconds = usage_collection_interval_in_seconds

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FarmSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FarmSettings of this FarmSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bandwidth_throttle_is_enabled(self):
        """Gets the bandwidth_throttle_is_enabled of this FarmSettings.

        Switch of bandwidth throttle enablement.

        :return: The bandwidth_throttle_is_enabled of this FarmSettings.
        :rtype: bool
        """
        return self._bandwidth_throttle_is_enabled

    @bandwidth_throttle_is_enabled.setter
    def bandwidth_throttle_is_enabled(self, bandwidth_throttle_is_enabled):
        """Sets the bandwidth_throttle_is_enabled of this FarmSettings.

        Switch of bandwidth throttle enablement.

        :param bandwidth_throttle_is_enabled: The bandwidth_throttle_is_enabled of this FarmSettings.
        :type bandwidth_throttle_is_enabled: bool
        """

        self._bandwidth_throttle_is_enabled = bandwidth_throttle_is_enabled

    @property
    def cors_allowed_origins_list(self):
        """Gets the cors_allowed_origins_list of this FarmSettings.

        The list of allowed origins.

        :return: The cors_allowed_origins_list of this FarmSettings.
        :rtype: str
        """
        return self._cors_allowed_origins_list

    @cors_allowed_origins_list.setter
    def cors_allowed_origins_list(self, cors_allowed_origins_list):
        """Sets the cors_allowed_origins_list of this FarmSettings.

        The list of allowed origins.

        :param cors_allowed_origins_list: The cors_allowed_origins_list of this FarmSettings.
        :type cors_allowed_origins_list: str
        """

        self._cors_allowed_origins_list = cors_allowed_origins_list

    @property
    def data_center_uri_host_suffixes(self):
        """Gets the data_center_uri_host_suffixes of this FarmSettings.

        The suffixes of URI of hosts in data center.

        :return: The data_center_uri_host_suffixes of this FarmSettings.
        :rtype: str
        """
        return self._data_center_uri_host_suffixes

    @data_center_uri_host_suffixes.setter
    def data_center_uri_host_suffixes(self, data_center_uri_host_suffixes):
        """Sets the data_center_uri_host_suffixes of this FarmSettings.

        The suffixes of URI of hosts in data center.

        :param data_center_uri_host_suffixes: The data_center_uri_host_suffixes of this FarmSettings.
        :type data_center_uri_host_suffixes: str
        """

        self._data_center_uri_host_suffixes = data_center_uri_host_suffixes

    @property
    def default_egress_threshold_in_gbps(self):
        """Gets the default_egress_threshold_in_gbps of this FarmSettings.

        Default egress threshold (in Gbps).

        :return: The default_egress_threshold_in_gbps of this FarmSettings.
        :rtype: float
        """
        return self._default_egress_threshold_in_gbps

    @default_egress_threshold_in_gbps.setter
    def default_egress_threshold_in_gbps(self, default_egress_threshold_in_gbps):
        """Sets the default_egress_threshold_in_gbps of this FarmSettings.

        Default egress threshold (in Gbps).

        :param default_egress_threshold_in_gbps: The default_egress_threshold_in_gbps of this FarmSettings.
        :type default_egress_threshold_in_gbps: float
        """

        self._default_egress_threshold_in_gbps = default_egress_threshold_in_gbps

    @property
    def default_ingress_threshold_in_gbps(self):
        """Gets the default_ingress_threshold_in_gbps of this FarmSettings.

        Default ingress threshold (in Gbps).

        :return: The default_ingress_threshold_in_gbps of this FarmSettings.
        :rtype: float
        """
        return self._default_ingress_threshold_in_gbps

    @default_ingress_threshold_in_gbps.setter
    def default_ingress_threshold_in_gbps(self, default_ingress_threshold_in_gbps):
        """Sets the default_ingress_threshold_in_gbps of this FarmSettings.

        Default ingress threshold (in Gbps).

        :param default_ingress_threshold_in_gbps: The default_ingress_threshold_in_gbps of this FarmSettings.
        :type default_ingress_threshold_in_gbps: float
        """

        self._default_ingress_threshold_in_gbps = default_ingress_threshold_in_gbps

    @property
    def default_intranet_egress_threshold_in_gbps(self):
        """Gets the default_intranet_egress_threshold_in_gbps of this FarmSettings.

        Default Intranet egress threshold (in Gbps).

        :return: The default_intranet_egress_threshold_in_gbps of this FarmSettings.
        :rtype: float
        """
        return self._default_intranet_egress_threshold_in_gbps

    @default_intranet_egress_threshold_in_gbps.setter
    def default_intranet_egress_threshold_in_gbps(self, default_intranet_egress_threshold_in_gbps):
        """Sets the default_intranet_egress_threshold_in_gbps of this FarmSettings.

        Default Intranet egress threshold (in Gbps).

        :param default_intranet_egress_threshold_in_gbps: The default_intranet_egress_threshold_in_gbps of this FarmSettings.
        :type default_intranet_egress_threshold_in_gbps: float
        """

        self._default_intranet_egress_threshold_in_gbps = default_intranet_egress_threshold_in_gbps

    @property
    def default_intranet_ingress_threshold_in_gbps(self):
        """Gets the default_intranet_ingress_threshold_in_gbps of this FarmSettings.

        Default Intranet ingress threshold (in Gbps).

        :return: The default_intranet_ingress_threshold_in_gbps of this FarmSettings.
        :rtype: float
        """
        return self._default_intranet_ingress_threshold_in_gbps

    @default_intranet_ingress_threshold_in_gbps.setter
    def default_intranet_ingress_threshold_in_gbps(self, default_intranet_ingress_threshold_in_gbps):
        """Sets the default_intranet_ingress_threshold_in_gbps of this FarmSettings.

        Default Intranet ingress threshold (in Gbps).

        :param default_intranet_ingress_threshold_in_gbps: The default_intranet_ingress_threshold_in_gbps of this FarmSettings.
        :type default_intranet_ingress_threshold_in_gbps: float
        """

        self._default_intranet_ingress_threshold_in_gbps = default_intranet_ingress_threshold_in_gbps

    @property
    def default_request_threshold_in_tps(self):
        """Gets the default_request_threshold_in_tps of this FarmSettings.

        Default request threshold (in TPS).

        :return: The default_request_threshold_in_tps of this FarmSettings.
        :rtype: float
        """
        return self._default_request_threshold_in_tps

    @default_request_threshold_in_tps.setter
    def default_request_threshold_in_tps(self, default_request_threshold_in_tps):
        """Sets the default_request_threshold_in_tps of this FarmSettings.

        Default request threshold (in TPS).

        :param default_request_threshold_in_tps: The default_request_threshold_in_tps of this FarmSettings.
        :type default_request_threshold_in_tps: float
        """

        self._default_request_threshold_in_tps = default_request_threshold_in_tps

    @property
    def default_throttle_probability_decay_interval_in_seconds(self):
        """Gets the default_throttle_probability_decay_interval_in_seconds of this FarmSettings.

        Interval (in seconds) of default throttle probability decay.

        :return: The default_throttle_probability_decay_interval_in_seconds of this FarmSettings.
        :rtype: int
        """
        return self._default_throttle_probability_decay_interval_in_seconds

    @default_throttle_probability_decay_interval_in_seconds.setter
    def default_throttle_probability_decay_interval_in_seconds(self, default_throttle_probability_decay_interval_in_seconds):
        """Sets the default_throttle_probability_decay_interval_in_seconds of this FarmSettings.

        Interval (in seconds) of default throttle probability decay.

        :param default_throttle_probability_decay_interval_in_seconds: The default_throttle_probability_decay_interval_in_seconds of this FarmSettings.
        :type default_throttle_probability_decay_interval_in_seconds: int
        """

        self._default_throttle_probability_decay_interval_in_seconds = default_throttle_probability_decay_interval_in_seconds

    @property
    def default_total_egress_threshold_in_gbps(self):
        """Gets the default_total_egress_threshold_in_gbps of this FarmSettings.

        Default total egress threshold (in Gbps).

        :return: The default_total_egress_threshold_in_gbps of this FarmSettings.
        :rtype: float
        """
        return self._default_total_egress_threshold_in_gbps

    @default_total_egress_threshold_in_gbps.setter
    def default_total_egress_threshold_in_gbps(self, default_total_egress_threshold_in_gbps):
        """Sets the default_total_egress_threshold_in_gbps of this FarmSettings.

        Default total egress threshold (in Gbps).

        :param default_total_egress_threshold_in_gbps: The default_total_egress_threshold_in_gbps of this FarmSettings.
        :type default_total_egress_threshold_in_gbps: float
        """

        self._default_total_egress_threshold_in_gbps = default_total_egress_threshold_in_gbps

    @property
    def default_total_ingress_threshold_in_gbps(self):
        """Gets the default_total_ingress_threshold_in_gbps of this FarmSettings.

        Default total ingress threshold (in Gbps).

        :return: The default_total_ingress_threshold_in_gbps of this FarmSettings.
        :rtype: float
        """
        return self._default_total_ingress_threshold_in_gbps

    @default_total_ingress_threshold_in_gbps.setter
    def default_total_ingress_threshold_in_gbps(self, default_total_ingress_threshold_in_gbps):
        """Sets the default_total_ingress_threshold_in_gbps of this FarmSettings.

        Default total ingress threshold (in Gbps).

        :param default_total_ingress_threshold_in_gbps: The default_total_ingress_threshold_in_gbps of this FarmSettings.
        :type default_total_ingress_threshold_in_gbps: float
        """

        self._default_total_ingress_threshold_in_gbps = default_total_ingress_threshold_in_gbps

    @property
    def feedback_refresh_interval_in_seconds(self):
        """Gets the feedback_refresh_interval_in_seconds of this FarmSettings.

        Interval (in seconds) of feedback refresh.

        :return: The feedback_refresh_interval_in_seconds of this FarmSettings.
        :rtype: int
        """
        return self._feedback_refresh_interval_in_seconds

    @feedback_refresh_interval_in_seconds.setter
    def feedback_refresh_interval_in_seconds(self, feedback_refresh_interval_in_seconds):
        """Sets the feedback_refresh_interval_in_seconds of this FarmSettings.

        Interval (in seconds) of feedback refresh.

        :param feedback_refresh_interval_in_seconds: The feedback_refresh_interval_in_seconds of this FarmSettings.
        :type feedback_refresh_interval_in_seconds: int
        """

        self._feedback_refresh_interval_in_seconds = feedback_refresh_interval_in_seconds

    @property
    def grace_period_for_full_throttling_in_refresh_intervals(self):
        """Gets the grace_period_for_full_throttling_in_refresh_intervals of this FarmSettings.

        Grace period for full throttling in refresh intervals.

        :return: The grace_period_for_full_throttling_in_refresh_intervals of this FarmSettings.
        :rtype: int
        """
        return self._grace_period_for_full_throttling_in_refresh_intervals

    @grace_period_for_full_throttling_in_refresh_intervals.setter
    def grace_period_for_full_throttling_in_refresh_intervals(self, grace_period_for_full_throttling_in_refresh_intervals):
        """Sets the grace_period_for_full_throttling_in_refresh_intervals of this FarmSettings.

        Grace period for full throttling in refresh intervals.

        :param grace_period_for_full_throttling_in_refresh_intervals: The grace_period_for_full_throttling_in_refresh_intervals of this FarmSettings.
        :type grace_period_for_full_throttling_in_refresh_intervals: int
        """

        self._grace_period_for_full_throttling_in_refresh_intervals = grace_period_for_full_throttling_in_refresh_intervals

    @property
    def grace_period_max_throttle_probability(self):
        """Gets the grace_period_max_throttle_probability of this FarmSettings.

        Maximum probability of throttle in grace period.

        :return: The grace_period_max_throttle_probability of this FarmSettings.
        :rtype: float
        """
        return self._grace_period_max_throttle_probability

    @grace_period_max_throttle_probability.setter
    def grace_period_max_throttle_probability(self, grace_period_max_throttle_probability):
        """Sets the grace_period_max_throttle_probability of this FarmSettings.

        Maximum probability of throttle in grace period.

        :param grace_period_max_throttle_probability: The grace_period_max_throttle_probability of this FarmSettings.
        :type grace_period_max_throttle_probability: float
        """

        self._grace_period_max_throttle_probability = grace_period_max_throttle_probability

    @property
    def host_style_http_port(self):
        """Gets the host_style_http_port of this FarmSettings.

        Host style HTTP port.

        :return: The host_style_http_port of this FarmSettings.
        :rtype: int
        """
        return self._host_style_http_port

    @host_style_http_port.setter
    def host_style_http_port(self, host_style_http_port):
        """Sets the host_style_http_port of this FarmSettings.

        Host style HTTP port.

        :param host_style_http_port: The host_style_http_port of this FarmSettings.
        :type host_style_http_port: int
        """

        self._host_style_http_port = host_style_http_port

    @property
    def host_style_https_port(self):
        """Gets the host_style_https_port of this FarmSettings.

        Host style HTTPs port.

        :return: The host_style_https_port of this FarmSettings.
        :rtype: int
        """
        return self._host_style_https_port

    @host_style_https_port.setter
    def host_style_https_port(self, host_style_https_port):
        """Sets the host_style_https_port of this FarmSettings.

        Host style HTTPs port.

        :param host_style_https_port: The host_style_https_port of this FarmSettings.
        :type host_style_https_port: int
        """

        self._host_style_https_port = host_style_https_port

    @property
    def minimum_egress_threshold_in_gbps(self):
        """Gets the minimum_egress_threshold_in_gbps of this FarmSettings.

        Minimum egress threshold (in Gbps).

        :return: The minimum_egress_threshold_in_gbps of this FarmSettings.
        :rtype: float
        """
        return self._minimum_egress_threshold_in_gbps

    @minimum_egress_threshold_in_gbps.setter
    def minimum_egress_threshold_in_gbps(self, minimum_egress_threshold_in_gbps):
        """Sets the minimum_egress_threshold_in_gbps of this FarmSettings.

        Minimum egress threshold (in Gbps).

        :param minimum_egress_threshold_in_gbps: The minimum_egress_threshold_in_gbps of this FarmSettings.
        :type minimum_egress_threshold_in_gbps: float
        """

        self._minimum_egress_threshold_in_gbps = minimum_egress_threshold_in_gbps

    @property
    def minimum_ingress_threshold_in_gbps(self):
        """Gets the minimum_ingress_threshold_in_gbps of this FarmSettings.

        Minimum ingress threshold (in Gbps).

        :return: The minimum_ingress_threshold_in_gbps of this FarmSettings.
        :rtype: float
        """
        return self._minimum_ingress_threshold_in_gbps

    @minimum_ingress_threshold_in_gbps.setter
    def minimum_ingress_threshold_in_gbps(self, minimum_ingress_threshold_in_gbps):
        """Sets the minimum_ingress_threshold_in_gbps of this FarmSettings.

        Minimum ingress threshold (in Gbps).

        :param minimum_ingress_threshold_in_gbps: The minimum_ingress_threshold_in_gbps of this FarmSettings.
        :type minimum_ingress_threshold_in_gbps: float
        """

        self._minimum_ingress_threshold_in_gbps = minimum_ingress_threshold_in_gbps

    @property
    def minimum_intranet_egress_threshold_in_gbps(self):
        """Gets the minimum_intranet_egress_threshold_in_gbps of this FarmSettings.

        Minimum Intranet egress threshold (in Gbps).

        :return: The minimum_intranet_egress_threshold_in_gbps of this FarmSettings.
        :rtype: float
        """
        return self._minimum_intranet_egress_threshold_in_gbps

    @minimum_intranet_egress_threshold_in_gbps.setter
    def minimum_intranet_egress_threshold_in_gbps(self, minimum_intranet_egress_threshold_in_gbps):
        """Sets the minimum_intranet_egress_threshold_in_gbps of this FarmSettings.

        Minimum Intranet egress threshold (in Gbps).

        :param minimum_intranet_egress_threshold_in_gbps: The minimum_intranet_egress_threshold_in_gbps of this FarmSettings.
        :type minimum_intranet_egress_threshold_in_gbps: float
        """

        self._minimum_intranet_egress_threshold_in_gbps = minimum_intranet_egress_threshold_in_gbps

    @property
    def minimum_intranet_ingress_threshold_in_gbps(self):
        """Gets the minimum_intranet_ingress_threshold_in_gbps of this FarmSettings.

        Minimum Intranet ingress threshold (in Gbps).

        :return: The minimum_intranet_ingress_threshold_in_gbps of this FarmSettings.
        :rtype: float
        """
        return self._minimum_intranet_ingress_threshold_in_gbps

    @minimum_intranet_ingress_threshold_in_gbps.setter
    def minimum_intranet_ingress_threshold_in_gbps(self, minimum_intranet_ingress_threshold_in_gbps):
        """Sets the minimum_intranet_ingress_threshold_in_gbps of this FarmSettings.

        Minimum Intranet ingress threshold (in Gbps).

        :param minimum_intranet_ingress_threshold_in_gbps: The minimum_intranet_ingress_threshold_in_gbps of this FarmSettings.
        :type minimum_intranet_ingress_threshold_in_gbps: float
        """

        self._minimum_intranet_ingress_threshold_in_gbps = minimum_intranet_ingress_threshold_in_gbps

    @property
    def minimum_request_threshold_in_tps(self):
        """Gets the minimum_request_threshold_in_tps of this FarmSettings.

        Minimum request threshold (in TPS).

        :return: The minimum_request_threshold_in_tps of this FarmSettings.
        :rtype: float
        """
        return self._minimum_request_threshold_in_tps

    @minimum_request_threshold_in_tps.setter
    def minimum_request_threshold_in_tps(self, minimum_request_threshold_in_tps):
        """Sets the minimum_request_threshold_in_tps of this FarmSettings.

        Minimum request threshold (in TPS).

        :param minimum_request_threshold_in_tps: The minimum_request_threshold_in_tps of this FarmSettings.
        :type minimum_request_threshold_in_tps: float
        """

        self._minimum_request_threshold_in_tps = minimum_request_threshold_in_tps

    @property
    def minimum_total_egress_threshold_in_gbps(self):
        """Gets the minimum_total_egress_threshold_in_gbps of this FarmSettings.

        Minimum total egress threshold (in Gbp

        :return: The minimum_total_egress_threshold_in_gbps of this FarmSettings.
        :rtype: float
        """
        return self._minimum_total_egress_threshold_in_gbps

    @minimum_total_egress_threshold_in_gbps.setter
    def minimum_total_egress_threshold_in_gbps(self, minimum_total_egress_threshold_in_gbps):
        """Sets the minimum_total_egress_threshold_in_gbps of this FarmSettings.

        Minimum total egress threshold (in Gbp

        :param minimum_total_egress_threshold_in_gbps: The minimum_total_egress_threshold_in_gbps of this FarmSettings.
        :type minimum_total_egress_threshold_in_gbps: float
        """

        self._minimum_total_egress_threshold_in_gbps = minimum_total_egress_threshold_in_gbps

    @property
    def minimum_total_ingress_threshold_in_gbps(self):
        """Gets the minimum_total_ingress_threshold_in_gbps of this FarmSettings.

        Minimum total ingress threshold (in Gbps).

        :return: The minimum_total_ingress_threshold_in_gbps of this FarmSettings.
        :rtype: float
        """
        return self._minimum_total_ingress_threshold_in_gbps

    @minimum_total_ingress_threshold_in_gbps.setter
    def minimum_total_ingress_threshold_in_gbps(self, minimum_total_ingress_threshold_in_gbps):
        """Sets the minimum_total_ingress_threshold_in_gbps of this FarmSettings.

        Minimum total ingress threshold (in Gbps).

        :param minimum_total_ingress_threshold_in_gbps: The minimum_total_ingress_threshold_in_gbps of this FarmSettings.
        :type minimum_total_ingress_threshold_in_gbps: float
        """

        self._minimum_total_ingress_threshold_in_gbps = minimum_total_ingress_threshold_in_gbps

    @property
    def number_of_accounts_to_sync(self):
        """Gets the number_of_accounts_to_sync of this FarmSettings.

        Number of accounts to sync.

        :return: The number_of_accounts_to_sync of this FarmSettings.
        :rtype: int
        """
        return self._number_of_accounts_to_sync

    @number_of_accounts_to_sync.setter
    def number_of_accounts_to_sync(self, number_of_accounts_to_sync):
        """Sets the number_of_accounts_to_sync of this FarmSettings.

        Number of accounts to sync.

        :param number_of_accounts_to_sync: The number_of_accounts_to_sync of this FarmSettings.
        :type number_of_accounts_to_sync: int
        """

        self._number_of_accounts_to_sync = number_of_accounts_to_sync

    @property
    def overall_egress_threshold_in_gbps(self):
        """Gets the overall_egress_threshold_in_gbps of this FarmSettings.

        Overall egress threshold (in Gbps).

        :return: The overall_egress_threshold_in_gbps of this FarmSettings.
        :rtype: float
        """
        return self._overall_egress_threshold_in_gbps

    @overall_egress_threshold_in_gbps.setter
    def overall_egress_threshold_in_gbps(self, overall_egress_threshold_in_gbps):
        """Sets the overall_egress_threshold_in_gbps of this FarmSettings.

        Overall egress threshold (in Gbps).

        :param overall_egress_threshold_in_gbps: The overall_egress_threshold_in_gbps of this FarmSettings.
        :type overall_egress_threshold_in_gbps: float
        """

        self._overall_egress_threshold_in_gbps = overall_egress_threshold_in_gbps

    @property
    def overall_ingress_threshold_in_gbps(self):
        """Gets the overall_ingress_threshold_in_gbps of this FarmSettings.

        Overall ingress threshold (in Gbps)

        :return: The overall_ingress_threshold_in_gbps of this FarmSettings.
        :rtype: float
        """
        return self._overall_ingress_threshold_in_gbps

    @overall_ingress_threshold_in_gbps.setter
    def overall_ingress_threshold_in_gbps(self, overall_ingress_threshold_in_gbps):
        """Sets the overall_ingress_threshold_in_gbps of this FarmSettings.

        Overall ingress threshold (in Gbps)

        :param overall_ingress_threshold_in_gbps: The overall_ingress_threshold_in_gbps of this FarmSettings.
        :type overall_ingress_threshold_in_gbps: float
        """

        self._overall_ingress_threshold_in_gbps = overall_ingress_threshold_in_gbps

    @property
    def overall_intranet_egress_threshold_in_gbps(self):
        """Gets the overall_intranet_egress_threshold_in_gbps of this FarmSettings.

        Overall Intranet egress threshold (in Gbps).

        :return: The overall_intranet_egress_threshold_in_gbps of this FarmSettings.
        :rtype: float
        """
        return self._overall_intranet_egress_threshold_in_gbps

    @overall_intranet_egress_threshold_in_gbps.setter
    def overall_intranet_egress_threshold_in_gbps(self, overall_intranet_egress_threshold_in_gbps):
        """Sets the overall_intranet_egress_threshold_in_gbps of this FarmSettings.

        Overall Intranet egress threshold (in Gbps).

        :param overall_intranet_egress_threshold_in_gbps: The overall_intranet_egress_threshold_in_gbps of this FarmSettings.
        :type overall_intranet_egress_threshold_in_gbps: float
        """

        self._overall_intranet_egress_threshold_in_gbps = overall_intranet_egress_threshold_in_gbps

    @property
    def overall_intranet_ingress_threshold_in_gbps(self):
        """Gets the overall_intranet_ingress_threshold_in_gbps of this FarmSettings.

        Overall Intranet ingress threshold (in Gbps).

        :return: The overall_intranet_ingress_threshold_in_gbps of this FarmSettings.
        :rtype: float
        """
        return self._overall_intranet_ingress_threshold_in_gbps

    @overall_intranet_ingress_threshold_in_gbps.setter
    def overall_intranet_ingress_threshold_in_gbps(self, overall_intranet_ingress_threshold_in_gbps):
        """Sets the overall_intranet_ingress_threshold_in_gbps of this FarmSettings.

        Overall Intranet ingress threshold (in Gbps).

        :param overall_intranet_ingress_threshold_in_gbps: The overall_intranet_ingress_threshold_in_gbps of this FarmSettings.
        :type overall_intranet_ingress_threshold_in_gbps: float
        """

        self._overall_intranet_ingress_threshold_in_gbps = overall_intranet_ingress_threshold_in_gbps

    @property
    def overall_request_threshold_in_tps(self):
        """Gets the overall_request_threshold_in_tps of this FarmSettings.

        Overall request threshold (in TPS).

        :return: The overall_request_threshold_in_tps of this FarmSettings.
        :rtype: float
        """
        return self._overall_request_threshold_in_tps

    @overall_request_threshold_in_tps.setter
    def overall_request_threshold_in_tps(self, overall_request_threshold_in_tps):
        """Sets the overall_request_threshold_in_tps of this FarmSettings.

        Overall request threshold (in TPS).

        :param overall_request_threshold_in_tps: The overall_request_threshold_in_tps of this FarmSettings.
        :type overall_request_threshold_in_tps: float
        """

        self._overall_request_threshold_in_tps = overall_request_threshold_in_tps

    @property
    def overall_total_egress_threshold_in_gbps(self):
        """Gets the overall_total_egress_threshold_in_gbps of this FarmSettings.

        Overall total egress threshold (in Gbps).

        :return: The overall_total_egress_threshold_in_gbps of this FarmSettings.
        :rtype: float
        """
        return self._overall_total_egress_threshold_in_gbps

    @overall_total_egress_threshold_in_gbps.setter
    def overall_total_egress_threshold_in_gbps(self, overall_total_egress_threshold_in_gbps):
        """Sets the overall_total_egress_threshold_in_gbps of this FarmSettings.

        Overall total egress threshold (in Gbps).

        :param overall_total_egress_threshold_in_gbps: The overall_total_egress_threshold_in_gbps of this FarmSettings.
        :type overall_total_egress_threshold_in_gbps: float
        """

        self._overall_total_egress_threshold_in_gbps = overall_total_egress_threshold_in_gbps

    @property
    def overall_total_ingress_threshold_in_gbps(self):
        """Gets the overall_total_ingress_threshold_in_gbps of this FarmSettings.

        Overall total ingress threshold (in Gbps).

        :return: The overall_total_ingress_threshold_in_gbps of this FarmSettings.
        :rtype: float
        """
        return self._overall_total_ingress_threshold_in_gbps

    @overall_total_ingress_threshold_in_gbps.setter
    def overall_total_ingress_threshold_in_gbps(self, overall_total_ingress_threshold_in_gbps):
        """Sets the overall_total_ingress_threshold_in_gbps of this FarmSettings.

        Overall total ingress threshold (in Gbps).

        :param overall_total_ingress_threshold_in_gbps: The overall_total_ingress_threshold_in_gbps of this FarmSettings.
        :type overall_total_ingress_threshold_in_gbps: float
        """

        self._overall_total_ingress_threshold_in_gbps = overall_total_ingress_threshold_in_gbps

    @property
    def retention_period_for_deleted_storage_accounts_in_days(self):
        """Gets the retention_period_for_deleted_storage_accounts_in_days of this FarmSettings.

        The retention period (in days) for deleted storage account.

        :return: The retention_period_for_deleted_storage_accounts_in_days of this FarmSettings.
        :rtype: int
        """
        return self._retention_period_for_deleted_storage_accounts_in_days

    @retention_period_for_deleted_storage_accounts_in_days.setter
    def retention_period_for_deleted_storage_accounts_in_days(self, retention_period_for_deleted_storage_accounts_in_days):
        """Sets the retention_period_for_deleted_storage_accounts_in_days of this FarmSettings.

        The retention period (in days) for deleted storage account.

        :param retention_period_for_deleted_storage_accounts_in_days: The retention_period_for_deleted_storage_accounts_in_days of this FarmSettings.
        :type retention_period_for_deleted_storage_accounts_in_days: int
        """

        self._retention_period_for_deleted_storage_accounts_in_days = retention_period_for_deleted_storage_accounts_in_days

    @property
    def settings_polling_interval_in_second(self):
        """Gets the settings_polling_interval_in_second of this FarmSettings.

        The polling interval (in second).

        :return: The settings_polling_interval_in_second of this FarmSettings.
        :rtype: int
        """
        return self._settings_polling_interval_in_second

    @settings_polling_interval_in_second.setter
    def settings_polling_interval_in_second(self, settings_polling_interval_in_second):
        """Sets the settings_polling_interval_in_second of this FarmSettings.

        The polling interval (in second).

        :param settings_polling_interval_in_second: The settings_polling_interval_in_second of this FarmSettings.
        :type settings_polling_interval_in_second: int
        """

        self._settings_polling_interval_in_second = settings_polling_interval_in_second

    @property
    def tolerance_factor_for_egress(self):
        """Gets the tolerance_factor_for_egress of this FarmSettings.

        Tolerance factor for egress.

        :return: The tolerance_factor_for_egress of this FarmSettings.
        :rtype: float
        """
        return self._tolerance_factor_for_egress

    @tolerance_factor_for_egress.setter
    def tolerance_factor_for_egress(self, tolerance_factor_for_egress):
        """Sets the tolerance_factor_for_egress of this FarmSettings.

        Tolerance factor for egress.

        :param tolerance_factor_for_egress: The tolerance_factor_for_egress of this FarmSettings.
        :type tolerance_factor_for_egress: float
        """

        self._tolerance_factor_for_egress = tolerance_factor_for_egress

    @property
    def tolerance_factor_for_ingress(self):
        """Gets the tolerance_factor_for_ingress of this FarmSettings.

        Tolerance factor for ingress.

        :return: The tolerance_factor_for_ingress of this FarmSettings.
        :rtype: float
        """
        return self._tolerance_factor_for_ingress

    @tolerance_factor_for_ingress.setter
    def tolerance_factor_for_ingress(self, tolerance_factor_for_ingress):
        """Sets the tolerance_factor_for_ingress of this FarmSettings.

        Tolerance factor for ingress.

        :param tolerance_factor_for_ingress: The tolerance_factor_for_ingress of this FarmSettings.
        :type tolerance_factor_for_ingress: float
        """

        self._tolerance_factor_for_ingress = tolerance_factor_for_ingress

    @property
    def tolerance_factor_for_intranet_egress(self):
        """Gets the tolerance_factor_for_intranet_egress of this FarmSettings.

        Tolerance factor for Intranet egress.

        :return: The tolerance_factor_for_intranet_egress of this FarmSettings.
        :rtype: float
        """
        return self._tolerance_factor_for_intranet_egress

    @tolerance_factor_for_intranet_egress.setter
    def tolerance_factor_for_intranet_egress(self, tolerance_factor_for_intranet_egress):
        """Sets the tolerance_factor_for_intranet_egress of this FarmSettings.

        Tolerance factor for Intranet egress.

        :param tolerance_factor_for_intranet_egress: The tolerance_factor_for_intranet_egress of this FarmSettings.
        :type tolerance_factor_for_intranet_egress: float
        """

        self._tolerance_factor_for_intranet_egress = tolerance_factor_for_intranet_egress

    @property
    def tolerance_factor_for_intranet_ingress(self):
        """Gets the tolerance_factor_for_intranet_ingress of this FarmSettings.

        Tolerance factor for Intranet ingress.

        :return: The tolerance_factor_for_intranet_ingress of this FarmSettings.
        :rtype: float
        """
        return self._tolerance_factor_for_intranet_ingress

    @tolerance_factor_for_intranet_ingress.setter
    def tolerance_factor_for_intranet_ingress(self, tolerance_factor_for_intranet_ingress):
        """Sets the tolerance_factor_for_intranet_ingress of this FarmSettings.

        Tolerance factor for Intranet ingress.

        :param tolerance_factor_for_intranet_ingress: The tolerance_factor_for_intranet_ingress of this FarmSettings.
        :type tolerance_factor_for_intranet_ingress: float
        """

        self._tolerance_factor_for_intranet_ingress = tolerance_factor_for_intranet_ingress

    @property
    def tolerance_factor_for_total_egress(self):
        """Gets the tolerance_factor_for_total_egress of this FarmSettings.

        Tolerance factor for total egress.

        :return: The tolerance_factor_for_total_egress of this FarmSettings.
        :rtype: float
        """
        return self._tolerance_factor_for_total_egress

    @tolerance_factor_for_total_egress.setter
    def tolerance_factor_for_total_egress(self, tolerance_factor_for_total_egress):
        """Sets the tolerance_factor_for_total_egress of this FarmSettings.

        Tolerance factor for total egress.

        :param tolerance_factor_for_total_egress: The tolerance_factor_for_total_egress of this FarmSettings.
        :type tolerance_factor_for_total_egress: float
        """

        self._tolerance_factor_for_total_egress = tolerance_factor_for_total_egress

    @property
    def tolerance_factor_for_total_ingress(self):
        """Gets the tolerance_factor_for_total_ingress of this FarmSettings.

        Tolerance factor for total ingress.

        :return: The tolerance_factor_for_total_ingress of this FarmSettings.
        :rtype: float
        """
        return self._tolerance_factor_for_total_ingress

    @tolerance_factor_for_total_ingress.setter
    def tolerance_factor_for_total_ingress(self, tolerance_factor_for_total_ingress):
        """Sets the tolerance_factor_for_total_ingress of this FarmSettings.

        Tolerance factor for total ingress.

        :param tolerance_factor_for_total_ingress: The tolerance_factor_for_total_ingress of this FarmSettings.
        :type tolerance_factor_for_total_ingress: float
        """

        self._tolerance_factor_for_total_ingress = tolerance_factor_for_total_ingress

    @property
    def tolerance_factor_for_tps(self):
        """Gets the tolerance_factor_for_tps of this FarmSettings.

        Tolerance factor for TPS.

        :return: The tolerance_factor_for_tps of this FarmSettings.
        :rtype: float
        """
        return self._tolerance_factor_for_tps

    @tolerance_factor_for_tps.setter
    def tolerance_factor_for_tps(self, tolerance_factor_for_tps):
        """Sets the tolerance_factor_for_tps of this FarmSettings.

        Tolerance factor for TPS.

        :param tolerance_factor_for_tps: The tolerance_factor_for_tps of this FarmSettings.
        :type tolerance_factor_for_tps: float
        """

        self._tolerance_factor_for_tps = tolerance_factor_for_tps

    @property
    def usage_collection_interval_in_seconds(self):
        """Gets the usage_collection_interval_in_seconds of this FarmSettings.

        Interval (in seconds) of storage usage collection.

        :return: The usage_collection_interval_in_seconds of this FarmSettings.
        :rtype: int
        """
        return self._usage_collection_interval_in_seconds

    @usage_collection_interval_in_seconds.setter
    def usage_collection_interval_in_seconds(self, usage_collection_interval_in_seconds):
        """Sets the usage_collection_interval_in_seconds of this FarmSettings.

        Interval (in seconds) of storage usage collection.

        :param usage_collection_interval_in_seconds: The usage_collection_interval_in_seconds of this FarmSettings.
        :type usage_collection_interval_in_seconds: int
        """

        self._usage_collection_interval_in_seconds = usage_collection_interval_in_seconds
