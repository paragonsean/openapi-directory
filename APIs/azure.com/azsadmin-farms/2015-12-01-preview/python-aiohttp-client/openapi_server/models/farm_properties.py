# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.farm_settings import FarmSettings
from openapi_server import util


class FarmProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, farm_id: str=None, settings: FarmSettings=None, settings_store: str=None, version: str=None):
        """FarmProperties - a model defined in OpenAPI

        :param farm_id: The farm_id of this FarmProperties.
        :param settings: The settings of this FarmProperties.
        :param settings_store: The settings_store of this FarmProperties.
        :param version: The version of this FarmProperties.
        """
        self.openapi_types = {
            'farm_id': str,
            'settings': FarmSettings,
            'settings_store': str,
            'version': str
        }

        self.attribute_map = {
            'farm_id': 'farmId',
            'settings': 'settings',
            'settings_store': 'settingsStore',
            'version': 'version'
        }

        self._farm_id = farm_id
        self._settings = settings
        self._settings_store = settings_store
        self._version = version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FarmProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FarmProperties of this FarmProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def farm_id(self):
        """Gets the farm_id of this FarmProperties.

        Farm identifier.

        :return: The farm_id of this FarmProperties.
        :rtype: str
        """
        return self._farm_id

    @farm_id.setter
    def farm_id(self, farm_id):
        """Sets the farm_id of this FarmProperties.

        Farm identifier.

        :param farm_id: The farm_id of this FarmProperties.
        :type farm_id: str
        """

        self._farm_id = farm_id

    @property
    def settings(self):
        """Gets the settings of this FarmProperties.


        :return: The settings of this FarmProperties.
        :rtype: FarmSettings
        """
        return self._settings

    @settings.setter
    def settings(self, settings):
        """Sets the settings of this FarmProperties.


        :param settings: The settings of this FarmProperties.
        :type settings: FarmSettings
        """

        self._settings = settings

    @property
    def settings_store(self):
        """Gets the settings_store of this FarmProperties.

        The settings of storage farm.

        :return: The settings_store of this FarmProperties.
        :rtype: str
        """
        return self._settings_store

    @settings_store.setter
    def settings_store(self, settings_store):
        """Sets the settings_store of this FarmProperties.

        The settings of storage farm.

        :param settings_store: The settings_store of this FarmProperties.
        :type settings_store: str
        """

        self._settings_store = settings_store

    @property
    def version(self):
        """Gets the version of this FarmProperties.

        Resource version.

        :return: The version of this FarmProperties.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this FarmProperties.

        Resource version.

        :param version: The version of this FarmProperties.
        :type version: str
        """

        self._version = version
