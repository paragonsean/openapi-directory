# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SubscriptionOperation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, status: str=None, status_detail: str=None):
        """SubscriptionOperation - a model defined in OpenAPI

        :param id: The id of this SubscriptionOperation.
        :param status: The status of this SubscriptionOperation.
        :param status_detail: The status_detail of this SubscriptionOperation.
        """
        self.openapi_types = {
            'id': str,
            'status': str,
            'status_detail': str
        }

        self.attribute_map = {
            'id': 'id',
            'status': 'status',
            'status_detail': 'statusDetail'
        }

        self._id = id
        self._status = status
        self._status_detail = status_detail

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SubscriptionOperation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SubscriptionOperation of this SubscriptionOperation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this SubscriptionOperation.

        The operation Id.

        :return: The id of this SubscriptionOperation.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this SubscriptionOperation.

        The operation Id.

        :param id: The id of this SubscriptionOperation.
        :type id: str
        """

        self._id = id

    @property
    def status(self):
        """Gets the status of this SubscriptionOperation.

        Status of the pending subscription

        :return: The status of this SubscriptionOperation.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this SubscriptionOperation.

        Status of the pending subscription

        :param status: The status of this SubscriptionOperation.
        :type status: str
        """

        self._status = status

    @property
    def status_detail(self):
        """Gets the status_detail of this SubscriptionOperation.

        Status Detail of the pending subscription

        :return: The status_detail of this SubscriptionOperation.
        :rtype: str
        """
        return self._status_detail

    @status_detail.setter
    def status_detail(self, status_detail):
        """Sets the status_detail of this SubscriptionOperation.

        Status Detail of the pending subscription

        :param status_detail: The status_detail of this SubscriptionOperation.
        :type status_detail: str
        """

        self._status_detail = status_detail
