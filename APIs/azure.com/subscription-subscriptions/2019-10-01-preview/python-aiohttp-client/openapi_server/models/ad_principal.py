# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AdPrincipal(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, object_id: str=None):
        """AdPrincipal - a model defined in OpenAPI

        :param object_id: The object_id of this AdPrincipal.
        """
        self.openapi_types = {
            'object_id': str
        }

        self.attribute_map = {
            'object_id': 'objectId'
        }

        self._object_id = object_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AdPrincipal':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AdPrincipal of this AdPrincipal.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def object_id(self):
        """Gets the object_id of this AdPrincipal.

        Object id of the Principal

        :return: The object_id of this AdPrincipal.
        :rtype: str
        """
        return self._object_id

    @object_id.setter
    def object_id(self, object_id):
        """Sets the object_id of this AdPrincipal.

        Object id of the Principal

        :param object_id: The object_id of this AdPrincipal.
        :type object_id: str
        """
        if object_id is None:
            raise ValueError("Invalid value for `object_id`, must not be `None`")

        self._object_id = object_id
