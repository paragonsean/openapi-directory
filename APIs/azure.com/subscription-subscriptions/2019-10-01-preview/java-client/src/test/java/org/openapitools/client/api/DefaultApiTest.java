/*
 * SubscriptionClient
 * Subscription client provides an interface to create and manage Azure subscriptions programmatically.
 *
 * The version of the OpenAPI document: 2019-10-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CanceledSubscriptionId;
import org.openapitools.client.model.EnabledSubscriptionId;
import org.openapitools.client.model.ErrorResponse;
import org.openapitools.client.model.ModernCspSubscriptionCreationParameters;
import org.openapitools.client.model.ModernSubscriptionCreationParameters;
import org.openapitools.client.model.OperationListResult;
import org.openapitools.client.model.RenamedSubscriptionId;
import org.openapitools.client.model.SubscriptionCreationParameters;
import org.openapitools.client.model.SubscriptionCreationResult;
import org.openapitools.client.model.SubscriptionName;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Disabled
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    /**
     * Lists all of the available Microsoft.Subscription API operations.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void operationsListTest() throws ApiException {
        String apiVersion = null;
        OperationListResult response = api.operationsList(apiVersion);
        // TODO: test validations
    }

    /**
     * The operation to cancel a subscription
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void subscriptionCancelTest() throws ApiException {
        String subscriptionId = null;
        String apiVersion = null;
        CanceledSubscriptionId response = api.subscriptionCancel(subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * The operation to create a new CSP subscription.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void subscriptionCreateCspSubscriptionTest() throws ApiException {
        String billingAccountName = null;
        String customerName = null;
        String apiVersion = null;
        ModernCspSubscriptionCreationParameters body = null;
        SubscriptionCreationResult response = api.subscriptionCreateCspSubscription(billingAccountName, customerName, apiVersion, body);
        // TODO: test validations
    }

    /**
     * The operation to create a new WebDirect or EA Azure subscription.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void subscriptionCreateSubscriptionTest() throws ApiException {
        String billingAccountName = null;
        String billingProfileName = null;
        String invoiceSectionName = null;
        String apiVersion = null;
        ModernSubscriptionCreationParameters body = null;
        SubscriptionCreationResult response = api.subscriptionCreateSubscription(billingAccountName, billingProfileName, invoiceSectionName, apiVersion, body);
        // TODO: test validations
    }

    /**
     * Creates an Azure subscription
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void subscriptionCreateSubscriptionInEnrollmentAccountTest() throws ApiException {
        String enrollmentAccountName = null;
        String apiVersion = null;
        SubscriptionCreationParameters body = null;
        SubscriptionCreationResult response = api.subscriptionCreateSubscriptionInEnrollmentAccount(enrollmentAccountName, apiVersion, body);
        // TODO: test validations
    }

    /**
     * The operation to enable a subscription
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void subscriptionEnableTest() throws ApiException {
        String subscriptionId = null;
        String apiVersion = null;
        EnabledSubscriptionId response = api.subscriptionEnable(subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Get the status of the pending Microsoft.Subscription API operations.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void subscriptionOperationGetTest() throws ApiException {
        String operationId = null;
        String apiVersion = null;
        SubscriptionCreationResult response = api.subscriptionOperationGet(operationId, apiVersion);
        // TODO: test validations
    }

    /**
     * The operation to rename a subscription
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void subscriptionRenameTest() throws ApiException {
        String subscriptionId = null;
        String apiVersion = null;
        SubscriptionName body = null;
        RenamedSubscriptionId response = api.subscriptionRename(subscriptionId, apiVersion, body);
        // TODO: test validations
    }

}
