/**
 * SubscriptionClient
 * Subscription client provides an interface to create and manage Azure subscriptions programmatically.
 *
 * The version of the OpenAPI document: 2019-03-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CanceledSubscriptionId from '../model/CanceledSubscriptionId';
import EnabledSubscriptionId from '../model/EnabledSubscriptionId';
import ErrorResponse from '../model/ErrorResponse';
import RenamedSubscriptionId from '../model/RenamedSubscriptionId';
import SubscriptionName from '../model/SubscriptionName';

/**
* Default service.
* @module api/DefaultApi
* @version 2019-03-01-preview
*/
export default class DefaultApi {

    /**
    * Constructs a new DefaultApi. 
    * @alias module:api/DefaultApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the subscriptionsCancel operation.
     * @callback module:api/DefaultApi~subscriptionsCancelCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CanceledSubscriptionId} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * The operation to cancel a subscription
     * @param {String} subscriptionId Subscription Id.
     * @param {String} apiVersion Version of the API to be used with the client request. Current version is 2019-03-01-preview
     * @param {module:api/DefaultApi~subscriptionsCancelCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CanceledSubscriptionId}
     */
    subscriptionsCancel(subscriptionId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling subscriptionsCancel");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling subscriptionsCancel");
      }

      let pathParams = {
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = CanceledSubscriptionId;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.Subscription/cancel', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the subscriptionsEnable operation.
     * @callback module:api/DefaultApi~subscriptionsEnableCallback
     * @param {String} error Error message, if any.
     * @param {module:model/EnabledSubscriptionId} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * The operation to enable a subscription
     * @param {String} subscriptionId Subscription Id.
     * @param {String} apiVersion Version of the API to be used with the client request. Current version is 2019-03-01-preview
     * @param {module:api/DefaultApi~subscriptionsEnableCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/EnabledSubscriptionId}
     */
    subscriptionsEnable(subscriptionId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling subscriptionsEnable");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling subscriptionsEnable");
      }

      let pathParams = {
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = EnabledSubscriptionId;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.Subscription/enable', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the subscriptionsRename operation.
     * @callback module:api/DefaultApi~subscriptionsRenameCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RenamedSubscriptionId} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * The operation to rename a subscription
     * @param {String} subscriptionId Subscription Id.
     * @param {String} apiVersion Version of the API to be used with the client request. Current version is 2019-03-01-preview
     * @param {module:model/SubscriptionName} body Subscription Name
     * @param {module:api/DefaultApi~subscriptionsRenameCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RenamedSubscriptionId}
     */
    subscriptionsRename(subscriptionId, apiVersion, body, callback) {
      let postBody = body;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling subscriptionsRename");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling subscriptionsRename");
      }
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling subscriptionsRename");
      }

      let pathParams = {
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = RenamedSubscriptionId;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.Subscription/rename', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
