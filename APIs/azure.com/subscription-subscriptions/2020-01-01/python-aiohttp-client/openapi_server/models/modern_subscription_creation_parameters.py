# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.ad_principal import AdPrincipal
from openapi_server import util


class ModernSubscriptionCreationParameters(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cost_center: str=None, display_name: str=None, management_group_id: str=None, owner: AdPrincipal=None, sku_id: str=None):
        """ModernSubscriptionCreationParameters - a model defined in OpenAPI

        :param cost_center: The cost_center of this ModernSubscriptionCreationParameters.
        :param display_name: The display_name of this ModernSubscriptionCreationParameters.
        :param management_group_id: The management_group_id of this ModernSubscriptionCreationParameters.
        :param owner: The owner of this ModernSubscriptionCreationParameters.
        :param sku_id: The sku_id of this ModernSubscriptionCreationParameters.
        """
        self.openapi_types = {
            'cost_center': str,
            'display_name': str,
            'management_group_id': str,
            'owner': AdPrincipal,
            'sku_id': str
        }

        self.attribute_map = {
            'cost_center': 'costCenter',
            'display_name': 'displayName',
            'management_group_id': 'managementGroupId',
            'owner': 'owner',
            'sku_id': 'skuId'
        }

        self._cost_center = cost_center
        self._display_name = display_name
        self._management_group_id = management_group_id
        self._owner = owner
        self._sku_id = sku_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ModernSubscriptionCreationParameters':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ModernSubscriptionCreationParameters of this ModernSubscriptionCreationParameters.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cost_center(self):
        """Gets the cost_center of this ModernSubscriptionCreationParameters.

        If set, the cost center will show up on the Azure usage and charges file.

        :return: The cost_center of this ModernSubscriptionCreationParameters.
        :rtype: str
        """
        return self._cost_center

    @cost_center.setter
    def cost_center(self, cost_center):
        """Sets the cost_center of this ModernSubscriptionCreationParameters.

        If set, the cost center will show up on the Azure usage and charges file.

        :param cost_center: The cost_center of this ModernSubscriptionCreationParameters.
        :type cost_center: str
        """

        self._cost_center = cost_center

    @property
    def display_name(self):
        """Gets the display_name of this ModernSubscriptionCreationParameters.

        The friendly name of the subscription.

        :return: The display_name of this ModernSubscriptionCreationParameters.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this ModernSubscriptionCreationParameters.

        The friendly name of the subscription.

        :param display_name: The display_name of this ModernSubscriptionCreationParameters.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def management_group_id(self):
        """Gets the management_group_id of this ModernSubscriptionCreationParameters.

        The identifier of the management group to which this subscription will be associated.

        :return: The management_group_id of this ModernSubscriptionCreationParameters.
        :rtype: str
        """
        return self._management_group_id

    @management_group_id.setter
    def management_group_id(self, management_group_id):
        """Sets the management_group_id of this ModernSubscriptionCreationParameters.

        The identifier of the management group to which this subscription will be associated.

        :param management_group_id: The management_group_id of this ModernSubscriptionCreationParameters.
        :type management_group_id: str
        """

        self._management_group_id = management_group_id

    @property
    def owner(self):
        """Gets the owner of this ModernSubscriptionCreationParameters.


        :return: The owner of this ModernSubscriptionCreationParameters.
        :rtype: AdPrincipal
        """
        return self._owner

    @owner.setter
    def owner(self, owner):
        """Sets the owner of this ModernSubscriptionCreationParameters.


        :param owner: The owner of this ModernSubscriptionCreationParameters.
        :type owner: AdPrincipal
        """

        self._owner = owner

    @property
    def sku_id(self):
        """Gets the sku_id of this ModernSubscriptionCreationParameters.

        The SKU ID of the Azure plan. Azure plan determines the pricing and service-level agreement of the subscription.  Use 001 for Microsoft Azure Plan and 002 for Microsoft Azure Plan for DevTest.

        :return: The sku_id of this ModernSubscriptionCreationParameters.
        :rtype: str
        """
        return self._sku_id

    @sku_id.setter
    def sku_id(self, sku_id):
        """Sets the sku_id of this ModernSubscriptionCreationParameters.

        The SKU ID of the Azure plan. Azure plan determines the pricing and service-level agreement of the subscription.  Use 001 for Microsoft Azure Plan and 002 for Microsoft Azure Plan for DevTest.

        :param sku_id: The sku_id of this ModernSubscriptionCreationParameters.
        :type sku_id: str
        """

        self._sku_id = sku_id
