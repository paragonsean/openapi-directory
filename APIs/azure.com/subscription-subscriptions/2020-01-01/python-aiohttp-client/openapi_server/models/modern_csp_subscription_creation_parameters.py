# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ModernCspSubscriptionCreationParameters(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, display_name: str=None, reseller_id: str=None, sku_id: str=None):
        """ModernCspSubscriptionCreationParameters - a model defined in OpenAPI

        :param display_name: The display_name of this ModernCspSubscriptionCreationParameters.
        :param reseller_id: The reseller_id of this ModernCspSubscriptionCreationParameters.
        :param sku_id: The sku_id of this ModernCspSubscriptionCreationParameters.
        """
        self.openapi_types = {
            'display_name': str,
            'reseller_id': str,
            'sku_id': str
        }

        self.attribute_map = {
            'display_name': 'displayName',
            'reseller_id': 'resellerId',
            'sku_id': 'skuId'
        }

        self._display_name = display_name
        self._reseller_id = reseller_id
        self._sku_id = sku_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ModernCspSubscriptionCreationParameters':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ModernCspSubscriptionCreationParameters of this ModernCspSubscriptionCreationParameters.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def display_name(self):
        """Gets the display_name of this ModernCspSubscriptionCreationParameters.

        The friendly name of the subscription.

        :return: The display_name of this ModernCspSubscriptionCreationParameters.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this ModernCspSubscriptionCreationParameters.

        The friendly name of the subscription.

        :param display_name: The display_name of this ModernCspSubscriptionCreationParameters.
        :type display_name: str
        """
        if display_name is None:
            raise ValueError("Invalid value for `display_name`, must not be `None`")

        self._display_name = display_name

    @property
    def reseller_id(self):
        """Gets the reseller_id of this ModernCspSubscriptionCreationParameters.

        Reseller ID, basically MPN Id.

        :return: The reseller_id of this ModernCspSubscriptionCreationParameters.
        :rtype: str
        """
        return self._reseller_id

    @reseller_id.setter
    def reseller_id(self, reseller_id):
        """Sets the reseller_id of this ModernCspSubscriptionCreationParameters.

        Reseller ID, basically MPN Id.

        :param reseller_id: The reseller_id of this ModernCspSubscriptionCreationParameters.
        :type reseller_id: str
        """

        self._reseller_id = reseller_id

    @property
    def sku_id(self):
        """Gets the sku_id of this ModernCspSubscriptionCreationParameters.

        The SKU ID of the Azure plan. Azure plan determines the pricing and service-level agreement of the subscription.  Use 001 for Microsoft Azure Plan and 002 for Microsoft Azure Plan for DevTest.

        :return: The sku_id of this ModernCspSubscriptionCreationParameters.
        :rtype: str
        """
        return self._sku_id

    @sku_id.setter
    def sku_id(self, sku_id):
        """Sets the sku_id of this ModernCspSubscriptionCreationParameters.

        The SKU ID of the Azure plan. Azure plan determines the pricing and service-level agreement of the subscription.  Use 001 for Microsoft Azure Plan and 002 for Microsoft Azure Plan for DevTest.

        :param sku_id: The sku_id of this ModernCspSubscriptionCreationParameters.
        :type sku_id: str
        """
        if sku_id is None:
            raise ValueError("Invalid value for `sku_id`, must not be `None`")

        self._sku_id = sku_id
