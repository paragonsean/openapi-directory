/**
 * SubscriptionClient
 * Subscription client provides an interface to create and manage Azure subscriptions programmatically.
 *
 * The version of the OpenAPI document: 2020-01-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIModernSubscriptionCreationParameters.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIModernSubscriptionCreationParameters::OAIModernSubscriptionCreationParameters(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIModernSubscriptionCreationParameters::OAIModernSubscriptionCreationParameters() {
    this->initializeModel();
}

OAIModernSubscriptionCreationParameters::~OAIModernSubscriptionCreationParameters() {}

void OAIModernSubscriptionCreationParameters::initializeModel() {

    m_cost_center_isSet = false;
    m_cost_center_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_management_group_id_isSet = false;
    m_management_group_id_isValid = false;

    m_owner_isSet = false;
    m_owner_isValid = false;

    m_sku_id_isSet = false;
    m_sku_id_isValid = false;
}

void OAIModernSubscriptionCreationParameters::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIModernSubscriptionCreationParameters::fromJsonObject(QJsonObject json) {

    m_cost_center_isValid = ::OpenAPI::fromJsonValue(m_cost_center, json[QString("costCenter")]);
    m_cost_center_isSet = !json[QString("costCenter")].isNull() && m_cost_center_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_management_group_id_isValid = ::OpenAPI::fromJsonValue(m_management_group_id, json[QString("managementGroupId")]);
    m_management_group_id_isSet = !json[QString("managementGroupId")].isNull() && m_management_group_id_isValid;

    m_owner_isValid = ::OpenAPI::fromJsonValue(m_owner, json[QString("owner")]);
    m_owner_isSet = !json[QString("owner")].isNull() && m_owner_isValid;

    m_sku_id_isValid = ::OpenAPI::fromJsonValue(m_sku_id, json[QString("skuId")]);
    m_sku_id_isSet = !json[QString("skuId")].isNull() && m_sku_id_isValid;
}

QString OAIModernSubscriptionCreationParameters::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIModernSubscriptionCreationParameters::asJsonObject() const {
    QJsonObject obj;
    if (m_cost_center_isSet) {
        obj.insert(QString("costCenter"), ::OpenAPI::toJsonValue(m_cost_center));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_management_group_id_isSet) {
        obj.insert(QString("managementGroupId"), ::OpenAPI::toJsonValue(m_management_group_id));
    }
    if (m_owner.isSet()) {
        obj.insert(QString("owner"), ::OpenAPI::toJsonValue(m_owner));
    }
    if (m_sku_id_isSet) {
        obj.insert(QString("skuId"), ::OpenAPI::toJsonValue(m_sku_id));
    }
    return obj;
}

QString OAIModernSubscriptionCreationParameters::getCostCenter() const {
    return m_cost_center;
}
void OAIModernSubscriptionCreationParameters::setCostCenter(const QString &cost_center) {
    m_cost_center = cost_center;
    m_cost_center_isSet = true;
}

bool OAIModernSubscriptionCreationParameters::is_cost_center_Set() const{
    return m_cost_center_isSet;
}

bool OAIModernSubscriptionCreationParameters::is_cost_center_Valid() const{
    return m_cost_center_isValid;
}

QString OAIModernSubscriptionCreationParameters::getDisplayName() const {
    return m_display_name;
}
void OAIModernSubscriptionCreationParameters::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIModernSubscriptionCreationParameters::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIModernSubscriptionCreationParameters::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QString OAIModernSubscriptionCreationParameters::getManagementGroupId() const {
    return m_management_group_id;
}
void OAIModernSubscriptionCreationParameters::setManagementGroupId(const QString &management_group_id) {
    m_management_group_id = management_group_id;
    m_management_group_id_isSet = true;
}

bool OAIModernSubscriptionCreationParameters::is_management_group_id_Set() const{
    return m_management_group_id_isSet;
}

bool OAIModernSubscriptionCreationParameters::is_management_group_id_Valid() const{
    return m_management_group_id_isValid;
}

OAIAdPrincipal OAIModernSubscriptionCreationParameters::getOwner() const {
    return m_owner;
}
void OAIModernSubscriptionCreationParameters::setOwner(const OAIAdPrincipal &owner) {
    m_owner = owner;
    m_owner_isSet = true;
}

bool OAIModernSubscriptionCreationParameters::is_owner_Set() const{
    return m_owner_isSet;
}

bool OAIModernSubscriptionCreationParameters::is_owner_Valid() const{
    return m_owner_isValid;
}

QString OAIModernSubscriptionCreationParameters::getSkuId() const {
    return m_sku_id;
}
void OAIModernSubscriptionCreationParameters::setSkuId(const QString &sku_id) {
    m_sku_id = sku_id;
    m_sku_id_isSet = true;
}

bool OAIModernSubscriptionCreationParameters::is_sku_id_Set() const{
    return m_sku_id_isSet;
}

bool OAIModernSubscriptionCreationParameters::is_sku_id_Valid() const{
    return m_sku_id_isValid;
}

bool OAIModernSubscriptionCreationParameters::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cost_center_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_management_group_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_owner.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_sku_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIModernSubscriptionCreationParameters::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
