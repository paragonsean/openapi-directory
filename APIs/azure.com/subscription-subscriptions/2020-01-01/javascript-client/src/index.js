/**
 * SubscriptionClient
 * Subscription client provides an interface to create and manage Azure subscriptions programmatically.
 *
 * The version of the OpenAPI document: 2020-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AdPrincipal from './model/AdPrincipal';
import CanceledSubscriptionId from './model/CanceledSubscriptionId';
import EnabledSubscriptionId from './model/EnabledSubscriptionId';
import ErrorResponse from './model/ErrorResponse';
import ModernCspSubscriptionCreationParameters from './model/ModernCspSubscriptionCreationParameters';
import ModernSubscriptionCreationParameters from './model/ModernSubscriptionCreationParameters';
import Operation from './model/Operation';
import OperationDisplay from './model/OperationDisplay';
import OperationListResult from './model/OperationListResult';
import RenamedSubscriptionId from './model/RenamedSubscriptionId';
import SubscriptionCreationParameters from './model/SubscriptionCreationParameters';
import SubscriptionCreationResult from './model/SubscriptionCreationResult';
import SubscriptionName from './model/SubscriptionName';
import DefaultApi from './api/DefaultApi';


/**
* Subscription client provides an interface to create and manage Azure subscriptions programmatically..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var SubscriptionClient = require('index'); // See note below*.
* var xxxSvc = new SubscriptionClient.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new SubscriptionClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new SubscriptionClient.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new SubscriptionClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2020-01-01
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AdPrincipal model constructor.
     * @property {module:model/AdPrincipal}
     */
    AdPrincipal,

    /**
     * The CanceledSubscriptionId model constructor.
     * @property {module:model/CanceledSubscriptionId}
     */
    CanceledSubscriptionId,

    /**
     * The EnabledSubscriptionId model constructor.
     * @property {module:model/EnabledSubscriptionId}
     */
    EnabledSubscriptionId,

    /**
     * The ErrorResponse model constructor.
     * @property {module:model/ErrorResponse}
     */
    ErrorResponse,

    /**
     * The ModernCspSubscriptionCreationParameters model constructor.
     * @property {module:model/ModernCspSubscriptionCreationParameters}
     */
    ModernCspSubscriptionCreationParameters,

    /**
     * The ModernSubscriptionCreationParameters model constructor.
     * @property {module:model/ModernSubscriptionCreationParameters}
     */
    ModernSubscriptionCreationParameters,

    /**
     * The Operation model constructor.
     * @property {module:model/Operation}
     */
    Operation,

    /**
     * The OperationDisplay model constructor.
     * @property {module:model/OperationDisplay}
     */
    OperationDisplay,

    /**
     * The OperationListResult model constructor.
     * @property {module:model/OperationListResult}
     */
    OperationListResult,

    /**
     * The RenamedSubscriptionId model constructor.
     * @property {module:model/RenamedSubscriptionId}
     */
    RenamedSubscriptionId,

    /**
     * The SubscriptionCreationParameters model constructor.
     * @property {module:model/SubscriptionCreationParameters}
     */
    SubscriptionCreationParameters,

    /**
     * The SubscriptionCreationResult model constructor.
     * @property {module:model/SubscriptionCreationResult}
     */
    SubscriptionCreationResult,

    /**
     * The SubscriptionName model constructor.
     * @property {module:model/SubscriptionName}
     */
    SubscriptionName,

    /**
    * The DefaultApi service constructor.
    * @property {module:api/DefaultApi}
    */
    DefaultApi
};
