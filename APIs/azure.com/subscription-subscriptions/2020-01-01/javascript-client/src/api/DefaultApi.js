/**
 * SubscriptionClient
 * Subscription client provides an interface to create and manage Azure subscriptions programmatically.
 *
 * The version of the OpenAPI document: 2020-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CanceledSubscriptionId from '../model/CanceledSubscriptionId';
import EnabledSubscriptionId from '../model/EnabledSubscriptionId';
import ErrorResponse from '../model/ErrorResponse';
import ModernCspSubscriptionCreationParameters from '../model/ModernCspSubscriptionCreationParameters';
import ModernSubscriptionCreationParameters from '../model/ModernSubscriptionCreationParameters';
import OperationListResult from '../model/OperationListResult';
import RenamedSubscriptionId from '../model/RenamedSubscriptionId';
import SubscriptionCreationParameters from '../model/SubscriptionCreationParameters';
import SubscriptionCreationResult from '../model/SubscriptionCreationResult';
import SubscriptionName from '../model/SubscriptionName';

/**
* Default service.
* @module api/DefaultApi
* @version 2020-01-01
*/
export default class DefaultApi {

    /**
    * Constructs a new DefaultApi. 
    * @alias module:api/DefaultApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the operationsList operation.
     * @callback module:api/DefaultApi~operationsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OperationListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists all of the available Microsoft.Subscription API operations.
     * @param {String} apiVersion Version of the API to be used with the client request. Current version is 2020-01-01
     * @param {module:api/DefaultApi~operationsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OperationListResult}
     */
    operationsList(apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling operationsList");
      }

      let pathParams = {
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = OperationListResult;
      return this.apiClient.callApi(
        '/providers/Microsoft.Subscription/operations', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the subscriptionCancel operation.
     * @callback module:api/DefaultApi~subscriptionCancelCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CanceledSubscriptionId} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * The operation to cancel a subscription
     * @param {String} subscriptionId Subscription Id.
     * @param {String} apiVersion Version of the API to be used with the client request. Current version is 2020-01-01
     * @param {module:api/DefaultApi~subscriptionCancelCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CanceledSubscriptionId}
     */
    subscriptionCancel(subscriptionId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling subscriptionCancel");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling subscriptionCancel");
      }

      let pathParams = {
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = CanceledSubscriptionId;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.Subscription/cancel', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the subscriptionCreateCspSubscription operation.
     * @callback module:api/DefaultApi~subscriptionCreateCspSubscriptionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SubscriptionCreationResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * The operation to create a new CSP subscription.
     * @param {String} billingAccountName The name of the Microsoft Customer Agreement billing account for which you want to create the subscription.
     * @param {String} customerName The name of the customer.
     * @param {String} apiVersion Version of the API to be used with the client request. Current version is 2020-01-01
     * @param {module:model/ModernCspSubscriptionCreationParameters} body The subscription creation parameters.
     * @param {module:api/DefaultApi~subscriptionCreateCspSubscriptionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SubscriptionCreationResult}
     */
    subscriptionCreateCspSubscription(billingAccountName, customerName, apiVersion, body, callback) {
      let postBody = body;
      // verify the required parameter 'billingAccountName' is set
      if (billingAccountName === undefined || billingAccountName === null) {
        throw new Error("Missing the required parameter 'billingAccountName' when calling subscriptionCreateCspSubscription");
      }
      // verify the required parameter 'customerName' is set
      if (customerName === undefined || customerName === null) {
        throw new Error("Missing the required parameter 'customerName' when calling subscriptionCreateCspSubscription");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling subscriptionCreateCspSubscription");
      }
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling subscriptionCreateCspSubscription");
      }

      let pathParams = {
        'billingAccountName': billingAccountName,
        'customerName': customerName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = SubscriptionCreationResult;
      return this.apiClient.callApi(
        '/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/customers/{customerName}/providers/Microsoft.Subscription/createSubscription', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the subscriptionCreateSubscription operation.
     * @callback module:api/DefaultApi~subscriptionCreateSubscriptionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SubscriptionCreationResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * The operation to create a new WebDirect or EA Azure subscription.
     * @param {String} billingAccountName The name of the Microsoft Customer Agreement billing account for which you want to create the subscription.
     * @param {String} billingProfileName The name of the billing profile in the billing account for which you want to create the subscription.
     * @param {String} invoiceSectionName The name of the invoice section in the billing account for which you want to create the subscription.
     * @param {String} apiVersion Version of the API to be used with the client request. Current version is 2020-01-01
     * @param {module:model/ModernSubscriptionCreationParameters} body The subscription creation parameters.
     * @param {module:api/DefaultApi~subscriptionCreateSubscriptionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SubscriptionCreationResult}
     */
    subscriptionCreateSubscription(billingAccountName, billingProfileName, invoiceSectionName, apiVersion, body, callback) {
      let postBody = body;
      // verify the required parameter 'billingAccountName' is set
      if (billingAccountName === undefined || billingAccountName === null) {
        throw new Error("Missing the required parameter 'billingAccountName' when calling subscriptionCreateSubscription");
      }
      // verify the required parameter 'billingProfileName' is set
      if (billingProfileName === undefined || billingProfileName === null) {
        throw new Error("Missing the required parameter 'billingProfileName' when calling subscriptionCreateSubscription");
      }
      // verify the required parameter 'invoiceSectionName' is set
      if (invoiceSectionName === undefined || invoiceSectionName === null) {
        throw new Error("Missing the required parameter 'invoiceSectionName' when calling subscriptionCreateSubscription");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling subscriptionCreateSubscription");
      }
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling subscriptionCreateSubscription");
      }

      let pathParams = {
        'billingAccountName': billingAccountName,
        'billingProfileName': billingProfileName,
        'invoiceSectionName': invoiceSectionName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = SubscriptionCreationResult;
      return this.apiClient.callApi(
        '/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/billingProfiles/{billingProfileName}/invoiceSections/{invoiceSectionName}/providers/Microsoft.Subscription/createSubscription', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the subscriptionCreateSubscriptionInEnrollmentAccount operation.
     * @callback module:api/DefaultApi~subscriptionCreateSubscriptionInEnrollmentAccountCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SubscriptionCreationResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates an Azure subscription
     * @param {String} enrollmentAccountName The name of the enrollment account to which the subscription will be billed.
     * @param {String} apiVersion Version of the API to be used with the client request. Current version is 2020-01-01
     * @param {module:model/SubscriptionCreationParameters} body The subscription creation parameters.
     * @param {module:api/DefaultApi~subscriptionCreateSubscriptionInEnrollmentAccountCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SubscriptionCreationResult}
     */
    subscriptionCreateSubscriptionInEnrollmentAccount(enrollmentAccountName, apiVersion, body, callback) {
      let postBody = body;
      // verify the required parameter 'enrollmentAccountName' is set
      if (enrollmentAccountName === undefined || enrollmentAccountName === null) {
        throw new Error("Missing the required parameter 'enrollmentAccountName' when calling subscriptionCreateSubscriptionInEnrollmentAccount");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling subscriptionCreateSubscriptionInEnrollmentAccount");
      }
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling subscriptionCreateSubscriptionInEnrollmentAccount");
      }

      let pathParams = {
        'enrollmentAccountName': enrollmentAccountName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = SubscriptionCreationResult;
      return this.apiClient.callApi(
        '/providers/Microsoft.Billing/enrollmentAccounts/{enrollmentAccountName}/providers/Microsoft.Subscription/createSubscription', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the subscriptionEnable operation.
     * @callback module:api/DefaultApi~subscriptionEnableCallback
     * @param {String} error Error message, if any.
     * @param {module:model/EnabledSubscriptionId} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * The operation to enable a subscription
     * @param {String} subscriptionId Subscription Id.
     * @param {String} apiVersion Version of the API to be used with the client request. Current version is 2020-01-01
     * @param {module:api/DefaultApi~subscriptionEnableCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/EnabledSubscriptionId}
     */
    subscriptionEnable(subscriptionId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling subscriptionEnable");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling subscriptionEnable");
      }

      let pathParams = {
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = EnabledSubscriptionId;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.Subscription/enable', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the subscriptionOperationGet operation.
     * @callback module:api/DefaultApi~subscriptionOperationGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SubscriptionCreationResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the status of the pending Microsoft.Subscription API operations.
     * @param {String} operationId The operation ID, which can be found from the Location field in the generate recommendation response header.
     * @param {String} apiVersion Version of the API to be used with the client request. Current version is 2020-01-01
     * @param {module:api/DefaultApi~subscriptionOperationGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SubscriptionCreationResult}
     */
    subscriptionOperationGet(operationId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'operationId' is set
      if (operationId === undefined || operationId === null) {
        throw new Error("Missing the required parameter 'operationId' when calling subscriptionOperationGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling subscriptionOperationGet");
      }

      let pathParams = {
        'operationId': operationId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = SubscriptionCreationResult;
      return this.apiClient.callApi(
        '/providers/Microsoft.Subscription/subscriptionOperations/{operationId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the subscriptionRename operation.
     * @callback module:api/DefaultApi~subscriptionRenameCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RenamedSubscriptionId} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * The operation to rename a subscription
     * @param {String} subscriptionId Subscription Id.
     * @param {String} apiVersion Version of the API to be used with the client request. Current version is 2020-01-01
     * @param {module:model/SubscriptionName} body Subscription Name
     * @param {module:api/DefaultApi~subscriptionRenameCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RenamedSubscriptionId}
     */
    subscriptionRename(subscriptionId, apiVersion, body, callback) {
      let postBody = body;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling subscriptionRename");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling subscriptionRename");
      }
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling subscriptionRename");
      }

      let pathParams = {
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = RenamedSubscriptionId;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.Subscription/rename', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
