/**
 * SubscriptionClient
 * Subscription client provides an interface to create and manage Azure subscriptions programmatically.
 *
 * The version of the OpenAPI document: 2020-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ModernCspSubscriptionCreationParameters model module.
 * @module model/ModernCspSubscriptionCreationParameters
 * @version 2020-01-01
 */
class ModernCspSubscriptionCreationParameters {
    /**
     * Constructs a new <code>ModernCspSubscriptionCreationParameters</code>.
     * The parameters required to create a new CSP subscription.
     * @alias module:model/ModernCspSubscriptionCreationParameters
     * @param displayName {String} The friendly name of the subscription.
     * @param skuId {String} The SKU ID of the Azure plan. Azure plan determines the pricing and service-level agreement of the subscription.  Use 001 for Microsoft Azure Plan and 002 for Microsoft Azure Plan for DevTest.
     */
    constructor(displayName, skuId) { 
        
        ModernCspSubscriptionCreationParameters.initialize(this, displayName, skuId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, displayName, skuId) { 
        obj['displayName'] = displayName;
        obj['skuId'] = skuId;
    }

    /**
     * Constructs a <code>ModernCspSubscriptionCreationParameters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ModernCspSubscriptionCreationParameters} obj Optional instance to populate.
     * @return {module:model/ModernCspSubscriptionCreationParameters} The populated <code>ModernCspSubscriptionCreationParameters</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ModernCspSubscriptionCreationParameters();

            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('resellerId')) {
                obj['resellerId'] = ApiClient.convertToType(data['resellerId'], 'String');
            }
            if (data.hasOwnProperty('skuId')) {
                obj['skuId'] = ApiClient.convertToType(data['skuId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ModernCspSubscriptionCreationParameters</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ModernCspSubscriptionCreationParameters</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ModernCspSubscriptionCreationParameters.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // ensure the json data is a string
        if (data['resellerId'] && !(typeof data['resellerId'] === 'string' || data['resellerId'] instanceof String)) {
            throw new Error("Expected the field `resellerId` to be a primitive type in the JSON string but got " + data['resellerId']);
        }
        // ensure the json data is a string
        if (data['skuId'] && !(typeof data['skuId'] === 'string' || data['skuId'] instanceof String)) {
            throw new Error("Expected the field `skuId` to be a primitive type in the JSON string but got " + data['skuId']);
        }

        return true;
    }


}

ModernCspSubscriptionCreationParameters.RequiredProperties = ["displayName", "skuId"];

/**
 * The friendly name of the subscription.
 * @member {String} displayName
 */
ModernCspSubscriptionCreationParameters.prototype['displayName'] = undefined;

/**
 * Reseller ID, basically MPN Id.
 * @member {String} resellerId
 */
ModernCspSubscriptionCreationParameters.prototype['resellerId'] = undefined;

/**
 * The SKU ID of the Azure plan. Azure plan determines the pricing and service-level agreement of the subscription.  Use 001 for Microsoft Azure Plan and 002 for Microsoft Azure Plan for DevTest.
 * @member {String} skuId
 */
ModernCspSubscriptionCreationParameters.prototype['skuId'] = undefined;






export default ModernCspSubscriptionCreationParameters;

