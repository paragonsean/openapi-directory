/**
 * SubscriptionClient
 * All resource groups and resources exist within subscriptions. These operation enable you get information about your subscriptions and tenants. A tenant is a dedicated instance of Azure Active Directory (Azure AD) for your organization.
 *
 * The version of the OpenAPI document: 2016-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SubscriptionPolicies model module.
 * @module model/SubscriptionPolicies
 * @version 2016-06-01
 */
class SubscriptionPolicies {
    /**
     * Constructs a new <code>SubscriptionPolicies</code>.
     * Subscription policies.
     * @alias module:model/SubscriptionPolicies
     */
    constructor() { 
        
        SubscriptionPolicies.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SubscriptionPolicies</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SubscriptionPolicies} obj Optional instance to populate.
     * @return {module:model/SubscriptionPolicies} The populated <code>SubscriptionPolicies</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SubscriptionPolicies();

            if (data.hasOwnProperty('locationPlacementId')) {
                obj['locationPlacementId'] = ApiClient.convertToType(data['locationPlacementId'], 'String');
            }
            if (data.hasOwnProperty('quotaId')) {
                obj['quotaId'] = ApiClient.convertToType(data['quotaId'], 'String');
            }
            if (data.hasOwnProperty('spendingLimit')) {
                obj['spendingLimit'] = ApiClient.convertToType(data['spendingLimit'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SubscriptionPolicies</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SubscriptionPolicies</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['locationPlacementId'] && !(typeof data['locationPlacementId'] === 'string' || data['locationPlacementId'] instanceof String)) {
            throw new Error("Expected the field `locationPlacementId` to be a primitive type in the JSON string but got " + data['locationPlacementId']);
        }
        // ensure the json data is a string
        if (data['quotaId'] && !(typeof data['quotaId'] === 'string' || data['quotaId'] instanceof String)) {
            throw new Error("Expected the field `quotaId` to be a primitive type in the JSON string but got " + data['quotaId']);
        }
        // ensure the json data is a string
        if (data['spendingLimit'] && !(typeof data['spendingLimit'] === 'string' || data['spendingLimit'] instanceof String)) {
            throw new Error("Expected the field `spendingLimit` to be a primitive type in the JSON string but got " + data['spendingLimit']);
        }

        return true;
    }


}



/**
 * The subscription location placement ID. The ID indicates which regions are visible for a subscription. For example, a subscription with a location placement Id of Public_2014-09-01 has access to Azure public regions.
 * @member {String} locationPlacementId
 */
SubscriptionPolicies.prototype['locationPlacementId'] = undefined;

/**
 * The subscription quota ID.
 * @member {String} quotaId
 */
SubscriptionPolicies.prototype['quotaId'] = undefined;

/**
 * The subscription spending limit.
 * @member {module:model/SubscriptionPolicies.SpendingLimitEnum} spendingLimit
 */
SubscriptionPolicies.prototype['spendingLimit'] = undefined;





/**
 * Allowed values for the <code>spendingLimit</code> property.
 * @enum {String}
 * @readonly
 */
SubscriptionPolicies['SpendingLimitEnum'] = {

    /**
     * value: "On"
     * @const
     */
    "On": "On",

    /**
     * value: "Off"
     * @const
     */
    "Off": "Off",

    /**
     * value: "CurrentPeriodOff"
     * @const
     */
    "CurrentPeriodOff": "CurrentPeriodOff"
};



export default SubscriptionPolicies;

