/**
 * SubscriptionClient
 * All resource groups and resources exist within subscriptions. These operation enable you get information about your subscriptions and tenants. A tenant is a dedicated instance of Azure Active Directory (Azure AD) for your organization.
 *
 * The version of the OpenAPI document: 2016-06-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISubscription.h
 *
 * Subscription information.
 */

#ifndef OAISubscription_H
#define OAISubscription_H

#include <QJsonObject>

#include "OAISubscriptionPolicies.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISubscriptionPolicies;

class OAISubscription : public OAIObject {
public:
    OAISubscription();
    OAISubscription(QString json);
    ~OAISubscription() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAuthorizationSource() const;
    void setAuthorizationSource(const QString &authorization_source);
    bool is_authorization_source_Set() const;
    bool is_authorization_source_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QString getSubscriptionId() const;
    void setSubscriptionId(const QString &subscription_id);
    bool is_subscription_id_Set() const;
    bool is_subscription_id_Valid() const;

    OAISubscriptionPolicies getSubscriptionPolicies() const;
    void setSubscriptionPolicies(const OAISubscriptionPolicies &subscription_policies);
    bool is_subscription_policies_Set() const;
    bool is_subscription_policies_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_authorization_source;
    bool m_authorization_source_isSet;
    bool m_authorization_source_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QString m_subscription_id;
    bool m_subscription_id_isSet;
    bool m_subscription_id_isValid;

    OAISubscriptionPolicies m_subscription_policies;
    bool m_subscription_policies_isSet;
    bool m_subscription_policies_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISubscription)

#endif // OAISubscription_H
