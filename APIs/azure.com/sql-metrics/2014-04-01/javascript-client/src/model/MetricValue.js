/**
 * Azure SQL Database
 * Provides create, read, update and delete functionality for Azure SQL Database resources including servers, databases, elastic pools, recommendations, operations, and usage metrics.
 *
 * The version of the OpenAPI document: 2014-04-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The MetricValue model module.
 * @module model/MetricValue
 * @version 2014-04-01
 */
class MetricValue {
    /**
     * Constructs a new <code>MetricValue</code>.
     * Represents database metrics.
     * @alias module:model/MetricValue
     */
    constructor() { 
        
        MetricValue.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MetricValue</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MetricValue} obj Optional instance to populate.
     * @return {module:model/MetricValue} The populated <code>MetricValue</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MetricValue();

            if (data.hasOwnProperty('average')) {
                obj['average'] = ApiClient.convertToType(data['average'], 'Number');
            }
            if (data.hasOwnProperty('count')) {
                obj['count'] = ApiClient.convertToType(data['count'], 'Number');
            }
            if (data.hasOwnProperty('maximum')) {
                obj['maximum'] = ApiClient.convertToType(data['maximum'], 'Number');
            }
            if (data.hasOwnProperty('minimum')) {
                obj['minimum'] = ApiClient.convertToType(data['minimum'], 'Number');
            }
            if (data.hasOwnProperty('timestamp')) {
                obj['timestamp'] = ApiClient.convertToType(data['timestamp'], 'Date');
            }
            if (data.hasOwnProperty('total')) {
                obj['total'] = ApiClient.convertToType(data['total'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MetricValue</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MetricValue</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * The average value of the metric.
 * @member {Number} average
 */
MetricValue.prototype['average'] = undefined;

/**
 * The number of values for the metric.
 * @member {Number} count
 */
MetricValue.prototype['count'] = undefined;

/**
 * The max value of the metric.
 * @member {Number} maximum
 */
MetricValue.prototype['maximum'] = undefined;

/**
 * The min value of the metric.
 * @member {Number} minimum
 */
MetricValue.prototype['minimum'] = undefined;

/**
 * The metric timestamp (ISO-8601 format).
 * @member {Date} timestamp
 */
MetricValue.prototype['timestamp'] = undefined;

/**
 * The total value of the metric.
 * @member {Number} total
 */
MetricValue.prototype['total'] = undefined;






export default MetricValue;

