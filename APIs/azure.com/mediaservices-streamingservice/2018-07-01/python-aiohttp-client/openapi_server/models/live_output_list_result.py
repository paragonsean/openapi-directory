# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.live_output import LiveOutput
from openapi_server import util


class LiveOutputListResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, odata_count: int=None, odata_next_link: str=None, value: List[LiveOutput]=None):
        """LiveOutputListResult - a model defined in OpenAPI

        :param odata_count: The odata_count of this LiveOutputListResult.
        :param odata_next_link: The odata_next_link of this LiveOutputListResult.
        :param value: The value of this LiveOutputListResult.
        """
        self.openapi_types = {
            'odata_count': int,
            'odata_next_link': str,
            'value': List[LiveOutput]
        }

        self.attribute_map = {
            'odata_count': '@odata.count',
            'odata_next_link': '@odata.nextLink',
            'value': 'value'
        }

        self._odata_count = odata_count
        self._odata_next_link = odata_next_link
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LiveOutputListResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LiveOutputListResult of this LiveOutputListResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def odata_count(self):
        """Gets the odata_count of this LiveOutputListResult.

        The number of result.

        :return: The odata_count of this LiveOutputListResult.
        :rtype: int
        """
        return self._odata_count

    @odata_count.setter
    def odata_count(self, odata_count):
        """Sets the odata_count of this LiveOutputListResult.

        The number of result.

        :param odata_count: The odata_count of this LiveOutputListResult.
        :type odata_count: int
        """

        self._odata_count = odata_count

    @property
    def odata_next_link(self):
        """Gets the odata_next_link of this LiveOutputListResult.

        Th link to the next set of results. Not empty if value contains incomplete list of Live Outputs.

        :return: The odata_next_link of this LiveOutputListResult.
        :rtype: str
        """
        return self._odata_next_link

    @odata_next_link.setter
    def odata_next_link(self, odata_next_link):
        """Sets the odata_next_link of this LiveOutputListResult.

        Th link to the next set of results. Not empty if value contains incomplete list of Live Outputs.

        :param odata_next_link: The odata_next_link of this LiveOutputListResult.
        :type odata_next_link: str
        """

        self._odata_next_link = odata_next_link

    @property
    def value(self):
        """Gets the value of this LiveOutputListResult.

        The result of the List Live Output operation.

        :return: The value of this LiveOutputListResult.
        :rtype: List[LiveOutput]
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this LiveOutputListResult.

        The result of the List Live Output operation.

        :param value: The value of this LiveOutputListResult.
        :type value: List[LiveOutput]
        """

        self._value = value
