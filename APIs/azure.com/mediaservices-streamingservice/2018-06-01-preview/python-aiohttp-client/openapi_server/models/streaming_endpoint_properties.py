# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.cross_site_access_policies import CrossSiteAccessPolicies
from openapi_server.models.streaming_endpoint_access_control import StreamingEndpointAccessControl
from openapi_server import util


class StreamingEndpointProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, access_control: StreamingEndpointAccessControl=None, availability_set_name: str=None, cdn_enabled: bool=None, cdn_profile: str=None, cdn_provider: str=None, created: datetime=None, cross_site_access_policies: CrossSiteAccessPolicies=None, custom_host_names: List[str]=None, description: str=None, free_trial_end_time: datetime=None, host_name: str=None, last_modified: datetime=None, max_cache_age: int=None, provisioning_state: str=None, resource_state: str=None, scale_units: int=None):
        """StreamingEndpointProperties - a model defined in OpenAPI

        :param access_control: The access_control of this StreamingEndpointProperties.
        :param availability_set_name: The availability_set_name of this StreamingEndpointProperties.
        :param cdn_enabled: The cdn_enabled of this StreamingEndpointProperties.
        :param cdn_profile: The cdn_profile of this StreamingEndpointProperties.
        :param cdn_provider: The cdn_provider of this StreamingEndpointProperties.
        :param created: The created of this StreamingEndpointProperties.
        :param cross_site_access_policies: The cross_site_access_policies of this StreamingEndpointProperties.
        :param custom_host_names: The custom_host_names of this StreamingEndpointProperties.
        :param description: The description of this StreamingEndpointProperties.
        :param free_trial_end_time: The free_trial_end_time of this StreamingEndpointProperties.
        :param host_name: The host_name of this StreamingEndpointProperties.
        :param last_modified: The last_modified of this StreamingEndpointProperties.
        :param max_cache_age: The max_cache_age of this StreamingEndpointProperties.
        :param provisioning_state: The provisioning_state of this StreamingEndpointProperties.
        :param resource_state: The resource_state of this StreamingEndpointProperties.
        :param scale_units: The scale_units of this StreamingEndpointProperties.
        """
        self.openapi_types = {
            'access_control': StreamingEndpointAccessControl,
            'availability_set_name': str,
            'cdn_enabled': bool,
            'cdn_profile': str,
            'cdn_provider': str,
            'created': datetime,
            'cross_site_access_policies': CrossSiteAccessPolicies,
            'custom_host_names': List[str],
            'description': str,
            'free_trial_end_time': datetime,
            'host_name': str,
            'last_modified': datetime,
            'max_cache_age': int,
            'provisioning_state': str,
            'resource_state': str,
            'scale_units': int
        }

        self.attribute_map = {
            'access_control': 'accessControl',
            'availability_set_name': 'availabilitySetName',
            'cdn_enabled': 'cdnEnabled',
            'cdn_profile': 'cdnProfile',
            'cdn_provider': 'cdnProvider',
            'created': 'created',
            'cross_site_access_policies': 'crossSiteAccessPolicies',
            'custom_host_names': 'customHostNames',
            'description': 'description',
            'free_trial_end_time': 'freeTrialEndTime',
            'host_name': 'hostName',
            'last_modified': 'lastModified',
            'max_cache_age': 'maxCacheAge',
            'provisioning_state': 'provisioningState',
            'resource_state': 'resourceState',
            'scale_units': 'scaleUnits'
        }

        self._access_control = access_control
        self._availability_set_name = availability_set_name
        self._cdn_enabled = cdn_enabled
        self._cdn_profile = cdn_profile
        self._cdn_provider = cdn_provider
        self._created = created
        self._cross_site_access_policies = cross_site_access_policies
        self._custom_host_names = custom_host_names
        self._description = description
        self._free_trial_end_time = free_trial_end_time
        self._host_name = host_name
        self._last_modified = last_modified
        self._max_cache_age = max_cache_age
        self._provisioning_state = provisioning_state
        self._resource_state = resource_state
        self._scale_units = scale_units

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StreamingEndpointProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StreamingEndpointProperties of this StreamingEndpointProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def access_control(self):
        """Gets the access_control of this StreamingEndpointProperties.


        :return: The access_control of this StreamingEndpointProperties.
        :rtype: StreamingEndpointAccessControl
        """
        return self._access_control

    @access_control.setter
    def access_control(self, access_control):
        """Sets the access_control of this StreamingEndpointProperties.


        :param access_control: The access_control of this StreamingEndpointProperties.
        :type access_control: StreamingEndpointAccessControl
        """

        self._access_control = access_control

    @property
    def availability_set_name(self):
        """Gets the availability_set_name of this StreamingEndpointProperties.

        AvailabilitySet name

        :return: The availability_set_name of this StreamingEndpointProperties.
        :rtype: str
        """
        return self._availability_set_name

    @availability_set_name.setter
    def availability_set_name(self, availability_set_name):
        """Sets the availability_set_name of this StreamingEndpointProperties.

        AvailabilitySet name

        :param availability_set_name: The availability_set_name of this StreamingEndpointProperties.
        :type availability_set_name: str
        """

        self._availability_set_name = availability_set_name

    @property
    def cdn_enabled(self):
        """Gets the cdn_enabled of this StreamingEndpointProperties.

        The CDN enabled flag.

        :return: The cdn_enabled of this StreamingEndpointProperties.
        :rtype: bool
        """
        return self._cdn_enabled

    @cdn_enabled.setter
    def cdn_enabled(self, cdn_enabled):
        """Sets the cdn_enabled of this StreamingEndpointProperties.

        The CDN enabled flag.

        :param cdn_enabled: The cdn_enabled of this StreamingEndpointProperties.
        :type cdn_enabled: bool
        """

        self._cdn_enabled = cdn_enabled

    @property
    def cdn_profile(self):
        """Gets the cdn_profile of this StreamingEndpointProperties.

        The CDN profile name.

        :return: The cdn_profile of this StreamingEndpointProperties.
        :rtype: str
        """
        return self._cdn_profile

    @cdn_profile.setter
    def cdn_profile(self, cdn_profile):
        """Sets the cdn_profile of this StreamingEndpointProperties.

        The CDN profile name.

        :param cdn_profile: The cdn_profile of this StreamingEndpointProperties.
        :type cdn_profile: str
        """

        self._cdn_profile = cdn_profile

    @property
    def cdn_provider(self):
        """Gets the cdn_provider of this StreamingEndpointProperties.

        The CDN provider name.

        :return: The cdn_provider of this StreamingEndpointProperties.
        :rtype: str
        """
        return self._cdn_provider

    @cdn_provider.setter
    def cdn_provider(self, cdn_provider):
        """Sets the cdn_provider of this StreamingEndpointProperties.

        The CDN provider name.

        :param cdn_provider: The cdn_provider of this StreamingEndpointProperties.
        :type cdn_provider: str
        """

        self._cdn_provider = cdn_provider

    @property
    def created(self):
        """Gets the created of this StreamingEndpointProperties.

        The exact time the StreamingEndpoint was created.

        :return: The created of this StreamingEndpointProperties.
        :rtype: datetime
        """
        return self._created

    @created.setter
    def created(self, created):
        """Sets the created of this StreamingEndpointProperties.

        The exact time the StreamingEndpoint was created.

        :param created: The created of this StreamingEndpointProperties.
        :type created: datetime
        """

        self._created = created

    @property
    def cross_site_access_policies(self):
        """Gets the cross_site_access_policies of this StreamingEndpointProperties.


        :return: The cross_site_access_policies of this StreamingEndpointProperties.
        :rtype: CrossSiteAccessPolicies
        """
        return self._cross_site_access_policies

    @cross_site_access_policies.setter
    def cross_site_access_policies(self, cross_site_access_policies):
        """Sets the cross_site_access_policies of this StreamingEndpointProperties.


        :param cross_site_access_policies: The cross_site_access_policies of this StreamingEndpointProperties.
        :type cross_site_access_policies: CrossSiteAccessPolicies
        """

        self._cross_site_access_policies = cross_site_access_policies

    @property
    def custom_host_names(self):
        """Gets the custom_host_names of this StreamingEndpointProperties.

        The custom host names of the StreamingEndpoint

        :return: The custom_host_names of this StreamingEndpointProperties.
        :rtype: List[str]
        """
        return self._custom_host_names

    @custom_host_names.setter
    def custom_host_names(self, custom_host_names):
        """Sets the custom_host_names of this StreamingEndpointProperties.

        The custom host names of the StreamingEndpoint

        :param custom_host_names: The custom_host_names of this StreamingEndpointProperties.
        :type custom_host_names: List[str]
        """

        self._custom_host_names = custom_host_names

    @property
    def description(self):
        """Gets the description of this StreamingEndpointProperties.

        The StreamingEndpoint description.

        :return: The description of this StreamingEndpointProperties.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this StreamingEndpointProperties.

        The StreamingEndpoint description.

        :param description: The description of this StreamingEndpointProperties.
        :type description: str
        """

        self._description = description

    @property
    def free_trial_end_time(self):
        """Gets the free_trial_end_time of this StreamingEndpointProperties.

        The free trial expiration time.

        :return: The free_trial_end_time of this StreamingEndpointProperties.
        :rtype: datetime
        """
        return self._free_trial_end_time

    @free_trial_end_time.setter
    def free_trial_end_time(self, free_trial_end_time):
        """Sets the free_trial_end_time of this StreamingEndpointProperties.

        The free trial expiration time.

        :param free_trial_end_time: The free_trial_end_time of this StreamingEndpointProperties.
        :type free_trial_end_time: datetime
        """

        self._free_trial_end_time = free_trial_end_time

    @property
    def host_name(self):
        """Gets the host_name of this StreamingEndpointProperties.

        The StreamingEndpoint host name.

        :return: The host_name of this StreamingEndpointProperties.
        :rtype: str
        """
        return self._host_name

    @host_name.setter
    def host_name(self, host_name):
        """Sets the host_name of this StreamingEndpointProperties.

        The StreamingEndpoint host name.

        :param host_name: The host_name of this StreamingEndpointProperties.
        :type host_name: str
        """

        self._host_name = host_name

    @property
    def last_modified(self):
        """Gets the last_modified of this StreamingEndpointProperties.

        The exact time the StreamingEndpoint was last modified.

        :return: The last_modified of this StreamingEndpointProperties.
        :rtype: datetime
        """
        return self._last_modified

    @last_modified.setter
    def last_modified(self, last_modified):
        """Sets the last_modified of this StreamingEndpointProperties.

        The exact time the StreamingEndpoint was last modified.

        :param last_modified: The last_modified of this StreamingEndpointProperties.
        :type last_modified: datetime
        """

        self._last_modified = last_modified

    @property
    def max_cache_age(self):
        """Gets the max_cache_age of this StreamingEndpointProperties.

        Max cache age

        :return: The max_cache_age of this StreamingEndpointProperties.
        :rtype: int
        """
        return self._max_cache_age

    @max_cache_age.setter
    def max_cache_age(self, max_cache_age):
        """Sets the max_cache_age of this StreamingEndpointProperties.

        Max cache age

        :param max_cache_age: The max_cache_age of this StreamingEndpointProperties.
        :type max_cache_age: int
        """

        self._max_cache_age = max_cache_age

    @property
    def provisioning_state(self):
        """Gets the provisioning_state of this StreamingEndpointProperties.

        The provisioning state of the StreamingEndpoint.

        :return: The provisioning_state of this StreamingEndpointProperties.
        :rtype: str
        """
        return self._provisioning_state

    @provisioning_state.setter
    def provisioning_state(self, provisioning_state):
        """Sets the provisioning_state of this StreamingEndpointProperties.

        The provisioning state of the StreamingEndpoint.

        :param provisioning_state: The provisioning_state of this StreamingEndpointProperties.
        :type provisioning_state: str
        """

        self._provisioning_state = provisioning_state

    @property
    def resource_state(self):
        """Gets the resource_state of this StreamingEndpointProperties.

        The resource state of the StreamingEndpoint.

        :return: The resource_state of this StreamingEndpointProperties.
        :rtype: str
        """
        return self._resource_state

    @resource_state.setter
    def resource_state(self, resource_state):
        """Sets the resource_state of this StreamingEndpointProperties.

        The resource state of the StreamingEndpoint.

        :param resource_state: The resource_state of this StreamingEndpointProperties.
        :type resource_state: str
        """
        allowed_values = ["Stopped", "Starting", "Running", "Stopping", "Deleting", "Scaling"]  # noqa: E501
        if resource_state not in allowed_values:
            raise ValueError(
                "Invalid value for `resource_state` ({0}), must be one of {1}"
                .format(resource_state, allowed_values)
            )

        self._resource_state = resource_state

    @property
    def scale_units(self):
        """Gets the scale_units of this StreamingEndpointProperties.

        The number of scale units.

        :return: The scale_units of this StreamingEndpointProperties.
        :rtype: int
        """
        return self._scale_units

    @scale_units.setter
    def scale_units(self, scale_units):
        """Sets the scale_units of this StreamingEndpointProperties.

        The number of scale units.

        :param scale_units: The scale_units of this StreamingEndpointProperties.
        :type scale_units: int
        """

        self._scale_units = scale_units
