/*
 * Azure Media Services
 * Streaming resource management client for Azure Media Services
 *
 * The version of the OpenAPI document: 2018-06-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ApiError;
import org.openapitools.client.model.LiveOutput;
import org.openapitools.client.model.LiveOutputListResult;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for LiveOutputsApi
 */
@Disabled
public class LiveOutputsApiTest {

    private final LiveOutputsApi api = new LiveOutputsApi();

    /**
     * Create Live Output
     *
     * Creates a Live Output.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void liveOutputsCreateTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String accountName = null;
        String liveEventName = null;
        String liveOutputName = null;
        String apiVersion = null;
        LiveOutput parameters = null;
        LiveOutput response = api.liveOutputsCreate(subscriptionId, resourceGroupName, accountName, liveEventName, liveOutputName, apiVersion, parameters);
        // TODO: test validations
    }

    /**
     * Delete Live Output
     *
     * Deletes a Live Output.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void liveOutputsDeleteTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String accountName = null;
        String liveEventName = null;
        String liveOutputName = null;
        String apiVersion = null;
        api.liveOutputsDelete(subscriptionId, resourceGroupName, accountName, liveEventName, liveOutputName, apiVersion);
        // TODO: test validations
    }

    /**
     * Get Live Output
     *
     * Gets a Live Output.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void liveOutputsGetTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String accountName = null;
        String liveEventName = null;
        String liveOutputName = null;
        String apiVersion = null;
        LiveOutput response = api.liveOutputsGet(subscriptionId, resourceGroupName, accountName, liveEventName, liveOutputName, apiVersion);
        // TODO: test validations
    }

    /**
     * List Live Outputs
     *
     * Lists the Live Outputs in the Live Event.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void liveOutputsListTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String accountName = null;
        String liveEventName = null;
        String apiVersion = null;
        LiveOutputListResult response = api.liveOutputsList(subscriptionId, resourceGroupName, accountName, liveEventName, apiVersion);
        // TODO: test validations
    }

}
