# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.ip_range import IPRange
from openapi_server import util


class IPAccessControl(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, allow: List[IPRange]=None):
        """IPAccessControl - a model defined in OpenAPI

        :param allow: The allow of this IPAccessControl.
        """
        self.openapi_types = {
            'allow': List[IPRange]
        }

        self.attribute_map = {
            'allow': 'allow'
        }

        self._allow = allow

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IPAccessControl':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IPAccessControl of this IPAccessControl.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def allow(self):
        """Gets the allow of this IPAccessControl.

        The IP allow list.

        :return: The allow of this IPAccessControl.
        :rtype: List[IPRange]
        """
        return self._allow

    @allow.setter
    def allow(self, allow):
        """Sets the allow of this IPAccessControl.

        The IP allow list.

        :param allow: The allow of this IPAccessControl.
        :type allow: List[IPRange]
        """

        self._allow = allow
