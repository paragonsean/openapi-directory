# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AkamaiSignatureHeaderAuthenticationKey(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, base64_key: str=None, expiration: datetime=None, identifier: str=None):
        """AkamaiSignatureHeaderAuthenticationKey - a model defined in OpenAPI

        :param base64_key: The base64_key of this AkamaiSignatureHeaderAuthenticationKey.
        :param expiration: The expiration of this AkamaiSignatureHeaderAuthenticationKey.
        :param identifier: The identifier of this AkamaiSignatureHeaderAuthenticationKey.
        """
        self.openapi_types = {
            'base64_key': str,
            'expiration': datetime,
            'identifier': str
        }

        self.attribute_map = {
            'base64_key': 'base64Key',
            'expiration': 'expiration',
            'identifier': 'identifier'
        }

        self._base64_key = base64_key
        self._expiration = expiration
        self._identifier = identifier

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AkamaiSignatureHeaderAuthenticationKey':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AkamaiSignatureHeaderAuthenticationKey of this AkamaiSignatureHeaderAuthenticationKey.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def base64_key(self):
        """Gets the base64_key of this AkamaiSignatureHeaderAuthenticationKey.

        authentication key

        :return: The base64_key of this AkamaiSignatureHeaderAuthenticationKey.
        :rtype: str
        """
        return self._base64_key

    @base64_key.setter
    def base64_key(self, base64_key):
        """Sets the base64_key of this AkamaiSignatureHeaderAuthenticationKey.

        authentication key

        :param base64_key: The base64_key of this AkamaiSignatureHeaderAuthenticationKey.
        :type base64_key: str
        """

        self._base64_key = base64_key

    @property
    def expiration(self):
        """Gets the expiration of this AkamaiSignatureHeaderAuthenticationKey.

        The exact time the authentication key.

        :return: The expiration of this AkamaiSignatureHeaderAuthenticationKey.
        :rtype: datetime
        """
        return self._expiration

    @expiration.setter
    def expiration(self, expiration):
        """Sets the expiration of this AkamaiSignatureHeaderAuthenticationKey.

        The exact time the authentication key.

        :param expiration: The expiration of this AkamaiSignatureHeaderAuthenticationKey.
        :type expiration: datetime
        """

        self._expiration = expiration

    @property
    def identifier(self):
        """Gets the identifier of this AkamaiSignatureHeaderAuthenticationKey.

        identifier of the key

        :return: The identifier of this AkamaiSignatureHeaderAuthenticationKey.
        :rtype: str
        """
        return self._identifier

    @identifier.setter
    def identifier(self, identifier):
        """Sets the identifier of this AkamaiSignatureHeaderAuthenticationKey.

        identifier of the key

        :param identifier: The identifier of this AkamaiSignatureHeaderAuthenticationKey.
        :type identifier: str
        """

        self._identifier = identifier
