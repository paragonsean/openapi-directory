/**
 * Azure Media Services
 * Streaming resource management client for Azure Media Services
 *
 * The version of the OpenAPI document: 2018-03-30-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The LiveEventsListDefaultResponseError model module.
 * @module model/LiveEventsListDefaultResponseError
 * @version 2018-03-30-preview
 */
class LiveEventsListDefaultResponseError {
    /**
     * Constructs a new <code>LiveEventsListDefaultResponseError</code>.
     * Information about an error.
     * @alias module:model/LiveEventsListDefaultResponseError
     */
    constructor() { 
        
        LiveEventsListDefaultResponseError.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LiveEventsListDefaultResponseError</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LiveEventsListDefaultResponseError} obj Optional instance to populate.
     * @return {module:model/LiveEventsListDefaultResponseError} The populated <code>LiveEventsListDefaultResponseError</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LiveEventsListDefaultResponseError();

            if (data.hasOwnProperty('code')) {
                obj['code'] = ApiClient.convertToType(data['code'], 'String');
            }
            if (data.hasOwnProperty('details')) {
                obj['details'] = ApiClient.convertToType(data['details'], [Object]);
            }
            if (data.hasOwnProperty('message')) {
                obj['message'] = ApiClient.convertToType(data['message'], 'String');
            }
            if (data.hasOwnProperty('target')) {
                obj['target'] = ApiClient.convertToType(data['target'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LiveEventsListDefaultResponseError</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LiveEventsListDefaultResponseError</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['code'] && !(typeof data['code'] === 'string' || data['code'] instanceof String)) {
            throw new Error("Expected the field `code` to be a primitive type in the JSON string but got " + data['code']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['details'])) {
            throw new Error("Expected the field `details` to be an array in the JSON data but got " + data['details']);
        }
        // ensure the json data is a string
        if (data['message'] && !(typeof data['message'] === 'string' || data['message'] instanceof String)) {
            throw new Error("Expected the field `message` to be a primitive type in the JSON string but got " + data['message']);
        }
        // ensure the json data is a string
        if (data['target'] && !(typeof data['target'] === 'string' || data['target'] instanceof String)) {
            throw new Error("Expected the field `target` to be a primitive type in the JSON string but got " + data['target']);
        }

        return true;
    }


}



/**
 * A language-independent error name.
 * @member {String} code
 */
LiveEventsListDefaultResponseError.prototype['code'] = undefined;

/**
 * The error details.
 * @member {Array.<Object>} details
 */
LiveEventsListDefaultResponseError.prototype['details'] = undefined;

/**
 * The error message.
 * @member {String} message
 */
LiveEventsListDefaultResponseError.prototype['message'] = undefined;

/**
 * The target of the error (for example, the name of the property in error).
 * @member {String} target
 */
LiveEventsListDefaultResponseError.prototype['target'] = undefined;






export default LiveEventsListDefaultResponseError;

