/**
 * Azure Media Services
 * Streaming resource management client for Azure Media Services
 *
 * The version of the OpenAPI document: 2018-03-30-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILiveEventProperties.h
 *
 * The Live Event properties.
 */

#ifndef OAILiveEventProperties_H
#define OAILiveEventProperties_H

#include <QJsonObject>

#include "OAICrossSiteAccessPolicies.h"
#include "OAILiveEventEncoding.h"
#include "OAILiveEventInput.h"
#include "OAILiveEventPreview.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICrossSiteAccessPolicies;
class OAILiveEventEncoding;
class OAILiveEventInput;
class OAILiveEventPreview;

class OAILiveEventProperties : public OAIObject {
public:
    OAILiveEventProperties();
    OAILiveEventProperties(QString json);
    ~OAILiveEventProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getCreated() const;
    void setCreated(const QDateTime &created);
    bool is_created_Set() const;
    bool is_created_Valid() const;

    OAICrossSiteAccessPolicies getCrossSiteAccessPolicies() const;
    void setCrossSiteAccessPolicies(const OAICrossSiteAccessPolicies &cross_site_access_policies);
    bool is_cross_site_access_policies_Set() const;
    bool is_cross_site_access_policies_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    OAILiveEventEncoding getEncoding() const;
    void setEncoding(const OAILiveEventEncoding &encoding);
    bool is_encoding_Set() const;
    bool is_encoding_Valid() const;

    OAILiveEventInput getInput() const;
    void setInput(const OAILiveEventInput &input);
    bool is_input_Set() const;
    bool is_input_Valid() const;

    QDateTime getLastModified() const;
    void setLastModified(const QDateTime &last_modified);
    bool is_last_modified_Set() const;
    bool is_last_modified_Valid() const;

    OAILiveEventPreview getPreview() const;
    void setPreview(const OAILiveEventPreview &preview);
    bool is_preview_Set() const;
    bool is_preview_Valid() const;

    QString getProvisioningState() const;
    void setProvisioningState(const QString &provisioning_state);
    bool is_provisioning_state_Set() const;
    bool is_provisioning_state_Valid() const;

    QString getResourceState() const;
    void setResourceState(const QString &resource_state);
    bool is_resource_state_Set() const;
    bool is_resource_state_Valid() const;

    QList<QString> getStreamOptions() const;
    void setStreamOptions(const QList<QString> &stream_options);
    bool is_stream_options_Set() const;
    bool is_stream_options_Valid() const;

    bool isVanityUrl() const;
    void setVanityUrl(const bool &vanity_url);
    bool is_vanity_url_Set() const;
    bool is_vanity_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_created;
    bool m_created_isSet;
    bool m_created_isValid;

    OAICrossSiteAccessPolicies m_cross_site_access_policies;
    bool m_cross_site_access_policies_isSet;
    bool m_cross_site_access_policies_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    OAILiveEventEncoding m_encoding;
    bool m_encoding_isSet;
    bool m_encoding_isValid;

    OAILiveEventInput m_input;
    bool m_input_isSet;
    bool m_input_isValid;

    QDateTime m_last_modified;
    bool m_last_modified_isSet;
    bool m_last_modified_isValid;

    OAILiveEventPreview m_preview;
    bool m_preview_isSet;
    bool m_preview_isValid;

    QString m_provisioning_state;
    bool m_provisioning_state_isSet;
    bool m_provisioning_state_isValid;

    QString m_resource_state;
    bool m_resource_state_isSet;
    bool m_resource_state_isValid;

    QList<QString> m_stream_options;
    bool m_stream_options_isSet;
    bool m_stream_options_isValid;

    bool m_vanity_url;
    bool m_vanity_url_isSet;
    bool m_vanity_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILiveEventProperties)

#endif // OAILiveEventProperties_H
