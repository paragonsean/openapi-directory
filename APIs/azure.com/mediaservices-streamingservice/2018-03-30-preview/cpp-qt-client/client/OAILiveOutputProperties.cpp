/**
 * Azure Media Services
 * Streaming resource management client for Azure Media Services
 *
 * The version of the OpenAPI document: 2018-03-30-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILiveOutputProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILiveOutputProperties::OAILiveOutputProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILiveOutputProperties::OAILiveOutputProperties() {
    this->initializeModel();
}

OAILiveOutputProperties::~OAILiveOutputProperties() {}

void OAILiveOutputProperties::initializeModel() {

    m_archive_window_length_isSet = false;
    m_archive_window_length_isValid = false;

    m_asset_name_isSet = false;
    m_asset_name_isValid = false;

    m_created_isSet = false;
    m_created_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_hls_isSet = false;
    m_hls_isValid = false;

    m_last_modified_isSet = false;
    m_last_modified_isValid = false;

    m_manifest_name_isSet = false;
    m_manifest_name_isValid = false;

    m_output_snap_time_isSet = false;
    m_output_snap_time_isValid = false;

    m_provisioning_state_isSet = false;
    m_provisioning_state_isValid = false;

    m_resource_state_isSet = false;
    m_resource_state_isValid = false;
}

void OAILiveOutputProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILiveOutputProperties::fromJsonObject(QJsonObject json) {

    m_archive_window_length_isValid = ::OpenAPI::fromJsonValue(m_archive_window_length, json[QString("archiveWindowLength")]);
    m_archive_window_length_isSet = !json[QString("archiveWindowLength")].isNull() && m_archive_window_length_isValid;

    m_asset_name_isValid = ::OpenAPI::fromJsonValue(m_asset_name, json[QString("assetName")]);
    m_asset_name_isSet = !json[QString("assetName")].isNull() && m_asset_name_isValid;

    m_created_isValid = ::OpenAPI::fromJsonValue(m_created, json[QString("created")]);
    m_created_isSet = !json[QString("created")].isNull() && m_created_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_hls_isValid = ::OpenAPI::fromJsonValue(m_hls, json[QString("hls")]);
    m_hls_isSet = !json[QString("hls")].isNull() && m_hls_isValid;

    m_last_modified_isValid = ::OpenAPI::fromJsonValue(m_last_modified, json[QString("lastModified")]);
    m_last_modified_isSet = !json[QString("lastModified")].isNull() && m_last_modified_isValid;

    m_manifest_name_isValid = ::OpenAPI::fromJsonValue(m_manifest_name, json[QString("manifestName")]);
    m_manifest_name_isSet = !json[QString("manifestName")].isNull() && m_manifest_name_isValid;

    m_output_snap_time_isValid = ::OpenAPI::fromJsonValue(m_output_snap_time, json[QString("outputSnapTime")]);
    m_output_snap_time_isSet = !json[QString("outputSnapTime")].isNull() && m_output_snap_time_isValid;

    m_provisioning_state_isValid = ::OpenAPI::fromJsonValue(m_provisioning_state, json[QString("provisioningState")]);
    m_provisioning_state_isSet = !json[QString("provisioningState")].isNull() && m_provisioning_state_isValid;

    m_resource_state_isValid = ::OpenAPI::fromJsonValue(m_resource_state, json[QString("resourceState")]);
    m_resource_state_isSet = !json[QString("resourceState")].isNull() && m_resource_state_isValid;
}

QString OAILiveOutputProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILiveOutputProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_archive_window_length_isSet) {
        obj.insert(QString("archiveWindowLength"), ::OpenAPI::toJsonValue(m_archive_window_length));
    }
    if (m_asset_name_isSet) {
        obj.insert(QString("assetName"), ::OpenAPI::toJsonValue(m_asset_name));
    }
    if (m_created_isSet) {
        obj.insert(QString("created"), ::OpenAPI::toJsonValue(m_created));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_hls.isSet()) {
        obj.insert(QString("hls"), ::OpenAPI::toJsonValue(m_hls));
    }
    if (m_last_modified_isSet) {
        obj.insert(QString("lastModified"), ::OpenAPI::toJsonValue(m_last_modified));
    }
    if (m_manifest_name_isSet) {
        obj.insert(QString("manifestName"), ::OpenAPI::toJsonValue(m_manifest_name));
    }
    if (m_output_snap_time_isSet) {
        obj.insert(QString("outputSnapTime"), ::OpenAPI::toJsonValue(m_output_snap_time));
    }
    if (m_provisioning_state_isSet) {
        obj.insert(QString("provisioningState"), ::OpenAPI::toJsonValue(m_provisioning_state));
    }
    if (m_resource_state_isSet) {
        obj.insert(QString("resourceState"), ::OpenAPI::toJsonValue(m_resource_state));
    }
    return obj;
}

QString OAILiveOutputProperties::getArchiveWindowLength() const {
    return m_archive_window_length;
}
void OAILiveOutputProperties::setArchiveWindowLength(const QString &archive_window_length) {
    m_archive_window_length = archive_window_length;
    m_archive_window_length_isSet = true;
}

bool OAILiveOutputProperties::is_archive_window_length_Set() const{
    return m_archive_window_length_isSet;
}

bool OAILiveOutputProperties::is_archive_window_length_Valid() const{
    return m_archive_window_length_isValid;
}

QString OAILiveOutputProperties::getAssetName() const {
    return m_asset_name;
}
void OAILiveOutputProperties::setAssetName(const QString &asset_name) {
    m_asset_name = asset_name;
    m_asset_name_isSet = true;
}

bool OAILiveOutputProperties::is_asset_name_Set() const{
    return m_asset_name_isSet;
}

bool OAILiveOutputProperties::is_asset_name_Valid() const{
    return m_asset_name_isValid;
}

QDateTime OAILiveOutputProperties::getCreated() const {
    return m_created;
}
void OAILiveOutputProperties::setCreated(const QDateTime &created) {
    m_created = created;
    m_created_isSet = true;
}

bool OAILiveOutputProperties::is_created_Set() const{
    return m_created_isSet;
}

bool OAILiveOutputProperties::is_created_Valid() const{
    return m_created_isValid;
}

QString OAILiveOutputProperties::getDescription() const {
    return m_description;
}
void OAILiveOutputProperties::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAILiveOutputProperties::is_description_Set() const{
    return m_description_isSet;
}

bool OAILiveOutputProperties::is_description_Valid() const{
    return m_description_isValid;
}

OAIHls OAILiveOutputProperties::getHls() const {
    return m_hls;
}
void OAILiveOutputProperties::setHls(const OAIHls &hls) {
    m_hls = hls;
    m_hls_isSet = true;
}

bool OAILiveOutputProperties::is_hls_Set() const{
    return m_hls_isSet;
}

bool OAILiveOutputProperties::is_hls_Valid() const{
    return m_hls_isValid;
}

QDateTime OAILiveOutputProperties::getLastModified() const {
    return m_last_modified;
}
void OAILiveOutputProperties::setLastModified(const QDateTime &last_modified) {
    m_last_modified = last_modified;
    m_last_modified_isSet = true;
}

bool OAILiveOutputProperties::is_last_modified_Set() const{
    return m_last_modified_isSet;
}

bool OAILiveOutputProperties::is_last_modified_Valid() const{
    return m_last_modified_isValid;
}

QString OAILiveOutputProperties::getManifestName() const {
    return m_manifest_name;
}
void OAILiveOutputProperties::setManifestName(const QString &manifest_name) {
    m_manifest_name = manifest_name;
    m_manifest_name_isSet = true;
}

bool OAILiveOutputProperties::is_manifest_name_Set() const{
    return m_manifest_name_isSet;
}

bool OAILiveOutputProperties::is_manifest_name_Valid() const{
    return m_manifest_name_isValid;
}

qint64 OAILiveOutputProperties::getOutputSnapTime() const {
    return m_output_snap_time;
}
void OAILiveOutputProperties::setOutputSnapTime(const qint64 &output_snap_time) {
    m_output_snap_time = output_snap_time;
    m_output_snap_time_isSet = true;
}

bool OAILiveOutputProperties::is_output_snap_time_Set() const{
    return m_output_snap_time_isSet;
}

bool OAILiveOutputProperties::is_output_snap_time_Valid() const{
    return m_output_snap_time_isValid;
}

QString OAILiveOutputProperties::getProvisioningState() const {
    return m_provisioning_state;
}
void OAILiveOutputProperties::setProvisioningState(const QString &provisioning_state) {
    m_provisioning_state = provisioning_state;
    m_provisioning_state_isSet = true;
}

bool OAILiveOutputProperties::is_provisioning_state_Set() const{
    return m_provisioning_state_isSet;
}

bool OAILiveOutputProperties::is_provisioning_state_Valid() const{
    return m_provisioning_state_isValid;
}

QString OAILiveOutputProperties::getResourceState() const {
    return m_resource_state;
}
void OAILiveOutputProperties::setResourceState(const QString &resource_state) {
    m_resource_state = resource_state;
    m_resource_state_isSet = true;
}

bool OAILiveOutputProperties::is_resource_state_Set() const{
    return m_resource_state_isSet;
}

bool OAILiveOutputProperties::is_resource_state_Valid() const{
    return m_resource_state_isValid;
}

bool OAILiveOutputProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_archive_window_length_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_asset_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_hls.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_manifest_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_output_snap_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_provisioning_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_state_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILiveOutputProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_archive_window_length_isValid && m_asset_name_isValid && true;
}

} // namespace OpenAPI
