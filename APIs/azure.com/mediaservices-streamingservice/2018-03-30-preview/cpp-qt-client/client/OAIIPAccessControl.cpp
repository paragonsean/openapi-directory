/**
 * Azure Media Services
 * Streaming resource management client for Azure Media Services
 *
 * The version of the OpenAPI document: 2018-03-30-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIIPAccessControl.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIIPAccessControl::OAIIPAccessControl(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIIPAccessControl::OAIIPAccessControl() {
    this->initializeModel();
}

OAIIPAccessControl::~OAIIPAccessControl() {}

void OAIIPAccessControl::initializeModel() {

    m_allow_isSet = false;
    m_allow_isValid = false;
}

void OAIIPAccessControl::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIIPAccessControl::fromJsonObject(QJsonObject json) {

    m_allow_isValid = ::OpenAPI::fromJsonValue(m_allow, json[QString("allow")]);
    m_allow_isSet = !json[QString("allow")].isNull() && m_allow_isValid;
}

QString OAIIPAccessControl::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIIPAccessControl::asJsonObject() const {
    QJsonObject obj;
    if (m_allow.size() > 0) {
        obj.insert(QString("allow"), ::OpenAPI::toJsonValue(m_allow));
    }
    return obj;
}

QList<OAIIPRange> OAIIPAccessControl::getAllow() const {
    return m_allow;
}
void OAIIPAccessControl::setAllow(const QList<OAIIPRange> &allow) {
    m_allow = allow;
    m_allow_isSet = true;
}

bool OAIIPAccessControl::is_allow_Set() const{
    return m_allow_isSet;
}

bool OAIIPAccessControl::is_allow_Valid() const{
    return m_allow_isValid;
}

bool OAIIPAccessControl::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_allow.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIIPAccessControl::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
