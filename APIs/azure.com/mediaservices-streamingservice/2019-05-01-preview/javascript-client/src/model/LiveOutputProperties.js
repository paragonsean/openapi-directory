/**
 * Azure Media Services
 * Streaming resource management client for Azure Media Services
 *
 * The version of the OpenAPI document: 2019-05-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Hls from './Hls';

/**
 * The LiveOutputProperties model module.
 * @module model/LiveOutputProperties
 * @version 2019-05-01-preview
 */
class LiveOutputProperties {
    /**
     * Constructs a new <code>LiveOutputProperties</code>.
     * The JSON object that contains the properties required to create a Live Output.
     * @alias module:model/LiveOutputProperties
     * @param archiveWindowLength {String} ISO 8601 timespan duration of the archive window length. This is duration that customer want to retain the recorded content.
     * @param assetName {String} The asset name.
     */
    constructor(archiveWindowLength, assetName) { 
        
        LiveOutputProperties.initialize(this, archiveWindowLength, assetName);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, archiveWindowLength, assetName) { 
        obj['archiveWindowLength'] = archiveWindowLength;
        obj['assetName'] = assetName;
    }

    /**
     * Constructs a <code>LiveOutputProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LiveOutputProperties} obj Optional instance to populate.
     * @return {module:model/LiveOutputProperties} The populated <code>LiveOutputProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LiveOutputProperties();

            if (data.hasOwnProperty('archiveWindowLength')) {
                obj['archiveWindowLength'] = ApiClient.convertToType(data['archiveWindowLength'], 'String');
            }
            if (data.hasOwnProperty('assetName')) {
                obj['assetName'] = ApiClient.convertToType(data['assetName'], 'String');
            }
            if (data.hasOwnProperty('created')) {
                obj['created'] = ApiClient.convertToType(data['created'], 'Date');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('hls')) {
                obj['hls'] = Hls.constructFromObject(data['hls']);
            }
            if (data.hasOwnProperty('lastModified')) {
                obj['lastModified'] = ApiClient.convertToType(data['lastModified'], 'Date');
            }
            if (data.hasOwnProperty('manifestName')) {
                obj['manifestName'] = ApiClient.convertToType(data['manifestName'], 'String');
            }
            if (data.hasOwnProperty('outputSnapTime')) {
                obj['outputSnapTime'] = ApiClient.convertToType(data['outputSnapTime'], 'Number');
            }
            if (data.hasOwnProperty('provisioningState')) {
                obj['provisioningState'] = ApiClient.convertToType(data['provisioningState'], 'String');
            }
            if (data.hasOwnProperty('resourceState')) {
                obj['resourceState'] = ApiClient.convertToType(data['resourceState'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LiveOutputProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LiveOutputProperties</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of LiveOutputProperties.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['archiveWindowLength'] && !(typeof data['archiveWindowLength'] === 'string' || data['archiveWindowLength'] instanceof String)) {
            throw new Error("Expected the field `archiveWindowLength` to be a primitive type in the JSON string but got " + data['archiveWindowLength']);
        }
        // ensure the json data is a string
        if (data['assetName'] && !(typeof data['assetName'] === 'string' || data['assetName'] instanceof String)) {
            throw new Error("Expected the field `assetName` to be a primitive type in the JSON string but got " + data['assetName']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // validate the optional field `hls`
        if (data['hls']) { // data not null
          Hls.validateJSON(data['hls']);
        }
        // ensure the json data is a string
        if (data['manifestName'] && !(typeof data['manifestName'] === 'string' || data['manifestName'] instanceof String)) {
            throw new Error("Expected the field `manifestName` to be a primitive type in the JSON string but got " + data['manifestName']);
        }
        // ensure the json data is a string
        if (data['provisioningState'] && !(typeof data['provisioningState'] === 'string' || data['provisioningState'] instanceof String)) {
            throw new Error("Expected the field `provisioningState` to be a primitive type in the JSON string but got " + data['provisioningState']);
        }
        // ensure the json data is a string
        if (data['resourceState'] && !(typeof data['resourceState'] === 'string' || data['resourceState'] instanceof String)) {
            throw new Error("Expected the field `resourceState` to be a primitive type in the JSON string but got " + data['resourceState']);
        }

        return true;
    }


}

LiveOutputProperties.RequiredProperties = ["archiveWindowLength", "assetName"];

/**
 * ISO 8601 timespan duration of the archive window length. This is duration that customer want to retain the recorded content.
 * @member {String} archiveWindowLength
 */
LiveOutputProperties.prototype['archiveWindowLength'] = undefined;

/**
 * The asset name.
 * @member {String} assetName
 */
LiveOutputProperties.prototype['assetName'] = undefined;

/**
 * The exact time the Live Output was created.
 * @member {Date} created
 */
LiveOutputProperties.prototype['created'] = undefined;

/**
 * The description of the Live Output.
 * @member {String} description
 */
LiveOutputProperties.prototype['description'] = undefined;

/**
 * @member {module:model/Hls} hls
 */
LiveOutputProperties.prototype['hls'] = undefined;

/**
 * The exact time the Live Output was last modified.
 * @member {Date} lastModified
 */
LiveOutputProperties.prototype['lastModified'] = undefined;

/**
 * The manifest file name.  If not provided, the service will generate one automatically.
 * @member {String} manifestName
 */
LiveOutputProperties.prototype['manifestName'] = undefined;

/**
 * The output snapshot time.
 * @member {Number} outputSnapTime
 */
LiveOutputProperties.prototype['outputSnapTime'] = undefined;

/**
 * The provisioning state of the Live Output.
 * @member {String} provisioningState
 */
LiveOutputProperties.prototype['provisioningState'] = undefined;

/**
 * The resource state of the Live Output.
 * @member {module:model/LiveOutputProperties.ResourceStateEnum} resourceState
 */
LiveOutputProperties.prototype['resourceState'] = undefined;





/**
 * Allowed values for the <code>resourceState</code> property.
 * @enum {String}
 * @readonly
 */
LiveOutputProperties['ResourceStateEnum'] = {

    /**
     * value: "Creating"
     * @const
     */
    "Creating": "Creating",

    /**
     * value: "Running"
     * @const
     */
    "Running": "Running",

    /**
     * value: "Deleting"
     * @const
     */
    "Deleting": "Deleting"
};



export default LiveOutputProperties;

