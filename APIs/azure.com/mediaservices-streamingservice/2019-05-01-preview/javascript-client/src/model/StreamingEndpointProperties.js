/**
 * Azure Media Services
 * Streaming resource management client for Azure Media Services
 *
 * The version of the OpenAPI document: 2019-05-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CrossSiteAccessPolicies from './CrossSiteAccessPolicies';
import StreamingEndpointAccessControl from './StreamingEndpointAccessControl';

/**
 * The StreamingEndpointProperties model module.
 * @module model/StreamingEndpointProperties
 * @version 2019-05-01-preview
 */
class StreamingEndpointProperties {
    /**
     * Constructs a new <code>StreamingEndpointProperties</code>.
     * The StreamingEndpoint properties.
     * @alias module:model/StreamingEndpointProperties
     * @param scaleUnits {Number} The number of scale units.  Use the Scale operation to adjust this value.
     */
    constructor(scaleUnits) { 
        
        StreamingEndpointProperties.initialize(this, scaleUnits);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, scaleUnits) { 
        obj['scaleUnits'] = scaleUnits;
    }

    /**
     * Constructs a <code>StreamingEndpointProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/StreamingEndpointProperties} obj Optional instance to populate.
     * @return {module:model/StreamingEndpointProperties} The populated <code>StreamingEndpointProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StreamingEndpointProperties();

            if (data.hasOwnProperty('accessControl')) {
                obj['accessControl'] = StreamingEndpointAccessControl.constructFromObject(data['accessControl']);
            }
            if (data.hasOwnProperty('availabilitySetName')) {
                obj['availabilitySetName'] = ApiClient.convertToType(data['availabilitySetName'], 'String');
            }
            if (data.hasOwnProperty('cdnEnabled')) {
                obj['cdnEnabled'] = ApiClient.convertToType(data['cdnEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('cdnProfile')) {
                obj['cdnProfile'] = ApiClient.convertToType(data['cdnProfile'], 'String');
            }
            if (data.hasOwnProperty('cdnProvider')) {
                obj['cdnProvider'] = ApiClient.convertToType(data['cdnProvider'], 'String');
            }
            if (data.hasOwnProperty('created')) {
                obj['created'] = ApiClient.convertToType(data['created'], 'Date');
            }
            if (data.hasOwnProperty('crossSiteAccessPolicies')) {
                obj['crossSiteAccessPolicies'] = CrossSiteAccessPolicies.constructFromObject(data['crossSiteAccessPolicies']);
            }
            if (data.hasOwnProperty('customHostNames')) {
                obj['customHostNames'] = ApiClient.convertToType(data['customHostNames'], ['String']);
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('freeTrialEndTime')) {
                obj['freeTrialEndTime'] = ApiClient.convertToType(data['freeTrialEndTime'], 'Date');
            }
            if (data.hasOwnProperty('hostName')) {
                obj['hostName'] = ApiClient.convertToType(data['hostName'], 'String');
            }
            if (data.hasOwnProperty('lastModified')) {
                obj['lastModified'] = ApiClient.convertToType(data['lastModified'], 'Date');
            }
            if (data.hasOwnProperty('maxCacheAge')) {
                obj['maxCacheAge'] = ApiClient.convertToType(data['maxCacheAge'], 'Number');
            }
            if (data.hasOwnProperty('provisioningState')) {
                obj['provisioningState'] = ApiClient.convertToType(data['provisioningState'], 'String');
            }
            if (data.hasOwnProperty('resourceState')) {
                obj['resourceState'] = ApiClient.convertToType(data['resourceState'], 'String');
            }
            if (data.hasOwnProperty('scaleUnits')) {
                obj['scaleUnits'] = ApiClient.convertToType(data['scaleUnits'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>StreamingEndpointProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>StreamingEndpointProperties</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of StreamingEndpointProperties.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `accessControl`
        if (data['accessControl']) { // data not null
          StreamingEndpointAccessControl.validateJSON(data['accessControl']);
        }
        // ensure the json data is a string
        if (data['availabilitySetName'] && !(typeof data['availabilitySetName'] === 'string' || data['availabilitySetName'] instanceof String)) {
            throw new Error("Expected the field `availabilitySetName` to be a primitive type in the JSON string but got " + data['availabilitySetName']);
        }
        // ensure the json data is a string
        if (data['cdnProfile'] && !(typeof data['cdnProfile'] === 'string' || data['cdnProfile'] instanceof String)) {
            throw new Error("Expected the field `cdnProfile` to be a primitive type in the JSON string but got " + data['cdnProfile']);
        }
        // ensure the json data is a string
        if (data['cdnProvider'] && !(typeof data['cdnProvider'] === 'string' || data['cdnProvider'] instanceof String)) {
            throw new Error("Expected the field `cdnProvider` to be a primitive type in the JSON string but got " + data['cdnProvider']);
        }
        // validate the optional field `crossSiteAccessPolicies`
        if (data['crossSiteAccessPolicies']) { // data not null
          CrossSiteAccessPolicies.validateJSON(data['crossSiteAccessPolicies']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['customHostNames'])) {
            throw new Error("Expected the field `customHostNames` to be an array in the JSON data but got " + data['customHostNames']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['hostName'] && !(typeof data['hostName'] === 'string' || data['hostName'] instanceof String)) {
            throw new Error("Expected the field `hostName` to be a primitive type in the JSON string but got " + data['hostName']);
        }
        // ensure the json data is a string
        if (data['provisioningState'] && !(typeof data['provisioningState'] === 'string' || data['provisioningState'] instanceof String)) {
            throw new Error("Expected the field `provisioningState` to be a primitive type in the JSON string but got " + data['provisioningState']);
        }
        // ensure the json data is a string
        if (data['resourceState'] && !(typeof data['resourceState'] === 'string' || data['resourceState'] instanceof String)) {
            throw new Error("Expected the field `resourceState` to be a primitive type in the JSON string but got " + data['resourceState']);
        }

        return true;
    }


}

StreamingEndpointProperties.RequiredProperties = ["scaleUnits"];

/**
 * @member {module:model/StreamingEndpointAccessControl} accessControl
 */
StreamingEndpointProperties.prototype['accessControl'] = undefined;

/**
 * The name of the AvailabilitySet used with this StreamingEndpoint for high availability streaming.  This value can only be set at creation time.
 * @member {String} availabilitySetName
 */
StreamingEndpointProperties.prototype['availabilitySetName'] = undefined;

/**
 * The CDN enabled flag.
 * @member {Boolean} cdnEnabled
 */
StreamingEndpointProperties.prototype['cdnEnabled'] = undefined;

/**
 * The CDN profile name.
 * @member {String} cdnProfile
 */
StreamingEndpointProperties.prototype['cdnProfile'] = undefined;

/**
 * The CDN provider name.
 * @member {String} cdnProvider
 */
StreamingEndpointProperties.prototype['cdnProvider'] = undefined;

/**
 * The exact time the StreamingEndpoint was created.
 * @member {Date} created
 */
StreamingEndpointProperties.prototype['created'] = undefined;

/**
 * @member {module:model/CrossSiteAccessPolicies} crossSiteAccessPolicies
 */
StreamingEndpointProperties.prototype['crossSiteAccessPolicies'] = undefined;

/**
 * The custom host names of the StreamingEndpoint
 * @member {Array.<String>} customHostNames
 */
StreamingEndpointProperties.prototype['customHostNames'] = undefined;

/**
 * The StreamingEndpoint description.
 * @member {String} description
 */
StreamingEndpointProperties.prototype['description'] = undefined;

/**
 * The free trial expiration time.
 * @member {Date} freeTrialEndTime
 */
StreamingEndpointProperties.prototype['freeTrialEndTime'] = undefined;

/**
 * The StreamingEndpoint host name.
 * @member {String} hostName
 */
StreamingEndpointProperties.prototype['hostName'] = undefined;

/**
 * The exact time the StreamingEndpoint was last modified.
 * @member {Date} lastModified
 */
StreamingEndpointProperties.prototype['lastModified'] = undefined;

/**
 * Max cache age
 * @member {Number} maxCacheAge
 */
StreamingEndpointProperties.prototype['maxCacheAge'] = undefined;

/**
 * The provisioning state of the StreamingEndpoint.
 * @member {String} provisioningState
 */
StreamingEndpointProperties.prototype['provisioningState'] = undefined;

/**
 * The resource state of the StreamingEndpoint.
 * @member {module:model/StreamingEndpointProperties.ResourceStateEnum} resourceState
 */
StreamingEndpointProperties.prototype['resourceState'] = undefined;

/**
 * The number of scale units.  Use the Scale operation to adjust this value.
 * @member {Number} scaleUnits
 */
StreamingEndpointProperties.prototype['scaleUnits'] = undefined;





/**
 * Allowed values for the <code>resourceState</code> property.
 * @enum {String}
 * @readonly
 */
StreamingEndpointProperties['ResourceStateEnum'] = {

    /**
     * value: "Stopped"
     * @const
     */
    "Stopped": "Stopped",

    /**
     * value: "Starting"
     * @const
     */
    "Starting": "Starting",

    /**
     * value: "Running"
     * @const
     */
    "Running": "Running",

    /**
     * value: "Stopping"
     * @const
     */
    "Stopping": "Stopping",

    /**
     * value: "Deleting"
     * @const
     */
    "Deleting": "Deleting",

    /**
     * value: "Scaling"
     * @const
     */
    "Scaling": "Scaling"
};



export default StreamingEndpointProperties;

