/**
 * Azure Media Services
 * Streaming resource management client for Azure Media Services
 *
 * The version of the OpenAPI document: 2019-05-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AkamaiSignatureHeaderAuthenticationKey model module.
 * @module model/AkamaiSignatureHeaderAuthenticationKey
 * @version 2019-05-01-preview
 */
class AkamaiSignatureHeaderAuthenticationKey {
    /**
     * Constructs a new <code>AkamaiSignatureHeaderAuthenticationKey</code>.
     * Akamai Signature Header authentication key.
     * @alias module:model/AkamaiSignatureHeaderAuthenticationKey
     */
    constructor() { 
        
        AkamaiSignatureHeaderAuthenticationKey.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AkamaiSignatureHeaderAuthenticationKey</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AkamaiSignatureHeaderAuthenticationKey} obj Optional instance to populate.
     * @return {module:model/AkamaiSignatureHeaderAuthenticationKey} The populated <code>AkamaiSignatureHeaderAuthenticationKey</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AkamaiSignatureHeaderAuthenticationKey();

            if (data.hasOwnProperty('base64Key')) {
                obj['base64Key'] = ApiClient.convertToType(data['base64Key'], 'String');
            }
            if (data.hasOwnProperty('expiration')) {
                obj['expiration'] = ApiClient.convertToType(data['expiration'], 'Date');
            }
            if (data.hasOwnProperty('identifier')) {
                obj['identifier'] = ApiClient.convertToType(data['identifier'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AkamaiSignatureHeaderAuthenticationKey</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AkamaiSignatureHeaderAuthenticationKey</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['base64Key'] && !(typeof data['base64Key'] === 'string' || data['base64Key'] instanceof String)) {
            throw new Error("Expected the field `base64Key` to be a primitive type in the JSON string but got " + data['base64Key']);
        }
        // ensure the json data is a string
        if (data['identifier'] && !(typeof data['identifier'] === 'string' || data['identifier'] instanceof String)) {
            throw new Error("Expected the field `identifier` to be a primitive type in the JSON string but got " + data['identifier']);
        }

        return true;
    }


}



/**
 * authentication key
 * @member {String} base64Key
 */
AkamaiSignatureHeaderAuthenticationKey.prototype['base64Key'] = undefined;

/**
 * The expiration time of the authentication key.
 * @member {Date} expiration
 */
AkamaiSignatureHeaderAuthenticationKey.prototype['expiration'] = undefined;

/**
 * identifier of the key
 * @member {String} identifier
 */
AkamaiSignatureHeaderAuthenticationKey.prototype['identifier'] = undefined;






export default AkamaiSignatureHeaderAuthenticationKey;

