# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Hls(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, fragments_per_ts_segment: int=None):
        """Hls - a model defined in OpenAPI

        :param fragments_per_ts_segment: The fragments_per_ts_segment of this Hls.
        """
        self.openapi_types = {
            'fragments_per_ts_segment': int
        }

        self.attribute_map = {
            'fragments_per_ts_segment': 'fragmentsPerTsSegment'
        }

        self._fragments_per_ts_segment = fragments_per_ts_segment

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Hls':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Hls of this Hls.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def fragments_per_ts_segment(self):
        """Gets the fragments_per_ts_segment of this Hls.

        The amount of fragments per HTTP Live Streaming (HLS) segment.

        :return: The fragments_per_ts_segment of this Hls.
        :rtype: int
        """
        return self._fragments_per_ts_segment

    @fragments_per_ts_segment.setter
    def fragments_per_ts_segment(self, fragments_per_ts_segment):
        """Sets the fragments_per_ts_segment of this Hls.

        The amount of fragments per HTTP Live Streaming (HLS) segment.

        :param fragments_per_ts_segment: The fragments_per_ts_segment of this Hls.
        :type fragments_per_ts_segment: int
        """

        self._fragments_per_ts_segment = fragments_per_ts_segment
