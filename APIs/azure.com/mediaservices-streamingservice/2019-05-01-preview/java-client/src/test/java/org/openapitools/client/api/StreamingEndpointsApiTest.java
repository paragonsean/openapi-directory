/*
 * Azure Media Services
 * Streaming resource management client for Azure Media Services
 *
 * The version of the OpenAPI document: 2019-05-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ApiError;
import org.openapitools.client.model.StreamingEndpoint;
import org.openapitools.client.model.StreamingEndpointListResult;
import org.openapitools.client.model.StreamingEntityScaleUnit;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for StreamingEndpointsApi
 */
@Disabled
public class StreamingEndpointsApiTest {

    private final StreamingEndpointsApi api = new StreamingEndpointsApi();

    /**
     * Create StreamingEndpoint
     *
     * Creates a StreamingEndpoint.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void streamingEndpointsCreateTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String accountName = null;
        String streamingEndpointName = null;
        String apiVersion = null;
        StreamingEndpoint parameters = null;
        Boolean autoStart = null;
        StreamingEndpoint response = api.streamingEndpointsCreate(subscriptionId, resourceGroupName, accountName, streamingEndpointName, apiVersion, parameters, autoStart);
        // TODO: test validations
    }

    /**
     * Delete StreamingEndpoint
     *
     * Deletes a StreamingEndpoint.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void streamingEndpointsDeleteTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String accountName = null;
        String streamingEndpointName = null;
        String apiVersion = null;
        api.streamingEndpointsDelete(subscriptionId, resourceGroupName, accountName, streamingEndpointName, apiVersion);
        // TODO: test validations
    }

    /**
     * Get StreamingEndpoint
     *
     * Gets a StreamingEndpoint.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void streamingEndpointsGetTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String accountName = null;
        String streamingEndpointName = null;
        String apiVersion = null;
        StreamingEndpoint response = api.streamingEndpointsGet(subscriptionId, resourceGroupName, accountName, streamingEndpointName, apiVersion);
        // TODO: test validations
    }

    /**
     * List StreamingEndpoints
     *
     * Lists the StreamingEndpoints in the account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void streamingEndpointsListTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String accountName = null;
        String apiVersion = null;
        StreamingEndpointListResult response = api.streamingEndpointsList(subscriptionId, resourceGroupName, accountName, apiVersion);
        // TODO: test validations
    }

    /**
     * Scale StreamingEndpoint
     *
     * Scales an existing StreamingEndpoint.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void streamingEndpointsScaleTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String accountName = null;
        String streamingEndpointName = null;
        String apiVersion = null;
        StreamingEntityScaleUnit parameters = null;
        api.streamingEndpointsScale(subscriptionId, resourceGroupName, accountName, streamingEndpointName, apiVersion, parameters);
        // TODO: test validations
    }

    /**
     * Start StreamingEndpoint
     *
     * Starts an existing StreamingEndpoint.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void streamingEndpointsStartTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String accountName = null;
        String streamingEndpointName = null;
        String apiVersion = null;
        api.streamingEndpointsStart(subscriptionId, resourceGroupName, accountName, streamingEndpointName, apiVersion);
        // TODO: test validations
    }

    /**
     * Stop StreamingEndpoint
     *
     * Stops an existing StreamingEndpoint.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void streamingEndpointsStopTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String accountName = null;
        String streamingEndpointName = null;
        String apiVersion = null;
        api.streamingEndpointsStop(subscriptionId, resourceGroupName, accountName, streamingEndpointName, apiVersion);
        // TODO: test validations
    }

}
