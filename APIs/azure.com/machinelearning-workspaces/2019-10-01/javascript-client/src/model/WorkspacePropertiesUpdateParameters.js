/**
 * Machine Learning Workspaces Management Client
 * These APIs allow end users to operate on Azure Machine Learning Workspace resources. They support CRUD operations for Azure Machine Learning Workspaces.
 *
 * The version of the OpenAPI document: 2019-10-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Sku from './Sku';

/**
 * The WorkspacePropertiesUpdateParameters model module.
 * @module model/WorkspacePropertiesUpdateParameters
 * @version 2019-10-01
 */
class WorkspacePropertiesUpdateParameters {
    /**
     * Constructs a new <code>WorkspacePropertiesUpdateParameters</code>.
     * The parameters for updating the properties of a machine learning workspace.
     * @alias module:model/WorkspacePropertiesUpdateParameters
     */
    constructor() { 
        
        WorkspacePropertiesUpdateParameters.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>WorkspacePropertiesUpdateParameters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WorkspacePropertiesUpdateParameters} obj Optional instance to populate.
     * @return {module:model/WorkspacePropertiesUpdateParameters} The populated <code>WorkspacePropertiesUpdateParameters</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WorkspacePropertiesUpdateParameters();

            if (data.hasOwnProperty('keyVaultIdentifierId')) {
                obj['keyVaultIdentifierId'] = ApiClient.convertToType(data['keyVaultIdentifierId'], 'String');
            }
            if (data.hasOwnProperty('sku')) {
                obj['sku'] = Sku.constructFromObject(data['sku']);
            }
            if (data.hasOwnProperty('workspaceState')) {
                obj['workspaceState'] = ApiClient.convertToType(data['workspaceState'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WorkspacePropertiesUpdateParameters</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WorkspacePropertiesUpdateParameters</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['keyVaultIdentifierId'] && !(typeof data['keyVaultIdentifierId'] === 'string' || data['keyVaultIdentifierId'] instanceof String)) {
            throw new Error("Expected the field `keyVaultIdentifierId` to be a primitive type in the JSON string but got " + data['keyVaultIdentifierId']);
        }
        // validate the optional field `sku`
        if (data['sku']) { // data not null
          Sku.validateJSON(data['sku']);
        }
        // ensure the json data is a string
        if (data['workspaceState'] && !(typeof data['workspaceState'] === 'string' || data['workspaceState'] instanceof String)) {
            throw new Error("Expected the field `workspaceState` to be a primitive type in the JSON string but got " + data['workspaceState']);
        }

        return true;
    }


}



/**
 * The key vault identifier used for encrypted workspaces.
 * @member {String} keyVaultIdentifierId
 */
WorkspacePropertiesUpdateParameters.prototype['keyVaultIdentifierId'] = undefined;

/**
 * @member {module:model/Sku} sku
 */
WorkspacePropertiesUpdateParameters.prototype['sku'] = undefined;

/**
 * The current state of workspace resource.
 * @member {module:model/WorkspacePropertiesUpdateParameters.WorkspaceStateEnum} workspaceState
 */
WorkspacePropertiesUpdateParameters.prototype['workspaceState'] = undefined;





/**
 * Allowed values for the <code>workspaceState</code> property.
 * @enum {String}
 * @readonly
 */
WorkspacePropertiesUpdateParameters['WorkspaceStateEnum'] = {

    /**
     * value: "Deleted"
     * @const
     */
    "Deleted": "Deleted",

    /**
     * value: "Enabled"
     * @const
     */
    "Enabled": "Enabled",

    /**
     * value: "Disabled"
     * @const
     */
    "Disabled": "Disabled",

    /**
     * value: "Migrated"
     * @const
     */
    "Migrated": "Migrated",

    /**
     * value: "Updated"
     * @const
     */
    "Updated": "Updated",

    /**
     * value: "Registered"
     * @const
     */
    "Registered": "Registered",

    /**
     * value: "Unregistered"
     * @const
     */
    "Unregistered": "Unregistered"
};



export default WorkspacePropertiesUpdateParameters;

