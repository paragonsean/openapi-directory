/*
 * Machine Learning Workspaces Management Client
 * These APIs allow end users to operate on Azure Machine Learning Workspace resources. They support CRUD operations for Azure Machine Learning Workspaces.
 *
 * The version of the OpenAPI document: 2019-10-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ErrorResponse;
import org.openapitools.client.model.Workspace;
import org.openapitools.client.model.WorkspaceKeysResponse;
import org.openapitools.client.model.WorkspaceListResult;
import org.openapitools.client.model.WorkspaceUpdateParameters;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for WorkspacesApi
 */
@Disabled
public class WorkspacesApiTest {

    private final WorkspacesApi api = new WorkspacesApi();

    /**
     * Creates or updates a workspace with the specified parameters.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void workspacesCreateOrUpdateTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String workspaceName = null;
        Workspace parameters = null;
        Workspace response = api.workspacesCreateOrUpdate(apiVersion, subscriptionId, resourceGroupName, workspaceName, parameters);
        // TODO: test validations
    }

    /**
     * Deletes a machine learning workspace.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void workspacesDeleteTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String workspaceName = null;
        api.workspacesDelete(apiVersion, subscriptionId, resourceGroupName, workspaceName);
        // TODO: test validations
    }

    /**
     * Gets the properties of the specified machine learning workspace.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void workspacesGetTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String workspaceName = null;
        Workspace response = api.workspacesGet(apiVersion, subscriptionId, resourceGroupName, workspaceName);
        // TODO: test validations
    }

    /**
     * Lists all the available machine learning workspaces under the specified subscription.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void workspacesListTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        WorkspaceListResult response = api.workspacesList(apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Lists all the available machine learning workspaces under the specified resource group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void workspacesListByResourceGroupTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        WorkspaceListResult response = api.workspacesListByResourceGroup(apiVersion, subscriptionId, resourceGroupName);
        // TODO: test validations
    }

    /**
     * List the authorization keys associated with this workspace.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void workspacesListWorkspaceKeysTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String workspaceName = null;
        String resourceGroupName = null;
        WorkspaceKeysResponse response = api.workspacesListWorkspaceKeys(apiVersion, subscriptionId, workspaceName, resourceGroupName);
        // TODO: test validations
    }

    /**
     * Resync storage keys associated with this workspace.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void workspacesResyncStorageKeysTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String workspaceName = null;
        String resourceGroupName = null;
        api.workspacesResyncStorageKeys(apiVersion, subscriptionId, workspaceName, resourceGroupName);
        // TODO: test validations
    }

    /**
     * Updates a machine learning workspace with the specified parameters.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void workspacesUpdateTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String workspaceName = null;
        WorkspaceUpdateParameters parameters = null;
        Workspace response = api.workspacesUpdate(apiVersion, subscriptionId, resourceGroupName, workspaceName, parameters);
        // TODO: test validations
    }

}
