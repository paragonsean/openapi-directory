/**
 * Machine Learning Workspaces Management Client
 * These APIs allow end users to operate on Azure Machine Learning Workspace resources. They support CRUD operations for Azure Machine Learning Workspaces.
 *
 * The version of the OpenAPI document: 2019-10-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIWorkspaceProperties.h
 *
 * The properties of a machine learning workspace.
 */

#ifndef OAIWorkspaceProperties_H
#define OAIWorkspaceProperties_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIWorkspaceProperties : public OAIObject {
public:
    OAIWorkspaceProperties();
    OAIWorkspaceProperties(QString json);
    ~OAIWorkspaceProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCreationTime() const;
    void setCreationTime(const QString &creation_time);
    bool is_creation_time_Set() const;
    bool is_creation_time_Valid() const;

    QString getKeyVaultIdentifierId() const;
    void setKeyVaultIdentifierId(const QString &key_vault_identifier_id);
    bool is_key_vault_identifier_id_Set() const;
    bool is_key_vault_identifier_id_Valid() const;

    QString getOwnerEmail() const;
    void setOwnerEmail(const QString &owner_email);
    bool is_owner_email_Set() const;
    bool is_owner_email_Valid() const;

    QString getStudioEndpoint() const;
    void setStudioEndpoint(const QString &studio_endpoint);
    bool is_studio_endpoint_Set() const;
    bool is_studio_endpoint_Valid() const;

    QString getUserStorageAccountId() const;
    void setUserStorageAccountId(const QString &user_storage_account_id);
    bool is_user_storage_account_id_Set() const;
    bool is_user_storage_account_id_Valid() const;

    QString getWorkspaceId() const;
    void setWorkspaceId(const QString &workspace_id);
    bool is_workspace_id_Set() const;
    bool is_workspace_id_Valid() const;

    QString getWorkspaceState() const;
    void setWorkspaceState(const QString &workspace_state);
    bool is_workspace_state_Set() const;
    bool is_workspace_state_Valid() const;

    QString getWorkspaceType() const;
    void setWorkspaceType(const QString &workspace_type);
    bool is_workspace_type_Set() const;
    bool is_workspace_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_creation_time;
    bool m_creation_time_isSet;
    bool m_creation_time_isValid;

    QString m_key_vault_identifier_id;
    bool m_key_vault_identifier_id_isSet;
    bool m_key_vault_identifier_id_isValid;

    QString m_owner_email;
    bool m_owner_email_isSet;
    bool m_owner_email_isValid;

    QString m_studio_endpoint;
    bool m_studio_endpoint_isSet;
    bool m_studio_endpoint_isValid;

    QString m_user_storage_account_id;
    bool m_user_storage_account_id_isSet;
    bool m_user_storage_account_id_isValid;

    QString m_workspace_id;
    bool m_workspace_id_isSet;
    bool m_workspace_id_isValid;

    QString m_workspace_state;
    bool m_workspace_state_isSet;
    bool m_workspace_state_isValid;

    QString m_workspace_type;
    bool m_workspace_type_isSet;
    bool m_workspace_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIWorkspaceProperties)

#endif // OAIWorkspaceProperties_H
