# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class WorkspacePropertiesUpdateParameters(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, key_vault_identifier_id: str=None, workspace_state: str=None):
        """WorkspacePropertiesUpdateParameters - a model defined in OpenAPI

        :param key_vault_identifier_id: The key_vault_identifier_id of this WorkspacePropertiesUpdateParameters.
        :param workspace_state: The workspace_state of this WorkspacePropertiesUpdateParameters.
        """
        self.openapi_types = {
            'key_vault_identifier_id': str,
            'workspace_state': str
        }

        self.attribute_map = {
            'key_vault_identifier_id': 'keyVaultIdentifierId',
            'workspace_state': 'workspaceState'
        }

        self._key_vault_identifier_id = key_vault_identifier_id
        self._workspace_state = workspace_state

    @classmethod
    def from_dict(cls, dikt: dict) -> 'WorkspacePropertiesUpdateParameters':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The WorkspacePropertiesUpdateParameters of this WorkspacePropertiesUpdateParameters.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def key_vault_identifier_id(self):
        """Gets the key_vault_identifier_id of this WorkspacePropertiesUpdateParameters.

        The key vault identifier used for encrypted workspaces.

        :return: The key_vault_identifier_id of this WorkspacePropertiesUpdateParameters.
        :rtype: str
        """
        return self._key_vault_identifier_id

    @key_vault_identifier_id.setter
    def key_vault_identifier_id(self, key_vault_identifier_id):
        """Sets the key_vault_identifier_id of this WorkspacePropertiesUpdateParameters.

        The key vault identifier used for encrypted workspaces.

        :param key_vault_identifier_id: The key_vault_identifier_id of this WorkspacePropertiesUpdateParameters.
        :type key_vault_identifier_id: str
        """

        self._key_vault_identifier_id = key_vault_identifier_id

    @property
    def workspace_state(self):
        """Gets the workspace_state of this WorkspacePropertiesUpdateParameters.

        The current state of workspace resource.

        :return: The workspace_state of this WorkspacePropertiesUpdateParameters.
        :rtype: str
        """
        return self._workspace_state

    @workspace_state.setter
    def workspace_state(self, workspace_state):
        """Sets the workspace_state of this WorkspacePropertiesUpdateParameters.

        The current state of workspace resource.

        :param workspace_state: The workspace_state of this WorkspacePropertiesUpdateParameters.
        :type workspace_state: str
        """
        allowed_values = ["Deleted", "Enabled", "Disabled", "Migrated", "Updated", "Registered", "Unregistered"]  # noqa: E501
        if workspace_state not in allowed_values:
            raise ValueError(
                "Invalid value for `workspace_state` ({0}), must be one of {1}"
                .format(workspace_state, allowed_values)
            )

        self._workspace_state = workspace_state
