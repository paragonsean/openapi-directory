# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class VolumeModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, file_system: str=None, remaining_size_gb: int=None, size_gb: int=None, volume_label: str=None):
        """VolumeModel - a model defined in OpenAPI

        :param file_system: The file_system of this VolumeModel.
        :param remaining_size_gb: The remaining_size_gb of this VolumeModel.
        :param size_gb: The size_gb of this VolumeModel.
        :param volume_label: The volume_label of this VolumeModel.
        """
        self.openapi_types = {
            'file_system': str,
            'remaining_size_gb': int,
            'size_gb': int,
            'volume_label': str
        }

        self.attribute_map = {
            'file_system': 'fileSystem',
            'remaining_size_gb': 'remainingSizeGB',
            'size_gb': 'sizeGB',
            'volume_label': 'volumeLabel'
        }

        self._file_system = file_system
        self._remaining_size_gb = remaining_size_gb
        self._size_gb = size_gb
        self._volume_label = volume_label

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VolumeModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VolumeModel of this VolumeModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def file_system(self):
        """Gets the file_system of this VolumeModel.

        Filesystem type.

        :return: The file_system of this VolumeModel.
        :rtype: str
        """
        return self._file_system

    @file_system.setter
    def file_system(self, file_system):
        """Sets the file_system of this VolumeModel.

        Filesystem type.

        :param file_system: The file_system of this VolumeModel.
        :type file_system: str
        """

        self._file_system = file_system

    @property
    def remaining_size_gb(self):
        """Gets the remaining_size_gb of this VolumeModel.

        Amount of free space in GB.

        :return: The remaining_size_gb of this VolumeModel.
        :rtype: int
        """
        return self._remaining_size_gb

    @remaining_size_gb.setter
    def remaining_size_gb(self, remaining_size_gb):
        """Sets the remaining_size_gb of this VolumeModel.

        Amount of free space in GB.

        :param remaining_size_gb: The remaining_size_gb of this VolumeModel.
        :type remaining_size_gb: int
        """

        self._remaining_size_gb = remaining_size_gb

    @property
    def size_gb(self):
        """Gets the size_gb of this VolumeModel.

        Total amount of space in GB.

        :return: The size_gb of this VolumeModel.
        :rtype: int
        """
        return self._size_gb

    @size_gb.setter
    def size_gb(self, size_gb):
        """Sets the size_gb of this VolumeModel.

        Total amount of space in GB.

        :param size_gb: The size_gb of this VolumeModel.
        :type size_gb: int
        """

        self._size_gb = size_gb

    @property
    def volume_label(self):
        """Gets the volume_label of this VolumeModel.

        Volume label.

        :return: The volume_label of this VolumeModel.
        :rtype: str
        """
        return self._volume_label

    @volume_label.setter
    def volume_label(self, volume_label):
        """Sets the volume_label of this VolumeModel.

        Volume label.

        :param volume_label: The volume_label of this VolumeModel.
        :type volume_label: str
        """

        self._volume_label = volume_label
