/**
 * Visual Studio Resource Provider Client
 * Use these APIs to manage Visual Studio Team Services resources through the Azure Resource Manager. All task operations conform to the HTTP/1.1 protocol specification and each operation returns an x-ms-request-id header that can be used to obtain information about the request. You must make sure that requests made to these resources are secure. For more information, see https://docs.microsoft.com/en-us/rest/api/index.
 *
 * The version of the OpenAPI document: 2014-04-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ExtensionResourcePlan model module.
 * @module model/ExtensionResourcePlan
 * @version 2014-04-01-preview
 */
class ExtensionResourcePlan {
    /**
     * Constructs a new <code>ExtensionResourcePlan</code>.
     * Plan data for an extension resource.
     * @alias module:model/ExtensionResourcePlan
     */
    constructor() { 
        
        ExtensionResourcePlan.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ExtensionResourcePlan</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ExtensionResourcePlan} obj Optional instance to populate.
     * @return {module:model/ExtensionResourcePlan} The populated <code>ExtensionResourcePlan</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ExtensionResourcePlan();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('product')) {
                obj['product'] = ApiClient.convertToType(data['product'], 'String');
            }
            if (data.hasOwnProperty('promotionCode')) {
                obj['promotionCode'] = ApiClient.convertToType(data['promotionCode'], 'String');
            }
            if (data.hasOwnProperty('publisher')) {
                obj['publisher'] = ApiClient.convertToType(data['publisher'], 'String');
            }
            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ExtensionResourcePlan</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ExtensionResourcePlan</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['product'] && !(typeof data['product'] === 'string' || data['product'] instanceof String)) {
            throw new Error("Expected the field `product` to be a primitive type in the JSON string but got " + data['product']);
        }
        // ensure the json data is a string
        if (data['promotionCode'] && !(typeof data['promotionCode'] === 'string' || data['promotionCode'] instanceof String)) {
            throw new Error("Expected the field `promotionCode` to be a primitive type in the JSON string but got " + data['promotionCode']);
        }
        // ensure the json data is a string
        if (data['publisher'] && !(typeof data['publisher'] === 'string' || data['publisher'] instanceof String)) {
            throw new Error("Expected the field `publisher` to be a primitive type in the JSON string but got " + data['publisher']);
        }
        // ensure the json data is a string
        if (data['version'] && !(typeof data['version'] === 'string' || data['version'] instanceof String)) {
            throw new Error("Expected the field `version` to be a primitive type in the JSON string but got " + data['version']);
        }

        return true;
    }


}



/**
 * Name of the plan.
 * @member {String} name
 */
ExtensionResourcePlan.prototype['name'] = undefined;

/**
 * Product name.
 * @member {String} product
 */
ExtensionResourcePlan.prototype['product'] = undefined;

/**
 * Optional: the promotion code associated with the plan.
 * @member {String} promotionCode
 */
ExtensionResourcePlan.prototype['promotionCode'] = undefined;

/**
 * Name of the extension publisher.
 * @member {String} publisher
 */
ExtensionResourcePlan.prototype['publisher'] = undefined;

/**
 * A string that uniquely identifies the plan version.
 * @member {String} version
 */
ExtensionResourcePlan.prototype['version'] = undefined;






export default ExtensionResourcePlan;

