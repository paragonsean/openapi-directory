/**
 * Visual Studio Resource Provider Client
 * Use these APIs to manage Visual Studio Team Services resources through the Azure Resource Manager. All task operations conform to the HTTP/1.1 protocol specification and each operation returns an x-ms-request-id header that can be used to obtain information about the request. You must make sure that requests made to these resources are secure. For more information, see https://docs.microsoft.com/en-us/rest/api/index.
 *
 * The version of the OpenAPI document: 2014-04-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AccountResource from '../model/AccountResource';
import AccountResourceListResult from '../model/AccountResourceListResult';
import AccountResourceRequest from '../model/AccountResourceRequest';
import AccountTagRequest from '../model/AccountTagRequest';
import CheckNameAvailabilityParameter from '../model/CheckNameAvailabilityParameter';
import CheckNameAvailabilityResult from '../model/CheckNameAvailabilityResult';

/**
* Accounts service.
* @module api/AccountsApi
* @version 2014-04-01-preview
*/
export default class AccountsApi {

    /**
    * Constructs a new AccountsApi. 
    * @alias module:api/AccountsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the accountsCheckNameAvailability operation.
     * @callback module:api/AccountsApi~accountsCheckNameAvailabilityCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CheckNameAvailabilityResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Accounts_CheckNameAvailability
     * Checks if the specified Visual Studio Team Services account name is available. Resource name can be either an account name or an account name and PUID.
     * @param {String} subscriptionId The Azure subscription identifier.
     * @param {String} apiVersion API Version
     * @param {module:model/CheckNameAvailabilityParameter} body Parameters describing the name to check availability for.
     * @param {module:api/AccountsApi~accountsCheckNameAvailabilityCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CheckNameAvailabilityResult}
     */
    accountsCheckNameAvailability(subscriptionId, apiVersion, body, callback) {
      let postBody = body;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling accountsCheckNameAvailability");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling accountsCheckNameAvailability");
      }
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling accountsCheckNameAvailability");
      }

      let pathParams = {
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CheckNameAvailabilityResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/microsoft.visualstudio/checkNameAvailability', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the accountsCreateOrUpdate operation.
     * @callback module:api/AccountsApi~accountsCreateOrUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AccountResource} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Accounts_CreateOrUpdate
     * Creates or updates a Visual Studio Team Services account resource.
     * @param {String} resourceGroupName Name of the resource group within the Azure subscription.
     * @param {String} subscriptionId The Azure subscription identifier.
     * @param {String} apiVersion API Version
     * @param {String} resourceName Name of the resource.
     * @param {module:model/AccountResourceRequest} body The request data.
     * @param {module:api/AccountsApi~accountsCreateOrUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AccountResource}
     */
    accountsCreateOrUpdate(resourceGroupName, subscriptionId, apiVersion, resourceName, body, callback) {
      let postBody = body;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling accountsCreateOrUpdate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling accountsCreateOrUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling accountsCreateOrUpdate");
      }
      // verify the required parameter 'resourceName' is set
      if (resourceName === undefined || resourceName === null) {
        throw new Error("Missing the required parameter 'resourceName' when calling accountsCreateOrUpdate");
      }
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling accountsCreateOrUpdate");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'subscriptionId': subscriptionId,
        'resourceName': resourceName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = AccountResource;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/microsoft.visualstudio/account/{resourceName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the accountsDelete operation.
     * @callback module:api/AccountsApi~accountsDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Accounts_Delete
     * Deletes a Visual Studio Team Services account resource.
     * @param {String} resourceGroupName Name of the resource group within the Azure subscription.
     * @param {String} subscriptionId The Azure subscription identifier.
     * @param {String} apiVersion API Version
     * @param {String} resourceName Name of the resource.
     * @param {module:api/AccountsApi~accountsDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    accountsDelete(resourceGroupName, subscriptionId, apiVersion, resourceName, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling accountsDelete");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling accountsDelete");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling accountsDelete");
      }
      // verify the required parameter 'resourceName' is set
      if (resourceName === undefined || resourceName === null) {
        throw new Error("Missing the required parameter 'resourceName' when calling accountsDelete");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'subscriptionId': subscriptionId,
        'resourceName': resourceName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/microsoft.visualstudio/account/{resourceName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the accountsGet operation.
     * @callback module:api/AccountsApi~accountsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AccountResource} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Accounts_Get
     * Gets the Visual Studio Team Services account resource details.
     * @param {String} resourceGroupName Name of the resource group within the Azure subscription.
     * @param {String} subscriptionId The Azure subscription identifier.
     * @param {String} apiVersion API Version
     * @param {String} resourceName Name of the resource.
     * @param {module:api/AccountsApi~accountsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AccountResource}
     */
    accountsGet(resourceGroupName, subscriptionId, apiVersion, resourceName, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling accountsGet");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling accountsGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling accountsGet");
      }
      // verify the required parameter 'resourceName' is set
      if (resourceName === undefined || resourceName === null) {
        throw new Error("Missing the required parameter 'resourceName' when calling accountsGet");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'subscriptionId': subscriptionId,
        'resourceName': resourceName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AccountResource;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/microsoft.visualstudio/account/{resourceName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the accountsListByResourceGroup operation.
     * @callback module:api/AccountsApi~accountsListByResourceGroupCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AccountResourceListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Accounts_ListByResourceGroup
     * Gets all Visual Studio Team Services account resources under the resource group linked to the specified Azure subscription.
     * @param {String} resourceGroupName Name of the resource group within the Azure subscription.
     * @param {String} subscriptionId The Azure subscription identifier.
     * @param {String} apiVersion API Version
     * @param {module:api/AccountsApi~accountsListByResourceGroupCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AccountResourceListResult}
     */
    accountsListByResourceGroup(resourceGroupName, subscriptionId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling accountsListByResourceGroup");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling accountsListByResourceGroup");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling accountsListByResourceGroup");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AccountResourceListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/microsoft.visualstudio/account', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the accountsUpdate operation.
     * @callback module:api/AccountsApi~accountsUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AccountResource} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Accounts_Update
     * Updates tags for Visual Studio Team Services account resource.
     * @param {String} resourceGroupName Name of the resource group within the Azure subscription.
     * @param {String} subscriptionId The Azure subscription identifier.
     * @param {String} apiVersion API Version
     * @param {String} resourceName Name of the resource.
     * @param {module:model/AccountTagRequest} body The request data.
     * @param {module:api/AccountsApi~accountsUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AccountResource}
     */
    accountsUpdate(resourceGroupName, subscriptionId, apiVersion, resourceName, body, callback) {
      let postBody = body;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling accountsUpdate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling accountsUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling accountsUpdate");
      }
      // verify the required parameter 'resourceName' is set
      if (resourceName === undefined || resourceName === null) {
        throw new Error("Missing the required parameter 'resourceName' when calling accountsUpdate");
      }
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling accountsUpdate");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'subscriptionId': subscriptionId,
        'resourceName': resourceName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = AccountResource;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/microsoft.visualstudio/account/{resourceName}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
