/**
 * Visual Studio Resource Provider Client
 * Use these APIs to manage Visual Studio Team Services resources through the Azure Resource Manager. All task operations conform to the HTTP/1.1 protocol specification and each operation returns an x-ms-request-id header that can be used to obtain information about the request. You must make sure that requests made to these resources are secure. For more information, see https://docs.microsoft.com/en-us/rest/api/index.
 *
 * The version of the OpenAPI document: 2014-04-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAccountTagRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAccountTagRequest::OAIAccountTagRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAccountTagRequest::OAIAccountTagRequest() {
    this->initializeModel();
}

OAIAccountTagRequest::~OAIAccountTagRequest() {}

void OAIAccountTagRequest::initializeModel() {

    m_tags_isSet = false;
    m_tags_isValid = false;
}

void OAIAccountTagRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAccountTagRequest::fromJsonObject(QJsonObject json) {

    m_tags_isValid = ::OpenAPI::fromJsonValue(m_tags, json[QString("tags")]);
    m_tags_isSet = !json[QString("tags")].isNull() && m_tags_isValid;
}

QString OAIAccountTagRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAccountTagRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_tags.size() > 0) {
        obj.insert(QString("tags"), ::OpenAPI::toJsonValue(m_tags));
    }
    return obj;
}

QMap<QString, QString> OAIAccountTagRequest::getTags() const {
    return m_tags;
}
void OAIAccountTagRequest::setTags(const QMap<QString, QString> &tags) {
    m_tags = tags;
    m_tags_isSet = true;
}

bool OAIAccountTagRequest::is_tags_Set() const{
    return m_tags_isSet;
}

bool OAIAccountTagRequest::is_tags_Valid() const{
    return m_tags_isValid;
}

bool OAIAccountTagRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_tags.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAccountTagRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
