/**
 * Visual Studio Resource Provider Client
 * Use these APIs to manage Visual Studio Team Services resources through the Azure Resource Manager. All task operations conform to the HTTP/1.1 protocol specification and each operation returns an x-ms-request-id header that can be used to obtain information about the request. You must make sure that requests made to these resources are secure. For more information, see https://docs.microsoft.com/en-us/rest/api/index.
 *
 * The version of the OpenAPI document: 2014-04-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICheckNameAvailabilityParameter.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICheckNameAvailabilityParameter::OAICheckNameAvailabilityParameter(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICheckNameAvailabilityParameter::OAICheckNameAvailabilityParameter() {
    this->initializeModel();
}

OAICheckNameAvailabilityParameter::~OAICheckNameAvailabilityParameter() {}

void OAICheckNameAvailabilityParameter::initializeModel() {

    m_resource_name_isSet = false;
    m_resource_name_isValid = false;

    m_resource_type_isSet = false;
    m_resource_type_isValid = false;
}

void OAICheckNameAvailabilityParameter::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICheckNameAvailabilityParameter::fromJsonObject(QJsonObject json) {

    m_resource_name_isValid = ::OpenAPI::fromJsonValue(m_resource_name, json[QString("resourceName")]);
    m_resource_name_isSet = !json[QString("resourceName")].isNull() && m_resource_name_isValid;

    m_resource_type_isValid = ::OpenAPI::fromJsonValue(m_resource_type, json[QString("resourceType")]);
    m_resource_type_isSet = !json[QString("resourceType")].isNull() && m_resource_type_isValid;
}

QString OAICheckNameAvailabilityParameter::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICheckNameAvailabilityParameter::asJsonObject() const {
    QJsonObject obj;
    if (m_resource_name_isSet) {
        obj.insert(QString("resourceName"), ::OpenAPI::toJsonValue(m_resource_name));
    }
    if (m_resource_type_isSet) {
        obj.insert(QString("resourceType"), ::OpenAPI::toJsonValue(m_resource_type));
    }
    return obj;
}

QString OAICheckNameAvailabilityParameter::getResourceName() const {
    return m_resource_name;
}
void OAICheckNameAvailabilityParameter::setResourceName(const QString &resource_name) {
    m_resource_name = resource_name;
    m_resource_name_isSet = true;
}

bool OAICheckNameAvailabilityParameter::is_resource_name_Set() const{
    return m_resource_name_isSet;
}

bool OAICheckNameAvailabilityParameter::is_resource_name_Valid() const{
    return m_resource_name_isValid;
}

QString OAICheckNameAvailabilityParameter::getResourceType() const {
    return m_resource_type;
}
void OAICheckNameAvailabilityParameter::setResourceType(const QString &resource_type) {
    m_resource_type = resource_type;
    m_resource_type_isSet = true;
}

bool OAICheckNameAvailabilityParameter::is_resource_type_Set() const{
    return m_resource_type_isSet;
}

bool OAICheckNameAvailabilityParameter::is_resource_type_Valid() const{
    return m_resource_type_isValid;
}

bool OAICheckNameAvailabilityParameter::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_resource_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICheckNameAvailabilityParameter::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
