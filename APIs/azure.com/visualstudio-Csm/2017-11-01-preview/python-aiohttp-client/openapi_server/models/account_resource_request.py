# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AccountResourceRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_name: str=None, location: str=None, operation_type: str=None, properties: Dict[str, str]=None, tags: Dict[str, str]=None):
        """AccountResourceRequest - a model defined in OpenAPI

        :param account_name: The account_name of this AccountResourceRequest.
        :param location: The location of this AccountResourceRequest.
        :param operation_type: The operation_type of this AccountResourceRequest.
        :param properties: The properties of this AccountResourceRequest.
        :param tags: The tags of this AccountResourceRequest.
        """
        self.openapi_types = {
            'account_name': str,
            'location': str,
            'operation_type': str,
            'properties': Dict[str, str],
            'tags': Dict[str, str]
        }

        self.attribute_map = {
            'account_name': 'accountName',
            'location': 'location',
            'operation_type': 'operationType',
            'properties': 'properties',
            'tags': 'tags'
        }

        self._account_name = account_name
        self._location = location
        self._operation_type = operation_type
        self._properties = properties
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AccountResourceRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AccountResourceRequest of this AccountResourceRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_name(self):
        """Gets the account_name of this AccountResourceRequest.

        The account name.

        :return: The account_name of this AccountResourceRequest.
        :rtype: str
        """
        return self._account_name

    @account_name.setter
    def account_name(self, account_name):
        """Sets the account_name of this AccountResourceRequest.

        The account name.

        :param account_name: The account_name of this AccountResourceRequest.
        :type account_name: str
        """

        self._account_name = account_name

    @property
    def location(self):
        """Gets the location of this AccountResourceRequest.

        The Azure instance location.

        :return: The location of this AccountResourceRequest.
        :rtype: str
        """
        return self._location

    @location.setter
    def location(self, location):
        """Sets the location of this AccountResourceRequest.

        The Azure instance location.

        :param location: The location of this AccountResourceRequest.
        :type location: str
        """

        self._location = location

    @property
    def operation_type(self):
        """Gets the operation_type of this AccountResourceRequest.

        The type of the operation.

        :return: The operation_type of this AccountResourceRequest.
        :rtype: str
        """
        return self._operation_type

    @operation_type.setter
    def operation_type(self, operation_type):
        """Sets the operation_type of this AccountResourceRequest.

        The type of the operation.

        :param operation_type: The operation_type of this AccountResourceRequest.
        :type operation_type: str
        """
        allowed_values = ["unknown", "create", "update", "link"]  # noqa: E501
        if operation_type not in allowed_values:
            raise ValueError(
                "Invalid value for `operation_type` ({0}), must be one of {1}"
                .format(operation_type, allowed_values)
            )

        self._operation_type = operation_type

    @property
    def properties(self):
        """Gets the properties of this AccountResourceRequest.

        The custom properties of the resource.

        :return: The properties of this AccountResourceRequest.
        :rtype: Dict[str, str]
        """
        return self._properties

    @properties.setter
    def properties(self, properties):
        """Sets the properties of this AccountResourceRequest.

        The custom properties of the resource.

        :param properties: The properties of this AccountResourceRequest.
        :type properties: Dict[str, str]
        """

        self._properties = properties

    @property
    def tags(self):
        """Gets the tags of this AccountResourceRequest.

        The custom tags of the resource.

        :return: The tags of this AccountResourceRequest.
        :rtype: Dict[str, str]
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this AccountResourceRequest.

        The custom tags of the resource.

        :param tags: The tags of this AccountResourceRequest.
        :type tags: Dict[str, str]
        """

        self._tags = tags
