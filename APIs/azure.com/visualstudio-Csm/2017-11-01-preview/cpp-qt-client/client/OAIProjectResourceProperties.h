/**
 * Visual Studio Resource Provider Client
 * Use these APIs to manage Visual Studio Team Services resources through the Azure Resource Manager. All task operations conform to the HTTP/1.1 protocol specification and each operation returns an x-ms-request-id header that can be used to obtain information about the request. You must make sure that requests made to these resources are secure. For more information, see https://docs.microsoft.com/en-us/rest/api/index.
 *
 * The version of the OpenAPI document: 2017-11-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIProjectResourceProperties.h
 *
 * Defines the custom properties of project resource.
 */

#ifndef OAIProjectResourceProperties_H
#define OAIProjectResourceProperties_H

#include <QJsonObject>

#include "OAIPipelineTemplate.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPipelineTemplate;

class OAIProjectResourceProperties : public OAIObject {
public:
    OAIProjectResourceProperties();
    OAIProjectResourceProperties(QString json);
    ~OAIProjectResourceProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIPipelineTemplate getBootstrapPipelineTemplate() const;
    void setBootstrapPipelineTemplate(const OAIPipelineTemplate &bootstrap_pipeline_template);
    bool is_bootstrap_pipeline_template_Set() const;
    bool is_bootstrap_pipeline_template_Valid() const;

    QString getOwnerUpn() const;
    void setOwnerUpn(const QString &owner_upn);
    bool is_owner_upn_Set() const;
    bool is_owner_upn_Valid() const;

    QString getProcessTemplateId() const;
    void setProcessTemplateId(const QString &process_template_id);
    bool is_process_template_id_Set() const;
    bool is_process_template_id_Valid() const;

    QString getTfsUniqueIdentifier() const;
    void setTfsUniqueIdentifier(const QString &tfs_unique_identifier);
    bool is_tfs_unique_identifier_Set() const;
    bool is_tfs_unique_identifier_Valid() const;

    QString getVersionControlOption() const;
    void setVersionControlOption(const QString &version_control_option);
    bool is_version_control_option_Set() const;
    bool is_version_control_option_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIPipelineTemplate m_bootstrap_pipeline_template;
    bool m_bootstrap_pipeline_template_isSet;
    bool m_bootstrap_pipeline_template_isValid;

    QString m_owner_upn;
    bool m_owner_upn_isSet;
    bool m_owner_upn_isValid;

    QString m_process_template_id;
    bool m_process_template_id_isSet;
    bool m_process_template_id_isValid;

    QString m_tfs_unique_identifier;
    bool m_tfs_unique_identifier_isSet;
    bool m_tfs_unique_identifier_isValid;

    QString m_version_control_option;
    bool m_version_control_option_isSet;
    bool m_version_control_option_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIProjectResourceProperties)

#endif // OAIProjectResourceProperties_H
