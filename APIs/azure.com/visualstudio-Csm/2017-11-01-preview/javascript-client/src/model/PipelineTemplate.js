/**
 * Visual Studio Resource Provider Client
 * Use these APIs to manage Visual Studio Team Services resources through the Azure Resource Manager. All task operations conform to the HTTP/1.1 protocol specification and each operation returns an x-ms-request-id header that can be used to obtain information about the request. You must make sure that requests made to these resources are secure. For more information, see https://docs.microsoft.com/en-us/rest/api/index.
 *
 * The version of the OpenAPI document: 2017-11-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ApplicationSource from './ApplicationSource';
import ApplicationTarget from './ApplicationTarget';
import Authorization from './Authorization';

/**
 * The PipelineTemplate model module.
 * @module model/PipelineTemplate
 * @version 2017-11-01-preview
 */
class PipelineTemplate {
    /**
     * Constructs a new <code>PipelineTemplate</code>.
     * Defines a VSTS pipeline template.
     * @alias module:model/PipelineTemplate
     * @param applicationSource {module:model/ApplicationSource} 
     * @param applicationTarget {module:model/ApplicationTarget} 
     * @param authorizationDetails {Object.<String, module:model/Authorization>} Global dictionary of authorization details used by the pipeline, with a friendly name as key. Individual resource in the pipeline can reference to a specific authorization info using the friendly name.
     */
    constructor(applicationSource, applicationTarget, authorizationDetails) { 
        
        PipelineTemplate.initialize(this, applicationSource, applicationTarget, authorizationDetails);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, applicationSource, applicationTarget, authorizationDetails) { 
        obj['applicationSource'] = applicationSource;
        obj['applicationTarget'] = applicationTarget;
        obj['authorizationDetails'] = authorizationDetails;
    }

    /**
     * Constructs a <code>PipelineTemplate</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PipelineTemplate} obj Optional instance to populate.
     * @return {module:model/PipelineTemplate} The populated <code>PipelineTemplate</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PipelineTemplate();

            if (data.hasOwnProperty('applicationSource')) {
                obj['applicationSource'] = ApplicationSource.constructFromObject(data['applicationSource']);
            }
            if (data.hasOwnProperty('applicationTarget')) {
                obj['applicationTarget'] = ApplicationTarget.constructFromObject(data['applicationTarget']);
            }
            if (data.hasOwnProperty('authorizationDetails')) {
                obj['authorizationDetails'] = ApiClient.convertToType(data['authorizationDetails'], {'String': Authorization});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PipelineTemplate</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PipelineTemplate</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PipelineTemplate.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `applicationSource`
        if (data['applicationSource']) { // data not null
          ApplicationSource.validateJSON(data['applicationSource']);
        }
        // validate the optional field `applicationTarget`
        if (data['applicationTarget']) { // data not null
          ApplicationTarget.validateJSON(data['applicationTarget']);
        }

        return true;
    }


}

PipelineTemplate.RequiredProperties = ["applicationSource", "applicationTarget", "authorizationDetails"];

/**
 * @member {module:model/ApplicationSource} applicationSource
 */
PipelineTemplate.prototype['applicationSource'] = undefined;

/**
 * @member {module:model/ApplicationTarget} applicationTarget
 */
PipelineTemplate.prototype['applicationTarget'] = undefined;

/**
 * Global dictionary of authorization details used by the pipeline, with a friendly name as key. Individual resource in the pipeline can reference to a specific authorization info using the friendly name.
 * @member {Object.<String, module:model/Authorization>} authorizationDetails
 */
PipelineTemplate.prototype['authorizationDetails'] = undefined;






export default PipelineTemplate;

