/**
 * Visual Studio Resource Provider Client
 * Use these APIs to manage Visual Studio Team Services resources through the Azure Resource Manager. All task operations conform to the HTTP/1.1 protocol specification and each operation returns an x-ms-request-id header that can be used to obtain information about the request. You must make sure that requests made to these resources are secure. For more information, see https://docs.microsoft.com/en-us/rest/api/index.
 *
 * The version of the OpenAPI document: 2017-11-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ProjectResource from '../model/ProjectResource';
import ProjectResourceListResult from '../model/ProjectResourceListResult';
import ProjectResourceUpdateParameters from '../model/ProjectResourceUpdateParameters';

/**
* Projects service.
* @module api/ProjectsApi
* @version 2017-11-01-preview
*/
export default class ProjectsApi {

    /**
    * Constructs a new ProjectsApi. 
    * @alias module:api/ProjectsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the projectListByAccountResource operation.
     * @callback module:api/ProjectsApi~projectListByAccountResourceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ProjectResourceListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Projects_ListByAccountResource
     * Gets all Visual Studio Team Services project resources created in the specified Team Services account.
     * @param {String} resourceGroupName Name of the resource group within the Azure subscription.
     * @param {String} subscriptionId The Azure subscription identifier.
     * @param {String} apiVersion API Version
     * @param {String} rootResourceName Name of the Team Services account.
     * @param {module:api/ProjectsApi~projectListByAccountResourceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ProjectResourceListResult}
     */
    projectListByAccountResource(resourceGroupName, subscriptionId, apiVersion, rootResourceName, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling projectListByAccountResource");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling projectListByAccountResource");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling projectListByAccountResource");
      }
      // verify the required parameter 'rootResourceName' is set
      if (rootResourceName === undefined || rootResourceName === null) {
        throw new Error("Missing the required parameter 'rootResourceName' when calling projectListByAccountResource");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'subscriptionId': subscriptionId,
        'rootResourceName': rootResourceName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ProjectResourceListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.visualstudio/account/{rootResourceName}/project', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the projectsCreate operation.
     * @callback module:api/ProjectsApi~projectsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ProjectResource} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Projects_Create
     * Creates a Team Services project in the collection with the specified name. 'VersionControlOption' and 'ProcessTemplateId' must be specified in the resource properties. Valid values for VersionControlOption: Git, Tfvc. Valid values for ProcessTemplateId: 6B724908-EF14-45CF-84F8-768B5384DA45, ADCC42AB-9882-485E-A3ED-7678F01F66BC, 27450541-8E31-4150-9947-DC59F998FC01 (these IDs correspond to Scrum, Agile, and CMMI process templates).
     * @param {String} resourceGroupName Name of the resource group within the Azure subscription.
     * @param {String} subscriptionId The Azure subscription identifier.
     * @param {String} apiVersion API Version
     * @param {String} rootResourceName Name of the Team Services account.
     * @param {String} resourceName Name of the Team Services project.
     * @param {module:model/ProjectResource} body The request data.
     * @param {Object} opts Optional parameters
     * @param {String} [validating] This parameter is ignored and should be set to an empty string.
     * @param {module:api/ProjectsApi~projectsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ProjectResource}
     */
    projectsCreate(resourceGroupName, subscriptionId, apiVersion, rootResourceName, resourceName, body, opts, callback) {
      opts = opts || {};
      let postBody = body;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling projectsCreate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling projectsCreate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling projectsCreate");
      }
      // verify the required parameter 'rootResourceName' is set
      if (rootResourceName === undefined || rootResourceName === null) {
        throw new Error("Missing the required parameter 'rootResourceName' when calling projectsCreate");
      }
      // verify the required parameter 'resourceName' is set
      if (resourceName === undefined || resourceName === null) {
        throw new Error("Missing the required parameter 'resourceName' when calling projectsCreate");
      }
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling projectsCreate");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'subscriptionId': subscriptionId,
        'rootResourceName': rootResourceName,
        'resourceName': resourceName
      };
      let queryParams = {
        'api-version': apiVersion,
        'validating': opts['validating']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ProjectResource;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.visualstudio/account/{rootResourceName}/project/{resourceName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the projectsGet operation.
     * @callback module:api/ProjectsApi~projectsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ProjectResource} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Projects_Get
     * Gets the details of a Team Services project resource.
     * @param {String} resourceGroupName Name of the resource group within the Azure subscription.
     * @param {String} subscriptionId The Azure subscription identifier.
     * @param {String} apiVersion API Version
     * @param {String} rootResourceName Name of the Team Services account.
     * @param {String} resourceName Name of the Team Services project.
     * @param {module:api/ProjectsApi~projectsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ProjectResource}
     */
    projectsGet(resourceGroupName, subscriptionId, apiVersion, rootResourceName, resourceName, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling projectsGet");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling projectsGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling projectsGet");
      }
      // verify the required parameter 'rootResourceName' is set
      if (rootResourceName === undefined || rootResourceName === null) {
        throw new Error("Missing the required parameter 'rootResourceName' when calling projectsGet");
      }
      // verify the required parameter 'resourceName' is set
      if (resourceName === undefined || resourceName === null) {
        throw new Error("Missing the required parameter 'resourceName' when calling projectsGet");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'subscriptionId': subscriptionId,
        'rootResourceName': rootResourceName,
        'resourceName': resourceName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ProjectResource;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.visualstudio/account/{rootResourceName}/project/{resourceName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the projectsUpdate operation.
     * @callback module:api/ProjectsApi~projectsUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ProjectResource} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Projects_Update
     * Updates the tags of the specified Team Services project.
     * @param {String} resourceGroupName Name of the resource group within the Azure subscription.
     * @param {String} subscriptionId The Azure subscription identifier.
     * @param {String} apiVersion API Version
     * @param {String} rootResourceName Name of the Team Services account.
     * @param {String} resourceName Name of the Team Services project.
     * @param {module:model/ProjectResourceUpdateParameters} body The request data.
     * @param {module:api/ProjectsApi~projectsUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ProjectResource}
     */
    projectsUpdate(resourceGroupName, subscriptionId, apiVersion, rootResourceName, resourceName, body, callback) {
      let postBody = body;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling projectsUpdate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling projectsUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling projectsUpdate");
      }
      // verify the required parameter 'rootResourceName' is set
      if (rootResourceName === undefined || rootResourceName === null) {
        throw new Error("Missing the required parameter 'rootResourceName' when calling projectsUpdate");
      }
      // verify the required parameter 'resourceName' is set
      if (resourceName === undefined || resourceName === null) {
        throw new Error("Missing the required parameter 'resourceName' when calling projectsUpdate");
      }
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling projectsUpdate");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'subscriptionId': subscriptionId,
        'rootResourceName': rootResourceName,
        'resourceName': resourceName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ProjectResource;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.visualstudio/account/{rootResourceName}/project/{resourceName}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
