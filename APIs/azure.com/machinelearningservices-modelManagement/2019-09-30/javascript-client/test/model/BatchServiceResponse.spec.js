/**
 * Azure Machine Learning Model Management Service
 * These APIs allow end users to manage Azure Machine Learning Models, Images, Profiles, and Services.
 *
 * The version of the OpenAPI document: 2019-09-30
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AzureMachineLearningModelManagementService);
  }
}(this, function(expect, AzureMachineLearningModelManagementService) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AzureMachineLearningModelManagementService.BatchServiceResponse();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('BatchServiceResponse', function() {
    it('should create an instance of BatchServiceResponse', function() {
      // uncomment below and update the code to test BatchServiceResponse
      //var instance = new AzureMachineLearningModelManagementService.BatchServiceResponse();
      //expect(instance).to.be.a(AzureMachineLearningModelManagementService.BatchServiceResponse);
    });

    it('should have the property appInsightsEnabled (base name: "appInsightsEnabled")', function() {
      // uncomment below and update the code to test the property appInsightsEnabled
      //var instance = new AzureMachineLearningModelManagementService.BatchServiceResponse();
      //expect(instance).to.be();
    });

    it('should have the property computeName (base name: "computeName")', function() {
      // uncomment below and update the code to test the property computeName
      //var instance = new AzureMachineLearningModelManagementService.BatchServiceResponse();
      //expect(instance).to.be();
    });

    it('should have the property entryScript (base name: "entryScript")', function() {
      // uncomment below and update the code to test the property entryScript
      //var instance = new AzureMachineLearningModelManagementService.BatchServiceResponse();
      //expect(instance).to.be();
    });

    it('should have the property environmentName (base name: "environmentName")', function() {
      // uncomment below and update the code to test the property environmentName
      //var instance = new AzureMachineLearningModelManagementService.BatchServiceResponse();
      //expect(instance).to.be();
    });

    it('should have the property environmentVersion (base name: "environmentVersion")', function() {
      // uncomment below and update the code to test the property environmentVersion
      //var instance = new AzureMachineLearningModelManagementService.BatchServiceResponse();
      //expect(instance).to.be();
    });

    it('should have the property errorThreshold (base name: "errorThreshold")', function() {
      // uncomment below and update the code to test the property errorThreshold
      //var instance = new AzureMachineLearningModelManagementService.BatchServiceResponse();
      //expect(instance).to.be();
    });

    it('should have the property inputFormat (base name: "inputFormat")', function() {
      // uncomment below and update the code to test the property inputFormat
      //var instance = new AzureMachineLearningModelManagementService.BatchServiceResponse();
      //expect(instance).to.be();
    });

    it('should have the property miniBatchSize (base name: "miniBatchSize")', function() {
      // uncomment below and update the code to test the property miniBatchSize
      //var instance = new AzureMachineLearningModelManagementService.BatchServiceResponse();
      //expect(instance).to.be();
    });

    it('should have the property modelDataCollection (base name: "modelDataCollection")', function() {
      // uncomment below and update the code to test the property modelDataCollection
      //var instance = new AzureMachineLearningModelManagementService.BatchServiceResponse();
      //expect(instance).to.be();
    });

    it('should have the property modelIds (base name: "modelIds")', function() {
      // uncomment below and update the code to test the property modelIds
      //var instance = new AzureMachineLearningModelManagementService.BatchServiceResponse();
      //expect(instance).to.be();
    });

    it('should have the property nodeCount (base name: "nodeCount")', function() {
      // uncomment below and update the code to test the property nodeCount
      //var instance = new AzureMachineLearningModelManagementService.BatchServiceResponse();
      //expect(instance).to.be();
    });

    it('should have the property outputAction (base name: "outputAction")', function() {
      // uncomment below and update the code to test the property outputAction
      //var instance = new AzureMachineLearningModelManagementService.BatchServiceResponse();
      //expect(instance).to.be();
    });

    it('should have the property processCountPerNode (base name: "processCountPerNode")', function() {
      // uncomment below and update the code to test the property processCountPerNode
      //var instance = new AzureMachineLearningModelManagementService.BatchServiceResponse();
      //expect(instance).to.be();
    });

    it('should have the property scoringUri (base name: "scoringUri")', function() {
      // uncomment below and update the code to test the property scoringUri
      //var instance = new AzureMachineLearningModelManagementService.BatchServiceResponse();
      //expect(instance).to.be();
    });

  });

}));
