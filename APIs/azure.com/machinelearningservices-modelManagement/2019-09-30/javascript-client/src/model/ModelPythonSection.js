/**
 * Azure Machine Learning Model Management Service
 * These APIs allow end users to manage Azure Machine Learning Models, Images, Profiles, and Services.
 *
 * The version of the OpenAPI document: 2019-09-30
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ModelPythonSection model module.
 * @module model/ModelPythonSection
 * @version 2019-09-30
 */
class ModelPythonSection {
    /**
     * Constructs a new <code>ModelPythonSection</code>.
     * @alias module:model/ModelPythonSection
     */
    constructor() { 
        
        ModelPythonSection.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ModelPythonSection</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ModelPythonSection} obj Optional instance to populate.
     * @return {module:model/ModelPythonSection} The populated <code>ModelPythonSection</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ModelPythonSection();

            if (data.hasOwnProperty('baseCondaEnvironment')) {
                obj['baseCondaEnvironment'] = ApiClient.convertToType(data['baseCondaEnvironment'], 'String');
            }
            if (data.hasOwnProperty('condaDependencies')) {
                obj['condaDependencies'] = ApiClient.convertToType(data['condaDependencies'], Object);
            }
            if (data.hasOwnProperty('interpreterPath')) {
                obj['interpreterPath'] = ApiClient.convertToType(data['interpreterPath'], 'String');
            }
            if (data.hasOwnProperty('userManagedDependencies')) {
                obj['userManagedDependencies'] = ApiClient.convertToType(data['userManagedDependencies'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ModelPythonSection</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ModelPythonSection</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['baseCondaEnvironment'] && !(typeof data['baseCondaEnvironment'] === 'string' || data['baseCondaEnvironment'] instanceof String)) {
            throw new Error("Expected the field `baseCondaEnvironment` to be a primitive type in the JSON string but got " + data['baseCondaEnvironment']);
        }
        // ensure the json data is a string
        if (data['interpreterPath'] && !(typeof data['interpreterPath'] === 'string' || data['interpreterPath'] instanceof String)) {
            throw new Error("Expected the field `interpreterPath` to be a primitive type in the JSON string but got " + data['interpreterPath']);
        }

        return true;
    }


}



/**
 * @member {String} baseCondaEnvironment
 */
ModelPythonSection.prototype['baseCondaEnvironment'] = undefined;

/**
 * @member {Object} condaDependencies
 */
ModelPythonSection.prototype['condaDependencies'] = undefined;

/**
 * The python interpreter path. This is only used when user_managed_dependencies=True.
 * @member {String} interpreterPath
 */
ModelPythonSection.prototype['interpreterPath'] = undefined;

/**
 * True means that AzureML reuses an existing python environment; False means that AzureML will create a python environment based on the Conda dependencies specification.
 * @member {Boolean} userManagedDependencies
 */
ModelPythonSection.prototype['userManagedDependencies'] = undefined;






export default ModelPythonSection;

