/**
 * Azure Machine Learning Model Management Service
 * These APIs allow end users to manage Azure Machine Learning Models, Images, Profiles, and Services.
 *
 * The version of the OpenAPI document: 2019-09-30
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AsyncOperationDetails from './AsyncOperationDetails';
import ModelErrorResponse from './ModelErrorResponse';

/**
 * The AsyncOperationStatus model module.
 * @module model/AsyncOperationStatus
 * @version 2019-09-30
 */
class AsyncOperationStatus {
    /**
     * Constructs a new <code>AsyncOperationStatus</code>.
     * The async operation status.
     * @alias module:model/AsyncOperationStatus
     */
    constructor() { 
        
        AsyncOperationStatus.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AsyncOperationStatus</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AsyncOperationStatus} obj Optional instance to populate.
     * @return {module:model/AsyncOperationStatus} The populated <code>AsyncOperationStatus</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AsyncOperationStatus();

            if (data.hasOwnProperty('createdTime')) {
                obj['createdTime'] = ApiClient.convertToType(data['createdTime'], 'Date');
            }
            if (data.hasOwnProperty('endTime')) {
                obj['endTime'] = ApiClient.convertToType(data['endTime'], 'Date');
            }
            if (data.hasOwnProperty('error')) {
                obj['error'] = ModelErrorResponse.constructFromObject(data['error']);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('operationDetails')) {
                obj['operationDetails'] = AsyncOperationDetails.constructFromObject(data['operationDetails']);
            }
            if (data.hasOwnProperty('operationLog')) {
                obj['operationLog'] = ApiClient.convertToType(data['operationLog'], 'String');
            }
            if (data.hasOwnProperty('operationType')) {
                obj['operationType'] = ApiClient.convertToType(data['operationType'], 'String');
            }
            if (data.hasOwnProperty('parentRequestId')) {
                obj['parentRequestId'] = ApiClient.convertToType(data['parentRequestId'], 'String');
            }
            if (data.hasOwnProperty('resourceLocation')) {
                obj['resourceLocation'] = ApiClient.convertToType(data['resourceLocation'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AsyncOperationStatus</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AsyncOperationStatus</code>.
     */
    static validateJSON(data) {
        // validate the optional field `error`
        if (data['error']) { // data not null
          ModelErrorResponse.validateJSON(data['error']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // validate the optional field `operationDetails`
        if (data['operationDetails']) { // data not null
          AsyncOperationDetails.validateJSON(data['operationDetails']);
        }
        // ensure the json data is a string
        if (data['operationLog'] && !(typeof data['operationLog'] === 'string' || data['operationLog'] instanceof String)) {
            throw new Error("Expected the field `operationLog` to be a primitive type in the JSON string but got " + data['operationLog']);
        }
        // ensure the json data is a string
        if (data['operationType'] && !(typeof data['operationType'] === 'string' || data['operationType'] instanceof String)) {
            throw new Error("Expected the field `operationType` to be a primitive type in the JSON string but got " + data['operationType']);
        }
        // ensure the json data is a string
        if (data['parentRequestId'] && !(typeof data['parentRequestId'] === 'string' || data['parentRequestId'] instanceof String)) {
            throw new Error("Expected the field `parentRequestId` to be a primitive type in the JSON string but got " + data['parentRequestId']);
        }
        // ensure the json data is a string
        if (data['resourceLocation'] && !(typeof data['resourceLocation'] === 'string' || data['resourceLocation'] instanceof String)) {
            throw new Error("Expected the field `resourceLocation` to be a primitive type in the JSON string but got " + data['resourceLocation']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }

        return true;
    }


}



/**
 * The async operation creation time (UTC).
 * @member {Date} createdTime
 */
AsyncOperationStatus.prototype['createdTime'] = undefined;

/**
 * The async operation end time (UTC)l
 * @member {Date} endTime
 */
AsyncOperationStatus.prototype['endTime'] = undefined;

/**
 * @member {module:model/ModelErrorResponse} error
 */
AsyncOperationStatus.prototype['error'] = undefined;

/**
 * The async operation id.
 * @member {String} id
 */
AsyncOperationStatus.prototype['id'] = undefined;

/**
 * @member {module:model/AsyncOperationDetails} operationDetails
 */
AsyncOperationStatus.prototype['operationDetails'] = undefined;

/**
 * The async operation log.
 * @member {String} operationLog
 */
AsyncOperationStatus.prototype['operationLog'] = undefined;

/**
 * The async operation type.
 * @member {String} operationType
 */
AsyncOperationStatus.prototype['operationType'] = undefined;

/**
 * The request id that created this operation
 * @member {String} parentRequestId
 */
AsyncOperationStatus.prototype['parentRequestId'] = undefined;

/**
 * The resource created/updated by the async operation.
 * @member {String} resourceLocation
 */
AsyncOperationStatus.prototype['resourceLocation'] = undefined;

/**
 * The async operation state.
 * @member {module:model/AsyncOperationStatus.StateEnum} state
 */
AsyncOperationStatus.prototype['state'] = undefined;





/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
AsyncOperationStatus['StateEnum'] = {

    /**
     * value: "NotStarted"
     * @const
     */
    "NotStarted": "NotStarted",

    /**
     * value: "Running"
     * @const
     */
    "Running": "Running",

    /**
     * value: "Cancelled"
     * @const
     */
    "Cancelled": "Cancelled",

    /**
     * value: "Succeeded"
     * @const
     */
    "Succeeded": "Succeeded",

    /**
     * value: "Failed"
     * @const
     */
    "Failed": "Failed",

    /**
     * value: "TimedOut"
     * @const
     */
    "TimedOut": "TimedOut"
};



export default AsyncOperationStatus;

