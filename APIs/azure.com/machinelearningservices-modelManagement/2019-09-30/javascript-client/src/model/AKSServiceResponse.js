/**
 * Azure Machine Learning Model Management Service
 * These APIs allow end users to manage Azure Machine Learning Models, Images, Profiles, and Services.
 *
 * The version of the OpenAPI document: 2019-09-30
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AKSReplicaStatus from './AKSReplicaStatus';
import AKSVariantResponse from './AKSVariantResponse';
import AutoScaler from './AutoScaler';
import ContainerResourceRequirements from './ContainerResourceRequirements';
import ImageResponseBase from './ImageResponseBase';
import LivenessProbeRequirements from './LivenessProbeRequirements';
import Model from './Model';
import ModelDataCollection from './ModelDataCollection';
import ModelEnvironmentDefinition from './ModelEnvironmentDefinition';
import ModelErrorResponse from './ModelErrorResponse';

/**
 * The AKSServiceResponse model module.
 * @module model/AKSServiceResponse
 * @version 2019-09-30
 */
class AKSServiceResponse {
    /**
     * Constructs a new <code>AKSServiceResponse</code>.
     * The response for an AKS service.
     * @alias module:model/AKSServiceResponse
     * @extends module:model/AKSVariantResponse
     * @implements module:model/AKSVariantResponse
     * @param computeType {module:model/AKSServiceResponse.ComputeTypeEnum} The compute environment type for the service.
     */
    constructor(computeType) { 
        AKSVariantResponse.initialize(this, computeType);
        AKSServiceResponse.initialize(this, computeType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, computeType) { 
    }

    /**
     * Constructs a <code>AKSServiceResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AKSServiceResponse} obj Optional instance to populate.
     * @return {module:model/AKSServiceResponse} The populated <code>AKSServiceResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AKSServiceResponse();
            AKSVariantResponse.constructFromObject(data, obj);
            AKSVariantResponse.constructFromObject(data, obj);

            if (data.hasOwnProperty('aadAuthEnabled')) {
                obj['aadAuthEnabled'] = ApiClient.convertToType(data['aadAuthEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('appInsightsEnabled')) {
                obj['appInsightsEnabled'] = ApiClient.convertToType(data['appInsightsEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('authEnabled')) {
                obj['authEnabled'] = ApiClient.convertToType(data['authEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('autoScaler')) {
                obj['autoScaler'] = AutoScaler.constructFromObject(data['autoScaler']);
            }
            if (data.hasOwnProperty('computeName')) {
                obj['computeName'] = ApiClient.convertToType(data['computeName'], 'String');
            }
            if (data.hasOwnProperty('containerResourceRequirements')) {
                obj['containerResourceRequirements'] = ContainerResourceRequirements.constructFromObject(data['containerResourceRequirements']);
            }
            if (data.hasOwnProperty('dataCollection')) {
                obj['dataCollection'] = ModelDataCollection.constructFromObject(data['dataCollection']);
            }
            if (data.hasOwnProperty('deploymentStatus')) {
                obj['deploymentStatus'] = AKSReplicaStatus.constructFromObject(data['deploymentStatus']);
            }
            if (data.hasOwnProperty('environment')) {
                obj['environment'] = ModelEnvironmentDefinition.constructFromObject(data['environment']);
            }
            if (data.hasOwnProperty('imageDetails')) {
                obj['imageDetails'] = ImageResponseBase.constructFromObject(data['imageDetails']);
            }
            if (data.hasOwnProperty('imageId')) {
                obj['imageId'] = ApiClient.convertToType(data['imageId'], 'String');
            }
            if (data.hasOwnProperty('livenessProbeRequirements')) {
                obj['livenessProbeRequirements'] = LivenessProbeRequirements.constructFromObject(data['livenessProbeRequirements']);
            }
            if (data.hasOwnProperty('maxConcurrentRequestsPerContainer')) {
                obj['maxConcurrentRequestsPerContainer'] = ApiClient.convertToType(data['maxConcurrentRequestsPerContainer'], 'Number');
            }
            if (data.hasOwnProperty('maxQueueWaitMs')) {
                obj['maxQueueWaitMs'] = ApiClient.convertToType(data['maxQueueWaitMs'], 'Number');
            }
            if (data.hasOwnProperty('modelConfigMap')) {
                obj['modelConfigMap'] = ApiClient.convertToType(data['modelConfigMap'], {'String': Object});
            }
            if (data.hasOwnProperty('models')) {
                obj['models'] = ApiClient.convertToType(data['models'], [Model]);
            }
            if (data.hasOwnProperty('namespace')) {
                obj['namespace'] = ApiClient.convertToType(data['namespace'], 'String');
            }
            if (data.hasOwnProperty('numReplicas')) {
                obj['numReplicas'] = ApiClient.convertToType(data['numReplicas'], 'Number');
            }
            if (data.hasOwnProperty('scoringTimeoutMs')) {
                obj['scoringTimeoutMs'] = ApiClient.convertToType(data['scoringTimeoutMs'], 'Number');
            }
            if (data.hasOwnProperty('scoringUri')) {
                obj['scoringUri'] = ApiClient.convertToType(data['scoringUri'], 'String');
            }
            if (data.hasOwnProperty('swaggerUri')) {
                obj['swaggerUri'] = ApiClient.convertToType(data['swaggerUri'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AKSServiceResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AKSServiceResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AKSServiceResponse.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `autoScaler`
        if (data['autoScaler']) { // data not null
          AutoScaler.validateJSON(data['autoScaler']);
        }
        // ensure the json data is a string
        if (data['computeName'] && !(typeof data['computeName'] === 'string' || data['computeName'] instanceof String)) {
            throw new Error("Expected the field `computeName` to be a primitive type in the JSON string but got " + data['computeName']);
        }
        // validate the optional field `containerResourceRequirements`
        if (data['containerResourceRequirements']) { // data not null
          ContainerResourceRequirements.validateJSON(data['containerResourceRequirements']);
        }
        // validate the optional field `dataCollection`
        if (data['dataCollection']) { // data not null
          ModelDataCollection.validateJSON(data['dataCollection']);
        }
        // validate the optional field `deploymentStatus`
        if (data['deploymentStatus']) { // data not null
          AKSReplicaStatus.validateJSON(data['deploymentStatus']);
        }
        // validate the optional field `environment`
        if (data['environment']) { // data not null
          ModelEnvironmentDefinition.validateJSON(data['environment']);
        }
        // validate the optional field `imageDetails`
        if (data['imageDetails']) { // data not null
          ImageResponseBase.validateJSON(data['imageDetails']);
        }
        // ensure the json data is a string
        if (data['imageId'] && !(typeof data['imageId'] === 'string' || data['imageId'] instanceof String)) {
            throw new Error("Expected the field `imageId` to be a primitive type in the JSON string but got " + data['imageId']);
        }
        // validate the optional field `livenessProbeRequirements`
        if (data['livenessProbeRequirements']) { // data not null
          LivenessProbeRequirements.validateJSON(data['livenessProbeRequirements']);
        }
        if (data['models']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['models'])) {
                throw new Error("Expected the field `models` to be an array in the JSON data but got " + data['models']);
            }
            // validate the optional field `models` (array)
            for (const item of data['models']) {
                Model.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['namespace'] && !(typeof data['namespace'] === 'string' || data['namespace'] instanceof String)) {
            throw new Error("Expected the field `namespace` to be a primitive type in the JSON string but got " + data['namespace']);
        }
        // ensure the json data is a string
        if (data['scoringUri'] && !(typeof data['scoringUri'] === 'string' || data['scoringUri'] instanceof String)) {
            throw new Error("Expected the field `scoringUri` to be a primitive type in the JSON string but got " + data['scoringUri']);
        }
        // ensure the json data is a string
        if (data['swaggerUri'] && !(typeof data['swaggerUri'] === 'string' || data['swaggerUri'] instanceof String)) {
            throw new Error("Expected the field `swaggerUri` to be a primitive type in the JSON string but got " + data['swaggerUri']);
        }

        return true;
    }


}

AKSServiceResponse.RequiredProperties = ["computeType"];

/**
 * Whether or not AAD authentication is enabled.
 * @member {Boolean} aadAuthEnabled
 */
AKSServiceResponse.prototype['aadAuthEnabled'] = undefined;

/**
 * Whether or not Application Insights is enabled.
 * @member {Boolean} appInsightsEnabled
 */
AKSServiceResponse.prototype['appInsightsEnabled'] = undefined;

/**
 * Whether or not authentication is enabled.
 * @member {Boolean} authEnabled
 */
AKSServiceResponse.prototype['authEnabled'] = undefined;

/**
 * @member {module:model/AutoScaler} autoScaler
 */
AKSServiceResponse.prototype['autoScaler'] = undefined;

/**
 * The name of the compute resource.
 * @member {String} computeName
 */
AKSServiceResponse.prototype['computeName'] = undefined;

/**
 * @member {module:model/ContainerResourceRequirements} containerResourceRequirements
 */
AKSServiceResponse.prototype['containerResourceRequirements'] = undefined;

/**
 * @member {module:model/ModelDataCollection} dataCollection
 */
AKSServiceResponse.prototype['dataCollection'] = undefined;

/**
 * @member {module:model/AKSReplicaStatus} deploymentStatus
 */
AKSServiceResponse.prototype['deploymentStatus'] = undefined;

/**
 * @member {module:model/ModelEnvironmentDefinition} environment
 */
AKSServiceResponse.prototype['environment'] = undefined;

/**
 * @member {module:model/ImageResponseBase} imageDetails
 */
AKSServiceResponse.prototype['imageDetails'] = undefined;

/**
 * The Id of the Image.
 * @member {String} imageId
 */
AKSServiceResponse.prototype['imageId'] = undefined;

/**
 * @member {module:model/LivenessProbeRequirements} livenessProbeRequirements
 */
AKSServiceResponse.prototype['livenessProbeRequirements'] = undefined;

/**
 * The maximum number of concurrent requests per container.
 * @member {Number} maxConcurrentRequestsPerContainer
 */
AKSServiceResponse.prototype['maxConcurrentRequestsPerContainer'] = undefined;

/**
 * Maximum time a request will wait in the queue (in milliseconds). After this time, the service will return 503 (Service Unavailable)
 * @member {Number} maxQueueWaitMs
 */
AKSServiceResponse.prototype['maxQueueWaitMs'] = undefined;

/**
 * Details on the models and configurations.
 * @member {Object.<String, Object>} modelConfigMap
 */
AKSServiceResponse.prototype['modelConfigMap'] = undefined;

/**
 * The list of models.
 * @member {Array.<module:model/Model>} models
 */
AKSServiceResponse.prototype['models'] = undefined;

/**
 * The Kubernetes namespace of the deployment.
 * @member {String} namespace
 */
AKSServiceResponse.prototype['namespace'] = undefined;

/**
 * The number of replicas on the cluster.
 * @member {Number} numReplicas
 */
AKSServiceResponse.prototype['numReplicas'] = undefined;

/**
 * The scoring timeout in milliseconds.
 * @member {Number} scoringTimeoutMs
 */
AKSServiceResponse.prototype['scoringTimeoutMs'] = undefined;

/**
 * The Uri for sending scoring requests.
 * @member {String} scoringUri
 */
AKSServiceResponse.prototype['scoringUri'] = undefined;

/**
 * The Uri for sending swagger requests.
 * @member {String} swaggerUri
 */
AKSServiceResponse.prototype['swaggerUri'] = undefined;


// Implement AKSVariantResponse interface:
/**
 * The compute environment type for the service.
 * @member {module:model/AKSVariantResponse.ComputeTypeEnum} computeType
 */
AKSVariantResponse.prototype['computeType'] = undefined;
/**
 * The time the service was created.
 * @member {Date} createdTime
 */
AKSVariantResponse.prototype['createdTime'] = undefined;
/**
 * The deployment type for the service.
 * @member {module:model/AKSVariantResponse.DeploymentTypeEnum} deploymentType
 */
AKSVariantResponse.prototype['deploymentType'] = undefined;
/**
 * The service description.
 * @member {String} description
 */
AKSVariantResponse.prototype['description'] = undefined;
/**
 * @member {module:model/ModelErrorResponse} error
 */
AKSVariantResponse.prototype['error'] = undefined;
/**
 * The service Id.
 * @member {String} id
 */
AKSVariantResponse.prototype['id'] = undefined;
/**
 * The service tag dictionary. Tags are mutable.
 * @member {Object.<String, String>} kvTags
 */
AKSVariantResponse.prototype['kvTags'] = undefined;
/**
 * The service name.
 * @member {String} name
 */
AKSVariantResponse.prototype['name'] = undefined;
/**
 * The ID of the latest asynchronous operation for this service.
 * @member {String} operationId
 */
AKSVariantResponse.prototype['operationId'] = undefined;
/**
 * The service property dictionary. Properties are immutable.
 * @member {Object.<String, String>} properties
 */
AKSVariantResponse.prototype['properties'] = undefined;
/**
 * The current state of the service.
 * @member {module:model/AKSVariantResponse.StateEnum} state
 */
AKSVariantResponse.prototype['state'] = undefined;
/**
 * The time the service was updated.
 * @member {Date} updatedTime
 */
AKSVariantResponse.prototype['updatedTime'] = undefined;
/**
 * Is this the default variant.
 * @member {Boolean} isDefault
 */
AKSVariantResponse.prototype['isDefault'] = undefined;
/**
 * The amount of traffic variant receives.
 * @member {Number} trafficPercentile
 */
AKSVariantResponse.prototype['trafficPercentile'] = undefined;
/**
 * The type of the variant.
 * @member {module:model/AKSVariantResponse.TypeEnum} type
 */
AKSVariantResponse.prototype['type'] = undefined;




export default AKSServiceResponse;

