/**
 * Azure Machine Learning Model Management Service
 * These APIs allow end users to manage Azure Machine Learning Models, Images, Profiles, and Services.
 *
 * The version of the OpenAPI document: 2019-09-30
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The LivenessProbeRequirements model module.
 * @module model/LivenessProbeRequirements
 * @version 2019-09-30
 */
class LivenessProbeRequirements {
    /**
     * Constructs a new <code>LivenessProbeRequirements</code>.
     * The liveness probe requirements.
     * @alias module:model/LivenessProbeRequirements
     */
    constructor() { 
        
        LivenessProbeRequirements.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LivenessProbeRequirements</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LivenessProbeRequirements} obj Optional instance to populate.
     * @return {module:model/LivenessProbeRequirements} The populated <code>LivenessProbeRequirements</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LivenessProbeRequirements();

            if (data.hasOwnProperty('failureThreshold')) {
                obj['failureThreshold'] = ApiClient.convertToType(data['failureThreshold'], 'Number');
            }
            if (data.hasOwnProperty('initialDelaySeconds')) {
                obj['initialDelaySeconds'] = ApiClient.convertToType(data['initialDelaySeconds'], 'Number');
            }
            if (data.hasOwnProperty('periodSeconds')) {
                obj['periodSeconds'] = ApiClient.convertToType(data['periodSeconds'], 'Number');
            }
            if (data.hasOwnProperty('successThreshold')) {
                obj['successThreshold'] = ApiClient.convertToType(data['successThreshold'], 'Number');
            }
            if (data.hasOwnProperty('timeoutSeconds')) {
                obj['timeoutSeconds'] = ApiClient.convertToType(data['timeoutSeconds'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LivenessProbeRequirements</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LivenessProbeRequirements</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * The number of failures to allow before returning an unhealthy status.
 * @member {Number} failureThreshold
 */
LivenessProbeRequirements.prototype['failureThreshold'] = undefined;

/**
 * The delay before the first probe in seconds.
 * @member {Number} initialDelaySeconds
 */
LivenessProbeRequirements.prototype['initialDelaySeconds'] = undefined;

/**
 * The length of time between probes in seconds.
 * @member {Number} periodSeconds
 */
LivenessProbeRequirements.prototype['periodSeconds'] = undefined;

/**
 * The number of successful probes before returning a healthy status.
 * @member {Number} successThreshold
 */
LivenessProbeRequirements.prototype['successThreshold'] = undefined;

/**
 * The probe timeout in seconds.
 * @member {Number} timeoutSeconds
 */
LivenessProbeRequirements.prototype['timeoutSeconds'] = undefined;






export default LivenessProbeRequirements;

