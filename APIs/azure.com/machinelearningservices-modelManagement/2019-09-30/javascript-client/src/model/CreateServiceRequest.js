/**
 * Azure Machine Learning Model Management Service
 * These APIs allow end users to manage Azure Machine Learning Models, Images, Profiles, and Services.
 *
 * The version of the OpenAPI document: 2019-09-30
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AuthKeys from './AuthKeys';
import EnvironmentImageRequest from './EnvironmentImageRequest';

/**
 * The CreateServiceRequest model module.
 * @module model/CreateServiceRequest
 * @version 2019-09-30
 */
class CreateServiceRequest {
    /**
     * Constructs a new <code>CreateServiceRequest</code>.
     * The base class for creating a service.
     * @alias module:model/CreateServiceRequest
     * @param computeType {module:model/CreateServiceRequest.ComputeTypeEnum} The compute environment type for the service.
     * @param name {String} The service name.
     */
    constructor(computeType, name) { 
        
        CreateServiceRequest.initialize(this, computeType, name);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, computeType, name) { 
        obj['computeType'] = computeType;
        obj['name'] = name;
    }

    /**
     * Constructs a <code>CreateServiceRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateServiceRequest} obj Optional instance to populate.
     * @return {module:model/CreateServiceRequest} The populated <code>CreateServiceRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateServiceRequest();

            if (data.hasOwnProperty('computeType')) {
                obj['computeType'] = ApiClient.convertToType(data['computeType'], 'String');
            }
            if (data.hasOwnProperty('deploymentType')) {
                obj['deploymentType'] = ApiClient.convertToType(data['deploymentType'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('environmentImageRequest')) {
                obj['environmentImageRequest'] = EnvironmentImageRequest.constructFromObject(data['environmentImageRequest']);
            }
            if (data.hasOwnProperty('imageId')) {
                obj['imageId'] = ApiClient.convertToType(data['imageId'], 'String');
            }
            if (data.hasOwnProperty('keys')) {
                obj['keys'] = AuthKeys.constructFromObject(data['keys']);
            }
            if (data.hasOwnProperty('kvTags')) {
                obj['kvTags'] = ApiClient.convertToType(data['kvTags'], {'String': 'String'});
            }
            if (data.hasOwnProperty('location')) {
                obj['location'] = ApiClient.convertToType(data['location'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('properties')) {
                obj['properties'] = ApiClient.convertToType(data['properties'], {'String': 'String'});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateServiceRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateServiceRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateServiceRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['computeType'] && !(typeof data['computeType'] === 'string' || data['computeType'] instanceof String)) {
            throw new Error("Expected the field `computeType` to be a primitive type in the JSON string but got " + data['computeType']);
        }
        // ensure the json data is a string
        if (data['deploymentType'] && !(typeof data['deploymentType'] === 'string' || data['deploymentType'] instanceof String)) {
            throw new Error("Expected the field `deploymentType` to be a primitive type in the JSON string but got " + data['deploymentType']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // validate the optional field `environmentImageRequest`
        if (data['environmentImageRequest']) { // data not null
          EnvironmentImageRequest.validateJSON(data['environmentImageRequest']);
        }
        // ensure the json data is a string
        if (data['imageId'] && !(typeof data['imageId'] === 'string' || data['imageId'] instanceof String)) {
            throw new Error("Expected the field `imageId` to be a primitive type in the JSON string but got " + data['imageId']);
        }
        // validate the optional field `keys`
        if (data['keys']) { // data not null
          AuthKeys.validateJSON(data['keys']);
        }
        // ensure the json data is a string
        if (data['location'] && !(typeof data['location'] === 'string' || data['location'] instanceof String)) {
            throw new Error("Expected the field `location` to be a primitive type in the JSON string but got " + data['location']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}

CreateServiceRequest.RequiredProperties = ["computeType", "name"];

/**
 * The compute environment type for the service.
 * @member {module:model/CreateServiceRequest.ComputeTypeEnum} computeType
 */
CreateServiceRequest.prototype['computeType'] = undefined;

/**
 * The deployment type for the service.
 * @member {module:model/CreateServiceRequest.DeploymentTypeEnum} deploymentType
 */
CreateServiceRequest.prototype['deploymentType'] = undefined;

/**
 * The description of the service.
 * @member {String} description
 */
CreateServiceRequest.prototype['description'] = undefined;

/**
 * @member {module:model/EnvironmentImageRequest} environmentImageRequest
 */
CreateServiceRequest.prototype['environmentImageRequest'] = undefined;

/**
 * The Image Id.
 * @member {String} imageId
 */
CreateServiceRequest.prototype['imageId'] = undefined;

/**
 * @member {module:model/AuthKeys} keys
 */
CreateServiceRequest.prototype['keys'] = undefined;

/**
 * The service tag dictionary. Tags are mutable.
 * @member {Object.<String, String>} kvTags
 */
CreateServiceRequest.prototype['kvTags'] = undefined;

/**
 * The location of the service.
 * @member {String} location
 */
CreateServiceRequest.prototype['location'] = undefined;

/**
 * The service name.
 * @member {String} name
 */
CreateServiceRequest.prototype['name'] = undefined;

/**
 * The service properties dictionary. Properties are immutable.
 * @member {Object.<String, String>} properties
 */
CreateServiceRequest.prototype['properties'] = undefined;





/**
 * Allowed values for the <code>computeType</code> property.
 * @enum {String}
 * @readonly
 */
CreateServiceRequest['ComputeTypeEnum'] = {

    /**
     * value: "ACI"
     * @const
     */
    "ACI": "ACI",

    /**
     * value: "AKS"
     * @const
     */
    "AKS": "AKS",

    /**
     * value: "AMLCOMPUTE"
     * @const
     */
    "AMLCOMPUTE": "AMLCOMPUTE",

    /**
     * value: "IOT"
     * @const
     */
    "IOT": "IOT",

    /**
     * value: "AKSENDPOINT"
     * @const
     */
    "AKSENDPOINT": "AKSENDPOINT",

    /**
     * value: "UNKNOWN"
     * @const
     */
    "UNKNOWN": "UNKNOWN"
};


/**
 * Allowed values for the <code>deploymentType</code> property.
 * @enum {String}
 * @readonly
 */
CreateServiceRequest['DeploymentTypeEnum'] = {

    /**
     * value: "GRPCRealtimeEndpoint"
     * @const
     */
    "GRPCRealtimeEndpoint": "GRPCRealtimeEndpoint",

    /**
     * value: "HttpRealtimeEndpoint"
     * @const
     */
    "HttpRealtimeEndpoint": "HttpRealtimeEndpoint",

    /**
     * value: "Batch"
     * @const
     */
    "Batch": "Batch"
};



export default CreateServiceRequest;

