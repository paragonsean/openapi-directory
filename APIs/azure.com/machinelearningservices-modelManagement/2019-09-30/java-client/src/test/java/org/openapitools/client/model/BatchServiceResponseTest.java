/*
 * Azure Machine Learning Model Management Service
 * These APIs allow end users to manage Azure Machine Learning Models, Images, Profiles, and Services.
 *
 * The version of the OpenAPI document: 2019-09-30
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.ModelDataCollection;
import org.openapitools.client.model.ModelErrorResponse;
import org.openapitools.client.model.ServiceResponseBase;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for BatchServiceResponse
 */
public class BatchServiceResponseTest {
    private final BatchServiceResponse model = new BatchServiceResponse();

    /**
     * Model tests for BatchServiceResponse
     */
    @Test
    public void testBatchServiceResponse() {
        // TODO: test BatchServiceResponse
    }

    /**
     * Test the property 'computeType'
     */
    @Test
    public void computeTypeTest() {
        // TODO: test computeType
    }

    /**
     * Test the property 'createdTime'
     */
    @Test
    public void createdTimeTest() {
        // TODO: test createdTime
    }

    /**
     * Test the property 'deploymentType'
     */
    @Test
    public void deploymentTypeTest() {
        // TODO: test deploymentType
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'error'
     */
    @Test
    public void errorTest() {
        // TODO: test error
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'kvTags'
     */
    @Test
    public void kvTagsTest() {
        // TODO: test kvTags
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'operationId'
     */
    @Test
    public void operationIdTest() {
        // TODO: test operationId
    }

    /**
     * Test the property 'properties'
     */
    @Test
    public void propertiesTest() {
        // TODO: test properties
    }

    /**
     * Test the property 'state'
     */
    @Test
    public void stateTest() {
        // TODO: test state
    }

    /**
     * Test the property 'updatedTime'
     */
    @Test
    public void updatedTimeTest() {
        // TODO: test updatedTime
    }

    /**
     * Test the property 'appInsightsEnabled'
     */
    @Test
    public void appInsightsEnabledTest() {
        // TODO: test appInsightsEnabled
    }

    /**
     * Test the property 'computeName'
     */
    @Test
    public void computeNameTest() {
        // TODO: test computeName
    }

    /**
     * Test the property 'entryScript'
     */
    @Test
    public void entryScriptTest() {
        // TODO: test entryScript
    }

    /**
     * Test the property 'environmentName'
     */
    @Test
    public void environmentNameTest() {
        // TODO: test environmentName
    }

    /**
     * Test the property 'environmentVersion'
     */
    @Test
    public void environmentVersionTest() {
        // TODO: test environmentVersion
    }

    /**
     * Test the property 'errorThreshold'
     */
    @Test
    public void errorThresholdTest() {
        // TODO: test errorThreshold
    }

    /**
     * Test the property 'inputFormat'
     */
    @Test
    public void inputFormatTest() {
        // TODO: test inputFormat
    }

    /**
     * Test the property 'miniBatchSize'
     */
    @Test
    public void miniBatchSizeTest() {
        // TODO: test miniBatchSize
    }

    /**
     * Test the property 'modelDataCollection'
     */
    @Test
    public void modelDataCollectionTest() {
        // TODO: test modelDataCollection
    }

    /**
     * Test the property 'modelIds'
     */
    @Test
    public void modelIdsTest() {
        // TODO: test modelIds
    }

    /**
     * Test the property 'nodeCount'
     */
    @Test
    public void nodeCountTest() {
        // TODO: test nodeCount
    }

    /**
     * Test the property 'outputAction'
     */
    @Test
    public void outputActionTest() {
        // TODO: test outputAction
    }

    /**
     * Test the property 'processCountPerNode'
     */
    @Test
    public void processCountPerNodeTest() {
        // TODO: test processCountPerNode
    }

    /**
     * Test the property 'scoringUri'
     */
    @Test
    public void scoringUriTest() {
        // TODO: test scoringUri
    }

}
