/*
 * Azure Machine Learning Model Management Service
 * These APIs allow end users to manage Azure Machine Learning Models, Images, Profiles, and Services.
 *
 * The version of the OpenAPI document: 2019-09-30
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.AKSReplicaStatus;
import org.openapitools.client.model.AKSVariantResponse;
import org.openapitools.client.model.AutoScaler;
import org.openapitools.client.model.ContainerResourceRequirements;
import org.openapitools.client.model.ImageResponseBase;
import org.openapitools.client.model.LivenessProbeRequirements;
import org.openapitools.client.model.Model;
import org.openapitools.client.model.ModelDataCollection;
import org.openapitools.client.model.ModelEnvironmentDefinition;
import org.openapitools.client.model.ModelErrorResponse;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The response for an AKS service.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:35:06.363531-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AKSServiceResponse extends AKSVariantResponse {
  public static final String SERIALIZED_NAME_AAD_AUTH_ENABLED = "aadAuthEnabled";
  @SerializedName(SERIALIZED_NAME_AAD_AUTH_ENABLED)
  private Boolean aadAuthEnabled;

  public static final String SERIALIZED_NAME_APP_INSIGHTS_ENABLED = "appInsightsEnabled";
  @SerializedName(SERIALIZED_NAME_APP_INSIGHTS_ENABLED)
  private Boolean appInsightsEnabled;

  public static final String SERIALIZED_NAME_AUTH_ENABLED = "authEnabled";
  @SerializedName(SERIALIZED_NAME_AUTH_ENABLED)
  private Boolean authEnabled;

  public static final String SERIALIZED_NAME_AUTO_SCALER = "autoScaler";
  @SerializedName(SERIALIZED_NAME_AUTO_SCALER)
  private AutoScaler autoScaler;

  public static final String SERIALIZED_NAME_COMPUTE_NAME = "computeName";
  @SerializedName(SERIALIZED_NAME_COMPUTE_NAME)
  private String computeName;

  public static final String SERIALIZED_NAME_CONTAINER_RESOURCE_REQUIREMENTS = "containerResourceRequirements";
  @SerializedName(SERIALIZED_NAME_CONTAINER_RESOURCE_REQUIREMENTS)
  private ContainerResourceRequirements containerResourceRequirements;

  public static final String SERIALIZED_NAME_DATA_COLLECTION = "dataCollection";
  @SerializedName(SERIALIZED_NAME_DATA_COLLECTION)
  private ModelDataCollection dataCollection;

  public static final String SERIALIZED_NAME_DEPLOYMENT_STATUS = "deploymentStatus";
  @SerializedName(SERIALIZED_NAME_DEPLOYMENT_STATUS)
  private AKSReplicaStatus deploymentStatus;

  public static final String SERIALIZED_NAME_ENVIRONMENT = "environment";
  @SerializedName(SERIALIZED_NAME_ENVIRONMENT)
  private ModelEnvironmentDefinition environment;

  public static final String SERIALIZED_NAME_IMAGE_DETAILS = "imageDetails";
  @SerializedName(SERIALIZED_NAME_IMAGE_DETAILS)
  private ImageResponseBase imageDetails;

  public static final String SERIALIZED_NAME_IMAGE_ID = "imageId";
  @SerializedName(SERIALIZED_NAME_IMAGE_ID)
  private String imageId;

  public static final String SERIALIZED_NAME_LIVENESS_PROBE_REQUIREMENTS = "livenessProbeRequirements";
  @SerializedName(SERIALIZED_NAME_LIVENESS_PROBE_REQUIREMENTS)
  private LivenessProbeRequirements livenessProbeRequirements;

  public static final String SERIALIZED_NAME_MAX_CONCURRENT_REQUESTS_PER_CONTAINER = "maxConcurrentRequestsPerContainer";
  @SerializedName(SERIALIZED_NAME_MAX_CONCURRENT_REQUESTS_PER_CONTAINER)
  private Integer maxConcurrentRequestsPerContainer;

  public static final String SERIALIZED_NAME_MAX_QUEUE_WAIT_MS = "maxQueueWaitMs";
  @SerializedName(SERIALIZED_NAME_MAX_QUEUE_WAIT_MS)
  private Integer maxQueueWaitMs;

  public static final String SERIALIZED_NAME_MODEL_CONFIG_MAP = "modelConfigMap";
  @SerializedName(SERIALIZED_NAME_MODEL_CONFIG_MAP)
  private Map<String, Object> modelConfigMap = new HashMap<>();

  public static final String SERIALIZED_NAME_MODELS = "models";
  @SerializedName(SERIALIZED_NAME_MODELS)
  private List<Model> models = new ArrayList<>();

  public static final String SERIALIZED_NAME_NAMESPACE = "namespace";
  @SerializedName(SERIALIZED_NAME_NAMESPACE)
  private String namespace;

  public static final String SERIALIZED_NAME_NUM_REPLICAS = "numReplicas";
  @SerializedName(SERIALIZED_NAME_NUM_REPLICAS)
  private Integer numReplicas;

  public static final String SERIALIZED_NAME_SCORING_TIMEOUT_MS = "scoringTimeoutMs";
  @SerializedName(SERIALIZED_NAME_SCORING_TIMEOUT_MS)
  private Integer scoringTimeoutMs;

  public static final String SERIALIZED_NAME_SCORING_URI = "scoringUri";
  @SerializedName(SERIALIZED_NAME_SCORING_URI)
  private String scoringUri;

  public static final String SERIALIZED_NAME_SWAGGER_URI = "swaggerUri";
  @SerializedName(SERIALIZED_NAME_SWAGGER_URI)
  private String swaggerUri;

  public AKSServiceResponse() {
    this.computeType = this.getClass().getSimpleName();
  }

  public AKSServiceResponse aadAuthEnabled(Boolean aadAuthEnabled) {
    this.aadAuthEnabled = aadAuthEnabled;
    return this;
  }

  /**
   * Whether or not AAD authentication is enabled.
   * @return aadAuthEnabled
   */
  @javax.annotation.Nullable
  public Boolean getAadAuthEnabled() {
    return aadAuthEnabled;
  }

  public void setAadAuthEnabled(Boolean aadAuthEnabled) {
    this.aadAuthEnabled = aadAuthEnabled;
  }


  public AKSServiceResponse appInsightsEnabled(Boolean appInsightsEnabled) {
    this.appInsightsEnabled = appInsightsEnabled;
    return this;
  }

  /**
   * Whether or not Application Insights is enabled.
   * @return appInsightsEnabled
   */
  @javax.annotation.Nullable
  public Boolean getAppInsightsEnabled() {
    return appInsightsEnabled;
  }

  public void setAppInsightsEnabled(Boolean appInsightsEnabled) {
    this.appInsightsEnabled = appInsightsEnabled;
  }


  public AKSServiceResponse authEnabled(Boolean authEnabled) {
    this.authEnabled = authEnabled;
    return this;
  }

  /**
   * Whether or not authentication is enabled.
   * @return authEnabled
   */
  @javax.annotation.Nullable
  public Boolean getAuthEnabled() {
    return authEnabled;
  }

  public void setAuthEnabled(Boolean authEnabled) {
    this.authEnabled = authEnabled;
  }


  public AKSServiceResponse autoScaler(AutoScaler autoScaler) {
    this.autoScaler = autoScaler;
    return this;
  }

  /**
   * Get autoScaler
   * @return autoScaler
   */
  @javax.annotation.Nullable
  public AutoScaler getAutoScaler() {
    return autoScaler;
  }

  public void setAutoScaler(AutoScaler autoScaler) {
    this.autoScaler = autoScaler;
  }


  public AKSServiceResponse computeName(String computeName) {
    this.computeName = computeName;
    return this;
  }

  /**
   * The name of the compute resource.
   * @return computeName
   */
  @javax.annotation.Nullable
  public String getComputeName() {
    return computeName;
  }

  public void setComputeName(String computeName) {
    this.computeName = computeName;
  }


  public AKSServiceResponse containerResourceRequirements(ContainerResourceRequirements containerResourceRequirements) {
    this.containerResourceRequirements = containerResourceRequirements;
    return this;
  }

  /**
   * Get containerResourceRequirements
   * @return containerResourceRequirements
   */
  @javax.annotation.Nullable
  public ContainerResourceRequirements getContainerResourceRequirements() {
    return containerResourceRequirements;
  }

  public void setContainerResourceRequirements(ContainerResourceRequirements containerResourceRequirements) {
    this.containerResourceRequirements = containerResourceRequirements;
  }


  public AKSServiceResponse dataCollection(ModelDataCollection dataCollection) {
    this.dataCollection = dataCollection;
    return this;
  }

  /**
   * Get dataCollection
   * @return dataCollection
   */
  @javax.annotation.Nullable
  public ModelDataCollection getDataCollection() {
    return dataCollection;
  }

  public void setDataCollection(ModelDataCollection dataCollection) {
    this.dataCollection = dataCollection;
  }


  public AKSServiceResponse deploymentStatus(AKSReplicaStatus deploymentStatus) {
    this.deploymentStatus = deploymentStatus;
    return this;
  }

  /**
   * Get deploymentStatus
   * @return deploymentStatus
   */
  @javax.annotation.Nullable
  public AKSReplicaStatus getDeploymentStatus() {
    return deploymentStatus;
  }

  public void setDeploymentStatus(AKSReplicaStatus deploymentStatus) {
    this.deploymentStatus = deploymentStatus;
  }


  public AKSServiceResponse environment(ModelEnvironmentDefinition environment) {
    this.environment = environment;
    return this;
  }

  /**
   * Get environment
   * @return environment
   */
  @javax.annotation.Nullable
  public ModelEnvironmentDefinition getEnvironment() {
    return environment;
  }

  public void setEnvironment(ModelEnvironmentDefinition environment) {
    this.environment = environment;
  }


  public AKSServiceResponse imageDetails(ImageResponseBase imageDetails) {
    this.imageDetails = imageDetails;
    return this;
  }

  /**
   * Get imageDetails
   * @return imageDetails
   */
  @javax.annotation.Nullable
  public ImageResponseBase getImageDetails() {
    return imageDetails;
  }

  public void setImageDetails(ImageResponseBase imageDetails) {
    this.imageDetails = imageDetails;
  }


  public AKSServiceResponse imageId(String imageId) {
    this.imageId = imageId;
    return this;
  }

  /**
   * The Id of the Image.
   * @return imageId
   */
  @javax.annotation.Nullable
  public String getImageId() {
    return imageId;
  }

  public void setImageId(String imageId) {
    this.imageId = imageId;
  }


  public AKSServiceResponse livenessProbeRequirements(LivenessProbeRequirements livenessProbeRequirements) {
    this.livenessProbeRequirements = livenessProbeRequirements;
    return this;
  }

  /**
   * Get livenessProbeRequirements
   * @return livenessProbeRequirements
   */
  @javax.annotation.Nullable
  public LivenessProbeRequirements getLivenessProbeRequirements() {
    return livenessProbeRequirements;
  }

  public void setLivenessProbeRequirements(LivenessProbeRequirements livenessProbeRequirements) {
    this.livenessProbeRequirements = livenessProbeRequirements;
  }


  public AKSServiceResponse maxConcurrentRequestsPerContainer(Integer maxConcurrentRequestsPerContainer) {
    this.maxConcurrentRequestsPerContainer = maxConcurrentRequestsPerContainer;
    return this;
  }

  /**
   * The maximum number of concurrent requests per container.
   * @return maxConcurrentRequestsPerContainer
   */
  @javax.annotation.Nullable
  public Integer getMaxConcurrentRequestsPerContainer() {
    return maxConcurrentRequestsPerContainer;
  }

  public void setMaxConcurrentRequestsPerContainer(Integer maxConcurrentRequestsPerContainer) {
    this.maxConcurrentRequestsPerContainer = maxConcurrentRequestsPerContainer;
  }


  public AKSServiceResponse maxQueueWaitMs(Integer maxQueueWaitMs) {
    this.maxQueueWaitMs = maxQueueWaitMs;
    return this;
  }

  /**
   * Maximum time a request will wait in the queue (in milliseconds). After this time, the service will return 503 (Service Unavailable)
   * @return maxQueueWaitMs
   */
  @javax.annotation.Nullable
  public Integer getMaxQueueWaitMs() {
    return maxQueueWaitMs;
  }

  public void setMaxQueueWaitMs(Integer maxQueueWaitMs) {
    this.maxQueueWaitMs = maxQueueWaitMs;
  }


  public AKSServiceResponse modelConfigMap(Map<String, Object> modelConfigMap) {
    this.modelConfigMap = modelConfigMap;
    return this;
  }

  public AKSServiceResponse putModelConfigMapItem(String key, Object modelConfigMapItem) {
    if (this.modelConfigMap == null) {
      this.modelConfigMap = new HashMap<>();
    }
    this.modelConfigMap.put(key, modelConfigMapItem);
    return this;
  }

  /**
   * Details on the models and configurations.
   * @return modelConfigMap
   */
  @javax.annotation.Nullable
  public Map<String, Object> getModelConfigMap() {
    return modelConfigMap;
  }

  public void setModelConfigMap(Map<String, Object> modelConfigMap) {
    this.modelConfigMap = modelConfigMap;
  }


  public AKSServiceResponse models(List<Model> models) {
    this.models = models;
    return this;
  }

  public AKSServiceResponse addModelsItem(Model modelsItem) {
    if (this.models == null) {
      this.models = new ArrayList<>();
    }
    this.models.add(modelsItem);
    return this;
  }

  /**
   * The list of models.
   * @return models
   */
  @javax.annotation.Nullable
  public List<Model> getModels() {
    return models;
  }

  public void setModels(List<Model> models) {
    this.models = models;
  }


  public AKSServiceResponse namespace(String namespace) {
    this.namespace = namespace;
    return this;
  }

  /**
   * The Kubernetes namespace of the deployment.
   * @return namespace
   */
  @javax.annotation.Nullable
  public String getNamespace() {
    return namespace;
  }

  public void setNamespace(String namespace) {
    this.namespace = namespace;
  }


  public AKSServiceResponse numReplicas(Integer numReplicas) {
    this.numReplicas = numReplicas;
    return this;
  }

  /**
   * The number of replicas on the cluster.
   * @return numReplicas
   */
  @javax.annotation.Nullable
  public Integer getNumReplicas() {
    return numReplicas;
  }

  public void setNumReplicas(Integer numReplicas) {
    this.numReplicas = numReplicas;
  }


  public AKSServiceResponse scoringTimeoutMs(Integer scoringTimeoutMs) {
    this.scoringTimeoutMs = scoringTimeoutMs;
    return this;
  }

  /**
   * The scoring timeout in milliseconds.
   * @return scoringTimeoutMs
   */
  @javax.annotation.Nullable
  public Integer getScoringTimeoutMs() {
    return scoringTimeoutMs;
  }

  public void setScoringTimeoutMs(Integer scoringTimeoutMs) {
    this.scoringTimeoutMs = scoringTimeoutMs;
  }


  public AKSServiceResponse scoringUri(String scoringUri) {
    this.scoringUri = scoringUri;
    return this;
  }

  /**
   * The Uri for sending scoring requests.
   * @return scoringUri
   */
  @javax.annotation.Nullable
  public String getScoringUri() {
    return scoringUri;
  }

  public void setScoringUri(String scoringUri) {
    this.scoringUri = scoringUri;
  }


  public AKSServiceResponse swaggerUri(String swaggerUri) {
    this.swaggerUri = swaggerUri;
    return this;
  }

  /**
   * The Uri for sending swagger requests.
   * @return swaggerUri
   */
  @javax.annotation.Nullable
  public String getSwaggerUri() {
    return swaggerUri;
  }

  public void setSwaggerUri(String swaggerUri) {
    this.swaggerUri = swaggerUri;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AKSServiceResponse akSServiceResponse = (AKSServiceResponse) o;
    return Objects.equals(this.aadAuthEnabled, akSServiceResponse.aadAuthEnabled) &&
        Objects.equals(this.appInsightsEnabled, akSServiceResponse.appInsightsEnabled) &&
        Objects.equals(this.authEnabled, akSServiceResponse.authEnabled) &&
        Objects.equals(this.autoScaler, akSServiceResponse.autoScaler) &&
        Objects.equals(this.computeName, akSServiceResponse.computeName) &&
        Objects.equals(this.containerResourceRequirements, akSServiceResponse.containerResourceRequirements) &&
        Objects.equals(this.dataCollection, akSServiceResponse.dataCollection) &&
        Objects.equals(this.deploymentStatus, akSServiceResponse.deploymentStatus) &&
        Objects.equals(this.environment, akSServiceResponse.environment) &&
        Objects.equals(this.imageDetails, akSServiceResponse.imageDetails) &&
        Objects.equals(this.imageId, akSServiceResponse.imageId) &&
        Objects.equals(this.livenessProbeRequirements, akSServiceResponse.livenessProbeRequirements) &&
        Objects.equals(this.maxConcurrentRequestsPerContainer, akSServiceResponse.maxConcurrentRequestsPerContainer) &&
        Objects.equals(this.maxQueueWaitMs, akSServiceResponse.maxQueueWaitMs) &&
        Objects.equals(this.modelConfigMap, akSServiceResponse.modelConfigMap) &&
        Objects.equals(this.models, akSServiceResponse.models) &&
        Objects.equals(this.namespace, akSServiceResponse.namespace) &&
        Objects.equals(this.numReplicas, akSServiceResponse.numReplicas) &&
        Objects.equals(this.scoringTimeoutMs, akSServiceResponse.scoringTimeoutMs) &&
        Objects.equals(this.scoringUri, akSServiceResponse.scoringUri) &&
        Objects.equals(this.swaggerUri, akSServiceResponse.swaggerUri) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(aadAuthEnabled, appInsightsEnabled, authEnabled, autoScaler, computeName, containerResourceRequirements, dataCollection, deploymentStatus, environment, imageDetails, imageId, livenessProbeRequirements, maxConcurrentRequestsPerContainer, maxQueueWaitMs, modelConfigMap, models, namespace, numReplicas, scoringTimeoutMs, scoringUri, swaggerUri, super.hashCode());
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AKSServiceResponse {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    aadAuthEnabled: ").append(toIndentedString(aadAuthEnabled)).append("\n");
    sb.append("    appInsightsEnabled: ").append(toIndentedString(appInsightsEnabled)).append("\n");
    sb.append("    authEnabled: ").append(toIndentedString(authEnabled)).append("\n");
    sb.append("    autoScaler: ").append(toIndentedString(autoScaler)).append("\n");
    sb.append("    computeName: ").append(toIndentedString(computeName)).append("\n");
    sb.append("    containerResourceRequirements: ").append(toIndentedString(containerResourceRequirements)).append("\n");
    sb.append("    dataCollection: ").append(toIndentedString(dataCollection)).append("\n");
    sb.append("    deploymentStatus: ").append(toIndentedString(deploymentStatus)).append("\n");
    sb.append("    environment: ").append(toIndentedString(environment)).append("\n");
    sb.append("    imageDetails: ").append(toIndentedString(imageDetails)).append("\n");
    sb.append("    imageId: ").append(toIndentedString(imageId)).append("\n");
    sb.append("    livenessProbeRequirements: ").append(toIndentedString(livenessProbeRequirements)).append("\n");
    sb.append("    maxConcurrentRequestsPerContainer: ").append(toIndentedString(maxConcurrentRequestsPerContainer)).append("\n");
    sb.append("    maxQueueWaitMs: ").append(toIndentedString(maxQueueWaitMs)).append("\n");
    sb.append("    modelConfigMap: ").append(toIndentedString(modelConfigMap)).append("\n");
    sb.append("    models: ").append(toIndentedString(models)).append("\n");
    sb.append("    namespace: ").append(toIndentedString(namespace)).append("\n");
    sb.append("    numReplicas: ").append(toIndentedString(numReplicas)).append("\n");
    sb.append("    scoringTimeoutMs: ").append(toIndentedString(scoringTimeoutMs)).append("\n");
    sb.append("    scoringUri: ").append(toIndentedString(scoringUri)).append("\n");
    sb.append("    swaggerUri: ").append(toIndentedString(swaggerUri)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("computeType");
    openapiFields.add("createdTime");
    openapiFields.add("deploymentType");
    openapiFields.add("description");
    openapiFields.add("error");
    openapiFields.add("id");
    openapiFields.add("kvTags");
    openapiFields.add("name");
    openapiFields.add("operationId");
    openapiFields.add("properties");
    openapiFields.add("state");
    openapiFields.add("updatedTime");
    openapiFields.add("isDefault");
    openapiFields.add("trafficPercentile");
    openapiFields.add("type");
    openapiFields.add("aadAuthEnabled");
    openapiFields.add("appInsightsEnabled");
    openapiFields.add("authEnabled");
    openapiFields.add("autoScaler");
    openapiFields.add("computeName");
    openapiFields.add("containerResourceRequirements");
    openapiFields.add("dataCollection");
    openapiFields.add("deploymentStatus");
    openapiFields.add("environment");
    openapiFields.add("imageDetails");
    openapiFields.add("imageId");
    openapiFields.add("livenessProbeRequirements");
    openapiFields.add("maxConcurrentRequestsPerContainer");
    openapiFields.add("maxQueueWaitMs");
    openapiFields.add("modelConfigMap");
    openapiFields.add("models");
    openapiFields.add("namespace");
    openapiFields.add("numReplicas");
    openapiFields.add("scoringTimeoutMs");
    openapiFields.add("scoringUri");
    openapiFields.add("swaggerUri");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("computeType");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AKSServiceResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AKSServiceResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AKSServiceResponse is not found in the empty JSON string", AKSServiceResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AKSServiceResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AKSServiceResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : AKSServiceResponse.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AKSServiceResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AKSServiceResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AKSServiceResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AKSServiceResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<AKSServiceResponse>() {
           @Override
           public void write(JsonWriter out, AKSServiceResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AKSServiceResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AKSServiceResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AKSServiceResponse
   * @throws IOException if the JSON string is invalid with respect to AKSServiceResponse
   */
  public static AKSServiceResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AKSServiceResponse.class);
  }

  /**
   * Convert an instance of AKSServiceResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

