# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.model_error_response import ModelErrorResponse
from openapi_server import util


class ProfileResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_time: datetime=None, description: str=None, error: ModelErrorResponse=None, image_id: str=None, input_data: str=None, kv_tags: Dict[str, str]=None, name: str=None, profile_run_result: str=None, profiling_error_logs: str=None, properties: Dict[str, str]=None, recommendation_latency_in_ms: float=None, recommended_cpu: float=None, recommended_memory_in_gb: float=None, state: str=None):
        """ProfileResponse - a model defined in OpenAPI

        :param created_time: The created_time of this ProfileResponse.
        :param description: The description of this ProfileResponse.
        :param error: The error of this ProfileResponse.
        :param image_id: The image_id of this ProfileResponse.
        :param input_data: The input_data of this ProfileResponse.
        :param kv_tags: The kv_tags of this ProfileResponse.
        :param name: The name of this ProfileResponse.
        :param profile_run_result: The profile_run_result of this ProfileResponse.
        :param profiling_error_logs: The profiling_error_logs of this ProfileResponse.
        :param properties: The properties of this ProfileResponse.
        :param recommendation_latency_in_ms: The recommendation_latency_in_ms of this ProfileResponse.
        :param recommended_cpu: The recommended_cpu of this ProfileResponse.
        :param recommended_memory_in_gb: The recommended_memory_in_gb of this ProfileResponse.
        :param state: The state of this ProfileResponse.
        """
        self.openapi_types = {
            'created_time': datetime,
            'description': str,
            'error': ModelErrorResponse,
            'image_id': str,
            'input_data': str,
            'kv_tags': Dict[str, str],
            'name': str,
            'profile_run_result': str,
            'profiling_error_logs': str,
            'properties': Dict[str, str],
            'recommendation_latency_in_ms': float,
            'recommended_cpu': float,
            'recommended_memory_in_gb': float,
            'state': str
        }

        self.attribute_map = {
            'created_time': 'createdTime',
            'description': 'description',
            'error': 'error',
            'image_id': 'imageId',
            'input_data': 'inputData',
            'kv_tags': 'kvTags',
            'name': 'name',
            'profile_run_result': 'profileRunResult',
            'profiling_error_logs': 'profilingErrorLogs',
            'properties': 'properties',
            'recommendation_latency_in_ms': 'recommendationLatencyInMs',
            'recommended_cpu': 'recommendedCpu',
            'recommended_memory_in_gb': 'recommendedMemoryInGB',
            'state': 'state'
        }

        self._created_time = created_time
        self._description = description
        self._error = error
        self._image_id = image_id
        self._input_data = input_data
        self._kv_tags = kv_tags
        self._name = name
        self._profile_run_result = profile_run_result
        self._profiling_error_logs = profiling_error_logs
        self._properties = properties
        self._recommendation_latency_in_ms = recommendation_latency_in_ms
        self._recommended_cpu = recommended_cpu
        self._recommended_memory_in_gb = recommended_memory_in_gb
        self._state = state

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProfileResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProfileResponse of this ProfileResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_time(self):
        """Gets the created_time of this ProfileResponse.

        The profile creation time (UTC).

        :return: The created_time of this ProfileResponse.
        :rtype: datetime
        """
        return self._created_time

    @created_time.setter
    def created_time(self, created_time):
        """Sets the created_time of this ProfileResponse.

        The profile creation time (UTC).

        :param created_time: The created_time of this ProfileResponse.
        :type created_time: datetime
        """

        self._created_time = created_time

    @property
    def description(self):
        """Gets the description of this ProfileResponse.

        The profile description.

        :return: The description of this ProfileResponse.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ProfileResponse.

        The profile description.

        :param description: The description of this ProfileResponse.
        :type description: str
        """

        self._description = description

    @property
    def error(self):
        """Gets the error of this ProfileResponse.


        :return: The error of this ProfileResponse.
        :rtype: ModelErrorResponse
        """
        return self._error

    @error.setter
    def error(self, error):
        """Sets the error of this ProfileResponse.


        :param error: The error of this ProfileResponse.
        :type error: ModelErrorResponse
        """

        self._error = error

    @property
    def image_id(self):
        """Gets the image_id of this ProfileResponse.

        The Image Id.

        :return: The image_id of this ProfileResponse.
        :rtype: str
        """
        return self._image_id

    @image_id.setter
    def image_id(self, image_id):
        """Sets the image_id of this ProfileResponse.

        The Image Id.

        :param image_id: The image_id of this ProfileResponse.
        :type image_id: str
        """

        self._image_id = image_id

    @property
    def input_data(self):
        """Gets the input_data of this ProfileResponse.

        The input data.

        :return: The input_data of this ProfileResponse.
        :rtype: str
        """
        return self._input_data

    @input_data.setter
    def input_data(self, input_data):
        """Sets the input_data of this ProfileResponse.

        The input data.

        :param input_data: The input_data of this ProfileResponse.
        :type input_data: str
        """

        self._input_data = input_data

    @property
    def kv_tags(self):
        """Gets the kv_tags of this ProfileResponse.

        The profile tags dictionary. Tags are mutable.

        :return: The kv_tags of this ProfileResponse.
        :rtype: Dict[str, str]
        """
        return self._kv_tags

    @kv_tags.setter
    def kv_tags(self, kv_tags):
        """Sets the kv_tags of this ProfileResponse.

        The profile tags dictionary. Tags are mutable.

        :param kv_tags: The kv_tags of this ProfileResponse.
        :type kv_tags: Dict[str, str]
        """

        self._kv_tags = kv_tags

    @property
    def name(self):
        """Gets the name of this ProfileResponse.

        The profile name.

        :return: The name of this ProfileResponse.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ProfileResponse.

        The profile name.

        :param name: The name of this ProfileResponse.
        :type name: str
        """

        self._name = name

    @property
    def profile_run_result(self):
        """Gets the profile_run_result of this ProfileResponse.

        The profile run result.

        :return: The profile_run_result of this ProfileResponse.
        :rtype: str
        """
        return self._profile_run_result

    @profile_run_result.setter
    def profile_run_result(self, profile_run_result):
        """Sets the profile_run_result of this ProfileResponse.

        The profile run result.

        :param profile_run_result: The profile_run_result of this ProfileResponse.
        :type profile_run_result: str
        """

        self._profile_run_result = profile_run_result

    @property
    def profiling_error_logs(self):
        """Gets the profiling_error_logs of this ProfileResponse.

        The profiling error logs.

        :return: The profiling_error_logs of this ProfileResponse.
        :rtype: str
        """
        return self._profiling_error_logs

    @profiling_error_logs.setter
    def profiling_error_logs(self, profiling_error_logs):
        """Sets the profiling_error_logs of this ProfileResponse.

        The profiling error logs.

        :param profiling_error_logs: The profiling_error_logs of this ProfileResponse.
        :type profiling_error_logs: str
        """

        self._profiling_error_logs = profiling_error_logs

    @property
    def properties(self):
        """Gets the properties of this ProfileResponse.

        The profile properties dictionary. Properties are immutable.

        :return: The properties of this ProfileResponse.
        :rtype: Dict[str, str]
        """
        return self._properties

    @properties.setter
    def properties(self, properties):
        """Sets the properties of this ProfileResponse.

        The profile properties dictionary. Properties are immutable.

        :param properties: The properties of this ProfileResponse.
        :type properties: Dict[str, str]
        """

        self._properties = properties

    @property
    def recommendation_latency_in_ms(self):
        """Gets the recommendation_latency_in_ms of this ProfileResponse.

        Latency associated with the recommended memory/cpu config

        :return: The recommendation_latency_in_ms of this ProfileResponse.
        :rtype: float
        """
        return self._recommendation_latency_in_ms

    @recommendation_latency_in_ms.setter
    def recommendation_latency_in_ms(self, recommendation_latency_in_ms):
        """Sets the recommendation_latency_in_ms of this ProfileResponse.

        Latency associated with the recommended memory/cpu config

        :param recommendation_latency_in_ms: The recommendation_latency_in_ms of this ProfileResponse.
        :type recommendation_latency_in_ms: float
        """

        self._recommendation_latency_in_ms = recommendation_latency_in_ms

    @property
    def recommended_cpu(self):
        """Gets the recommended_cpu of this ProfileResponse.

        The recommended CPU allocation.

        :return: The recommended_cpu of this ProfileResponse.
        :rtype: float
        """
        return self._recommended_cpu

    @recommended_cpu.setter
    def recommended_cpu(self, recommended_cpu):
        """Sets the recommended_cpu of this ProfileResponse.

        The recommended CPU allocation.

        :param recommended_cpu: The recommended_cpu of this ProfileResponse.
        :type recommended_cpu: float
        """

        self._recommended_cpu = recommended_cpu

    @property
    def recommended_memory_in_gb(self):
        """Gets the recommended_memory_in_gb of this ProfileResponse.

        The recommended amount of memory to allocate in GB.

        :return: The recommended_memory_in_gb of this ProfileResponse.
        :rtype: float
        """
        return self._recommended_memory_in_gb

    @recommended_memory_in_gb.setter
    def recommended_memory_in_gb(self, recommended_memory_in_gb):
        """Sets the recommended_memory_in_gb of this ProfileResponse.

        The recommended amount of memory to allocate in GB.

        :param recommended_memory_in_gb: The recommended_memory_in_gb of this ProfileResponse.
        :type recommended_memory_in_gb: float
        """

        self._recommended_memory_in_gb = recommended_memory_in_gb

    @property
    def state(self):
        """Gets the state of this ProfileResponse.

        The state of the profile.

        :return: The state of this ProfileResponse.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this ProfileResponse.

        The state of the profile.

        :param state: The state of this ProfileResponse.
        :type state: str
        """

        self._state = state
