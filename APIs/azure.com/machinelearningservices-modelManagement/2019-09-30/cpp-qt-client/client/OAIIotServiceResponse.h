/**
 * Azure Machine Learning Model Management Service
 * These APIs allow end users to manage Azure Machine Learning Models, Images, Profiles, and Services.
 *
 * The version of the OpenAPI document: 2019-09-30
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIIotServiceResponse.h
 *
 * 
 */

#ifndef OAIIotServiceResponse_H
#define OAIIotServiceResponse_H

#include <QJsonObject>

#include "OAIImageResponseBase.h"
#include "OAIIotModuleSettings.h"
#include "OAIModelErrorResponse.h"
#include "OAIServiceResponseBase.h"
#include <QDateTime>
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIModelErrorResponse;
class OAIImageResponseBase;
class OAIIotModuleSettings;

class OAIIotServiceResponse : public OAIObject {
public:
    OAIIotServiceResponse();
    OAIIotServiceResponse(QString json);
    ~OAIIotServiceResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getComputeType() const;
    void setComputeType(const QString &compute_type);
    bool is_compute_type_Set() const;
    bool is_compute_type_Valid() const;

    QDateTime getCreatedTime() const;
    void setCreatedTime(const QDateTime &created_time);
    bool is_created_time_Set() const;
    bool is_created_time_Valid() const;

    QString getDeploymentType() const;
    void setDeploymentType(const QString &deployment_type);
    bool is_deployment_type_Set() const;
    bool is_deployment_type_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    OAIModelErrorResponse getError() const;
    void setError(const OAIModelErrorResponse &error);
    bool is_error_Set() const;
    bool is_error_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QMap<QString, QString> getKvTags() const;
    void setKvTags(const QMap<QString, QString> &kv_tags);
    bool is_kv_tags_Set() const;
    bool is_kv_tags_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getOperationId() const;
    void setOperationId(const QString &operation_id);
    bool is_operation_id_Set() const;
    bool is_operation_id_Valid() const;

    QMap<QString, QString> getProperties() const;
    void setProperties(const QMap<QString, QString> &properties);
    bool is_properties_Set() const;
    bool is_properties_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QDateTime getUpdatedTime() const;
    void setUpdatedTime(const QDateTime &updated_time);
    bool is_updated_time_Set() const;
    bool is_updated_time_Valid() const;

    bool isAuthEnabled() const;
    void setAuthEnabled(const bool &auth_enabled);
    bool is_auth_enabled_Set() const;
    bool is_auth_enabled_Valid() const;

    QString getComputeName() const;
    void setComputeName(const QString &compute_name);
    bool is_compute_name_Set() const;
    bool is_compute_name_Valid() const;

    OAIImageResponseBase getImageDetails() const;
    void setImageDetails(const OAIImageResponseBase &image_details);
    bool is_image_details_Set() const;
    bool is_image_details_Valid() const;

    QString getImageId() const;
    void setImageId(const QString &image_id);
    bool is_image_id_Set() const;
    bool is_image_id_Valid() const;

    QString getIotDeviceId() const;
    void setIotDeviceId(const QString &iot_device_id);
    bool is_iot_device_id_Set() const;
    bool is_iot_device_id_Valid() const;

    QList<OAIIotModuleSettings> getIotEdgeModules() const;
    void setIotEdgeModules(const QList<OAIIotModuleSettings> &iot_edge_modules);
    bool is_iot_edge_modules_Set() const;
    bool is_iot_edge_modules_Valid() const;

    QMap<QString, QString> getRoutes() const;
    void setRoutes(const QMap<QString, QString> &routes);
    bool is_routes_Set() const;
    bool is_routes_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_compute_type;
    bool m_compute_type_isSet;
    bool m_compute_type_isValid;

    QDateTime m_created_time;
    bool m_created_time_isSet;
    bool m_created_time_isValid;

    QString m_deployment_type;
    bool m_deployment_type_isSet;
    bool m_deployment_type_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    OAIModelErrorResponse m_error;
    bool m_error_isSet;
    bool m_error_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QMap<QString, QString> m_kv_tags;
    bool m_kv_tags_isSet;
    bool m_kv_tags_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_operation_id;
    bool m_operation_id_isSet;
    bool m_operation_id_isValid;

    QMap<QString, QString> m_properties;
    bool m_properties_isSet;
    bool m_properties_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QDateTime m_updated_time;
    bool m_updated_time_isSet;
    bool m_updated_time_isValid;

    bool m_auth_enabled;
    bool m_auth_enabled_isSet;
    bool m_auth_enabled_isValid;

    QString m_compute_name;
    bool m_compute_name_isSet;
    bool m_compute_name_isValid;

    OAIImageResponseBase m_image_details;
    bool m_image_details_isSet;
    bool m_image_details_isValid;

    QString m_image_id;
    bool m_image_id_isSet;
    bool m_image_id_isValid;

    QString m_iot_device_id;
    bool m_iot_device_id_isSet;
    bool m_iot_device_id_isValid;

    QList<OAIIotModuleSettings> m_iot_edge_modules;
    bool m_iot_edge_modules_isSet;
    bool m_iot_edge_modules_isValid;

    QMap<QString, QString> m_routes;
    bool m_routes_isSet;
    bool m_routes_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIIotServiceResponse)

#endif // OAIIotServiceResponse_H
