/**
 * Azure Machine Learning Model Management Service
 * These APIs allow end users to manage Azure Machine Learning Models, Images, Profiles, and Services.
 *
 * The version of the OpenAPI document: 2019-09-30
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEnvironmentImageRequest.h
 *
 * Request to create a Docker image based on Environment.
 */

#ifndef OAIEnvironmentImageRequest_H
#define OAIEnvironmentImageRequest_H

#include <QJsonObject>

#include "OAIEnvironmentImageAsset.h"
#include "OAIModelEnvironmentDefinition.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIEnvironmentImageAsset;
class OAIModelEnvironmentDefinition;

class OAIEnvironmentImageRequest : public OAIObject {
public:
    OAIEnvironmentImageRequest();
    OAIEnvironmentImageRequest(QString json);
    ~OAIEnvironmentImageRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIEnvironmentImageAsset> getAssets() const;
    void setAssets(const QList<OAIEnvironmentImageAsset> &assets);
    bool is_assets_Set() const;
    bool is_assets_Valid() const;

    QString getDriverProgram() const;
    void setDriverProgram(const QString &driver_program);
    bool is_driver_program_Set() const;
    bool is_driver_program_Valid() const;

    OAIModelEnvironmentDefinition getEnvironment() const;
    void setEnvironment(const OAIModelEnvironmentDefinition &environment);
    bool is_environment_Set() const;
    bool is_environment_Valid() const;

    QList<QString> getModelIds() const;
    void setModelIds(const QList<QString> &model_ids);
    bool is_model_ids_Set() const;
    bool is_model_ids_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIEnvironmentImageAsset> m_assets;
    bool m_assets_isSet;
    bool m_assets_isValid;

    QString m_driver_program;
    bool m_driver_program_isSet;
    bool m_driver_program_isValid;

    OAIModelEnvironmentDefinition m_environment;
    bool m_environment_isSet;
    bool m_environment_isValid;

    QList<QString> m_model_ids;
    bool m_model_ids_isSet;
    bool m_model_ids_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEnvironmentImageRequest)

#endif // OAIEnvironmentImageRequest_H
