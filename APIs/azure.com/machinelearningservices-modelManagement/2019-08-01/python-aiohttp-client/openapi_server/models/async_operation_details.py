# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AsyncOperationDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, sub_operation_state: str=None, sub_operation_type: str=None):
        """AsyncOperationDetails - a model defined in OpenAPI

        :param sub_operation_state: The sub_operation_state of this AsyncOperationDetails.
        :param sub_operation_type: The sub_operation_type of this AsyncOperationDetails.
        """
        self.openapi_types = {
            'sub_operation_state': str,
            'sub_operation_type': str
        }

        self.attribute_map = {
            'sub_operation_state': 'subOperationState',
            'sub_operation_type': 'subOperationType'
        }

        self._sub_operation_state = sub_operation_state
        self._sub_operation_type = sub_operation_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AsyncOperationDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AsyncOperationDetails of this AsyncOperationDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def sub_operation_state(self):
        """Gets the sub_operation_state of this AsyncOperationDetails.

        The suboperation state.

        :return: The sub_operation_state of this AsyncOperationDetails.
        :rtype: str
        """
        return self._sub_operation_state

    @sub_operation_state.setter
    def sub_operation_state(self, sub_operation_state):
        """Sets the sub_operation_state of this AsyncOperationDetails.

        The suboperation state.

        :param sub_operation_state: The sub_operation_state of this AsyncOperationDetails.
        :type sub_operation_state: str
        """

        self._sub_operation_state = sub_operation_state

    @property
    def sub_operation_type(self):
        """Gets the sub_operation_type of this AsyncOperationDetails.

        The suboperation type.

        :return: The sub_operation_type of this AsyncOperationDetails.
        :rtype: str
        """
        return self._sub_operation_type

    @sub_operation_type.setter
    def sub_operation_type(self, sub_operation_type):
        """Sets the sub_operation_type of this AsyncOperationDetails.

        The suboperation type.

        :param sub_operation_type: The sub_operation_type of this AsyncOperationDetails.
        :type sub_operation_type: str
        """

        self._sub_operation_type = sub_operation_type
