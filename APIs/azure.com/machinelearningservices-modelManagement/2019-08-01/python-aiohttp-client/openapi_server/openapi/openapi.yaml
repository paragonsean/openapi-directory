openapi: 3.0.1
info:
  description: "These APIs allow end users to manage Azure Machine Learning Models,\
    \ Images, Profiles, and Services."
  title: Azure Machine Learning Model Management Service
  version: 2019-08-01
  x-apisguru-categories:
  - cloud
  x-logo:
    url: https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png
  x-origin:
  - format: swagger
    url: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/machinelearningservices/data-plane/Microsoft.MachineLearningServices/preview/2019-08-01/modelManagement.json
    version: "2.0"
  x-preferred: false
  x-providerName: azure.com
  x-serviceName: machinelearningservices-modelManagement
  x-tags:
  - Azure
  - Microsoft
servers:
- url: https://azure.local/
security:
- azure_auth:
  - user_impersonation
tags: []
paths:
  ? /modelmanagement/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.MachineLearningServices/workspaces/{workspace}/assets
  : get:
      description: "If no filter is passed, the query lists all the Assets in the\
        \ given workspace. The returned list is paginated and the count of items in\
        \ each page is an optional parameter."
      operationId: assets_list_query
      parameters:
      - description: The Azure Subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          format: uuid
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The Name of the resource group in which the workspace is located.
        in: path
        name: resourceGroup
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the workspace.
        in: path
        name: workspace
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The run Id associated with the Assets.
        in: query
        name: runId
        schema:
          type: string
      - description: The object name.
        in: query
        name: name
        schema:
          type: string
      - description: The number of items to retrieve in a page.
        in: query
        name: count
        schema:
          format: int32
          type: integer
      - description: The continuation token to retrieve the next page.
        in: query
        name: $skipToken
        schema:
          type: string
      - description: "A set of tags with which to filter the returned models.\r\n\
          \            It is a comma separated string of tags key or tags key=value\r\
          \n            Example: tagKey1,tagKey2,tagKey3=value3"
        in: query
        name: tags
        schema:
          type: string
      - description: "A set of properties with which to filter the returned models.\r\
          \n            It is a comma separated string of properties key and/or properties\
          \ key=value\r\n            Example: propKey1,propKey2,propKey3=value3"
        in: query
        name: properties
        schema:
          type: string
      - description: An option for specifying how to order the list.
        in: query
        name: orderby
        schema:
          default: CreatedAtDesc
          enum:
          - CreatedAtDesc
          - CreatedAtAsc
          - UpdatedAtDesc
          - UpdatedAtAsc
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAssetList'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelErrorResponse'
          description: Error response describing why the operation failed.
      summary: Query the list of Assets in a workspace.
      tags:
      - Asset
      x-ms-pageable:
        nextLinkName: nextLink
      x-openapi-router-controller: openapi_server.controllers.asset_controller
    post:
      description: Create an Asset from the provided payload.
      operationId: assets_create
      parameters:
      - description: The Azure Subscription ID.
        in: path
        name: subscription_id
        required: true
        schema:
          format: uuid
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The Name of the resource group in which the workspace is located.
        in: path
        name: resource_group
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the workspace.
        in: path
        name: workspace
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Asset'
        description: The Asset to be created.
        required: false
        x-body-name: asset
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Asset'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelErrorResponse'
          description: Error response describing why the operation failed.
      summary: Create an Asset.
      tags:
      - Asset
      x-codegen-request-body-name: asset
      x-openapi-router-controller: openapi_server.controllers.asset_controller
  ? /modelmanagement/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.MachineLearningServices/workspaces/{workspace}/assets/{id}
  : delete:
      description: Delete the specified Asset.
      operationId: assets_delete
      parameters:
      - description: The Azure Subscription ID.
        in: path
        name: subscription_id
        required: true
        schema:
          format: uuid
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The Name of the resource group in which the workspace is located.
        in: path
        name: resource_group
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the workspace.
        in: path
        name: workspace
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The Id of the Asset to delete.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: The resource exists and was deleted successfully.
        "204":
          content: {}
          description: The resource does not exist and the request was well formed.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelErrorResponse'
          description: Error response describing why the operation failed.
      summary: Delete an Asset.
      tags:
      - Asset
      x-openapi-router-controller: openapi_server.controllers.asset_controller
    get:
      description: Get an Asset by Id.
      operationId: assets_query_by_id
      parameters:
      - description: The Azure Subscription ID.
        in: path
        name: subscription_id
        required: true
        schema:
          format: uuid
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The Name of the resource group in which the workspace is located.
        in: path
        name: resource_group
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the workspace.
        in: path
        name: workspace
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The Asset Id.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Asset'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelErrorResponse'
          description: Error response describing why the operation failed.
      summary: Get an Asset.
      tags:
      - Asset
      x-openapi-router-controller: openapi_server.controllers.asset_controller
    patch:
      description: Patch a specific Asset.
      operationId: assets_patch
      parameters:
      - description: The Azure Subscription ID.
        in: path
        name: subscription_id
        required: true
        schema:
          format: uuid
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The Name of the resource group in which the workspace is located.
        in: path
        name: resource_group
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the workspace.
        in: path
        name: workspace
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The Id of the Asset to patch.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/JsonPatchOperation'
              type: array
              uniqueItems: false
        description: The payload that is used to patch an Asset.
        required: true
        x-body-name: patch
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Asset'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelErrorResponse'
          description: Error response describing why the operation failed.
      summary: Update an Asset.
      tags:
      - Asset
      x-codegen-request-body-name: patch
      x-openapi-router-controller: openapi_server.controllers.asset_controller
  ? /modelmanagement/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.MachineLearningServices/workspaces/{workspace}/images/{imageId}/profiles
  : get:
      description: "If no filter is passed, the query lists all Profiles for the Image.\
        \ The returned list is paginated and the count of items in each page is an\
        \ optional parameter."
      operationId: profiles_list_query
      parameters:
      - description: The Azure Subscription ID.
        in: path
        name: subscription_id
        required: true
        schema:
          format: uuid
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The Name of the resource group in which the workspace is located.
        in: path
        name: resource_group
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the workspace.
        in: path
        name: workspace
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The Image Id.
        in: path
        name: imageId
        required: true
        schema:
          type: string
      - description: The Profile name.
        in: query
        name: name
        schema:
          type: string
      - description: The Profile description.
        in: query
        name: description
        schema:
          type: string
      - description: "A set of tags with which to filter the returned models.\r\n\
          \            It is a comma separated string of tags key or tags key=value\r\
          \n            Example: tagKey1,tagKey2,tagKey3=value3"
        in: query
        name: tags
        schema:
          type: string
      - description: "A set of properties with which to filter the returned models.\r\
          \n            It is a comma separated string of properties key and/or properties\
          \ key=value\r\n            Example: propKey1,propKey2,propKey3=value3"
        in: query
        name: properties
        schema:
          type: string
      - description: The number of items to retrieve in a page.
        in: query
        name: count
        schema:
          format: int32
          type: integer
      - description: The continuation token to retrieve the next page.
        in: query
        name: $skipToken
        schema:
          type: string
      - description: The option to order the response.
        in: query
        name: orderBy
        schema:
          default: CreatedAtDesc
          enum:
          - CreatedAtDesc
          - CreatedAtAsc
          - UpdatedAtDesc
          - UpdatedAtAsc
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProfileResponseList'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelErrorResponse'
          description: Error response describing why the operation failed.
      summary: Get a list of Image Profiles.
      tags:
      - Profile
      x-ms-pageable:
        nextLinkName: nextLink
      x-openapi-router-controller: openapi_server.controllers.profile_controller
    post:
      description: Create a Profile for an Image.
      operationId: profiles_create
      parameters:
      - description: The Azure Subscription ID.
        in: path
        name: subscription_id
        required: true
        schema:
          format: uuid
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The Name of the resource group in which the workspace is located.
        in: path
        name: resource_group
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the workspace.
        in: path
        name: workspace
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The Image Id.
        in: path
        name: imageId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileRequestBase'
        description: The payload that is used to create the Profile.
        required: true
        x-body-name: inputRequest
      responses:
        "202":
          content: {}
          description: The request was accepted. The header 'Operation-Location' contains
            the async operation location URL. Accessing this URL with a GET call will
            return the status of the background task.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelErrorResponse'
          description: Error response describing why the operation failed.
      summary: Create a Profile.
      tags:
      - Profile
      x-codegen-request-body-name: inputRequest
      x-openapi-router-controller: openapi_server.controllers.profile_controller
  ? /modelmanagement/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.MachineLearningServices/workspaces/{workspace}/images/{imageId}/profiles/{id}
  : get:
      description: Get the Profile for an Image.
      operationId: profiles_query_by_id
      parameters:
      - description: The Azure Subscription ID.
        in: path
        name: subscription_id
        required: true
        schema:
          format: uuid
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The Name of the resource group in which the workspace is located.
        in: path
        name: resource_group
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the workspace.
        in: path
        name: workspace
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The Image Id.
        in: path
        name: imageId
        required: true
        schema:
          type: string
      - description: The Profile Id.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileResponse'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelErrorResponse'
          description: Error response describing why the operation failed.
      summary: Get a Profile.
      tags:
      - Profile
      x-openapi-router-controller: openapi_server.controllers.profile_controller
  ? /modelmanagement/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.MachineLearningServices/workspaces/{workspace}/models
  : get:
      description: "The result list can be filtered using tag and name. If no filter\
        \ is passed, the query lists all the Models in the given workspace. The returned\
        \ list is paginated and the count of items in each page is an optional parameter."
      operationId: m_l_models_list_query
      parameters:
      - description: The Azure Subscription ID.
        in: path
        name: subscription_id
        required: true
        schema:
          format: uuid
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The Name of the resource group in which the workspace is located.
        in: path
        name: resource_group
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the workspace.
        in: path
        name: workspace
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The object name.
        in: query
        name: name
        schema:
          type: string
      - description: The framework.
        in: query
        name: framework
        schema:
          type: string
      - description: The object description.
        in: query
        name: description
        schema:
          type: string
      - description: The number of items to retrieve in a page.
        in: query
        name: count
        schema:
          format: int32
          type: integer
      - description: The continuation token to retrieve the next page.
        in: query
        name: $skipToken
        schema:
          type: string
      - description: "A set of tags with which to filter the returned models.\r\n\
          \            It is a comma separated string of tags key or tags key=value\r\
          \n            Example: tagKey1,tagKey2,tagKey3=value3"
        in: query
        name: tags
        schema:
          type: string
      - description: "A set of properties with which to filter the returned models.\r\
          \n            It is a comma separated string of properties key and/or properties\
          \ key=value\r\n            Example: propKey1,propKey2,propKey3=value3"
        in: query
        name: properties
        schema:
          type: string
      - description: The runId which created the model.
        in: query
        name: runId
        schema:
          type: string
      - description: An option to specify how the models are ordered in the response.
        in: query
        name: orderBy
        schema:
          default: CreatedAtDesc
          enum:
          - CreatedAtDesc
          - CreatedAtAsc
          - UpdatedAtDesc
          - UpdatedAtAsc
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedModelList'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelErrorResponse'
          description: Error response describing why the operation failed.
      summary: Query the list of Models in a workspace.
      tags:
      - Model
      x-ms-pageable:
        nextLinkName: nextLink
      x-openapi-router-controller: openapi_server.controllers.model_controller
    post:
      description: Register the model provided.
      operationId: m_l_models_register
      parameters:
      - description: The Azure Subscription ID.
        in: path
        name: subscription_id
        required: true
        schema:
          format: uuid
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The Name of the resource group in which the workspace is located.
        in: path
        name: resource_group
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the workspace.
        in: path
        name: workspace
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Model'
        description: The payload that is used to register the model.
        required: true
        x-body-name: model
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Model'
          description: The model registration was successful.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelErrorResponse'
          description: Error response describing why the operation failed.
      summary: Register a model.
      tags:
      - Model
      x-codegen-request-body-name: model
      x-openapi-router-controller: openapi_server.controllers.model_controller
  ? /modelmanagement/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.MachineLearningServices/workspaces/{workspace}/models/{id}
  : delete:
      description: Deletes a model if it exists.
      operationId: m_l_models_delete
      parameters:
      - description: The Azure Subscription ID.
        in: path
        name: subscription_id
        required: true
        schema:
          format: uuid
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The Name of the resource group in which the workspace is located.
        in: path
        name: resource_group
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the workspace.
        in: path
        name: workspace
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The model id.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: The resource exists and was deleted successfully.
        "204":
          content: {}
          description: The resource does not exist and the request was well formed.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelErrorResponse'
          description: Error response describing why the operation failed.
      summary: Delete the specified Model.
      tags:
      - Model
      x-openapi-router-controller: openapi_server.controllers.model_controller
    get:
      description: Gets a model by model id.
      operationId: m_l_models_query_by_id
      parameters:
      - description: The Azure Subscription ID.
        in: path
        name: subscription_id
        required: true
        schema:
          format: uuid
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The Name of the resource group in which the workspace is located.
        in: path
        name: resource_group
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the workspace.
        in: path
        name: workspace
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The model id.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Model'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelErrorResponse'
          description: Error response describing why the operation failed.
      summary: Gets a model.
      tags:
      - Model
      x-openapi-router-controller: openapi_server.controllers.model_controller
    patch:
      description: Updates an existing model with the specified patch.
      operationId: m_l_models_patch
      parameters:
      - description: The Azure Subscription ID.
        in: path
        name: subscription_id
        required: true
        schema:
          format: uuid
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The Name of the resource group in which the workspace is located.
        in: path
        name: resource_group
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the workspace.
        in: path
        name: workspace
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The model id.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/JsonPatchOperation'
              type: array
              uniqueItems: false
        description: The payload that is used to patch the model.
        required: true
        x-body-name: patch
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Model'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelErrorResponse'
          description: Error response describing why the operation failed.
      summary: Patch a specific model.
      tags:
      - Model
      x-codegen-request-body-name: patch
      x-openapi-router-controller: openapi_server.controllers.model_controller
  ? /modelmanagement/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.MachineLearningServices/workspaces/{workspace}/models/{id}/metrics
  : get:
      description: The operational events collected for the Model are returned.
      operationId: m_l_models_get_metrics
      parameters:
      - description: The Azure Subscription ID.
        in: path
        name: subscription_id
        required: true
        schema:
          format: uuid
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The Name of the resource group in which the workspace is located.
        in: path
        name: resource_group
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the workspace.
        in: path
        name: workspace
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The Model Id.
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: "The start date from which to retrieve metrics, ISO 8601 literal\
          \ format."
        in: query
        name: startDate
        schema:
          type: string
      - description: "The end date from which to retrieve metrics, ISO 8601 literal\
          \ format."
        in: query
        name: endDate
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelOperationalState'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelErrorResponse'
          description: Error response describing why the operation failed.
      summary: Retrieve the metrics for a Model.
      tags:
      - Model
      x-openapi-router-controller: openapi_server.controllers.model_controller
  ? /modelmanagement/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.MachineLearningServices/workspaces/{workspace}/operations/{id}
  : get:
      description: Get the status of an async operation by operation id.
      operationId: operations_get
      parameters:
      - description: The Azure Subscription ID.
        in: path
        name: subscription_id
        required: true
        schema:
          format: uuid
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The Name of the resource group in which the workspace is located.
        in: path
        name: resource_group
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the workspace.
        in: path
        name: workspace
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The operation id.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncOperationStatus'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelErrorResponse'
          description: Error response describing why the operation failed.
      summary: Get the status of an async operation.
      tags:
      - Operations
      x-openapi-router-controller: openapi_server.controllers.operations_controller
  ? /modelmanagement/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.MachineLearningServices/workspaces/{workspace}/services
  : get:
      description: "If no filter is passed, the query lists all Services in the Workspace.\
        \ The returned list is paginated and the count of item in each page is an\
        \ optional parameter."
      operationId: services_list_query
      parameters:
      - description: The Azure Subscription ID.
        in: path
        name: subscription_id
        required: true
        schema:
          format: uuid
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The Name of the resource group in which the workspace is located.
        in: path
        name: resource_group
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the workspace.
        in: path
        name: workspace
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The Image Id.
        in: query
        name: imageId
        schema:
          type: string
      - description: The Image name.
        in: query
        name: imageName
        schema:
          type: string
      - description: The Model Id.
        in: query
        name: modelId
        schema:
          type: string
      - description: The Model name.
        in: query
        name: modelName
        schema:
          type: string
      - description: The object name.
        in: query
        name: name
        schema:
          type: string
      - description: The number of items to retrieve in a page.
        in: query
        name: count
        schema:
          format: int32
          type: integer
      - description: The compute environment type.
        in: query
        name: computeType
        schema:
          type: string
      - description: The continuation token to retrieve the next page.
        in: query
        name: $skipToken
        schema:
          type: string
      - description: "A set of tags with which to filter the returned models.\r\n\
          \            It is a comma separated string of tags key or tags key=value\r\
          \n            Example: tagKey1,tagKey2,tagKey3=value3"
        in: query
        name: tags
        schema:
          type: string
      - description: "A set of properties with which to filter the returned models.\r\
          \n            It is a comma separated string of properties key and/or properties\
          \ key=value\r\n            Example: propKey1,propKey2,propKey3=value3"
        in: query
        name: properties
        schema:
          type: string
      - description: Set to True to include Model details.
        in: query
        name: expand
        schema:
          default: false
          type: boolean
      - description: The option to order the response.
        in: query
        name: orderby
        schema:
          default: UpdatedAtDesc
          enum:
          - CreatedAtDesc
          - CreatedAtAsc
          - UpdatedAtDesc
          - UpdatedAtAsc
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedServiceList'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelErrorResponse'
          description: Error response describing why the operation failed.
      summary: Query the list of Services in a Workspace.
      tags:
      - Service
      x-ms-pageable:
        nextLinkName: nextLink
      x-openapi-router-controller: openapi_server.controllers.service_controller
    post:
      description: Create a Service with the specified payload.
      operationId: services_create
      parameters:
      - description: The Azure Subscription ID.
        in: path
        name: subscription_id
        required: true
        schema:
          format: uuid
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The Name of the resource group in which the workspace is located.
        in: path
        name: resource_group
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the workspace.
        in: path
        name: workspace
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateServiceRequest'
        description: The payload that is used to create the Service.
        required: true
        x-body-name: request
      responses:
        "202":
          content: {}
          description: The request was accepted.  The header 'Operation-Location'
            contains the async operation location URL.  Accessing this URL with a
            GET call will return the status of the background task.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelErrorResponse'
          description: Error response describing why the operation failed.
      summary: Create a Service.
      tags:
      - Service
      x-codegen-request-body-name: request
      x-openapi-router-controller: openapi_server.controllers.service_controller
  ? /modelmanagement/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.MachineLearningServices/workspaces/{workspace}/services/{id}
  : delete:
      description: Delete a specific Service.
      operationId: services_delete
      parameters:
      - description: The Azure Subscription ID.
        in: path
        name: subscription_id
        required: true
        schema:
          format: uuid
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The Name of the resource group in which the workspace is located.
        in: path
        name: resource_group
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the workspace.
        in: path
        name: workspace
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The Service Id.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: The resource exists and was deleted successfully.
        "202":
          content: {}
          description: Success
        "204":
          content: {}
          description: The resource does not exist and the request was well formed.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelErrorResponse'
          description: Error response describing why the operation failed.
      summary: Delete a Service.
      tags:
      - Service
      x-openapi-router-controller: openapi_server.controllers.service_controller
    get:
      description: Get a Service by Id.
      operationId: services_query_by_id
      parameters:
      - description: The Azure Subscription ID.
        in: path
        name: subscription_id
        required: true
        schema:
          format: uuid
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The Name of the resource group in which the workspace is located.
        in: path
        name: resource_group
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the workspace.
        in: path
        name: workspace
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The Service Id.
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Set to True to include Model details.
        in: query
        name: expand
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseBase'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelErrorResponse'
          description: Error response describing why the operation failed.
      summary: Get a Service.
      tags:
      - Service
      x-openapi-router-controller: openapi_server.controllers.service_controller
    patch:
      description: Patch a specific Service.
      operationId: services_patch
      parameters:
      - description: The Azure Subscription ID.
        in: path
        name: subscription_id
        required: true
        schema:
          format: uuid
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The Name of the resource group in which the workspace is located.
        in: path
        name: resource_group
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the workspace.
        in: path
        name: workspace
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The Service Id.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/JsonPatchOperation'
              type: array
              uniqueItems: false
        description: The payload that is used to patch the Service.
        required: true
        x-body-name: patch
      responses:
        "200":
          content: {}
          description: Success
        "202":
          content: {}
          description: The request was accepted.  The header 'Operation-Location'
            contains the async operation location URL.  Accessing this URL with a
            GET call will return the status of the background task.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelErrorResponse'
          description: Error response describing why the operation failed.
      summary: Patch a Service.
      tags:
      - Service
      x-codegen-request-body-name: patch
      x-openapi-router-controller: openapi_server.controllers.service_controller
  ? /modelmanagement/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.MachineLearningServices/workspaces/{workspace}/services/{id}/listkeys
  : post:
      description: Gets a list of Service keys.
      operationId: services_list_service_keys
      parameters:
      - description: The Azure Subscription ID.
        in: path
        name: subscription_id
        required: true
        schema:
          format: uuid
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The Name of the resource group in which the workspace is located.
        in: path
        name: resource_group
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the workspace.
        in: path
        name: workspace
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The Service Id.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthKeys'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelErrorResponse'
          description: Error response describing why the operation failed.
      summary: Lists Service keys.
      tags:
      - Service
      - Keys
      x-openapi-router-controller: openapi_server.controllers.service_controller
  ? /modelmanagement/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.MachineLearningServices/workspaces/{workspace}/services/{id}/regenerateKeys
  : post:
      description: Regenerate and return the Service keys.
      operationId: services_regenerate_service_keys
      parameters:
      - description: The Azure Subscription ID.
        in: path
        name: subscription_id
        required: true
        schema:
          format: uuid
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The Name of the resource group in which the workspace is located.
        in: path
        name: resource_group
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the workspace.
        in: path
        name: workspace
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The Service Id.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegenerateServiceKeysRequest'
        description: The payload that is used to regenerate keys.
        required: true
        x-body-name: request
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthKeys'
          description: Success
        "202":
          content: {}
          description: The request was accepted. The header 'Operation-Location' contains
            the async operation location URL.  Accessing this URL with a GET call
            will return the status of the background task.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelErrorResponse'
          description: Error response describing why the operation failed.
      summary: Regenerate Service Keys.
      tags:
      - Service
      - Keys
      x-codegen-request-body-name: request
      x-openapi-router-controller: openapi_server.controllers.service_controller
  ? /modelmanagement/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.MachineLearningServices/workspaces/{workspace}/services/{id}/token
  : post:
      description: Gets access token that can be used for calling service.
      operationId: services_get_service_token
      parameters:
      - description: The Azure Subscription ID.
        in: path
        name: subscription_id
        required: true
        schema:
          format: uuid
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The Name of the resource group in which the workspace is located.
        in: path
        name: resource_group
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the workspace.
        in: path
        name: workspace
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The Service Id.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthToken'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelErrorResponse'
          description: Error response describing why the operation failed.
      summary: Generate Service Access Token.
      tags:
      - Service
      - Token
      x-openapi-router-controller: openapi_server.controllers.service_controller
components:
  parameters:
    resourceGroupParameter:
      description: The Name of the resource group in which the workspace is located.
      in: path
      name: resourceGroup
      required: true
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    subscriptionIdParameter:
      description: The Azure Subscription ID.
      in: path
      name: subscriptionId
      required: true
      schema:
        format: uuid
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    workspaceParameter:
      description: The name of the workspace.
      in: path
      name: workspace
      required: true
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
  schemas:
    ACIServiceCreateRequest:
      allOf:
      - $ref: '#/components/schemas/CreateServiceRequest'
      - properties:
          appInsightsEnabled:
            default: false
            description: Whether or not Application Insights is enabled.
            type: boolean
          authEnabled:
            default: false
            description: Whether or not authentication is enabled on the service.
            type: boolean
          cname:
            description: The CName for the service.
            type: string
          containerResourceRequirements:
            $ref: '#/components/schemas/ContainerResourceRequirements'
          dataCollection:
            $ref: '#/components/schemas/ModelDataCollection'
          dnsNameLabel:
            description: The Dns label for the service.
            type: string
          sslCertificate:
            description: The SSL certificate to use if SSL is enabled.
            type: string
          sslEnabled:
            default: false
            description: Whether or not SSL is enabled.
            type: boolean
          sslKey:
            description: The SSL key for the certificate.
            type: string
        type: object
      x-ms-discriminator-value: ACI
    ACIServiceResponse:
      allOf:
      - $ref: '#/components/schemas/ServiceResponseBase'
      - properties:
          appInsightsEnabled:
            description: Whether or not Application Insights is enabled.
            type: boolean
          authEnabled:
            description: Whether or not authentication is enabled on the service.
            type: boolean
          cname:
            description: The CName for the service.
            type: string
          containerResourceRequirements:
            $ref: '#/components/schemas/ContainerResourceRequirements'
          dataCollection:
            $ref: '#/components/schemas/ModelDataCollection'
          environment:
            $ref: '#/components/schemas/ModelEnvironmentDefinition'
          imageDetails:
            $ref: '#/components/schemas/DockerImageResponse'
          imageId:
            description: The Id of the Image.
            type: string
          location:
            description: The location of the service.
            type: string
          modelConfigMap:
            additionalProperties:
              properties: {}
              type: object
            description: Details on the models and configurations.
            type: object
          models:
            description: The list of models.
            items:
              $ref: '#/components/schemas/Model'
            type: array
          publicFqdn:
            description: The public Fqdn for the service.
            type: string
          publicIp:
            description: The public IP address for the service.
            type: string
          scoringUri:
            description: The Uri for sending scoring requests.
            type: string
          sslCertificate:
            description: The SSL certificate to use if SSL is enabled.
            type: string
          sslEnabled:
            description: Whether or not SSL is enabled.
            type: boolean
          sslKey:
            description: The SSL key for the certificate.
            type: string
          swaggerUri:
            description: The Uri for sending swagger requests.
            type: string
        type: object
      description: The response for an ACI service.
      x-ms-discriminator-value: ACI
    AKSEndpointResponse:
      allOf:
      - $ref: '#/components/schemas/ServiceResponseBase'
      - properties:
          aadAuthEnabled:
            description: Whether or not AAD authentication is enabled.
            type: boolean
          appInsightsEnabled:
            description: Whether or not Application Insights is enabled.
            type: boolean
          authEnabled:
            description: Whether or not authentication is enabled.
            type: boolean
          computeName:
            description: The name of the compute resource.
            type: string
          namespace:
            description: The Kubernetes namespace of the deployment.
            type: string
          scoringUri:
            description: The Uri for sending scoring requests.
            type: string
          swaggerUri:
            description: The Uri for sending swagger requests.
            type: string
          variants:
            description: All the variants that belongs to this endpoint.
            items:
              $ref: '#/components/schemas/AKSServiceResponse'
            type: array
        type: object
      description: The response for an AKS Endpoint.
      x-ms-discriminator-value: AKSENDPOINT
    AKSReplicaStatus:
      properties:
        availableReplicas:
          description: The number of available replicas.
          example: 1
          format: int32
          title: availableReplicas
          type: integer
        desiredReplicas:
          description: The desired number of replicas.
          example: 2
          format: int32
          title: desiredReplicas
          type: integer
        error:
          $ref: '#/components/schemas/ModelErrorResponse'
        updatedReplicas:
          description: The number of updated replicas.
          example: 1
          format: int32
          title: updatedReplicas
          type: integer
      title: AKSReplicaStatus
      type: object
    AKSServiceCreateRequest:
      allOf:
      - $ref: '#/components/schemas/CreateEndpointVariantRequest'
      - properties:
          aadAuthEnabled:
            description: Whether or not AAD authentication is enabled.
            type: boolean
          appInsightsEnabled:
            description: Whether or not Application Insights is enabled.
            type: boolean
          authEnabled:
            description: Whether or not authentication is enabled.
            type: boolean
          autoScaler:
            $ref: '#/components/schemas/AutoScaler'
          computeName:
            description: The name of the compute resource.
            type: string
          containerResourceRequirements:
            $ref: '#/components/schemas/ContainerResourceRequirements'
          dataCollection:
            $ref: '#/components/schemas/ModelDataCollection'
          livenessProbeRequirements:
            $ref: '#/components/schemas/LivenessProbeRequirements'
          maxConcurrentRequestsPerContainer:
            description: The maximum number of concurrent requests per container.
            format: int32
            type: integer
          maxQueueWaitMs:
            description: "Maximum time a request will wait in the queue (in milliseconds).\
              \ After this time, the service will return 503 (Service Unavailable)"
            format: int32
            type: integer
          namespace:
            description: Kubernetes namespace for the service.
            type: string
          numReplicas:
            description: The number of replicas on the cluster.
            format: int32
            type: integer
          scoringTimeoutMs:
            description: The scoring timeout in milliseconds.
            format: int32
            type: integer
        type: object
      description: The request to create an AKS service.
      title: AKSServiceCreateRequest
      x-ms-discriminator-value: AKS
    AKSServiceResponse:
      allOf:
      - $ref: '#/components/schemas/AKSVariantResponse'
      - properties:
          aadAuthEnabled:
            description: Whether or not AAD authentication is enabled.
            type: boolean
          appInsightsEnabled:
            description: Whether or not Application Insights is enabled.
            type: boolean
          authEnabled:
            description: Whether or not authentication is enabled.
            type: boolean
          autoScaler:
            $ref: '#/components/schemas/AutoScaler'
          computeName:
            description: The name of the compute resource.
            type: string
          containerResourceRequirements:
            $ref: '#/components/schemas/ContainerResourceRequirements'
          dataCollection:
            $ref: '#/components/schemas/ModelDataCollection'
          deploymentStatus:
            $ref: '#/components/schemas/AKSReplicaStatus'
          environment:
            $ref: '#/components/schemas/ModelEnvironmentDefinition'
          imageDetails:
            $ref: '#/components/schemas/ImageResponseBase'
          imageId:
            description: The Id of the Image.
            type: string
          livenessProbeRequirements:
            $ref: '#/components/schemas/LivenessProbeRequirements'
          maxConcurrentRequestsPerContainer:
            description: The maximum number of concurrent requests per container.
            format: int32
            type: integer
          maxQueueWaitMs:
            description: "Maximum time a request will wait in the queue (in milliseconds).\
              \ After this time, the service will return 503 (Service Unavailable)"
            format: int32
            type: integer
          modelConfigMap:
            additionalProperties:
              properties: {}
              type: object
            description: Details on the models and configurations.
            type: object
          models:
            description: The list of models.
            items:
              $ref: '#/components/schemas/Model'
            type: array
          namespace:
            description: The Kubernetes namespace of the deployment.
            type: string
          numReplicas:
            description: The number of replicas on the cluster.
            format: int32
            type: integer
          scoringTimeoutMs:
            description: The scoring timeout in milliseconds.
            format: int32
            type: integer
          scoringUri:
            description: The Uri for sending scoring requests.
            type: string
          swaggerUri:
            description: The Uri for sending swagger requests.
            type: string
        type: object
      description: The response for an AKS service.
      title: AKSServiceResponse
      x-ms-discriminator-value: AKS
    AKSVariantResponse:
      allOf:
      - $ref: '#/components/schemas/ServiceResponseBase'
      - properties:
          isDefault:
            description: Is this the default variant.
            type: boolean
          trafficPercentile:
            description: The amount of traffic variant receives.
            format: float
            type: number
          type:
            description: The type of the variant.
            enum:
            - Control
            - Treatment
            type: string
            x-ms-enum:
              modelAsString: false
              name: VariantType
        type: object
      description: The response for an AKS variant.
      title: AKSVariantResponse
    ArtifactDetails:
      example:
        prefix: prefix
        id: id
      properties:
        id:
          title: id
          type: string
        prefix:
          title: prefix
          type: string
      title: ArtifactDetails
      type: object
    Asset:
      description: The Asset definition.
      example:
        meta:
          key: meta
        name: name
        createdTime: 2000-01-23T04:56:07.000+00:00
        description: description
        kvTags:
          key: kvTags
        id: id
        runid: runid
        properties:
          key: properties
        artifacts:
        - prefix: prefix
          id: id
        - prefix: prefix
          id: id
      properties:
        artifacts:
          description: A list of child artifacts.
          items:
            $ref: '#/components/schemas/ArtifactDetails'
          title: artifacts
          type: array
        createdTime:
          description: The time the Asset was created in UTC.
          format: date-time
          readOnly: true
          title: createdTime
          type: string
        description:
          description: The Asset description.
          title: description
          type: string
        id:
          description: The Asset Id.
          title: id
          type: string
        kvTags:
          additionalProperties:
            type: string
          description: The Asset tag dictionary. Tags are mutable.
          title: kvTags
          type: object
        meta:
          additionalProperties:
            type: string
          description: A dictionary containing metadata about the Asset.
          title: meta
          type: object
        name:
          description: The name of the Asset.
          title: name
          type: string
        properties:
          additionalProperties:
            type: string
          description: The Asset property dictionary. Properties are immutable.
          title: properties
          type: object
        runid:
          description: The RunId associated with this Asset.
          title: runid
          type: string
      required:
      - name
      title: Asset
      type: object
    AsyncOperationDetails:
      description: The async operation details.
      example:
        subOperationState: subOperationState
        subOperationType: subOperationType
      properties:
        subOperationState:
          description: The suboperation state.
          title: subOperationState
          type: string
        subOperationType:
          description: The suboperation type.
          title: subOperationType
          type: string
      title: AsyncOperationDetails
      type: object
    AsyncOperationStatus:
      description: The async operation status.
      example:
        parentRequestId: parentRequestId
        operationLog: operationLog
        createdTime: 2000-01-23T04:56:07.000+00:00
        operationType: operationType
        endTime: 2000-01-23T04:56:07.000+00:00
        id: id
        state: NotStarted
        error:
          code: code
          details:
          - code: code
            message: message
            target: target
          - code: code
            message: message
            target: target
          message: message
          statusCode: 0
        resourceLocation: resourceLocation
        operationDetails:
          subOperationState: subOperationState
          subOperationType: subOperationType
      properties:
        createdTime:
          description: The async operation creation time (UTC).
          format: date-time
          title: createdTime
          type: string
        endTime:
          description: The async operation end time (UTC)l
          format: date-time
          title: endTime
          type: string
        error:
          $ref: '#/components/schemas/ModelErrorResponse'
        id:
          description: The async operation id.
          title: id
          type: string
        operationDetails:
          $ref: '#/components/schemas/AsyncOperationDetails'
        operationLog:
          description: The async operation log.
          title: operationLog
          type: string
        operationType:
          description: The async operation type.
          title: operationType
          type: string
        parentRequestId:
          description: The request id that created this operation
          title: parentRequestId
          type: string
        resourceLocation:
          description: The resource created/updated by the async operation.
          title: resourceLocation
          type: string
        state:
          description: The async operation state.
          enum:
          - NotStarted
          - Running
          - Cancelled
          - Succeeded
          - Failed
          - TimedOut
          title: state
          type: string
          x-ms-enum:
            modelAsString: false
            name: AsyncOperationState
      title: AsyncOperationStatus
      type: object
    AuthKeys:
      example:
        secondaryKey: secondaryKey
        primaryKey: primaryKey
      properties:
        primaryKey:
          description: The primary key.
          title: primaryKey
          type: string
        secondaryKey:
          description: The secondary key.
          title: secondaryKey
          type: string
      title: AuthKeys
      type: object
    AuthToken:
      description: Service Token
      example:
        refreshAfter: 6
        accessToken: accessToken
        expiryOn: 0
        tokenType: tokenType
      properties:
        accessToken:
          description: Access token.
          title: accessToken
          type: string
        expiryOn:
          description: Access token expiry time (UTC).
          format: int64
          title: expiryOn
          type: integer
        refreshAfter:
          description: Refresh access token after time (UTC).
          format: int64
          title: refreshAfter
          type: integer
        tokenType:
          description: Access token type.
          title: tokenType
          type: string
      title: AuthToken
      type: object
    AutoScaler:
      description: The Auto Scaler properties.
      properties:
        autoscaleEnabled:
          description: Option to enable/disable auto scaling.
          title: autoscaleEnabled
          type: boolean
        maxReplicas:
          description: The maximum number of replicas in the cluster.
          example: 3
          format: int32
          title: maxReplicas
          type: integer
        minReplicas:
          description: The minimum number of replicas to scale down to.
          example: 1
          format: int32
          title: minReplicas
          type: integer
        refreshPeriodInSeconds:
          description: The amount of seconds to wait between auto scale updates.
          example: 120
          format: int32
          title: refreshPeriodInSeconds
          type: integer
        targetUtilization:
          description: The target utilization percentage to use for determining whether
            to scale the cluster.
          example: 70
          format: int32
          title: targetUtilization
          type: integer
      title: AutoScaler
      type: object
    BatchServiceResponse:
      allOf:
      - $ref: '#/components/schemas/ServiceResponseBase'
      - properties:
          appInsightsEnabled:
            type: boolean
          computeName:
            type: string
          entryScript:
            type: string
          environmentName:
            type: string
          environmentVersion:
            type: string
          errorThreshold:
            format: double
            type: number
          inputFormat:
            type: string
          miniBatchSize:
            format: int32
            type: integer
          modelDataCollection:
            $ref: '#/components/schemas/ModelDataCollection'
          modelIds:
            items:
              type: string
            type: array
          nodeCount:
            format: int32
            type: integer
          outputAction:
            type: string
          processCountPerNode:
            format: int32
            type: integer
          scoringUri:
            type: string
        type: object
      x-ms-discriminator-value: AMLCOMPUTE
    ContainerRegistry:
      example:
        password: password
        address: address
        username: username
      properties:
        address:
          title: address
          type: string
        password:
          title: password
          type: string
        username:
          title: username
          type: string
      title: ContainerRegistry
      type: object
    ContainerResourceRequirements:
      description: The resource requirements for the container (cpu and memory).
      properties:
        cpu:
          description: The number of CPU cores on the container.
          example: 4.0
          format: double
          title: cpu
          type: number
        fpga:
          description: The number of FPGA PCIE devices exposed to the container. Must
            be multiple of 2.
          format: int32
          title: fpga
          type: integer
        gpu:
          description: The number of GPU cores in the container.
          format: int32
          title: gpu
          type: integer
        memoryInGB:
          description: The amount of memory on the container in GB.
          example: 64.0
          format: double
          title: memoryInGB
          type: number
      title: ContainerResourceRequirements
      type: object
    CreateEndpointRequest:
      allOf:
      - $ref: '#/components/schemas/CreateServiceRequest'
      - properties:
          aadAuthEnabled:
            description: Whether or not AAD authentication is enabled.
            type: boolean
          appInsightsEnabled:
            description: Whether or not Application Insights is enabled.
            type: boolean
          authEnabled:
            description: Whether or not authentication is enabled.
            type: boolean
          computeName:
            description: The name of the compute resource.
            type: string
          namespace:
            description: Kubernetes namespace for the service.
            type: string
          variants:
            description: The service tag list.
            items:
              $ref: '#/components/schemas/AKSServiceCreateRequest'
            type: array
        type: object
      description: The request to create an Endpoint in the AKS.
      x-ms-discriminator-value: AKSENDPOINT
    CreateEndpointVariantRequest:
      allOf:
      - $ref: '#/components/schemas/CreateServiceRequest'
      - properties:
          isDefault:
            description: Is this the default variant.
            type: boolean
          trafficPercentile:
            description: The amount of traffic variant receives.
            format: float
            type: number
          type:
            description: The type of the variant.
            enum:
            - Control
            - Treatment
            type: string
            x-ms-enum:
              modelAsString: false
              name: VariantType
        type: object
      description: The Variant properties.
      title: CreateEndpointVariantRequest
    CreateIotServiceRequest:
      allOf:
      - $ref: '#/components/schemas/CreateServiceRequest'
      - properties:
          acrCredentials:
            items:
              $ref: '#/components/schemas/RegistryInfo'
            type: array
          authEnabled:
            type: boolean
          computeName:
            type: string
          iotDeviceId:
            type: string
          iotEdgeModule:
            $ref: '#/components/schemas/IotBaseModuleSettings'
          iotEdgeUserModule:
            items:
              $ref: '#/components/schemas/IotModuleSettings'
            type: array
          routes:
            additionalProperties:
              type: string
            type: object
        type: object
      x-ms-discriminator-value: IOT
    CreateServiceRequest:
      description: The base class for creating a service.
      discriminator:
        propertyName: computeType
      example:
        deploymentType: HttpRealtimeEndpoint
        computeType: AKS
        imageId: imageId
        environmentImageRequest:
          environment:
            python:
              baseCondaEnvironment: baseCondaEnvironment
              userManagedDependencies: true
              condaDependencies: "{}"
              interpreterPath: interpreterPath
            spark:
              repositories:
              - repositories
              - repositories
              precachePackages: true
              packages:
              - artifact: artifact
                version: version
                group: group
              - artifact: artifact
                version: version
                group: group
            environmentVariables:
              key: environmentVariables
            inferencingStackVersion: latest
            name: mydevenvironment
            version: "1"
            docker:
              gpuSupport: false
              shmSize: 1g
              sharedVolumes: true
              baseImage: ubuntu:latest
              arguments:
              - arguments
              - arguments
              baseDockerfile: "FROM ubuntu:latest\r\nRUN echo \"Hello world!\""
              enabled: true
              baseImageRegistry:
                password: password
                address: address
                username: username
          assets:
          - id: id
            mimeType: mimeType
            unpack: true
            url: url
          - id: id
            mimeType: mimeType
            unpack: true
            url: url
          driverProgram: driverProgram
          modelIds: "[mymodel:1, mymodel:2]"
        keys:
          secondaryKey: secondaryKey
          primaryKey: primaryKey
        name: name
        description: description
        kvTags:
          key: kvTags
        location: location
        properties:
          key: properties
      properties:
        computeType:
          description: The compute environment type for the service.
          enum:
          - ACI
          - AKS
          - AMLCOMPUTE
          - IOT
          - AKSENDPOINT
          - UNKNOWN
          example: AKS
          title: computeType
          type: string
          x-ms-enum:
            modelAsString: false
            name: ComputeEnvironmentType
        deploymentType:
          description: The deployment type for the service.
          enum:
          - GRPCRealtimeEndpoint
          - HttpRealtimeEndpoint
          - Batch
          example: HttpRealtimeEndpoint
          title: deploymentType
          type: string
          x-ms-enum:
            modelAsString: false
            name: DeploymentType
        description:
          description: The description of the service.
          title: description
          type: string
        environmentImageRequest:
          $ref: '#/components/schemas/EnvironmentImageRequest'
        imageId:
          description: The Image Id.
          title: imageId
          type: string
        keys:
          $ref: '#/components/schemas/AuthKeys'
        kvTags:
          additionalProperties:
            type: string
          description: The service tag dictionary. Tags are mutable.
          title: kvTags
          type: object
        location:
          description: The location of the service.
          title: location
          type: string
        name:
          description: The service name.
          title: name
          type: string
        properties:
          additionalProperties:
            type: string
          description: The service properties dictionary. Properties are immutable.
          title: properties
          type: object
      required:
      - computeType
      - name
      title: CreateServiceRequest
      type: object
    DatasetReference:
      description: The dataset reference object.
      example:
        name: name
        id: id
      properties:
        id:
          description: The id of the dataset reference.
          title: id
          type: string
        name:
          description: The name of the dataset reference.
          title: name
          type: string
      title: DatasetReference
      type: object
    DeploymentSummary:
      description: The deployment summary.
      example:
        unsuccessfulDeployments: 6
        successfulDeployments: 0
      properties:
        successfulDeployments:
          description: The number of successful deployments.
          format: int32
          title: successfulDeployments
          type: integer
        unsuccessfulDeployments:
          description: The number of unsuccessful deployments.
          format: int32
          title: unsuccessfulDeployments
          type: integer
      title: DeploymentSummary
      type: object
    DockerImageResponse:
      allOf:
      - $ref: '#/components/schemas/ImageResponseBase'
      - properties:
          assets:
            description: The list of assets.
            items:
              $ref: '#/components/schemas/EnvironmentImageAsset'
            type: array
          dockerFileUri:
            description: The Uri to the docker file.
            type: string
          driverProgram:
            description: The name of the driver file.
            type: string
          generatedDockerFileUri:
            description: The Uri to the generated docker file.
            type: string
          targetRuntime:
            $ref: '#/components/schemas/TargetRuntime'
        type: object
      title: DockerImageResponse
      x-ms-discriminator-value: WEBAPICONTAINER
    EnvironmentImageAsset:
      description: An Image asset.
      example:
        id: id
        mimeType: mimeType
        unpack: true
        url: url
      properties:
        id:
          description: The Asset Id.
          title: id
          type: string
        mimeType:
          description: The mime type.
          title: mimeType
          type: string
        unpack:
          description: Whether the Asset is unpacked.
          title: unpack
          type: boolean
        url:
          description: The Url of the Asset.
          title: url
          type: string
      title: EnvironmentImageAsset
      type: object
    EnvironmentImageRequest:
      description: Request to create a Docker image based on Environment.
      example:
        environment:
          python:
            baseCondaEnvironment: baseCondaEnvironment
            userManagedDependencies: true
            condaDependencies: "{}"
            interpreterPath: interpreterPath
          spark:
            repositories:
            - repositories
            - repositories
            precachePackages: true
            packages:
            - artifact: artifact
              version: version
              group: group
            - artifact: artifact
              version: version
              group: group
          environmentVariables:
            key: environmentVariables
          inferencingStackVersion: latest
          name: mydevenvironment
          version: "1"
          docker:
            gpuSupport: false
            shmSize: 1g
            sharedVolumes: true
            baseImage: ubuntu:latest
            arguments:
            - arguments
            - arguments
            baseDockerfile: "FROM ubuntu:latest\r\nRUN echo \"Hello world!\""
            enabled: true
            baseImageRegistry:
              password: password
              address: address
              username: username
        assets:
        - id: id
          mimeType: mimeType
          unpack: true
          url: url
        - id: id
          mimeType: mimeType
          unpack: true
          url: url
        driverProgram: driverProgram
        modelIds: "[mymodel:1, mymodel:2]"
      properties:
        assets:
          description: The list of assets.
          items:
            $ref: '#/components/schemas/EnvironmentImageAsset'
          title: assets
          type: array
        driverProgram:
          description: The name of the driver file.
          title: driverProgram
          type: string
        environment:
          $ref: '#/components/schemas/ModelEnvironmentDefinition'
        modelIds:
          description: The list of model Ids.
          example: "[mymodel:1, mymodel:2]"
          items:
            type: string
          title: modelIds
          type: array
      title: EnvironmentImageRequest
      type: object
    ErrorDetails:
      description: The error details.
      example:
        code: code
        message: message
        target: target
      properties:
        code:
          description: The error code.
          title: code
          type: string
        message:
          description: The error message.
          title: message
          type: string
        target:
          description: "The target of the error (e.g., the name of the property in\
            \ error)."
          title: target
          type: string
      title: ErrorDetails
      type: object
    FPGADockerImageResponse:
      allOf:
      - $ref: '#/components/schemas/ImageResponseBase'
      - type: object
      description: The FPGA Docker Image response.
      x-ms-discriminator-value: ACCELCONTAINER
    ImageResponseBase:
      discriminator:
        propertyName: imageFlavor
      properties:
        autoDelete:
          description: Whether the image will be automatically deleted with the last
            service using it.
          title: autoDelete
          type: boolean
        createdTime:
          description: The time the image was created.
          format: date-time
          title: createdTime
          type: string
        creationState:
          description: The state of the operation.
          enum:
          - NotStarted
          - Running
          - Cancelled
          - Succeeded
          - Failed
          - TimedOut
          example: Running
          title: creationState
          type: string
          x-ms-enum:
            modelAsString: false
            name: AsyncOperationState
        description:
          description: The image description.
          example: My docker image.
          title: description
          type: string
        error:
          $ref: '#/components/schemas/ModelErrorResponse'
        id:
          description: The image Id.
          example: myimage:3
          title: id
          type: string
        imageBuildLogUri:
          description: The Uri to the image build logs.
          title: imageBuildLogUri
          type: string
        imageFlavor:
          description: The flavor of the image.
          enum:
          - WebApiContainer
          - BatchContainer
          - IoTContainer
          - AccelContainer
          - UserProvidedContainer
          example: WebApiContainer
          title: imageFlavor
          type: string
          x-ms-enum:
            modelAsString: false
            name: ImageFlavor
        imageLocation:
          description: The Image location string.
          title: imageLocation
          type: string
        imageType:
          description: The type of the image.
          enum:
          - Docker
          example: Docker
          title: imageType
          type: string
          x-ms-enum:
            modelAsString: false
            name: ImageType
        kvTags:
          additionalProperties:
            type: string
          description: The image tag dictionary. Tags are mutable.
          title: kvTags
          type: object
        modelDetails:
          description: The list of models.
          items:
            $ref: '#/components/schemas/Model'
          title: modelDetails
          type: array
        modelIds:
          description: The list of model Ids.
          items:
            type: string
          title: modelIds
          type: array
        modifiedTime:
          description: The time the image was last modified.
          format: date-time
          title: modifiedTime
          type: string
        name:
          description: The image name.
          example: myimage:3
          title: name
          type: string
        operationId:
          description: The ID of the asynchronous operation for this image.
          title: operationId
          type: string
        properties:
          additionalProperties:
            type: string
          description: The image properties dictionary. Properties are immutable.
          title: properties
          type: object
        version:
          description: The image version.
          example: 3
          format: int64
          title: version
          type: integer
      required:
      - imageFlavor
      title: ImageResponseBase
      type: object
    IotBaseModuleSettings:
      properties:
        createOptions:
          title: createOptions
          type: string
        environmentVariables:
          additionalProperties:
            type: string
          title: environmentVariables
          type: object
        moduleName:
          title: moduleName
          type: string
        propertiesDesired:
          additionalProperties:
            type: string
          title: propertiesDesired
          type: object
      title: IotBaseModuleSettings
      type: object
    IotModuleSettings:
      properties:
        createOptions:
          title: createOptions
          type: string
        environmentVariables:
          additionalProperties:
            type: string
          title: environmentVariables
          type: object
        imageLocation:
          title: imageLocation
          type: string
        moduleName:
          title: moduleName
          type: string
        propertiesDesired:
          additionalProperties:
            type: string
          title: propertiesDesired
          type: object
      title: IotModuleSettings
      type: object
    IotServiceResponse:
      allOf:
      - $ref: '#/components/schemas/ServiceResponseBase'
      - properties:
          authEnabled:
            type: boolean
          computeName:
            type: string
          imageDetails:
            $ref: '#/components/schemas/ImageResponseBase'
          imageId:
            type: string
          iotDeviceId:
            type: string
          iotEdgeModules:
            items:
              $ref: '#/components/schemas/IotModuleSettings'
            type: array
          routes:
            additionalProperties:
              type: string
            type: object
        type: object
      x-ms-discriminator-value: IOT
    JsonPatchOperation:
      description: The Json Patch definition.
      example:
        op: op
        path: path
        from: from
        value: "{}"
      properties:
        from:
          description: The source location.
          title: from
          type: string
        op:
          description: The operation.
          title: op
          type: string
        path:
          description: The target location.
          title: path
          type: string
        value:
          description: The value.
          properties: {}
          title: value
          type: object
      title: JsonPatchOperation
      type: object
    LivenessProbeRequirements:
      description: The liveness probe requirements.
      properties:
        failureThreshold:
          description: The number of failures to allow before returning an unhealthy
            status.
          format: int32
          title: failureThreshold
          type: integer
        initialDelaySeconds:
          description: The delay before the first probe in seconds.
          format: int32
          title: initialDelaySeconds
          type: integer
        periodSeconds:
          description: The length of time between probes in seconds.
          format: int32
          title: periodSeconds
          type: integer
        successThreshold:
          description: The number of successful probes before returning a healthy
            status.
          format: int32
          title: successThreshold
          type: integer
        timeoutSeconds:
          description: The probe timeout in seconds.
          format: int32
          title: timeoutSeconds
          type: integer
      title: LivenessProbeRequirements
      type: object
    Model:
      description: An Azure Machine Learning Model.
      example:
        modifiedTime: 2000-01-23T04:56:07.000+00:00
        parentModelId: sklearn_mnist_root:1
        description: "A mnist model, first version."
        datasets:
        - name: name
          id: id
        - name: name
          id: id
        mimeType: mimeType
        version: 1
        url: url
        framework: framework
        frameworkVersion: frameworkVersion
        name: sklearn_mnist
        createdTime: 2000-01-23T04:56:07.000+00:00
        kvTags:
          key: kvTags
        id: sklearn_mnist:1
        runId: runId
        unpack: true
        experimentName: experimentName
        properties:
          key: properties
      properties:
        createdTime:
          description: The Model creation time (UTC).
          format: date-time
          readOnly: true
          title: createdTime
          type: string
        datasets:
          description: The list of datasets associated with the model.
          items:
            $ref: '#/components/schemas/DatasetReference'
          title: datasets
          type: array
        description:
          description: The Model description text.
          example: "A mnist model, first version."
          title: description
          type: string
        experimentName:
          description: The name of the experiment where this model was created.
          title: experimentName
          type: string
        framework:
          description: The Model framework.
          title: framework
          type: string
        frameworkVersion:
          description: The Model framework version.
          title: frameworkVersion
          type: string
        id:
          description: The Model Id.
          example: sklearn_mnist:1
          title: id
          type: string
        kvTags:
          additionalProperties:
            type: string
          description: The Model tag dictionary. Items are mutable.
          title: kvTags
          type: object
        mimeType:
          description: "The MIME type of Model content. For more details about MIME\
            \ type, please open https://www.iana.org/assignments/media-types/media-types.xhtml"
          title: mimeType
          type: string
        modifiedTime:
          description: The Model last modified time (UTC).
          format: date-time
          readOnly: true
          title: modifiedTime
          type: string
        name:
          description: The Model name.
          example: sklearn_mnist
          title: name
          type: string
        parentModelId:
          description: The Parent Model Id.
          example: sklearn_mnist_root:1
          title: parentModelId
          type: string
        properties:
          additionalProperties:
            type: string
          description: The Model property dictionary. Properties are immutable.
          title: properties
          type: object
        runId:
          description: The RunId that created this model.
          title: runId
          type: string
        unpack:
          description: Indicates whether we need to unpack the Model during docker
            Image creation.
          title: unpack
          type: boolean
        url:
          description: The URL of the Model. Usually a SAS URL.
          title: url
          type: string
        version:
          description: The Model version assigned by Model Management Service.
          example: 1
          format: int64
          title: version
          type: integer
      required:
      - mimeType
      - name
      - url
      title: Model
      type: object
    ModelDataCollection:
      description: The Model data collection properties.
      properties:
        eventHubEnabled:
          description: Option for enabling/disabling Event Hub.
          title: eventHubEnabled
          type: boolean
        storageEnabled:
          description: Option for enabling/disabling storage.
          title: storageEnabled
          type: boolean
      title: ModelDataCollection
      type: object
    ModelDockerSection:
      example:
        gpuSupport: false
        shmSize: 1g
        sharedVolumes: true
        baseImage: ubuntu:latest
        arguments:
        - arguments
        - arguments
        baseDockerfile: "FROM ubuntu:latest\r\nRUN echo \"Hello world!\""
        enabled: true
        baseImageRegistry:
          password: password
          address: address
          username: username
      properties:
        arguments:
          description: Extra arguments to the Docker run command.
          items:
            type: string
          title: arguments
          type: array
        baseDockerfile:
          description: Base Dockerfile used for Docker-based runs. Mutually exclusive
            with BaseImage.
          example: "FROM ubuntu:latest\r\nRUN echo \"Hello world!\""
          title: baseDockerfile
          type: string
        baseImage:
          description: Base image used for Docker-based runs. Mutually exclusive with
            BaseDockerfile.
          example: ubuntu:latest
          title: baseImage
          type: string
        baseImageRegistry:
          $ref: '#/components/schemas/ContainerRegistry'
        enabled:
          description: Set True to perform this run inside a Docker container.
          example: true
          title: enabled
          type: boolean
        gpuSupport:
          description: Run with NVidia Docker extension to support GPUs.
          example: false
          title: gpuSupport
          type: boolean
        sharedVolumes:
          description: Set False if necessary to work around shared volume bugs on
            Windows.
          example: true
          title: sharedVolumes
          type: boolean
        shmSize:
          description: The shared memory size setting for NVidia GPUs.
          example: 1g
          title: shmSize
          type: string
      title: ModelDockerSection
      type: object
    ModelEnvironmentDefinition:
      example:
        python:
          baseCondaEnvironment: baseCondaEnvironment
          userManagedDependencies: true
          condaDependencies: "{}"
          interpreterPath: interpreterPath
        spark:
          repositories:
          - repositories
          - repositories
          precachePackages: true
          packages:
          - artifact: artifact
            version: version
            group: group
          - artifact: artifact
            version: version
            group: group
        environmentVariables:
          key: environmentVariables
        inferencingStackVersion: latest
        name: mydevenvironment
        version: "1"
        docker:
          gpuSupport: false
          shmSize: 1g
          sharedVolumes: true
          baseImage: ubuntu:latest
          arguments:
          - arguments
          - arguments
          baseDockerfile: "FROM ubuntu:latest\r\nRUN echo \"Hello world!\""
          enabled: true
          baseImageRegistry:
            password: password
            address: address
            username: username
      properties:
        docker:
          $ref: '#/components/schemas/ModelDockerSection'
        environmentVariables:
          additionalProperties:
            type: string
          description: Definition of environment variables to be defined in the environment.
          title: environmentVariables
          type: object
        inferencingStackVersion:
          description: The Inferencing stack version.
          example: latest
          title: inferencingStackVersion
          type: string
        name:
          description: The name of the environment.
          example: mydevenvironment
          title: name
          type: string
        python:
          $ref: '#/components/schemas/ModelPythonSection'
        spark:
          $ref: '#/components/schemas/ModelSparkSection'
        version:
          description: The environment version.
          example: "1"
          title: version
          type: string
      title: ModelEnvironmentDefinition
      type: object
    ModelErrorResponse:
      description: The Model Management Service Error object.
      example:
        code: code
        details:
        - code: code
          message: message
          target: target
        - code: code
          message: message
          target: target
        message: message
        statusCode: 0
      properties:
        code:
          description: The error code.
          title: code
          type: string
        details:
          description: An array of error detail objects.
          items:
            $ref: '#/components/schemas/ErrorDetails'
          title: details
          type: array
        message:
          description: The error message.
          title: message
          type: string
        statusCode:
          description: The HTTP status code.
          format: int32
          title: statusCode
          type: integer
      title: ModelErrorResponse
      type: object
    ModelOperationalState:
      description: The operational state of the Model.
      example:
        deploymentSummary:
          unsuccessfulDeployments: 6
          successfulDeployments: 0
        startTime: startTime
        endTime: endTime
      properties:
        deploymentSummary:
          $ref: '#/components/schemas/DeploymentSummary'
        endTime:
          description: The deployment end time.
          title: endTime
          type: string
        startTime:
          description: The deployment start time.
          title: startTime
          type: string
      title: ModelOperationalState
      type: object
    ModelPythonSection:
      example:
        baseCondaEnvironment: baseCondaEnvironment
        userManagedDependencies: true
        condaDependencies: "{}"
        interpreterPath: interpreterPath
      properties:
        baseCondaEnvironment:
          title: baseCondaEnvironment
          type: string
        condaDependencies:
          properties: {}
          title: condaDependencies
          type: object
        interpreterPath:
          description: The python interpreter path. This is only used when user_managed_dependencies=True.
          title: interpreterPath
          type: string
        userManagedDependencies:
          description: True means that AzureML reuses an existing python environment;
            False means that AzureML will create a python environment based on the
            Conda dependencies specification.
          title: userManagedDependencies
          type: boolean
      title: ModelPythonSection
      type: object
    ModelSparkSection:
      example:
        repositories:
        - repositories
        - repositories
        precachePackages: true
        packages:
        - artifact: artifact
          version: version
          group: group
        - artifact: artifact
          version: version
          group: group
      properties:
        packages:
          description: The Spark packages to use.
          items:
            $ref: '#/components/schemas/SparkMavenPackage'
          title: packages
          type: array
        precachePackages:
          description: Whether to precache the packages.
          example: true
          title: precachePackages
          type: boolean
        repositories:
          description: The list of spark repositories.
          items:
            type: string
          title: repositories
          type: array
      title: ModelSparkSection
      type: object
    PaginatedAssetList:
      description: A paginated list of Assets.
      example:
        value:
        - meta:
            key: meta
          name: name
          createdTime: 2000-01-23T04:56:07.000+00:00
          description: description
          kvTags:
            key: kvTags
          id: id
          runid: runid
          properties:
            key: properties
          artifacts:
          - prefix: prefix
            id: id
          - prefix: prefix
            id: id
        - meta:
            key: meta
          name: name
          createdTime: 2000-01-23T04:56:07.000+00:00
          description: description
          kvTags:
            key: kvTags
          id: id
          runid: runid
          properties:
            key: properties
          artifacts:
          - prefix: prefix
            id: id
          - prefix: prefix
            id: id
        nextLink: nextLink
      properties:
        nextLink:
          description: A continuation link (absolute URI) to the next page of results
            in the list.
          title: nextLink
          type: string
        value:
          description: An array of objects of type Asset.
          items:
            $ref: '#/components/schemas/Asset'
          title: value
          type: array
      title: PaginatedAssetList
      type: object
    PaginatedModelList:
      description: A paginated list of Models.
      example:
        value:
        - modifiedTime: 2000-01-23T04:56:07.000+00:00
          parentModelId: sklearn_mnist_root:1
          description: "A mnist model, first version."
          datasets:
          - name: name
            id: id
          - name: name
            id: id
          mimeType: mimeType
          version: 1
          url: url
          framework: framework
          frameworkVersion: frameworkVersion
          name: sklearn_mnist
          createdTime: 2000-01-23T04:56:07.000+00:00
          kvTags:
            key: kvTags
          id: sklearn_mnist:1
          runId: runId
          unpack: true
          experimentName: experimentName
          properties:
            key: properties
        - modifiedTime: 2000-01-23T04:56:07.000+00:00
          parentModelId: sklearn_mnist_root:1
          description: "A mnist model, first version."
          datasets:
          - name: name
            id: id
          - name: name
            id: id
          mimeType: mimeType
          version: 1
          url: url
          framework: framework
          frameworkVersion: frameworkVersion
          name: sklearn_mnist
          createdTime: 2000-01-23T04:56:07.000+00:00
          kvTags:
            key: kvTags
          id: sklearn_mnist:1
          runId: runId
          unpack: true
          experimentName: experimentName
          properties:
            key: properties
        nextLink: nextLink
      properties:
        nextLink:
          description: A continuation link (absolute URI) to the next page of results
            in the list.
          title: nextLink
          type: string
        value:
          description: An array of objects of type Model.
          items:
            $ref: '#/components/schemas/Model'
          title: value
          type: array
      title: PaginatedModelList
      type: object
    PaginatedProfileResponseList:
      description: A paginated list of ProfileResponses.
      example:
        value:
        - inputData: inputData
          imageId: imageId
          description: description
          error:
            code: code
            details:
            - code: code
              message: message
              target: target
            - code: code
              message: message
              target: target
            message: message
            statusCode: 0
          recommendationLatencyInMs: 0.8008281904610115
          recommendedCpu: 6.027456183070403
          profileRunResult: profileRunResult
          profilingErrorLogs: profilingErrorLogs
          name: name
          createdTime: 2000-01-23T04:56:07.000+00:00
          kvTags:
            key: kvTags
          state: state
          recommendedMemoryInGB: 1.4658129805029452
          properties:
            key: properties
        - inputData: inputData
          imageId: imageId
          description: description
          error:
            code: code
            details:
            - code: code
              message: message
              target: target
            - code: code
              message: message
              target: target
            message: message
            statusCode: 0
          recommendationLatencyInMs: 0.8008281904610115
          recommendedCpu: 6.027456183070403
          profileRunResult: profileRunResult
          profilingErrorLogs: profilingErrorLogs
          name: name
          createdTime: 2000-01-23T04:56:07.000+00:00
          kvTags:
            key: kvTags
          state: state
          recommendedMemoryInGB: 1.4658129805029452
          properties:
            key: properties
        nextLink: nextLink
      properties:
        nextLink:
          description: A continuation link (absolute URI) to the next page of results
            in the list.
          title: nextLink
          type: string
        value:
          description: An array of objects of type ProfileResponse.
          items:
            $ref: '#/components/schemas/ProfileResponse'
          title: value
          type: array
      title: PaginatedProfileResponseList
      type: object
    PaginatedServiceList:
      description: A paginated list of Services.
      example:
        value:
        - updatedTime: 2000-01-23T04:56:07.000+00:00
          deploymentType: HttpRealtimeEndpoint
          computeType: AKS
          name: name
          createdTime: 2000-01-23T04:56:07.000+00:00
          description: description
          kvTags:
            key: kvTags
          operationId: operationId
          id: id
          state: Healthy
          error:
            code: code
            details:
            - code: code
              message: message
              target: target
            - code: code
              message: message
              target: target
            message: message
            statusCode: 0
          properties:
            key: properties
        - updatedTime: 2000-01-23T04:56:07.000+00:00
          deploymentType: HttpRealtimeEndpoint
          computeType: AKS
          name: name
          createdTime: 2000-01-23T04:56:07.000+00:00
          description: description
          kvTags:
            key: kvTags
          operationId: operationId
          id: id
          state: Healthy
          error:
            code: code
            details:
            - code: code
              message: message
              target: target
            - code: code
              message: message
              target: target
            message: message
            statusCode: 0
          properties:
            key: properties
        nextLink: nextLink
      properties:
        nextLink:
          description: A continuation link (absolute URI) to the next page of results
            in the list.
          title: nextLink
          type: string
        value:
          description: An array of objects of type Service.
          items:
            $ref: '#/components/schemas/ServiceResponseBase'
          title: value
          type: array
      title: PaginatedServiceList
      type: object
    ProfileRequestBase:
      description: The request for creating a profile.
      example:
        inputData: inputData
        name: name
        description: description
        kvTags:
          key: kvTags
        properties:
          key: properties
      properties:
        description:
          description: The profile description.
          title: description
          type: string
        inputData:
          description: The profile input data.
          title: inputData
          type: string
        kvTags:
          additionalProperties:
            type: string
          description: The tags dictionary.
          title: kvTags
          type: object
        name:
          description: The profile name.
          title: name
          type: string
        properties:
          additionalProperties:
            type: string
          description: The properties dictionary.
          title: properties
          type: object
      required:
      - name
      title: ProfileRequestBase
      type: object
    ProfileResponse:
      description: The profile response.
      example:
        inputData: inputData
        imageId: imageId
        description: description
        error:
          code: code
          details:
          - code: code
            message: message
            target: target
          - code: code
            message: message
            target: target
          message: message
          statusCode: 0
        recommendationLatencyInMs: 0.8008281904610115
        recommendedCpu: 6.027456183070403
        profileRunResult: profileRunResult
        profilingErrorLogs: profilingErrorLogs
        name: name
        createdTime: 2000-01-23T04:56:07.000+00:00
        kvTags:
          key: kvTags
        state: state
        recommendedMemoryInGB: 1.4658129805029452
        properties:
          key: properties
      properties:
        createdTime:
          description: The profile creation time (UTC).
          format: date-time
          title: createdTime
          type: string
        description:
          description: The profile description.
          title: description
          type: string
        error:
          $ref: '#/components/schemas/ModelErrorResponse'
        imageId:
          description: The Image Id.
          title: imageId
          type: string
        inputData:
          description: The input data.
          title: inputData
          type: string
        kvTags:
          additionalProperties:
            type: string
          description: The profile tags dictionary. Tags are mutable.
          title: kvTags
          type: object
        name:
          description: The profile name.
          title: name
          type: string
        profileRunResult:
          description: The profile run result.
          title: profileRunResult
          type: string
        profilingErrorLogs:
          description: The profiling error logs.
          title: profilingErrorLogs
          type: string
        properties:
          additionalProperties:
            type: string
          description: The profile properties dictionary. Properties are immutable.
          title: properties
          type: object
        recommendationLatencyInMs:
          description: Latency associated with the recommended memory/cpu config
          format: double
          title: recommendationLatencyInMs
          type: number
        recommendedCpu:
          description: The recommended CPU allocation.
          format: double
          title: recommendedCpu
          type: number
        recommendedMemoryInGB:
          description: The recommended amount of memory to allocate in GB.
          format: double
          title: recommendedMemoryInGB
          type: number
        state:
          description: The state of the profile.
          title: state
          type: string
      title: ProfileResponse
      type: object
    RegenerateServiceKeysRequest:
      example:
        keyValue: keyValue
        keyType: 0
      properties:
        keyType:
          description: Specification for which type of key to generate.
          format: int32
          title: keyType
          type: integer
          x-ms-enum:
            modelAsString: false
            name: KeyType
        keyValue:
          description: The value the key is set to.
          title: keyValue
          type: string
      title: RegenerateServiceKeysRequest
      type: object
    RegistryInfo:
      description: Contains registry information.
      properties:
        location:
          description: The location.
          title: location
          type: string
        password:
          description: The password.
          title: password
          type: string
        user:
          description: The user.
          title: user
          type: string
      required:
      - location
      - password
      - user
      title: RegistryInfo
      type: object
    ServiceResponseBase:
      description: The base service response. The correct inherited response based
        on computeType will be returned (ex. ACIServiceResponse)
      discriminator:
        propertyName: computeType
      example:
        updatedTime: 2000-01-23T04:56:07.000+00:00
        deploymentType: HttpRealtimeEndpoint
        computeType: AKS
        name: name
        createdTime: 2000-01-23T04:56:07.000+00:00
        description: description
        kvTags:
          key: kvTags
        operationId: operationId
        id: id
        state: Healthy
        error:
          code: code
          details:
          - code: code
            message: message
            target: target
          - code: code
            message: message
            target: target
          message: message
          statusCode: 0
        properties:
          key: properties
      properties:
        computeType:
          description: The compute environment type for the service.
          enum:
          - ACI
          - AKS
          - AMLCOMPUTE
          - IOT
          - AKSENDPOINT
          - UNKNOWN
          example: AKS
          title: computeType
          type: string
          x-ms-enum:
            modelAsString: false
            name: ComputeEnvironmentType
        createdTime:
          description: The time the service was created.
          format: date-time
          title: createdTime
          type: string
        deploymentType:
          description: The deployment type for the service.
          enum:
          - GRPCRealtimeEndpoint
          - HttpRealtimeEndpoint
          - Batch
          example: HttpRealtimeEndpoint
          title: deploymentType
          type: string
          x-ms-enum:
            modelAsString: false
            name: DeploymentType
        description:
          description: The service description.
          title: description
          type: string
        error:
          $ref: '#/components/schemas/ModelErrorResponse'
        id:
          description: The service Id.
          title: id
          type: string
        kvTags:
          additionalProperties:
            type: string
          description: The service tag dictionary. Tags are mutable.
          title: kvTags
          type: object
        name:
          description: The service name.
          title: name
          type: string
        operationId:
          description: The ID of the latest asynchronous operation for this service.
          title: operationId
          type: string
        properties:
          additionalProperties:
            type: string
          description: The service property dictionary. Properties are immutable.
          title: properties
          type: object
        state:
          description: The current state of the service.
          enum:
          - Transitioning
          - Healthy
          - Unhealthy
          - Failed
          example: Healthy
          title: state
          type: string
          x-ms-enum:
            modelAsString: false
            name: WebServiceState
        updatedTime:
          description: The time the service was updated.
          format: date-time
          title: updatedTime
          type: string
      required:
      - computeType
      title: ServiceResponseBase
      type: object
    SparkMavenPackage:
      example:
        artifact: artifact
        version: version
        group: group
      properties:
        artifact:
          title: artifact
          type: string
        group:
          title: group
          type: string
        version:
          title: version
          type: string
      title: SparkMavenPackage
      type: object
    TargetRuntime:
      description: The target runtime.
      properties:
        osType:
          description: The target operating system.
          enum:
          - Linux
          - Windows
          example: linux
          title: osType
          type: string
          x-ms-enum:
            modelAsString: false
            name: OSType
        properties:
          additionalProperties:
            type: string
          description: The properties dictionary.
          readOnly: true
          title: properties
          type: object
        runtimeType:
          description: The target runtime type.
          enum:
          - SparkPython
          - Tlc37
          - Tlc38
          - Tlc310
          - Python
          - PythonSlim
          - PythonCustom
          example: Python
          title: runtimeType
          type: string
          x-ms-enum:
            modelAsString: false
            name: RuntimeType
        targetArchitecture:
          description: The target architecture.
          enum:
          - Amd64
          - Arm32v7
          example: Amd64
          title: targetArchitecture
          type: string
          x-ms-enum:
            modelAsString: false
            name: ArchitectureType
      title: TargetRuntime
      type: object
    UnknownServiceResponse:
      allOf:
      - $ref: '#/components/schemas/ServiceResponseBase'
      - type: object
      description: "The response for an unsupported Service\r\nDefines the basic service\
        \ properties"
      x-ms-discriminator-value: UNKNOWON
  securitySchemes:
    azure_auth:
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
      type: oauth2
      x-tokenInfoFunc: openapi_server.controllers.security_controller.info_from_azure_auth
      x-scopeValidateFunc: openapi_server.controllers.security_controller.validate_scope_azure_auth
x-original-swagger-version: "2.0"
