/*
 * Azure Machine Learning Model Management Service
 * These APIs allow end users to manage Azure Machine Learning Models, Images, Profiles, and Services.
 *
 * The version of the OpenAPI document: 2019-08-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.JsonPatchOperation;
import org.openapitools.client.model.Model;
import org.openapitools.client.model.ModelErrorResponse;
import org.openapitools.client.model.ModelOperationalState;
import org.openapitools.client.model.PaginatedModelList;
import java.util.UUID;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ModelApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public ModelApi() {
        this(Configuration.getDefaultApiClient());
    }

    public ModelApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for mLModelsDelete
     * @param subscriptionId The Azure Subscription ID. (required)
     * @param resourceGroup The Name of the resource group in which the workspace is located. (required)
     * @param workspace The name of the workspace. (required)
     * @param id The model id. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The resource exists and was deleted successfully. </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> The resource does not exist and the request was well formed. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call mLModelsDeleteCall(UUID subscriptionId, String resourceGroup, String workspace, String id, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/modelmanagement/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.MachineLearningServices/workspaces/{workspace}/models/{id}"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroup" + "}", localVarApiClient.escapeString(resourceGroup.toString()))
            .replace("{" + "workspace" + "}", localVarApiClient.escapeString(workspace.toString()))
            .replace("{" + "id" + "}", localVarApiClient.escapeString(id.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call mLModelsDeleteValidateBeforeCall(UUID subscriptionId, String resourceGroup, String workspace, String id, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling mLModelsDelete(Async)");
        }

        // verify the required parameter 'resourceGroup' is set
        if (resourceGroup == null) {
            throw new ApiException("Missing the required parameter 'resourceGroup' when calling mLModelsDelete(Async)");
        }

        // verify the required parameter 'workspace' is set
        if (workspace == null) {
            throw new ApiException("Missing the required parameter 'workspace' when calling mLModelsDelete(Async)");
        }

        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling mLModelsDelete(Async)");
        }

        return mLModelsDeleteCall(subscriptionId, resourceGroup, workspace, id, _callback);

    }

    /**
     * Delete the specified Model.
     * Deletes a model if it exists.
     * @param subscriptionId The Azure Subscription ID. (required)
     * @param resourceGroup The Name of the resource group in which the workspace is located. (required)
     * @param workspace The name of the workspace. (required)
     * @param id The model id. (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The resource exists and was deleted successfully. </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> The resource does not exist and the request was well formed. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public void mLModelsDelete(UUID subscriptionId, String resourceGroup, String workspace, String id) throws ApiException {
        mLModelsDeleteWithHttpInfo(subscriptionId, resourceGroup, workspace, id);
    }

    /**
     * Delete the specified Model.
     * Deletes a model if it exists.
     * @param subscriptionId The Azure Subscription ID. (required)
     * @param resourceGroup The Name of the resource group in which the workspace is located. (required)
     * @param workspace The name of the workspace. (required)
     * @param id The model id. (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The resource exists and was deleted successfully. </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> The resource does not exist and the request was well formed. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> mLModelsDeleteWithHttpInfo(UUID subscriptionId, String resourceGroup, String workspace, String id) throws ApiException {
        okhttp3.Call localVarCall = mLModelsDeleteValidateBeforeCall(subscriptionId, resourceGroup, workspace, id, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     * Delete the specified Model. (asynchronously)
     * Deletes a model if it exists.
     * @param subscriptionId The Azure Subscription ID. (required)
     * @param resourceGroup The Name of the resource group in which the workspace is located. (required)
     * @param workspace The name of the workspace. (required)
     * @param id The model id. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The resource exists and was deleted successfully. </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> The resource does not exist and the request was well formed. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call mLModelsDeleteAsync(UUID subscriptionId, String resourceGroup, String workspace, String id, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = mLModelsDeleteValidateBeforeCall(subscriptionId, resourceGroup, workspace, id, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for mLModelsGetMetrics
     * @param subscriptionId The Azure Subscription ID. (required)
     * @param resourceGroup The Name of the resource group in which the workspace is located. (required)
     * @param workspace The name of the workspace. (required)
     * @param id The Model Id. (required)
     * @param startDate The start date from which to retrieve metrics, ISO 8601 literal format. (optional)
     * @param endDate The end date from which to retrieve metrics, ISO 8601 literal format. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call mLModelsGetMetricsCall(UUID subscriptionId, String resourceGroup, String workspace, String id, String startDate, String endDate, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/modelmanagement/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.MachineLearningServices/workspaces/{workspace}/models/{id}/metrics"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroup" + "}", localVarApiClient.escapeString(resourceGroup.toString()))
            .replace("{" + "workspace" + "}", localVarApiClient.escapeString(workspace.toString()))
            .replace("{" + "id" + "}", localVarApiClient.escapeString(id.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (startDate != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("startDate", startDate));
        }

        if (endDate != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("endDate", endDate));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call mLModelsGetMetricsValidateBeforeCall(UUID subscriptionId, String resourceGroup, String workspace, String id, String startDate, String endDate, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling mLModelsGetMetrics(Async)");
        }

        // verify the required parameter 'resourceGroup' is set
        if (resourceGroup == null) {
            throw new ApiException("Missing the required parameter 'resourceGroup' when calling mLModelsGetMetrics(Async)");
        }

        // verify the required parameter 'workspace' is set
        if (workspace == null) {
            throw new ApiException("Missing the required parameter 'workspace' when calling mLModelsGetMetrics(Async)");
        }

        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling mLModelsGetMetrics(Async)");
        }

        return mLModelsGetMetricsCall(subscriptionId, resourceGroup, workspace, id, startDate, endDate, _callback);

    }

    /**
     * Retrieve the metrics for a Model.
     * The operational events collected for the Model are returned.
     * @param subscriptionId The Azure Subscription ID. (required)
     * @param resourceGroup The Name of the resource group in which the workspace is located. (required)
     * @param workspace The name of the workspace. (required)
     * @param id The Model Id. (required)
     * @param startDate The start date from which to retrieve metrics, ISO 8601 literal format. (optional)
     * @param endDate The end date from which to retrieve metrics, ISO 8601 literal format. (optional)
     * @return ModelOperationalState
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ModelOperationalState mLModelsGetMetrics(UUID subscriptionId, String resourceGroup, String workspace, String id, String startDate, String endDate) throws ApiException {
        ApiResponse<ModelOperationalState> localVarResp = mLModelsGetMetricsWithHttpInfo(subscriptionId, resourceGroup, workspace, id, startDate, endDate);
        return localVarResp.getData();
    }

    /**
     * Retrieve the metrics for a Model.
     * The operational events collected for the Model are returned.
     * @param subscriptionId The Azure Subscription ID. (required)
     * @param resourceGroup The Name of the resource group in which the workspace is located. (required)
     * @param workspace The name of the workspace. (required)
     * @param id The Model Id. (required)
     * @param startDate The start date from which to retrieve metrics, ISO 8601 literal format. (optional)
     * @param endDate The end date from which to retrieve metrics, ISO 8601 literal format. (optional)
     * @return ApiResponse&lt;ModelOperationalState&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ModelOperationalState> mLModelsGetMetricsWithHttpInfo(UUID subscriptionId, String resourceGroup, String workspace, String id, String startDate, String endDate) throws ApiException {
        okhttp3.Call localVarCall = mLModelsGetMetricsValidateBeforeCall(subscriptionId, resourceGroup, workspace, id, startDate, endDate, null);
        Type localVarReturnType = new TypeToken<ModelOperationalState>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Retrieve the metrics for a Model. (asynchronously)
     * The operational events collected for the Model are returned.
     * @param subscriptionId The Azure Subscription ID. (required)
     * @param resourceGroup The Name of the resource group in which the workspace is located. (required)
     * @param workspace The name of the workspace. (required)
     * @param id The Model Id. (required)
     * @param startDate The start date from which to retrieve metrics, ISO 8601 literal format. (optional)
     * @param endDate The end date from which to retrieve metrics, ISO 8601 literal format. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call mLModelsGetMetricsAsync(UUID subscriptionId, String resourceGroup, String workspace, String id, String startDate, String endDate, final ApiCallback<ModelOperationalState> _callback) throws ApiException {

        okhttp3.Call localVarCall = mLModelsGetMetricsValidateBeforeCall(subscriptionId, resourceGroup, workspace, id, startDate, endDate, _callback);
        Type localVarReturnType = new TypeToken<ModelOperationalState>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for mLModelsListQuery
     * @param subscriptionId The Azure Subscription ID. (required)
     * @param resourceGroup The Name of the resource group in which the workspace is located. (required)
     * @param workspace The name of the workspace. (required)
     * @param name The object name. (optional)
     * @param framework The framework. (optional)
     * @param description The object description. (optional)
     * @param count The number of items to retrieve in a page. (optional)
     * @param $skipToken The continuation token to retrieve the next page. (optional)
     * @param tags A set of tags with which to filter the returned models.              It is a comma separated string of tags key or tags key&#x3D;value              Example: tagKey1,tagKey2,tagKey3&#x3D;value3 (optional)
     * @param properties A set of properties with which to filter the returned models.              It is a comma separated string of properties key and/or properties key&#x3D;value              Example: propKey1,propKey2,propKey3&#x3D;value3 (optional)
     * @param runId The runId which created the model. (optional)
     * @param orderBy An option to specify how the models are ordered in the response. (optional, default to CreatedAtDesc)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call mLModelsListQueryCall(UUID subscriptionId, String resourceGroup, String workspace, String name, String framework, String description, Integer count, String $skipToken, String tags, String properties, String runId, String orderBy, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/modelmanagement/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.MachineLearningServices/workspaces/{workspace}/models"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroup" + "}", localVarApiClient.escapeString(resourceGroup.toString()))
            .replace("{" + "workspace" + "}", localVarApiClient.escapeString(workspace.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (name != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("name", name));
        }

        if (framework != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("framework", framework));
        }

        if (description != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("description", description));
        }

        if (count != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("count", count));
        }

        if ($skipToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$skipToken", $skipToken));
        }

        if (tags != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("tags", tags));
        }

        if (properties != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("properties", properties));
        }

        if (runId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("runId", runId));
        }

        if (orderBy != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("orderBy", orderBy));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call mLModelsListQueryValidateBeforeCall(UUID subscriptionId, String resourceGroup, String workspace, String name, String framework, String description, Integer count, String $skipToken, String tags, String properties, String runId, String orderBy, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling mLModelsListQuery(Async)");
        }

        // verify the required parameter 'resourceGroup' is set
        if (resourceGroup == null) {
            throw new ApiException("Missing the required parameter 'resourceGroup' when calling mLModelsListQuery(Async)");
        }

        // verify the required parameter 'workspace' is set
        if (workspace == null) {
            throw new ApiException("Missing the required parameter 'workspace' when calling mLModelsListQuery(Async)");
        }

        return mLModelsListQueryCall(subscriptionId, resourceGroup, workspace, name, framework, description, count, $skipToken, tags, properties, runId, orderBy, _callback);

    }

    /**
     * Query the list of Models in a workspace.
     * The result list can be filtered using tag and name. If no filter is passed, the query lists all the Models in the given workspace. The returned list is paginated and the count of items in each page is an optional parameter.
     * @param subscriptionId The Azure Subscription ID. (required)
     * @param resourceGroup The Name of the resource group in which the workspace is located. (required)
     * @param workspace The name of the workspace. (required)
     * @param name The object name. (optional)
     * @param framework The framework. (optional)
     * @param description The object description. (optional)
     * @param count The number of items to retrieve in a page. (optional)
     * @param $skipToken The continuation token to retrieve the next page. (optional)
     * @param tags A set of tags with which to filter the returned models.              It is a comma separated string of tags key or tags key&#x3D;value              Example: tagKey1,tagKey2,tagKey3&#x3D;value3 (optional)
     * @param properties A set of properties with which to filter the returned models.              It is a comma separated string of properties key and/or properties key&#x3D;value              Example: propKey1,propKey2,propKey3&#x3D;value3 (optional)
     * @param runId The runId which created the model. (optional)
     * @param orderBy An option to specify how the models are ordered in the response. (optional, default to CreatedAtDesc)
     * @return PaginatedModelList
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public PaginatedModelList mLModelsListQuery(UUID subscriptionId, String resourceGroup, String workspace, String name, String framework, String description, Integer count, String $skipToken, String tags, String properties, String runId, String orderBy) throws ApiException {
        ApiResponse<PaginatedModelList> localVarResp = mLModelsListQueryWithHttpInfo(subscriptionId, resourceGroup, workspace, name, framework, description, count, $skipToken, tags, properties, runId, orderBy);
        return localVarResp.getData();
    }

    /**
     * Query the list of Models in a workspace.
     * The result list can be filtered using tag and name. If no filter is passed, the query lists all the Models in the given workspace. The returned list is paginated and the count of items in each page is an optional parameter.
     * @param subscriptionId The Azure Subscription ID. (required)
     * @param resourceGroup The Name of the resource group in which the workspace is located. (required)
     * @param workspace The name of the workspace. (required)
     * @param name The object name. (optional)
     * @param framework The framework. (optional)
     * @param description The object description. (optional)
     * @param count The number of items to retrieve in a page. (optional)
     * @param $skipToken The continuation token to retrieve the next page. (optional)
     * @param tags A set of tags with which to filter the returned models.              It is a comma separated string of tags key or tags key&#x3D;value              Example: tagKey1,tagKey2,tagKey3&#x3D;value3 (optional)
     * @param properties A set of properties with which to filter the returned models.              It is a comma separated string of properties key and/or properties key&#x3D;value              Example: propKey1,propKey2,propKey3&#x3D;value3 (optional)
     * @param runId The runId which created the model. (optional)
     * @param orderBy An option to specify how the models are ordered in the response. (optional, default to CreatedAtDesc)
     * @return ApiResponse&lt;PaginatedModelList&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<PaginatedModelList> mLModelsListQueryWithHttpInfo(UUID subscriptionId, String resourceGroup, String workspace, String name, String framework, String description, Integer count, String $skipToken, String tags, String properties, String runId, String orderBy) throws ApiException {
        okhttp3.Call localVarCall = mLModelsListQueryValidateBeforeCall(subscriptionId, resourceGroup, workspace, name, framework, description, count, $skipToken, tags, properties, runId, orderBy, null);
        Type localVarReturnType = new TypeToken<PaginatedModelList>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Query the list of Models in a workspace. (asynchronously)
     * The result list can be filtered using tag and name. If no filter is passed, the query lists all the Models in the given workspace. The returned list is paginated and the count of items in each page is an optional parameter.
     * @param subscriptionId The Azure Subscription ID. (required)
     * @param resourceGroup The Name of the resource group in which the workspace is located. (required)
     * @param workspace The name of the workspace. (required)
     * @param name The object name. (optional)
     * @param framework The framework. (optional)
     * @param description The object description. (optional)
     * @param count The number of items to retrieve in a page. (optional)
     * @param $skipToken The continuation token to retrieve the next page. (optional)
     * @param tags A set of tags with which to filter the returned models.              It is a comma separated string of tags key or tags key&#x3D;value              Example: tagKey1,tagKey2,tagKey3&#x3D;value3 (optional)
     * @param properties A set of properties with which to filter the returned models.              It is a comma separated string of properties key and/or properties key&#x3D;value              Example: propKey1,propKey2,propKey3&#x3D;value3 (optional)
     * @param runId The runId which created the model. (optional)
     * @param orderBy An option to specify how the models are ordered in the response. (optional, default to CreatedAtDesc)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call mLModelsListQueryAsync(UUID subscriptionId, String resourceGroup, String workspace, String name, String framework, String description, Integer count, String $skipToken, String tags, String properties, String runId, String orderBy, final ApiCallback<PaginatedModelList> _callback) throws ApiException {

        okhttp3.Call localVarCall = mLModelsListQueryValidateBeforeCall(subscriptionId, resourceGroup, workspace, name, framework, description, count, $skipToken, tags, properties, runId, orderBy, _callback);
        Type localVarReturnType = new TypeToken<PaginatedModelList>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for mLModelsPatch
     * @param subscriptionId The Azure Subscription ID. (required)
     * @param resourceGroup The Name of the resource group in which the workspace is located. (required)
     * @param workspace The name of the workspace. (required)
     * @param id The model id. (required)
     * @param patch The payload that is used to patch the model. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call mLModelsPatchCall(UUID subscriptionId, String resourceGroup, String workspace, String id, List<JsonPatchOperation> patch, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = patch;

        // create path and map variables
        String localVarPath = "/modelmanagement/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.MachineLearningServices/workspaces/{workspace}/models/{id}"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroup" + "}", localVarApiClient.escapeString(resourceGroup.toString()))
            .replace("{" + "workspace" + "}", localVarApiClient.escapeString(workspace.toString()))
            .replace("{" + "id" + "}", localVarApiClient.escapeString(id.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json-patch+json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PATCH", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call mLModelsPatchValidateBeforeCall(UUID subscriptionId, String resourceGroup, String workspace, String id, List<JsonPatchOperation> patch, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling mLModelsPatch(Async)");
        }

        // verify the required parameter 'resourceGroup' is set
        if (resourceGroup == null) {
            throw new ApiException("Missing the required parameter 'resourceGroup' when calling mLModelsPatch(Async)");
        }

        // verify the required parameter 'workspace' is set
        if (workspace == null) {
            throw new ApiException("Missing the required parameter 'workspace' when calling mLModelsPatch(Async)");
        }

        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling mLModelsPatch(Async)");
        }

        // verify the required parameter 'patch' is set
        if (patch == null) {
            throw new ApiException("Missing the required parameter 'patch' when calling mLModelsPatch(Async)");
        }

        return mLModelsPatchCall(subscriptionId, resourceGroup, workspace, id, patch, _callback);

    }

    /**
     * Patch a specific model.
     * Updates an existing model with the specified patch.
     * @param subscriptionId The Azure Subscription ID. (required)
     * @param resourceGroup The Name of the resource group in which the workspace is located. (required)
     * @param workspace The name of the workspace. (required)
     * @param id The model id. (required)
     * @param patch The payload that is used to patch the model. (required)
     * @return Model
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public Model mLModelsPatch(UUID subscriptionId, String resourceGroup, String workspace, String id, List<JsonPatchOperation> patch) throws ApiException {
        ApiResponse<Model> localVarResp = mLModelsPatchWithHttpInfo(subscriptionId, resourceGroup, workspace, id, patch);
        return localVarResp.getData();
    }

    /**
     * Patch a specific model.
     * Updates an existing model with the specified patch.
     * @param subscriptionId The Azure Subscription ID. (required)
     * @param resourceGroup The Name of the resource group in which the workspace is located. (required)
     * @param workspace The name of the workspace. (required)
     * @param id The model id. (required)
     * @param patch The payload that is used to patch the model. (required)
     * @return ApiResponse&lt;Model&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Model> mLModelsPatchWithHttpInfo(UUID subscriptionId, String resourceGroup, String workspace, String id, List<JsonPatchOperation> patch) throws ApiException {
        okhttp3.Call localVarCall = mLModelsPatchValidateBeforeCall(subscriptionId, resourceGroup, workspace, id, patch, null);
        Type localVarReturnType = new TypeToken<Model>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Patch a specific model. (asynchronously)
     * Updates an existing model with the specified patch.
     * @param subscriptionId The Azure Subscription ID. (required)
     * @param resourceGroup The Name of the resource group in which the workspace is located. (required)
     * @param workspace The name of the workspace. (required)
     * @param id The model id. (required)
     * @param patch The payload that is used to patch the model. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call mLModelsPatchAsync(UUID subscriptionId, String resourceGroup, String workspace, String id, List<JsonPatchOperation> patch, final ApiCallback<Model> _callback) throws ApiException {

        okhttp3.Call localVarCall = mLModelsPatchValidateBeforeCall(subscriptionId, resourceGroup, workspace, id, patch, _callback);
        Type localVarReturnType = new TypeToken<Model>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for mLModelsQueryById
     * @param subscriptionId The Azure Subscription ID. (required)
     * @param resourceGroup The Name of the resource group in which the workspace is located. (required)
     * @param workspace The name of the workspace. (required)
     * @param id The model id. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call mLModelsQueryByIdCall(UUID subscriptionId, String resourceGroup, String workspace, String id, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/modelmanagement/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.MachineLearningServices/workspaces/{workspace}/models/{id}"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroup" + "}", localVarApiClient.escapeString(resourceGroup.toString()))
            .replace("{" + "workspace" + "}", localVarApiClient.escapeString(workspace.toString()))
            .replace("{" + "id" + "}", localVarApiClient.escapeString(id.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call mLModelsQueryByIdValidateBeforeCall(UUID subscriptionId, String resourceGroup, String workspace, String id, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling mLModelsQueryById(Async)");
        }

        // verify the required parameter 'resourceGroup' is set
        if (resourceGroup == null) {
            throw new ApiException("Missing the required parameter 'resourceGroup' when calling mLModelsQueryById(Async)");
        }

        // verify the required parameter 'workspace' is set
        if (workspace == null) {
            throw new ApiException("Missing the required parameter 'workspace' when calling mLModelsQueryById(Async)");
        }

        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling mLModelsQueryById(Async)");
        }

        return mLModelsQueryByIdCall(subscriptionId, resourceGroup, workspace, id, _callback);

    }

    /**
     * Gets a model.
     * Gets a model by model id.
     * @param subscriptionId The Azure Subscription ID. (required)
     * @param resourceGroup The Name of the resource group in which the workspace is located. (required)
     * @param workspace The name of the workspace. (required)
     * @param id The model id. (required)
     * @return Model
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public Model mLModelsQueryById(UUID subscriptionId, String resourceGroup, String workspace, String id) throws ApiException {
        ApiResponse<Model> localVarResp = mLModelsQueryByIdWithHttpInfo(subscriptionId, resourceGroup, workspace, id);
        return localVarResp.getData();
    }

    /**
     * Gets a model.
     * Gets a model by model id.
     * @param subscriptionId The Azure Subscription ID. (required)
     * @param resourceGroup The Name of the resource group in which the workspace is located. (required)
     * @param workspace The name of the workspace. (required)
     * @param id The model id. (required)
     * @return ApiResponse&lt;Model&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Model> mLModelsQueryByIdWithHttpInfo(UUID subscriptionId, String resourceGroup, String workspace, String id) throws ApiException {
        okhttp3.Call localVarCall = mLModelsQueryByIdValidateBeforeCall(subscriptionId, resourceGroup, workspace, id, null);
        Type localVarReturnType = new TypeToken<Model>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Gets a model. (asynchronously)
     * Gets a model by model id.
     * @param subscriptionId The Azure Subscription ID. (required)
     * @param resourceGroup The Name of the resource group in which the workspace is located. (required)
     * @param workspace The name of the workspace. (required)
     * @param id The model id. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call mLModelsQueryByIdAsync(UUID subscriptionId, String resourceGroup, String workspace, String id, final ApiCallback<Model> _callback) throws ApiException {

        okhttp3.Call localVarCall = mLModelsQueryByIdValidateBeforeCall(subscriptionId, resourceGroup, workspace, id, _callback);
        Type localVarReturnType = new TypeToken<Model>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for mLModelsRegister
     * @param subscriptionId The Azure Subscription ID. (required)
     * @param resourceGroup The Name of the resource group in which the workspace is located. (required)
     * @param workspace The name of the workspace. (required)
     * @param model The payload that is used to register the model. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The model registration was successful. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call mLModelsRegisterCall(UUID subscriptionId, String resourceGroup, String workspace, Model model, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = model;

        // create path and map variables
        String localVarPath = "/modelmanagement/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.MachineLearningServices/workspaces/{workspace}/models"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroup" + "}", localVarApiClient.escapeString(resourceGroup.toString()))
            .replace("{" + "workspace" + "}", localVarApiClient.escapeString(workspace.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call mLModelsRegisterValidateBeforeCall(UUID subscriptionId, String resourceGroup, String workspace, Model model, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling mLModelsRegister(Async)");
        }

        // verify the required parameter 'resourceGroup' is set
        if (resourceGroup == null) {
            throw new ApiException("Missing the required parameter 'resourceGroup' when calling mLModelsRegister(Async)");
        }

        // verify the required parameter 'workspace' is set
        if (workspace == null) {
            throw new ApiException("Missing the required parameter 'workspace' when calling mLModelsRegister(Async)");
        }

        // verify the required parameter 'model' is set
        if (model == null) {
            throw new ApiException("Missing the required parameter 'model' when calling mLModelsRegister(Async)");
        }

        return mLModelsRegisterCall(subscriptionId, resourceGroup, workspace, model, _callback);

    }

    /**
     * Register a model.
     * Register the model provided.
     * @param subscriptionId The Azure Subscription ID. (required)
     * @param resourceGroup The Name of the resource group in which the workspace is located. (required)
     * @param workspace The name of the workspace. (required)
     * @param model The payload that is used to register the model. (required)
     * @return Model
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The model registration was successful. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public Model mLModelsRegister(UUID subscriptionId, String resourceGroup, String workspace, Model model) throws ApiException {
        ApiResponse<Model> localVarResp = mLModelsRegisterWithHttpInfo(subscriptionId, resourceGroup, workspace, model);
        return localVarResp.getData();
    }

    /**
     * Register a model.
     * Register the model provided.
     * @param subscriptionId The Azure Subscription ID. (required)
     * @param resourceGroup The Name of the resource group in which the workspace is located. (required)
     * @param workspace The name of the workspace. (required)
     * @param model The payload that is used to register the model. (required)
     * @return ApiResponse&lt;Model&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The model registration was successful. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Model> mLModelsRegisterWithHttpInfo(UUID subscriptionId, String resourceGroup, String workspace, Model model) throws ApiException {
        okhttp3.Call localVarCall = mLModelsRegisterValidateBeforeCall(subscriptionId, resourceGroup, workspace, model, null);
        Type localVarReturnType = new TypeToken<Model>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Register a model. (asynchronously)
     * Register the model provided.
     * @param subscriptionId The Azure Subscription ID. (required)
     * @param resourceGroup The Name of the resource group in which the workspace is located. (required)
     * @param workspace The name of the workspace. (required)
     * @param model The payload that is used to register the model. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The model registration was successful. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call mLModelsRegisterAsync(UUID subscriptionId, String resourceGroup, String workspace, Model model, final ApiCallback<Model> _callback) throws ApiException {

        okhttp3.Call localVarCall = mLModelsRegisterValidateBeforeCall(subscriptionId, resourceGroup, workspace, model, _callback);
        Type localVarReturnType = new TypeToken<Model>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
