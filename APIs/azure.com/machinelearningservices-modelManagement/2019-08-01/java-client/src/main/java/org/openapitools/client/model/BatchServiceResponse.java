/*
 * Azure Machine Learning Model Management Service
 * These APIs allow end users to manage Azure Machine Learning Models, Images, Profiles, and Services.
 *
 * The version of the OpenAPI document: 2019-08-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.ModelDataCollection;
import org.openapitools.client.model.ModelErrorResponse;
import org.openapitools.client.model.ServiceResponseBase;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * BatchServiceResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:35:04.030214-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class BatchServiceResponse extends ServiceResponseBase {
  public static final String SERIALIZED_NAME_APP_INSIGHTS_ENABLED = "appInsightsEnabled";
  @SerializedName(SERIALIZED_NAME_APP_INSIGHTS_ENABLED)
  private Boolean appInsightsEnabled;

  public static final String SERIALIZED_NAME_COMPUTE_NAME = "computeName";
  @SerializedName(SERIALIZED_NAME_COMPUTE_NAME)
  private String computeName;

  public static final String SERIALIZED_NAME_ENTRY_SCRIPT = "entryScript";
  @SerializedName(SERIALIZED_NAME_ENTRY_SCRIPT)
  private String entryScript;

  public static final String SERIALIZED_NAME_ENVIRONMENT_NAME = "environmentName";
  @SerializedName(SERIALIZED_NAME_ENVIRONMENT_NAME)
  private String environmentName;

  public static final String SERIALIZED_NAME_ENVIRONMENT_VERSION = "environmentVersion";
  @SerializedName(SERIALIZED_NAME_ENVIRONMENT_VERSION)
  private String environmentVersion;

  public static final String SERIALIZED_NAME_ERROR_THRESHOLD = "errorThreshold";
  @SerializedName(SERIALIZED_NAME_ERROR_THRESHOLD)
  private Double errorThreshold;

  public static final String SERIALIZED_NAME_INPUT_FORMAT = "inputFormat";
  @SerializedName(SERIALIZED_NAME_INPUT_FORMAT)
  private String inputFormat;

  public static final String SERIALIZED_NAME_MINI_BATCH_SIZE = "miniBatchSize";
  @SerializedName(SERIALIZED_NAME_MINI_BATCH_SIZE)
  private Integer miniBatchSize;

  public static final String SERIALIZED_NAME_MODEL_DATA_COLLECTION = "modelDataCollection";
  @SerializedName(SERIALIZED_NAME_MODEL_DATA_COLLECTION)
  private ModelDataCollection modelDataCollection;

  public static final String SERIALIZED_NAME_MODEL_IDS = "modelIds";
  @SerializedName(SERIALIZED_NAME_MODEL_IDS)
  private List<String> modelIds = new ArrayList<>();

  public static final String SERIALIZED_NAME_NODE_COUNT = "nodeCount";
  @SerializedName(SERIALIZED_NAME_NODE_COUNT)
  private Integer nodeCount;

  public static final String SERIALIZED_NAME_OUTPUT_ACTION = "outputAction";
  @SerializedName(SERIALIZED_NAME_OUTPUT_ACTION)
  private String outputAction;

  public static final String SERIALIZED_NAME_PROCESS_COUNT_PER_NODE = "processCountPerNode";
  @SerializedName(SERIALIZED_NAME_PROCESS_COUNT_PER_NODE)
  private Integer processCountPerNode;

  public static final String SERIALIZED_NAME_SCORING_URI = "scoringUri";
  @SerializedName(SERIALIZED_NAME_SCORING_URI)
  private String scoringUri;

  public BatchServiceResponse() {
    this.computeType = this.getClass().getSimpleName();
  }

  public BatchServiceResponse appInsightsEnabled(Boolean appInsightsEnabled) {
    this.appInsightsEnabled = appInsightsEnabled;
    return this;
  }

  /**
   * Get appInsightsEnabled
   * @return appInsightsEnabled
   */
  @javax.annotation.Nullable
  public Boolean getAppInsightsEnabled() {
    return appInsightsEnabled;
  }

  public void setAppInsightsEnabled(Boolean appInsightsEnabled) {
    this.appInsightsEnabled = appInsightsEnabled;
  }


  public BatchServiceResponse computeName(String computeName) {
    this.computeName = computeName;
    return this;
  }

  /**
   * Get computeName
   * @return computeName
   */
  @javax.annotation.Nullable
  public String getComputeName() {
    return computeName;
  }

  public void setComputeName(String computeName) {
    this.computeName = computeName;
  }


  public BatchServiceResponse entryScript(String entryScript) {
    this.entryScript = entryScript;
    return this;
  }

  /**
   * Get entryScript
   * @return entryScript
   */
  @javax.annotation.Nullable
  public String getEntryScript() {
    return entryScript;
  }

  public void setEntryScript(String entryScript) {
    this.entryScript = entryScript;
  }


  public BatchServiceResponse environmentName(String environmentName) {
    this.environmentName = environmentName;
    return this;
  }

  /**
   * Get environmentName
   * @return environmentName
   */
  @javax.annotation.Nullable
  public String getEnvironmentName() {
    return environmentName;
  }

  public void setEnvironmentName(String environmentName) {
    this.environmentName = environmentName;
  }


  public BatchServiceResponse environmentVersion(String environmentVersion) {
    this.environmentVersion = environmentVersion;
    return this;
  }

  /**
   * Get environmentVersion
   * @return environmentVersion
   */
  @javax.annotation.Nullable
  public String getEnvironmentVersion() {
    return environmentVersion;
  }

  public void setEnvironmentVersion(String environmentVersion) {
    this.environmentVersion = environmentVersion;
  }


  public BatchServiceResponse errorThreshold(Double errorThreshold) {
    this.errorThreshold = errorThreshold;
    return this;
  }

  /**
   * Get errorThreshold
   * @return errorThreshold
   */
  @javax.annotation.Nullable
  public Double getErrorThreshold() {
    return errorThreshold;
  }

  public void setErrorThreshold(Double errorThreshold) {
    this.errorThreshold = errorThreshold;
  }


  public BatchServiceResponse inputFormat(String inputFormat) {
    this.inputFormat = inputFormat;
    return this;
  }

  /**
   * Get inputFormat
   * @return inputFormat
   */
  @javax.annotation.Nullable
  public String getInputFormat() {
    return inputFormat;
  }

  public void setInputFormat(String inputFormat) {
    this.inputFormat = inputFormat;
  }


  public BatchServiceResponse miniBatchSize(Integer miniBatchSize) {
    this.miniBatchSize = miniBatchSize;
    return this;
  }

  /**
   * Get miniBatchSize
   * @return miniBatchSize
   */
  @javax.annotation.Nullable
  public Integer getMiniBatchSize() {
    return miniBatchSize;
  }

  public void setMiniBatchSize(Integer miniBatchSize) {
    this.miniBatchSize = miniBatchSize;
  }


  public BatchServiceResponse modelDataCollection(ModelDataCollection modelDataCollection) {
    this.modelDataCollection = modelDataCollection;
    return this;
  }

  /**
   * Get modelDataCollection
   * @return modelDataCollection
   */
  @javax.annotation.Nullable
  public ModelDataCollection getModelDataCollection() {
    return modelDataCollection;
  }

  public void setModelDataCollection(ModelDataCollection modelDataCollection) {
    this.modelDataCollection = modelDataCollection;
  }


  public BatchServiceResponse modelIds(List<String> modelIds) {
    this.modelIds = modelIds;
    return this;
  }

  public BatchServiceResponse addModelIdsItem(String modelIdsItem) {
    if (this.modelIds == null) {
      this.modelIds = new ArrayList<>();
    }
    this.modelIds.add(modelIdsItem);
    return this;
  }

  /**
   * Get modelIds
   * @return modelIds
   */
  @javax.annotation.Nullable
  public List<String> getModelIds() {
    return modelIds;
  }

  public void setModelIds(List<String> modelIds) {
    this.modelIds = modelIds;
  }


  public BatchServiceResponse nodeCount(Integer nodeCount) {
    this.nodeCount = nodeCount;
    return this;
  }

  /**
   * Get nodeCount
   * @return nodeCount
   */
  @javax.annotation.Nullable
  public Integer getNodeCount() {
    return nodeCount;
  }

  public void setNodeCount(Integer nodeCount) {
    this.nodeCount = nodeCount;
  }


  public BatchServiceResponse outputAction(String outputAction) {
    this.outputAction = outputAction;
    return this;
  }

  /**
   * Get outputAction
   * @return outputAction
   */
  @javax.annotation.Nullable
  public String getOutputAction() {
    return outputAction;
  }

  public void setOutputAction(String outputAction) {
    this.outputAction = outputAction;
  }


  public BatchServiceResponse processCountPerNode(Integer processCountPerNode) {
    this.processCountPerNode = processCountPerNode;
    return this;
  }

  /**
   * Get processCountPerNode
   * @return processCountPerNode
   */
  @javax.annotation.Nullable
  public Integer getProcessCountPerNode() {
    return processCountPerNode;
  }

  public void setProcessCountPerNode(Integer processCountPerNode) {
    this.processCountPerNode = processCountPerNode;
  }


  public BatchServiceResponse scoringUri(String scoringUri) {
    this.scoringUri = scoringUri;
    return this;
  }

  /**
   * Get scoringUri
   * @return scoringUri
   */
  @javax.annotation.Nullable
  public String getScoringUri() {
    return scoringUri;
  }

  public void setScoringUri(String scoringUri) {
    this.scoringUri = scoringUri;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BatchServiceResponse batchServiceResponse = (BatchServiceResponse) o;
    return Objects.equals(this.appInsightsEnabled, batchServiceResponse.appInsightsEnabled) &&
        Objects.equals(this.computeName, batchServiceResponse.computeName) &&
        Objects.equals(this.entryScript, batchServiceResponse.entryScript) &&
        Objects.equals(this.environmentName, batchServiceResponse.environmentName) &&
        Objects.equals(this.environmentVersion, batchServiceResponse.environmentVersion) &&
        Objects.equals(this.errorThreshold, batchServiceResponse.errorThreshold) &&
        Objects.equals(this.inputFormat, batchServiceResponse.inputFormat) &&
        Objects.equals(this.miniBatchSize, batchServiceResponse.miniBatchSize) &&
        Objects.equals(this.modelDataCollection, batchServiceResponse.modelDataCollection) &&
        Objects.equals(this.modelIds, batchServiceResponse.modelIds) &&
        Objects.equals(this.nodeCount, batchServiceResponse.nodeCount) &&
        Objects.equals(this.outputAction, batchServiceResponse.outputAction) &&
        Objects.equals(this.processCountPerNode, batchServiceResponse.processCountPerNode) &&
        Objects.equals(this.scoringUri, batchServiceResponse.scoringUri) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(appInsightsEnabled, computeName, entryScript, environmentName, environmentVersion, errorThreshold, inputFormat, miniBatchSize, modelDataCollection, modelIds, nodeCount, outputAction, processCountPerNode, scoringUri, super.hashCode());
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BatchServiceResponse {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    appInsightsEnabled: ").append(toIndentedString(appInsightsEnabled)).append("\n");
    sb.append("    computeName: ").append(toIndentedString(computeName)).append("\n");
    sb.append("    entryScript: ").append(toIndentedString(entryScript)).append("\n");
    sb.append("    environmentName: ").append(toIndentedString(environmentName)).append("\n");
    sb.append("    environmentVersion: ").append(toIndentedString(environmentVersion)).append("\n");
    sb.append("    errorThreshold: ").append(toIndentedString(errorThreshold)).append("\n");
    sb.append("    inputFormat: ").append(toIndentedString(inputFormat)).append("\n");
    sb.append("    miniBatchSize: ").append(toIndentedString(miniBatchSize)).append("\n");
    sb.append("    modelDataCollection: ").append(toIndentedString(modelDataCollection)).append("\n");
    sb.append("    modelIds: ").append(toIndentedString(modelIds)).append("\n");
    sb.append("    nodeCount: ").append(toIndentedString(nodeCount)).append("\n");
    sb.append("    outputAction: ").append(toIndentedString(outputAction)).append("\n");
    sb.append("    processCountPerNode: ").append(toIndentedString(processCountPerNode)).append("\n");
    sb.append("    scoringUri: ").append(toIndentedString(scoringUri)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("computeType");
    openapiFields.add("createdTime");
    openapiFields.add("deploymentType");
    openapiFields.add("description");
    openapiFields.add("error");
    openapiFields.add("id");
    openapiFields.add("kvTags");
    openapiFields.add("name");
    openapiFields.add("operationId");
    openapiFields.add("properties");
    openapiFields.add("state");
    openapiFields.add("updatedTime");
    openapiFields.add("appInsightsEnabled");
    openapiFields.add("computeName");
    openapiFields.add("entryScript");
    openapiFields.add("environmentName");
    openapiFields.add("environmentVersion");
    openapiFields.add("errorThreshold");
    openapiFields.add("inputFormat");
    openapiFields.add("miniBatchSize");
    openapiFields.add("modelDataCollection");
    openapiFields.add("modelIds");
    openapiFields.add("nodeCount");
    openapiFields.add("outputAction");
    openapiFields.add("processCountPerNode");
    openapiFields.add("scoringUri");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("computeType");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to BatchServiceResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!BatchServiceResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in BatchServiceResponse is not found in the empty JSON string", BatchServiceResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!BatchServiceResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `BatchServiceResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : BatchServiceResponse.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!BatchServiceResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'BatchServiceResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<BatchServiceResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(BatchServiceResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<BatchServiceResponse>() {
           @Override
           public void write(JsonWriter out, BatchServiceResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public BatchServiceResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of BatchServiceResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of BatchServiceResponse
   * @throws IOException if the JSON string is invalid with respect to BatchServiceResponse
   */
  public static BatchServiceResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, BatchServiceResponse.class);
  }

  /**
   * Convert an instance of BatchServiceResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

