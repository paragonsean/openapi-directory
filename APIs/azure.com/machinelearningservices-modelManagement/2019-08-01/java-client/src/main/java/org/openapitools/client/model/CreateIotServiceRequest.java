/*
 * Azure Machine Learning Model Management Service
 * These APIs allow end users to manage Azure Machine Learning Models, Images, Profiles, and Services.
 *
 * The version of the OpenAPI document: 2019-08-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.AuthKeys;
import org.openapitools.client.model.CreateServiceRequest;
import org.openapitools.client.model.EnvironmentImageRequest;
import org.openapitools.client.model.IotBaseModuleSettings;
import org.openapitools.client.model.IotModuleSettings;
import org.openapitools.client.model.RegistryInfo;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreateIotServiceRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:35:04.030214-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateIotServiceRequest extends CreateServiceRequest {
  public static final String SERIALIZED_NAME_ACR_CREDENTIALS = "acrCredentials";
  @SerializedName(SERIALIZED_NAME_ACR_CREDENTIALS)
  private List<RegistryInfo> acrCredentials = new ArrayList<>();

  public static final String SERIALIZED_NAME_AUTH_ENABLED = "authEnabled";
  @SerializedName(SERIALIZED_NAME_AUTH_ENABLED)
  private Boolean authEnabled;

  public static final String SERIALIZED_NAME_COMPUTE_NAME = "computeName";
  @SerializedName(SERIALIZED_NAME_COMPUTE_NAME)
  private String computeName;

  public static final String SERIALIZED_NAME_IOT_DEVICE_ID = "iotDeviceId";
  @SerializedName(SERIALIZED_NAME_IOT_DEVICE_ID)
  private String iotDeviceId;

  public static final String SERIALIZED_NAME_IOT_EDGE_MODULE = "iotEdgeModule";
  @SerializedName(SERIALIZED_NAME_IOT_EDGE_MODULE)
  private IotBaseModuleSettings iotEdgeModule;

  public static final String SERIALIZED_NAME_IOT_EDGE_USER_MODULE = "iotEdgeUserModule";
  @SerializedName(SERIALIZED_NAME_IOT_EDGE_USER_MODULE)
  private List<IotModuleSettings> iotEdgeUserModule = new ArrayList<>();

  public static final String SERIALIZED_NAME_ROUTES = "routes";
  @SerializedName(SERIALIZED_NAME_ROUTES)
  private Map<String, String> routes = new HashMap<>();

  public CreateIotServiceRequest() {
    this.computeType = this.getClass().getSimpleName();
  }

  public CreateIotServiceRequest acrCredentials(List<RegistryInfo> acrCredentials) {
    this.acrCredentials = acrCredentials;
    return this;
  }

  public CreateIotServiceRequest addAcrCredentialsItem(RegistryInfo acrCredentialsItem) {
    if (this.acrCredentials == null) {
      this.acrCredentials = new ArrayList<>();
    }
    this.acrCredentials.add(acrCredentialsItem);
    return this;
  }

  /**
   * Get acrCredentials
   * @return acrCredentials
   */
  @javax.annotation.Nullable
  public List<RegistryInfo> getAcrCredentials() {
    return acrCredentials;
  }

  public void setAcrCredentials(List<RegistryInfo> acrCredentials) {
    this.acrCredentials = acrCredentials;
  }


  public CreateIotServiceRequest authEnabled(Boolean authEnabled) {
    this.authEnabled = authEnabled;
    return this;
  }

  /**
   * Get authEnabled
   * @return authEnabled
   */
  @javax.annotation.Nullable
  public Boolean getAuthEnabled() {
    return authEnabled;
  }

  public void setAuthEnabled(Boolean authEnabled) {
    this.authEnabled = authEnabled;
  }


  public CreateIotServiceRequest computeName(String computeName) {
    this.computeName = computeName;
    return this;
  }

  /**
   * Get computeName
   * @return computeName
   */
  @javax.annotation.Nullable
  public String getComputeName() {
    return computeName;
  }

  public void setComputeName(String computeName) {
    this.computeName = computeName;
  }


  public CreateIotServiceRequest iotDeviceId(String iotDeviceId) {
    this.iotDeviceId = iotDeviceId;
    return this;
  }

  /**
   * Get iotDeviceId
   * @return iotDeviceId
   */
  @javax.annotation.Nullable
  public String getIotDeviceId() {
    return iotDeviceId;
  }

  public void setIotDeviceId(String iotDeviceId) {
    this.iotDeviceId = iotDeviceId;
  }


  public CreateIotServiceRequest iotEdgeModule(IotBaseModuleSettings iotEdgeModule) {
    this.iotEdgeModule = iotEdgeModule;
    return this;
  }

  /**
   * Get iotEdgeModule
   * @return iotEdgeModule
   */
  @javax.annotation.Nullable
  public IotBaseModuleSettings getIotEdgeModule() {
    return iotEdgeModule;
  }

  public void setIotEdgeModule(IotBaseModuleSettings iotEdgeModule) {
    this.iotEdgeModule = iotEdgeModule;
  }


  public CreateIotServiceRequest iotEdgeUserModule(List<IotModuleSettings> iotEdgeUserModule) {
    this.iotEdgeUserModule = iotEdgeUserModule;
    return this;
  }

  public CreateIotServiceRequest addIotEdgeUserModuleItem(IotModuleSettings iotEdgeUserModuleItem) {
    if (this.iotEdgeUserModule == null) {
      this.iotEdgeUserModule = new ArrayList<>();
    }
    this.iotEdgeUserModule.add(iotEdgeUserModuleItem);
    return this;
  }

  /**
   * Get iotEdgeUserModule
   * @return iotEdgeUserModule
   */
  @javax.annotation.Nullable
  public List<IotModuleSettings> getIotEdgeUserModule() {
    return iotEdgeUserModule;
  }

  public void setIotEdgeUserModule(List<IotModuleSettings> iotEdgeUserModule) {
    this.iotEdgeUserModule = iotEdgeUserModule;
  }


  public CreateIotServiceRequest routes(Map<String, String> routes) {
    this.routes = routes;
    return this;
  }

  public CreateIotServiceRequest putRoutesItem(String key, String routesItem) {
    if (this.routes == null) {
      this.routes = new HashMap<>();
    }
    this.routes.put(key, routesItem);
    return this;
  }

  /**
   * Get routes
   * @return routes
   */
  @javax.annotation.Nullable
  public Map<String, String> getRoutes() {
    return routes;
  }

  public void setRoutes(Map<String, String> routes) {
    this.routes = routes;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateIotServiceRequest createIotServiceRequest = (CreateIotServiceRequest) o;
    return Objects.equals(this.acrCredentials, createIotServiceRequest.acrCredentials) &&
        Objects.equals(this.authEnabled, createIotServiceRequest.authEnabled) &&
        Objects.equals(this.computeName, createIotServiceRequest.computeName) &&
        Objects.equals(this.iotDeviceId, createIotServiceRequest.iotDeviceId) &&
        Objects.equals(this.iotEdgeModule, createIotServiceRequest.iotEdgeModule) &&
        Objects.equals(this.iotEdgeUserModule, createIotServiceRequest.iotEdgeUserModule) &&
        Objects.equals(this.routes, createIotServiceRequest.routes) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(acrCredentials, authEnabled, computeName, iotDeviceId, iotEdgeModule, iotEdgeUserModule, routes, super.hashCode());
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateIotServiceRequest {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    acrCredentials: ").append(toIndentedString(acrCredentials)).append("\n");
    sb.append("    authEnabled: ").append(toIndentedString(authEnabled)).append("\n");
    sb.append("    computeName: ").append(toIndentedString(computeName)).append("\n");
    sb.append("    iotDeviceId: ").append(toIndentedString(iotDeviceId)).append("\n");
    sb.append("    iotEdgeModule: ").append(toIndentedString(iotEdgeModule)).append("\n");
    sb.append("    iotEdgeUserModule: ").append(toIndentedString(iotEdgeUserModule)).append("\n");
    sb.append("    routes: ").append(toIndentedString(routes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("computeType");
    openapiFields.add("deploymentType");
    openapiFields.add("description");
    openapiFields.add("environmentImageRequest");
    openapiFields.add("imageId");
    openapiFields.add("keys");
    openapiFields.add("kvTags");
    openapiFields.add("location");
    openapiFields.add("name");
    openapiFields.add("properties");
    openapiFields.add("acrCredentials");
    openapiFields.add("authEnabled");
    openapiFields.add("computeName");
    openapiFields.add("iotDeviceId");
    openapiFields.add("iotEdgeModule");
    openapiFields.add("iotEdgeUserModule");
    openapiFields.add("routes");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("computeType");
    openapiRequiredFields.add("name");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateIotServiceRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateIotServiceRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateIotServiceRequest is not found in the empty JSON string", CreateIotServiceRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateIotServiceRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateIotServiceRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CreateIotServiceRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateIotServiceRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateIotServiceRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateIotServiceRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateIotServiceRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateIotServiceRequest>() {
           @Override
           public void write(JsonWriter out, CreateIotServiceRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateIotServiceRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateIotServiceRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateIotServiceRequest
   * @throws IOException if the JSON string is invalid with respect to CreateIotServiceRequest
   */
  public static CreateIotServiceRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateIotServiceRequest.class);
  }

  /**
   * Convert an instance of CreateIotServiceRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

