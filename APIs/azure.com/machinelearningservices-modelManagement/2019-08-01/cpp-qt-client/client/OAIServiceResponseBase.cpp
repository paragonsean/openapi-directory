/**
 * Azure Machine Learning Model Management Service
 * These APIs allow end users to manage Azure Machine Learning Models, Images, Profiles, and Services.
 *
 * The version of the OpenAPI document: 2019-08-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIServiceResponseBase.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIServiceResponseBase::OAIServiceResponseBase(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIServiceResponseBase::OAIServiceResponseBase() {
    this->initializeModel();
}

OAIServiceResponseBase::~OAIServiceResponseBase() {}

void OAIServiceResponseBase::initializeModel() {

    m_compute_type_isSet = false;
    m_compute_type_isValid = false;

    m_created_time_isSet = false;
    m_created_time_isValid = false;

    m_deployment_type_isSet = false;
    m_deployment_type_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_error_isSet = false;
    m_error_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_kv_tags_isSet = false;
    m_kv_tags_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_operation_id_isSet = false;
    m_operation_id_isValid = false;

    m_properties_isSet = false;
    m_properties_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;

    m_updated_time_isSet = false;
    m_updated_time_isValid = false;
}

void OAIServiceResponseBase::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIServiceResponseBase::fromJsonObject(QJsonObject json) {

    m_compute_type_isValid = ::OpenAPI::fromJsonValue(m_compute_type, json[QString("computeType")]);
    m_compute_type_isSet = !json[QString("computeType")].isNull() && m_compute_type_isValid;

    m_created_time_isValid = ::OpenAPI::fromJsonValue(m_created_time, json[QString("createdTime")]);
    m_created_time_isSet = !json[QString("createdTime")].isNull() && m_created_time_isValid;

    m_deployment_type_isValid = ::OpenAPI::fromJsonValue(m_deployment_type, json[QString("deploymentType")]);
    m_deployment_type_isSet = !json[QString("deploymentType")].isNull() && m_deployment_type_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_error_isValid = ::OpenAPI::fromJsonValue(m_error, json[QString("error")]);
    m_error_isSet = !json[QString("error")].isNull() && m_error_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_kv_tags_isValid = ::OpenAPI::fromJsonValue(m_kv_tags, json[QString("kvTags")]);
    m_kv_tags_isSet = !json[QString("kvTags")].isNull() && m_kv_tags_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_operation_id_isValid = ::OpenAPI::fromJsonValue(m_operation_id, json[QString("operationId")]);
    m_operation_id_isSet = !json[QString("operationId")].isNull() && m_operation_id_isValid;

    m_properties_isValid = ::OpenAPI::fromJsonValue(m_properties, json[QString("properties")]);
    m_properties_isSet = !json[QString("properties")].isNull() && m_properties_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("state")]);
    m_state_isSet = !json[QString("state")].isNull() && m_state_isValid;

    m_updated_time_isValid = ::OpenAPI::fromJsonValue(m_updated_time, json[QString("updatedTime")]);
    m_updated_time_isSet = !json[QString("updatedTime")].isNull() && m_updated_time_isValid;
}

QString OAIServiceResponseBase::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIServiceResponseBase::asJsonObject() const {
    QJsonObject obj;
    if (m_compute_type_isSet) {
        obj.insert(QString("computeType"), ::OpenAPI::toJsonValue(m_compute_type));
    }
    if (m_created_time_isSet) {
        obj.insert(QString("createdTime"), ::OpenAPI::toJsonValue(m_created_time));
    }
    if (m_deployment_type_isSet) {
        obj.insert(QString("deploymentType"), ::OpenAPI::toJsonValue(m_deployment_type));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_error.isSet()) {
        obj.insert(QString("error"), ::OpenAPI::toJsonValue(m_error));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_kv_tags.size() > 0) {
        obj.insert(QString("kvTags"), ::OpenAPI::toJsonValue(m_kv_tags));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_operation_id_isSet) {
        obj.insert(QString("operationId"), ::OpenAPI::toJsonValue(m_operation_id));
    }
    if (m_properties.size() > 0) {
        obj.insert(QString("properties"), ::OpenAPI::toJsonValue(m_properties));
    }
    if (m_state_isSet) {
        obj.insert(QString("state"), ::OpenAPI::toJsonValue(m_state));
    }
    if (m_updated_time_isSet) {
        obj.insert(QString("updatedTime"), ::OpenAPI::toJsonValue(m_updated_time));
    }
    return obj;
}

QString OAIServiceResponseBase::getComputeType() const {
    return m_compute_type;
}
void OAIServiceResponseBase::setComputeType(const QString &compute_type) {
    m_compute_type = compute_type;
    m_compute_type_isSet = true;
}

bool OAIServiceResponseBase::is_compute_type_Set() const{
    return m_compute_type_isSet;
}

bool OAIServiceResponseBase::is_compute_type_Valid() const{
    return m_compute_type_isValid;
}

QDateTime OAIServiceResponseBase::getCreatedTime() const {
    return m_created_time;
}
void OAIServiceResponseBase::setCreatedTime(const QDateTime &created_time) {
    m_created_time = created_time;
    m_created_time_isSet = true;
}

bool OAIServiceResponseBase::is_created_time_Set() const{
    return m_created_time_isSet;
}

bool OAIServiceResponseBase::is_created_time_Valid() const{
    return m_created_time_isValid;
}

QString OAIServiceResponseBase::getDeploymentType() const {
    return m_deployment_type;
}
void OAIServiceResponseBase::setDeploymentType(const QString &deployment_type) {
    m_deployment_type = deployment_type;
    m_deployment_type_isSet = true;
}

bool OAIServiceResponseBase::is_deployment_type_Set() const{
    return m_deployment_type_isSet;
}

bool OAIServiceResponseBase::is_deployment_type_Valid() const{
    return m_deployment_type_isValid;
}

QString OAIServiceResponseBase::getDescription() const {
    return m_description;
}
void OAIServiceResponseBase::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIServiceResponseBase::is_description_Set() const{
    return m_description_isSet;
}

bool OAIServiceResponseBase::is_description_Valid() const{
    return m_description_isValid;
}

OAIModelErrorResponse OAIServiceResponseBase::getError() const {
    return m_error;
}
void OAIServiceResponseBase::setError(const OAIModelErrorResponse &error) {
    m_error = error;
    m_error_isSet = true;
}

bool OAIServiceResponseBase::is_error_Set() const{
    return m_error_isSet;
}

bool OAIServiceResponseBase::is_error_Valid() const{
    return m_error_isValid;
}

QString OAIServiceResponseBase::getId() const {
    return m_id;
}
void OAIServiceResponseBase::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIServiceResponseBase::is_id_Set() const{
    return m_id_isSet;
}

bool OAIServiceResponseBase::is_id_Valid() const{
    return m_id_isValid;
}

QMap<QString, QString> OAIServiceResponseBase::getKvTags() const {
    return m_kv_tags;
}
void OAIServiceResponseBase::setKvTags(const QMap<QString, QString> &kv_tags) {
    m_kv_tags = kv_tags;
    m_kv_tags_isSet = true;
}

bool OAIServiceResponseBase::is_kv_tags_Set() const{
    return m_kv_tags_isSet;
}

bool OAIServiceResponseBase::is_kv_tags_Valid() const{
    return m_kv_tags_isValid;
}

QString OAIServiceResponseBase::getName() const {
    return m_name;
}
void OAIServiceResponseBase::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIServiceResponseBase::is_name_Set() const{
    return m_name_isSet;
}

bool OAIServiceResponseBase::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIServiceResponseBase::getOperationId() const {
    return m_operation_id;
}
void OAIServiceResponseBase::setOperationId(const QString &operation_id) {
    m_operation_id = operation_id;
    m_operation_id_isSet = true;
}

bool OAIServiceResponseBase::is_operation_id_Set() const{
    return m_operation_id_isSet;
}

bool OAIServiceResponseBase::is_operation_id_Valid() const{
    return m_operation_id_isValid;
}

QMap<QString, QString> OAIServiceResponseBase::getProperties() const {
    return m_properties;
}
void OAIServiceResponseBase::setProperties(const QMap<QString, QString> &properties) {
    m_properties = properties;
    m_properties_isSet = true;
}

bool OAIServiceResponseBase::is_properties_Set() const{
    return m_properties_isSet;
}

bool OAIServiceResponseBase::is_properties_Valid() const{
    return m_properties_isValid;
}

QString OAIServiceResponseBase::getState() const {
    return m_state;
}
void OAIServiceResponseBase::setState(const QString &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAIServiceResponseBase::is_state_Set() const{
    return m_state_isSet;
}

bool OAIServiceResponseBase::is_state_Valid() const{
    return m_state_isValid;
}

QDateTime OAIServiceResponseBase::getUpdatedTime() const {
    return m_updated_time;
}
void OAIServiceResponseBase::setUpdatedTime(const QDateTime &updated_time) {
    m_updated_time = updated_time;
    m_updated_time_isSet = true;
}

bool OAIServiceResponseBase::is_updated_time_Set() const{
    return m_updated_time_isSet;
}

bool OAIServiceResponseBase::is_updated_time_Valid() const{
    return m_updated_time_isValid;
}

bool OAIServiceResponseBase::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_compute_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_deployment_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_error.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_kv_tags.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_operation_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_properties.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_updated_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIServiceResponseBase::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_compute_type_isValid && true;
}

} // namespace OpenAPI
