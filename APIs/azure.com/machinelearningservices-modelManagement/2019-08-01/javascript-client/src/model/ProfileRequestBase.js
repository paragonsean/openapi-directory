/**
 * Azure Machine Learning Model Management Service
 * These APIs allow end users to manage Azure Machine Learning Models, Images, Profiles, and Services.
 *
 * The version of the OpenAPI document: 2019-08-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ProfileRequestBase model module.
 * @module model/ProfileRequestBase
 * @version 2019-08-01
 */
class ProfileRequestBase {
    /**
     * Constructs a new <code>ProfileRequestBase</code>.
     * The request for creating a profile.
     * @alias module:model/ProfileRequestBase
     * @param name {String} The profile name.
     */
    constructor(name) { 
        
        ProfileRequestBase.initialize(this, name);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name) { 
        obj['name'] = name;
    }

    /**
     * Constructs a <code>ProfileRequestBase</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProfileRequestBase} obj Optional instance to populate.
     * @return {module:model/ProfileRequestBase} The populated <code>ProfileRequestBase</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProfileRequestBase();

            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('inputData')) {
                obj['inputData'] = ApiClient.convertToType(data['inputData'], 'String');
            }
            if (data.hasOwnProperty('kvTags')) {
                obj['kvTags'] = ApiClient.convertToType(data['kvTags'], {'String': 'String'});
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('properties')) {
                obj['properties'] = ApiClient.convertToType(data['properties'], {'String': 'String'});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ProfileRequestBase</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ProfileRequestBase</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ProfileRequestBase.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['inputData'] && !(typeof data['inputData'] === 'string' || data['inputData'] instanceof String)) {
            throw new Error("Expected the field `inputData` to be a primitive type in the JSON string but got " + data['inputData']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}

ProfileRequestBase.RequiredProperties = ["name"];

/**
 * The profile description.
 * @member {String} description
 */
ProfileRequestBase.prototype['description'] = undefined;

/**
 * The profile input data.
 * @member {String} inputData
 */
ProfileRequestBase.prototype['inputData'] = undefined;

/**
 * The tags dictionary.
 * @member {Object.<String, String>} kvTags
 */
ProfileRequestBase.prototype['kvTags'] = undefined;

/**
 * The profile name.
 * @member {String} name
 */
ProfileRequestBase.prototype['name'] = undefined;

/**
 * The properties dictionary.
 * @member {Object.<String, String>} properties
 */
ProfileRequestBase.prototype['properties'] = undefined;






export default ProfileRequestBase;

