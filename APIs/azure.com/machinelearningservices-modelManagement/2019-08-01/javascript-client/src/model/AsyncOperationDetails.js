/**
 * Azure Machine Learning Model Management Service
 * These APIs allow end users to manage Azure Machine Learning Models, Images, Profiles, and Services.
 *
 * The version of the OpenAPI document: 2019-08-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AsyncOperationDetails model module.
 * @module model/AsyncOperationDetails
 * @version 2019-08-01
 */
class AsyncOperationDetails {
    /**
     * Constructs a new <code>AsyncOperationDetails</code>.
     * The async operation details.
     * @alias module:model/AsyncOperationDetails
     */
    constructor() { 
        
        AsyncOperationDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AsyncOperationDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AsyncOperationDetails} obj Optional instance to populate.
     * @return {module:model/AsyncOperationDetails} The populated <code>AsyncOperationDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AsyncOperationDetails();

            if (data.hasOwnProperty('subOperationState')) {
                obj['subOperationState'] = ApiClient.convertToType(data['subOperationState'], 'String');
            }
            if (data.hasOwnProperty('subOperationType')) {
                obj['subOperationType'] = ApiClient.convertToType(data['subOperationType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AsyncOperationDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AsyncOperationDetails</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['subOperationState'] && !(typeof data['subOperationState'] === 'string' || data['subOperationState'] instanceof String)) {
            throw new Error("Expected the field `subOperationState` to be a primitive type in the JSON string but got " + data['subOperationState']);
        }
        // ensure the json data is a string
        if (data['subOperationType'] && !(typeof data['subOperationType'] === 'string' || data['subOperationType'] instanceof String)) {
            throw new Error("Expected the field `subOperationType` to be a primitive type in the JSON string but got " + data['subOperationType']);
        }

        return true;
    }


}



/**
 * The suboperation state.
 * @member {String} subOperationState
 */
AsyncOperationDetails.prototype['subOperationState'] = undefined;

/**
 * The suboperation type.
 * @member {String} subOperationType
 */
AsyncOperationDetails.prototype['subOperationType'] = undefined;






export default AsyncOperationDetails;

