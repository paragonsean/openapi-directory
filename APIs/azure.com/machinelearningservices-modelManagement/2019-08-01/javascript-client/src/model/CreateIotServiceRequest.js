/**
 * Azure Machine Learning Model Management Service
 * These APIs allow end users to manage Azure Machine Learning Models, Images, Profiles, and Services.
 *
 * The version of the OpenAPI document: 2019-08-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AuthKeys from './AuthKeys';
import CreateServiceRequest from './CreateServiceRequest';
import EnvironmentImageRequest from './EnvironmentImageRequest';
import IotBaseModuleSettings from './IotBaseModuleSettings';
import IotModuleSettings from './IotModuleSettings';
import RegistryInfo from './RegistryInfo';

/**
 * The CreateIotServiceRequest model module.
 * @module model/CreateIotServiceRequest
 * @version 2019-08-01
 */
class CreateIotServiceRequest {
    /**
     * Constructs a new <code>CreateIotServiceRequest</code>.
     * @alias module:model/CreateIotServiceRequest
     * @extends module:model/CreateServiceRequest
     * @implements module:model/CreateServiceRequest
     * @param computeType {module:model/CreateIotServiceRequest.ComputeTypeEnum} The compute environment type for the service.
     * @param name {String} The service name.
     */
    constructor(computeType, name) { 
        CreateServiceRequest.initialize(this, computeType, name);
        CreateIotServiceRequest.initialize(this, computeType, name);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, computeType, name) { 
    }

    /**
     * Constructs a <code>CreateIotServiceRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateIotServiceRequest} obj Optional instance to populate.
     * @return {module:model/CreateIotServiceRequest} The populated <code>CreateIotServiceRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateIotServiceRequest();
            CreateServiceRequest.constructFromObject(data, obj);
            CreateServiceRequest.constructFromObject(data, obj);

            if (data.hasOwnProperty('acrCredentials')) {
                obj['acrCredentials'] = ApiClient.convertToType(data['acrCredentials'], [RegistryInfo]);
            }
            if (data.hasOwnProperty('authEnabled')) {
                obj['authEnabled'] = ApiClient.convertToType(data['authEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('computeName')) {
                obj['computeName'] = ApiClient.convertToType(data['computeName'], 'String');
            }
            if (data.hasOwnProperty('iotDeviceId')) {
                obj['iotDeviceId'] = ApiClient.convertToType(data['iotDeviceId'], 'String');
            }
            if (data.hasOwnProperty('iotEdgeModule')) {
                obj['iotEdgeModule'] = IotBaseModuleSettings.constructFromObject(data['iotEdgeModule']);
            }
            if (data.hasOwnProperty('iotEdgeUserModule')) {
                obj['iotEdgeUserModule'] = ApiClient.convertToType(data['iotEdgeUserModule'], [IotModuleSettings]);
            }
            if (data.hasOwnProperty('routes')) {
                obj['routes'] = ApiClient.convertToType(data['routes'], {'String': 'String'});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateIotServiceRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateIotServiceRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateIotServiceRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['acrCredentials']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['acrCredentials'])) {
                throw new Error("Expected the field `acrCredentials` to be an array in the JSON data but got " + data['acrCredentials']);
            }
            // validate the optional field `acrCredentials` (array)
            for (const item of data['acrCredentials']) {
                RegistryInfo.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['computeName'] && !(typeof data['computeName'] === 'string' || data['computeName'] instanceof String)) {
            throw new Error("Expected the field `computeName` to be a primitive type in the JSON string but got " + data['computeName']);
        }
        // ensure the json data is a string
        if (data['iotDeviceId'] && !(typeof data['iotDeviceId'] === 'string' || data['iotDeviceId'] instanceof String)) {
            throw new Error("Expected the field `iotDeviceId` to be a primitive type in the JSON string but got " + data['iotDeviceId']);
        }
        // validate the optional field `iotEdgeModule`
        if (data['iotEdgeModule']) { // data not null
          IotBaseModuleSettings.validateJSON(data['iotEdgeModule']);
        }
        if (data['iotEdgeUserModule']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['iotEdgeUserModule'])) {
                throw new Error("Expected the field `iotEdgeUserModule` to be an array in the JSON data but got " + data['iotEdgeUserModule']);
            }
            // validate the optional field `iotEdgeUserModule` (array)
            for (const item of data['iotEdgeUserModule']) {
                IotModuleSettings.validateJSON(item);
            };
        }

        return true;
    }


}

CreateIotServiceRequest.RequiredProperties = ["computeType", "name"];

/**
 * @member {Array.<module:model/RegistryInfo>} acrCredentials
 */
CreateIotServiceRequest.prototype['acrCredentials'] = undefined;

/**
 * @member {Boolean} authEnabled
 */
CreateIotServiceRequest.prototype['authEnabled'] = undefined;

/**
 * @member {String} computeName
 */
CreateIotServiceRequest.prototype['computeName'] = undefined;

/**
 * @member {String} iotDeviceId
 */
CreateIotServiceRequest.prototype['iotDeviceId'] = undefined;

/**
 * @member {module:model/IotBaseModuleSettings} iotEdgeModule
 */
CreateIotServiceRequest.prototype['iotEdgeModule'] = undefined;

/**
 * @member {Array.<module:model/IotModuleSettings>} iotEdgeUserModule
 */
CreateIotServiceRequest.prototype['iotEdgeUserModule'] = undefined;

/**
 * @member {Object.<String, String>} routes
 */
CreateIotServiceRequest.prototype['routes'] = undefined;


// Implement CreateServiceRequest interface:
/**
 * The compute environment type for the service.
 * @member {module:model/CreateServiceRequest.ComputeTypeEnum} computeType
 */
CreateServiceRequest.prototype['computeType'] = undefined;
/**
 * The deployment type for the service.
 * @member {module:model/CreateServiceRequest.DeploymentTypeEnum} deploymentType
 */
CreateServiceRequest.prototype['deploymentType'] = undefined;
/**
 * The description of the service.
 * @member {String} description
 */
CreateServiceRequest.prototype['description'] = undefined;
/**
 * @member {module:model/EnvironmentImageRequest} environmentImageRequest
 */
CreateServiceRequest.prototype['environmentImageRequest'] = undefined;
/**
 * The Image Id.
 * @member {String} imageId
 */
CreateServiceRequest.prototype['imageId'] = undefined;
/**
 * @member {module:model/AuthKeys} keys
 */
CreateServiceRequest.prototype['keys'] = undefined;
/**
 * The service tag dictionary. Tags are mutable.
 * @member {Object.<String, String>} kvTags
 */
CreateServiceRequest.prototype['kvTags'] = undefined;
/**
 * The location of the service.
 * @member {String} location
 */
CreateServiceRequest.prototype['location'] = undefined;
/**
 * The service name.
 * @member {String} name
 */
CreateServiceRequest.prototype['name'] = undefined;
/**
 * The service properties dictionary. Properties are immutable.
 * @member {Object.<String, String>} properties
 */
CreateServiceRequest.prototype['properties'] = undefined;




export default CreateIotServiceRequest;

