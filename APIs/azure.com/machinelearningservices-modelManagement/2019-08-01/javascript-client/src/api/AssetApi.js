/**
 * Azure Machine Learning Model Management Service
 * These APIs allow end users to manage Azure Machine Learning Models, Images, Profiles, and Services.
 *
 * The version of the OpenAPI document: 2019-08-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Asset from '../model/Asset';
import JsonPatchOperation from '../model/JsonPatchOperation';
import ModelErrorResponse from '../model/ModelErrorResponse';
import PaginatedAssetList from '../model/PaginatedAssetList';

/**
* Asset service.
* @module api/AssetApi
* @version 2019-08-01
*/
export default class AssetApi {

    /**
    * Constructs a new AssetApi. 
    * @alias module:api/AssetApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the assetsCreate operation.
     * @callback module:api/AssetApi~assetsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Asset} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create an Asset.
     * Create an Asset from the provided payload.
     * @param {String} subscriptionId The Azure Subscription ID.
     * @param {String} resourceGroup The Name of the resource group in which the workspace is located.
     * @param {String} workspace The name of the workspace.
     * @param {Object} opts Optional parameters
     * @param {module:model/Asset} [asset] The Asset to be created.
     * @param {module:api/AssetApi~assetsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Asset}
     */
    assetsCreate(subscriptionId, resourceGroup, workspace, opts, callback) {
      opts = opts || {};
      let postBody = opts['asset'];
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling assetsCreate");
      }
      // verify the required parameter 'resourceGroup' is set
      if (resourceGroup === undefined || resourceGroup === null) {
        throw new Error("Missing the required parameter 'resourceGroup' when calling assetsCreate");
      }
      // verify the required parameter 'workspace' is set
      if (workspace === undefined || workspace === null) {
        throw new Error("Missing the required parameter 'workspace' when calling assetsCreate");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroup': resourceGroup,
        'workspace': workspace
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Asset;
      return this.apiClient.callApi(
        '/modelmanagement/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.MachineLearningServices/workspaces/{workspace}/assets', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the assetsDelete operation.
     * @callback module:api/AssetApi~assetsDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete an Asset.
     * Delete the specified Asset.
     * @param {String} subscriptionId The Azure Subscription ID.
     * @param {String} resourceGroup The Name of the resource group in which the workspace is located.
     * @param {String} workspace The name of the workspace.
     * @param {String} id The Id of the Asset to delete.
     * @param {module:api/AssetApi~assetsDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    assetsDelete(subscriptionId, resourceGroup, workspace, id, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling assetsDelete");
      }
      // verify the required parameter 'resourceGroup' is set
      if (resourceGroup === undefined || resourceGroup === null) {
        throw new Error("Missing the required parameter 'resourceGroup' when calling assetsDelete");
      }
      // verify the required parameter 'workspace' is set
      if (workspace === undefined || workspace === null) {
        throw new Error("Missing the required parameter 'workspace' when calling assetsDelete");
      }
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling assetsDelete");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroup': resourceGroup,
        'workspace': workspace,
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/modelmanagement/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.MachineLearningServices/workspaces/{workspace}/assets/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the assetsListQuery operation.
     * @callback module:api/AssetApi~assetsListQueryCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PaginatedAssetList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Query the list of Assets in a workspace.
     * If no filter is passed, the query lists all the Assets in the given workspace. The returned list is paginated and the count of items in each page is an optional parameter.
     * @param {String} subscriptionId The Azure Subscription ID.
     * @param {String} resourceGroup The Name of the resource group in which the workspace is located.
     * @param {String} workspace The name of the workspace.
     * @param {Object} opts Optional parameters
     * @param {String} [runId] The run Id associated with the Assets.
     * @param {String} [name] The object name.
     * @param {Number} [count] The number of items to retrieve in a page.
     * @param {String} [skipToken] The continuation token to retrieve the next page.
     * @param {String} [tags] A set of tags with which to filter the returned models.              It is a comma separated string of tags key or tags key=value              Example: tagKey1,tagKey2,tagKey3=value3
     * @param {String} [properties] A set of properties with which to filter the returned models.              It is a comma separated string of properties key and/or properties key=value              Example: propKey1,propKey2,propKey3=value3
     * @param {module:model/String} [orderby = 'CreatedAtDesc')] An option for specifying how to order the list.
     * @param {module:api/AssetApi~assetsListQueryCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PaginatedAssetList}
     */
    assetsListQuery(subscriptionId, resourceGroup, workspace, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling assetsListQuery");
      }
      // verify the required parameter 'resourceGroup' is set
      if (resourceGroup === undefined || resourceGroup === null) {
        throw new Error("Missing the required parameter 'resourceGroup' when calling assetsListQuery");
      }
      // verify the required parameter 'workspace' is set
      if (workspace === undefined || workspace === null) {
        throw new Error("Missing the required parameter 'workspace' when calling assetsListQuery");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroup': resourceGroup,
        'workspace': workspace
      };
      let queryParams = {
        'runId': opts['runId'],
        'name': opts['name'],
        'count': opts['count'],
        '$skipToken': opts['skipToken'],
        'tags': opts['tags'],
        'properties': opts['properties'],
        'orderby': opts['orderby']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PaginatedAssetList;
      return this.apiClient.callApi(
        '/modelmanagement/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.MachineLearningServices/workspaces/{workspace}/assets', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the assetsPatch operation.
     * @callback module:api/AssetApi~assetsPatchCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Asset} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update an Asset.
     * Patch a specific Asset.
     * @param {String} subscriptionId The Azure Subscription ID.
     * @param {String} resourceGroup The Name of the resource group in which the workspace is located.
     * @param {String} workspace The name of the workspace.
     * @param {String} id The Id of the Asset to patch.
     * @param {Array.<module:model/JsonPatchOperation>} patch The payload that is used to patch an Asset.
     * @param {module:api/AssetApi~assetsPatchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Asset}
     */
    assetsPatch(subscriptionId, resourceGroup, workspace, id, patch, callback) {
      let postBody = patch;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling assetsPatch");
      }
      // verify the required parameter 'resourceGroup' is set
      if (resourceGroup === undefined || resourceGroup === null) {
        throw new Error("Missing the required parameter 'resourceGroup' when calling assetsPatch");
      }
      // verify the required parameter 'workspace' is set
      if (workspace === undefined || workspace === null) {
        throw new Error("Missing the required parameter 'workspace' when calling assetsPatch");
      }
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling assetsPatch");
      }
      // verify the required parameter 'patch' is set
      if (patch === undefined || patch === null) {
        throw new Error("Missing the required parameter 'patch' when calling assetsPatch");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroup': resourceGroup,
        'workspace': workspace,
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json-patch+json'];
      let accepts = ['application/json'];
      let returnType = Asset;
      return this.apiClient.callApi(
        '/modelmanagement/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.MachineLearningServices/workspaces/{workspace}/assets/{id}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the assetsQueryById operation.
     * @callback module:api/AssetApi~assetsQueryByIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Asset} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get an Asset.
     * Get an Asset by Id.
     * @param {String} subscriptionId The Azure Subscription ID.
     * @param {String} resourceGroup The Name of the resource group in which the workspace is located.
     * @param {String} workspace The name of the workspace.
     * @param {String} id The Asset Id.
     * @param {module:api/AssetApi~assetsQueryByIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Asset}
     */
    assetsQueryById(subscriptionId, resourceGroup, workspace, id, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling assetsQueryById");
      }
      // verify the required parameter 'resourceGroup' is set
      if (resourceGroup === undefined || resourceGroup === null) {
        throw new Error("Missing the required parameter 'resourceGroup' when calling assetsQueryById");
      }
      // verify the required parameter 'workspace' is set
      if (workspace === undefined || workspace === null) {
        throw new Error("Missing the required parameter 'workspace' when calling assetsQueryById");
      }
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling assetsQueryById");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroup': resourceGroup,
        'workspace': workspace,
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Asset;
      return this.apiClient.callApi(
        '/modelmanagement/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.MachineLearningServices/workspaces/{workspace}/assets/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
