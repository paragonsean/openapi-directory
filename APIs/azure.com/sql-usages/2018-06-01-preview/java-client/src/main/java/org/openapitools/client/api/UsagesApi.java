/*
 * SqlManagementClient
 * The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.
 *
 * The version of the OpenAPI document: 2018-06-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.UsageListResult;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class UsagesApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public UsagesApi() {
        this(Configuration.getDefaultApiClient());
    }

    public UsagesApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for usagesListByInstancePool
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. (required)
     * @param instancePoolName The name of the instance pool to be retrieved. (required)
     * @param subscriptionId The subscription ID that identifies an Azure subscription. (required)
     * @param apiVersion The API version to use for the request. (required)
     * @param expandChildren Optional request parameter to include managed instance usages within the instance pool. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successfully retrieved the instance pool usages. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> *** Error Responses: ***   * 400 InstancePoolWrongUsageName - Request for an instance pool&#39;s usage has an unsupported usage name   * 400 InstancePoolManagedInstanceInfoUnavailable - Information for managed instances inside this instance pool is not available   * 404 InstancePoolNotFound - An instance pool cannot be found </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call usagesListByInstancePoolCall(String resourceGroupName, String instancePoolName, String subscriptionId, String apiVersion, Boolean expandChildren, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/instancePools/{instancePoolName}/usages"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "instancePoolName" + "}", localVarApiClient.escapeString(instancePoolName.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (expandChildren != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("expandChildren", expandChildren));
        }

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call usagesListByInstancePoolValidateBeforeCall(String resourceGroupName, String instancePoolName, String subscriptionId, String apiVersion, Boolean expandChildren, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling usagesListByInstancePool(Async)");
        }

        // verify the required parameter 'instancePoolName' is set
        if (instancePoolName == null) {
            throw new ApiException("Missing the required parameter 'instancePoolName' when calling usagesListByInstancePool(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling usagesListByInstancePool(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling usagesListByInstancePool(Async)");
        }

        return usagesListByInstancePoolCall(resourceGroupName, instancePoolName, subscriptionId, apiVersion, expandChildren, _callback);

    }

    /**
     * 
     * Gets all instance pool usage metrics
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. (required)
     * @param instancePoolName The name of the instance pool to be retrieved. (required)
     * @param subscriptionId The subscription ID that identifies an Azure subscription. (required)
     * @param apiVersion The API version to use for the request. (required)
     * @param expandChildren Optional request parameter to include managed instance usages within the instance pool. (optional)
     * @return UsageListResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successfully retrieved the instance pool usages. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> *** Error Responses: ***   * 400 InstancePoolWrongUsageName - Request for an instance pool&#39;s usage has an unsupported usage name   * 400 InstancePoolManagedInstanceInfoUnavailable - Information for managed instances inside this instance pool is not available   * 404 InstancePoolNotFound - An instance pool cannot be found </td><td>  -  </td></tr>
     </table>
     */
    public UsageListResult usagesListByInstancePool(String resourceGroupName, String instancePoolName, String subscriptionId, String apiVersion, Boolean expandChildren) throws ApiException {
        ApiResponse<UsageListResult> localVarResp = usagesListByInstancePoolWithHttpInfo(resourceGroupName, instancePoolName, subscriptionId, apiVersion, expandChildren);
        return localVarResp.getData();
    }

    /**
     * 
     * Gets all instance pool usage metrics
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. (required)
     * @param instancePoolName The name of the instance pool to be retrieved. (required)
     * @param subscriptionId The subscription ID that identifies an Azure subscription. (required)
     * @param apiVersion The API version to use for the request. (required)
     * @param expandChildren Optional request parameter to include managed instance usages within the instance pool. (optional)
     * @return ApiResponse&lt;UsageListResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successfully retrieved the instance pool usages. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> *** Error Responses: ***   * 400 InstancePoolWrongUsageName - Request for an instance pool&#39;s usage has an unsupported usage name   * 400 InstancePoolManagedInstanceInfoUnavailable - Information for managed instances inside this instance pool is not available   * 404 InstancePoolNotFound - An instance pool cannot be found </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<UsageListResult> usagesListByInstancePoolWithHttpInfo(String resourceGroupName, String instancePoolName, String subscriptionId, String apiVersion, Boolean expandChildren) throws ApiException {
        okhttp3.Call localVarCall = usagesListByInstancePoolValidateBeforeCall(resourceGroupName, instancePoolName, subscriptionId, apiVersion, expandChildren, null);
        Type localVarReturnType = new TypeToken<UsageListResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Gets all instance pool usage metrics
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. (required)
     * @param instancePoolName The name of the instance pool to be retrieved. (required)
     * @param subscriptionId The subscription ID that identifies an Azure subscription. (required)
     * @param apiVersion The API version to use for the request. (required)
     * @param expandChildren Optional request parameter to include managed instance usages within the instance pool. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successfully retrieved the instance pool usages. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> *** Error Responses: ***   * 400 InstancePoolWrongUsageName - Request for an instance pool&#39;s usage has an unsupported usage name   * 400 InstancePoolManagedInstanceInfoUnavailable - Information for managed instances inside this instance pool is not available   * 404 InstancePoolNotFound - An instance pool cannot be found </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call usagesListByInstancePoolAsync(String resourceGroupName, String instancePoolName, String subscriptionId, String apiVersion, Boolean expandChildren, final ApiCallback<UsageListResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = usagesListByInstancePoolValidateBeforeCall(resourceGroupName, instancePoolName, subscriptionId, apiVersion, expandChildren, _callback);
        Type localVarReturnType = new TypeToken<UsageListResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
