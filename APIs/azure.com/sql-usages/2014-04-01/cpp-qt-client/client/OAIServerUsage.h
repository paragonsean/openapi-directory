/**
 * Azure SQL Database
 * Provides create, read, update and delete functionality for Azure SQL Database resources including servers, databases, elastic pools, recommendations, operations, and usage metrics.
 *
 * The version of the OpenAPI document: 2014-04-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIServerUsage.h
 *
 * Represents server metrics.
 */

#ifndef OAIServerUsage_H
#define OAIServerUsage_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIServerUsage : public OAIObject {
public:
    OAIServerUsage();
    OAIServerUsage(QString json);
    ~OAIServerUsage() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getCurrentValue() const;
    void setCurrentValue(const double &current_value);
    bool is_current_value_Set() const;
    bool is_current_value_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    double getLimit() const;
    void setLimit(const double &limit);
    bool is_limit_Set() const;
    bool is_limit_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QDateTime getNextResetTime() const;
    void setNextResetTime(const QDateTime &next_reset_time);
    bool is_next_reset_time_Set() const;
    bool is_next_reset_time_Valid() const;

    QString getResourceName() const;
    void setResourceName(const QString &resource_name);
    bool is_resource_name_Set() const;
    bool is_resource_name_Valid() const;

    QString getUnit() const;
    void setUnit(const QString &unit);
    bool is_unit_Set() const;
    bool is_unit_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_current_value;
    bool m_current_value_isSet;
    bool m_current_value_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    double m_limit;
    bool m_limit_isSet;
    bool m_limit_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QDateTime m_next_reset_time;
    bool m_next_reset_time_isSet;
    bool m_next_reset_time_isValid;

    QString m_resource_name;
    bool m_resource_name_isSet;
    bool m_resource_name_isValid;

    QString m_unit;
    bool m_unit_isSet;
    bool m_unit_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIServerUsage)

#endif // OAIServerUsage_H
