/**
 * SqlManagementClient
 * The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.
 *
 * The version of the OpenAPI document: 2015-05-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISubscriptionUsageProperties.h
 *
 * Properties of a subscription usage.
 */

#ifndef OAISubscriptionUsageProperties_H
#define OAISubscriptionUsageProperties_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISubscriptionUsageProperties : public OAIObject {
public:
    OAISubscriptionUsageProperties();
    OAISubscriptionUsageProperties(QString json);
    ~OAISubscriptionUsageProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getCurrentValue() const;
    void setCurrentValue(const double &current_value);
    bool is_current_value_Set() const;
    bool is_current_value_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    double getLimit() const;
    void setLimit(const double &limit);
    bool is_limit_Set() const;
    bool is_limit_Valid() const;

    QString getUnit() const;
    void setUnit(const QString &unit);
    bool is_unit_Set() const;
    bool is_unit_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_current_value;
    bool m_current_value_isSet;
    bool m_current_value_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    double m_limit;
    bool m_limit_isSet;
    bool m_limit_isValid;

    QString m_unit;
    bool m_unit_isSet;
    bool m_unit_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISubscriptionUsageProperties)

#endif // OAISubscriptionUsageProperties_H
