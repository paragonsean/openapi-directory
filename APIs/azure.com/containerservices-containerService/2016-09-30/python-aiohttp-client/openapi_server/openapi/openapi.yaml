openapi: 3.0.1
info:
  description: The Container Service Client.
  title: ContainerServiceClient
  version: 2016-09-30
  x-apisguru-categories:
  - cloud
  x-logo:
    url: https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png
  x-origin:
  - format: swagger
    url: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/containerservices/resource-manager/Microsoft.ContainerService/stable/2016-09-30/containerService.json
    version: "2.0"
  x-preferred: false
  x-providerName: azure.com
  x-serviceName: containerservices-containerService
  x-tags:
  - Azure
  - Microsoft
servers:
- url: https://management.azure.com/
paths:
  /subscriptions/{subscriptionId}/providers/Microsoft.ContainerService/containerServices:
    get:
      deprecated: true
      description: "Gets a list of container services in the specified subscription.\
        \ The operation returns properties of each container service including state,\
        \ orchestrator, number of masters and agents, and FQDNs of masters and agents."
      operationId: container_services_list
      parameters:
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Subscription credentials which uniquely identify Microsoft Azure
          subscription. The subscription ID forms part of the URI for every service
          call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerServiceListResult'
          description: OK
      summary: Gets a list of container services in the specified subscription.
      tags:
      - ContainerServices
      x-ms-pageable:
        nextLinkName: nextLink
      x-openapi-router-controller: openapi_server.controllers.container_services_controller
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices:
    get:
      deprecated: true
      description: "Gets a list of container services in the specified subscription\
        \ and resource group. The operation returns properties of each container service\
        \ including state, orchestrator, number of masters and agents, and FQDNs of\
        \ masters and agents."
      operationId: container_services_list_by_resource_group
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api_version
        required: true
        schema:
          type: string
      - description: Subscription credentials which uniquely identify Microsoft Azure
          subscription. The subscription ID forms part of the URI for every service
          call.
        in: path
        name: subscription_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerServiceListResult'
          description: OK
      summary: Gets a list of container services in the specified resource group.
      tags:
      - ContainerService
      x-ms-pageable:
        nextLinkName: nextLink
      x-openapi-router-controller: openapi_server.controllers.container_service_controller
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices/{containerServiceName}
  : delete:
      deprecated: true
      description: "Deletes the specified container service in the specified subscription\
        \ and resource group. The operation does not delete other resources created\
        \ as part of creating a container service, including storage accounts, VMs,\
        \ and availability sets. All the other resources created with the container\
        \ service are part of the same resource group and can be deleted individually."
      operationId: container_services_delete
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the container service in the specified subscription
          and resource group.
        in: path
        name: containerServiceName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api_version
        required: true
        schema:
          type: string
      - description: Subscription credentials which uniquely identify Microsoft Azure
          subscription. The subscription ID forms part of the URI for every service
          call.
        in: path
        name: subscription_id
        required: true
        schema:
          type: string
      responses:
        "202":
          content: {}
          description: Accepted
        "204":
          content: {}
          description: Not found
      summary: Deletes the specified container service.
      tags:
      - ContainerService
      x-ms-long-running-operation: true
      x-openapi-router-controller: openapi_server.controllers.container_service_controller
    get:
      deprecated: true
      description: "Gets the properties of the specified container service in the\
        \ specified subscription and resource group. The operation returns the properties\
        \ including state, orchestrator, number of masters and agents, and FQDNs of\
        \ masters and agents. "
      operationId: container_services_get
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the container service in the specified subscription
          and resource group.
        in: path
        name: containerServiceName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api_version
        required: true
        schema:
          type: string
      - description: Subscription credentials which uniquely identify Microsoft Azure
          subscription. The subscription ID forms part of the URI for every service
          call.
        in: path
        name: subscription_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerService'
          description: OK
      summary: Gets the properties of the specified container service.
      tags:
      - ContainerService
      x-openapi-router-controller: openapi_server.controllers.container_service_controller
    put:
      deprecated: true
      description: "Creates or updates a container service with the specified configuration\
        \ of orchestrator, masters, and agents."
      operationId: container_services_create_or_update
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the container service in the specified subscription
          and resource group.
        in: path
        name: containerServiceName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api_version
        required: true
        schema:
          type: string
      - description: Subscription credentials which uniquely identify Microsoft Azure
          subscription. The subscription ID forms part of the URI for every service
          call.
        in: path
        name: subscription_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContainerService'
        description: Parameters supplied to the Create or Update a Container Service
          operation.
        required: true
        x-body-name: parameters
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerService'
          description: OK
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerService'
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerService'
          description: Accepted
      summary: Creates or updates a container service.
      tags:
      - ContainerServices
      x-ms-long-running-operation: true
      x-codegen-request-body-name: parameters
      x-openapi-router-controller: openapi_server.controllers.container_services_controller
components:
  parameters:
    ApiVersionParameter:
      description: Client Api Version.
      in: query
      name: api-version
      required: true
      schema:
        type: string
    SubscriptionIdParameter:
      description: Subscription credentials which uniquely identify Microsoft Azure
        subscription. The subscription ID forms part of the URI for every service
        call.
      in: path
      name: subscriptionId
      required: true
      schema:
        type: string
  schemas:
    ContainerService:
      allOf:
      - $ref: '#/components/schemas/Resource'
      description: Container service.
      example:
        properties:
          agentPoolProfiles:
          - fqdn: fqdn
            count: 8
            name: name
            dnsPrefix: dnsPrefix
            vmSize: Standard_A0
          - fqdn: fqdn
            count: 8
            name: name
            dnsPrefix: dnsPrefix
            vmSize: Standard_A0
          orchestratorProfile:
            orchestratorType: Swarm
          windowsProfile:
            adminUsername: adminUsername
            adminPassword: adminPassword
          servicePrincipalProfile:
            clientId: clientId
            secret: secret
          diagnosticsProfile:
            vmDiagnostics:
              storageUri: storageUri
              enabled: true
          customProfile:
            orchestrator: orchestrator
          provisioningState: provisioningState
          linuxProfile:
            adminUsername: adminUsername
            ssh:
              publicKeys:
              - keyData: keyData
              - keyData: keyData
          masterProfile:
            fqdn: fqdn
            count: 6
            dnsPrefix: dnsPrefix
      properties:
        properties:
          $ref: '#/components/schemas/ContainerServiceProperties'
      title: ContainerService
    ContainerServiceAgentPoolProfile:
      description: Profile for the container service agent pool.
      example:
        fqdn: fqdn
        count: 8
        name: name
        dnsPrefix: dnsPrefix
        vmSize: Standard_A0
      properties:
        count:
          default: 1
          description: 'Number of agents (VMs) to host docker containers. Allowed
            values must be in the range of 1 to 100 (inclusive). The default value
            is 1. '
          format: int32
          maximum: 100
          minimum: 1
          title: count
          type: integer
        dnsPrefix:
          description: DNS prefix to be used to create the FQDN for the agent pool.
          title: dnsPrefix
          type: string
        fqdn:
          description: FQDN for the agent pool.
          readOnly: true
          title: fqdn
          type: string
        name:
          description: Unique name of the agent pool profile in the context of the
            subscription and resource group.
          title: name
          type: string
        vmSize:
          description: Size of agent VMs.
          enum:
          - Standard_A0
          - Standard_A1
          - Standard_A2
          - Standard_A3
          - Standard_A4
          - Standard_A5
          - Standard_A6
          - Standard_A7
          - Standard_A8
          - Standard_A9
          - Standard_A10
          - Standard_A11
          - Standard_D1
          - Standard_D2
          - Standard_D3
          - Standard_D4
          - Standard_D11
          - Standard_D12
          - Standard_D13
          - Standard_D14
          - Standard_D1_v2
          - Standard_D2_v2
          - Standard_D3_v2
          - Standard_D4_v2
          - Standard_D5_v2
          - Standard_D11_v2
          - Standard_D12_v2
          - Standard_D13_v2
          - Standard_D14_v2
          - Standard_G1
          - Standard_G2
          - Standard_G3
          - Standard_G4
          - Standard_G5
          - Standard_DS1
          - Standard_DS2
          - Standard_DS3
          - Standard_DS4
          - Standard_DS11
          - Standard_DS12
          - Standard_DS13
          - Standard_DS14
          - Standard_GS1
          - Standard_GS2
          - Standard_GS3
          - Standard_GS4
          - Standard_GS5
          title: vmSize
          type: string
          x-ms-enum:
            modelAsString: true
            name: ContainerServiceVMSizeTypes
      required:
      - count
      - dnsPrefix
      - name
      - vmSize
      title: ContainerServiceAgentPoolProfile
      type: object
    ContainerServiceCustomProfile:
      description: Properties to configure a custom container service cluster.
      example:
        orchestrator: orchestrator
      properties:
        orchestrator:
          description: The name of the custom orchestrator to use.
          title: orchestrator
          type: string
      required:
      - orchestrator
      title: ContainerServiceCustomProfile
      type: object
    ContainerServiceDiagnosticsProfile:
      example:
        vmDiagnostics:
          storageUri: storageUri
          enabled: true
      properties:
        vmDiagnostics:
          $ref: '#/components/schemas/ContainerServiceVMDiagnostics'
      required:
      - vmDiagnostics
      title: ContainerServiceDiagnosticsProfile
      type: object
    ContainerServiceLinuxProfile:
      description: Profile for Linux VMs in the container service cluster.
      example:
        adminUsername: adminUsername
        ssh:
          publicKeys:
          - keyData: keyData
          - keyData: keyData
      properties:
        adminUsername:
          description: The administrator username to use for Linux VMs.
          pattern: "^[a-z][a-z0-9_-]*$"
          title: adminUsername
          type: string
        ssh:
          $ref: '#/components/schemas/ContainerServiceSshConfiguration'
      required:
      - adminUsername
      - ssh
      title: ContainerServiceLinuxProfile
      type: object
    ContainerServiceListResult:
      description: The response from the List Container Services operation.
      example:
        value:
        - properties:
            agentPoolProfiles:
            - fqdn: fqdn
              count: 8
              name: name
              dnsPrefix: dnsPrefix
              vmSize: Standard_A0
            - fqdn: fqdn
              count: 8
              name: name
              dnsPrefix: dnsPrefix
              vmSize: Standard_A0
            orchestratorProfile:
              orchestratorType: Swarm
            windowsProfile:
              adminUsername: adminUsername
              adminPassword: adminPassword
            servicePrincipalProfile:
              clientId: clientId
              secret: secret
            diagnosticsProfile:
              vmDiagnostics:
                storageUri: storageUri
                enabled: true
            customProfile:
              orchestrator: orchestrator
            provisioningState: provisioningState
            linuxProfile:
              adminUsername: adminUsername
              ssh:
                publicKeys:
                - keyData: keyData
                - keyData: keyData
            masterProfile:
              fqdn: fqdn
              count: 6
              dnsPrefix: dnsPrefix
        - properties:
            agentPoolProfiles:
            - fqdn: fqdn
              count: 8
              name: name
              dnsPrefix: dnsPrefix
              vmSize: Standard_A0
            - fqdn: fqdn
              count: 8
              name: name
              dnsPrefix: dnsPrefix
              vmSize: Standard_A0
            orchestratorProfile:
              orchestratorType: Swarm
            windowsProfile:
              adminUsername: adminUsername
              adminPassword: adminPassword
            servicePrincipalProfile:
              clientId: clientId
              secret: secret
            diagnosticsProfile:
              vmDiagnostics:
                storageUri: storageUri
                enabled: true
            customProfile:
              orchestrator: orchestrator
            provisioningState: provisioningState
            linuxProfile:
              adminUsername: adminUsername
              ssh:
                publicKeys:
                - keyData: keyData
                - keyData: keyData
            masterProfile:
              fqdn: fqdn
              count: 6
              dnsPrefix: dnsPrefix
        nextLink: nextLink
      properties:
        nextLink:
          description: The URL to get the next set of container service results.
          title: nextLink
          type: string
        value:
          description: the list of container services.
          items:
            $ref: '#/components/schemas/ContainerService'
          title: value
          type: array
      title: ContainerServiceListResult
      type: object
    ContainerServiceMasterProfile:
      description: Profile for the container service master.
      example:
        fqdn: fqdn
        count: 6
        dnsPrefix: dnsPrefix
      properties:
        count:
          default: 1
          description: "Number of masters (VMs) in the container service cluster.\
            \ Allowed values are 1, 3, and 5. The default value is 1."
          enum:
          - 1
          - 3
          - 5
          format: int32
          title: count
          type: integer
        dnsPrefix:
          description: DNS prefix to be used to create the FQDN for master.
          title: dnsPrefix
          type: string
        fqdn:
          description: FQDN for the master.
          readOnly: true
          title: fqdn
          type: string
      required:
      - dnsPrefix
      title: ContainerServiceMasterProfile
      type: object
    ContainerServiceOrchestratorProfile:
      description: Profile for the container service orchestrator.
      example:
        orchestratorType: Swarm
      properties:
        orchestratorType:
          description: "The orchestrator to use to manage container service cluster\
            \ resources. Valid values are Swarm, DCOS, and Custom."
          enum:
          - Swarm
          - DCOS
          - Custom
          - Kubernetes
          title: orchestratorType
          type: string
          x-ms-enum:
            modelAsString: false
            name: ContainerServiceOchestratorTypes
      required:
      - orchestratorType
      title: ContainerServiceOrchestratorProfile
      type: object
    ContainerServiceProperties:
      description: Properties of the container service.
      example:
        agentPoolProfiles:
        - fqdn: fqdn
          count: 8
          name: name
          dnsPrefix: dnsPrefix
          vmSize: Standard_A0
        - fqdn: fqdn
          count: 8
          name: name
          dnsPrefix: dnsPrefix
          vmSize: Standard_A0
        orchestratorProfile:
          orchestratorType: Swarm
        windowsProfile:
          adminUsername: adminUsername
          adminPassword: adminPassword
        servicePrincipalProfile:
          clientId: clientId
          secret: secret
        diagnosticsProfile:
          vmDiagnostics:
            storageUri: storageUri
            enabled: true
        customProfile:
          orchestrator: orchestrator
        provisioningState: provisioningState
        linuxProfile:
          adminUsername: adminUsername
          ssh:
            publicKeys:
            - keyData: keyData
            - keyData: keyData
        masterProfile:
          fqdn: fqdn
          count: 6
          dnsPrefix: dnsPrefix
      properties:
        agentPoolProfiles:
          description: Properties of the agent pool.
          items:
            $ref: '#/components/schemas/ContainerServiceAgentPoolProfile'
          title: agentPoolProfiles
          type: array
        customProfile:
          $ref: '#/components/schemas/ContainerServiceCustomProfile'
        diagnosticsProfile:
          $ref: '#/components/schemas/ContainerServiceDiagnosticsProfile'
        linuxProfile:
          $ref: '#/components/schemas/ContainerServiceLinuxProfile'
        masterProfile:
          $ref: '#/components/schemas/ContainerServiceMasterProfile'
        orchestratorProfile:
          $ref: '#/components/schemas/ContainerServiceOrchestratorProfile'
        provisioningState:
          description: "the current deployment or provisioning state, which only appears\
            \ in the response."
          readOnly: true
          title: provisioningState
          type: string
        servicePrincipalProfile:
          $ref: '#/components/schemas/ContainerServiceServicePrincipalProfile'
        windowsProfile:
          $ref: '#/components/schemas/ContainerServiceWindowsProfile'
      required:
      - agentPoolProfiles
      - linuxProfile
      - masterProfile
      title: ContainerServiceProperties
      type: object
    ContainerServiceServicePrincipalProfile:
      description: Information about a service principal identity for the cluster
        to use for manipulating Azure APIs.
      example:
        clientId: clientId
        secret: secret
      properties:
        clientId:
          description: The ID for the service principal.
          title: clientId
          type: string
        secret:
          description: The secret password associated with the service principal.
          title: secret
          type: string
      required:
      - clientId
      - secret
      title: ContainerServiceServicePrincipalProfile
      type: object
    ContainerServiceSshConfiguration:
      description: SSH configuration for Linux-based VMs running on Azure.
      example:
        publicKeys:
        - keyData: keyData
        - keyData: keyData
      properties:
        publicKeys:
          description: the list of SSH public keys used to authenticate with Linux-based
            VMs.
          items:
            $ref: '#/components/schemas/ContainerServiceSshPublicKey'
          title: publicKeys
          type: array
      required:
      - publicKeys
      title: ContainerServiceSshConfiguration
      type: object
    ContainerServiceSshPublicKey:
      description: Contains information about SSH certificate public key data.
      example:
        keyData: keyData
      properties:
        keyData:
          description: Certificate public key used to authenticate with VMs through
            SSH. The certificate must be in PEM format with or without headers.
          title: keyData
          type: string
      required:
      - keyData
      title: ContainerServiceSshPublicKey
      type: object
    ContainerServiceVMDiagnostics:
      description: Profile for diagnostics on the container service VMs.
      example:
        storageUri: storageUri
        enabled: true
      properties:
        enabled:
          description: Whether the VM diagnostic agent is provisioned on the VM.
          title: enabled
          type: boolean
        storageUri:
          description: The URI of the storage account where diagnostics are stored.
          readOnly: true
          title: storageUri
          type: string
      required:
      - enabled
      title: ContainerServiceVMDiagnostics
      type: object
    ContainerServiceWindowsProfile:
      description: Profile for Windows VMs in the container service cluster.
      example:
        adminUsername: adminUsername
        adminPassword: adminPassword
      properties:
        adminPassword:
          description: The administrator password to use for Windows VMs.
          pattern: "^(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%\\^&\\*\\(\\)])[a-zA-Z\\d!@#$%\\\
            ^&\\*\\(\\)]{12,123}$"
          title: adminPassword
          type: string
        adminUsername:
          description: The administrator username to use for Windows VMs.
          pattern: "^[a-zA-Z0-9]+([._]?[a-zA-Z0-9]+)*$"
          title: adminUsername
          type: string
      required:
      - adminPassword
      - adminUsername
      title: ContainerServiceWindowsProfile
      type: object
    Resource:
      description: The Resource model definition.
      properties:
        id:
          description: Resource Id
          readOnly: true
          title: id
          type: string
        location:
          description: Resource location
          title: location
          type: string
        name:
          description: Resource name
          readOnly: true
          title: name
          type: string
        tags:
          additionalProperties:
            type: string
          description: Resource tags
          title: tags
          type: object
        type:
          description: Resource type
          readOnly: true
          title: type
          type: string
      required:
      - location
      title: Resource
      type: object
      x-ms-azure-resource: true
x-original-swagger-version: "2.0"
