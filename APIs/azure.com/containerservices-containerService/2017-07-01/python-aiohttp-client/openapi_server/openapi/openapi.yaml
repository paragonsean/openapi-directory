openapi: 3.0.1
info:
  description: The Container Service Client.
  title: ContainerServiceClient
  version: 2017-07-01
  x-apisguru-categories:
  - cloud
  x-logo:
    url: https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png
  x-origin:
  - format: swagger
    url: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/containerservices/resource-manager/Microsoft.ContainerService/stable/2017-07-01/containerService.json
    version: "2.0"
  x-preferred: true
  x-providerName: azure.com
  x-serviceName: containerservices-containerService
  x-tags:
  - Azure
  - Microsoft
servers:
- url: https://management.azure.com/
security:
- azure_auth:
  - user_impersonation
paths:
  /subscriptions/{subscriptionId}/providers/Microsoft.ContainerService/containerServices:
    get:
      deprecated: true
      description: "Gets a list of container services in the specified subscription.\
        \ The operation returns properties of each container service including state,\
        \ orchestrator, number of masters and agents, and FQDNs of masters and agents."
      operationId: container_services_list
      parameters:
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: Subscription credentials which uniquely identify Microsoft Azure
          subscription. The subscription ID forms part of the URI for every service
          call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerServiceListResult'
          description: OK
      summary: Gets a list of container services in the specified subscription.
      tags:
      - ContainerServices
      x-ms-examples:
        List Container Services:
          parameters:
            api-version: 2017-07-01
            subscriptionId: subid1
          responses:
            "200":
              body:
                value:
                - id: /subscriptions/subid1/resourceGroups/RG1/providers/Microsoft.ContainerService/containerServices/acs1
                  location: location1
                  name: acs1
                  properties:
                    agentPoolProfiles:
                    - count: 3
                      dnsPrefix: acs1-rg1-e240e5agent
                      fqdn: acs1-rg1-e240e5agent.location1.cloudapp.azure.com
                      name: agentpool0
                      osType: Linux
                      vmSize: Standard_D2_v2
                    diagnosticsProfile:
                      vmDiagnostics:
                        enabled: true
                        storageUri: https://mjwjtrv73stvgdiag0.blob.core.windows.net/
                    linuxProfile:
                      adminUsername: azureuser
                      ssh:
                        publicKeys:
                        - keyData: |
                            ssh-rsa AAAAB3NzaC1y...+0vNzo1FAdQ== user@hostname.local
                    masterProfile:
                      count: 1
                      dnsPrefix: acs1-rg1-e240e5mgmt
                      fqdn: acs1-rg1-e240e5mgmt.location1.cloudapp.azure.com
                      vmSize: Standard_D2_v2
                    orchestratorProfile:
                      orchestratorType: DCOS
                    provisioningState: Succeeded
                  type: Microsoft.ContainerService/ContainerServices
                - id: /subscriptions/subid1/resourceGroups/RG1/providers/Microsoft.ContainerService/containerServices/acs2
                  location: location1
                  name: acs2
                  properties:
                    agentPoolProfiles:
                    - count: 3
                      dnsPrefix: acs2-rg1-e240e5agent
                      name: agentpool0
                      osType: Linux
                      vmSize: Standard_D2_v2
                    diagnosticsProfile:
                      vmDiagnostics:
                        enabled: true
                    linuxProfile:
                      adminUsername: azureuser
                      ssh:
                        publicKeys:
                        - keyData: |
                            ssh-rsa AAAAB3NzaC1y...+0vNzo1FAdQ== user@hostname.local
                    masterProfile:
                      count: 1
                      dnsPrefix: acs2-rg1-e240e5mgmt
                      vmSize: Standard_D2_v2
                    orchestratorProfile:
                      orchestratorType: DCOS
                    provisioningState: Creating
                  type: Microsoft.ContainerService/ContainerServices
      x-ms-pageable:
        nextLinkName: nextLink
      x-openapi-router-controller: openapi_server.controllers.container_services_controller
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices:
    get:
      deprecated: true
      description: "Gets a list of container services in the specified subscription\
        \ and resource group. The operation returns properties of each container service\
        \ including state, orchestrator, number of masters and agents, and FQDNs of\
        \ masters and agents."
      operationId: container_services_list_by_resource_group
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Client Api Version.
        in: query
        name: api_version
        required: true
        schema:
          type: string
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: Subscription credentials which uniquely identify Microsoft Azure
          subscription. The subscription ID forms part of the URI for every service
          call.
        in: path
        name: subscription_id
        required: true
        schema:
          type: string
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerServiceListResult'
          description: OK
      summary: Gets a list of container services in the specified resource group.
      tags:
      - ContainerServices
      x-ms-examples:
        List Container Services by Resource Group:
          parameters:
            api-version: 2017-07-01
            resourceGroupName: rg1
            subscriptionId: subid1
          responses:
            "200":
              body:
                value:
                - id: /subscriptions/subid1/resourceGroups/RG1/providers/Microsoft.ContainerService/containerServices/acs1
                  location: location1
                  name: acs1
                  properties:
                    agentPoolProfiles:
                    - count: 3
                      dnsPrefix: acs1-rg1-e240e5agent
                      fqdn: acs1-rg1-e240e5agent.location1.cloudapp.azure.com
                      name: agentpool0
                      osType: Linux
                      vmSize: Standard_D2_v2
                    diagnosticsProfile:
                      vmDiagnostics:
                        enabled: true
                        storageUri: https://mjwjtrv73stvgdiag0.blob.core.windows.net/
                    linuxProfile:
                      adminUsername: azureuser
                      ssh:
                        publicKeys:
                        - keyData: |
                            ssh-rsa AAAAB3NzaC1y...+0vNzo1FAdQ== user@hostname.local
                    masterProfile:
                      count: 1
                      dnsPrefix: acs1-rg1-e240e5mgmt
                      fqdn: acs1-rg1-e240e5mgmt.location1.cloudapp.azure.com
                      vmSize: Standard_D2_v2
                    orchestratorProfile:
                      orchestratorType: DCOS
                    provisioningState: Succeeded
                  type: Microsoft.ContainerService/ContainerServices
                - id: /subscriptions/subid1/resourceGroups/RG1/providers/Microsoft.ContainerService/containerServices/acs2
                  location: location1
                  name: acs2
                  properties:
                    agentPoolProfiles:
                    - count: 3
                      dnsPrefix: acs2-rg1-e240e5agent
                      name: agentpool0
                      osType: Linux
                      vmSize: Standard_D2_v2
                    diagnosticsProfile:
                      vmDiagnostics:
                        enabled: true
                    linuxProfile:
                      adminUsername: azureuser
                      ssh:
                        publicKeys:
                        - keyData: |
                            ssh-rsa AAAAB3NzaC1y...+0vNzo1FAdQ== user@hostname.local
                    masterProfile:
                      count: 1
                      dnsPrefix: acs2-rg1-e240e5mgmt
                      vmSize: Standard_D2_v2
                    orchestratorProfile:
                      orchestratorType: DCOS
                    provisioningState: Creating
                  type: Microsoft.ContainerService/ContainerServices
      x-ms-pageable:
        nextLinkName: nextLink
      x-openapi-router-controller: openapi_server.controllers.container_services_controller
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices/{containerServiceName}
  : delete:
      deprecated: true
      description: "Deletes the specified container service in the specified subscription\
        \ and resource group. The operation does not delete other resources created\
        \ as part of creating a container service, including storage accounts, VMs,\
        \ and availability sets. All the other resources created with the container\
        \ service are part of the same resource group and can be deleted individually."
      operationId: container_services_delete
      parameters:
      - description: The name of the resource group.
        in: path
        name: resource_group_name
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the container service in the specified subscription
          and resource group.
        in: path
        name: containerServiceName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api_version
        required: true
        schema:
          type: string
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: Subscription credentials which uniquely identify Microsoft Azure
          subscription. The subscription ID forms part of the URI for every service
          call.
        in: path
        name: subscription_id
        required: true
        schema:
          type: string
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      responses:
        "202":
          content: {}
          description: Accepted
        "204":
          content: {}
          description: Not found
      summary: Deletes the specified container service.
      tags:
      - ContainerService
      x-ms-examples:
        Delete Container Service:
          parameters:
            api-version: 2017-07-01
            containerServiceName: acs1
            resourceGroupName: rg1
            subscriptionId: subid1
          responses:
            "202": {}
            "204": {}
      x-ms-long-running-operation: true
      x-openapi-router-controller: openapi_server.controllers.container_service_controller
    get:
      deprecated: true
      description: "Gets the properties of the specified container service in the\
        \ specified subscription and resource group. The operation returns the properties\
        \ including state, orchestrator, number of masters and agents, and FQDNs of\
        \ masters and agents. "
      operationId: container_services_get
      parameters:
      - description: The name of the resource group.
        in: path
        name: resource_group_name
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the container service in the specified subscription
          and resource group.
        in: path
        name: containerServiceName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api_version
        required: true
        schema:
          type: string
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: Subscription credentials which uniquely identify Microsoft Azure
          subscription. The subscription ID forms part of the URI for every service
          call.
        in: path
        name: subscription_id
        required: true
        schema:
          type: string
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerService'
          description: OK
      summary: Gets the properties of the specified container service.
      tags:
      - ContainerService
      x-ms-examples:
        Get Container Service:
          parameters:
            api-version: 2017-07-01
            containerServiceName: acs1
            resourceGroupName: rg1
            subscriptionId: subid1
          responses:
            "200":
              body:
                id: /subscriptions/subid1/resourceGroups/rg1/providers/Microsoft.ContainerService/containerServices/acs1
                location: location1
                name: acs1
                properties:
                  agentPoolProfiles:
                  - count: 3
                    dnsPrefix: acs1-rg1-e240e5agent
                    fqdn: acs1-rg1-e240e5agent.location1.cloudapp.azure.com
                    name: agentpool0
                    osType: Linux
                    vmSize: Standard_D2_v2
                  diagnosticsProfile:
                    vmDiagnostics:
                      enabled: true
                      storageUri: https://mjwjtrv73stvgdiag0.blob.core.windows.net/
                  linuxProfile:
                    adminUsername: azureuser
                    ssh:
                      publicKeys:
                      - keyData: |
                          ssh-rsa AAAAB3NzaC1y...+0vNzo1FAdQ== user@hostname.local
                  masterProfile:
                    count: 1
                    dnsPrefix: acs1-rg1-e240e5mgmt
                    fqdn: acs1-rg1-e240e5mgmt.location1.cloudapp.azure.com
                    vmSize: Standard_D2_v2
                  orchestratorProfile:
                    orchestratorType: DCOS
                  provisioningState: Succeeded
                type: Microsoft.ContainerService/ContainerServices
      x-openapi-router-controller: openapi_server.controllers.container_service_controller
    put:
      deprecated: true
      description: "Creates or updates a container service with the specified configuration\
        \ of orchestrator, masters, and agents."
      operationId: container_services_create_or_update
      parameters:
      - description: The name of the resource group.
        in: path
        name: resource_group_name
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the container service in the specified subscription
          and resource group.
        in: path
        name: containerServiceName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api_version
        required: true
        schema:
          type: string
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: Subscription credentials which uniquely identify Microsoft Azure
          subscription. The subscription ID forms part of the URI for every service
          call.
        in: path
        name: subscription_id
        required: true
        schema:
          type: string
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContainerService'
        description: Parameters supplied to the Create or Update a Container Service
          operation.
        required: true
        x-body-name: parameters
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerService'
          description: OK
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerService'
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerService'
          description: Accepted
      summary: Creates or updates a container service.
      tags:
      - ContainerService
      x-ms-examples:
        Create/Update Container Service:
          parameters:
            api-version: 2017-07-01
            containerServiceName: acs1
            parameters:
              location: location1
            resourceGroupName: rg1
            subscriptionId: subid1
          responses:
            "200":
              body:
                id: /subscriptions/subid1/resourceGroups/rg1/providers/Microsoft.ContainerService/containerServices/acs1
                location: location1
                name: acs1
                properties:
                  agentPoolProfiles:
                  - count: 3
                    dnsPrefix: acs1-rg1-e240e5agent
                    fqdn: acs1-rg1-e240e5agent.location1.cloudapp.azure.com
                    name: agentpool0
                    osType: Linux
                    vmSize: Standard_D2_v2
                  diagnosticsProfile:
                    vmDiagnostics:
                      enabled: true
                      storageUri: https://mjwjtrv73stvgdiag0.blob.core.windows.net/
                  linuxProfile:
                    adminUsername: azureuser
                    ssh:
                      publicKeys:
                      - keyData: |
                          ssh-rsa AAAAB3NzaC1y...+0vNzo1FAdQ== user@hostname.local
                  masterProfile:
                    count: 1
                    dnsPrefix: acs1-rg1-e240e5mgmt
                    fqdn: acs1-rg1-e240e5mgmt.location1.cloudapp.azure.com
                    vmSize: Standard_D2_v2
                  orchestratorProfile:
                    orchestratorType: DCOS
                  provisioningState: Creating
                type: Microsoft.ContainerService/ContainerServices
            "201":
              body:
                id: /subscriptions/subid1/resourceGroups/rg1/providers/Microsoft.ContainerService/containerServices/acs1
                location: location1
                name: acs1
                properties:
                  agentPoolProfiles:
                  - count: 3
                    dnsPrefix: acs1-rg1-e240e5agent
                    fqdn: acs1-rg1-e240e5agent.location1.cloudapp.azure.com
                    name: agentpool0
                    osType: Linux
                    vmSize: Standard_D2_v2
                  diagnosticsProfile:
                    vmDiagnostics:
                      enabled: true
                      storageUri: https://mjwjtrv73stvgdiag0.blob.core.windows.net/
                  linuxProfile:
                    adminUsername: azureuser
                    ssh:
                      publicKeys:
                      - keyData: |
                          ssh-rsa AAAAB3NzaC1y...+0vNzo1FAdQ== user@hostname.local
                  masterProfile:
                    count: 1
                    dnsPrefix: acs1-rg1-e240e5mgmt
                    fqdn: acs1-rg1-e240e5mgmt.location1.cloudapp.azure.com
                    vmSize: Standard_D2_v2
                  orchestratorProfile:
                    orchestratorType: DCOS
                  provisioningState: Creating
                type: Microsoft.ContainerService/ContainerServices
            "202":
              body:
                id: /subscriptions/subid1/resourceGroups/rg1/providers/Microsoft.ContainerService/containerServices/acs1
                location: location1
                name: acs1
                properties:
                  agentPoolProfiles:
                  - count: 3
                    dnsPrefix: acs1-rg1-e240e5agent
                    fqdn: acs1-rg1-e240e5agent.location1.cloudapp.azure.com
                    name: agentpool0
                    osType: Linux
                    vmSize: Standard_D2_v2
                  diagnosticsProfile:
                    vmDiagnostics:
                      enabled: true
                      storageUri: https://mjwjtrv73stvgdiag0.blob.core.windows.net/
                  linuxProfile:
                    adminUsername: azureuser
                    ssh:
                      publicKeys:
                      - keyData: |
                          ssh-rsa AAAAB3NzaC1y...+0vNzo1FAdQ== user@hostname.local
                  masterProfile:
                    count: 1
                    dnsPrefix: acs1-rg1-e240e5mgmt
                    fqdn: acs1-rg1-e240e5mgmt.location1.cloudapp.azure.com
                    vmSize: Standard_D2_v2
                  orchestratorProfile:
                    orchestratorType: DCOS
                  provisioningState: Creating
                type: Microsoft.ContainerService/ContainerServices
      x-ms-long-running-operation: true
      x-codegen-request-body-name: parameters
      x-openapi-router-controller: openapi_server.controllers.container_service_controller
components:
  parameters:
    ApiVersionParameter:
      description: Client Api Version.
      in: query
      name: api-version
      required: true
      schema:
        type: string
        x-ms-parameter-location: client
      x-ms-parameter-location: client
    ResourceGroupParameter:
      description: The name of the resource group.
      in: path
      name: resourceGroupName
      required: true
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    ResourceNameParameter:
      description: The name of the resource.
      in: path
      name: resourceName
      required: true
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    SubscriptionIdParameter:
      description: Subscription credentials which uniquely identify Microsoft Azure
        subscription. The subscription ID forms part of the URI for every service
        call.
      in: path
      name: subscriptionId
      required: true
      schema:
        type: string
        x-ms-parameter-location: client
      x-ms-parameter-location: client
  schemas:
    ContainerService:
      allOf:
      - $ref: '#/components/schemas/Resource'
      - properties:
          properties:
            $ref: '#/components/schemas/ContainerServiceProperties'
        type: object
      description: Container service.
      example:
        name: name
        location: location
        id: id
        type: type
        properties:
          agentPoolProfiles:
          - fqdn: fqdn
            osDiskSizeGB: 616
            storageProfile: StorageAccount
            count: 8
            name: name
            osType: Linux
            dnsPrefix: dnsPrefix
            vnetSubnetID: vnetSubnetID
            vmSize: Standard_A1
            ports:
            - 9607
            - 9607
          - fqdn: fqdn
            osDiskSizeGB: 616
            storageProfile: StorageAccount
            count: 8
            name: name
            osType: Linux
            dnsPrefix: dnsPrefix
            vnetSubnetID: vnetSubnetID
            vmSize: Standard_A1
            ports:
            - 9607
            - 9607
          orchestratorProfile:
            orchestratorType: Kubernetes
            orchestratorVersion: orchestratorVersion
          windowsProfile:
            adminUsername: adminUsername
            adminPassword: adminPassword
          servicePrincipalProfile:
            clientId: clientId
            keyVaultSecretRef:
              secretName: secretName
              vaultID: vaultID
              version: version
            secret: secret
          diagnosticsProfile:
            vmDiagnostics:
              storageUri: storageUri
              enabled: true
          customProfile:
            orchestrator: orchestrator
          provisioningState: provisioningState
          linuxProfile:
            adminUsername: adminUsername
            ssh:
              publicKeys:
              - keyData: keyData
              - keyData: keyData
          masterProfile:
            fqdn: fqdn
            osDiskSizeGB: 576
            firstConsecutiveStaticIP: 10.240.255.5
            storageProfile: null
            count: 5
            dnsPrefix: dnsPrefix
            vnetSubnetID: vnetSubnetID
            vmSize: null
        tags:
          key: tags
      title: ContainerService
    ContainerServiceAgentPoolProfile:
      description: Profile for the container service agent pool.
      example:
        fqdn: fqdn
        osDiskSizeGB: 616
        storageProfile: StorageAccount
        count: 8
        name: name
        osType: Linux
        dnsPrefix: dnsPrefix
        vnetSubnetID: vnetSubnetID
        vmSize: Standard_A1
        ports:
        - 9607
        - 9607
      properties:
        count:
          default: 1
          description: 'Number of agents (VMs) to host docker containers. Allowed
            values must be in the range of 1 to 100 (inclusive). The default value
            is 1. '
          format: int32
          maximum: 100
          minimum: 1
          title: count
          type: integer
        dnsPrefix:
          description: DNS prefix to be used to create the FQDN for the agent pool.
          title: dnsPrefix
          type: string
        fqdn:
          description: FQDN for the agent pool.
          readOnly: true
          title: fqdn
          type: string
        name:
          description: Unique name of the agent pool profile in the context of the
            subscription and resource group.
          title: name
          type: string
        osDiskSizeGB:
          description: "OS Disk Size in GB to be used to specify the disk size for\
            \ every machine in this master/agent pool. If you specify 0, it will apply\
            \ the default osDisk size according to the vmSize specified."
          format: int32
          maximum: 1023
          minimum: 0
          title: ContainerServiceOSDisk
          type: integer
        osType:
          $ref: '#/components/schemas/OSType'
        ports:
          description: Ports number array used to expose on this agent pool. The default
            opened ports are different based on your choice of orchestrator.
          items:
            maximum: 65535
            minimum: 1
            type: integer
          title: ports
          type: array
        storageProfile:
          $ref: '#/components/schemas/ContainerServiceStorageProfile'
        vmSize:
          $ref: '#/components/schemas/ContainerServiceVMSize'
        vnetSubnetID:
          description: VNet SubnetID specifies the VNet's subnet identifier.
          title: ContainerServiceVnetSubnetID
          type: string
      required:
      - name
      - vmSize
      title: ContainerServiceAgentPoolProfile
      type: object
    ContainerServiceCustomProfile:
      description: Properties to configure a custom container service cluster.
      example:
        orchestrator: orchestrator
      properties:
        orchestrator:
          description: The name of the custom orchestrator to use.
          title: orchestrator
          type: string
      required:
      - orchestrator
      title: ContainerServiceCustomProfile
      type: object
    ContainerServiceDiagnosticsProfile:
      description: Profile for diagnostics on the container service cluster.
      example:
        vmDiagnostics:
          storageUri: storageUri
          enabled: true
      properties:
        vmDiagnostics:
          $ref: '#/components/schemas/ContainerServiceVMDiagnostics'
      required:
      - vmDiagnostics
      title: ContainerServiceDiagnosticsProfile
      type: object
    ContainerServiceLinuxProfile:
      description: Profile for Linux VMs in the container service cluster.
      example:
        adminUsername: adminUsername
        ssh:
          publicKeys:
          - keyData: keyData
          - keyData: keyData
      properties:
        adminUsername:
          description: The administrator username to use for Linux VMs.
          pattern: "^[A-Za-z][-A-Za-z0-9_]*$"
          title: adminUsername
          type: string
        ssh:
          $ref: '#/components/schemas/ContainerServiceSshConfiguration'
      required:
      - adminUsername
      - ssh
      title: ContainerServiceLinuxProfile
      type: object
    ContainerServiceListResult:
      description: The response from the List Container Services operation.
      example:
        value:
        - name: name
          location: location
          id: id
          type: type
          properties:
            agentPoolProfiles:
            - fqdn: fqdn
              osDiskSizeGB: 616
              storageProfile: StorageAccount
              count: 8
              name: name
              osType: Linux
              dnsPrefix: dnsPrefix
              vnetSubnetID: vnetSubnetID
              vmSize: Standard_A1
              ports:
              - 9607
              - 9607
            - fqdn: fqdn
              osDiskSizeGB: 616
              storageProfile: StorageAccount
              count: 8
              name: name
              osType: Linux
              dnsPrefix: dnsPrefix
              vnetSubnetID: vnetSubnetID
              vmSize: Standard_A1
              ports:
              - 9607
              - 9607
            orchestratorProfile:
              orchestratorType: Kubernetes
              orchestratorVersion: orchestratorVersion
            windowsProfile:
              adminUsername: adminUsername
              adminPassword: adminPassword
            servicePrincipalProfile:
              clientId: clientId
              keyVaultSecretRef:
                secretName: secretName
                vaultID: vaultID
                version: version
              secret: secret
            diagnosticsProfile:
              vmDiagnostics:
                storageUri: storageUri
                enabled: true
            customProfile:
              orchestrator: orchestrator
            provisioningState: provisioningState
            linuxProfile:
              adminUsername: adminUsername
              ssh:
                publicKeys:
                - keyData: keyData
                - keyData: keyData
            masterProfile:
              fqdn: fqdn
              osDiskSizeGB: 576
              firstConsecutiveStaticIP: 10.240.255.5
              storageProfile: null
              count: 5
              dnsPrefix: dnsPrefix
              vnetSubnetID: vnetSubnetID
              vmSize: null
          tags:
            key: tags
        - name: name
          location: location
          id: id
          type: type
          properties:
            agentPoolProfiles:
            - fqdn: fqdn
              osDiskSizeGB: 616
              storageProfile: StorageAccount
              count: 8
              name: name
              osType: Linux
              dnsPrefix: dnsPrefix
              vnetSubnetID: vnetSubnetID
              vmSize: Standard_A1
              ports:
              - 9607
              - 9607
            - fqdn: fqdn
              osDiskSizeGB: 616
              storageProfile: StorageAccount
              count: 8
              name: name
              osType: Linux
              dnsPrefix: dnsPrefix
              vnetSubnetID: vnetSubnetID
              vmSize: Standard_A1
              ports:
              - 9607
              - 9607
            orchestratorProfile:
              orchestratorType: Kubernetes
              orchestratorVersion: orchestratorVersion
            windowsProfile:
              adminUsername: adminUsername
              adminPassword: adminPassword
            servicePrincipalProfile:
              clientId: clientId
              keyVaultSecretRef:
                secretName: secretName
                vaultID: vaultID
                version: version
              secret: secret
            diagnosticsProfile:
              vmDiagnostics:
                storageUri: storageUri
                enabled: true
            customProfile:
              orchestrator: orchestrator
            provisioningState: provisioningState
            linuxProfile:
              adminUsername: adminUsername
              ssh:
                publicKeys:
                - keyData: keyData
                - keyData: keyData
            masterProfile:
              fqdn: fqdn
              osDiskSizeGB: 576
              firstConsecutiveStaticIP: 10.240.255.5
              storageProfile: null
              count: 5
              dnsPrefix: dnsPrefix
              vnetSubnetID: vnetSubnetID
              vmSize: null
          tags:
            key: tags
        nextLink: nextLink
      properties:
        nextLink:
          description: The URL to get the next set of container service results.
          readOnly: true
          title: nextLink
          type: string
        value:
          description: The list of container services.
          items:
            $ref: '#/components/schemas/ContainerService'
          title: value
          type: array
      title: ContainerServiceListResult
      type: object
    ContainerServiceMasterProfile:
      description: Profile for the container service master.
      example:
        fqdn: fqdn
        osDiskSizeGB: 576
        firstConsecutiveStaticIP: 10.240.255.5
        storageProfile: null
        count: 5
        dnsPrefix: dnsPrefix
        vnetSubnetID: vnetSubnetID
        vmSize: null
      properties:
        count:
          default: 1
          description: "Number of masters (VMs) in the container service cluster.\
            \ Allowed values are 1, 3, and 5. The default value is 1."
          enum:
          - 1
          - 3
          - 5
          format: int32
          title: count
          type: integer
          x-ms-enum:
            modelAsString: false
            name: Count
        dnsPrefix:
          description: DNS prefix to be used to create the FQDN for the master pool.
          title: dnsPrefix
          type: string
        firstConsecutiveStaticIP:
          default: 10.240.255.5
          description: FirstConsecutiveStaticIP used to specify the first static ip
            of masters.
          title: firstConsecutiveStaticIP
          type: string
        fqdn:
          description: FQDN for the master pool.
          readOnly: true
          title: fqdn
          type: string
        osDiskSizeGB:
          description: "OS Disk Size in GB to be used to specify the disk size for\
            \ every machine in this master/agent pool. If you specify 0, it will apply\
            \ the default osDisk size according to the vmSize specified."
          format: int32
          maximum: 1023
          minimum: 0
          title: ContainerServiceOSDisk
          type: integer
        storageProfile:
          $ref: '#/components/schemas/ContainerServiceStorageProfile'
        vmSize:
          $ref: '#/components/schemas/ContainerServiceVMSize'
        vnetSubnetID:
          description: VNet SubnetID specifies the VNet's subnet identifier.
          title: ContainerServiceVnetSubnetID
          type: string
      required:
      - dnsPrefix
      - vmSize
      title: ContainerServiceMasterProfile
      type: object
    ContainerServiceOSDisk:
      description: "OS Disk Size in GB to be used to specify the disk size for every\
        \ machine in this master/agent pool. If you specify 0, it will apply the default\
        \ osDisk size according to the vmSize specified."
      format: int32
      maximum: 1023
      minimum: 0
      title: ContainerServiceOSDisk
      type: integer
    ContainerServiceOrchestratorProfile:
      description: Profile for the container service orchestrator.
      example:
        orchestratorType: Kubernetes
        orchestratorVersion: orchestratorVersion
      properties:
        orchestratorType:
          description: "The orchestrator to use to manage container service cluster\
            \ resources. Valid values are Kubernetes, Swarm, DCOS, DockerCE and Custom."
          enum:
          - Kubernetes
          - Swarm
          - DCOS
          - DockerCE
          - Custom
          title: orchestratorType
          type: string
          x-ms-enum:
            modelAsString: true
            name: ContainerServiceOrchestratorTypes
        orchestratorVersion:
          description: "The version of the orchestrator to use. You can specify the\
            \ major.minor.patch part of the actual version.For example, you can specify\
            \ version as \"1.6.11\"."
          title: orchestratorVersion
          type: string
      required:
      - orchestratorType
      title: ContainerServiceOrchestratorProfile
      type: object
    ContainerServiceProperties:
      description: Properties of the container service.
      example:
        agentPoolProfiles:
        - fqdn: fqdn
          osDiskSizeGB: 616
          storageProfile: StorageAccount
          count: 8
          name: name
          osType: Linux
          dnsPrefix: dnsPrefix
          vnetSubnetID: vnetSubnetID
          vmSize: Standard_A1
          ports:
          - 9607
          - 9607
        - fqdn: fqdn
          osDiskSizeGB: 616
          storageProfile: StorageAccount
          count: 8
          name: name
          osType: Linux
          dnsPrefix: dnsPrefix
          vnetSubnetID: vnetSubnetID
          vmSize: Standard_A1
          ports:
          - 9607
          - 9607
        orchestratorProfile:
          orchestratorType: Kubernetes
          orchestratorVersion: orchestratorVersion
        windowsProfile:
          adminUsername: adminUsername
          adminPassword: adminPassword
        servicePrincipalProfile:
          clientId: clientId
          keyVaultSecretRef:
            secretName: secretName
            vaultID: vaultID
            version: version
          secret: secret
        diagnosticsProfile:
          vmDiagnostics:
            storageUri: storageUri
            enabled: true
        customProfile:
          orchestrator: orchestrator
        provisioningState: provisioningState
        linuxProfile:
          adminUsername: adminUsername
          ssh:
            publicKeys:
            - keyData: keyData
            - keyData: keyData
        masterProfile:
          fqdn: fqdn
          osDiskSizeGB: 576
          firstConsecutiveStaticIP: 10.240.255.5
          storageProfile: null
          count: 5
          dnsPrefix: dnsPrefix
          vnetSubnetID: vnetSubnetID
          vmSize: null
      properties:
        agentPoolProfiles:
          description: Properties of the agent pool.
          items:
            $ref: '#/components/schemas/ContainerServiceAgentPoolProfile'
          title: agentPoolProfiles
          type: array
        customProfile:
          $ref: '#/components/schemas/ContainerServiceCustomProfile'
        diagnosticsProfile:
          $ref: '#/components/schemas/ContainerServiceDiagnosticsProfile'
        linuxProfile:
          $ref: '#/components/schemas/ContainerServiceLinuxProfile'
        masterProfile:
          $ref: '#/components/schemas/ContainerServiceMasterProfile'
        orchestratorProfile:
          $ref: '#/components/schemas/ContainerServiceOrchestratorProfile'
        provisioningState:
          description: "The current deployment or provisioning state, which only appears\
            \ in the response."
          readOnly: true
          title: provisioningState
          type: string
        servicePrincipalProfile:
          $ref: '#/components/schemas/ContainerServiceServicePrincipalProfile'
        windowsProfile:
          $ref: '#/components/schemas/ContainerServiceWindowsProfile'
      required:
      - linuxProfile
      - masterProfile
      - orchestratorProfile
      title: ContainerServiceProperties
      type: object
    ContainerServiceServicePrincipalProfile:
      description: Information about a service principal identity for the cluster
        to use for manipulating Azure APIs. Either secret or keyVaultSecretRef must
        be specified.
      example:
        clientId: clientId
        keyVaultSecretRef:
          secretName: secretName
          vaultID: vaultID
          version: version
        secret: secret
      properties:
        clientId:
          description: The ID for the service principal.
          title: clientId
          type: string
        keyVaultSecretRef:
          $ref: '#/components/schemas/KeyVaultSecretRef'
        secret:
          description: The secret password associated with the service principal in
            plain text.
          title: secret
          type: string
      required:
      - clientId
      title: ContainerServiceServicePrincipalProfile
      type: object
    ContainerServiceSshConfiguration:
      description: SSH configuration for Linux-based VMs running on Azure.
      example:
        publicKeys:
        - keyData: keyData
        - keyData: keyData
      properties:
        publicKeys:
          description: The list of SSH public keys used to authenticate with Linux-based
            VMs. Only expect one key specified.
          items:
            $ref: '#/components/schemas/ContainerServiceSshPublicKey'
          title: publicKeys
          type: array
      required:
      - publicKeys
      title: ContainerServiceSshConfiguration
      type: object
    ContainerServiceSshPublicKey:
      description: Contains information about SSH certificate public key data.
      example:
        keyData: keyData
      properties:
        keyData:
          description: Certificate public key used to authenticate with VMs through
            SSH. The certificate must be in PEM format with or without headers.
          title: keyData
          type: string
      required:
      - keyData
      title: ContainerServiceSshPublicKey
      type: object
    ContainerServiceStorageProfile:
      description: "Storage profile specifies what kind of storage used. Choose from\
        \ StorageAccount and ManagedDisks. Leave it empty, we will choose for you\
        \ based on the orchestrator choice."
      enum:
      - StorageAccount
      - ManagedDisks
      title: ContainerServiceStorageProfile
      type: string
      x-ms-enum:
        modelAsString: true
        name: ContainerServiceStorageProfileTypes
    ContainerServiceVMDiagnostics:
      description: Profile for diagnostics on the container service VMs.
      example:
        storageUri: storageUri
        enabled: true
      properties:
        enabled:
          description: Whether the VM diagnostic agent is provisioned on the VM.
          title: enabled
          type: boolean
        storageUri:
          description: The URI of the storage account where diagnostics are stored.
          readOnly: true
          title: storageUri
          type: string
      required:
      - enabled
      title: ContainerServiceVMDiagnostics
      type: object
    ContainerServiceVMSize:
      description: Size of agent VMs.
      enum:
      - Standard_A1
      - Standard_A10
      - Standard_A11
      - Standard_A1_v2
      - Standard_A2
      - Standard_A2_v2
      - Standard_A2m_v2
      - Standard_A3
      - Standard_A4
      - Standard_A4_v2
      - Standard_A4m_v2
      - Standard_A5
      - Standard_A6
      - Standard_A7
      - Standard_A8
      - Standard_A8_v2
      - Standard_A8m_v2
      - Standard_A9
      - Standard_B2ms
      - Standard_B2s
      - Standard_B4ms
      - Standard_B8ms
      - Standard_D1
      - Standard_D11
      - Standard_D11_v2
      - Standard_D11_v2_Promo
      - Standard_D12
      - Standard_D12_v2
      - Standard_D12_v2_Promo
      - Standard_D13
      - Standard_D13_v2
      - Standard_D13_v2_Promo
      - Standard_D14
      - Standard_D14_v2
      - Standard_D14_v2_Promo
      - Standard_D15_v2
      - Standard_D16_v3
      - Standard_D16s_v3
      - Standard_D1_v2
      - Standard_D2
      - Standard_D2_v2
      - Standard_D2_v2_Promo
      - Standard_D2_v3
      - Standard_D2s_v3
      - Standard_D3
      - Standard_D32_v3
      - Standard_D32s_v3
      - Standard_D3_v2
      - Standard_D3_v2_Promo
      - Standard_D4
      - Standard_D4_v2
      - Standard_D4_v2_Promo
      - Standard_D4_v3
      - Standard_D4s_v3
      - Standard_D5_v2
      - Standard_D5_v2_Promo
      - Standard_D64_v3
      - Standard_D64s_v3
      - Standard_D8_v3
      - Standard_D8s_v3
      - Standard_DS1
      - Standard_DS11
      - Standard_DS11_v2
      - Standard_DS11_v2_Promo
      - Standard_DS12
      - Standard_DS12_v2
      - Standard_DS12_v2_Promo
      - Standard_DS13
      - Standard_DS13-2_v2
      - Standard_DS13-4_v2
      - Standard_DS13_v2
      - Standard_DS13_v2_Promo
      - Standard_DS14
      - Standard_DS14-4_v2
      - Standard_DS14-8_v2
      - Standard_DS14_v2
      - Standard_DS14_v2_Promo
      - Standard_DS15_v2
      - Standard_DS1_v2
      - Standard_DS2
      - Standard_DS2_v2
      - Standard_DS2_v2_Promo
      - Standard_DS3
      - Standard_DS3_v2
      - Standard_DS3_v2_Promo
      - Standard_DS4
      - Standard_DS4_v2
      - Standard_DS4_v2_Promo
      - Standard_DS5_v2
      - Standard_DS5_v2_Promo
      - Standard_E16_v3
      - Standard_E16s_v3
      - Standard_E2_v3
      - Standard_E2s_v3
      - Standard_E32-16s_v3
      - Standard_E32-8s_v3
      - Standard_E32_v3
      - Standard_E32s_v3
      - Standard_E4_v3
      - Standard_E4s_v3
      - Standard_E64-16s_v3
      - Standard_E64-32s_v3
      - Standard_E64_v3
      - Standard_E64s_v3
      - Standard_E8_v3
      - Standard_E8s_v3
      - Standard_F1
      - Standard_F16
      - Standard_F16s
      - Standard_F16s_v2
      - Standard_F1s
      - Standard_F2
      - Standard_F2s
      - Standard_F2s_v2
      - Standard_F32s_v2
      - Standard_F4
      - Standard_F4s
      - Standard_F4s_v2
      - Standard_F64s_v2
      - Standard_F72s_v2
      - Standard_F8
      - Standard_F8s
      - Standard_F8s_v2
      - Standard_G1
      - Standard_G2
      - Standard_G3
      - Standard_G4
      - Standard_G5
      - Standard_GS1
      - Standard_GS2
      - Standard_GS3
      - Standard_GS4
      - Standard_GS4-4
      - Standard_GS4-8
      - Standard_GS5
      - Standard_GS5-16
      - Standard_GS5-8
      - Standard_H16
      - Standard_H16m
      - Standard_H16mr
      - Standard_H16r
      - Standard_H8
      - Standard_H8m
      - Standard_L16s
      - Standard_L32s
      - Standard_L4s
      - Standard_L8s
      - Standard_M128-32ms
      - Standard_M128-64ms
      - Standard_M128ms
      - Standard_M128s
      - Standard_M64-16ms
      - Standard_M64-32ms
      - Standard_M64ms
      - Standard_M64s
      - Standard_NC12
      - Standard_NC12s_v2
      - Standard_NC12s_v3
      - Standard_NC24
      - Standard_NC24r
      - Standard_NC24rs_v2
      - Standard_NC24rs_v3
      - Standard_NC24s_v2
      - Standard_NC24s_v3
      - Standard_NC6
      - Standard_NC6s_v2
      - Standard_NC6s_v3
      - Standard_ND12s
      - Standard_ND24rs
      - Standard_ND24s
      - Standard_ND6s
      - Standard_NV12
      - Standard_NV24
      - Standard_NV6
      title: ContainerServiceVMSize
      type: string
      x-ms-enum:
        modelAsString: true
        name: ContainerServiceVMSizeTypes
    ContainerServiceVnetSubnetID:
      description: VNet SubnetID specifies the VNet's subnet identifier.
      title: ContainerServiceVnetSubnetID
      type: string
    ContainerServiceWindowsProfile:
      description: Profile for Windows VMs in the container service cluster.
      example:
        adminUsername: adminUsername
        adminPassword: adminPassword
      properties:
        adminPassword:
          description: The administrator password to use for Windows VMs.
          pattern: "^(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%\\^&\\*\\(\\)])[a-zA-Z\\d!@#$%\\\
            ^&\\*\\(\\)]{12,123}$"
          title: adminPassword
          type: string
        adminUsername:
          description: The administrator username to use for Windows VMs.
          pattern: "^[a-zA-Z0-9]+([._]?[a-zA-Z0-9]+)*$"
          title: adminUsername
          type: string
      required:
      - adminPassword
      - adminUsername
      title: ContainerServiceWindowsProfile
      type: object
    KeyVaultSecretRef:
      description: Reference to a secret stored in Azure Key Vault.
      example:
        secretName: secretName
        vaultID: vaultID
        version: version
      properties:
        secretName:
          description: The secret name.
          title: secretName
          type: string
        vaultID:
          description: Key vault identifier.
          title: vaultID
          type: string
        version:
          description: The secret version.
          title: version
          type: string
      required:
      - secretName
      - vaultID
      title: KeyVaultSecretRef
      type: object
    OSType:
      default: Linux
      description: OsType to be used to specify os type. Choose from Linux and Windows.
        Default to Linux.
      enum:
      - Linux
      - Windows
      title: OSType
      type: string
      x-ms-enum:
        modelAsString: true
        name: OSType
    Resource:
      description: The Resource model definition.
      properties:
        id:
          description: Resource Id
          readOnly: true
          title: id
          type: string
        location:
          description: Resource location
          title: location
          type: string
          x-ms-mutability:
          - read
          - create
        name:
          description: Resource name
          readOnly: true
          title: name
          type: string
        tags:
          additionalProperties:
            type: string
          description: Resource tags
          title: tags
          type: object
        type:
          description: Resource type
          readOnly: true
          title: type
          type: string
      required:
      - location
      title: Resource
      type: object
      x-ms-azure-resource: true
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
      type: oauth2
      x-tokenInfoFunc: openapi_server.controllers.security_controller.info_from_azure_auth
      x-scopeValidateFunc: openapi_server.controllers.security_controller.validate_scope_azure_auth
x-original-swagger-version: "2.0"
