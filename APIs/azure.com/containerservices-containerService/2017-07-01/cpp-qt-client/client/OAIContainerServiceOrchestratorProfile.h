/**
 * ContainerServiceClient
 * The Container Service Client.
 *
 * The version of the OpenAPI document: 2017-07-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIContainerServiceOrchestratorProfile.h
 *
 * Profile for the container service orchestrator.
 */

#ifndef OAIContainerServiceOrchestratorProfile_H
#define OAIContainerServiceOrchestratorProfile_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIContainerServiceOrchestratorProfile : public OAIObject {
public:
    OAIContainerServiceOrchestratorProfile();
    OAIContainerServiceOrchestratorProfile(QString json);
    ~OAIContainerServiceOrchestratorProfile() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getOrchestratorType() const;
    void setOrchestratorType(const QString &orchestrator_type);
    bool is_orchestrator_type_Set() const;
    bool is_orchestrator_type_Valid() const;

    QString getOrchestratorVersion() const;
    void setOrchestratorVersion(const QString &orchestrator_version);
    bool is_orchestrator_version_Set() const;
    bool is_orchestrator_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_orchestrator_type;
    bool m_orchestrator_type_isSet;
    bool m_orchestrator_type_isValid;

    QString m_orchestrator_version;
    bool m_orchestrator_version_isSet;
    bool m_orchestrator_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIContainerServiceOrchestratorProfile)

#endif // OAIContainerServiceOrchestratorProfile_H
