/**
 * ContainerServiceClient
 * The Container Service Client.
 *
 * The version of the OpenAPI document: 2017-07-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIContainerServiceCustomProfile.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIContainerServiceCustomProfile::OAIContainerServiceCustomProfile(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIContainerServiceCustomProfile::OAIContainerServiceCustomProfile() {
    this->initializeModel();
}

OAIContainerServiceCustomProfile::~OAIContainerServiceCustomProfile() {}

void OAIContainerServiceCustomProfile::initializeModel() {

    m_orchestrator_isSet = false;
    m_orchestrator_isValid = false;
}

void OAIContainerServiceCustomProfile::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIContainerServiceCustomProfile::fromJsonObject(QJsonObject json) {

    m_orchestrator_isValid = ::OpenAPI::fromJsonValue(m_orchestrator, json[QString("orchestrator")]);
    m_orchestrator_isSet = !json[QString("orchestrator")].isNull() && m_orchestrator_isValid;
}

QString OAIContainerServiceCustomProfile::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIContainerServiceCustomProfile::asJsonObject() const {
    QJsonObject obj;
    if (m_orchestrator_isSet) {
        obj.insert(QString("orchestrator"), ::OpenAPI::toJsonValue(m_orchestrator));
    }
    return obj;
}

QString OAIContainerServiceCustomProfile::getOrchestrator() const {
    return m_orchestrator;
}
void OAIContainerServiceCustomProfile::setOrchestrator(const QString &orchestrator) {
    m_orchestrator = orchestrator;
    m_orchestrator_isSet = true;
}

bool OAIContainerServiceCustomProfile::is_orchestrator_Set() const{
    return m_orchestrator_isSet;
}

bool OAIContainerServiceCustomProfile::is_orchestrator_Valid() const{
    return m_orchestrator_isValid;
}

bool OAIContainerServiceCustomProfile::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_orchestrator_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIContainerServiceCustomProfile::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_orchestrator_isValid && true;
}

} // namespace OpenAPI
