/*
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2018-07-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.LocalNetworkGateway;
import org.openapitools.client.model.LocalNetworkGatewayListResult;
import org.openapitools.client.model.VirtualNetworkGatewayConnectionsUpdateTagsRequest;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class LocalNetworkGatewaysApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public LocalNetworkGatewaysApi() {
        this(Configuration.getDefaultApiClient());
    }

    public LocalNetworkGatewaysApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for localNetworkGatewaysCreateOrUpdate
     * @param resourceGroupName The name of the resource group. (required)
     * @param localNetworkGatewayName The name of the local network gateway. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param parameters Parameters supplied to the create or update local network gateway operation. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Update successful. The operation returns the resulting LocalNetworkGateway resource. </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Create successful. The operation returns the resulting LocalNetworkGateway resource. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call localNetworkGatewaysCreateOrUpdateCall(String resourceGroupName, String localNetworkGatewayName, String apiVersion, String subscriptionId, LocalNetworkGateway parameters, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = parameters;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/localNetworkGateways/{localNetworkGatewayName}"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "localNetworkGatewayName" + "}", localVarApiClient.escapeString(localNetworkGatewayName.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call localNetworkGatewaysCreateOrUpdateValidateBeforeCall(String resourceGroupName, String localNetworkGatewayName, String apiVersion, String subscriptionId, LocalNetworkGateway parameters, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling localNetworkGatewaysCreateOrUpdate(Async)");
        }

        // verify the required parameter 'localNetworkGatewayName' is set
        if (localNetworkGatewayName == null) {
            throw new ApiException("Missing the required parameter 'localNetworkGatewayName' when calling localNetworkGatewaysCreateOrUpdate(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling localNetworkGatewaysCreateOrUpdate(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling localNetworkGatewaysCreateOrUpdate(Async)");
        }

        // verify the required parameter 'parameters' is set
        if (parameters == null) {
            throw new ApiException("Missing the required parameter 'parameters' when calling localNetworkGatewaysCreateOrUpdate(Async)");
        }

        return localNetworkGatewaysCreateOrUpdateCall(resourceGroupName, localNetworkGatewayName, apiVersion, subscriptionId, parameters, _callback);

    }

    /**
     * 
     * Creates or updates a local network gateway in the specified resource group.
     * @param resourceGroupName The name of the resource group. (required)
     * @param localNetworkGatewayName The name of the local network gateway. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param parameters Parameters supplied to the create or update local network gateway operation. (required)
     * @return LocalNetworkGateway
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Update successful. The operation returns the resulting LocalNetworkGateway resource. </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Create successful. The operation returns the resulting LocalNetworkGateway resource. </td><td>  -  </td></tr>
     </table>
     */
    public LocalNetworkGateway localNetworkGatewaysCreateOrUpdate(String resourceGroupName, String localNetworkGatewayName, String apiVersion, String subscriptionId, LocalNetworkGateway parameters) throws ApiException {
        ApiResponse<LocalNetworkGateway> localVarResp = localNetworkGatewaysCreateOrUpdateWithHttpInfo(resourceGroupName, localNetworkGatewayName, apiVersion, subscriptionId, parameters);
        return localVarResp.getData();
    }

    /**
     * 
     * Creates or updates a local network gateway in the specified resource group.
     * @param resourceGroupName The name of the resource group. (required)
     * @param localNetworkGatewayName The name of the local network gateway. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param parameters Parameters supplied to the create or update local network gateway operation. (required)
     * @return ApiResponse&lt;LocalNetworkGateway&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Update successful. The operation returns the resulting LocalNetworkGateway resource. </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Create successful. The operation returns the resulting LocalNetworkGateway resource. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<LocalNetworkGateway> localNetworkGatewaysCreateOrUpdateWithHttpInfo(String resourceGroupName, String localNetworkGatewayName, String apiVersion, String subscriptionId, LocalNetworkGateway parameters) throws ApiException {
        okhttp3.Call localVarCall = localNetworkGatewaysCreateOrUpdateValidateBeforeCall(resourceGroupName, localNetworkGatewayName, apiVersion, subscriptionId, parameters, null);
        Type localVarReturnType = new TypeToken<LocalNetworkGateway>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Creates or updates a local network gateway in the specified resource group.
     * @param resourceGroupName The name of the resource group. (required)
     * @param localNetworkGatewayName The name of the local network gateway. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param parameters Parameters supplied to the create or update local network gateway operation. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Update successful. The operation returns the resulting LocalNetworkGateway resource. </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Create successful. The operation returns the resulting LocalNetworkGateway resource. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call localNetworkGatewaysCreateOrUpdateAsync(String resourceGroupName, String localNetworkGatewayName, String apiVersion, String subscriptionId, LocalNetworkGateway parameters, final ApiCallback<LocalNetworkGateway> _callback) throws ApiException {

        okhttp3.Call localVarCall = localNetworkGatewaysCreateOrUpdateValidateBeforeCall(resourceGroupName, localNetworkGatewayName, apiVersion, subscriptionId, parameters, _callback);
        Type localVarReturnType = new TypeToken<LocalNetworkGateway>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for localNetworkGatewaysDelete
     * @param resourceGroupName The name of the resource group. (required)
     * @param localNetworkGatewayName The name of the local network gateway. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Delete successful. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted and the operation will complete asynchronously. </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> Delete successful. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call localNetworkGatewaysDeleteCall(String resourceGroupName, String localNetworkGatewayName, String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/localNetworkGateways/{localNetworkGatewayName}"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "localNetworkGatewayName" + "}", localVarApiClient.escapeString(localNetworkGatewayName.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call localNetworkGatewaysDeleteValidateBeforeCall(String resourceGroupName, String localNetworkGatewayName, String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling localNetworkGatewaysDelete(Async)");
        }

        // verify the required parameter 'localNetworkGatewayName' is set
        if (localNetworkGatewayName == null) {
            throw new ApiException("Missing the required parameter 'localNetworkGatewayName' when calling localNetworkGatewaysDelete(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling localNetworkGatewaysDelete(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling localNetworkGatewaysDelete(Async)");
        }

        return localNetworkGatewaysDeleteCall(resourceGroupName, localNetworkGatewayName, apiVersion, subscriptionId, _callback);

    }

    /**
     * 
     * Deletes the specified local network gateway.
     * @param resourceGroupName The name of the resource group. (required)
     * @param localNetworkGatewayName The name of the local network gateway. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Delete successful. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted and the operation will complete asynchronously. </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> Delete successful. </td><td>  -  </td></tr>
     </table>
     */
    public void localNetworkGatewaysDelete(String resourceGroupName, String localNetworkGatewayName, String apiVersion, String subscriptionId) throws ApiException {
        localNetworkGatewaysDeleteWithHttpInfo(resourceGroupName, localNetworkGatewayName, apiVersion, subscriptionId);
    }

    /**
     * 
     * Deletes the specified local network gateway.
     * @param resourceGroupName The name of the resource group. (required)
     * @param localNetworkGatewayName The name of the local network gateway. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Delete successful. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted and the operation will complete asynchronously. </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> Delete successful. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> localNetworkGatewaysDeleteWithHttpInfo(String resourceGroupName, String localNetworkGatewayName, String apiVersion, String subscriptionId) throws ApiException {
        okhttp3.Call localVarCall = localNetworkGatewaysDeleteValidateBeforeCall(resourceGroupName, localNetworkGatewayName, apiVersion, subscriptionId, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     *  (asynchronously)
     * Deletes the specified local network gateway.
     * @param resourceGroupName The name of the resource group. (required)
     * @param localNetworkGatewayName The name of the local network gateway. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Delete successful. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted and the operation will complete asynchronously. </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> Delete successful. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call localNetworkGatewaysDeleteAsync(String resourceGroupName, String localNetworkGatewayName, String apiVersion, String subscriptionId, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = localNetworkGatewaysDeleteValidateBeforeCall(resourceGroupName, localNetworkGatewayName, apiVersion, subscriptionId, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for localNetworkGatewaysGet
     * @param resourceGroupName The name of the resource group. (required)
     * @param localNetworkGatewayName The name of the local network gateway. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Request successful. The operation returns the resulting LocalNetworkGateway resource. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call localNetworkGatewaysGetCall(String resourceGroupName, String localNetworkGatewayName, String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/localNetworkGateways/{localNetworkGatewayName}"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "localNetworkGatewayName" + "}", localVarApiClient.escapeString(localNetworkGatewayName.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call localNetworkGatewaysGetValidateBeforeCall(String resourceGroupName, String localNetworkGatewayName, String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling localNetworkGatewaysGet(Async)");
        }

        // verify the required parameter 'localNetworkGatewayName' is set
        if (localNetworkGatewayName == null) {
            throw new ApiException("Missing the required parameter 'localNetworkGatewayName' when calling localNetworkGatewaysGet(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling localNetworkGatewaysGet(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling localNetworkGatewaysGet(Async)");
        }

        return localNetworkGatewaysGetCall(resourceGroupName, localNetworkGatewayName, apiVersion, subscriptionId, _callback);

    }

    /**
     * 
     * Gets the specified local network gateway in a resource group.
     * @param resourceGroupName The name of the resource group. (required)
     * @param localNetworkGatewayName The name of the local network gateway. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @return LocalNetworkGateway
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Request successful. The operation returns the resulting LocalNetworkGateway resource. </td><td>  -  </td></tr>
     </table>
     */
    public LocalNetworkGateway localNetworkGatewaysGet(String resourceGroupName, String localNetworkGatewayName, String apiVersion, String subscriptionId) throws ApiException {
        ApiResponse<LocalNetworkGateway> localVarResp = localNetworkGatewaysGetWithHttpInfo(resourceGroupName, localNetworkGatewayName, apiVersion, subscriptionId);
        return localVarResp.getData();
    }

    /**
     * 
     * Gets the specified local network gateway in a resource group.
     * @param resourceGroupName The name of the resource group. (required)
     * @param localNetworkGatewayName The name of the local network gateway. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @return ApiResponse&lt;LocalNetworkGateway&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Request successful. The operation returns the resulting LocalNetworkGateway resource. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<LocalNetworkGateway> localNetworkGatewaysGetWithHttpInfo(String resourceGroupName, String localNetworkGatewayName, String apiVersion, String subscriptionId) throws ApiException {
        okhttp3.Call localVarCall = localNetworkGatewaysGetValidateBeforeCall(resourceGroupName, localNetworkGatewayName, apiVersion, subscriptionId, null);
        Type localVarReturnType = new TypeToken<LocalNetworkGateway>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Gets the specified local network gateway in a resource group.
     * @param resourceGroupName The name of the resource group. (required)
     * @param localNetworkGatewayName The name of the local network gateway. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Request successful. The operation returns the resulting LocalNetworkGateway resource. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call localNetworkGatewaysGetAsync(String resourceGroupName, String localNetworkGatewayName, String apiVersion, String subscriptionId, final ApiCallback<LocalNetworkGateway> _callback) throws ApiException {

        okhttp3.Call localVarCall = localNetworkGatewaysGetValidateBeforeCall(resourceGroupName, localNetworkGatewayName, apiVersion, subscriptionId, _callback);
        Type localVarReturnType = new TypeToken<LocalNetworkGateway>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for localNetworkGatewaysList
     * @param resourceGroupName The name of the resource group. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Request successful. The operation returns a list of LocalNetworkGateway resources. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call localNetworkGatewaysListCall(String resourceGroupName, String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/localNetworkGateways"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call localNetworkGatewaysListValidateBeforeCall(String resourceGroupName, String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling localNetworkGatewaysList(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling localNetworkGatewaysList(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling localNetworkGatewaysList(Async)");
        }

        return localNetworkGatewaysListCall(resourceGroupName, apiVersion, subscriptionId, _callback);

    }

    /**
     * 
     * Gets all the local network gateways in a resource group.
     * @param resourceGroupName The name of the resource group. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @return LocalNetworkGatewayListResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Request successful. The operation returns a list of LocalNetworkGateway resources. </td><td>  -  </td></tr>
     </table>
     */
    public LocalNetworkGatewayListResult localNetworkGatewaysList(String resourceGroupName, String apiVersion, String subscriptionId) throws ApiException {
        ApiResponse<LocalNetworkGatewayListResult> localVarResp = localNetworkGatewaysListWithHttpInfo(resourceGroupName, apiVersion, subscriptionId);
        return localVarResp.getData();
    }

    /**
     * 
     * Gets all the local network gateways in a resource group.
     * @param resourceGroupName The name of the resource group. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @return ApiResponse&lt;LocalNetworkGatewayListResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Request successful. The operation returns a list of LocalNetworkGateway resources. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<LocalNetworkGatewayListResult> localNetworkGatewaysListWithHttpInfo(String resourceGroupName, String apiVersion, String subscriptionId) throws ApiException {
        okhttp3.Call localVarCall = localNetworkGatewaysListValidateBeforeCall(resourceGroupName, apiVersion, subscriptionId, null);
        Type localVarReturnType = new TypeToken<LocalNetworkGatewayListResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Gets all the local network gateways in a resource group.
     * @param resourceGroupName The name of the resource group. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Request successful. The operation returns a list of LocalNetworkGateway resources. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call localNetworkGatewaysListAsync(String resourceGroupName, String apiVersion, String subscriptionId, final ApiCallback<LocalNetworkGatewayListResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = localNetworkGatewaysListValidateBeforeCall(resourceGroupName, apiVersion, subscriptionId, _callback);
        Type localVarReturnType = new TypeToken<LocalNetworkGatewayListResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for localNetworkGatewaysUpdateTags
     * @param resourceGroupName The name of the resource group. (required)
     * @param localNetworkGatewayName The name of the local network gateway. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param parameters Parameters supplied to update local network gateway tags. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Update successful. The operation returns the resulting LocalNetworkGateway resource. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call localNetworkGatewaysUpdateTagsCall(String resourceGroupName, String localNetworkGatewayName, String apiVersion, String subscriptionId, VirtualNetworkGatewayConnectionsUpdateTagsRequest parameters, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = parameters;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/localNetworkGateways/{localNetworkGatewayName}"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "localNetworkGatewayName" + "}", localVarApiClient.escapeString(localNetworkGatewayName.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PATCH", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call localNetworkGatewaysUpdateTagsValidateBeforeCall(String resourceGroupName, String localNetworkGatewayName, String apiVersion, String subscriptionId, VirtualNetworkGatewayConnectionsUpdateTagsRequest parameters, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling localNetworkGatewaysUpdateTags(Async)");
        }

        // verify the required parameter 'localNetworkGatewayName' is set
        if (localNetworkGatewayName == null) {
            throw new ApiException("Missing the required parameter 'localNetworkGatewayName' when calling localNetworkGatewaysUpdateTags(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling localNetworkGatewaysUpdateTags(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling localNetworkGatewaysUpdateTags(Async)");
        }

        // verify the required parameter 'parameters' is set
        if (parameters == null) {
            throw new ApiException("Missing the required parameter 'parameters' when calling localNetworkGatewaysUpdateTags(Async)");
        }

        return localNetworkGatewaysUpdateTagsCall(resourceGroupName, localNetworkGatewayName, apiVersion, subscriptionId, parameters, _callback);

    }

    /**
     * 
     * Updates a local network gateway tags.
     * @param resourceGroupName The name of the resource group. (required)
     * @param localNetworkGatewayName The name of the local network gateway. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param parameters Parameters supplied to update local network gateway tags. (required)
     * @return LocalNetworkGateway
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Update successful. The operation returns the resulting LocalNetworkGateway resource. </td><td>  -  </td></tr>
     </table>
     */
    public LocalNetworkGateway localNetworkGatewaysUpdateTags(String resourceGroupName, String localNetworkGatewayName, String apiVersion, String subscriptionId, VirtualNetworkGatewayConnectionsUpdateTagsRequest parameters) throws ApiException {
        ApiResponse<LocalNetworkGateway> localVarResp = localNetworkGatewaysUpdateTagsWithHttpInfo(resourceGroupName, localNetworkGatewayName, apiVersion, subscriptionId, parameters);
        return localVarResp.getData();
    }

    /**
     * 
     * Updates a local network gateway tags.
     * @param resourceGroupName The name of the resource group. (required)
     * @param localNetworkGatewayName The name of the local network gateway. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param parameters Parameters supplied to update local network gateway tags. (required)
     * @return ApiResponse&lt;LocalNetworkGateway&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Update successful. The operation returns the resulting LocalNetworkGateway resource. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<LocalNetworkGateway> localNetworkGatewaysUpdateTagsWithHttpInfo(String resourceGroupName, String localNetworkGatewayName, String apiVersion, String subscriptionId, VirtualNetworkGatewayConnectionsUpdateTagsRequest parameters) throws ApiException {
        okhttp3.Call localVarCall = localNetworkGatewaysUpdateTagsValidateBeforeCall(resourceGroupName, localNetworkGatewayName, apiVersion, subscriptionId, parameters, null);
        Type localVarReturnType = new TypeToken<LocalNetworkGateway>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Updates a local network gateway tags.
     * @param resourceGroupName The name of the resource group. (required)
     * @param localNetworkGatewayName The name of the local network gateway. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param parameters Parameters supplied to update local network gateway tags. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Update successful. The operation returns the resulting LocalNetworkGateway resource. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call localNetworkGatewaysUpdateTagsAsync(String resourceGroupName, String localNetworkGatewayName, String apiVersion, String subscriptionId, VirtualNetworkGatewayConnectionsUpdateTagsRequest parameters, final ApiCallback<LocalNetworkGateway> _callback) throws ApiException {

        okhttp3.Call localVarCall = localNetworkGatewaysUpdateTagsValidateBeforeCall(resourceGroupName, localNetworkGatewayName, apiVersion, subscriptionId, parameters, _callback);
        Type localVarReturnType = new TypeToken<LocalNetworkGateway>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
