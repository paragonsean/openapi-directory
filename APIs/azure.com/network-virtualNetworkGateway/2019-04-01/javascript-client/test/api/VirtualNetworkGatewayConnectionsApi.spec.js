/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-04-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.NetworkManagementClient);
  }
}(this, function(expect, NetworkManagementClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new NetworkManagementClient.VirtualNetworkGatewayConnectionsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('VirtualNetworkGatewayConnectionsApi', function() {
    describe('virtualNetworkGatewayConnectionsCreateOrUpdate', function() {
      it('should call virtualNetworkGatewayConnectionsCreateOrUpdate successfully', function(done) {
        //uncomment below and update the code to test virtualNetworkGatewayConnectionsCreateOrUpdate
        //instance.virtualNetworkGatewayConnectionsCreateOrUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('virtualNetworkGatewayConnectionsDelete', function() {
      it('should call virtualNetworkGatewayConnectionsDelete successfully', function(done) {
        //uncomment below and update the code to test virtualNetworkGatewayConnectionsDelete
        //instance.virtualNetworkGatewayConnectionsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('virtualNetworkGatewayConnectionsGet', function() {
      it('should call virtualNetworkGatewayConnectionsGet successfully', function(done) {
        //uncomment below and update the code to test virtualNetworkGatewayConnectionsGet
        //instance.virtualNetworkGatewayConnectionsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('virtualNetworkGatewayConnectionsGetSharedKey', function() {
      it('should call virtualNetworkGatewayConnectionsGetSharedKey successfully', function(done) {
        //uncomment below and update the code to test virtualNetworkGatewayConnectionsGetSharedKey
        //instance.virtualNetworkGatewayConnectionsGetSharedKey(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('virtualNetworkGatewayConnectionsList', function() {
      it('should call virtualNetworkGatewayConnectionsList successfully', function(done) {
        //uncomment below and update the code to test virtualNetworkGatewayConnectionsList
        //instance.virtualNetworkGatewayConnectionsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('virtualNetworkGatewayConnectionsResetSharedKey', function() {
      it('should call virtualNetworkGatewayConnectionsResetSharedKey successfully', function(done) {
        //uncomment below and update the code to test virtualNetworkGatewayConnectionsResetSharedKey
        //instance.virtualNetworkGatewayConnectionsResetSharedKey(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('virtualNetworkGatewayConnectionsSetSharedKey', function() {
      it('should call virtualNetworkGatewayConnectionsSetSharedKey successfully', function(done) {
        //uncomment below and update the code to test virtualNetworkGatewayConnectionsSetSharedKey
        //instance.virtualNetworkGatewayConnectionsSetSharedKey(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('virtualNetworkGatewayConnectionsUpdateTags', function() {
      it('should call virtualNetworkGatewayConnectionsUpdateTags successfully', function(done) {
        //uncomment below and update the code to test virtualNetworkGatewayConnectionsUpdateTags
        //instance.virtualNetworkGatewayConnectionsUpdateTags(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
