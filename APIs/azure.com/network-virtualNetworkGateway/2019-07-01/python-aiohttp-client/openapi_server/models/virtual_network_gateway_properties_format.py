# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.bgp_settings import BgpSettings
from openapi_server.models.local_network_gateway_properties_format_local_network_address_space import LocalNetworkGatewayPropertiesFormatLocalNetworkAddressSpace
from openapi_server.models.virtual_network_gateway_connection_list_entity_properties_format_peer import VirtualNetworkGatewayConnectionListEntityPropertiesFormatPeer
from openapi_server.models.virtual_network_gateway_ip_configuration import VirtualNetworkGatewayIPConfiguration
from openapi_server.models.virtual_network_gateway_sku import VirtualNetworkGatewaySku
from openapi_server.models.vpn_client_configuration import VpnClientConfiguration
from openapi_server import util


class VirtualNetworkGatewayPropertiesFormat(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, active_active: bool=None, bgp_settings: BgpSettings=None, custom_routes: LocalNetworkGatewayPropertiesFormatLocalNetworkAddressSpace=None, enable_bgp: bool=None, gateway_default_site: VirtualNetworkGatewayConnectionListEntityPropertiesFormatPeer=None, gateway_type: str=None, ip_configurations: List[VirtualNetworkGatewayIPConfiguration]=None, provisioning_state: str=None, resource_guid: str=None, sku: VirtualNetworkGatewaySku=None, vpn_client_configuration: VpnClientConfiguration=None, vpn_gateway_generation: str=None, vpn_type: str=None):
        """VirtualNetworkGatewayPropertiesFormat - a model defined in OpenAPI

        :param active_active: The active_active of this VirtualNetworkGatewayPropertiesFormat.
        :param bgp_settings: The bgp_settings of this VirtualNetworkGatewayPropertiesFormat.
        :param custom_routes: The custom_routes of this VirtualNetworkGatewayPropertiesFormat.
        :param enable_bgp: The enable_bgp of this VirtualNetworkGatewayPropertiesFormat.
        :param gateway_default_site: The gateway_default_site of this VirtualNetworkGatewayPropertiesFormat.
        :param gateway_type: The gateway_type of this VirtualNetworkGatewayPropertiesFormat.
        :param ip_configurations: The ip_configurations of this VirtualNetworkGatewayPropertiesFormat.
        :param provisioning_state: The provisioning_state of this VirtualNetworkGatewayPropertiesFormat.
        :param resource_guid: The resource_guid of this VirtualNetworkGatewayPropertiesFormat.
        :param sku: The sku of this VirtualNetworkGatewayPropertiesFormat.
        :param vpn_client_configuration: The vpn_client_configuration of this VirtualNetworkGatewayPropertiesFormat.
        :param vpn_gateway_generation: The vpn_gateway_generation of this VirtualNetworkGatewayPropertiesFormat.
        :param vpn_type: The vpn_type of this VirtualNetworkGatewayPropertiesFormat.
        """
        self.openapi_types = {
            'active_active': bool,
            'bgp_settings': BgpSettings,
            'custom_routes': LocalNetworkGatewayPropertiesFormatLocalNetworkAddressSpace,
            'enable_bgp': bool,
            'gateway_default_site': VirtualNetworkGatewayConnectionListEntityPropertiesFormatPeer,
            'gateway_type': str,
            'ip_configurations': List[VirtualNetworkGatewayIPConfiguration],
            'provisioning_state': str,
            'resource_guid': str,
            'sku': VirtualNetworkGatewaySku,
            'vpn_client_configuration': VpnClientConfiguration,
            'vpn_gateway_generation': str,
            'vpn_type': str
        }

        self.attribute_map = {
            'active_active': 'activeActive',
            'bgp_settings': 'bgpSettings',
            'custom_routes': 'customRoutes',
            'enable_bgp': 'enableBgp',
            'gateway_default_site': 'gatewayDefaultSite',
            'gateway_type': 'gatewayType',
            'ip_configurations': 'ipConfigurations',
            'provisioning_state': 'provisioningState',
            'resource_guid': 'resourceGuid',
            'sku': 'sku',
            'vpn_client_configuration': 'vpnClientConfiguration',
            'vpn_gateway_generation': 'vpnGatewayGeneration',
            'vpn_type': 'vpnType'
        }

        self._active_active = active_active
        self._bgp_settings = bgp_settings
        self._custom_routes = custom_routes
        self._enable_bgp = enable_bgp
        self._gateway_default_site = gateway_default_site
        self._gateway_type = gateway_type
        self._ip_configurations = ip_configurations
        self._provisioning_state = provisioning_state
        self._resource_guid = resource_guid
        self._sku = sku
        self._vpn_client_configuration = vpn_client_configuration
        self._vpn_gateway_generation = vpn_gateway_generation
        self._vpn_type = vpn_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VirtualNetworkGatewayPropertiesFormat':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VirtualNetworkGatewayPropertiesFormat of this VirtualNetworkGatewayPropertiesFormat.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def active_active(self):
        """Gets the active_active of this VirtualNetworkGatewayPropertiesFormat.

        ActiveActive flag.

        :return: The active_active of this VirtualNetworkGatewayPropertiesFormat.
        :rtype: bool
        """
        return self._active_active

    @active_active.setter
    def active_active(self, active_active):
        """Sets the active_active of this VirtualNetworkGatewayPropertiesFormat.

        ActiveActive flag.

        :param active_active: The active_active of this VirtualNetworkGatewayPropertiesFormat.
        :type active_active: bool
        """

        self._active_active = active_active

    @property
    def bgp_settings(self):
        """Gets the bgp_settings of this VirtualNetworkGatewayPropertiesFormat.


        :return: The bgp_settings of this VirtualNetworkGatewayPropertiesFormat.
        :rtype: BgpSettings
        """
        return self._bgp_settings

    @bgp_settings.setter
    def bgp_settings(self, bgp_settings):
        """Sets the bgp_settings of this VirtualNetworkGatewayPropertiesFormat.


        :param bgp_settings: The bgp_settings of this VirtualNetworkGatewayPropertiesFormat.
        :type bgp_settings: BgpSettings
        """

        self._bgp_settings = bgp_settings

    @property
    def custom_routes(self):
        """Gets the custom_routes of this VirtualNetworkGatewayPropertiesFormat.


        :return: The custom_routes of this VirtualNetworkGatewayPropertiesFormat.
        :rtype: LocalNetworkGatewayPropertiesFormatLocalNetworkAddressSpace
        """
        return self._custom_routes

    @custom_routes.setter
    def custom_routes(self, custom_routes):
        """Sets the custom_routes of this VirtualNetworkGatewayPropertiesFormat.


        :param custom_routes: The custom_routes of this VirtualNetworkGatewayPropertiesFormat.
        :type custom_routes: LocalNetworkGatewayPropertiesFormatLocalNetworkAddressSpace
        """

        self._custom_routes = custom_routes

    @property
    def enable_bgp(self):
        """Gets the enable_bgp of this VirtualNetworkGatewayPropertiesFormat.

        Whether BGP is enabled for this virtual network gateway or not.

        :return: The enable_bgp of this VirtualNetworkGatewayPropertiesFormat.
        :rtype: bool
        """
        return self._enable_bgp

    @enable_bgp.setter
    def enable_bgp(self, enable_bgp):
        """Sets the enable_bgp of this VirtualNetworkGatewayPropertiesFormat.

        Whether BGP is enabled for this virtual network gateway or not.

        :param enable_bgp: The enable_bgp of this VirtualNetworkGatewayPropertiesFormat.
        :type enable_bgp: bool
        """

        self._enable_bgp = enable_bgp

    @property
    def gateway_default_site(self):
        """Gets the gateway_default_site of this VirtualNetworkGatewayPropertiesFormat.


        :return: The gateway_default_site of this VirtualNetworkGatewayPropertiesFormat.
        :rtype: VirtualNetworkGatewayConnectionListEntityPropertiesFormatPeer
        """
        return self._gateway_default_site

    @gateway_default_site.setter
    def gateway_default_site(self, gateway_default_site):
        """Sets the gateway_default_site of this VirtualNetworkGatewayPropertiesFormat.


        :param gateway_default_site: The gateway_default_site of this VirtualNetworkGatewayPropertiesFormat.
        :type gateway_default_site: VirtualNetworkGatewayConnectionListEntityPropertiesFormatPeer
        """

        self._gateway_default_site = gateway_default_site

    @property
    def gateway_type(self):
        """Gets the gateway_type of this VirtualNetworkGatewayPropertiesFormat.

        The type of this virtual network gateway.

        :return: The gateway_type of this VirtualNetworkGatewayPropertiesFormat.
        :rtype: str
        """
        return self._gateway_type

    @gateway_type.setter
    def gateway_type(self, gateway_type):
        """Sets the gateway_type of this VirtualNetworkGatewayPropertiesFormat.

        The type of this virtual network gateway.

        :param gateway_type: The gateway_type of this VirtualNetworkGatewayPropertiesFormat.
        :type gateway_type: str
        """
        allowed_values = ["Vpn", "ExpressRoute"]  # noqa: E501
        if gateway_type not in allowed_values:
            raise ValueError(
                "Invalid value for `gateway_type` ({0}), must be one of {1}"
                .format(gateway_type, allowed_values)
            )

        self._gateway_type = gateway_type

    @property
    def ip_configurations(self):
        """Gets the ip_configurations of this VirtualNetworkGatewayPropertiesFormat.

        IP configurations for virtual network gateway.

        :return: The ip_configurations of this VirtualNetworkGatewayPropertiesFormat.
        :rtype: List[VirtualNetworkGatewayIPConfiguration]
        """
        return self._ip_configurations

    @ip_configurations.setter
    def ip_configurations(self, ip_configurations):
        """Sets the ip_configurations of this VirtualNetworkGatewayPropertiesFormat.

        IP configurations for virtual network gateway.

        :param ip_configurations: The ip_configurations of this VirtualNetworkGatewayPropertiesFormat.
        :type ip_configurations: List[VirtualNetworkGatewayIPConfiguration]
        """

        self._ip_configurations = ip_configurations

    @property
    def provisioning_state(self):
        """Gets the provisioning_state of this VirtualNetworkGatewayPropertiesFormat.

        The current provisioning state.

        :return: The provisioning_state of this VirtualNetworkGatewayPropertiesFormat.
        :rtype: str
        """
        return self._provisioning_state

    @provisioning_state.setter
    def provisioning_state(self, provisioning_state):
        """Sets the provisioning_state of this VirtualNetworkGatewayPropertiesFormat.

        The current provisioning state.

        :param provisioning_state: The provisioning_state of this VirtualNetworkGatewayPropertiesFormat.
        :type provisioning_state: str
        """
        allowed_values = ["Succeeded", "Updating", "Deleting", "Failed"]  # noqa: E501
        if provisioning_state not in allowed_values:
            raise ValueError(
                "Invalid value for `provisioning_state` ({0}), must be one of {1}"
                .format(provisioning_state, allowed_values)
            )

        self._provisioning_state = provisioning_state

    @property
    def resource_guid(self):
        """Gets the resource_guid of this VirtualNetworkGatewayPropertiesFormat.

        The resource GUID property of the virtual network gateway resource.

        :return: The resource_guid of this VirtualNetworkGatewayPropertiesFormat.
        :rtype: str
        """
        return self._resource_guid

    @resource_guid.setter
    def resource_guid(self, resource_guid):
        """Sets the resource_guid of this VirtualNetworkGatewayPropertiesFormat.

        The resource GUID property of the virtual network gateway resource.

        :param resource_guid: The resource_guid of this VirtualNetworkGatewayPropertiesFormat.
        :type resource_guid: str
        """

        self._resource_guid = resource_guid

    @property
    def sku(self):
        """Gets the sku of this VirtualNetworkGatewayPropertiesFormat.


        :return: The sku of this VirtualNetworkGatewayPropertiesFormat.
        :rtype: VirtualNetworkGatewaySku
        """
        return self._sku

    @sku.setter
    def sku(self, sku):
        """Sets the sku of this VirtualNetworkGatewayPropertiesFormat.


        :param sku: The sku of this VirtualNetworkGatewayPropertiesFormat.
        :type sku: VirtualNetworkGatewaySku
        """

        self._sku = sku

    @property
    def vpn_client_configuration(self):
        """Gets the vpn_client_configuration of this VirtualNetworkGatewayPropertiesFormat.


        :return: The vpn_client_configuration of this VirtualNetworkGatewayPropertiesFormat.
        :rtype: VpnClientConfiguration
        """
        return self._vpn_client_configuration

    @vpn_client_configuration.setter
    def vpn_client_configuration(self, vpn_client_configuration):
        """Sets the vpn_client_configuration of this VirtualNetworkGatewayPropertiesFormat.


        :param vpn_client_configuration: The vpn_client_configuration of this VirtualNetworkGatewayPropertiesFormat.
        :type vpn_client_configuration: VpnClientConfiguration
        """

        self._vpn_client_configuration = vpn_client_configuration

    @property
    def vpn_gateway_generation(self):
        """Gets the vpn_gateway_generation of this VirtualNetworkGatewayPropertiesFormat.

        The generation for this VirtualNetworkGateway. Must be None if gatewayType is not VPN.

        :return: The vpn_gateway_generation of this VirtualNetworkGatewayPropertiesFormat.
        :rtype: str
        """
        return self._vpn_gateway_generation

    @vpn_gateway_generation.setter
    def vpn_gateway_generation(self, vpn_gateway_generation):
        """Sets the vpn_gateway_generation of this VirtualNetworkGatewayPropertiesFormat.

        The generation for this VirtualNetworkGateway. Must be None if gatewayType is not VPN.

        :param vpn_gateway_generation: The vpn_gateway_generation of this VirtualNetworkGatewayPropertiesFormat.
        :type vpn_gateway_generation: str
        """
        allowed_values = ["None", "Generation1", "Generation2"]  # noqa: E501
        if vpn_gateway_generation not in allowed_values:
            raise ValueError(
                "Invalid value for `vpn_gateway_generation` ({0}), must be one of {1}"
                .format(vpn_gateway_generation, allowed_values)
            )

        self._vpn_gateway_generation = vpn_gateway_generation

    @property
    def vpn_type(self):
        """Gets the vpn_type of this VirtualNetworkGatewayPropertiesFormat.

        The type of this virtual network gateway.

        :return: The vpn_type of this VirtualNetworkGatewayPropertiesFormat.
        :rtype: str
        """
        return self._vpn_type

    @vpn_type.setter
    def vpn_type(self, vpn_type):
        """Sets the vpn_type of this VirtualNetworkGatewayPropertiesFormat.

        The type of this virtual network gateway.

        :param vpn_type: The vpn_type of this VirtualNetworkGatewayPropertiesFormat.
        :type vpn_type: str
        """
        allowed_values = ["PolicyBased", "RouteBased"]  # noqa: E501
        if vpn_type not in allowed_values:
            raise ValueError(
                "Invalid value for `vpn_type` ({0}), must be one of {1}"
                .format(vpn_type, allowed_values)
            )

        self._vpn_type = vpn_type
