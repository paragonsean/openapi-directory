# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TrafficSelectorPolicy(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, local_address_ranges: List[str]=None, remote_address_ranges: List[str]=None):
        """TrafficSelectorPolicy - a model defined in OpenAPI

        :param local_address_ranges: The local_address_ranges of this TrafficSelectorPolicy.
        :param remote_address_ranges: The remote_address_ranges of this TrafficSelectorPolicy.
        """
        self.openapi_types = {
            'local_address_ranges': List[str],
            'remote_address_ranges': List[str]
        }

        self.attribute_map = {
            'local_address_ranges': 'localAddressRanges',
            'remote_address_ranges': 'remoteAddressRanges'
        }

        self._local_address_ranges = local_address_ranges
        self._remote_address_ranges = remote_address_ranges

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TrafficSelectorPolicy':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TrafficSelectorPolicy of this TrafficSelectorPolicy.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def local_address_ranges(self):
        """Gets the local_address_ranges of this TrafficSelectorPolicy.

        A collection of local address spaces in CIDR format

        :return: The local_address_ranges of this TrafficSelectorPolicy.
        :rtype: List[str]
        """
        return self._local_address_ranges

    @local_address_ranges.setter
    def local_address_ranges(self, local_address_ranges):
        """Sets the local_address_ranges of this TrafficSelectorPolicy.

        A collection of local address spaces in CIDR format

        :param local_address_ranges: The local_address_ranges of this TrafficSelectorPolicy.
        :type local_address_ranges: List[str]
        """
        if local_address_ranges is None:
            raise ValueError("Invalid value for `local_address_ranges`, must not be `None`")

        self._local_address_ranges = local_address_ranges

    @property
    def remote_address_ranges(self):
        """Gets the remote_address_ranges of this TrafficSelectorPolicy.

        A collection of remote address spaces in CIDR format

        :return: The remote_address_ranges of this TrafficSelectorPolicy.
        :rtype: List[str]
        """
        return self._remote_address_ranges

    @remote_address_ranges.setter
    def remote_address_ranges(self, remote_address_ranges):
        """Sets the remote_address_ranges of this TrafficSelectorPolicy.

        A collection of remote address spaces in CIDR format

        :param remote_address_ranges: The remote_address_ranges of this TrafficSelectorPolicy.
        :type remote_address_ranges: List[str]
        """
        if remote_address_ranges is None:
            raise ValueError("Invalid value for `remote_address_ranges`, must not be `None`")

        self._remote_address_ranges = remote_address_ranges
