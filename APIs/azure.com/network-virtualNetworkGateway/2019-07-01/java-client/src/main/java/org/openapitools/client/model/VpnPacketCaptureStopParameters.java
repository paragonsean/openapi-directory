/*
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-07-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Stop packet capture parameters.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:43:36.413229-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class VpnPacketCaptureStopParameters {
  public static final String SERIALIZED_NAME_SAS_URL = "sasUrl";
  @SerializedName(SERIALIZED_NAME_SAS_URL)
  private String sasUrl;

  public VpnPacketCaptureStopParameters() {
  }

  public VpnPacketCaptureStopParameters sasUrl(String sasUrl) {
    this.sasUrl = sasUrl;
    return this;
  }

  /**
   * SAS url for packet capture on virtual network gateway.
   * @return sasUrl
   */
  @javax.annotation.Nullable
  public String getSasUrl() {
    return sasUrl;
  }

  public void setSasUrl(String sasUrl) {
    this.sasUrl = sasUrl;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VpnPacketCaptureStopParameters vpnPacketCaptureStopParameters = (VpnPacketCaptureStopParameters) o;
    return Objects.equals(this.sasUrl, vpnPacketCaptureStopParameters.sasUrl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(sasUrl);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VpnPacketCaptureStopParameters {\n");
    sb.append("    sasUrl: ").append(toIndentedString(sasUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("sasUrl");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to VpnPacketCaptureStopParameters
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!VpnPacketCaptureStopParameters.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in VpnPacketCaptureStopParameters is not found in the empty JSON string", VpnPacketCaptureStopParameters.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!VpnPacketCaptureStopParameters.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `VpnPacketCaptureStopParameters` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("sasUrl") != null && !jsonObj.get("sasUrl").isJsonNull()) && !jsonObj.get("sasUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sasUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sasUrl").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!VpnPacketCaptureStopParameters.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'VpnPacketCaptureStopParameters' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<VpnPacketCaptureStopParameters> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(VpnPacketCaptureStopParameters.class));

       return (TypeAdapter<T>) new TypeAdapter<VpnPacketCaptureStopParameters>() {
           @Override
           public void write(JsonWriter out, VpnPacketCaptureStopParameters value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public VpnPacketCaptureStopParameters read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of VpnPacketCaptureStopParameters given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of VpnPacketCaptureStopParameters
   * @throws IOException if the JSON string is invalid with respect to VpnPacketCaptureStopParameters
   */
  public static VpnPacketCaptureStopParameters fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, VpnPacketCaptureStopParameters.class);
  }

  /**
   * Convert an instance of VpnPacketCaptureStopParameters to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

