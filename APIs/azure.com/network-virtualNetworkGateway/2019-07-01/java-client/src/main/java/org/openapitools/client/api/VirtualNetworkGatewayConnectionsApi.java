/*
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-07-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.ConnectionResetSharedKey;
import org.openapitools.client.model.ConnectionSharedKey;
import org.openapitools.client.model.VirtualNetworkGatewayConnection;
import org.openapitools.client.model.VirtualNetworkGatewayConnectionListResult;
import org.openapitools.client.model.VirtualNetworkGatewayConnectionsStartPacketCaptureDefaultResponse;
import org.openapitools.client.model.VirtualNetworkGatewayConnectionsUpdateTagsRequest;
import org.openapitools.client.model.VpnPacketCaptureStartParameters;
import org.openapitools.client.model.VpnPacketCaptureStopParameters;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class VirtualNetworkGatewayConnectionsApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public VirtualNetworkGatewayConnectionsApi() {
        this(Configuration.getDefaultApiClient());
    }

    public VirtualNetworkGatewayConnectionsApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for virtualNetworkGatewayConnectionsCreateOrUpdate
     * @param resourceGroupName The name of the resource group. (required)
     * @param virtualNetworkGatewayConnectionName The name of the virtual network gateway connection. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param parameters Parameters supplied to the create or update virtual network gateway connection operation. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Update successful. The operation returns the resulting VirtualNetworkGatewayConnection resource. </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Create successful. The operation returns the resulting VirtualNetworkGatewayConnection resource. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualNetworkGatewayConnectionsCreateOrUpdateCall(String resourceGroupName, String virtualNetworkGatewayConnectionName, String apiVersion, String subscriptionId, VirtualNetworkGatewayConnection parameters, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = parameters;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "virtualNetworkGatewayConnectionName" + "}", localVarApiClient.escapeString(virtualNetworkGatewayConnectionName.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call virtualNetworkGatewayConnectionsCreateOrUpdateValidateBeforeCall(String resourceGroupName, String virtualNetworkGatewayConnectionName, String apiVersion, String subscriptionId, VirtualNetworkGatewayConnection parameters, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling virtualNetworkGatewayConnectionsCreateOrUpdate(Async)");
        }

        // verify the required parameter 'virtualNetworkGatewayConnectionName' is set
        if (virtualNetworkGatewayConnectionName == null) {
            throw new ApiException("Missing the required parameter 'virtualNetworkGatewayConnectionName' when calling virtualNetworkGatewayConnectionsCreateOrUpdate(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling virtualNetworkGatewayConnectionsCreateOrUpdate(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling virtualNetworkGatewayConnectionsCreateOrUpdate(Async)");
        }

        // verify the required parameter 'parameters' is set
        if (parameters == null) {
            throw new ApiException("Missing the required parameter 'parameters' when calling virtualNetworkGatewayConnectionsCreateOrUpdate(Async)");
        }

        return virtualNetworkGatewayConnectionsCreateOrUpdateCall(resourceGroupName, virtualNetworkGatewayConnectionName, apiVersion, subscriptionId, parameters, _callback);

    }

    /**
     * 
     * Creates or updates a virtual network gateway connection in the specified resource group.
     * @param resourceGroupName The name of the resource group. (required)
     * @param virtualNetworkGatewayConnectionName The name of the virtual network gateway connection. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param parameters Parameters supplied to the create or update virtual network gateway connection operation. (required)
     * @return VirtualNetworkGatewayConnection
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Update successful. The operation returns the resulting VirtualNetworkGatewayConnection resource. </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Create successful. The operation returns the resulting VirtualNetworkGatewayConnection resource. </td><td>  -  </td></tr>
     </table>
     */
    public VirtualNetworkGatewayConnection virtualNetworkGatewayConnectionsCreateOrUpdate(String resourceGroupName, String virtualNetworkGatewayConnectionName, String apiVersion, String subscriptionId, VirtualNetworkGatewayConnection parameters) throws ApiException {
        ApiResponse<VirtualNetworkGatewayConnection> localVarResp = virtualNetworkGatewayConnectionsCreateOrUpdateWithHttpInfo(resourceGroupName, virtualNetworkGatewayConnectionName, apiVersion, subscriptionId, parameters);
        return localVarResp.getData();
    }

    /**
     * 
     * Creates or updates a virtual network gateway connection in the specified resource group.
     * @param resourceGroupName The name of the resource group. (required)
     * @param virtualNetworkGatewayConnectionName The name of the virtual network gateway connection. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param parameters Parameters supplied to the create or update virtual network gateway connection operation. (required)
     * @return ApiResponse&lt;VirtualNetworkGatewayConnection&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Update successful. The operation returns the resulting VirtualNetworkGatewayConnection resource. </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Create successful. The operation returns the resulting VirtualNetworkGatewayConnection resource. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<VirtualNetworkGatewayConnection> virtualNetworkGatewayConnectionsCreateOrUpdateWithHttpInfo(String resourceGroupName, String virtualNetworkGatewayConnectionName, String apiVersion, String subscriptionId, VirtualNetworkGatewayConnection parameters) throws ApiException {
        okhttp3.Call localVarCall = virtualNetworkGatewayConnectionsCreateOrUpdateValidateBeforeCall(resourceGroupName, virtualNetworkGatewayConnectionName, apiVersion, subscriptionId, parameters, null);
        Type localVarReturnType = new TypeToken<VirtualNetworkGatewayConnection>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Creates or updates a virtual network gateway connection in the specified resource group.
     * @param resourceGroupName The name of the resource group. (required)
     * @param virtualNetworkGatewayConnectionName The name of the virtual network gateway connection. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param parameters Parameters supplied to the create or update virtual network gateway connection operation. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Update successful. The operation returns the resulting VirtualNetworkGatewayConnection resource. </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Create successful. The operation returns the resulting VirtualNetworkGatewayConnection resource. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualNetworkGatewayConnectionsCreateOrUpdateAsync(String resourceGroupName, String virtualNetworkGatewayConnectionName, String apiVersion, String subscriptionId, VirtualNetworkGatewayConnection parameters, final ApiCallback<VirtualNetworkGatewayConnection> _callback) throws ApiException {

        okhttp3.Call localVarCall = virtualNetworkGatewayConnectionsCreateOrUpdateValidateBeforeCall(resourceGroupName, virtualNetworkGatewayConnectionName, apiVersion, subscriptionId, parameters, _callback);
        Type localVarReturnType = new TypeToken<VirtualNetworkGatewayConnection>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for virtualNetworkGatewayConnectionsDelete
     * @param resourceGroupName The name of the resource group. (required)
     * @param virtualNetworkGatewayConnectionName The name of the virtual network gateway connection. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Delete successful. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted and the operation will complete asynchronously. </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> Delete successful. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualNetworkGatewayConnectionsDeleteCall(String resourceGroupName, String virtualNetworkGatewayConnectionName, String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "virtualNetworkGatewayConnectionName" + "}", localVarApiClient.escapeString(virtualNetworkGatewayConnectionName.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call virtualNetworkGatewayConnectionsDeleteValidateBeforeCall(String resourceGroupName, String virtualNetworkGatewayConnectionName, String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling virtualNetworkGatewayConnectionsDelete(Async)");
        }

        // verify the required parameter 'virtualNetworkGatewayConnectionName' is set
        if (virtualNetworkGatewayConnectionName == null) {
            throw new ApiException("Missing the required parameter 'virtualNetworkGatewayConnectionName' when calling virtualNetworkGatewayConnectionsDelete(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling virtualNetworkGatewayConnectionsDelete(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling virtualNetworkGatewayConnectionsDelete(Async)");
        }

        return virtualNetworkGatewayConnectionsDeleteCall(resourceGroupName, virtualNetworkGatewayConnectionName, apiVersion, subscriptionId, _callback);

    }

    /**
     * 
     * Deletes the specified virtual network Gateway connection.
     * @param resourceGroupName The name of the resource group. (required)
     * @param virtualNetworkGatewayConnectionName The name of the virtual network gateway connection. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Delete successful. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted and the operation will complete asynchronously. </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> Delete successful. </td><td>  -  </td></tr>
     </table>
     */
    public void virtualNetworkGatewayConnectionsDelete(String resourceGroupName, String virtualNetworkGatewayConnectionName, String apiVersion, String subscriptionId) throws ApiException {
        virtualNetworkGatewayConnectionsDeleteWithHttpInfo(resourceGroupName, virtualNetworkGatewayConnectionName, apiVersion, subscriptionId);
    }

    /**
     * 
     * Deletes the specified virtual network Gateway connection.
     * @param resourceGroupName The name of the resource group. (required)
     * @param virtualNetworkGatewayConnectionName The name of the virtual network gateway connection. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Delete successful. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted and the operation will complete asynchronously. </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> Delete successful. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> virtualNetworkGatewayConnectionsDeleteWithHttpInfo(String resourceGroupName, String virtualNetworkGatewayConnectionName, String apiVersion, String subscriptionId) throws ApiException {
        okhttp3.Call localVarCall = virtualNetworkGatewayConnectionsDeleteValidateBeforeCall(resourceGroupName, virtualNetworkGatewayConnectionName, apiVersion, subscriptionId, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     *  (asynchronously)
     * Deletes the specified virtual network Gateway connection.
     * @param resourceGroupName The name of the resource group. (required)
     * @param virtualNetworkGatewayConnectionName The name of the virtual network gateway connection. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Delete successful. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted and the operation will complete asynchronously. </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> Delete successful. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualNetworkGatewayConnectionsDeleteAsync(String resourceGroupName, String virtualNetworkGatewayConnectionName, String apiVersion, String subscriptionId, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = virtualNetworkGatewayConnectionsDeleteValidateBeforeCall(resourceGroupName, virtualNetworkGatewayConnectionName, apiVersion, subscriptionId, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for virtualNetworkGatewayConnectionsGet
     * @param resourceGroupName The name of the resource group. (required)
     * @param virtualNetworkGatewayConnectionName The name of the virtual network gateway connection. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Request successful. The operation returns the resulting VirtualNetworkGatewayConnection resource. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualNetworkGatewayConnectionsGetCall(String resourceGroupName, String virtualNetworkGatewayConnectionName, String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "virtualNetworkGatewayConnectionName" + "}", localVarApiClient.escapeString(virtualNetworkGatewayConnectionName.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call virtualNetworkGatewayConnectionsGetValidateBeforeCall(String resourceGroupName, String virtualNetworkGatewayConnectionName, String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling virtualNetworkGatewayConnectionsGet(Async)");
        }

        // verify the required parameter 'virtualNetworkGatewayConnectionName' is set
        if (virtualNetworkGatewayConnectionName == null) {
            throw new ApiException("Missing the required parameter 'virtualNetworkGatewayConnectionName' when calling virtualNetworkGatewayConnectionsGet(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling virtualNetworkGatewayConnectionsGet(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling virtualNetworkGatewayConnectionsGet(Async)");
        }

        return virtualNetworkGatewayConnectionsGetCall(resourceGroupName, virtualNetworkGatewayConnectionName, apiVersion, subscriptionId, _callback);

    }

    /**
     * 
     * Gets the specified virtual network gateway connection by resource group.
     * @param resourceGroupName The name of the resource group. (required)
     * @param virtualNetworkGatewayConnectionName The name of the virtual network gateway connection. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @return VirtualNetworkGatewayConnection
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Request successful. The operation returns the resulting VirtualNetworkGatewayConnection resource. </td><td>  -  </td></tr>
     </table>
     */
    public VirtualNetworkGatewayConnection virtualNetworkGatewayConnectionsGet(String resourceGroupName, String virtualNetworkGatewayConnectionName, String apiVersion, String subscriptionId) throws ApiException {
        ApiResponse<VirtualNetworkGatewayConnection> localVarResp = virtualNetworkGatewayConnectionsGetWithHttpInfo(resourceGroupName, virtualNetworkGatewayConnectionName, apiVersion, subscriptionId);
        return localVarResp.getData();
    }

    /**
     * 
     * Gets the specified virtual network gateway connection by resource group.
     * @param resourceGroupName The name of the resource group. (required)
     * @param virtualNetworkGatewayConnectionName The name of the virtual network gateway connection. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @return ApiResponse&lt;VirtualNetworkGatewayConnection&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Request successful. The operation returns the resulting VirtualNetworkGatewayConnection resource. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<VirtualNetworkGatewayConnection> virtualNetworkGatewayConnectionsGetWithHttpInfo(String resourceGroupName, String virtualNetworkGatewayConnectionName, String apiVersion, String subscriptionId) throws ApiException {
        okhttp3.Call localVarCall = virtualNetworkGatewayConnectionsGetValidateBeforeCall(resourceGroupName, virtualNetworkGatewayConnectionName, apiVersion, subscriptionId, null);
        Type localVarReturnType = new TypeToken<VirtualNetworkGatewayConnection>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Gets the specified virtual network gateway connection by resource group.
     * @param resourceGroupName The name of the resource group. (required)
     * @param virtualNetworkGatewayConnectionName The name of the virtual network gateway connection. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Request successful. The operation returns the resulting VirtualNetworkGatewayConnection resource. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualNetworkGatewayConnectionsGetAsync(String resourceGroupName, String virtualNetworkGatewayConnectionName, String apiVersion, String subscriptionId, final ApiCallback<VirtualNetworkGatewayConnection> _callback) throws ApiException {

        okhttp3.Call localVarCall = virtualNetworkGatewayConnectionsGetValidateBeforeCall(resourceGroupName, virtualNetworkGatewayConnectionName, apiVersion, subscriptionId, _callback);
        Type localVarReturnType = new TypeToken<VirtualNetworkGatewayConnection>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for virtualNetworkGatewayConnectionsGetSharedKey
     * @param resourceGroupName The name of the resource group. (required)
     * @param virtualNetworkGatewayConnectionName The virtual network gateway connection shared key name. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Request successful. The operation returns a list of VirtualNetworkGatewayConnection resources. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualNetworkGatewayConnectionsGetSharedKeyCall(String resourceGroupName, String virtualNetworkGatewayConnectionName, String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}/sharedkey"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "virtualNetworkGatewayConnectionName" + "}", localVarApiClient.escapeString(virtualNetworkGatewayConnectionName.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call virtualNetworkGatewayConnectionsGetSharedKeyValidateBeforeCall(String resourceGroupName, String virtualNetworkGatewayConnectionName, String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling virtualNetworkGatewayConnectionsGetSharedKey(Async)");
        }

        // verify the required parameter 'virtualNetworkGatewayConnectionName' is set
        if (virtualNetworkGatewayConnectionName == null) {
            throw new ApiException("Missing the required parameter 'virtualNetworkGatewayConnectionName' when calling virtualNetworkGatewayConnectionsGetSharedKey(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling virtualNetworkGatewayConnectionsGetSharedKey(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling virtualNetworkGatewayConnectionsGetSharedKey(Async)");
        }

        return virtualNetworkGatewayConnectionsGetSharedKeyCall(resourceGroupName, virtualNetworkGatewayConnectionName, apiVersion, subscriptionId, _callback);

    }

    /**
     * 
     * The Get VirtualNetworkGatewayConnectionSharedKey operation retrieves information about the specified virtual network gateway connection shared key through Network resource provider.
     * @param resourceGroupName The name of the resource group. (required)
     * @param virtualNetworkGatewayConnectionName The virtual network gateway connection shared key name. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @return ConnectionSharedKey
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Request successful. The operation returns a list of VirtualNetworkGatewayConnection resources. </td><td>  -  </td></tr>
     </table>
     */
    public ConnectionSharedKey virtualNetworkGatewayConnectionsGetSharedKey(String resourceGroupName, String virtualNetworkGatewayConnectionName, String apiVersion, String subscriptionId) throws ApiException {
        ApiResponse<ConnectionSharedKey> localVarResp = virtualNetworkGatewayConnectionsGetSharedKeyWithHttpInfo(resourceGroupName, virtualNetworkGatewayConnectionName, apiVersion, subscriptionId);
        return localVarResp.getData();
    }

    /**
     * 
     * The Get VirtualNetworkGatewayConnectionSharedKey operation retrieves information about the specified virtual network gateway connection shared key through Network resource provider.
     * @param resourceGroupName The name of the resource group. (required)
     * @param virtualNetworkGatewayConnectionName The virtual network gateway connection shared key name. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @return ApiResponse&lt;ConnectionSharedKey&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Request successful. The operation returns a list of VirtualNetworkGatewayConnection resources. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ConnectionSharedKey> virtualNetworkGatewayConnectionsGetSharedKeyWithHttpInfo(String resourceGroupName, String virtualNetworkGatewayConnectionName, String apiVersion, String subscriptionId) throws ApiException {
        okhttp3.Call localVarCall = virtualNetworkGatewayConnectionsGetSharedKeyValidateBeforeCall(resourceGroupName, virtualNetworkGatewayConnectionName, apiVersion, subscriptionId, null);
        Type localVarReturnType = new TypeToken<ConnectionSharedKey>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * The Get VirtualNetworkGatewayConnectionSharedKey operation retrieves information about the specified virtual network gateway connection shared key through Network resource provider.
     * @param resourceGroupName The name of the resource group. (required)
     * @param virtualNetworkGatewayConnectionName The virtual network gateway connection shared key name. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Request successful. The operation returns a list of VirtualNetworkGatewayConnection resources. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualNetworkGatewayConnectionsGetSharedKeyAsync(String resourceGroupName, String virtualNetworkGatewayConnectionName, String apiVersion, String subscriptionId, final ApiCallback<ConnectionSharedKey> _callback) throws ApiException {

        okhttp3.Call localVarCall = virtualNetworkGatewayConnectionsGetSharedKeyValidateBeforeCall(resourceGroupName, virtualNetworkGatewayConnectionName, apiVersion, subscriptionId, _callback);
        Type localVarReturnType = new TypeToken<ConnectionSharedKey>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for virtualNetworkGatewayConnectionsList
     * @param resourceGroupName The name of the resource group. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Request successful. The operation resets the virtual network gateway connection shared key. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualNetworkGatewayConnectionsListCall(String resourceGroupName, String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call virtualNetworkGatewayConnectionsListValidateBeforeCall(String resourceGroupName, String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling virtualNetworkGatewayConnectionsList(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling virtualNetworkGatewayConnectionsList(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling virtualNetworkGatewayConnectionsList(Async)");
        }

        return virtualNetworkGatewayConnectionsListCall(resourceGroupName, apiVersion, subscriptionId, _callback);

    }

    /**
     * 
     * The List VirtualNetworkGatewayConnections operation retrieves all the virtual network gateways connections created.
     * @param resourceGroupName The name of the resource group. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @return VirtualNetworkGatewayConnectionListResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Request successful. The operation resets the virtual network gateway connection shared key. </td><td>  -  </td></tr>
     </table>
     */
    public VirtualNetworkGatewayConnectionListResult virtualNetworkGatewayConnectionsList(String resourceGroupName, String apiVersion, String subscriptionId) throws ApiException {
        ApiResponse<VirtualNetworkGatewayConnectionListResult> localVarResp = virtualNetworkGatewayConnectionsListWithHttpInfo(resourceGroupName, apiVersion, subscriptionId);
        return localVarResp.getData();
    }

    /**
     * 
     * The List VirtualNetworkGatewayConnections operation retrieves all the virtual network gateways connections created.
     * @param resourceGroupName The name of the resource group. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @return ApiResponse&lt;VirtualNetworkGatewayConnectionListResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Request successful. The operation resets the virtual network gateway connection shared key. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<VirtualNetworkGatewayConnectionListResult> virtualNetworkGatewayConnectionsListWithHttpInfo(String resourceGroupName, String apiVersion, String subscriptionId) throws ApiException {
        okhttp3.Call localVarCall = virtualNetworkGatewayConnectionsListValidateBeforeCall(resourceGroupName, apiVersion, subscriptionId, null);
        Type localVarReturnType = new TypeToken<VirtualNetworkGatewayConnectionListResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * The List VirtualNetworkGatewayConnections operation retrieves all the virtual network gateways connections created.
     * @param resourceGroupName The name of the resource group. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Request successful. The operation resets the virtual network gateway connection shared key. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualNetworkGatewayConnectionsListAsync(String resourceGroupName, String apiVersion, String subscriptionId, final ApiCallback<VirtualNetworkGatewayConnectionListResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = virtualNetworkGatewayConnectionsListValidateBeforeCall(resourceGroupName, apiVersion, subscriptionId, _callback);
        Type localVarReturnType = new TypeToken<VirtualNetworkGatewayConnectionListResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for virtualNetworkGatewayConnectionsResetSharedKey
     * @param resourceGroupName The name of the resource group. (required)
     * @param virtualNetworkGatewayConnectionName The virtual network gateway connection reset shared key Name. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param parameters Parameters supplied to the begin reset virtual network gateway connection shared key operation through network resource provider. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Request successful. The operation sets the virtual network gateway connection shared key. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Request successful. The operation sets the virtual network gateway connection shared key. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualNetworkGatewayConnectionsResetSharedKeyCall(String resourceGroupName, String virtualNetworkGatewayConnectionName, String apiVersion, String subscriptionId, ConnectionResetSharedKey parameters, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = parameters;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}/sharedkey/reset"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "virtualNetworkGatewayConnectionName" + "}", localVarApiClient.escapeString(virtualNetworkGatewayConnectionName.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call virtualNetworkGatewayConnectionsResetSharedKeyValidateBeforeCall(String resourceGroupName, String virtualNetworkGatewayConnectionName, String apiVersion, String subscriptionId, ConnectionResetSharedKey parameters, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling virtualNetworkGatewayConnectionsResetSharedKey(Async)");
        }

        // verify the required parameter 'virtualNetworkGatewayConnectionName' is set
        if (virtualNetworkGatewayConnectionName == null) {
            throw new ApiException("Missing the required parameter 'virtualNetworkGatewayConnectionName' when calling virtualNetworkGatewayConnectionsResetSharedKey(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling virtualNetworkGatewayConnectionsResetSharedKey(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling virtualNetworkGatewayConnectionsResetSharedKey(Async)");
        }

        // verify the required parameter 'parameters' is set
        if (parameters == null) {
            throw new ApiException("Missing the required parameter 'parameters' when calling virtualNetworkGatewayConnectionsResetSharedKey(Async)");
        }

        return virtualNetworkGatewayConnectionsResetSharedKeyCall(resourceGroupName, virtualNetworkGatewayConnectionName, apiVersion, subscriptionId, parameters, _callback);

    }

    /**
     * 
     * The VirtualNetworkGatewayConnectionResetSharedKey operation resets the virtual network gateway connection shared key for passed virtual network gateway connection in the specified resource group through Network resource provider.
     * @param resourceGroupName The name of the resource group. (required)
     * @param virtualNetworkGatewayConnectionName The virtual network gateway connection reset shared key Name. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param parameters Parameters supplied to the begin reset virtual network gateway connection shared key operation through network resource provider. (required)
     * @return ConnectionResetSharedKey
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Request successful. The operation sets the virtual network gateway connection shared key. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Request successful. The operation sets the virtual network gateway connection shared key. </td><td>  -  </td></tr>
     </table>
     */
    public ConnectionResetSharedKey virtualNetworkGatewayConnectionsResetSharedKey(String resourceGroupName, String virtualNetworkGatewayConnectionName, String apiVersion, String subscriptionId, ConnectionResetSharedKey parameters) throws ApiException {
        ApiResponse<ConnectionResetSharedKey> localVarResp = virtualNetworkGatewayConnectionsResetSharedKeyWithHttpInfo(resourceGroupName, virtualNetworkGatewayConnectionName, apiVersion, subscriptionId, parameters);
        return localVarResp.getData();
    }

    /**
     * 
     * The VirtualNetworkGatewayConnectionResetSharedKey operation resets the virtual network gateway connection shared key for passed virtual network gateway connection in the specified resource group through Network resource provider.
     * @param resourceGroupName The name of the resource group. (required)
     * @param virtualNetworkGatewayConnectionName The virtual network gateway connection reset shared key Name. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param parameters Parameters supplied to the begin reset virtual network gateway connection shared key operation through network resource provider. (required)
     * @return ApiResponse&lt;ConnectionResetSharedKey&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Request successful. The operation sets the virtual network gateway connection shared key. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Request successful. The operation sets the virtual network gateway connection shared key. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ConnectionResetSharedKey> virtualNetworkGatewayConnectionsResetSharedKeyWithHttpInfo(String resourceGroupName, String virtualNetworkGatewayConnectionName, String apiVersion, String subscriptionId, ConnectionResetSharedKey parameters) throws ApiException {
        okhttp3.Call localVarCall = virtualNetworkGatewayConnectionsResetSharedKeyValidateBeforeCall(resourceGroupName, virtualNetworkGatewayConnectionName, apiVersion, subscriptionId, parameters, null);
        Type localVarReturnType = new TypeToken<ConnectionResetSharedKey>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * The VirtualNetworkGatewayConnectionResetSharedKey operation resets the virtual network gateway connection shared key for passed virtual network gateway connection in the specified resource group through Network resource provider.
     * @param resourceGroupName The name of the resource group. (required)
     * @param virtualNetworkGatewayConnectionName The virtual network gateway connection reset shared key Name. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param parameters Parameters supplied to the begin reset virtual network gateway connection shared key operation through network resource provider. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Request successful. The operation sets the virtual network gateway connection shared key. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Request successful. The operation sets the virtual network gateway connection shared key. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualNetworkGatewayConnectionsResetSharedKeyAsync(String resourceGroupName, String virtualNetworkGatewayConnectionName, String apiVersion, String subscriptionId, ConnectionResetSharedKey parameters, final ApiCallback<ConnectionResetSharedKey> _callback) throws ApiException {

        okhttp3.Call localVarCall = virtualNetworkGatewayConnectionsResetSharedKeyValidateBeforeCall(resourceGroupName, virtualNetworkGatewayConnectionName, apiVersion, subscriptionId, parameters, _callback);
        Type localVarReturnType = new TypeToken<ConnectionResetSharedKey>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for virtualNetworkGatewayConnectionsSetSharedKey
     * @param resourceGroupName The name of the resource group. (required)
     * @param virtualNetworkGatewayConnectionName The virtual network gateway connection name. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param parameters Parameters supplied to the Begin Set Virtual Network Gateway connection Shared key operation throughNetwork resource provider. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Request successful. The operation returns the resulting ConnectionSharedKey resource. </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Request successful. The operation returns the resulting ConnectionSharedKey resource. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualNetworkGatewayConnectionsSetSharedKeyCall(String resourceGroupName, String virtualNetworkGatewayConnectionName, String apiVersion, String subscriptionId, ConnectionSharedKey parameters, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = parameters;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}/sharedkey"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "virtualNetworkGatewayConnectionName" + "}", localVarApiClient.escapeString(virtualNetworkGatewayConnectionName.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call virtualNetworkGatewayConnectionsSetSharedKeyValidateBeforeCall(String resourceGroupName, String virtualNetworkGatewayConnectionName, String apiVersion, String subscriptionId, ConnectionSharedKey parameters, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling virtualNetworkGatewayConnectionsSetSharedKey(Async)");
        }

        // verify the required parameter 'virtualNetworkGatewayConnectionName' is set
        if (virtualNetworkGatewayConnectionName == null) {
            throw new ApiException("Missing the required parameter 'virtualNetworkGatewayConnectionName' when calling virtualNetworkGatewayConnectionsSetSharedKey(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling virtualNetworkGatewayConnectionsSetSharedKey(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling virtualNetworkGatewayConnectionsSetSharedKey(Async)");
        }

        // verify the required parameter 'parameters' is set
        if (parameters == null) {
            throw new ApiException("Missing the required parameter 'parameters' when calling virtualNetworkGatewayConnectionsSetSharedKey(Async)");
        }

        return virtualNetworkGatewayConnectionsSetSharedKeyCall(resourceGroupName, virtualNetworkGatewayConnectionName, apiVersion, subscriptionId, parameters, _callback);

    }

    /**
     * 
     * The Put VirtualNetworkGatewayConnectionSharedKey operation sets the virtual network gateway connection shared key for passed virtual network gateway connection in the specified resource group through Network resource provider.
     * @param resourceGroupName The name of the resource group. (required)
     * @param virtualNetworkGatewayConnectionName The virtual network gateway connection name. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param parameters Parameters supplied to the Begin Set Virtual Network Gateway connection Shared key operation throughNetwork resource provider. (required)
     * @return ConnectionSharedKey
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Request successful. The operation returns the resulting ConnectionSharedKey resource. </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Request successful. The operation returns the resulting ConnectionSharedKey resource. </td><td>  -  </td></tr>
     </table>
     */
    public ConnectionSharedKey virtualNetworkGatewayConnectionsSetSharedKey(String resourceGroupName, String virtualNetworkGatewayConnectionName, String apiVersion, String subscriptionId, ConnectionSharedKey parameters) throws ApiException {
        ApiResponse<ConnectionSharedKey> localVarResp = virtualNetworkGatewayConnectionsSetSharedKeyWithHttpInfo(resourceGroupName, virtualNetworkGatewayConnectionName, apiVersion, subscriptionId, parameters);
        return localVarResp.getData();
    }

    /**
     * 
     * The Put VirtualNetworkGatewayConnectionSharedKey operation sets the virtual network gateway connection shared key for passed virtual network gateway connection in the specified resource group through Network resource provider.
     * @param resourceGroupName The name of the resource group. (required)
     * @param virtualNetworkGatewayConnectionName The virtual network gateway connection name. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param parameters Parameters supplied to the Begin Set Virtual Network Gateway connection Shared key operation throughNetwork resource provider. (required)
     * @return ApiResponse&lt;ConnectionSharedKey&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Request successful. The operation returns the resulting ConnectionSharedKey resource. </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Request successful. The operation returns the resulting ConnectionSharedKey resource. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ConnectionSharedKey> virtualNetworkGatewayConnectionsSetSharedKeyWithHttpInfo(String resourceGroupName, String virtualNetworkGatewayConnectionName, String apiVersion, String subscriptionId, ConnectionSharedKey parameters) throws ApiException {
        okhttp3.Call localVarCall = virtualNetworkGatewayConnectionsSetSharedKeyValidateBeforeCall(resourceGroupName, virtualNetworkGatewayConnectionName, apiVersion, subscriptionId, parameters, null);
        Type localVarReturnType = new TypeToken<ConnectionSharedKey>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * The Put VirtualNetworkGatewayConnectionSharedKey operation sets the virtual network gateway connection shared key for passed virtual network gateway connection in the specified resource group through Network resource provider.
     * @param resourceGroupName The name of the resource group. (required)
     * @param virtualNetworkGatewayConnectionName The virtual network gateway connection name. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param parameters Parameters supplied to the Begin Set Virtual Network Gateway connection Shared key operation throughNetwork resource provider. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Request successful. The operation returns the resulting ConnectionSharedKey resource. </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Request successful. The operation returns the resulting ConnectionSharedKey resource. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualNetworkGatewayConnectionsSetSharedKeyAsync(String resourceGroupName, String virtualNetworkGatewayConnectionName, String apiVersion, String subscriptionId, ConnectionSharedKey parameters, final ApiCallback<ConnectionSharedKey> _callback) throws ApiException {

        okhttp3.Call localVarCall = virtualNetworkGatewayConnectionsSetSharedKeyValidateBeforeCall(resourceGroupName, virtualNetworkGatewayConnectionName, apiVersion, subscriptionId, parameters, _callback);
        Type localVarReturnType = new TypeToken<ConnectionSharedKey>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for virtualNetworkGatewayConnectionsStartPacketCapture
     * @param resourceGroupName The name of the resource group. (required)
     * @param virtualNetworkGatewayConnectionName The name of the virtual network gateway connection. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param parameters Virtual network gateway packet capture parameters supplied to start packet capture on gateway connection. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Request successful. The operation packet capture started on virtual network gateway connection. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted and the operation will complete asynchronously. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualNetworkGatewayConnectionsStartPacketCaptureCall(String resourceGroupName, String virtualNetworkGatewayConnectionName, String apiVersion, String subscriptionId, VpnPacketCaptureStartParameters parameters, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = parameters;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}/startPacketCapture"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "virtualNetworkGatewayConnectionName" + "}", localVarApiClient.escapeString(virtualNetworkGatewayConnectionName.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call virtualNetworkGatewayConnectionsStartPacketCaptureValidateBeforeCall(String resourceGroupName, String virtualNetworkGatewayConnectionName, String apiVersion, String subscriptionId, VpnPacketCaptureStartParameters parameters, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling virtualNetworkGatewayConnectionsStartPacketCapture(Async)");
        }

        // verify the required parameter 'virtualNetworkGatewayConnectionName' is set
        if (virtualNetworkGatewayConnectionName == null) {
            throw new ApiException("Missing the required parameter 'virtualNetworkGatewayConnectionName' when calling virtualNetworkGatewayConnectionsStartPacketCapture(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling virtualNetworkGatewayConnectionsStartPacketCapture(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling virtualNetworkGatewayConnectionsStartPacketCapture(Async)");
        }

        return virtualNetworkGatewayConnectionsStartPacketCaptureCall(resourceGroupName, virtualNetworkGatewayConnectionName, apiVersion, subscriptionId, parameters, _callback);

    }

    /**
     * 
     * Starts packet capture on virtual network gateway connection in the specified resource group.
     * @param resourceGroupName The name of the resource group. (required)
     * @param virtualNetworkGatewayConnectionName The name of the virtual network gateway connection. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param parameters Virtual network gateway packet capture parameters supplied to start packet capture on gateway connection. (optional)
     * @return String
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Request successful. The operation packet capture started on virtual network gateway connection. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted and the operation will complete asynchronously. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public String virtualNetworkGatewayConnectionsStartPacketCapture(String resourceGroupName, String virtualNetworkGatewayConnectionName, String apiVersion, String subscriptionId, VpnPacketCaptureStartParameters parameters) throws ApiException {
        ApiResponse<String> localVarResp = virtualNetworkGatewayConnectionsStartPacketCaptureWithHttpInfo(resourceGroupName, virtualNetworkGatewayConnectionName, apiVersion, subscriptionId, parameters);
        return localVarResp.getData();
    }

    /**
     * 
     * Starts packet capture on virtual network gateway connection in the specified resource group.
     * @param resourceGroupName The name of the resource group. (required)
     * @param virtualNetworkGatewayConnectionName The name of the virtual network gateway connection. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param parameters Virtual network gateway packet capture parameters supplied to start packet capture on gateway connection. (optional)
     * @return ApiResponse&lt;String&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Request successful. The operation packet capture started on virtual network gateway connection. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted and the operation will complete asynchronously. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<String> virtualNetworkGatewayConnectionsStartPacketCaptureWithHttpInfo(String resourceGroupName, String virtualNetworkGatewayConnectionName, String apiVersion, String subscriptionId, VpnPacketCaptureStartParameters parameters) throws ApiException {
        okhttp3.Call localVarCall = virtualNetworkGatewayConnectionsStartPacketCaptureValidateBeforeCall(resourceGroupName, virtualNetworkGatewayConnectionName, apiVersion, subscriptionId, parameters, null);
        Type localVarReturnType = new TypeToken<String>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Starts packet capture on virtual network gateway connection in the specified resource group.
     * @param resourceGroupName The name of the resource group. (required)
     * @param virtualNetworkGatewayConnectionName The name of the virtual network gateway connection. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param parameters Virtual network gateway packet capture parameters supplied to start packet capture on gateway connection. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Request successful. The operation packet capture started on virtual network gateway connection. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted and the operation will complete asynchronously. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualNetworkGatewayConnectionsStartPacketCaptureAsync(String resourceGroupName, String virtualNetworkGatewayConnectionName, String apiVersion, String subscriptionId, VpnPacketCaptureStartParameters parameters, final ApiCallback<String> _callback) throws ApiException {

        okhttp3.Call localVarCall = virtualNetworkGatewayConnectionsStartPacketCaptureValidateBeforeCall(resourceGroupName, virtualNetworkGatewayConnectionName, apiVersion, subscriptionId, parameters, _callback);
        Type localVarReturnType = new TypeToken<String>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for virtualNetworkGatewayConnectionsStopPacketCapture
     * @param resourceGroupName The name of the resource group. (required)
     * @param virtualNetworkGatewayConnectionName The name of the virtual network gateway Connection. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param parameters Virtual network gateway packet capture parameters supplied to stop packet capture on gateway connection. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Request successful. The operation packet capture stopped on virtual network gateway connection. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted and the operation will complete asynchronously. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualNetworkGatewayConnectionsStopPacketCaptureCall(String resourceGroupName, String virtualNetworkGatewayConnectionName, String apiVersion, String subscriptionId, VpnPacketCaptureStopParameters parameters, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = parameters;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}/stopPacketCapture"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "virtualNetworkGatewayConnectionName" + "}", localVarApiClient.escapeString(virtualNetworkGatewayConnectionName.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call virtualNetworkGatewayConnectionsStopPacketCaptureValidateBeforeCall(String resourceGroupName, String virtualNetworkGatewayConnectionName, String apiVersion, String subscriptionId, VpnPacketCaptureStopParameters parameters, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling virtualNetworkGatewayConnectionsStopPacketCapture(Async)");
        }

        // verify the required parameter 'virtualNetworkGatewayConnectionName' is set
        if (virtualNetworkGatewayConnectionName == null) {
            throw new ApiException("Missing the required parameter 'virtualNetworkGatewayConnectionName' when calling virtualNetworkGatewayConnectionsStopPacketCapture(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling virtualNetworkGatewayConnectionsStopPacketCapture(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling virtualNetworkGatewayConnectionsStopPacketCapture(Async)");
        }

        // verify the required parameter 'parameters' is set
        if (parameters == null) {
            throw new ApiException("Missing the required parameter 'parameters' when calling virtualNetworkGatewayConnectionsStopPacketCapture(Async)");
        }

        return virtualNetworkGatewayConnectionsStopPacketCaptureCall(resourceGroupName, virtualNetworkGatewayConnectionName, apiVersion, subscriptionId, parameters, _callback);

    }

    /**
     * 
     * Stops packet capture on virtual network gateway connection in the specified resource group.
     * @param resourceGroupName The name of the resource group. (required)
     * @param virtualNetworkGatewayConnectionName The name of the virtual network gateway Connection. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param parameters Virtual network gateway packet capture parameters supplied to stop packet capture on gateway connection. (required)
     * @return String
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Request successful. The operation packet capture stopped on virtual network gateway connection. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted and the operation will complete asynchronously. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public String virtualNetworkGatewayConnectionsStopPacketCapture(String resourceGroupName, String virtualNetworkGatewayConnectionName, String apiVersion, String subscriptionId, VpnPacketCaptureStopParameters parameters) throws ApiException {
        ApiResponse<String> localVarResp = virtualNetworkGatewayConnectionsStopPacketCaptureWithHttpInfo(resourceGroupName, virtualNetworkGatewayConnectionName, apiVersion, subscriptionId, parameters);
        return localVarResp.getData();
    }

    /**
     * 
     * Stops packet capture on virtual network gateway connection in the specified resource group.
     * @param resourceGroupName The name of the resource group. (required)
     * @param virtualNetworkGatewayConnectionName The name of the virtual network gateway Connection. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param parameters Virtual network gateway packet capture parameters supplied to stop packet capture on gateway connection. (required)
     * @return ApiResponse&lt;String&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Request successful. The operation packet capture stopped on virtual network gateway connection. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted and the operation will complete asynchronously. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<String> virtualNetworkGatewayConnectionsStopPacketCaptureWithHttpInfo(String resourceGroupName, String virtualNetworkGatewayConnectionName, String apiVersion, String subscriptionId, VpnPacketCaptureStopParameters parameters) throws ApiException {
        okhttp3.Call localVarCall = virtualNetworkGatewayConnectionsStopPacketCaptureValidateBeforeCall(resourceGroupName, virtualNetworkGatewayConnectionName, apiVersion, subscriptionId, parameters, null);
        Type localVarReturnType = new TypeToken<String>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Stops packet capture on virtual network gateway connection in the specified resource group.
     * @param resourceGroupName The name of the resource group. (required)
     * @param virtualNetworkGatewayConnectionName The name of the virtual network gateway Connection. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param parameters Virtual network gateway packet capture parameters supplied to stop packet capture on gateway connection. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Request successful. The operation packet capture stopped on virtual network gateway connection. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted and the operation will complete asynchronously. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualNetworkGatewayConnectionsStopPacketCaptureAsync(String resourceGroupName, String virtualNetworkGatewayConnectionName, String apiVersion, String subscriptionId, VpnPacketCaptureStopParameters parameters, final ApiCallback<String> _callback) throws ApiException {

        okhttp3.Call localVarCall = virtualNetworkGatewayConnectionsStopPacketCaptureValidateBeforeCall(resourceGroupName, virtualNetworkGatewayConnectionName, apiVersion, subscriptionId, parameters, _callback);
        Type localVarReturnType = new TypeToken<String>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for virtualNetworkGatewayConnectionsUpdateTags
     * @param resourceGroupName The name of the resource group. (required)
     * @param virtualNetworkGatewayConnectionName The name of the virtual network gateway connection. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param parameters Parameters supplied to update virtual network gateway connection tags. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Update successful. The operation returns the resulting VirtualNetworkGatewayConnection resource. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted and the operation will complete asynchronously. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualNetworkGatewayConnectionsUpdateTagsCall(String resourceGroupName, String virtualNetworkGatewayConnectionName, String apiVersion, String subscriptionId, VirtualNetworkGatewayConnectionsUpdateTagsRequest parameters, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = parameters;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "virtualNetworkGatewayConnectionName" + "}", localVarApiClient.escapeString(virtualNetworkGatewayConnectionName.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PATCH", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call virtualNetworkGatewayConnectionsUpdateTagsValidateBeforeCall(String resourceGroupName, String virtualNetworkGatewayConnectionName, String apiVersion, String subscriptionId, VirtualNetworkGatewayConnectionsUpdateTagsRequest parameters, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling virtualNetworkGatewayConnectionsUpdateTags(Async)");
        }

        // verify the required parameter 'virtualNetworkGatewayConnectionName' is set
        if (virtualNetworkGatewayConnectionName == null) {
            throw new ApiException("Missing the required parameter 'virtualNetworkGatewayConnectionName' when calling virtualNetworkGatewayConnectionsUpdateTags(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling virtualNetworkGatewayConnectionsUpdateTags(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling virtualNetworkGatewayConnectionsUpdateTags(Async)");
        }

        // verify the required parameter 'parameters' is set
        if (parameters == null) {
            throw new ApiException("Missing the required parameter 'parameters' when calling virtualNetworkGatewayConnectionsUpdateTags(Async)");
        }

        return virtualNetworkGatewayConnectionsUpdateTagsCall(resourceGroupName, virtualNetworkGatewayConnectionName, apiVersion, subscriptionId, parameters, _callback);

    }

    /**
     * 
     * Updates a virtual network gateway connection tags.
     * @param resourceGroupName The name of the resource group. (required)
     * @param virtualNetworkGatewayConnectionName The name of the virtual network gateway connection. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param parameters Parameters supplied to update virtual network gateway connection tags. (required)
     * @return VirtualNetworkGatewayConnection
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Update successful. The operation returns the resulting VirtualNetworkGatewayConnection resource. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted and the operation will complete asynchronously. </td><td>  -  </td></tr>
     </table>
     */
    public VirtualNetworkGatewayConnection virtualNetworkGatewayConnectionsUpdateTags(String resourceGroupName, String virtualNetworkGatewayConnectionName, String apiVersion, String subscriptionId, VirtualNetworkGatewayConnectionsUpdateTagsRequest parameters) throws ApiException {
        ApiResponse<VirtualNetworkGatewayConnection> localVarResp = virtualNetworkGatewayConnectionsUpdateTagsWithHttpInfo(resourceGroupName, virtualNetworkGatewayConnectionName, apiVersion, subscriptionId, parameters);
        return localVarResp.getData();
    }

    /**
     * 
     * Updates a virtual network gateway connection tags.
     * @param resourceGroupName The name of the resource group. (required)
     * @param virtualNetworkGatewayConnectionName The name of the virtual network gateway connection. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param parameters Parameters supplied to update virtual network gateway connection tags. (required)
     * @return ApiResponse&lt;VirtualNetworkGatewayConnection&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Update successful. The operation returns the resulting VirtualNetworkGatewayConnection resource. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted and the operation will complete asynchronously. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<VirtualNetworkGatewayConnection> virtualNetworkGatewayConnectionsUpdateTagsWithHttpInfo(String resourceGroupName, String virtualNetworkGatewayConnectionName, String apiVersion, String subscriptionId, VirtualNetworkGatewayConnectionsUpdateTagsRequest parameters) throws ApiException {
        okhttp3.Call localVarCall = virtualNetworkGatewayConnectionsUpdateTagsValidateBeforeCall(resourceGroupName, virtualNetworkGatewayConnectionName, apiVersion, subscriptionId, parameters, null);
        Type localVarReturnType = new TypeToken<VirtualNetworkGatewayConnection>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Updates a virtual network gateway connection tags.
     * @param resourceGroupName The name of the resource group. (required)
     * @param virtualNetworkGatewayConnectionName The name of the virtual network gateway connection. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param parameters Parameters supplied to update virtual network gateway connection tags. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Update successful. The operation returns the resulting VirtualNetworkGatewayConnection resource. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted and the operation will complete asynchronously. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualNetworkGatewayConnectionsUpdateTagsAsync(String resourceGroupName, String virtualNetworkGatewayConnectionName, String apiVersion, String subscriptionId, VirtualNetworkGatewayConnectionsUpdateTagsRequest parameters, final ApiCallback<VirtualNetworkGatewayConnection> _callback) throws ApiException {

        okhttp3.Call localVarCall = virtualNetworkGatewayConnectionsUpdateTagsValidateBeforeCall(resourceGroupName, virtualNetworkGatewayConnectionName, apiVersion, subscriptionId, parameters, _callback);
        Type localVarReturnType = new TypeToken<VirtualNetworkGatewayConnection>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
