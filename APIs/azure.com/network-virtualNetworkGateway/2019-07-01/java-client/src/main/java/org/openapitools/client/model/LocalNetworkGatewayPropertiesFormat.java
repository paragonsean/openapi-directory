/*
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-07-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.BgpSettings;
import org.openapitools.client.model.LocalNetworkGatewayPropertiesFormatLocalNetworkAddressSpace;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * LocalNetworkGateway properties.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:43:36.413229-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class LocalNetworkGatewayPropertiesFormat {
  public static final String SERIALIZED_NAME_BGP_SETTINGS = "bgpSettings";
  @SerializedName(SERIALIZED_NAME_BGP_SETTINGS)
  private BgpSettings bgpSettings;

  public static final String SERIALIZED_NAME_GATEWAY_IP_ADDRESS = "gatewayIpAddress";
  @SerializedName(SERIALIZED_NAME_GATEWAY_IP_ADDRESS)
  private String gatewayIpAddress;

  public static final String SERIALIZED_NAME_LOCAL_NETWORK_ADDRESS_SPACE = "localNetworkAddressSpace";
  @SerializedName(SERIALIZED_NAME_LOCAL_NETWORK_ADDRESS_SPACE)
  private LocalNetworkGatewayPropertiesFormatLocalNetworkAddressSpace localNetworkAddressSpace;

  /**
   * The current provisioning state.
   */
  @JsonAdapter(ProvisioningStateEnum.Adapter.class)
  public enum ProvisioningStateEnum {
    SUCCEEDED("Succeeded"),
    
    UPDATING("Updating"),
    
    DELETING("Deleting"),
    
    FAILED("Failed");

    private String value;

    ProvisioningStateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ProvisioningStateEnum fromValue(String value) {
      for (ProvisioningStateEnum b : ProvisioningStateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ProvisioningStateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ProvisioningStateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ProvisioningStateEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ProvisioningStateEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      ProvisioningStateEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_PROVISIONING_STATE = "provisioningState";
  @SerializedName(SERIALIZED_NAME_PROVISIONING_STATE)
  private ProvisioningStateEnum provisioningState;

  public static final String SERIALIZED_NAME_RESOURCE_GUID = "resourceGuid";
  @SerializedName(SERIALIZED_NAME_RESOURCE_GUID)
  private String resourceGuid;

  public LocalNetworkGatewayPropertiesFormat() {
  }

  public LocalNetworkGatewayPropertiesFormat(
     ProvisioningStateEnum provisioningState
  ) {
    this();
    this.provisioningState = provisioningState;
  }

  public LocalNetworkGatewayPropertiesFormat bgpSettings(BgpSettings bgpSettings) {
    this.bgpSettings = bgpSettings;
    return this;
  }

  /**
   * Get bgpSettings
   * @return bgpSettings
   */
  @javax.annotation.Nullable
  public BgpSettings getBgpSettings() {
    return bgpSettings;
  }

  public void setBgpSettings(BgpSettings bgpSettings) {
    this.bgpSettings = bgpSettings;
  }


  public LocalNetworkGatewayPropertiesFormat gatewayIpAddress(String gatewayIpAddress) {
    this.gatewayIpAddress = gatewayIpAddress;
    return this;
  }

  /**
   * IP address of local network gateway.
   * @return gatewayIpAddress
   */
  @javax.annotation.Nullable
  public String getGatewayIpAddress() {
    return gatewayIpAddress;
  }

  public void setGatewayIpAddress(String gatewayIpAddress) {
    this.gatewayIpAddress = gatewayIpAddress;
  }


  public LocalNetworkGatewayPropertiesFormat localNetworkAddressSpace(LocalNetworkGatewayPropertiesFormatLocalNetworkAddressSpace localNetworkAddressSpace) {
    this.localNetworkAddressSpace = localNetworkAddressSpace;
    return this;
  }

  /**
   * Get localNetworkAddressSpace
   * @return localNetworkAddressSpace
   */
  @javax.annotation.Nullable
  public LocalNetworkGatewayPropertiesFormatLocalNetworkAddressSpace getLocalNetworkAddressSpace() {
    return localNetworkAddressSpace;
  }

  public void setLocalNetworkAddressSpace(LocalNetworkGatewayPropertiesFormatLocalNetworkAddressSpace localNetworkAddressSpace) {
    this.localNetworkAddressSpace = localNetworkAddressSpace;
  }


  /**
   * The current provisioning state.
   * @return provisioningState
   */
  @javax.annotation.Nullable
  public ProvisioningStateEnum getProvisioningState() {
    return provisioningState;
  }



  public LocalNetworkGatewayPropertiesFormat resourceGuid(String resourceGuid) {
    this.resourceGuid = resourceGuid;
    return this;
  }

  /**
   * The resource GUID property of the local network gateway resource.
   * @return resourceGuid
   */
  @javax.annotation.Nullable
  public String getResourceGuid() {
    return resourceGuid;
  }

  public void setResourceGuid(String resourceGuid) {
    this.resourceGuid = resourceGuid;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LocalNetworkGatewayPropertiesFormat localNetworkGatewayPropertiesFormat = (LocalNetworkGatewayPropertiesFormat) o;
    return Objects.equals(this.bgpSettings, localNetworkGatewayPropertiesFormat.bgpSettings) &&
        Objects.equals(this.gatewayIpAddress, localNetworkGatewayPropertiesFormat.gatewayIpAddress) &&
        Objects.equals(this.localNetworkAddressSpace, localNetworkGatewayPropertiesFormat.localNetworkAddressSpace) &&
        Objects.equals(this.provisioningState, localNetworkGatewayPropertiesFormat.provisioningState) &&
        Objects.equals(this.resourceGuid, localNetworkGatewayPropertiesFormat.resourceGuid);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bgpSettings, gatewayIpAddress, localNetworkAddressSpace, provisioningState, resourceGuid);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LocalNetworkGatewayPropertiesFormat {\n");
    sb.append("    bgpSettings: ").append(toIndentedString(bgpSettings)).append("\n");
    sb.append("    gatewayIpAddress: ").append(toIndentedString(gatewayIpAddress)).append("\n");
    sb.append("    localNetworkAddressSpace: ").append(toIndentedString(localNetworkAddressSpace)).append("\n");
    sb.append("    provisioningState: ").append(toIndentedString(provisioningState)).append("\n");
    sb.append("    resourceGuid: ").append(toIndentedString(resourceGuid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("bgpSettings");
    openapiFields.add("gatewayIpAddress");
    openapiFields.add("localNetworkAddressSpace");
    openapiFields.add("provisioningState");
    openapiFields.add("resourceGuid");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to LocalNetworkGatewayPropertiesFormat
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!LocalNetworkGatewayPropertiesFormat.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in LocalNetworkGatewayPropertiesFormat is not found in the empty JSON string", LocalNetworkGatewayPropertiesFormat.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!LocalNetworkGatewayPropertiesFormat.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `LocalNetworkGatewayPropertiesFormat` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `bgpSettings`
      if (jsonObj.get("bgpSettings") != null && !jsonObj.get("bgpSettings").isJsonNull()) {
        BgpSettings.validateJsonElement(jsonObj.get("bgpSettings"));
      }
      if ((jsonObj.get("gatewayIpAddress") != null && !jsonObj.get("gatewayIpAddress").isJsonNull()) && !jsonObj.get("gatewayIpAddress").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gatewayIpAddress` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gatewayIpAddress").toString()));
      }
      // validate the optional field `localNetworkAddressSpace`
      if (jsonObj.get("localNetworkAddressSpace") != null && !jsonObj.get("localNetworkAddressSpace").isJsonNull()) {
        LocalNetworkGatewayPropertiesFormatLocalNetworkAddressSpace.validateJsonElement(jsonObj.get("localNetworkAddressSpace"));
      }
      if ((jsonObj.get("provisioningState") != null && !jsonObj.get("provisioningState").isJsonNull()) && !jsonObj.get("provisioningState").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `provisioningState` to be a primitive type in the JSON string but got `%s`", jsonObj.get("provisioningState").toString()));
      }
      // validate the optional field `provisioningState`
      if (jsonObj.get("provisioningState") != null && !jsonObj.get("provisioningState").isJsonNull()) {
        ProvisioningStateEnum.validateJsonElement(jsonObj.get("provisioningState"));
      }
      if ((jsonObj.get("resourceGuid") != null && !jsonObj.get("resourceGuid").isJsonNull()) && !jsonObj.get("resourceGuid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `resourceGuid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("resourceGuid").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!LocalNetworkGatewayPropertiesFormat.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'LocalNetworkGatewayPropertiesFormat' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<LocalNetworkGatewayPropertiesFormat> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(LocalNetworkGatewayPropertiesFormat.class));

       return (TypeAdapter<T>) new TypeAdapter<LocalNetworkGatewayPropertiesFormat>() {
           @Override
           public void write(JsonWriter out, LocalNetworkGatewayPropertiesFormat value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public LocalNetworkGatewayPropertiesFormat read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of LocalNetworkGatewayPropertiesFormat given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of LocalNetworkGatewayPropertiesFormat
   * @throws IOException if the JSON string is invalid with respect to LocalNetworkGatewayPropertiesFormat
   */
  public static LocalNetworkGatewayPropertiesFormat fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, LocalNetworkGatewayPropertiesFormat.class);
  }

  /**
   * Convert an instance of LocalNetworkGatewayPropertiesFormat to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

