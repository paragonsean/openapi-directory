/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-07-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITrafficSelectorPolicy.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITrafficSelectorPolicy::OAITrafficSelectorPolicy(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITrafficSelectorPolicy::OAITrafficSelectorPolicy() {
    this->initializeModel();
}

OAITrafficSelectorPolicy::~OAITrafficSelectorPolicy() {}

void OAITrafficSelectorPolicy::initializeModel() {

    m_local_address_ranges_isSet = false;
    m_local_address_ranges_isValid = false;

    m_remote_address_ranges_isSet = false;
    m_remote_address_ranges_isValid = false;
}

void OAITrafficSelectorPolicy::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITrafficSelectorPolicy::fromJsonObject(QJsonObject json) {

    m_local_address_ranges_isValid = ::OpenAPI::fromJsonValue(m_local_address_ranges, json[QString("localAddressRanges")]);
    m_local_address_ranges_isSet = !json[QString("localAddressRanges")].isNull() && m_local_address_ranges_isValid;

    m_remote_address_ranges_isValid = ::OpenAPI::fromJsonValue(m_remote_address_ranges, json[QString("remoteAddressRanges")]);
    m_remote_address_ranges_isSet = !json[QString("remoteAddressRanges")].isNull() && m_remote_address_ranges_isValid;
}

QString OAITrafficSelectorPolicy::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITrafficSelectorPolicy::asJsonObject() const {
    QJsonObject obj;
    if (m_local_address_ranges.size() > 0) {
        obj.insert(QString("localAddressRanges"), ::OpenAPI::toJsonValue(m_local_address_ranges));
    }
    if (m_remote_address_ranges.size() > 0) {
        obj.insert(QString("remoteAddressRanges"), ::OpenAPI::toJsonValue(m_remote_address_ranges));
    }
    return obj;
}

QList<QString> OAITrafficSelectorPolicy::getLocalAddressRanges() const {
    return m_local_address_ranges;
}
void OAITrafficSelectorPolicy::setLocalAddressRanges(const QList<QString> &local_address_ranges) {
    m_local_address_ranges = local_address_ranges;
    m_local_address_ranges_isSet = true;
}

bool OAITrafficSelectorPolicy::is_local_address_ranges_Set() const{
    return m_local_address_ranges_isSet;
}

bool OAITrafficSelectorPolicy::is_local_address_ranges_Valid() const{
    return m_local_address_ranges_isValid;
}

QList<QString> OAITrafficSelectorPolicy::getRemoteAddressRanges() const {
    return m_remote_address_ranges;
}
void OAITrafficSelectorPolicy::setRemoteAddressRanges(const QList<QString> &remote_address_ranges) {
    m_remote_address_ranges = remote_address_ranges;
    m_remote_address_ranges_isSet = true;
}

bool OAITrafficSelectorPolicy::is_remote_address_ranges_Set() const{
    return m_remote_address_ranges_isSet;
}

bool OAITrafficSelectorPolicy::is_remote_address_ranges_Valid() const{
    return m_remote_address_ranges_isValid;
}

bool OAITrafficSelectorPolicy::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_local_address_ranges.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_remote_address_ranges.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITrafficSelectorPolicy::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_local_address_ranges_isValid && m_remote_address_ranges_isValid && true;
}

} // namespace OpenAPI
