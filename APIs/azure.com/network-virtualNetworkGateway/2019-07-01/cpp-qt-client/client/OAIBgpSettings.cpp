/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-07-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBgpSettings.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBgpSettings::OAIBgpSettings(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBgpSettings::OAIBgpSettings() {
    this->initializeModel();
}

OAIBgpSettings::~OAIBgpSettings() {}

void OAIBgpSettings::initializeModel() {

    m_asn_isSet = false;
    m_asn_isValid = false;

    m_bgp_peering_address_isSet = false;
    m_bgp_peering_address_isValid = false;

    m_peer_weight_isSet = false;
    m_peer_weight_isValid = false;
}

void OAIBgpSettings::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBgpSettings::fromJsonObject(QJsonObject json) {

    m_asn_isValid = ::OpenAPI::fromJsonValue(m_asn, json[QString("asn")]);
    m_asn_isSet = !json[QString("asn")].isNull() && m_asn_isValid;

    m_bgp_peering_address_isValid = ::OpenAPI::fromJsonValue(m_bgp_peering_address, json[QString("bgpPeeringAddress")]);
    m_bgp_peering_address_isSet = !json[QString("bgpPeeringAddress")].isNull() && m_bgp_peering_address_isValid;

    m_peer_weight_isValid = ::OpenAPI::fromJsonValue(m_peer_weight, json[QString("peerWeight")]);
    m_peer_weight_isSet = !json[QString("peerWeight")].isNull() && m_peer_weight_isValid;
}

QString OAIBgpSettings::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBgpSettings::asJsonObject() const {
    QJsonObject obj;
    if (m_asn_isSet) {
        obj.insert(QString("asn"), ::OpenAPI::toJsonValue(m_asn));
    }
    if (m_bgp_peering_address_isSet) {
        obj.insert(QString("bgpPeeringAddress"), ::OpenAPI::toJsonValue(m_bgp_peering_address));
    }
    if (m_peer_weight_isSet) {
        obj.insert(QString("peerWeight"), ::OpenAPI::toJsonValue(m_peer_weight));
    }
    return obj;
}

qint64 OAIBgpSettings::getAsn() const {
    return m_asn;
}
void OAIBgpSettings::setAsn(const qint64 &asn) {
    m_asn = asn;
    m_asn_isSet = true;
}

bool OAIBgpSettings::is_asn_Set() const{
    return m_asn_isSet;
}

bool OAIBgpSettings::is_asn_Valid() const{
    return m_asn_isValid;
}

QString OAIBgpSettings::getBgpPeeringAddress() const {
    return m_bgp_peering_address;
}
void OAIBgpSettings::setBgpPeeringAddress(const QString &bgp_peering_address) {
    m_bgp_peering_address = bgp_peering_address;
    m_bgp_peering_address_isSet = true;
}

bool OAIBgpSettings::is_bgp_peering_address_Set() const{
    return m_bgp_peering_address_isSet;
}

bool OAIBgpSettings::is_bgp_peering_address_Valid() const{
    return m_bgp_peering_address_isValid;
}

qint32 OAIBgpSettings::getPeerWeight() const {
    return m_peer_weight;
}
void OAIBgpSettings::setPeerWeight(const qint32 &peer_weight) {
    m_peer_weight = peer_weight;
    m_peer_weight_isSet = true;
}

bool OAIBgpSettings::is_peer_weight_Set() const{
    return m_peer_weight_isSet;
}

bool OAIBgpSettings::is_peer_weight_Valid() const{
    return m_peer_weight_isValid;
}

bool OAIBgpSettings::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_asn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bgp_peering_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_peer_weight_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBgpSettings::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
