/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-07-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVpnClientIPsecParameters.h
 *
 * An IPSec parameters for a virtual network gateway P2S connection.
 */

#ifndef OAIVpnClientIPsecParameters_H
#define OAIVpnClientIPsecParameters_H

#include <QJsonObject>

#include "OAIDhGroup.h"
#include "OAIIkeEncryption.h"
#include "OAIIkeIntegrity.h"
#include "OAIIpsecEncryption.h"
#include "OAIIpsecIntegrity.h"
#include "OAIPfsGroup.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIVpnClientIPsecParameters : public OAIObject {
public:
    OAIVpnClientIPsecParameters();
    OAIVpnClientIPsecParameters(QString json);
    ~OAIVpnClientIPsecParameters() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIDhGroup getDhGroup() const;
    void setDhGroup(const OAIDhGroup &dh_group);
    bool is_dh_group_Set() const;
    bool is_dh_group_Valid() const;

    OAIIkeEncryption getIkeEncryption() const;
    void setIkeEncryption(const OAIIkeEncryption &ike_encryption);
    bool is_ike_encryption_Set() const;
    bool is_ike_encryption_Valid() const;

    OAIIkeIntegrity getIkeIntegrity() const;
    void setIkeIntegrity(const OAIIkeIntegrity &ike_integrity);
    bool is_ike_integrity_Set() const;
    bool is_ike_integrity_Valid() const;

    OAIIpsecEncryption getIpsecEncryption() const;
    void setIpsecEncryption(const OAIIpsecEncryption &ipsec_encryption);
    bool is_ipsec_encryption_Set() const;
    bool is_ipsec_encryption_Valid() const;

    OAIIpsecIntegrity getIpsecIntegrity() const;
    void setIpsecIntegrity(const OAIIpsecIntegrity &ipsec_integrity);
    bool is_ipsec_integrity_Set() const;
    bool is_ipsec_integrity_Valid() const;

    OAIPfsGroup getPfsGroup() const;
    void setPfsGroup(const OAIPfsGroup &pfs_group);
    bool is_pfs_group_Set() const;
    bool is_pfs_group_Valid() const;

    qint32 getSaDataSizeKilobytes() const;
    void setSaDataSizeKilobytes(const qint32 &sa_data_size_kilobytes);
    bool is_sa_data_size_kilobytes_Set() const;
    bool is_sa_data_size_kilobytes_Valid() const;

    qint32 getSaLifeTimeSeconds() const;
    void setSaLifeTimeSeconds(const qint32 &sa_life_time_seconds);
    bool is_sa_life_time_seconds_Set() const;
    bool is_sa_life_time_seconds_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIDhGroup m_dh_group;
    bool m_dh_group_isSet;
    bool m_dh_group_isValid;

    OAIIkeEncryption m_ike_encryption;
    bool m_ike_encryption_isSet;
    bool m_ike_encryption_isValid;

    OAIIkeIntegrity m_ike_integrity;
    bool m_ike_integrity_isSet;
    bool m_ike_integrity_isValid;

    OAIIpsecEncryption m_ipsec_encryption;
    bool m_ipsec_encryption_isSet;
    bool m_ipsec_encryption_isValid;

    OAIIpsecIntegrity m_ipsec_integrity;
    bool m_ipsec_integrity_isSet;
    bool m_ipsec_integrity_isValid;

    OAIPfsGroup m_pfs_group;
    bool m_pfs_group_isSet;
    bool m_pfs_group_isValid;

    qint32 m_sa_data_size_kilobytes;
    bool m_sa_data_size_kilobytes_isSet;
    bool m_sa_data_size_kilobytes_isValid;

    qint32 m_sa_life_time_seconds;
    bool m_sa_life_time_seconds_isSet;
    bool m_sa_life_time_seconds_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVpnClientIPsecParameters)

#endif // OAIVpnClientIPsecParameters_H
