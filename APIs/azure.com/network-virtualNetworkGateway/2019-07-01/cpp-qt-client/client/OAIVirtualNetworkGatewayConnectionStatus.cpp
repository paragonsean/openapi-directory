/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-07-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIVirtualNetworkGatewayConnectionStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIVirtualNetworkGatewayConnectionStatus::OAIVirtualNetworkGatewayConnectionStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIVirtualNetworkGatewayConnectionStatus::OAIVirtualNetworkGatewayConnectionStatus() {
    this->initializeModel();
}

OAIVirtualNetworkGatewayConnectionStatus::~OAIVirtualNetworkGatewayConnectionStatus() {}

void OAIVirtualNetworkGatewayConnectionStatus::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIVirtualNetworkGatewayConnectionStatus::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIVirtualNetworkGatewayConnectionStatus::fromJson(QString jsonString) {
    
    if ( jsonString.compare("Unknown", Qt::CaseInsensitive) == 0) {
        m_value = eOAIVirtualNetworkGatewayConnectionStatus::UNKNOWN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Connecting", Qt::CaseInsensitive) == 0) {
        m_value = eOAIVirtualNetworkGatewayConnectionStatus::CONNECTING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Connected", Qt::CaseInsensitive) == 0) {
        m_value = eOAIVirtualNetworkGatewayConnectionStatus::CONNECTED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("NotConnected", Qt::CaseInsensitive) == 0) {
        m_value = eOAIVirtualNetworkGatewayConnectionStatus::NOTCONNECTED;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIVirtualNetworkGatewayConnectionStatus::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIVirtualNetworkGatewayConnectionStatus::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIVirtualNetworkGatewayConnectionStatus::UNKNOWN:
            val = "Unknown";
            break;
        case eOAIVirtualNetworkGatewayConnectionStatus::CONNECTING:
            val = "Connecting";
            break;
        case eOAIVirtualNetworkGatewayConnectionStatus::CONNECTED:
            val = "Connected";
            break;
        case eOAIVirtualNetworkGatewayConnectionStatus::NOTCONNECTED:
            val = "NotConnected";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIVirtualNetworkGatewayConnectionStatus::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIVirtualNetworkGatewayConnectionStatus::eOAIVirtualNetworkGatewayConnectionStatus OAIVirtualNetworkGatewayConnectionStatus::getValue() const {
    return m_value;
}

void OAIVirtualNetworkGatewayConnectionStatus::setValue(const OAIVirtualNetworkGatewayConnectionStatus::eOAIVirtualNetworkGatewayConnectionStatus& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIVirtualNetworkGatewayConnectionStatus::isSet() const {
    
    return m_value_isSet;
}

bool OAIVirtualNetworkGatewayConnectionStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
