/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-07-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIVpnPacketCaptureStopParameters.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIVpnPacketCaptureStopParameters::OAIVpnPacketCaptureStopParameters(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIVpnPacketCaptureStopParameters::OAIVpnPacketCaptureStopParameters() {
    this->initializeModel();
}

OAIVpnPacketCaptureStopParameters::~OAIVpnPacketCaptureStopParameters() {}

void OAIVpnPacketCaptureStopParameters::initializeModel() {

    m_sas_url_isSet = false;
    m_sas_url_isValid = false;
}

void OAIVpnPacketCaptureStopParameters::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIVpnPacketCaptureStopParameters::fromJsonObject(QJsonObject json) {

    m_sas_url_isValid = ::OpenAPI::fromJsonValue(m_sas_url, json[QString("sasUrl")]);
    m_sas_url_isSet = !json[QString("sasUrl")].isNull() && m_sas_url_isValid;
}

QString OAIVpnPacketCaptureStopParameters::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIVpnPacketCaptureStopParameters::asJsonObject() const {
    QJsonObject obj;
    if (m_sas_url_isSet) {
        obj.insert(QString("sasUrl"), ::OpenAPI::toJsonValue(m_sas_url));
    }
    return obj;
}

QString OAIVpnPacketCaptureStopParameters::getSasUrl() const {
    return m_sas_url;
}
void OAIVpnPacketCaptureStopParameters::setSasUrl(const QString &sas_url) {
    m_sas_url = sas_url;
    m_sas_url_isSet = true;
}

bool OAIVpnPacketCaptureStopParameters::is_sas_url_Set() const{
    return m_sas_url_isSet;
}

bool OAIVpnPacketCaptureStopParameters::is_sas_url_Valid() const{
    return m_sas_url_isValid;
}

bool OAIVpnPacketCaptureStopParameters::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_sas_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIVpnPacketCaptureStopParameters::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
