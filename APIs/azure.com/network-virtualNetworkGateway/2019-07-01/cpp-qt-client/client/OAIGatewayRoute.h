/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-07-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGatewayRoute.h
 *
 * Gateway routing details.
 */

#ifndef OAIGatewayRoute_H
#define OAIGatewayRoute_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGatewayRoute : public OAIObject {
public:
    OAIGatewayRoute();
    OAIGatewayRoute(QString json);
    ~OAIGatewayRoute() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAsPath() const;
    void setAsPath(const QString &as_path);
    bool is_as_path_Set() const;
    bool is_as_path_Valid() const;

    QString getLocalAddress() const;
    void setLocalAddress(const QString &local_address);
    bool is_local_address_Set() const;
    bool is_local_address_Valid() const;

    QString getNetwork() const;
    void setNetwork(const QString &network);
    bool is_network_Set() const;
    bool is_network_Valid() const;

    QString getNextHop() const;
    void setNextHop(const QString &next_hop);
    bool is_next_hop_Set() const;
    bool is_next_hop_Valid() const;

    QString getOrigin() const;
    void setOrigin(const QString &origin);
    bool is_origin_Set() const;
    bool is_origin_Valid() const;

    QString getSourcePeer() const;
    void setSourcePeer(const QString &source_peer);
    bool is_source_peer_Set() const;
    bool is_source_peer_Valid() const;

    qint32 getWeight() const;
    void setWeight(const qint32 &weight);
    bool is_weight_Set() const;
    bool is_weight_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_as_path;
    bool m_as_path_isSet;
    bool m_as_path_isValid;

    QString m_local_address;
    bool m_local_address_isSet;
    bool m_local_address_isValid;

    QString m_network;
    bool m_network_isSet;
    bool m_network_isValid;

    QString m_next_hop;
    bool m_next_hop_isSet;
    bool m_next_hop_isValid;

    QString m_origin;
    bool m_origin_isSet;
    bool m_origin_isValid;

    QString m_source_peer;
    bool m_source_peer_isSet;
    bool m_source_peer_isValid;

    qint32 m_weight;
    bool m_weight_isSet;
    bool m_weight_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGatewayRoute)

#endif // OAIGatewayRoute_H
