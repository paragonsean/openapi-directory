/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-07-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDhGroup.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDhGroup::OAIDhGroup(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDhGroup::OAIDhGroup() {
    this->initializeModel();
}

OAIDhGroup::~OAIDhGroup() {}

void OAIDhGroup::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIDhGroup::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIDhGroup::fromJson(QString jsonString) {
    
    if ( jsonString.compare("None", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDhGroup::NONE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DHGroup1", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDhGroup::DHGROUP1;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DHGroup2", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDhGroup::DHGROUP2;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DHGroup14", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDhGroup::DHGROUP14;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DHGroup2048", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDhGroup::DHGROUP2048;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ECP256", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDhGroup::ECP256;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ECP384", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDhGroup::ECP384;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DHGroup24", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDhGroup::DHGROUP24;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIDhGroup::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIDhGroup::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIDhGroup::NONE:
            val = "None";
            break;
        case eOAIDhGroup::DHGROUP1:
            val = "DHGroup1";
            break;
        case eOAIDhGroup::DHGROUP2:
            val = "DHGroup2";
            break;
        case eOAIDhGroup::DHGROUP14:
            val = "DHGroup14";
            break;
        case eOAIDhGroup::DHGROUP2048:
            val = "DHGroup2048";
            break;
        case eOAIDhGroup::ECP256:
            val = "ECP256";
            break;
        case eOAIDhGroup::ECP384:
            val = "ECP384";
            break;
        case eOAIDhGroup::DHGROUP24:
            val = "DHGroup24";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIDhGroup::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIDhGroup::eOAIDhGroup OAIDhGroup::getValue() const {
    return m_value;
}

void OAIDhGroup::setValue(const OAIDhGroup::eOAIDhGroup& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIDhGroup::isSet() const {
    
    return m_value_isSet;
}

bool OAIDhGroup::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
