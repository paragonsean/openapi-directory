/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-07-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.NetworkManagementClient);
  }
}(this, function(expect, NetworkManagementClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new NetworkManagementClient.VpnClientIPsecParameters();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('VpnClientIPsecParameters', function() {
    it('should create an instance of VpnClientIPsecParameters', function() {
      // uncomment below and update the code to test VpnClientIPsecParameters
      //var instance = new NetworkManagementClient.VpnClientIPsecParameters();
      //expect(instance).to.be.a(NetworkManagementClient.VpnClientIPsecParameters);
    });

    it('should have the property dhGroup (base name: "dhGroup")', function() {
      // uncomment below and update the code to test the property dhGroup
      //var instance = new NetworkManagementClient.VpnClientIPsecParameters();
      //expect(instance).to.be();
    });

    it('should have the property ikeEncryption (base name: "ikeEncryption")', function() {
      // uncomment below and update the code to test the property ikeEncryption
      //var instance = new NetworkManagementClient.VpnClientIPsecParameters();
      //expect(instance).to.be();
    });

    it('should have the property ikeIntegrity (base name: "ikeIntegrity")', function() {
      // uncomment below and update the code to test the property ikeIntegrity
      //var instance = new NetworkManagementClient.VpnClientIPsecParameters();
      //expect(instance).to.be();
    });

    it('should have the property ipsecEncryption (base name: "ipsecEncryption")', function() {
      // uncomment below and update the code to test the property ipsecEncryption
      //var instance = new NetworkManagementClient.VpnClientIPsecParameters();
      //expect(instance).to.be();
    });

    it('should have the property ipsecIntegrity (base name: "ipsecIntegrity")', function() {
      // uncomment below and update the code to test the property ipsecIntegrity
      //var instance = new NetworkManagementClient.VpnClientIPsecParameters();
      //expect(instance).to.be();
    });

    it('should have the property pfsGroup (base name: "pfsGroup")', function() {
      // uncomment below and update the code to test the property pfsGroup
      //var instance = new NetworkManagementClient.VpnClientIPsecParameters();
      //expect(instance).to.be();
    });

    it('should have the property saDataSizeKilobytes (base name: "saDataSizeKilobytes")', function() {
      // uncomment below and update the code to test the property saDataSizeKilobytes
      //var instance = new NetworkManagementClient.VpnClientIPsecParameters();
      //expect(instance).to.be();
    });

    it('should have the property saLifeTimeSeconds (base name: "saLifeTimeSeconds")', function() {
      // uncomment below and update the code to test the property saLifeTimeSeconds
      //var instance = new NetworkManagementClient.VpnClientIPsecParameters();
      //expect(instance).to.be();
    });

  });

}));
