/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2015-06-15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.NetworkManagementClient);
  }
}(this, function(expect, NetworkManagementClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new NetworkManagementClient.VirtualNetworkGatewayPropertiesFormat();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('VirtualNetworkGatewayPropertiesFormat', function() {
    it('should create an instance of VirtualNetworkGatewayPropertiesFormat', function() {
      // uncomment below and update the code to test VirtualNetworkGatewayPropertiesFormat
      //var instance = new NetworkManagementClient.VirtualNetworkGatewayPropertiesFormat();
      //expect(instance).to.be.a(NetworkManagementClient.VirtualNetworkGatewayPropertiesFormat);
    });

    it('should have the property bgpSettings (base name: "bgpSettings")', function() {
      // uncomment below and update the code to test the property bgpSettings
      //var instance = new NetworkManagementClient.VirtualNetworkGatewayPropertiesFormat();
      //expect(instance).to.be();
    });

    it('should have the property enableBgp (base name: "enableBgp")', function() {
      // uncomment below and update the code to test the property enableBgp
      //var instance = new NetworkManagementClient.VirtualNetworkGatewayPropertiesFormat();
      //expect(instance).to.be();
    });

    it('should have the property gatewayDefaultSite (base name: "gatewayDefaultSite")', function() {
      // uncomment below and update the code to test the property gatewayDefaultSite
      //var instance = new NetworkManagementClient.VirtualNetworkGatewayPropertiesFormat();
      //expect(instance).to.be();
    });

    it('should have the property gatewayType (base name: "gatewayType")', function() {
      // uncomment below and update the code to test the property gatewayType
      //var instance = new NetworkManagementClient.VirtualNetworkGatewayPropertiesFormat();
      //expect(instance).to.be();
    });

    it('should have the property ipConfigurations (base name: "ipConfigurations")', function() {
      // uncomment below and update the code to test the property ipConfigurations
      //var instance = new NetworkManagementClient.VirtualNetworkGatewayPropertiesFormat();
      //expect(instance).to.be();
    });

    it('should have the property provisioningState (base name: "provisioningState")', function() {
      // uncomment below and update the code to test the property provisioningState
      //var instance = new NetworkManagementClient.VirtualNetworkGatewayPropertiesFormat();
      //expect(instance).to.be();
    });

    it('should have the property resourceGuid (base name: "resourceGuid")', function() {
      // uncomment below and update the code to test the property resourceGuid
      //var instance = new NetworkManagementClient.VirtualNetworkGatewayPropertiesFormat();
      //expect(instance).to.be();
    });

    it('should have the property sku (base name: "sku")', function() {
      // uncomment below and update the code to test the property sku
      //var instance = new NetworkManagementClient.VirtualNetworkGatewayPropertiesFormat();
      //expect(instance).to.be();
    });

    it('should have the property vpnClientConfiguration (base name: "vpnClientConfiguration")', function() {
      // uncomment below and update the code to test the property vpnClientConfiguration
      //var instance = new NetworkManagementClient.VirtualNetworkGatewayPropertiesFormat();
      //expect(instance).to.be();
    });

    it('should have the property vpnType (base name: "vpnType")', function() {
      // uncomment below and update the code to test the property vpnType
      //var instance = new NetworkManagementClient.VirtualNetworkGatewayPropertiesFormat();
      //expect(instance).to.be();
    });

  });

}));
