/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2018-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The BgpPeerStatus model module.
 * @module model/BgpPeerStatus
 * @version 2018-06-01
 */
class BgpPeerStatus {
    /**
     * Constructs a new <code>BgpPeerStatus</code>.
     * BGP peer status details
     * @alias module:model/BgpPeerStatus
     */
    constructor() { 
        
        BgpPeerStatus.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BgpPeerStatus</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BgpPeerStatus} obj Optional instance to populate.
     * @return {module:model/BgpPeerStatus} The populated <code>BgpPeerStatus</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BgpPeerStatus();

            if (data.hasOwnProperty('asn')) {
                obj['asn'] = ApiClient.convertToType(data['asn'], 'Number');
            }
            if (data.hasOwnProperty('connectedDuration')) {
                obj['connectedDuration'] = ApiClient.convertToType(data['connectedDuration'], 'String');
            }
            if (data.hasOwnProperty('localAddress')) {
                obj['localAddress'] = ApiClient.convertToType(data['localAddress'], 'String');
            }
            if (data.hasOwnProperty('messagesReceived')) {
                obj['messagesReceived'] = ApiClient.convertToType(data['messagesReceived'], 'Number');
            }
            if (data.hasOwnProperty('messagesSent')) {
                obj['messagesSent'] = ApiClient.convertToType(data['messagesSent'], 'Number');
            }
            if (data.hasOwnProperty('neighbor')) {
                obj['neighbor'] = ApiClient.convertToType(data['neighbor'], 'String');
            }
            if (data.hasOwnProperty('routesReceived')) {
                obj['routesReceived'] = ApiClient.convertToType(data['routesReceived'], 'Number');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BgpPeerStatus</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BgpPeerStatus</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['connectedDuration'] && !(typeof data['connectedDuration'] === 'string' || data['connectedDuration'] instanceof String)) {
            throw new Error("Expected the field `connectedDuration` to be a primitive type in the JSON string but got " + data['connectedDuration']);
        }
        // ensure the json data is a string
        if (data['localAddress'] && !(typeof data['localAddress'] === 'string' || data['localAddress'] instanceof String)) {
            throw new Error("Expected the field `localAddress` to be a primitive type in the JSON string but got " + data['localAddress']);
        }
        // ensure the json data is a string
        if (data['neighbor'] && !(typeof data['neighbor'] === 'string' || data['neighbor'] instanceof String)) {
            throw new Error("Expected the field `neighbor` to be a primitive type in the JSON string but got " + data['neighbor']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }

        return true;
    }


}



/**
 * The autonomous system number of the remote BGP peer
 * @member {Number} asn
 */
BgpPeerStatus.prototype['asn'] = undefined;

/**
 * For how long the peering has been up
 * @member {String} connectedDuration
 */
BgpPeerStatus.prototype['connectedDuration'] = undefined;

/**
 * The virtual network gateway's local address
 * @member {String} localAddress
 */
BgpPeerStatus.prototype['localAddress'] = undefined;

/**
 * The number of BGP messages received
 * @member {Number} messagesReceived
 */
BgpPeerStatus.prototype['messagesReceived'] = undefined;

/**
 * The number of BGP messages sent
 * @member {Number} messagesSent
 */
BgpPeerStatus.prototype['messagesSent'] = undefined;

/**
 * The remote BGP peer
 * @member {String} neighbor
 */
BgpPeerStatus.prototype['neighbor'] = undefined;

/**
 * The number of routes learned from this peer
 * @member {Number} routesReceived
 */
BgpPeerStatus.prototype['routesReceived'] = undefined;

/**
 * The BGP peer state
 * @member {module:model/BgpPeerStatus.StateEnum} state
 */
BgpPeerStatus.prototype['state'] = undefined;





/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
BgpPeerStatus['StateEnum'] = {

    /**
     * value: "Unknown"
     * @const
     */
    "Unknown": "Unknown",

    /**
     * value: "Stopped"
     * @const
     */
    "Stopped": "Stopped",

    /**
     * value: "Idle"
     * @const
     */
    "Idle": "Idle",

    /**
     * value: "Connecting"
     * @const
     */
    "Connecting": "Connecting",

    /**
     * value: "Connected"
     * @const
     */
    "Connected": "Connected"
};



export default BgpPeerStatus;

