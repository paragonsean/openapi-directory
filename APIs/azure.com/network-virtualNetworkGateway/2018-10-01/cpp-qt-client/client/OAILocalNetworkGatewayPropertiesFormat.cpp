/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2018-10-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILocalNetworkGatewayPropertiesFormat.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILocalNetworkGatewayPropertiesFormat::OAILocalNetworkGatewayPropertiesFormat(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILocalNetworkGatewayPropertiesFormat::OAILocalNetworkGatewayPropertiesFormat() {
    this->initializeModel();
}

OAILocalNetworkGatewayPropertiesFormat::~OAILocalNetworkGatewayPropertiesFormat() {}

void OAILocalNetworkGatewayPropertiesFormat::initializeModel() {

    m_bgp_settings_isSet = false;
    m_bgp_settings_isValid = false;

    m_gateway_ip_address_isSet = false;
    m_gateway_ip_address_isValid = false;

    m_local_network_address_space_isSet = false;
    m_local_network_address_space_isValid = false;

    m_provisioning_state_isSet = false;
    m_provisioning_state_isValid = false;

    m_resource_guid_isSet = false;
    m_resource_guid_isValid = false;
}

void OAILocalNetworkGatewayPropertiesFormat::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILocalNetworkGatewayPropertiesFormat::fromJsonObject(QJsonObject json) {

    m_bgp_settings_isValid = ::OpenAPI::fromJsonValue(m_bgp_settings, json[QString("bgpSettings")]);
    m_bgp_settings_isSet = !json[QString("bgpSettings")].isNull() && m_bgp_settings_isValid;

    m_gateway_ip_address_isValid = ::OpenAPI::fromJsonValue(m_gateway_ip_address, json[QString("gatewayIpAddress")]);
    m_gateway_ip_address_isSet = !json[QString("gatewayIpAddress")].isNull() && m_gateway_ip_address_isValid;

    m_local_network_address_space_isValid = ::OpenAPI::fromJsonValue(m_local_network_address_space, json[QString("localNetworkAddressSpace")]);
    m_local_network_address_space_isSet = !json[QString("localNetworkAddressSpace")].isNull() && m_local_network_address_space_isValid;

    m_provisioning_state_isValid = ::OpenAPI::fromJsonValue(m_provisioning_state, json[QString("provisioningState")]);
    m_provisioning_state_isSet = !json[QString("provisioningState")].isNull() && m_provisioning_state_isValid;

    m_resource_guid_isValid = ::OpenAPI::fromJsonValue(m_resource_guid, json[QString("resourceGuid")]);
    m_resource_guid_isSet = !json[QString("resourceGuid")].isNull() && m_resource_guid_isValid;
}

QString OAILocalNetworkGatewayPropertiesFormat::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILocalNetworkGatewayPropertiesFormat::asJsonObject() const {
    QJsonObject obj;
    if (m_bgp_settings.isSet()) {
        obj.insert(QString("bgpSettings"), ::OpenAPI::toJsonValue(m_bgp_settings));
    }
    if (m_gateway_ip_address_isSet) {
        obj.insert(QString("gatewayIpAddress"), ::OpenAPI::toJsonValue(m_gateway_ip_address));
    }
    if (m_local_network_address_space.isSet()) {
        obj.insert(QString("localNetworkAddressSpace"), ::OpenAPI::toJsonValue(m_local_network_address_space));
    }
    if (m_provisioning_state_isSet) {
        obj.insert(QString("provisioningState"), ::OpenAPI::toJsonValue(m_provisioning_state));
    }
    if (m_resource_guid_isSet) {
        obj.insert(QString("resourceGuid"), ::OpenAPI::toJsonValue(m_resource_guid));
    }
    return obj;
}

OAIBgpSettings OAILocalNetworkGatewayPropertiesFormat::getBgpSettings() const {
    return m_bgp_settings;
}
void OAILocalNetworkGatewayPropertiesFormat::setBgpSettings(const OAIBgpSettings &bgp_settings) {
    m_bgp_settings = bgp_settings;
    m_bgp_settings_isSet = true;
}

bool OAILocalNetworkGatewayPropertiesFormat::is_bgp_settings_Set() const{
    return m_bgp_settings_isSet;
}

bool OAILocalNetworkGatewayPropertiesFormat::is_bgp_settings_Valid() const{
    return m_bgp_settings_isValid;
}

QString OAILocalNetworkGatewayPropertiesFormat::getGatewayIpAddress() const {
    return m_gateway_ip_address;
}
void OAILocalNetworkGatewayPropertiesFormat::setGatewayIpAddress(const QString &gateway_ip_address) {
    m_gateway_ip_address = gateway_ip_address;
    m_gateway_ip_address_isSet = true;
}

bool OAILocalNetworkGatewayPropertiesFormat::is_gateway_ip_address_Set() const{
    return m_gateway_ip_address_isSet;
}

bool OAILocalNetworkGatewayPropertiesFormat::is_gateway_ip_address_Valid() const{
    return m_gateway_ip_address_isValid;
}

OAILocalNetworkGatewayPropertiesFormat_localNetworkAddressSpace OAILocalNetworkGatewayPropertiesFormat::getLocalNetworkAddressSpace() const {
    return m_local_network_address_space;
}
void OAILocalNetworkGatewayPropertiesFormat::setLocalNetworkAddressSpace(const OAILocalNetworkGatewayPropertiesFormat_localNetworkAddressSpace &local_network_address_space) {
    m_local_network_address_space = local_network_address_space;
    m_local_network_address_space_isSet = true;
}

bool OAILocalNetworkGatewayPropertiesFormat::is_local_network_address_space_Set() const{
    return m_local_network_address_space_isSet;
}

bool OAILocalNetworkGatewayPropertiesFormat::is_local_network_address_space_Valid() const{
    return m_local_network_address_space_isValid;
}

QString OAILocalNetworkGatewayPropertiesFormat::getProvisioningState() const {
    return m_provisioning_state;
}
void OAILocalNetworkGatewayPropertiesFormat::setProvisioningState(const QString &provisioning_state) {
    m_provisioning_state = provisioning_state;
    m_provisioning_state_isSet = true;
}

bool OAILocalNetworkGatewayPropertiesFormat::is_provisioning_state_Set() const{
    return m_provisioning_state_isSet;
}

bool OAILocalNetworkGatewayPropertiesFormat::is_provisioning_state_Valid() const{
    return m_provisioning_state_isValid;
}

QString OAILocalNetworkGatewayPropertiesFormat::getResourceGuid() const {
    return m_resource_guid;
}
void OAILocalNetworkGatewayPropertiesFormat::setResourceGuid(const QString &resource_guid) {
    m_resource_guid = resource_guid;
    m_resource_guid_isSet = true;
}

bool OAILocalNetworkGatewayPropertiesFormat::is_resource_guid_Set() const{
    return m_resource_guid_isSet;
}

bool OAILocalNetworkGatewayPropertiesFormat::is_resource_guid_Valid() const{
    return m_resource_guid_isValid;
}

bool OAILocalNetworkGatewayPropertiesFormat::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_bgp_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_gateway_ip_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_local_network_address_space.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_provisioning_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_guid_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILocalNetworkGatewayPropertiesFormat::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
