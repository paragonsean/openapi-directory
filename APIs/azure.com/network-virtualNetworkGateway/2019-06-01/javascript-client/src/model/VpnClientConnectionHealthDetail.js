/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The VpnClientConnectionHealthDetail model module.
 * @module model/VpnClientConnectionHealthDetail
 * @version 2019-06-01
 */
class VpnClientConnectionHealthDetail {
    /**
     * Constructs a new <code>VpnClientConnectionHealthDetail</code>.
     * VPN client connection health detail.
     * @alias module:model/VpnClientConnectionHealthDetail
     */
    constructor() { 
        
        VpnClientConnectionHealthDetail.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>VpnClientConnectionHealthDetail</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VpnClientConnectionHealthDetail} obj Optional instance to populate.
     * @return {module:model/VpnClientConnectionHealthDetail} The populated <code>VpnClientConnectionHealthDetail</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VpnClientConnectionHealthDetail();

            if (data.hasOwnProperty('egressBytesTransferred')) {
                obj['egressBytesTransferred'] = ApiClient.convertToType(data['egressBytesTransferred'], 'Number');
            }
            if (data.hasOwnProperty('egressPacketsTransferred')) {
                obj['egressPacketsTransferred'] = ApiClient.convertToType(data['egressPacketsTransferred'], 'Number');
            }
            if (data.hasOwnProperty('ingressBytesTransferred')) {
                obj['ingressBytesTransferred'] = ApiClient.convertToType(data['ingressBytesTransferred'], 'Number');
            }
            if (data.hasOwnProperty('ingressPacketsTransferred')) {
                obj['ingressPacketsTransferred'] = ApiClient.convertToType(data['ingressPacketsTransferred'], 'Number');
            }
            if (data.hasOwnProperty('maxBandwidth')) {
                obj['maxBandwidth'] = ApiClient.convertToType(data['maxBandwidth'], 'Number');
            }
            if (data.hasOwnProperty('maxPacketsPerSecond')) {
                obj['maxPacketsPerSecond'] = ApiClient.convertToType(data['maxPacketsPerSecond'], 'Number');
            }
            if (data.hasOwnProperty('privateIpAddress')) {
                obj['privateIpAddress'] = ApiClient.convertToType(data['privateIpAddress'], 'String');
            }
            if (data.hasOwnProperty('publicIpAddress')) {
                obj['publicIpAddress'] = ApiClient.convertToType(data['publicIpAddress'], 'String');
            }
            if (data.hasOwnProperty('vpnConnectionDuration')) {
                obj['vpnConnectionDuration'] = ApiClient.convertToType(data['vpnConnectionDuration'], 'Number');
            }
            if (data.hasOwnProperty('vpnConnectionId')) {
                obj['vpnConnectionId'] = ApiClient.convertToType(data['vpnConnectionId'], 'String');
            }
            if (data.hasOwnProperty('vpnConnectionTime')) {
                obj['vpnConnectionTime'] = ApiClient.convertToType(data['vpnConnectionTime'], 'String');
            }
            if (data.hasOwnProperty('vpnUserName')) {
                obj['vpnUserName'] = ApiClient.convertToType(data['vpnUserName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VpnClientConnectionHealthDetail</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VpnClientConnectionHealthDetail</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['privateIpAddress'] && !(typeof data['privateIpAddress'] === 'string' || data['privateIpAddress'] instanceof String)) {
            throw new Error("Expected the field `privateIpAddress` to be a primitive type in the JSON string but got " + data['privateIpAddress']);
        }
        // ensure the json data is a string
        if (data['publicIpAddress'] && !(typeof data['publicIpAddress'] === 'string' || data['publicIpAddress'] instanceof String)) {
            throw new Error("Expected the field `publicIpAddress` to be a primitive type in the JSON string but got " + data['publicIpAddress']);
        }
        // ensure the json data is a string
        if (data['vpnConnectionId'] && !(typeof data['vpnConnectionId'] === 'string' || data['vpnConnectionId'] instanceof String)) {
            throw new Error("Expected the field `vpnConnectionId` to be a primitive type in the JSON string but got " + data['vpnConnectionId']);
        }
        // ensure the json data is a string
        if (data['vpnConnectionTime'] && !(typeof data['vpnConnectionTime'] === 'string' || data['vpnConnectionTime'] instanceof String)) {
            throw new Error("Expected the field `vpnConnectionTime` to be a primitive type in the JSON string but got " + data['vpnConnectionTime']);
        }
        // ensure the json data is a string
        if (data['vpnUserName'] && !(typeof data['vpnUserName'] === 'string' || data['vpnUserName'] instanceof String)) {
            throw new Error("Expected the field `vpnUserName` to be a primitive type in the JSON string but got " + data['vpnUserName']);
        }

        return true;
    }


}



/**
 * The egress bytes per second.
 * @member {Number} egressBytesTransferred
 */
VpnClientConnectionHealthDetail.prototype['egressBytesTransferred'] = undefined;

/**
 * The egress packets per second.
 * @member {Number} egressPacketsTransferred
 */
VpnClientConnectionHealthDetail.prototype['egressPacketsTransferred'] = undefined;

/**
 * The ingress bytes per second.
 * @member {Number} ingressBytesTransferred
 */
VpnClientConnectionHealthDetail.prototype['ingressBytesTransferred'] = undefined;

/**
 * The ingress packets per second.
 * @member {Number} ingressPacketsTransferred
 */
VpnClientConnectionHealthDetail.prototype['ingressPacketsTransferred'] = undefined;

/**
 * The max band width.
 * @member {Number} maxBandwidth
 */
VpnClientConnectionHealthDetail.prototype['maxBandwidth'] = undefined;

/**
 * The max packets transferred per second.
 * @member {Number} maxPacketsPerSecond
 */
VpnClientConnectionHealthDetail.prototype['maxPacketsPerSecond'] = undefined;

/**
 * The assigned private Ip of a connected vpn client.
 * @member {String} privateIpAddress
 */
VpnClientConnectionHealthDetail.prototype['privateIpAddress'] = undefined;

/**
 * The public Ip of a connected vpn client.
 * @member {String} publicIpAddress
 */
VpnClientConnectionHealthDetail.prototype['publicIpAddress'] = undefined;

/**
 * The duration time of a connected vpn client.
 * @member {Number} vpnConnectionDuration
 */
VpnClientConnectionHealthDetail.prototype['vpnConnectionDuration'] = undefined;

/**
 * The vpn client Id.
 * @member {String} vpnConnectionId
 */
VpnClientConnectionHealthDetail.prototype['vpnConnectionId'] = undefined;

/**
 * The start time of a connected vpn client.
 * @member {String} vpnConnectionTime
 */
VpnClientConnectionHealthDetail.prototype['vpnConnectionTime'] = undefined;

/**
 * The user name of a connected vpn client.
 * @member {String} vpnUserName
 */
VpnClientConnectionHealthDetail.prototype['vpnUserName'] = undefined;






export default VpnClientConnectionHealthDetail;

