/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-06-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIIpsecIntegrity.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIIpsecIntegrity::OAIIpsecIntegrity(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIIpsecIntegrity::OAIIpsecIntegrity() {
    this->initializeModel();
}

OAIIpsecIntegrity::~OAIIpsecIntegrity() {}

void OAIIpsecIntegrity::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIIpsecIntegrity::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIIpsecIntegrity::fromJson(QString jsonString) {
    
    if ( jsonString.compare("MD5", Qt::CaseInsensitive) == 0) {
        m_value = eOAIIpsecIntegrity::MD5;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SHA1", Qt::CaseInsensitive) == 0) {
        m_value = eOAIIpsecIntegrity::SHA1;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SHA256", Qt::CaseInsensitive) == 0) {
        m_value = eOAIIpsecIntegrity::SHA256;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("GCMAES128", Qt::CaseInsensitive) == 0) {
        m_value = eOAIIpsecIntegrity::GCMAES128;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("GCMAES192", Qt::CaseInsensitive) == 0) {
        m_value = eOAIIpsecIntegrity::GCMAES192;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("GCMAES256", Qt::CaseInsensitive) == 0) {
        m_value = eOAIIpsecIntegrity::GCMAES256;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIIpsecIntegrity::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIIpsecIntegrity::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIIpsecIntegrity::MD5:
            val = "MD5";
            break;
        case eOAIIpsecIntegrity::SHA1:
            val = "SHA1";
            break;
        case eOAIIpsecIntegrity::SHA256:
            val = "SHA256";
            break;
        case eOAIIpsecIntegrity::GCMAES128:
            val = "GCMAES128";
            break;
        case eOAIIpsecIntegrity::GCMAES192:
            val = "GCMAES192";
            break;
        case eOAIIpsecIntegrity::GCMAES256:
            val = "GCMAES256";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIIpsecIntegrity::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIIpsecIntegrity::eOAIIpsecIntegrity OAIIpsecIntegrity::getValue() const {
    return m_value;
}

void OAIIpsecIntegrity::setValue(const OAIIpsecIntegrity::eOAIIpsecIntegrity& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIIpsecIntegrity::isSet() const {
    
    return m_value_isSet;
}

bool OAIIpsecIntegrity::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
