/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-06-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIIkeIntegrity.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIIkeIntegrity::OAIIkeIntegrity(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIIkeIntegrity::OAIIkeIntegrity() {
    this->initializeModel();
}

OAIIkeIntegrity::~OAIIkeIntegrity() {}

void OAIIkeIntegrity::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIIkeIntegrity::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIIkeIntegrity::fromJson(QString jsonString) {
    
    if ( jsonString.compare("MD5", Qt::CaseInsensitive) == 0) {
        m_value = eOAIIkeIntegrity::MD5;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SHA1", Qt::CaseInsensitive) == 0) {
        m_value = eOAIIkeIntegrity::SHA1;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SHA256", Qt::CaseInsensitive) == 0) {
        m_value = eOAIIkeIntegrity::SHA256;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SHA384", Qt::CaseInsensitive) == 0) {
        m_value = eOAIIkeIntegrity::SHA384;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("GCMAES256", Qt::CaseInsensitive) == 0) {
        m_value = eOAIIkeIntegrity::GCMAES256;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("GCMAES128", Qt::CaseInsensitive) == 0) {
        m_value = eOAIIkeIntegrity::GCMAES128;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIIkeIntegrity::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIIkeIntegrity::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIIkeIntegrity::MD5:
            val = "MD5";
            break;
        case eOAIIkeIntegrity::SHA1:
            val = "SHA1";
            break;
        case eOAIIkeIntegrity::SHA256:
            val = "SHA256";
            break;
        case eOAIIkeIntegrity::SHA384:
            val = "SHA384";
            break;
        case eOAIIkeIntegrity::GCMAES256:
            val = "GCMAES256";
            break;
        case eOAIIkeIntegrity::GCMAES128:
            val = "GCMAES128";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIIkeIntegrity::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIIkeIntegrity::eOAIIkeIntegrity OAIIkeIntegrity::getValue() const {
    return m_value;
}

void OAIIkeIntegrity::setValue(const OAIIkeIntegrity::eOAIIkeIntegrity& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIIkeIntegrity::isSet() const {
    
    return m_value_isSet;
}

bool OAIIkeIntegrity::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
