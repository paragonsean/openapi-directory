# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.ipsec_policy import IpsecPolicy
from openapi_server.models.local_network_gateway_properties_format_local_network_address_space import LocalNetworkGatewayPropertiesFormatLocalNetworkAddressSpace
from openapi_server.models.vpn_client_revoked_certificate import VpnClientRevokedCertificate
from openapi_server.models.vpn_client_root_certificate import VpnClientRootCertificate
from openapi_server import util


class VpnClientConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, radius_server_address: str=None, radius_server_secret: str=None, vpn_client_address_pool: LocalNetworkGatewayPropertiesFormatLocalNetworkAddressSpace=None, vpn_client_ipsec_policies: List[IpsecPolicy]=None, vpn_client_protocols: List[str]=None, vpn_client_revoked_certificates: List[VpnClientRevokedCertificate]=None, vpn_client_root_certificates: List[VpnClientRootCertificate]=None):
        """VpnClientConfiguration - a model defined in OpenAPI

        :param radius_server_address: The radius_server_address of this VpnClientConfiguration.
        :param radius_server_secret: The radius_server_secret of this VpnClientConfiguration.
        :param vpn_client_address_pool: The vpn_client_address_pool of this VpnClientConfiguration.
        :param vpn_client_ipsec_policies: The vpn_client_ipsec_policies of this VpnClientConfiguration.
        :param vpn_client_protocols: The vpn_client_protocols of this VpnClientConfiguration.
        :param vpn_client_revoked_certificates: The vpn_client_revoked_certificates of this VpnClientConfiguration.
        :param vpn_client_root_certificates: The vpn_client_root_certificates of this VpnClientConfiguration.
        """
        self.openapi_types = {
            'radius_server_address': str,
            'radius_server_secret': str,
            'vpn_client_address_pool': LocalNetworkGatewayPropertiesFormatLocalNetworkAddressSpace,
            'vpn_client_ipsec_policies': List[IpsecPolicy],
            'vpn_client_protocols': List[str],
            'vpn_client_revoked_certificates': List[VpnClientRevokedCertificate],
            'vpn_client_root_certificates': List[VpnClientRootCertificate]
        }

        self.attribute_map = {
            'radius_server_address': 'radiusServerAddress',
            'radius_server_secret': 'radiusServerSecret',
            'vpn_client_address_pool': 'vpnClientAddressPool',
            'vpn_client_ipsec_policies': 'vpnClientIpsecPolicies',
            'vpn_client_protocols': 'vpnClientProtocols',
            'vpn_client_revoked_certificates': 'vpnClientRevokedCertificates',
            'vpn_client_root_certificates': 'vpnClientRootCertificates'
        }

        self._radius_server_address = radius_server_address
        self._radius_server_secret = radius_server_secret
        self._vpn_client_address_pool = vpn_client_address_pool
        self._vpn_client_ipsec_policies = vpn_client_ipsec_policies
        self._vpn_client_protocols = vpn_client_protocols
        self._vpn_client_revoked_certificates = vpn_client_revoked_certificates
        self._vpn_client_root_certificates = vpn_client_root_certificates

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VpnClientConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VpnClientConfiguration of this VpnClientConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def radius_server_address(self):
        """Gets the radius_server_address of this VpnClientConfiguration.

        The radius server address property of the VirtualNetworkGateway resource for vpn client connection.

        :return: The radius_server_address of this VpnClientConfiguration.
        :rtype: str
        """
        return self._radius_server_address

    @radius_server_address.setter
    def radius_server_address(self, radius_server_address):
        """Sets the radius_server_address of this VpnClientConfiguration.

        The radius server address property of the VirtualNetworkGateway resource for vpn client connection.

        :param radius_server_address: The radius_server_address of this VpnClientConfiguration.
        :type radius_server_address: str
        """

        self._radius_server_address = radius_server_address

    @property
    def radius_server_secret(self):
        """Gets the radius_server_secret of this VpnClientConfiguration.

        The radius secret property of the VirtualNetworkGateway resource for vpn client connection.

        :return: The radius_server_secret of this VpnClientConfiguration.
        :rtype: str
        """
        return self._radius_server_secret

    @radius_server_secret.setter
    def radius_server_secret(self, radius_server_secret):
        """Sets the radius_server_secret of this VpnClientConfiguration.

        The radius secret property of the VirtualNetworkGateway resource for vpn client connection.

        :param radius_server_secret: The radius_server_secret of this VpnClientConfiguration.
        :type radius_server_secret: str
        """

        self._radius_server_secret = radius_server_secret

    @property
    def vpn_client_address_pool(self):
        """Gets the vpn_client_address_pool of this VpnClientConfiguration.


        :return: The vpn_client_address_pool of this VpnClientConfiguration.
        :rtype: LocalNetworkGatewayPropertiesFormatLocalNetworkAddressSpace
        """
        return self._vpn_client_address_pool

    @vpn_client_address_pool.setter
    def vpn_client_address_pool(self, vpn_client_address_pool):
        """Sets the vpn_client_address_pool of this VpnClientConfiguration.


        :param vpn_client_address_pool: The vpn_client_address_pool of this VpnClientConfiguration.
        :type vpn_client_address_pool: LocalNetworkGatewayPropertiesFormatLocalNetworkAddressSpace
        """

        self._vpn_client_address_pool = vpn_client_address_pool

    @property
    def vpn_client_ipsec_policies(self):
        """Gets the vpn_client_ipsec_policies of this VpnClientConfiguration.

        VpnClientIpsecPolicies for virtual network gateway P2S client.

        :return: The vpn_client_ipsec_policies of this VpnClientConfiguration.
        :rtype: List[IpsecPolicy]
        """
        return self._vpn_client_ipsec_policies

    @vpn_client_ipsec_policies.setter
    def vpn_client_ipsec_policies(self, vpn_client_ipsec_policies):
        """Sets the vpn_client_ipsec_policies of this VpnClientConfiguration.

        VpnClientIpsecPolicies for virtual network gateway P2S client.

        :param vpn_client_ipsec_policies: The vpn_client_ipsec_policies of this VpnClientConfiguration.
        :type vpn_client_ipsec_policies: List[IpsecPolicy]
        """

        self._vpn_client_ipsec_policies = vpn_client_ipsec_policies

    @property
    def vpn_client_protocols(self):
        """Gets the vpn_client_protocols of this VpnClientConfiguration.

        VpnClientProtocols for Virtual network gateway.

        :return: The vpn_client_protocols of this VpnClientConfiguration.
        :rtype: List[str]
        """
        return self._vpn_client_protocols

    @vpn_client_protocols.setter
    def vpn_client_protocols(self, vpn_client_protocols):
        """Sets the vpn_client_protocols of this VpnClientConfiguration.

        VpnClientProtocols for Virtual network gateway.

        :param vpn_client_protocols: The vpn_client_protocols of this VpnClientConfiguration.
        :type vpn_client_protocols: List[str]
        """
        allowed_values = ["IkeV2", "SSTP", "OpenVPN"]  # noqa: E501
        if not set(vpn_client_protocols).issubset(set(allowed_values)):
            raise ValueError(
                "Invalid values for `vpn_client_protocols` [{0}], must be a subset of [{1}]"
                .format(", ".join(map(str, set(vpn_client_protocols) - set(allowed_values))),
                        ", ".join(map(str, allowed_values)))
            )

        self._vpn_client_protocols = vpn_client_protocols

    @property
    def vpn_client_revoked_certificates(self):
        """Gets the vpn_client_revoked_certificates of this VpnClientConfiguration.

        VpnClientRevokedCertificate for Virtual network gateway.

        :return: The vpn_client_revoked_certificates of this VpnClientConfiguration.
        :rtype: List[VpnClientRevokedCertificate]
        """
        return self._vpn_client_revoked_certificates

    @vpn_client_revoked_certificates.setter
    def vpn_client_revoked_certificates(self, vpn_client_revoked_certificates):
        """Sets the vpn_client_revoked_certificates of this VpnClientConfiguration.

        VpnClientRevokedCertificate for Virtual network gateway.

        :param vpn_client_revoked_certificates: The vpn_client_revoked_certificates of this VpnClientConfiguration.
        :type vpn_client_revoked_certificates: List[VpnClientRevokedCertificate]
        """

        self._vpn_client_revoked_certificates = vpn_client_revoked_certificates

    @property
    def vpn_client_root_certificates(self):
        """Gets the vpn_client_root_certificates of this VpnClientConfiguration.

        VpnClientRootCertificate for virtual network gateway.

        :return: The vpn_client_root_certificates of this VpnClientConfiguration.
        :rtype: List[VpnClientRootCertificate]
        """
        return self._vpn_client_root_certificates

    @vpn_client_root_certificates.setter
    def vpn_client_root_certificates(self, vpn_client_root_certificates):
        """Sets the vpn_client_root_certificates of this VpnClientConfiguration.

        VpnClientRootCertificate for virtual network gateway.

        :param vpn_client_root_certificates: The vpn_client_root_certificates of this VpnClientConfiguration.
        :type vpn_client_root_certificates: List[VpnClientRootCertificate]
        """

        self._vpn_client_root_certificates = vpn_client_root_certificates
