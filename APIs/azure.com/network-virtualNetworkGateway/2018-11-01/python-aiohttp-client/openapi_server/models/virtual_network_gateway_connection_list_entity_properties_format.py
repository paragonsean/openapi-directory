# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.connection_protocol import ConnectionProtocol
from openapi_server.models.ipsec_policy import IpsecPolicy
from openapi_server.models.tunnel_connection_health import TunnelConnectionHealth
from openapi_server.models.virtual_network_connection_gateway_reference import VirtualNetworkConnectionGatewayReference
from openapi_server.models.virtual_network_gateway_connection_list_entity_properties_format_peer import VirtualNetworkGatewayConnectionListEntityPropertiesFormatPeer
from openapi_server import util


class VirtualNetworkGatewayConnectionListEntityPropertiesFormat(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, authorization_key: str=None, connection_protocol: ConnectionProtocol=None, connection_status: str=None, connection_type: str=None, egress_bytes_transferred: int=None, enable_bgp: bool=None, express_route_gateway_bypass: bool=None, ingress_bytes_transferred: int=None, ipsec_policies: List[IpsecPolicy]=None, local_network_gateway2: VirtualNetworkConnectionGatewayReference=None, peer: VirtualNetworkGatewayConnectionListEntityPropertiesFormatPeer=None, provisioning_state: str=None, resource_guid: str=None, routing_weight: int=None, shared_key: str=None, tunnel_connection_status: List[TunnelConnectionHealth]=None, use_policy_based_traffic_selectors: bool=None, virtual_network_gateway1: VirtualNetworkConnectionGatewayReference=None, virtual_network_gateway2: VirtualNetworkConnectionGatewayReference=None):
        """VirtualNetworkGatewayConnectionListEntityPropertiesFormat - a model defined in OpenAPI

        :param authorization_key: The authorization_key of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.
        :param connection_protocol: The connection_protocol of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.
        :param connection_status: The connection_status of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.
        :param connection_type: The connection_type of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.
        :param egress_bytes_transferred: The egress_bytes_transferred of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.
        :param enable_bgp: The enable_bgp of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.
        :param express_route_gateway_bypass: The express_route_gateway_bypass of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.
        :param ingress_bytes_transferred: The ingress_bytes_transferred of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.
        :param ipsec_policies: The ipsec_policies of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.
        :param local_network_gateway2: The local_network_gateway2 of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.
        :param peer: The peer of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.
        :param provisioning_state: The provisioning_state of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.
        :param resource_guid: The resource_guid of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.
        :param routing_weight: The routing_weight of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.
        :param shared_key: The shared_key of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.
        :param tunnel_connection_status: The tunnel_connection_status of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.
        :param use_policy_based_traffic_selectors: The use_policy_based_traffic_selectors of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.
        :param virtual_network_gateway1: The virtual_network_gateway1 of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.
        :param virtual_network_gateway2: The virtual_network_gateway2 of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.
        """
        self.openapi_types = {
            'authorization_key': str,
            'connection_protocol': ConnectionProtocol,
            'connection_status': str,
            'connection_type': str,
            'egress_bytes_transferred': int,
            'enable_bgp': bool,
            'express_route_gateway_bypass': bool,
            'ingress_bytes_transferred': int,
            'ipsec_policies': List[IpsecPolicy],
            'local_network_gateway2': VirtualNetworkConnectionGatewayReference,
            'peer': VirtualNetworkGatewayConnectionListEntityPropertiesFormatPeer,
            'provisioning_state': str,
            'resource_guid': str,
            'routing_weight': int,
            'shared_key': str,
            'tunnel_connection_status': List[TunnelConnectionHealth],
            'use_policy_based_traffic_selectors': bool,
            'virtual_network_gateway1': VirtualNetworkConnectionGatewayReference,
            'virtual_network_gateway2': VirtualNetworkConnectionGatewayReference
        }

        self.attribute_map = {
            'authorization_key': 'authorizationKey',
            'connection_protocol': 'connectionProtocol',
            'connection_status': 'connectionStatus',
            'connection_type': 'connectionType',
            'egress_bytes_transferred': 'egressBytesTransferred',
            'enable_bgp': 'enableBgp',
            'express_route_gateway_bypass': 'expressRouteGatewayBypass',
            'ingress_bytes_transferred': 'ingressBytesTransferred',
            'ipsec_policies': 'ipsecPolicies',
            'local_network_gateway2': 'localNetworkGateway2',
            'peer': 'peer',
            'provisioning_state': 'provisioningState',
            'resource_guid': 'resourceGuid',
            'routing_weight': 'routingWeight',
            'shared_key': 'sharedKey',
            'tunnel_connection_status': 'tunnelConnectionStatus',
            'use_policy_based_traffic_selectors': 'usePolicyBasedTrafficSelectors',
            'virtual_network_gateway1': 'virtualNetworkGateway1',
            'virtual_network_gateway2': 'virtualNetworkGateway2'
        }

        self._authorization_key = authorization_key
        self._connection_protocol = connection_protocol
        self._connection_status = connection_status
        self._connection_type = connection_type
        self._egress_bytes_transferred = egress_bytes_transferred
        self._enable_bgp = enable_bgp
        self._express_route_gateway_bypass = express_route_gateway_bypass
        self._ingress_bytes_transferred = ingress_bytes_transferred
        self._ipsec_policies = ipsec_policies
        self._local_network_gateway2 = local_network_gateway2
        self._peer = peer
        self._provisioning_state = provisioning_state
        self._resource_guid = resource_guid
        self._routing_weight = routing_weight
        self._shared_key = shared_key
        self._tunnel_connection_status = tunnel_connection_status
        self._use_policy_based_traffic_selectors = use_policy_based_traffic_selectors
        self._virtual_network_gateway1 = virtual_network_gateway1
        self._virtual_network_gateway2 = virtual_network_gateway2

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VirtualNetworkGatewayConnectionListEntityPropertiesFormat':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VirtualNetworkGatewayConnectionListEntityPropertiesFormat of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def authorization_key(self):
        """Gets the authorization_key of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.

        The authorizationKey.

        :return: The authorization_key of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.
        :rtype: str
        """
        return self._authorization_key

    @authorization_key.setter
    def authorization_key(self, authorization_key):
        """Sets the authorization_key of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.

        The authorizationKey.

        :param authorization_key: The authorization_key of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.
        :type authorization_key: str
        """

        self._authorization_key = authorization_key

    @property
    def connection_protocol(self):
        """Gets the connection_protocol of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.


        :return: The connection_protocol of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.
        :rtype: ConnectionProtocol
        """
        return self._connection_protocol

    @connection_protocol.setter
    def connection_protocol(self, connection_protocol):
        """Sets the connection_protocol of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.


        :param connection_protocol: The connection_protocol of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.
        :type connection_protocol: ConnectionProtocol
        """

        self._connection_protocol = connection_protocol

    @property
    def connection_status(self):
        """Gets the connection_status of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.

        Virtual network Gateway connection status. Possible values are 'Unknown', 'Connecting', 'Connected' and 'NotConnected'.

        :return: The connection_status of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.
        :rtype: str
        """
        return self._connection_status

    @connection_status.setter
    def connection_status(self, connection_status):
        """Sets the connection_status of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.

        Virtual network Gateway connection status. Possible values are 'Unknown', 'Connecting', 'Connected' and 'NotConnected'.

        :param connection_status: The connection_status of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.
        :type connection_status: str
        """
        allowed_values = ["Unknown", "Connecting", "Connected", "NotConnected"]  # noqa: E501
        if connection_status not in allowed_values:
            raise ValueError(
                "Invalid value for `connection_status` ({0}), must be one of {1}"
                .format(connection_status, allowed_values)
            )

        self._connection_status = connection_status

    @property
    def connection_type(self):
        """Gets the connection_type of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.

        Gateway connection type. Possible values are: 'Ipsec','Vnet2Vnet','ExpressRoute', and 'VPNClient.

        :return: The connection_type of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.
        :rtype: str
        """
        return self._connection_type

    @connection_type.setter
    def connection_type(self, connection_type):
        """Sets the connection_type of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.

        Gateway connection type. Possible values are: 'Ipsec','Vnet2Vnet','ExpressRoute', and 'VPNClient.

        :param connection_type: The connection_type of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.
        :type connection_type: str
        """
        allowed_values = ["IPsec", "Vnet2Vnet", "ExpressRoute", "VPNClient"]  # noqa: E501
        if connection_type not in allowed_values:
            raise ValueError(
                "Invalid value for `connection_type` ({0}), must be one of {1}"
                .format(connection_type, allowed_values)
            )

        self._connection_type = connection_type

    @property
    def egress_bytes_transferred(self):
        """Gets the egress_bytes_transferred of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.

        The egress bytes transferred in this connection.

        :return: The egress_bytes_transferred of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.
        :rtype: int
        """
        return self._egress_bytes_transferred

    @egress_bytes_transferred.setter
    def egress_bytes_transferred(self, egress_bytes_transferred):
        """Sets the egress_bytes_transferred of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.

        The egress bytes transferred in this connection.

        :param egress_bytes_transferred: The egress_bytes_transferred of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.
        :type egress_bytes_transferred: int
        """

        self._egress_bytes_transferred = egress_bytes_transferred

    @property
    def enable_bgp(self):
        """Gets the enable_bgp of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.

        EnableBgp flag

        :return: The enable_bgp of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.
        :rtype: bool
        """
        return self._enable_bgp

    @enable_bgp.setter
    def enable_bgp(self, enable_bgp):
        """Sets the enable_bgp of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.

        EnableBgp flag

        :param enable_bgp: The enable_bgp of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.
        :type enable_bgp: bool
        """

        self._enable_bgp = enable_bgp

    @property
    def express_route_gateway_bypass(self):
        """Gets the express_route_gateway_bypass of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.

        Bypass ExpressRoute Gateway for data forwarding

        :return: The express_route_gateway_bypass of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.
        :rtype: bool
        """
        return self._express_route_gateway_bypass

    @express_route_gateway_bypass.setter
    def express_route_gateway_bypass(self, express_route_gateway_bypass):
        """Sets the express_route_gateway_bypass of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.

        Bypass ExpressRoute Gateway for data forwarding

        :param express_route_gateway_bypass: The express_route_gateway_bypass of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.
        :type express_route_gateway_bypass: bool
        """

        self._express_route_gateway_bypass = express_route_gateway_bypass

    @property
    def ingress_bytes_transferred(self):
        """Gets the ingress_bytes_transferred of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.

        The ingress bytes transferred in this connection.

        :return: The ingress_bytes_transferred of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.
        :rtype: int
        """
        return self._ingress_bytes_transferred

    @ingress_bytes_transferred.setter
    def ingress_bytes_transferred(self, ingress_bytes_transferred):
        """Sets the ingress_bytes_transferred of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.

        The ingress bytes transferred in this connection.

        :param ingress_bytes_transferred: The ingress_bytes_transferred of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.
        :type ingress_bytes_transferred: int
        """

        self._ingress_bytes_transferred = ingress_bytes_transferred

    @property
    def ipsec_policies(self):
        """Gets the ipsec_policies of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.

        The IPSec Policies to be considered by this connection.

        :return: The ipsec_policies of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.
        :rtype: List[IpsecPolicy]
        """
        return self._ipsec_policies

    @ipsec_policies.setter
    def ipsec_policies(self, ipsec_policies):
        """Sets the ipsec_policies of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.

        The IPSec Policies to be considered by this connection.

        :param ipsec_policies: The ipsec_policies of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.
        :type ipsec_policies: List[IpsecPolicy]
        """

        self._ipsec_policies = ipsec_policies

    @property
    def local_network_gateway2(self):
        """Gets the local_network_gateway2 of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.


        :return: The local_network_gateway2 of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.
        :rtype: VirtualNetworkConnectionGatewayReference
        """
        return self._local_network_gateway2

    @local_network_gateway2.setter
    def local_network_gateway2(self, local_network_gateway2):
        """Sets the local_network_gateway2 of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.


        :param local_network_gateway2: The local_network_gateway2 of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.
        :type local_network_gateway2: VirtualNetworkConnectionGatewayReference
        """

        self._local_network_gateway2 = local_network_gateway2

    @property
    def peer(self):
        """Gets the peer of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.


        :return: The peer of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.
        :rtype: VirtualNetworkGatewayConnectionListEntityPropertiesFormatPeer
        """
        return self._peer

    @peer.setter
    def peer(self, peer):
        """Sets the peer of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.


        :param peer: The peer of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.
        :type peer: VirtualNetworkGatewayConnectionListEntityPropertiesFormatPeer
        """

        self._peer = peer

    @property
    def provisioning_state(self):
        """Gets the provisioning_state of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.

        The provisioning state of the VirtualNetworkGatewayConnection resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.

        :return: The provisioning_state of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.
        :rtype: str
        """
        return self._provisioning_state

    @provisioning_state.setter
    def provisioning_state(self, provisioning_state):
        """Sets the provisioning_state of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.

        The provisioning state of the VirtualNetworkGatewayConnection resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.

        :param provisioning_state: The provisioning_state of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.
        :type provisioning_state: str
        """

        self._provisioning_state = provisioning_state

    @property
    def resource_guid(self):
        """Gets the resource_guid of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.

        The resource GUID property of the VirtualNetworkGatewayConnection resource.

        :return: The resource_guid of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.
        :rtype: str
        """
        return self._resource_guid

    @resource_guid.setter
    def resource_guid(self, resource_guid):
        """Sets the resource_guid of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.

        The resource GUID property of the VirtualNetworkGatewayConnection resource.

        :param resource_guid: The resource_guid of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.
        :type resource_guid: str
        """

        self._resource_guid = resource_guid

    @property
    def routing_weight(self):
        """Gets the routing_weight of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.

        The routing weight.

        :return: The routing_weight of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.
        :rtype: int
        """
        return self._routing_weight

    @routing_weight.setter
    def routing_weight(self, routing_weight):
        """Sets the routing_weight of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.

        The routing weight.

        :param routing_weight: The routing_weight of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.
        :type routing_weight: int
        """

        self._routing_weight = routing_weight

    @property
    def shared_key(self):
        """Gets the shared_key of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.

        The IPSec shared key.

        :return: The shared_key of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.
        :rtype: str
        """
        return self._shared_key

    @shared_key.setter
    def shared_key(self, shared_key):
        """Sets the shared_key of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.

        The IPSec shared key.

        :param shared_key: The shared_key of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.
        :type shared_key: str
        """

        self._shared_key = shared_key

    @property
    def tunnel_connection_status(self):
        """Gets the tunnel_connection_status of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.

        Collection of all tunnels' connection health status.

        :return: The tunnel_connection_status of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.
        :rtype: List[TunnelConnectionHealth]
        """
        return self._tunnel_connection_status

    @tunnel_connection_status.setter
    def tunnel_connection_status(self, tunnel_connection_status):
        """Sets the tunnel_connection_status of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.

        Collection of all tunnels' connection health status.

        :param tunnel_connection_status: The tunnel_connection_status of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.
        :type tunnel_connection_status: List[TunnelConnectionHealth]
        """

        self._tunnel_connection_status = tunnel_connection_status

    @property
    def use_policy_based_traffic_selectors(self):
        """Gets the use_policy_based_traffic_selectors of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.

        Enable policy-based traffic selectors.

        :return: The use_policy_based_traffic_selectors of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.
        :rtype: bool
        """
        return self._use_policy_based_traffic_selectors

    @use_policy_based_traffic_selectors.setter
    def use_policy_based_traffic_selectors(self, use_policy_based_traffic_selectors):
        """Sets the use_policy_based_traffic_selectors of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.

        Enable policy-based traffic selectors.

        :param use_policy_based_traffic_selectors: The use_policy_based_traffic_selectors of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.
        :type use_policy_based_traffic_selectors: bool
        """

        self._use_policy_based_traffic_selectors = use_policy_based_traffic_selectors

    @property
    def virtual_network_gateway1(self):
        """Gets the virtual_network_gateway1 of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.


        :return: The virtual_network_gateway1 of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.
        :rtype: VirtualNetworkConnectionGatewayReference
        """
        return self._virtual_network_gateway1

    @virtual_network_gateway1.setter
    def virtual_network_gateway1(self, virtual_network_gateway1):
        """Sets the virtual_network_gateway1 of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.


        :param virtual_network_gateway1: The virtual_network_gateway1 of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.
        :type virtual_network_gateway1: VirtualNetworkConnectionGatewayReference
        """
        if virtual_network_gateway1 is None:
            raise ValueError("Invalid value for `virtual_network_gateway1`, must not be `None`")

        self._virtual_network_gateway1 = virtual_network_gateway1

    @property
    def virtual_network_gateway2(self):
        """Gets the virtual_network_gateway2 of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.


        :return: The virtual_network_gateway2 of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.
        :rtype: VirtualNetworkConnectionGatewayReference
        """
        return self._virtual_network_gateway2

    @virtual_network_gateway2.setter
    def virtual_network_gateway2(self, virtual_network_gateway2):
        """Sets the virtual_network_gateway2 of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.


        :param virtual_network_gateway2: The virtual_network_gateway2 of this VirtualNetworkGatewayConnectionListEntityPropertiesFormat.
        :type virtual_network_gateway2: VirtualNetworkConnectionGatewayReference
        """

        self._virtual_network_gateway2 = virtual_network_gateway2
