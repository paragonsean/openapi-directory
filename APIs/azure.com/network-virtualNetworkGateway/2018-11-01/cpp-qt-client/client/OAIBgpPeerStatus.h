/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2018-11-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBgpPeerStatus.h
 *
 * BGP peer status details
 */

#ifndef OAIBgpPeerStatus_H
#define OAIBgpPeerStatus_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIBgpPeerStatus : public OAIObject {
public:
    OAIBgpPeerStatus();
    OAIBgpPeerStatus(QString json);
    ~OAIBgpPeerStatus() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getAsn() const;
    void setAsn(const qint32 &asn);
    bool is_asn_Set() const;
    bool is_asn_Valid() const;

    QString getConnectedDuration() const;
    void setConnectedDuration(const QString &connected_duration);
    bool is_connected_duration_Set() const;
    bool is_connected_duration_Valid() const;

    QString getLocalAddress() const;
    void setLocalAddress(const QString &local_address);
    bool is_local_address_Set() const;
    bool is_local_address_Valid() const;

    qint64 getMessagesReceived() const;
    void setMessagesReceived(const qint64 &messages_received);
    bool is_messages_received_Set() const;
    bool is_messages_received_Valid() const;

    qint64 getMessagesSent() const;
    void setMessagesSent(const qint64 &messages_sent);
    bool is_messages_sent_Set() const;
    bool is_messages_sent_Valid() const;

    QString getNeighbor() const;
    void setNeighbor(const QString &neighbor);
    bool is_neighbor_Set() const;
    bool is_neighbor_Valid() const;

    qint64 getRoutesReceived() const;
    void setRoutesReceived(const qint64 &routes_received);
    bool is_routes_received_Set() const;
    bool is_routes_received_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_asn;
    bool m_asn_isSet;
    bool m_asn_isValid;

    QString m_connected_duration;
    bool m_connected_duration_isSet;
    bool m_connected_duration_isValid;

    QString m_local_address;
    bool m_local_address_isSet;
    bool m_local_address_isValid;

    qint64 m_messages_received;
    bool m_messages_received_isSet;
    bool m_messages_received_isValid;

    qint64 m_messages_sent;
    bool m_messages_sent_isSet;
    bool m_messages_sent_isValid;

    QString m_neighbor;
    bool m_neighbor_isSet;
    bool m_neighbor_isValid;

    qint64 m_routes_received;
    bool m_routes_received_isSet;
    bool m_routes_received_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBgpPeerStatus)

#endif // OAIBgpPeerStatus_H
