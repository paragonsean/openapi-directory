/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2018-11-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIConnectionProtocol.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIConnectionProtocol::OAIConnectionProtocol(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIConnectionProtocol::OAIConnectionProtocol() {
    this->initializeModel();
}

OAIConnectionProtocol::~OAIConnectionProtocol() {}

void OAIConnectionProtocol::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIConnectionProtocol::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIConnectionProtocol::fromJson(QString jsonString) {
    
    if ( jsonString.compare("IKEv2", Qt::CaseInsensitive) == 0) {
        m_value = eOAIConnectionProtocol::IKEV2;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("IKEv1", Qt::CaseInsensitive) == 0) {
        m_value = eOAIConnectionProtocol::IKEV1;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIConnectionProtocol::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIConnectionProtocol::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIConnectionProtocol::IKEV2:
            val = "IKEv2";
            break;
        case eOAIConnectionProtocol::IKEV1:
            val = "IKEv1";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIConnectionProtocol::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIConnectionProtocol::eOAIConnectionProtocol OAIConnectionProtocol::getValue() const {
    return m_value;
}

void OAIConnectionProtocol::setValue(const OAIConnectionProtocol::eOAIConnectionProtocol& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIConnectionProtocol::isSet() const {
    
    return m_value_isSet;
}

bool OAIConnectionProtocol::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
