/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2018-12-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import BgpPeerStatusListResult from '../model/BgpPeerStatusListResult';
import GatewayRouteListResult from '../model/GatewayRouteListResult';
import VirtualNetworkGateway from '../model/VirtualNetworkGateway';
import VirtualNetworkGatewayConnectionsUpdateTagsRequest from '../model/VirtualNetworkGatewayConnectionsUpdateTagsRequest';
import VirtualNetworkGatewayListConnectionsResult from '../model/VirtualNetworkGatewayListConnectionsResult';
import VirtualNetworkGatewayListResult from '../model/VirtualNetworkGatewayListResult';
import VpnClientIPsecParameters from '../model/VpnClientIPsecParameters';
import VpnClientParameters from '../model/VpnClientParameters';
import VpnDeviceScriptParameters from '../model/VpnDeviceScriptParameters';

/**
* VirtualNetworkGateways service.
* @module api/VirtualNetworkGatewaysApi
* @version 2018-12-01
*/
export default class VirtualNetworkGatewaysApi {

    /**
    * Constructs a new VirtualNetworkGatewaysApi. 
    * @alias module:api/VirtualNetworkGatewaysApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the virtualNetworkGatewaysCreateOrUpdate operation.
     * @callback module:api/VirtualNetworkGatewaysApi~virtualNetworkGatewaysCreateOrUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VirtualNetworkGateway} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates or updates a virtual network gateway in the specified resource group.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} virtualNetworkGatewayName The name of the virtual network gateway.
     * @param {String} apiVersion Client API version.
     * @param {String} subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:model/VirtualNetworkGateway} parameters Parameters supplied to create or update virtual network gateway operation.
     * @param {module:api/VirtualNetworkGatewaysApi~virtualNetworkGatewaysCreateOrUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VirtualNetworkGateway}
     */
    virtualNetworkGatewaysCreateOrUpdate(resourceGroupName, virtualNetworkGatewayName, apiVersion, subscriptionId, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling virtualNetworkGatewaysCreateOrUpdate");
      }
      // verify the required parameter 'virtualNetworkGatewayName' is set
      if (virtualNetworkGatewayName === undefined || virtualNetworkGatewayName === null) {
        throw new Error("Missing the required parameter 'virtualNetworkGatewayName' when calling virtualNetworkGatewaysCreateOrUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling virtualNetworkGatewaysCreateOrUpdate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling virtualNetworkGatewaysCreateOrUpdate");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling virtualNetworkGatewaysCreateOrUpdate");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'virtualNetworkGatewayName': virtualNetworkGatewayName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = VirtualNetworkGateway;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the virtualNetworkGatewaysDelete operation.
     * @callback module:api/VirtualNetworkGatewaysApi~virtualNetworkGatewaysDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes the specified virtual network gateway.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} virtualNetworkGatewayName The name of the virtual network gateway.
     * @param {String} apiVersion Client API version.
     * @param {String} subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/VirtualNetworkGatewaysApi~virtualNetworkGatewaysDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    virtualNetworkGatewaysDelete(resourceGroupName, virtualNetworkGatewayName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling virtualNetworkGatewaysDelete");
      }
      // verify the required parameter 'virtualNetworkGatewayName' is set
      if (virtualNetworkGatewayName === undefined || virtualNetworkGatewayName === null) {
        throw new Error("Missing the required parameter 'virtualNetworkGatewayName' when calling virtualNetworkGatewaysDelete");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling virtualNetworkGatewaysDelete");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling virtualNetworkGatewaysDelete");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'virtualNetworkGatewayName': virtualNetworkGatewayName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the virtualNetworkGatewaysGenerateVpnProfile operation.
     * @callback module:api/VirtualNetworkGatewaysApi~virtualNetworkGatewaysGenerateVpnProfileCallback
     * @param {String} error Error message, if any.
     * @param {String} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Generates VPN profile for P2S client of the virtual network gateway in the specified resource group. Used for IKEV2 and radius based authentication.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} virtualNetworkGatewayName The name of the virtual network gateway.
     * @param {String} apiVersion Client API version.
     * @param {String} subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:model/VpnClientParameters} parameters Parameters supplied to the generate virtual network gateway VPN client package operation.
     * @param {module:api/VirtualNetworkGatewaysApi~virtualNetworkGatewaysGenerateVpnProfileCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link String}
     */
    virtualNetworkGatewaysGenerateVpnProfile(resourceGroupName, virtualNetworkGatewayName, apiVersion, subscriptionId, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling virtualNetworkGatewaysGenerateVpnProfile");
      }
      // verify the required parameter 'virtualNetworkGatewayName' is set
      if (virtualNetworkGatewayName === undefined || virtualNetworkGatewayName === null) {
        throw new Error("Missing the required parameter 'virtualNetworkGatewayName' when calling virtualNetworkGatewaysGenerateVpnProfile");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling virtualNetworkGatewaysGenerateVpnProfile");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling virtualNetworkGatewaysGenerateVpnProfile");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling virtualNetworkGatewaysGenerateVpnProfile");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'virtualNetworkGatewayName': virtualNetworkGatewayName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = 'String';
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/generatevpnprofile', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the virtualNetworkGatewaysGeneratevpnclientpackage operation.
     * @callback module:api/VirtualNetworkGatewaysApi~virtualNetworkGatewaysGeneratevpnclientpackageCallback
     * @param {String} error Error message, if any.
     * @param {String} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Generates VPN client package for P2S client of the virtual network gateway in the specified resource group.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} virtualNetworkGatewayName The name of the virtual network gateway.
     * @param {String} apiVersion Client API version.
     * @param {String} subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:model/VpnClientParameters} parameters Parameters supplied to the generate virtual network gateway VPN client package operation.
     * @param {module:api/VirtualNetworkGatewaysApi~virtualNetworkGatewaysGeneratevpnclientpackageCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link String}
     */
    virtualNetworkGatewaysGeneratevpnclientpackage(resourceGroupName, virtualNetworkGatewayName, apiVersion, subscriptionId, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling virtualNetworkGatewaysGeneratevpnclientpackage");
      }
      // verify the required parameter 'virtualNetworkGatewayName' is set
      if (virtualNetworkGatewayName === undefined || virtualNetworkGatewayName === null) {
        throw new Error("Missing the required parameter 'virtualNetworkGatewayName' when calling virtualNetworkGatewaysGeneratevpnclientpackage");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling virtualNetworkGatewaysGeneratevpnclientpackage");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling virtualNetworkGatewaysGeneratevpnclientpackage");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling virtualNetworkGatewaysGeneratevpnclientpackage");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'virtualNetworkGatewayName': virtualNetworkGatewayName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = 'String';
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/generatevpnclientpackage', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the virtualNetworkGatewaysGet operation.
     * @callback module:api/VirtualNetworkGatewaysApi~virtualNetworkGatewaysGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VirtualNetworkGateway} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the specified virtual network gateway by resource group.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} virtualNetworkGatewayName The name of the virtual network gateway.
     * @param {String} apiVersion Client API version.
     * @param {String} subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/VirtualNetworkGatewaysApi~virtualNetworkGatewaysGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VirtualNetworkGateway}
     */
    virtualNetworkGatewaysGet(resourceGroupName, virtualNetworkGatewayName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling virtualNetworkGatewaysGet");
      }
      // verify the required parameter 'virtualNetworkGatewayName' is set
      if (virtualNetworkGatewayName === undefined || virtualNetworkGatewayName === null) {
        throw new Error("Missing the required parameter 'virtualNetworkGatewayName' when calling virtualNetworkGatewaysGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling virtualNetworkGatewaysGet");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling virtualNetworkGatewaysGet");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'virtualNetworkGatewayName': virtualNetworkGatewayName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = VirtualNetworkGateway;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the virtualNetworkGatewaysGetAdvertisedRoutes operation.
     * @callback module:api/VirtualNetworkGatewaysApi~virtualNetworkGatewaysGetAdvertisedRoutesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GatewayRouteListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * This operation retrieves a list of routes the virtual network gateway is advertising to the specified peer.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} virtualNetworkGatewayName The name of the virtual network gateway.
     * @param {String} peer The IP address of the peer
     * @param {String} apiVersion Client API version.
     * @param {String} subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/VirtualNetworkGatewaysApi~virtualNetworkGatewaysGetAdvertisedRoutesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GatewayRouteListResult}
     */
    virtualNetworkGatewaysGetAdvertisedRoutes(resourceGroupName, virtualNetworkGatewayName, peer, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling virtualNetworkGatewaysGetAdvertisedRoutes");
      }
      // verify the required parameter 'virtualNetworkGatewayName' is set
      if (virtualNetworkGatewayName === undefined || virtualNetworkGatewayName === null) {
        throw new Error("Missing the required parameter 'virtualNetworkGatewayName' when calling virtualNetworkGatewaysGetAdvertisedRoutes");
      }
      // verify the required parameter 'peer' is set
      if (peer === undefined || peer === null) {
        throw new Error("Missing the required parameter 'peer' when calling virtualNetworkGatewaysGetAdvertisedRoutes");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling virtualNetworkGatewaysGetAdvertisedRoutes");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling virtualNetworkGatewaysGetAdvertisedRoutes");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'virtualNetworkGatewayName': virtualNetworkGatewayName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'peer': peer,
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GatewayRouteListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/getAdvertisedRoutes', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the virtualNetworkGatewaysGetBgpPeerStatus operation.
     * @callback module:api/VirtualNetworkGatewaysApi~virtualNetworkGatewaysGetBgpPeerStatusCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BgpPeerStatusListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * The GetBgpPeerStatus operation retrieves the status of all BGP peers.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} virtualNetworkGatewayName The name of the virtual network gateway.
     * @param {String} apiVersion Client API version.
     * @param {String} subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {Object} opts Optional parameters
     * @param {String} [peer] The IP address of the peer to retrieve the status of.
     * @param {module:api/VirtualNetworkGatewaysApi~virtualNetworkGatewaysGetBgpPeerStatusCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BgpPeerStatusListResult}
     */
    virtualNetworkGatewaysGetBgpPeerStatus(resourceGroupName, virtualNetworkGatewayName, apiVersion, subscriptionId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling virtualNetworkGatewaysGetBgpPeerStatus");
      }
      // verify the required parameter 'virtualNetworkGatewayName' is set
      if (virtualNetworkGatewayName === undefined || virtualNetworkGatewayName === null) {
        throw new Error("Missing the required parameter 'virtualNetworkGatewayName' when calling virtualNetworkGatewaysGetBgpPeerStatus");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling virtualNetworkGatewaysGetBgpPeerStatus");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling virtualNetworkGatewaysGetBgpPeerStatus");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'virtualNetworkGatewayName': virtualNetworkGatewayName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'peer': opts['peer'],
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = BgpPeerStatusListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/getBgpPeerStatus', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the virtualNetworkGatewaysGetLearnedRoutes operation.
     * @callback module:api/VirtualNetworkGatewaysApi~virtualNetworkGatewaysGetLearnedRoutesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GatewayRouteListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * This operation retrieves a list of routes the virtual network gateway has learned, including routes learned from BGP peers.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} virtualNetworkGatewayName The name of the virtual network gateway.
     * @param {String} apiVersion Client API version.
     * @param {String} subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/VirtualNetworkGatewaysApi~virtualNetworkGatewaysGetLearnedRoutesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GatewayRouteListResult}
     */
    virtualNetworkGatewaysGetLearnedRoutes(resourceGroupName, virtualNetworkGatewayName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling virtualNetworkGatewaysGetLearnedRoutes");
      }
      // verify the required parameter 'virtualNetworkGatewayName' is set
      if (virtualNetworkGatewayName === undefined || virtualNetworkGatewayName === null) {
        throw new Error("Missing the required parameter 'virtualNetworkGatewayName' when calling virtualNetworkGatewaysGetLearnedRoutes");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling virtualNetworkGatewaysGetLearnedRoutes");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling virtualNetworkGatewaysGetLearnedRoutes");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'virtualNetworkGatewayName': virtualNetworkGatewayName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GatewayRouteListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/getLearnedRoutes', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the virtualNetworkGatewaysGetVpnProfilePackageUrl operation.
     * @callback module:api/VirtualNetworkGatewaysApi~virtualNetworkGatewaysGetVpnProfilePackageUrlCallback
     * @param {String} error Error message, if any.
     * @param {String} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets pre-generated VPN profile for P2S client of the virtual network gateway in the specified resource group. The profile needs to be generated first using generateVpnProfile.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} virtualNetworkGatewayName The name of the virtual network gateway.
     * @param {String} apiVersion Client API version.
     * @param {String} subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/VirtualNetworkGatewaysApi~virtualNetworkGatewaysGetVpnProfilePackageUrlCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link String}
     */
    virtualNetworkGatewaysGetVpnProfilePackageUrl(resourceGroupName, virtualNetworkGatewayName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling virtualNetworkGatewaysGetVpnProfilePackageUrl");
      }
      // verify the required parameter 'virtualNetworkGatewayName' is set
      if (virtualNetworkGatewayName === undefined || virtualNetworkGatewayName === null) {
        throw new Error("Missing the required parameter 'virtualNetworkGatewayName' when calling virtualNetworkGatewaysGetVpnProfilePackageUrl");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling virtualNetworkGatewaysGetVpnProfilePackageUrl");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling virtualNetworkGatewaysGetVpnProfilePackageUrl");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'virtualNetworkGatewayName': virtualNetworkGatewayName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = 'String';
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/getvpnprofilepackageurl', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the virtualNetworkGatewaysGetVpnclientIpsecParameters operation.
     * @callback module:api/VirtualNetworkGatewaysApi~virtualNetworkGatewaysGetVpnclientIpsecParametersCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VpnClientIPsecParameters} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * The Get VpnclientIpsecParameters operation retrieves information about the vpnclient ipsec policy for P2S client of virtual network gateway in the specified resource group through Network resource provider.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} virtualNetworkGatewayName The virtual network gateway name.
     * @param {String} apiVersion Client API version.
     * @param {String} subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/VirtualNetworkGatewaysApi~virtualNetworkGatewaysGetVpnclientIpsecParametersCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VpnClientIPsecParameters}
     */
    virtualNetworkGatewaysGetVpnclientIpsecParameters(resourceGroupName, virtualNetworkGatewayName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling virtualNetworkGatewaysGetVpnclientIpsecParameters");
      }
      // verify the required parameter 'virtualNetworkGatewayName' is set
      if (virtualNetworkGatewayName === undefined || virtualNetworkGatewayName === null) {
        throw new Error("Missing the required parameter 'virtualNetworkGatewayName' when calling virtualNetworkGatewaysGetVpnclientIpsecParameters");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling virtualNetworkGatewaysGetVpnclientIpsecParameters");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling virtualNetworkGatewaysGetVpnclientIpsecParameters");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'virtualNetworkGatewayName': virtualNetworkGatewayName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = VpnClientIPsecParameters;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/getvpnclientipsecparameters', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the virtualNetworkGatewaysList operation.
     * @callback module:api/VirtualNetworkGatewaysApi~virtualNetworkGatewaysListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VirtualNetworkGatewayListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets all virtual network gateways by resource group.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} apiVersion Client API version.
     * @param {String} subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/VirtualNetworkGatewaysApi~virtualNetworkGatewaysListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VirtualNetworkGatewayListResult}
     */
    virtualNetworkGatewaysList(resourceGroupName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling virtualNetworkGatewaysList");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling virtualNetworkGatewaysList");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling virtualNetworkGatewaysList");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = VirtualNetworkGatewayListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the virtualNetworkGatewaysListConnections operation.
     * @callback module:api/VirtualNetworkGatewaysApi~virtualNetworkGatewaysListConnectionsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VirtualNetworkGatewayListConnectionsResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets all the connections in a virtual network gateway.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} virtualNetworkGatewayName The name of the virtual network gateway.
     * @param {String} apiVersion Client API version.
     * @param {String} subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/VirtualNetworkGatewaysApi~virtualNetworkGatewaysListConnectionsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VirtualNetworkGatewayListConnectionsResult}
     */
    virtualNetworkGatewaysListConnections(resourceGroupName, virtualNetworkGatewayName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling virtualNetworkGatewaysListConnections");
      }
      // verify the required parameter 'virtualNetworkGatewayName' is set
      if (virtualNetworkGatewayName === undefined || virtualNetworkGatewayName === null) {
        throw new Error("Missing the required parameter 'virtualNetworkGatewayName' when calling virtualNetworkGatewaysListConnections");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling virtualNetworkGatewaysListConnections");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling virtualNetworkGatewaysListConnections");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'virtualNetworkGatewayName': virtualNetworkGatewayName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = VirtualNetworkGatewayListConnectionsResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/connections', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the virtualNetworkGatewaysReset operation.
     * @callback module:api/VirtualNetworkGatewaysApi~virtualNetworkGatewaysResetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VirtualNetworkGateway} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Resets the primary of the virtual network gateway in the specified resource group.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} virtualNetworkGatewayName The name of the virtual network gateway.
     * @param {String} apiVersion Client API version.
     * @param {String} subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {Object} opts Optional parameters
     * @param {String} [gatewayVip] Virtual network gateway vip address supplied to the begin reset of the active-active feature enabled gateway.
     * @param {module:api/VirtualNetworkGatewaysApi~virtualNetworkGatewaysResetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VirtualNetworkGateway}
     */
    virtualNetworkGatewaysReset(resourceGroupName, virtualNetworkGatewayName, apiVersion, subscriptionId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling virtualNetworkGatewaysReset");
      }
      // verify the required parameter 'virtualNetworkGatewayName' is set
      if (virtualNetworkGatewayName === undefined || virtualNetworkGatewayName === null) {
        throw new Error("Missing the required parameter 'virtualNetworkGatewayName' when calling virtualNetworkGatewaysReset");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling virtualNetworkGatewaysReset");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling virtualNetworkGatewaysReset");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'virtualNetworkGatewayName': virtualNetworkGatewayName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'gatewayVip': opts['gatewayVip'],
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = VirtualNetworkGateway;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/reset', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the virtualNetworkGatewaysResetVpnClientSharedKey operation.
     * @callback module:api/VirtualNetworkGatewaysApi~virtualNetworkGatewaysResetVpnClientSharedKeyCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Resets the VPN client shared key of the virtual network gateway in the specified resource group.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} virtualNetworkGatewayName The name of the virtual network gateway.
     * @param {String} apiVersion Client API version.
     * @param {String} subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/VirtualNetworkGatewaysApi~virtualNetworkGatewaysResetVpnClientSharedKeyCallback} callback The callback function, accepting three arguments: error, data, response
     */
    virtualNetworkGatewaysResetVpnClientSharedKey(resourceGroupName, virtualNetworkGatewayName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling virtualNetworkGatewaysResetVpnClientSharedKey");
      }
      // verify the required parameter 'virtualNetworkGatewayName' is set
      if (virtualNetworkGatewayName === undefined || virtualNetworkGatewayName === null) {
        throw new Error("Missing the required parameter 'virtualNetworkGatewayName' when calling virtualNetworkGatewaysResetVpnClientSharedKey");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling virtualNetworkGatewaysResetVpnClientSharedKey");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling virtualNetworkGatewaysResetVpnClientSharedKey");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'virtualNetworkGatewayName': virtualNetworkGatewayName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/resetvpnclientsharedkey', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the virtualNetworkGatewaysSetVpnclientIpsecParameters operation.
     * @callback module:api/VirtualNetworkGatewaysApi~virtualNetworkGatewaysSetVpnclientIpsecParametersCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VpnClientIPsecParameters} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * The Set VpnclientIpsecParameters operation sets the vpnclient ipsec policy for P2S client of virtual network gateway in the specified resource group through Network resource provider.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} virtualNetworkGatewayName The name of the virtual network gateway.
     * @param {String} apiVersion Client API version.
     * @param {String} subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:model/VpnClientIPsecParameters} vpnclientIpsecParams Parameters supplied to the Begin Set vpnclient ipsec parameters of Virtual Network Gateway P2S client operation through Network resource provider.
     * @param {module:api/VirtualNetworkGatewaysApi~virtualNetworkGatewaysSetVpnclientIpsecParametersCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VpnClientIPsecParameters}
     */
    virtualNetworkGatewaysSetVpnclientIpsecParameters(resourceGroupName, virtualNetworkGatewayName, apiVersion, subscriptionId, vpnclientIpsecParams, callback) {
      let postBody = vpnclientIpsecParams;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling virtualNetworkGatewaysSetVpnclientIpsecParameters");
      }
      // verify the required parameter 'virtualNetworkGatewayName' is set
      if (virtualNetworkGatewayName === undefined || virtualNetworkGatewayName === null) {
        throw new Error("Missing the required parameter 'virtualNetworkGatewayName' when calling virtualNetworkGatewaysSetVpnclientIpsecParameters");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling virtualNetworkGatewaysSetVpnclientIpsecParameters");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling virtualNetworkGatewaysSetVpnclientIpsecParameters");
      }
      // verify the required parameter 'vpnclientIpsecParams' is set
      if (vpnclientIpsecParams === undefined || vpnclientIpsecParams === null) {
        throw new Error("Missing the required parameter 'vpnclientIpsecParams' when calling virtualNetworkGatewaysSetVpnclientIpsecParameters");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'virtualNetworkGatewayName': virtualNetworkGatewayName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = VpnClientIPsecParameters;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/setvpnclientipsecparameters', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the virtualNetworkGatewaysSupportedVpnDevices operation.
     * @callback module:api/VirtualNetworkGatewaysApi~virtualNetworkGatewaysSupportedVpnDevicesCallback
     * @param {String} error Error message, if any.
     * @param {String} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets a xml format representation for supported vpn devices.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} virtualNetworkGatewayName The name of the virtual network gateway.
     * @param {String} apiVersion Client API version.
     * @param {String} subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/VirtualNetworkGatewaysApi~virtualNetworkGatewaysSupportedVpnDevicesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link String}
     */
    virtualNetworkGatewaysSupportedVpnDevices(resourceGroupName, virtualNetworkGatewayName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling virtualNetworkGatewaysSupportedVpnDevices");
      }
      // verify the required parameter 'virtualNetworkGatewayName' is set
      if (virtualNetworkGatewayName === undefined || virtualNetworkGatewayName === null) {
        throw new Error("Missing the required parameter 'virtualNetworkGatewayName' when calling virtualNetworkGatewaysSupportedVpnDevices");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling virtualNetworkGatewaysSupportedVpnDevices");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling virtualNetworkGatewaysSupportedVpnDevices");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'virtualNetworkGatewayName': virtualNetworkGatewayName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = 'String';
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/supportedvpndevices', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the virtualNetworkGatewaysUpdateTags operation.
     * @callback module:api/VirtualNetworkGatewaysApi~virtualNetworkGatewaysUpdateTagsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VirtualNetworkGateway} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates a virtual network gateway tags.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} virtualNetworkGatewayName The name of the virtual network gateway.
     * @param {String} apiVersion Client API version.
     * @param {String} subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:model/VirtualNetworkGatewayConnectionsUpdateTagsRequest} parameters Parameters supplied to update virtual network gateway tags.
     * @param {module:api/VirtualNetworkGatewaysApi~virtualNetworkGatewaysUpdateTagsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VirtualNetworkGateway}
     */
    virtualNetworkGatewaysUpdateTags(resourceGroupName, virtualNetworkGatewayName, apiVersion, subscriptionId, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling virtualNetworkGatewaysUpdateTags");
      }
      // verify the required parameter 'virtualNetworkGatewayName' is set
      if (virtualNetworkGatewayName === undefined || virtualNetworkGatewayName === null) {
        throw new Error("Missing the required parameter 'virtualNetworkGatewayName' when calling virtualNetworkGatewaysUpdateTags");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling virtualNetworkGatewaysUpdateTags");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling virtualNetworkGatewaysUpdateTags");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling virtualNetworkGatewaysUpdateTags");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'virtualNetworkGatewayName': virtualNetworkGatewayName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = VirtualNetworkGateway;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the virtualNetworkGatewaysVpnDeviceConfigurationScript operation.
     * @callback module:api/VirtualNetworkGatewaysApi~virtualNetworkGatewaysVpnDeviceConfigurationScriptCallback
     * @param {String} error Error message, if any.
     * @param {String} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets a xml format representation for vpn device configuration script.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} virtualNetworkGatewayConnectionName The name of the virtual network gateway connection for which the configuration script is generated.
     * @param {String} apiVersion Client API version.
     * @param {String} subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:model/VpnDeviceScriptParameters} parameters Parameters supplied to the generate vpn device script operation.
     * @param {module:api/VirtualNetworkGatewaysApi~virtualNetworkGatewaysVpnDeviceConfigurationScriptCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link String}
     */
    virtualNetworkGatewaysVpnDeviceConfigurationScript(resourceGroupName, virtualNetworkGatewayConnectionName, apiVersion, subscriptionId, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling virtualNetworkGatewaysVpnDeviceConfigurationScript");
      }
      // verify the required parameter 'virtualNetworkGatewayConnectionName' is set
      if (virtualNetworkGatewayConnectionName === undefined || virtualNetworkGatewayConnectionName === null) {
        throw new Error("Missing the required parameter 'virtualNetworkGatewayConnectionName' when calling virtualNetworkGatewaysVpnDeviceConfigurationScript");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling virtualNetworkGatewaysVpnDeviceConfigurationScript");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling virtualNetworkGatewaysVpnDeviceConfigurationScript");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling virtualNetworkGatewaysVpnDeviceConfigurationScript");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'virtualNetworkGatewayConnectionName': virtualNetworkGatewayConnectionName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = 'String';
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}/vpndeviceconfigurationscript', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
