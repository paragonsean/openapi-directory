/**
 * DeploymentScriptsClient
 * The APIs listed in this specification can be used to manage Deployment Scripts resource through the Azure Resource Manager.
 *
 * The version of the OpenAPI document: 2019-10-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILogProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILogProperties::OAILogProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILogProperties::OAILogProperties() {
    this->initializeModel();
}

OAILogProperties::~OAILogProperties() {}

void OAILogProperties::initializeModel() {

    m_log_isSet = false;
    m_log_isValid = false;
}

void OAILogProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILogProperties::fromJsonObject(QJsonObject json) {

    m_log_isValid = ::OpenAPI::fromJsonValue(m_log, json[QString("log")]);
    m_log_isSet = !json[QString("log")].isNull() && m_log_isValid;
}

QString OAILogProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILogProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_log_isSet) {
        obj.insert(QString("log"), ::OpenAPI::toJsonValue(m_log));
    }
    return obj;
}

QString OAILogProperties::getLog() const {
    return m_log;
}
void OAILogProperties::setLog(const QString &log) {
    m_log = log;
    m_log_isSet = true;
}

bool OAILogProperties::is_log_Set() const{
    return m_log_isSet;
}

bool OAILogProperties::is_log_Valid() const{
    return m_log_isValid;
}

bool OAILogProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_log_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILogProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
