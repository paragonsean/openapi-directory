/**
 * DeploymentScriptsClient
 * The APIs listed in this specification can be used to manage Deployment Scripts resource through the Azure Resource Manager.
 *
 * The version of the OpenAPI document: 2019-10-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAzurePowerShellScriptProperties.h
 *
 * Properties of the Azure PowerShell script object.
 */

#ifndef OAIAzurePowerShellScriptProperties_H
#define OAIAzurePowerShellScriptProperties_H

#include <QJsonObject>

#include "OAIEnvironmentVariable.h"
#include "OAIObject.h"
#include "OAIScriptStatus.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIScriptStatus;
class OAIEnvironmentVariable;

class OAIAzurePowerShellScriptProperties : public OAIObject {
public:
    OAIAzurePowerShellScriptProperties();
    OAIAzurePowerShellScriptProperties(QString json);
    ~OAIAzurePowerShellScriptProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAzPowerShellVersion() const;
    void setAzPowerShellVersion(const QString &az_power_shell_version);
    bool is_az_power_shell_version_Set() const;
    bool is_az_power_shell_version_Valid() const;

    QString getCleanupPreference() const;
    void setCleanupPreference(const QString &cleanup_preference);
    bool is_cleanup_preference_Set() const;
    bool is_cleanup_preference_Valid() const;

    QMap<QString, OAIObject> getOutputs() const;
    void setOutputs(const QMap<QString, OAIObject> &outputs);
    bool is_outputs_Set() const;
    bool is_outputs_Valid() const;

    QString getProvisioningState() const;
    void setProvisioningState(const QString &provisioning_state);
    bool is_provisioning_state_Set() const;
    bool is_provisioning_state_Valid() const;

    OAIScriptStatus getStatus() const;
    void setStatus(const OAIScriptStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getArguments() const;
    void setArguments(const QString &arguments);
    bool is_arguments_Set() const;
    bool is_arguments_Valid() const;

    QList<OAIEnvironmentVariable> getEnvironmentVariables() const;
    void setEnvironmentVariables(const QList<OAIEnvironmentVariable> &environment_variables);
    bool is_environment_variables_Set() const;
    bool is_environment_variables_Valid() const;

    QString getForceUpdateTag() const;
    void setForceUpdateTag(const QString &force_update_tag);
    bool is_force_update_tag_Set() const;
    bool is_force_update_tag_Valid() const;

    QString getPrimaryScriptUri() const;
    void setPrimaryScriptUri(const QString &primary_script_uri);
    bool is_primary_script_uri_Set() const;
    bool is_primary_script_uri_Valid() const;

    QString getRetentionInterval() const;
    void setRetentionInterval(const QString &retention_interval);
    bool is_retention_interval_Set() const;
    bool is_retention_interval_Valid() const;

    QString getScriptContent() const;
    void setScriptContent(const QString &script_content);
    bool is_script_content_Set() const;
    bool is_script_content_Valid() const;

    QList<QString> getSupportingScriptUris() const;
    void setSupportingScriptUris(const QList<QString> &supporting_script_uris);
    bool is_supporting_script_uris_Set() const;
    bool is_supporting_script_uris_Valid() const;

    QString getTimeout() const;
    void setTimeout(const QString &timeout);
    bool is_timeout_Set() const;
    bool is_timeout_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_az_power_shell_version;
    bool m_az_power_shell_version_isSet;
    bool m_az_power_shell_version_isValid;

    QString m_cleanup_preference;
    bool m_cleanup_preference_isSet;
    bool m_cleanup_preference_isValid;

    QMap<QString, OAIObject> m_outputs;
    bool m_outputs_isSet;
    bool m_outputs_isValid;

    QString m_provisioning_state;
    bool m_provisioning_state_isSet;
    bool m_provisioning_state_isValid;

    OAIScriptStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_arguments;
    bool m_arguments_isSet;
    bool m_arguments_isValid;

    QList<OAIEnvironmentVariable> m_environment_variables;
    bool m_environment_variables_isSet;
    bool m_environment_variables_isValid;

    QString m_force_update_tag;
    bool m_force_update_tag_isSet;
    bool m_force_update_tag_isValid;

    QString m_primary_script_uri;
    bool m_primary_script_uri_isSet;
    bool m_primary_script_uri_isValid;

    QString m_retention_interval;
    bool m_retention_interval_isSet;
    bool m_retention_interval_isValid;

    QString m_script_content;
    bool m_script_content_isSet;
    bool m_script_content_isValid;

    QList<QString> m_supporting_script_uris;
    bool m_supporting_script_uris_isSet;
    bool m_supporting_script_uris_isValid;

    QString m_timeout;
    bool m_timeout_isSet;
    bool m_timeout_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAzurePowerShellScriptProperties)

#endif // OAIAzurePowerShellScriptProperties_H
