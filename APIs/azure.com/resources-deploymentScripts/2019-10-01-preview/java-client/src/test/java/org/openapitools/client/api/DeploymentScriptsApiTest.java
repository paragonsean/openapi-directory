/*
 * DeploymentScriptsClient
 * The APIs listed in this specification can be used to manage Deployment Scripts resource through the Azure Resource Manager.
 *
 * The version of the OpenAPI document: 2019-10-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.DefaultErrorResponse;
import org.openapitools.client.model.DeploymentScript;
import org.openapitools.client.model.DeploymentScriptListResult;
import org.openapitools.client.model.DeploymentScriptUpdateParameter;
import org.openapitools.client.model.ScriptLog;
import org.openapitools.client.model.ScriptLogsList;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DeploymentScriptsApi
 */
@Disabled
public class DeploymentScriptsApiTest {

    private final DeploymentScriptsApi api = new DeploymentScriptsApi();

    /**
     * Creates a deployment script.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deploymentScriptsCreateTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String scriptName = null;
        String apiVersion = null;
        DeploymentScript deploymentScript = null;
        DeploymentScript response = api.deploymentScriptsCreate(subscriptionId, resourceGroupName, scriptName, apiVersion, deploymentScript);
        // TODO: test validations
    }

    /**
     * Deletes a deployment script. When operation completes, status code 200 returned without content.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deploymentScriptsDeleteTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String scriptName = null;
        String apiVersion = null;
        api.deploymentScriptsDelete(subscriptionId, resourceGroupName, scriptName, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets a deployment script with a given name.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deploymentScriptsGetTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String scriptName = null;
        String apiVersion = null;
        DeploymentScript response = api.deploymentScriptsGet(subscriptionId, resourceGroupName, scriptName, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets deployment script logs for a given deployment script name.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deploymentScriptsGetLogsTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String scriptName = null;
        String apiVersion = null;
        ScriptLogsList response = api.deploymentScriptsGetLogs(subscriptionId, resourceGroupName, scriptName, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets deployment script logs for a given deployment script name.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deploymentScriptsGetLogsDefaultTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String scriptName = null;
        String apiVersion = null;
        ScriptLog response = api.deploymentScriptsGetLogsDefault(subscriptionId, resourceGroupName, scriptName, apiVersion);
        // TODO: test validations
    }

    /**
     * Lists deployments scripts.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deploymentScriptsListByResourceGroupTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String apiVersion = null;
        DeploymentScriptListResult response = api.deploymentScriptsListByResourceGroup(subscriptionId, resourceGroupName, apiVersion);
        // TODO: test validations
    }

    /**
     * Lists all deployment scripts for a given subscription.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deploymentScriptsListBySubscriptionTest() throws ApiException {
        String subscriptionId = null;
        String apiVersion = null;
        DeploymentScriptListResult response = api.deploymentScriptsListBySubscription(subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Updates deployment script tags with specified values.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deploymentScriptsUpdateTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String scriptName = null;
        String apiVersion = null;
        DeploymentScriptUpdateParameter deploymentScript = null;
        DeploymentScript response = api.deploymentScriptsUpdate(subscriptionId, resourceGroupName, scriptName, apiVersion, deploymentScript);
        // TODO: test validations
    }

}
