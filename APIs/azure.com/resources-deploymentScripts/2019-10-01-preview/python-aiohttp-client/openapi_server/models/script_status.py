# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.default_error_response import DefaultErrorResponse
from openapi_server import util


class ScriptStatus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, container_instance_id: str=None, end_time: datetime=None, error: DefaultErrorResponse=None, expiration_time: datetime=None, start_time: datetime=None, storage_account_id: str=None):
        """ScriptStatus - a model defined in OpenAPI

        :param container_instance_id: The container_instance_id of this ScriptStatus.
        :param end_time: The end_time of this ScriptStatus.
        :param error: The error of this ScriptStatus.
        :param expiration_time: The expiration_time of this ScriptStatus.
        :param start_time: The start_time of this ScriptStatus.
        :param storage_account_id: The storage_account_id of this ScriptStatus.
        """
        self.openapi_types = {
            'container_instance_id': str,
            'end_time': datetime,
            'error': DefaultErrorResponse,
            'expiration_time': datetime,
            'start_time': datetime,
            'storage_account_id': str
        }

        self.attribute_map = {
            'container_instance_id': 'containerInstanceId',
            'end_time': 'endTime',
            'error': 'error',
            'expiration_time': 'expirationTime',
            'start_time': 'startTime',
            'storage_account_id': 'storageAccountId'
        }

        self._container_instance_id = container_instance_id
        self._end_time = end_time
        self._error = error
        self._expiration_time = expiration_time
        self._start_time = start_time
        self._storage_account_id = storage_account_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ScriptStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ScriptStatus of this ScriptStatus.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def container_instance_id(self):
        """Gets the container_instance_id of this ScriptStatus.

        ACI resource Id.

        :return: The container_instance_id of this ScriptStatus.
        :rtype: str
        """
        return self._container_instance_id

    @container_instance_id.setter
    def container_instance_id(self, container_instance_id):
        """Sets the container_instance_id of this ScriptStatus.

        ACI resource Id.

        :param container_instance_id: The container_instance_id of this ScriptStatus.
        :type container_instance_id: str
        """

        self._container_instance_id = container_instance_id

    @property
    def end_time(self):
        """Gets the end_time of this ScriptStatus.

        End time of the script execution.

        :return: The end_time of this ScriptStatus.
        :rtype: datetime
        """
        return self._end_time

    @end_time.setter
    def end_time(self, end_time):
        """Sets the end_time of this ScriptStatus.

        End time of the script execution.

        :param end_time: The end_time of this ScriptStatus.
        :type end_time: datetime
        """

        self._end_time = end_time

    @property
    def error(self):
        """Gets the error of this ScriptStatus.


        :return: The error of this ScriptStatus.
        :rtype: DefaultErrorResponse
        """
        return self._error

    @error.setter
    def error(self, error):
        """Sets the error of this ScriptStatus.


        :param error: The error of this ScriptStatus.
        :type error: DefaultErrorResponse
        """

        self._error = error

    @property
    def expiration_time(self):
        """Gets the expiration_time of this ScriptStatus.

        Time the deployment script resource will expire.

        :return: The expiration_time of this ScriptStatus.
        :rtype: datetime
        """
        return self._expiration_time

    @expiration_time.setter
    def expiration_time(self, expiration_time):
        """Sets the expiration_time of this ScriptStatus.

        Time the deployment script resource will expire.

        :param expiration_time: The expiration_time of this ScriptStatus.
        :type expiration_time: datetime
        """

        self._expiration_time = expiration_time

    @property
    def start_time(self):
        """Gets the start_time of this ScriptStatus.

        Start time of the script execution.

        :return: The start_time of this ScriptStatus.
        :rtype: datetime
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this ScriptStatus.

        Start time of the script execution.

        :param start_time: The start_time of this ScriptStatus.
        :type start_time: datetime
        """

        self._start_time = start_time

    @property
    def storage_account_id(self):
        """Gets the storage_account_id of this ScriptStatus.

        Storage account resource Id.

        :return: The storage_account_id of this ScriptStatus.
        :rtype: str
        """
        return self._storage_account_id

    @storage_account_id.setter
    def storage_account_id(self, storage_account_id):
        """Sets the storage_account_id of this ScriptStatus.

        Storage account resource Id.

        :param storage_account_id: The storage_account_id of this ScriptStatus.
        :type storage_account_id: str
        """

        self._storage_account_id = storage_account_id
