# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class LogProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, log: str=None):
        """LogProperties - a model defined in OpenAPI

        :param log: The log of this LogProperties.
        """
        self.openapi_types = {
            'log': str
        }

        self.attribute_map = {
            'log': 'log'
        }

        self._log = log

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LogProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LogProperties of this LogProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def log(self):
        """Gets the log of this LogProperties.

        Script execution logs in text format.

        :return: The log of this LogProperties.
        :rtype: str
        """
        return self._log

    @log.setter
    def log(self, log):
        """Sets the log of this LogProperties.

        Script execution logs in text format.

        :param log: The log of this LogProperties.
        :type log: str
        """

        self._log = log
