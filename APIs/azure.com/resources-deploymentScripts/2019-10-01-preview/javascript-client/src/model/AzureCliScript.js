/**
 * DeploymentScriptsClient
 * The APIs listed in this specification can be used to manage Deployment Scripts resource through the Azure Resource Manager.
 *
 * The version of the OpenAPI document: 2019-10-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AzureCliScriptProperties from './AzureCliScriptProperties';
import DeploymentScript from './DeploymentScript';
import ManagedServiceIdentity from './ManagedServiceIdentity';

/**
 * The AzureCliScript model module.
 * @module model/AzureCliScript
 * @version 2019-10-01-preview
 */
class AzureCliScript {
    /**
     * Constructs a new <code>AzureCliScript</code>.
     * Object model for the Azure CLI script.
     * @alias module:model/AzureCliScript
     * @implements module:model/DeploymentScript
     * @param identity {module:model/ManagedServiceIdentity} 
     * @param kind {module:model/AzureCliScript.KindEnum} Type of the script.
     * @param location {String} The location of the ACI and the storage account for the deployment script.
     */
    constructor(identity, kind, location) { 
        DeploymentScript.initialize(this);
        AzureCliScript.initialize(this, identity, kind, location);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, identity, kind, location) { 
        obj['properties'] = properties;
        obj['identity'] = identity;
        obj['kind'] = kind;
        obj['location'] = location;
    }

    /**
     * Constructs a <code>AzureCliScript</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AzureCliScript} obj Optional instance to populate.
     * @return {module:model/AzureCliScript} The populated <code>AzureCliScript</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AzureCliScript();
            DeploymentScript.constructFromObject(data, obj);

            if (data.hasOwnProperty('properties')) {
                obj['properties'] = AzureCliScriptProperties.constructFromObject(data['properties']);
            }
            if (data.hasOwnProperty('identity')) {
                obj['identity'] = ManagedServiceIdentity.constructFromObject(data['identity']);
            }
            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
            }
            if (data.hasOwnProperty('location')) {
                obj['location'] = ApiClient.convertToType(data['location'], 'String');
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], {'String': 'String'});
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AzureCliScript</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AzureCliScript</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AzureCliScript.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `properties`
        if (data['properties']) { // data not null
          AzureCliScriptProperties.validateJSON(data['properties']);
        }
        // validate the optional field `identity`
        if (data['identity']) { // data not null
          ManagedServiceIdentity.validateJSON(data['identity']);
        }
        // ensure the json data is a string
        if (data['kind'] && !(typeof data['kind'] === 'string' || data['kind'] instanceof String)) {
            throw new Error("Expected the field `kind` to be a primitive type in the JSON string but got " + data['kind']);
        }
        // ensure the json data is a string
        if (data['location'] && !(typeof data['location'] === 'string' || data['location'] instanceof String)) {
            throw new Error("Expected the field `location` to be a primitive type in the JSON string but got " + data['location']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}

AzureCliScript.RequiredProperties = ["properties", "identity", "kind", "location"];

/**
 * @member {module:model/AzureCliScriptProperties} properties
 */
AzureCliScript.prototype['properties'] = undefined;

/**
 * @member {module:model/ManagedServiceIdentity} identity
 */
AzureCliScript.prototype['identity'] = undefined;

/**
 * Type of the script.
 * @member {module:model/AzureCliScript.KindEnum} kind
 */
AzureCliScript.prototype['kind'] = undefined;

/**
 * The location of the ACI and the storage account for the deployment script.
 * @member {String} location
 */
AzureCliScript.prototype['location'] = undefined;

/**
 * Resource tags.
 * @member {Object.<String, String>} tags
 */
AzureCliScript.prototype['tags'] = undefined;

/**
 * String Id used to locate any resource on Azure.
 * @member {String} id
 */
AzureCliScript.prototype['id'] = undefined;

/**
 * Name of this resource.
 * @member {String} name
 */
AzureCliScript.prototype['name'] = undefined;

/**
 * Type of this resource.
 * @member {String} type
 */
AzureCliScript.prototype['type'] = undefined;


// Implement DeploymentScript interface:
/**
 * String Id used to locate any resource on Azure.
 * @member {String} id
 */
DeploymentScript.prototype['id'] = undefined;
/**
 * Name of this resource.
 * @member {String} name
 */
DeploymentScript.prototype['name'] = undefined;
/**
 * Type of this resource.
 * @member {String} type
 */
DeploymentScript.prototype['type'] = undefined;



/**
 * Allowed values for the <code>kind</code> property.
 * @enum {String}
 * @readonly
 */
AzureCliScript['KindEnum'] = {

    /**
     * value: "AzurePowerShell"
     * @const
     */
    "AzurePowerShell": "AzurePowerShell",

    /**
     * value: "AzureCLI"
     * @const
     */
    "AzureCLI": "AzureCLI"
};



export default AzureCliScript;

