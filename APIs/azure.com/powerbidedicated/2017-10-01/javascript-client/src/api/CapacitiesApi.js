/**
 * PowerBIDedicated
 * PowerBI Dedicated Web API provides a RESTful set of web services that enables users to create, retrieve, update, and delete Power BI dedicated capacities
 *
 * The version of the OpenAPI document: 2017-10-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CheckCapacityNameAvailabilityParameters from '../model/CheckCapacityNameAvailabilityParameters';
import CheckCapacityNameAvailabilityResult from '../model/CheckCapacityNameAvailabilityResult';
import DedicatedCapacities from '../model/DedicatedCapacities';
import DedicatedCapacity from '../model/DedicatedCapacity';
import DedicatedCapacityUpdateParameters from '../model/DedicatedCapacityUpdateParameters';
import SkuEnumerationForExistingResourceResult from '../model/SkuEnumerationForExistingResourceResult';

/**
* Capacities service.
* @module api/CapacitiesApi
* @version 2017-10-01
*/
export default class CapacitiesApi {

    /**
    * Constructs a new CapacitiesApi. 
    * @alias module:api/CapacitiesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the capacitiesCheckNameAvailability operation.
     * @callback module:api/CapacitiesApi~capacitiesCheckNameAvailabilityCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CheckCapacityNameAvailabilityResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Check the name availability in the target location.
     * @param {String} location The region name which the operation will lookup into.
     * @param {String} apiVersion The client API version.
     * @param {String} subscriptionId A unique identifier for a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:model/CheckCapacityNameAvailabilityParameters} capacityParameters The name of the capacity.
     * @param {module:api/CapacitiesApi~capacitiesCheckNameAvailabilityCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CheckCapacityNameAvailabilityResult}
     */
    capacitiesCheckNameAvailability(location, apiVersion, subscriptionId, capacityParameters, callback) {
      let postBody = capacityParameters;
      // verify the required parameter 'location' is set
      if (location === undefined || location === null) {
        throw new Error("Missing the required parameter 'location' when calling capacitiesCheckNameAvailability");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling capacitiesCheckNameAvailability");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling capacitiesCheckNameAvailability");
      }
      // verify the required parameter 'capacityParameters' is set
      if (capacityParameters === undefined || capacityParameters === null) {
        throw new Error("Missing the required parameter 'capacityParameters' when calling capacitiesCheckNameAvailability");
      }

      let pathParams = {
        'location': location,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CheckCapacityNameAvailabilityResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.PowerBIDedicated/locations/{location}/checkNameAvailability', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the capacitiesCreate operation.
     * @callback module:api/CapacitiesApi~capacitiesCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DedicatedCapacity} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Provisions the specified Dedicated capacity based on the configuration specified in the request.
     * @param {String} resourceGroupName The name of the Azure Resource group of which a given PowerBIDedicated capacity is part. This name must be at least 1 character in length, and no more than 90.
     * @param {String} dedicatedCapacityName The name of the Dedicated capacity. It must be a minimum of 3 characters, and a maximum of 63.
     * @param {String} apiVersion The client API version.
     * @param {String} subscriptionId A unique identifier for a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:model/DedicatedCapacity} capacityParameters Contains the information used to provision the Dedicated capacity.
     * @param {module:api/CapacitiesApi~capacitiesCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DedicatedCapacity}
     */
    capacitiesCreate(resourceGroupName, dedicatedCapacityName, apiVersion, subscriptionId, capacityParameters, callback) {
      let postBody = capacityParameters;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling capacitiesCreate");
      }
      // verify the required parameter 'dedicatedCapacityName' is set
      if (dedicatedCapacityName === undefined || dedicatedCapacityName === null) {
        throw new Error("Missing the required parameter 'dedicatedCapacityName' when calling capacitiesCreate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling capacitiesCreate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling capacitiesCreate");
      }
      // verify the required parameter 'capacityParameters' is set
      if (capacityParameters === undefined || capacityParameters === null) {
        throw new Error("Missing the required parameter 'capacityParameters' when calling capacitiesCreate");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'dedicatedCapacityName': dedicatedCapacityName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = DedicatedCapacity;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PowerBIDedicated/capacities/{dedicatedCapacityName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the capacitiesDelete operation.
     * @callback module:api/CapacitiesApi~capacitiesDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes the specified Dedicated capacity.
     * @param {String} resourceGroupName The name of the Azure Resource group of which a given PowerBIDedicated capacity is part. This name must be at least 1 character in length, and no more than 90.
     * @param {String} dedicatedCapacityName The name of the Dedicated capacity. It must be at least 3 characters in length, and no more than 63.
     * @param {String} apiVersion The client API version.
     * @param {String} subscriptionId A unique identifier for a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/CapacitiesApi~capacitiesDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    capacitiesDelete(resourceGroupName, dedicatedCapacityName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling capacitiesDelete");
      }
      // verify the required parameter 'dedicatedCapacityName' is set
      if (dedicatedCapacityName === undefined || dedicatedCapacityName === null) {
        throw new Error("Missing the required parameter 'dedicatedCapacityName' when calling capacitiesDelete");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling capacitiesDelete");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling capacitiesDelete");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'dedicatedCapacityName': dedicatedCapacityName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PowerBIDedicated/capacities/{dedicatedCapacityName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the capacitiesGetDetails operation.
     * @callback module:api/CapacitiesApi~capacitiesGetDetailsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DedicatedCapacity} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets details about the specified dedicated capacity.
     * @param {String} resourceGroupName The name of the Azure Resource group of which a given PowerBIDedicated capacity is part. This name must be at least 1 character in length, and no more than 90.
     * @param {String} dedicatedCapacityName The name of the dedicated capacity. It must be a minimum of 3 characters, and a maximum of 63.
     * @param {String} apiVersion The client API version.
     * @param {String} subscriptionId A unique identifier for a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/CapacitiesApi~capacitiesGetDetailsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DedicatedCapacity}
     */
    capacitiesGetDetails(resourceGroupName, dedicatedCapacityName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling capacitiesGetDetails");
      }
      // verify the required parameter 'dedicatedCapacityName' is set
      if (dedicatedCapacityName === undefined || dedicatedCapacityName === null) {
        throw new Error("Missing the required parameter 'dedicatedCapacityName' when calling capacitiesGetDetails");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling capacitiesGetDetails");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling capacitiesGetDetails");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'dedicatedCapacityName': dedicatedCapacityName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DedicatedCapacity;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PowerBIDedicated/capacities/{dedicatedCapacityName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the capacitiesList operation.
     * @callback module:api/CapacitiesApi~capacitiesListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DedicatedCapacities} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists all the Dedicated capacities for the given subscription.
     * @param {String} apiVersion The client API version.
     * @param {String} subscriptionId A unique identifier for a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/CapacitiesApi~capacitiesListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DedicatedCapacities}
     */
    capacitiesList(apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling capacitiesList");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling capacitiesList");
      }

      let pathParams = {
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DedicatedCapacities;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.PowerBIDedicated/capacities', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the capacitiesListByResourceGroup operation.
     * @callback module:api/CapacitiesApi~capacitiesListByResourceGroupCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DedicatedCapacities} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets all the Dedicated capacities for the given resource group.
     * @param {String} resourceGroupName The name of the Azure Resource group of which a given PowerBIDedicated capacity is part. This name must be at least 1 character in length, and no more than 90.
     * @param {String} apiVersion The client API version.
     * @param {String} subscriptionId A unique identifier for a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/CapacitiesApi~capacitiesListByResourceGroupCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DedicatedCapacities}
     */
    capacitiesListByResourceGroup(resourceGroupName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling capacitiesListByResourceGroup");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling capacitiesListByResourceGroup");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling capacitiesListByResourceGroup");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DedicatedCapacities;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PowerBIDedicated/capacities', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the capacitiesListSkusForCapacity operation.
     * @callback module:api/CapacitiesApi~capacitiesListSkusForCapacityCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SkuEnumerationForExistingResourceResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists eligible SKUs for a PowerBI Dedicated resource.
     * @param {String} resourceGroupName The name of the Azure Resource group of which a given PowerBIDedicated capacity is part. This name must be at least 1 character in length, and no more than 90.
     * @param {String} dedicatedCapacityName The name of the Dedicated capacity. It must be at least 3 characters in length, and no more than 63.
     * @param {String} apiVersion The client API version.
     * @param {String} subscriptionId A unique identifier for a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/CapacitiesApi~capacitiesListSkusForCapacityCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SkuEnumerationForExistingResourceResult}
     */
    capacitiesListSkusForCapacity(resourceGroupName, dedicatedCapacityName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling capacitiesListSkusForCapacity");
      }
      // verify the required parameter 'dedicatedCapacityName' is set
      if (dedicatedCapacityName === undefined || dedicatedCapacityName === null) {
        throw new Error("Missing the required parameter 'dedicatedCapacityName' when calling capacitiesListSkusForCapacity");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling capacitiesListSkusForCapacity");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling capacitiesListSkusForCapacity");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'dedicatedCapacityName': dedicatedCapacityName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = SkuEnumerationForExistingResourceResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PowerBIDedicated/capacities/{dedicatedCapacityName}/skus', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the capacitiesResume operation.
     * @callback module:api/CapacitiesApi~capacitiesResumeCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Resumes operation of the specified Dedicated capacity instance.
     * @param {String} resourceGroupName The name of the Azure Resource group of which a given PowerBIDedicated capacity is part. This name must be at least 1 character in length, and no more than 90.
     * @param {String} dedicatedCapacityName The name of the Dedicated capacity. It must be at least 3 characters in length, and no more than 63.
     * @param {String} apiVersion The client API version.
     * @param {String} subscriptionId A unique identifier for a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/CapacitiesApi~capacitiesResumeCallback} callback The callback function, accepting three arguments: error, data, response
     */
    capacitiesResume(resourceGroupName, dedicatedCapacityName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling capacitiesResume");
      }
      // verify the required parameter 'dedicatedCapacityName' is set
      if (dedicatedCapacityName === undefined || dedicatedCapacityName === null) {
        throw new Error("Missing the required parameter 'dedicatedCapacityName' when calling capacitiesResume");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling capacitiesResume");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling capacitiesResume");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'dedicatedCapacityName': dedicatedCapacityName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PowerBIDedicated/capacities/{dedicatedCapacityName}/resume', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the capacitiesSuspend operation.
     * @callback module:api/CapacitiesApi~capacitiesSuspendCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Suspends operation of the specified dedicated capacity instance.
     * @param {String} resourceGroupName The name of the Azure Resource group of which a given PowerBIDedicated capacity is part. This name must be at least 1 character in length, and no more than 90.
     * @param {String} dedicatedCapacityName The name of the Dedicated capacity. It must be at least 3 characters in length, and no more than 63.
     * @param {String} apiVersion The client API version.
     * @param {String} subscriptionId A unique identifier for a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/CapacitiesApi~capacitiesSuspendCallback} callback The callback function, accepting three arguments: error, data, response
     */
    capacitiesSuspend(resourceGroupName, dedicatedCapacityName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling capacitiesSuspend");
      }
      // verify the required parameter 'dedicatedCapacityName' is set
      if (dedicatedCapacityName === undefined || dedicatedCapacityName === null) {
        throw new Error("Missing the required parameter 'dedicatedCapacityName' when calling capacitiesSuspend");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling capacitiesSuspend");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling capacitiesSuspend");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'dedicatedCapacityName': dedicatedCapacityName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PowerBIDedicated/capacities/{dedicatedCapacityName}/suspend', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the capacitiesUpdate operation.
     * @callback module:api/CapacitiesApi~capacitiesUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DedicatedCapacity} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates the current state of the specified Dedicated capacity.
     * @param {String} resourceGroupName The name of the Azure Resource group of which a given PowerBIDedicated capacity is part. This name must be at least 1 character in length, and no more than 90.
     * @param {String} dedicatedCapacityName The name of the Dedicated capacity. It must be at least 3 characters in length, and no more than 63.
     * @param {String} apiVersion The client API version.
     * @param {String} subscriptionId A unique identifier for a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:model/DedicatedCapacityUpdateParameters} capacityUpdateParameters Request object that contains the updated information for the capacity.
     * @param {module:api/CapacitiesApi~capacitiesUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DedicatedCapacity}
     */
    capacitiesUpdate(resourceGroupName, dedicatedCapacityName, apiVersion, subscriptionId, capacityUpdateParameters, callback) {
      let postBody = capacityUpdateParameters;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling capacitiesUpdate");
      }
      // verify the required parameter 'dedicatedCapacityName' is set
      if (dedicatedCapacityName === undefined || dedicatedCapacityName === null) {
        throw new Error("Missing the required parameter 'dedicatedCapacityName' when calling capacitiesUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling capacitiesUpdate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling capacitiesUpdate");
      }
      // verify the required parameter 'capacityUpdateParameters' is set
      if (capacityUpdateParameters === undefined || capacityUpdateParameters === null) {
        throw new Error("Missing the required parameter 'capacityUpdateParameters' when calling capacitiesUpdate");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'dedicatedCapacityName': dedicatedCapacityName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = DedicatedCapacity;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PowerBIDedicated/capacities/{dedicatedCapacityName}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
