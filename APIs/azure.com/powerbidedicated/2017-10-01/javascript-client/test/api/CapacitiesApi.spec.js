/**
 * PowerBIDedicated
 * PowerBI Dedicated Web API provides a RESTful set of web services that enables users to create, retrieve, update, and delete Power BI dedicated capacities
 *
 * The version of the OpenAPI document: 2017-10-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.PowerBiDedicated);
  }
}(this, function(expect, PowerBiDedicated) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new PowerBiDedicated.CapacitiesApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CapacitiesApi', function() {
    describe('capacitiesCheckNameAvailability', function() {
      it('should call capacitiesCheckNameAvailability successfully', function(done) {
        //uncomment below and update the code to test capacitiesCheckNameAvailability
        //instance.capacitiesCheckNameAvailability(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('capacitiesCreate', function() {
      it('should call capacitiesCreate successfully', function(done) {
        //uncomment below and update the code to test capacitiesCreate
        //instance.capacitiesCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('capacitiesDelete', function() {
      it('should call capacitiesDelete successfully', function(done) {
        //uncomment below and update the code to test capacitiesDelete
        //instance.capacitiesDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('capacitiesGetDetails', function() {
      it('should call capacitiesGetDetails successfully', function(done) {
        //uncomment below and update the code to test capacitiesGetDetails
        //instance.capacitiesGetDetails(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('capacitiesList', function() {
      it('should call capacitiesList successfully', function(done) {
        //uncomment below and update the code to test capacitiesList
        //instance.capacitiesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('capacitiesListByResourceGroup', function() {
      it('should call capacitiesListByResourceGroup successfully', function(done) {
        //uncomment below and update the code to test capacitiesListByResourceGroup
        //instance.capacitiesListByResourceGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('capacitiesListSkusForCapacity', function() {
      it('should call capacitiesListSkusForCapacity successfully', function(done) {
        //uncomment below and update the code to test capacitiesListSkusForCapacity
        //instance.capacitiesListSkusForCapacity(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('capacitiesResume', function() {
      it('should call capacitiesResume successfully', function(done) {
        //uncomment below and update the code to test capacitiesResume
        //instance.capacitiesResume(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('capacitiesSuspend', function() {
      it('should call capacitiesSuspend successfully', function(done) {
        //uncomment below and update the code to test capacitiesSuspend
        //instance.capacitiesSuspend(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('capacitiesUpdate', function() {
      it('should call capacitiesUpdate successfully', function(done) {
        //uncomment below and update the code to test capacitiesUpdate
        //instance.capacitiesUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
