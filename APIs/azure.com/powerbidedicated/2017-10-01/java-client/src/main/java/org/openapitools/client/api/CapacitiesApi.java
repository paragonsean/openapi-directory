/*
 * PowerBIDedicated
 * PowerBI Dedicated Web API provides a RESTful set of web services that enables users to create, retrieve, update, and delete Power BI dedicated capacities
 *
 * The version of the OpenAPI document: 2017-10-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.CheckCapacityNameAvailabilityParameters;
import org.openapitools.client.model.CheckCapacityNameAvailabilityResult;
import org.openapitools.client.model.DedicatedCapacities;
import org.openapitools.client.model.DedicatedCapacity;
import org.openapitools.client.model.DedicatedCapacityUpdateParameters;
import org.openapitools.client.model.SkuEnumerationForExistingResourceResult;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class CapacitiesApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public CapacitiesApi() {
        this(Configuration.getDefaultApiClient());
    }

    public CapacitiesApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for capacitiesCheckNameAvailability
     * @param location The region name which the operation will lookup into. (required)
     * @param apiVersion The client API version. (required)
     * @param subscriptionId A unique identifier for a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param capacityParameters The name of the capacity. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call capacitiesCheckNameAvailabilityCall(String location, String apiVersion, String subscriptionId, CheckCapacityNameAvailabilityParameters capacityParameters, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = capacityParameters;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/providers/Microsoft.PowerBIDedicated/locations/{location}/checkNameAvailability"
            .replace("{" + "location" + "}", localVarApiClient.escapeString(location.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call capacitiesCheckNameAvailabilityValidateBeforeCall(String location, String apiVersion, String subscriptionId, CheckCapacityNameAvailabilityParameters capacityParameters, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'location' is set
        if (location == null) {
            throw new ApiException("Missing the required parameter 'location' when calling capacitiesCheckNameAvailability(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling capacitiesCheckNameAvailability(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling capacitiesCheckNameAvailability(Async)");
        }

        // verify the required parameter 'capacityParameters' is set
        if (capacityParameters == null) {
            throw new ApiException("Missing the required parameter 'capacityParameters' when calling capacitiesCheckNameAvailability(Async)");
        }

        return capacitiesCheckNameAvailabilityCall(location, apiVersion, subscriptionId, capacityParameters, _callback);

    }

    /**
     * 
     * Check the name availability in the target location.
     * @param location The region name which the operation will lookup into. (required)
     * @param apiVersion The client API version. (required)
     * @param subscriptionId A unique identifier for a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param capacityParameters The name of the capacity. (required)
     * @return CheckCapacityNameAvailabilityResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
     </table>
     */
    public CheckCapacityNameAvailabilityResult capacitiesCheckNameAvailability(String location, String apiVersion, String subscriptionId, CheckCapacityNameAvailabilityParameters capacityParameters) throws ApiException {
        ApiResponse<CheckCapacityNameAvailabilityResult> localVarResp = capacitiesCheckNameAvailabilityWithHttpInfo(location, apiVersion, subscriptionId, capacityParameters);
        return localVarResp.getData();
    }

    /**
     * 
     * Check the name availability in the target location.
     * @param location The region name which the operation will lookup into. (required)
     * @param apiVersion The client API version. (required)
     * @param subscriptionId A unique identifier for a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param capacityParameters The name of the capacity. (required)
     * @return ApiResponse&lt;CheckCapacityNameAvailabilityResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<CheckCapacityNameAvailabilityResult> capacitiesCheckNameAvailabilityWithHttpInfo(String location, String apiVersion, String subscriptionId, CheckCapacityNameAvailabilityParameters capacityParameters) throws ApiException {
        okhttp3.Call localVarCall = capacitiesCheckNameAvailabilityValidateBeforeCall(location, apiVersion, subscriptionId, capacityParameters, null);
        Type localVarReturnType = new TypeToken<CheckCapacityNameAvailabilityResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Check the name availability in the target location.
     * @param location The region name which the operation will lookup into. (required)
     * @param apiVersion The client API version. (required)
     * @param subscriptionId A unique identifier for a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param capacityParameters The name of the capacity. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call capacitiesCheckNameAvailabilityAsync(String location, String apiVersion, String subscriptionId, CheckCapacityNameAvailabilityParameters capacityParameters, final ApiCallback<CheckCapacityNameAvailabilityResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = capacitiesCheckNameAvailabilityValidateBeforeCall(location, apiVersion, subscriptionId, capacityParameters, _callback);
        Type localVarReturnType = new TypeToken<CheckCapacityNameAvailabilityResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for capacitiesCreate
     * @param resourceGroupName The name of the Azure Resource group of which a given PowerBIDedicated capacity is part. This name must be at least 1 character in length, and no more than 90. (required)
     * @param dedicatedCapacityName The name of the Dedicated capacity. It must be a minimum of 3 characters, and a maximum of 63. (required)
     * @param apiVersion The client API version. (required)
     * @param subscriptionId A unique identifier for a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param capacityParameters Contains the information used to provision the Dedicated capacity. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The operation completed successfully. </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> InProgress. The operation is still in progress. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call capacitiesCreateCall(String resourceGroupName, String dedicatedCapacityName, String apiVersion, String subscriptionId, DedicatedCapacity capacityParameters, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = capacityParameters;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PowerBIDedicated/capacities/{dedicatedCapacityName}"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "dedicatedCapacityName" + "}", localVarApiClient.escapeString(dedicatedCapacityName.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call capacitiesCreateValidateBeforeCall(String resourceGroupName, String dedicatedCapacityName, String apiVersion, String subscriptionId, DedicatedCapacity capacityParameters, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling capacitiesCreate(Async)");
        }

        // verify the required parameter 'dedicatedCapacityName' is set
        if (dedicatedCapacityName == null) {
            throw new ApiException("Missing the required parameter 'dedicatedCapacityName' when calling capacitiesCreate(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling capacitiesCreate(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling capacitiesCreate(Async)");
        }

        // verify the required parameter 'capacityParameters' is set
        if (capacityParameters == null) {
            throw new ApiException("Missing the required parameter 'capacityParameters' when calling capacitiesCreate(Async)");
        }

        return capacitiesCreateCall(resourceGroupName, dedicatedCapacityName, apiVersion, subscriptionId, capacityParameters, _callback);

    }

    /**
     * 
     * Provisions the specified Dedicated capacity based on the configuration specified in the request.
     * @param resourceGroupName The name of the Azure Resource group of which a given PowerBIDedicated capacity is part. This name must be at least 1 character in length, and no more than 90. (required)
     * @param dedicatedCapacityName The name of the Dedicated capacity. It must be a minimum of 3 characters, and a maximum of 63. (required)
     * @param apiVersion The client API version. (required)
     * @param subscriptionId A unique identifier for a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param capacityParameters Contains the information used to provision the Dedicated capacity. (required)
     * @return DedicatedCapacity
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The operation completed successfully. </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> InProgress. The operation is still in progress. </td><td>  -  </td></tr>
     </table>
     */
    public DedicatedCapacity capacitiesCreate(String resourceGroupName, String dedicatedCapacityName, String apiVersion, String subscriptionId, DedicatedCapacity capacityParameters) throws ApiException {
        ApiResponse<DedicatedCapacity> localVarResp = capacitiesCreateWithHttpInfo(resourceGroupName, dedicatedCapacityName, apiVersion, subscriptionId, capacityParameters);
        return localVarResp.getData();
    }

    /**
     * 
     * Provisions the specified Dedicated capacity based on the configuration specified in the request.
     * @param resourceGroupName The name of the Azure Resource group of which a given PowerBIDedicated capacity is part. This name must be at least 1 character in length, and no more than 90. (required)
     * @param dedicatedCapacityName The name of the Dedicated capacity. It must be a minimum of 3 characters, and a maximum of 63. (required)
     * @param apiVersion The client API version. (required)
     * @param subscriptionId A unique identifier for a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param capacityParameters Contains the information used to provision the Dedicated capacity. (required)
     * @return ApiResponse&lt;DedicatedCapacity&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The operation completed successfully. </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> InProgress. The operation is still in progress. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DedicatedCapacity> capacitiesCreateWithHttpInfo(String resourceGroupName, String dedicatedCapacityName, String apiVersion, String subscriptionId, DedicatedCapacity capacityParameters) throws ApiException {
        okhttp3.Call localVarCall = capacitiesCreateValidateBeforeCall(resourceGroupName, dedicatedCapacityName, apiVersion, subscriptionId, capacityParameters, null);
        Type localVarReturnType = new TypeToken<DedicatedCapacity>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Provisions the specified Dedicated capacity based on the configuration specified in the request.
     * @param resourceGroupName The name of the Azure Resource group of which a given PowerBIDedicated capacity is part. This name must be at least 1 character in length, and no more than 90. (required)
     * @param dedicatedCapacityName The name of the Dedicated capacity. It must be a minimum of 3 characters, and a maximum of 63. (required)
     * @param apiVersion The client API version. (required)
     * @param subscriptionId A unique identifier for a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param capacityParameters Contains the information used to provision the Dedicated capacity. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The operation completed successfully. </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> InProgress. The operation is still in progress. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call capacitiesCreateAsync(String resourceGroupName, String dedicatedCapacityName, String apiVersion, String subscriptionId, DedicatedCapacity capacityParameters, final ApiCallback<DedicatedCapacity> _callback) throws ApiException {

        okhttp3.Call localVarCall = capacitiesCreateValidateBeforeCall(resourceGroupName, dedicatedCapacityName, apiVersion, subscriptionId, capacityParameters, _callback);
        Type localVarReturnType = new TypeToken<DedicatedCapacity>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for capacitiesDelete
     * @param resourceGroupName The name of the Azure Resource group of which a given PowerBIDedicated capacity is part. This name must be at least 1 character in length, and no more than 90. (required)
     * @param dedicatedCapacityName The name of the Dedicated capacity. It must be at least 3 characters in length, and no more than 63. (required)
     * @param apiVersion The client API version. (required)
     * @param subscriptionId A unique identifier for a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted. </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> No Content. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call capacitiesDeleteCall(String resourceGroupName, String dedicatedCapacityName, String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PowerBIDedicated/capacities/{dedicatedCapacityName}"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "dedicatedCapacityName" + "}", localVarApiClient.escapeString(dedicatedCapacityName.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call capacitiesDeleteValidateBeforeCall(String resourceGroupName, String dedicatedCapacityName, String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling capacitiesDelete(Async)");
        }

        // verify the required parameter 'dedicatedCapacityName' is set
        if (dedicatedCapacityName == null) {
            throw new ApiException("Missing the required parameter 'dedicatedCapacityName' when calling capacitiesDelete(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling capacitiesDelete(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling capacitiesDelete(Async)");
        }

        return capacitiesDeleteCall(resourceGroupName, dedicatedCapacityName, apiVersion, subscriptionId, _callback);

    }

    /**
     * 
     * Deletes the specified Dedicated capacity.
     * @param resourceGroupName The name of the Azure Resource group of which a given PowerBIDedicated capacity is part. This name must be at least 1 character in length, and no more than 90. (required)
     * @param dedicatedCapacityName The name of the Dedicated capacity. It must be at least 3 characters in length, and no more than 63. (required)
     * @param apiVersion The client API version. (required)
     * @param subscriptionId A unique identifier for a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted. </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> No Content. </td><td>  -  </td></tr>
     </table>
     */
    public void capacitiesDelete(String resourceGroupName, String dedicatedCapacityName, String apiVersion, String subscriptionId) throws ApiException {
        capacitiesDeleteWithHttpInfo(resourceGroupName, dedicatedCapacityName, apiVersion, subscriptionId);
    }

    /**
     * 
     * Deletes the specified Dedicated capacity.
     * @param resourceGroupName The name of the Azure Resource group of which a given PowerBIDedicated capacity is part. This name must be at least 1 character in length, and no more than 90. (required)
     * @param dedicatedCapacityName The name of the Dedicated capacity. It must be at least 3 characters in length, and no more than 63. (required)
     * @param apiVersion The client API version. (required)
     * @param subscriptionId A unique identifier for a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted. </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> No Content. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> capacitiesDeleteWithHttpInfo(String resourceGroupName, String dedicatedCapacityName, String apiVersion, String subscriptionId) throws ApiException {
        okhttp3.Call localVarCall = capacitiesDeleteValidateBeforeCall(resourceGroupName, dedicatedCapacityName, apiVersion, subscriptionId, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     *  (asynchronously)
     * Deletes the specified Dedicated capacity.
     * @param resourceGroupName The name of the Azure Resource group of which a given PowerBIDedicated capacity is part. This name must be at least 1 character in length, and no more than 90. (required)
     * @param dedicatedCapacityName The name of the Dedicated capacity. It must be at least 3 characters in length, and no more than 63. (required)
     * @param apiVersion The client API version. (required)
     * @param subscriptionId A unique identifier for a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted. </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> No Content. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call capacitiesDeleteAsync(String resourceGroupName, String dedicatedCapacityName, String apiVersion, String subscriptionId, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = capacitiesDeleteValidateBeforeCall(resourceGroupName, dedicatedCapacityName, apiVersion, subscriptionId, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for capacitiesGetDetails
     * @param resourceGroupName The name of the Azure Resource group of which a given PowerBIDedicated capacity is part. This name must be at least 1 character in length, and no more than 90. (required)
     * @param dedicatedCapacityName The name of the dedicated capacity. It must be a minimum of 3 characters, and a maximum of 63. (required)
     * @param apiVersion The client API version. (required)
     * @param subscriptionId A unique identifier for a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The operation was successful. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call capacitiesGetDetailsCall(String resourceGroupName, String dedicatedCapacityName, String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PowerBIDedicated/capacities/{dedicatedCapacityName}"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "dedicatedCapacityName" + "}", localVarApiClient.escapeString(dedicatedCapacityName.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call capacitiesGetDetailsValidateBeforeCall(String resourceGroupName, String dedicatedCapacityName, String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling capacitiesGetDetails(Async)");
        }

        // verify the required parameter 'dedicatedCapacityName' is set
        if (dedicatedCapacityName == null) {
            throw new ApiException("Missing the required parameter 'dedicatedCapacityName' when calling capacitiesGetDetails(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling capacitiesGetDetails(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling capacitiesGetDetails(Async)");
        }

        return capacitiesGetDetailsCall(resourceGroupName, dedicatedCapacityName, apiVersion, subscriptionId, _callback);

    }

    /**
     * 
     * Gets details about the specified dedicated capacity.
     * @param resourceGroupName The name of the Azure Resource group of which a given PowerBIDedicated capacity is part. This name must be at least 1 character in length, and no more than 90. (required)
     * @param dedicatedCapacityName The name of the dedicated capacity. It must be a minimum of 3 characters, and a maximum of 63. (required)
     * @param apiVersion The client API version. (required)
     * @param subscriptionId A unique identifier for a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @return DedicatedCapacity
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The operation was successful. </td><td>  -  </td></tr>
     </table>
     */
    public DedicatedCapacity capacitiesGetDetails(String resourceGroupName, String dedicatedCapacityName, String apiVersion, String subscriptionId) throws ApiException {
        ApiResponse<DedicatedCapacity> localVarResp = capacitiesGetDetailsWithHttpInfo(resourceGroupName, dedicatedCapacityName, apiVersion, subscriptionId);
        return localVarResp.getData();
    }

    /**
     * 
     * Gets details about the specified dedicated capacity.
     * @param resourceGroupName The name of the Azure Resource group of which a given PowerBIDedicated capacity is part. This name must be at least 1 character in length, and no more than 90. (required)
     * @param dedicatedCapacityName The name of the dedicated capacity. It must be a minimum of 3 characters, and a maximum of 63. (required)
     * @param apiVersion The client API version. (required)
     * @param subscriptionId A unique identifier for a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @return ApiResponse&lt;DedicatedCapacity&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The operation was successful. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DedicatedCapacity> capacitiesGetDetailsWithHttpInfo(String resourceGroupName, String dedicatedCapacityName, String apiVersion, String subscriptionId) throws ApiException {
        okhttp3.Call localVarCall = capacitiesGetDetailsValidateBeforeCall(resourceGroupName, dedicatedCapacityName, apiVersion, subscriptionId, null);
        Type localVarReturnType = new TypeToken<DedicatedCapacity>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Gets details about the specified dedicated capacity.
     * @param resourceGroupName The name of the Azure Resource group of which a given PowerBIDedicated capacity is part. This name must be at least 1 character in length, and no more than 90. (required)
     * @param dedicatedCapacityName The name of the dedicated capacity. It must be a minimum of 3 characters, and a maximum of 63. (required)
     * @param apiVersion The client API version. (required)
     * @param subscriptionId A unique identifier for a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The operation was successful. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call capacitiesGetDetailsAsync(String resourceGroupName, String dedicatedCapacityName, String apiVersion, String subscriptionId, final ApiCallback<DedicatedCapacity> _callback) throws ApiException {

        okhttp3.Call localVarCall = capacitiesGetDetailsValidateBeforeCall(resourceGroupName, dedicatedCapacityName, apiVersion, subscriptionId, _callback);
        Type localVarReturnType = new TypeToken<DedicatedCapacity>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for capacitiesList
     * @param apiVersion The client API version. (required)
     * @param subscriptionId A unique identifier for a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call capacitiesListCall(String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/providers/Microsoft.PowerBIDedicated/capacities"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call capacitiesListValidateBeforeCall(String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling capacitiesList(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling capacitiesList(Async)");
        }

        return capacitiesListCall(apiVersion, subscriptionId, _callback);

    }

    /**
     * 
     * Lists all the Dedicated capacities for the given subscription.
     * @param apiVersion The client API version. (required)
     * @param subscriptionId A unique identifier for a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @return DedicatedCapacities
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public DedicatedCapacities capacitiesList(String apiVersion, String subscriptionId) throws ApiException {
        ApiResponse<DedicatedCapacities> localVarResp = capacitiesListWithHttpInfo(apiVersion, subscriptionId);
        return localVarResp.getData();
    }

    /**
     * 
     * Lists all the Dedicated capacities for the given subscription.
     * @param apiVersion The client API version. (required)
     * @param subscriptionId A unique identifier for a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @return ApiResponse&lt;DedicatedCapacities&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DedicatedCapacities> capacitiesListWithHttpInfo(String apiVersion, String subscriptionId) throws ApiException {
        okhttp3.Call localVarCall = capacitiesListValidateBeforeCall(apiVersion, subscriptionId, null);
        Type localVarReturnType = new TypeToken<DedicatedCapacities>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Lists all the Dedicated capacities for the given subscription.
     * @param apiVersion The client API version. (required)
     * @param subscriptionId A unique identifier for a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call capacitiesListAsync(String apiVersion, String subscriptionId, final ApiCallback<DedicatedCapacities> _callback) throws ApiException {

        okhttp3.Call localVarCall = capacitiesListValidateBeforeCall(apiVersion, subscriptionId, _callback);
        Type localVarReturnType = new TypeToken<DedicatedCapacities>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for capacitiesListByResourceGroup
     * @param resourceGroupName The name of the Azure Resource group of which a given PowerBIDedicated capacity is part. This name must be at least 1 character in length, and no more than 90. (required)
     * @param apiVersion The client API version. (required)
     * @param subscriptionId A unique identifier for a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call capacitiesListByResourceGroupCall(String resourceGroupName, String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PowerBIDedicated/capacities"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call capacitiesListByResourceGroupValidateBeforeCall(String resourceGroupName, String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling capacitiesListByResourceGroup(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling capacitiesListByResourceGroup(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling capacitiesListByResourceGroup(Async)");
        }

        return capacitiesListByResourceGroupCall(resourceGroupName, apiVersion, subscriptionId, _callback);

    }

    /**
     * 
     * Gets all the Dedicated capacities for the given resource group.
     * @param resourceGroupName The name of the Azure Resource group of which a given PowerBIDedicated capacity is part. This name must be at least 1 character in length, and no more than 90. (required)
     * @param apiVersion The client API version. (required)
     * @param subscriptionId A unique identifier for a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @return DedicatedCapacities
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public DedicatedCapacities capacitiesListByResourceGroup(String resourceGroupName, String apiVersion, String subscriptionId) throws ApiException {
        ApiResponse<DedicatedCapacities> localVarResp = capacitiesListByResourceGroupWithHttpInfo(resourceGroupName, apiVersion, subscriptionId);
        return localVarResp.getData();
    }

    /**
     * 
     * Gets all the Dedicated capacities for the given resource group.
     * @param resourceGroupName The name of the Azure Resource group of which a given PowerBIDedicated capacity is part. This name must be at least 1 character in length, and no more than 90. (required)
     * @param apiVersion The client API version. (required)
     * @param subscriptionId A unique identifier for a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @return ApiResponse&lt;DedicatedCapacities&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DedicatedCapacities> capacitiesListByResourceGroupWithHttpInfo(String resourceGroupName, String apiVersion, String subscriptionId) throws ApiException {
        okhttp3.Call localVarCall = capacitiesListByResourceGroupValidateBeforeCall(resourceGroupName, apiVersion, subscriptionId, null);
        Type localVarReturnType = new TypeToken<DedicatedCapacities>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Gets all the Dedicated capacities for the given resource group.
     * @param resourceGroupName The name of the Azure Resource group of which a given PowerBIDedicated capacity is part. This name must be at least 1 character in length, and no more than 90. (required)
     * @param apiVersion The client API version. (required)
     * @param subscriptionId A unique identifier for a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call capacitiesListByResourceGroupAsync(String resourceGroupName, String apiVersion, String subscriptionId, final ApiCallback<DedicatedCapacities> _callback) throws ApiException {

        okhttp3.Call localVarCall = capacitiesListByResourceGroupValidateBeforeCall(resourceGroupName, apiVersion, subscriptionId, _callback);
        Type localVarReturnType = new TypeToken<DedicatedCapacities>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for capacitiesListSkusForCapacity
     * @param resourceGroupName The name of the Azure Resource group of which a given PowerBIDedicated capacity is part. This name must be at least 1 character in length, and no more than 90. (required)
     * @param dedicatedCapacityName The name of the Dedicated capacity. It must be at least 3 characters in length, and no more than 63. (required)
     * @param apiVersion The client API version. (required)
     * @param subscriptionId A unique identifier for a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call capacitiesListSkusForCapacityCall(String resourceGroupName, String dedicatedCapacityName, String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PowerBIDedicated/capacities/{dedicatedCapacityName}/skus"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "dedicatedCapacityName" + "}", localVarApiClient.escapeString(dedicatedCapacityName.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call capacitiesListSkusForCapacityValidateBeforeCall(String resourceGroupName, String dedicatedCapacityName, String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling capacitiesListSkusForCapacity(Async)");
        }

        // verify the required parameter 'dedicatedCapacityName' is set
        if (dedicatedCapacityName == null) {
            throw new ApiException("Missing the required parameter 'dedicatedCapacityName' when calling capacitiesListSkusForCapacity(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling capacitiesListSkusForCapacity(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling capacitiesListSkusForCapacity(Async)");
        }

        return capacitiesListSkusForCapacityCall(resourceGroupName, dedicatedCapacityName, apiVersion, subscriptionId, _callback);

    }

    /**
     * 
     * Lists eligible SKUs for a PowerBI Dedicated resource.
     * @param resourceGroupName The name of the Azure Resource group of which a given PowerBIDedicated capacity is part. This name must be at least 1 character in length, and no more than 90. (required)
     * @param dedicatedCapacityName The name of the Dedicated capacity. It must be at least 3 characters in length, and no more than 63. (required)
     * @param apiVersion The client API version. (required)
     * @param subscriptionId A unique identifier for a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @return SkuEnumerationForExistingResourceResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public SkuEnumerationForExistingResourceResult capacitiesListSkusForCapacity(String resourceGroupName, String dedicatedCapacityName, String apiVersion, String subscriptionId) throws ApiException {
        ApiResponse<SkuEnumerationForExistingResourceResult> localVarResp = capacitiesListSkusForCapacityWithHttpInfo(resourceGroupName, dedicatedCapacityName, apiVersion, subscriptionId);
        return localVarResp.getData();
    }

    /**
     * 
     * Lists eligible SKUs for a PowerBI Dedicated resource.
     * @param resourceGroupName The name of the Azure Resource group of which a given PowerBIDedicated capacity is part. This name must be at least 1 character in length, and no more than 90. (required)
     * @param dedicatedCapacityName The name of the Dedicated capacity. It must be at least 3 characters in length, and no more than 63. (required)
     * @param apiVersion The client API version. (required)
     * @param subscriptionId A unique identifier for a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @return ApiResponse&lt;SkuEnumerationForExistingResourceResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<SkuEnumerationForExistingResourceResult> capacitiesListSkusForCapacityWithHttpInfo(String resourceGroupName, String dedicatedCapacityName, String apiVersion, String subscriptionId) throws ApiException {
        okhttp3.Call localVarCall = capacitiesListSkusForCapacityValidateBeforeCall(resourceGroupName, dedicatedCapacityName, apiVersion, subscriptionId, null);
        Type localVarReturnType = new TypeToken<SkuEnumerationForExistingResourceResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Lists eligible SKUs for a PowerBI Dedicated resource.
     * @param resourceGroupName The name of the Azure Resource group of which a given PowerBIDedicated capacity is part. This name must be at least 1 character in length, and no more than 90. (required)
     * @param dedicatedCapacityName The name of the Dedicated capacity. It must be at least 3 characters in length, and no more than 63. (required)
     * @param apiVersion The client API version. (required)
     * @param subscriptionId A unique identifier for a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call capacitiesListSkusForCapacityAsync(String resourceGroupName, String dedicatedCapacityName, String apiVersion, String subscriptionId, final ApiCallback<SkuEnumerationForExistingResourceResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = capacitiesListSkusForCapacityValidateBeforeCall(resourceGroupName, dedicatedCapacityName, apiVersion, subscriptionId, _callback);
        Type localVarReturnType = new TypeToken<SkuEnumerationForExistingResourceResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for capacitiesResume
     * @param resourceGroupName The name of the Azure Resource group of which a given PowerBIDedicated capacity is part. This name must be at least 1 character in length, and no more than 90. (required)
     * @param dedicatedCapacityName The name of the Dedicated capacity. It must be at least 3 characters in length, and no more than 63. (required)
     * @param apiVersion The client API version. (required)
     * @param subscriptionId A unique identifier for a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call capacitiesResumeCall(String resourceGroupName, String dedicatedCapacityName, String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PowerBIDedicated/capacities/{dedicatedCapacityName}/resume"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "dedicatedCapacityName" + "}", localVarApiClient.escapeString(dedicatedCapacityName.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call capacitiesResumeValidateBeforeCall(String resourceGroupName, String dedicatedCapacityName, String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling capacitiesResume(Async)");
        }

        // verify the required parameter 'dedicatedCapacityName' is set
        if (dedicatedCapacityName == null) {
            throw new ApiException("Missing the required parameter 'dedicatedCapacityName' when calling capacitiesResume(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling capacitiesResume(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling capacitiesResume(Async)");
        }

        return capacitiesResumeCall(resourceGroupName, dedicatedCapacityName, apiVersion, subscriptionId, _callback);

    }

    /**
     * 
     * Resumes operation of the specified Dedicated capacity instance.
     * @param resourceGroupName The name of the Azure Resource group of which a given PowerBIDedicated capacity is part. This name must be at least 1 character in length, and no more than 90. (required)
     * @param dedicatedCapacityName The name of the Dedicated capacity. It must be at least 3 characters in length, and no more than 63. (required)
     * @param apiVersion The client API version. (required)
     * @param subscriptionId A unique identifier for a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
     </table>
     */
    public void capacitiesResume(String resourceGroupName, String dedicatedCapacityName, String apiVersion, String subscriptionId) throws ApiException {
        capacitiesResumeWithHttpInfo(resourceGroupName, dedicatedCapacityName, apiVersion, subscriptionId);
    }

    /**
     * 
     * Resumes operation of the specified Dedicated capacity instance.
     * @param resourceGroupName The name of the Azure Resource group of which a given PowerBIDedicated capacity is part. This name must be at least 1 character in length, and no more than 90. (required)
     * @param dedicatedCapacityName The name of the Dedicated capacity. It must be at least 3 characters in length, and no more than 63. (required)
     * @param apiVersion The client API version. (required)
     * @param subscriptionId A unique identifier for a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> capacitiesResumeWithHttpInfo(String resourceGroupName, String dedicatedCapacityName, String apiVersion, String subscriptionId) throws ApiException {
        okhttp3.Call localVarCall = capacitiesResumeValidateBeforeCall(resourceGroupName, dedicatedCapacityName, apiVersion, subscriptionId, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     *  (asynchronously)
     * Resumes operation of the specified Dedicated capacity instance.
     * @param resourceGroupName The name of the Azure Resource group of which a given PowerBIDedicated capacity is part. This name must be at least 1 character in length, and no more than 90. (required)
     * @param dedicatedCapacityName The name of the Dedicated capacity. It must be at least 3 characters in length, and no more than 63. (required)
     * @param apiVersion The client API version. (required)
     * @param subscriptionId A unique identifier for a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call capacitiesResumeAsync(String resourceGroupName, String dedicatedCapacityName, String apiVersion, String subscriptionId, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = capacitiesResumeValidateBeforeCall(resourceGroupName, dedicatedCapacityName, apiVersion, subscriptionId, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for capacitiesSuspend
     * @param resourceGroupName The name of the Azure Resource group of which a given PowerBIDedicated capacity is part. This name must be at least 1 character in length, and no more than 90. (required)
     * @param dedicatedCapacityName The name of the Dedicated capacity. It must be at least 3 characters in length, and no more than 63. (required)
     * @param apiVersion The client API version. (required)
     * @param subscriptionId A unique identifier for a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call capacitiesSuspendCall(String resourceGroupName, String dedicatedCapacityName, String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PowerBIDedicated/capacities/{dedicatedCapacityName}/suspend"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "dedicatedCapacityName" + "}", localVarApiClient.escapeString(dedicatedCapacityName.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call capacitiesSuspendValidateBeforeCall(String resourceGroupName, String dedicatedCapacityName, String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling capacitiesSuspend(Async)");
        }

        // verify the required parameter 'dedicatedCapacityName' is set
        if (dedicatedCapacityName == null) {
            throw new ApiException("Missing the required parameter 'dedicatedCapacityName' when calling capacitiesSuspend(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling capacitiesSuspend(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling capacitiesSuspend(Async)");
        }

        return capacitiesSuspendCall(resourceGroupName, dedicatedCapacityName, apiVersion, subscriptionId, _callback);

    }

    /**
     * 
     * Suspends operation of the specified dedicated capacity instance.
     * @param resourceGroupName The name of the Azure Resource group of which a given PowerBIDedicated capacity is part. This name must be at least 1 character in length, and no more than 90. (required)
     * @param dedicatedCapacityName The name of the Dedicated capacity. It must be at least 3 characters in length, and no more than 63. (required)
     * @param apiVersion The client API version. (required)
     * @param subscriptionId A unique identifier for a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted. </td><td>  -  </td></tr>
     </table>
     */
    public void capacitiesSuspend(String resourceGroupName, String dedicatedCapacityName, String apiVersion, String subscriptionId) throws ApiException {
        capacitiesSuspendWithHttpInfo(resourceGroupName, dedicatedCapacityName, apiVersion, subscriptionId);
    }

    /**
     * 
     * Suspends operation of the specified dedicated capacity instance.
     * @param resourceGroupName The name of the Azure Resource group of which a given PowerBIDedicated capacity is part. This name must be at least 1 character in length, and no more than 90. (required)
     * @param dedicatedCapacityName The name of the Dedicated capacity. It must be at least 3 characters in length, and no more than 63. (required)
     * @param apiVersion The client API version. (required)
     * @param subscriptionId A unique identifier for a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> capacitiesSuspendWithHttpInfo(String resourceGroupName, String dedicatedCapacityName, String apiVersion, String subscriptionId) throws ApiException {
        okhttp3.Call localVarCall = capacitiesSuspendValidateBeforeCall(resourceGroupName, dedicatedCapacityName, apiVersion, subscriptionId, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     *  (asynchronously)
     * Suspends operation of the specified dedicated capacity instance.
     * @param resourceGroupName The name of the Azure Resource group of which a given PowerBIDedicated capacity is part. This name must be at least 1 character in length, and no more than 90. (required)
     * @param dedicatedCapacityName The name of the Dedicated capacity. It must be at least 3 characters in length, and no more than 63. (required)
     * @param apiVersion The client API version. (required)
     * @param subscriptionId A unique identifier for a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call capacitiesSuspendAsync(String resourceGroupName, String dedicatedCapacityName, String apiVersion, String subscriptionId, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = capacitiesSuspendValidateBeforeCall(resourceGroupName, dedicatedCapacityName, apiVersion, subscriptionId, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for capacitiesUpdate
     * @param resourceGroupName The name of the Azure Resource group of which a given PowerBIDedicated capacity is part. This name must be at least 1 character in length, and no more than 90. (required)
     * @param dedicatedCapacityName The name of the Dedicated capacity. It must be at least 3 characters in length, and no more than 63. (required)
     * @param apiVersion The client API version. (required)
     * @param subscriptionId A unique identifier for a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param capacityUpdateParameters Request object that contains the updated information for the capacity. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call capacitiesUpdateCall(String resourceGroupName, String dedicatedCapacityName, String apiVersion, String subscriptionId, DedicatedCapacityUpdateParameters capacityUpdateParameters, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = capacityUpdateParameters;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PowerBIDedicated/capacities/{dedicatedCapacityName}"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "dedicatedCapacityName" + "}", localVarApiClient.escapeString(dedicatedCapacityName.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PATCH", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call capacitiesUpdateValidateBeforeCall(String resourceGroupName, String dedicatedCapacityName, String apiVersion, String subscriptionId, DedicatedCapacityUpdateParameters capacityUpdateParameters, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling capacitiesUpdate(Async)");
        }

        // verify the required parameter 'dedicatedCapacityName' is set
        if (dedicatedCapacityName == null) {
            throw new ApiException("Missing the required parameter 'dedicatedCapacityName' when calling capacitiesUpdate(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling capacitiesUpdate(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling capacitiesUpdate(Async)");
        }

        // verify the required parameter 'capacityUpdateParameters' is set
        if (capacityUpdateParameters == null) {
            throw new ApiException("Missing the required parameter 'capacityUpdateParameters' when calling capacitiesUpdate(Async)");
        }

        return capacitiesUpdateCall(resourceGroupName, dedicatedCapacityName, apiVersion, subscriptionId, capacityUpdateParameters, _callback);

    }

    /**
     * 
     * Updates the current state of the specified Dedicated capacity.
     * @param resourceGroupName The name of the Azure Resource group of which a given PowerBIDedicated capacity is part. This name must be at least 1 character in length, and no more than 90. (required)
     * @param dedicatedCapacityName The name of the Dedicated capacity. It must be at least 3 characters in length, and no more than 63. (required)
     * @param apiVersion The client API version. (required)
     * @param subscriptionId A unique identifier for a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param capacityUpdateParameters Request object that contains the updated information for the capacity. (required)
     * @return DedicatedCapacity
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
     </table>
     */
    public DedicatedCapacity capacitiesUpdate(String resourceGroupName, String dedicatedCapacityName, String apiVersion, String subscriptionId, DedicatedCapacityUpdateParameters capacityUpdateParameters) throws ApiException {
        ApiResponse<DedicatedCapacity> localVarResp = capacitiesUpdateWithHttpInfo(resourceGroupName, dedicatedCapacityName, apiVersion, subscriptionId, capacityUpdateParameters);
        return localVarResp.getData();
    }

    /**
     * 
     * Updates the current state of the specified Dedicated capacity.
     * @param resourceGroupName The name of the Azure Resource group of which a given PowerBIDedicated capacity is part. This name must be at least 1 character in length, and no more than 90. (required)
     * @param dedicatedCapacityName The name of the Dedicated capacity. It must be at least 3 characters in length, and no more than 63. (required)
     * @param apiVersion The client API version. (required)
     * @param subscriptionId A unique identifier for a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param capacityUpdateParameters Request object that contains the updated information for the capacity. (required)
     * @return ApiResponse&lt;DedicatedCapacity&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DedicatedCapacity> capacitiesUpdateWithHttpInfo(String resourceGroupName, String dedicatedCapacityName, String apiVersion, String subscriptionId, DedicatedCapacityUpdateParameters capacityUpdateParameters) throws ApiException {
        okhttp3.Call localVarCall = capacitiesUpdateValidateBeforeCall(resourceGroupName, dedicatedCapacityName, apiVersion, subscriptionId, capacityUpdateParameters, null);
        Type localVarReturnType = new TypeToken<DedicatedCapacity>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Updates the current state of the specified Dedicated capacity.
     * @param resourceGroupName The name of the Azure Resource group of which a given PowerBIDedicated capacity is part. This name must be at least 1 character in length, and no more than 90. (required)
     * @param dedicatedCapacityName The name of the Dedicated capacity. It must be at least 3 characters in length, and no more than 63. (required)
     * @param apiVersion The client API version. (required)
     * @param subscriptionId A unique identifier for a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param capacityUpdateParameters Request object that contains the updated information for the capacity. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call capacitiesUpdateAsync(String resourceGroupName, String dedicatedCapacityName, String apiVersion, String subscriptionId, DedicatedCapacityUpdateParameters capacityUpdateParameters, final ApiCallback<DedicatedCapacity> _callback) throws ApiException {

        okhttp3.Call localVarCall = capacitiesUpdateValidateBeforeCall(resourceGroupName, dedicatedCapacityName, apiVersion, subscriptionId, capacityUpdateParameters, _callback);
        Type localVarReturnType = new TypeToken<DedicatedCapacity>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
