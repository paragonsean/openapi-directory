/**
 * PowerBIDedicated
 * PowerBI Dedicated Web API provides a RESTful set of web services that enables users to create, retrieve, update, and delete Power BI dedicated capacities
 *
 * The version of the OpenAPI document: 2017-10-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDedicatedCapacityMutableProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDedicatedCapacityMutableProperties::OAIDedicatedCapacityMutableProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDedicatedCapacityMutableProperties::OAIDedicatedCapacityMutableProperties() {
    this->initializeModel();
}

OAIDedicatedCapacityMutableProperties::~OAIDedicatedCapacityMutableProperties() {}

void OAIDedicatedCapacityMutableProperties::initializeModel() {

    m_administration_isSet = false;
    m_administration_isValid = false;
}

void OAIDedicatedCapacityMutableProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDedicatedCapacityMutableProperties::fromJsonObject(QJsonObject json) {

    m_administration_isValid = ::OpenAPI::fromJsonValue(m_administration, json[QString("administration")]);
    m_administration_isSet = !json[QString("administration")].isNull() && m_administration_isValid;
}

QString OAIDedicatedCapacityMutableProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDedicatedCapacityMutableProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_administration.isSet()) {
        obj.insert(QString("administration"), ::OpenAPI::toJsonValue(m_administration));
    }
    return obj;
}

OAIDedicatedCapacityAdministrators OAIDedicatedCapacityMutableProperties::getAdministration() const {
    return m_administration;
}
void OAIDedicatedCapacityMutableProperties::setAdministration(const OAIDedicatedCapacityAdministrators &administration) {
    m_administration = administration;
    m_administration_isSet = true;
}

bool OAIDedicatedCapacityMutableProperties::is_administration_Set() const{
    return m_administration_isSet;
}

bool OAIDedicatedCapacityMutableProperties::is_administration_Valid() const{
    return m_administration_isValid;
}

bool OAIDedicatedCapacityMutableProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_administration.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDedicatedCapacityMutableProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
