/**
 * PostgreSQLManagementClient
 * The Microsoft Azure management API provides create, read, update, and delete functionality for Azure PostgreSQL resources including servers, databases, firewall rules, VNET rules, security alert policies, log files and configurations with new business model.
 *
 * The version of the OpenAPI document: 2017-12-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.PostgreSqlManagementClient);
  }
}(this, function(expect, PostgreSqlManagementClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new PostgreSqlManagementClient.DatabaseProperties();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DatabaseProperties', function() {
    it('should create an instance of DatabaseProperties', function() {
      // uncomment below and update the code to test DatabaseProperties
      //var instance = new PostgreSqlManagementClient.DatabaseProperties();
      //expect(instance).to.be.a(PostgreSqlManagementClient.DatabaseProperties);
    });

    it('should have the property charset (base name: "charset")', function() {
      // uncomment below and update the code to test the property charset
      //var instance = new PostgreSqlManagementClient.DatabaseProperties();
      //expect(instance).to.be();
    });

    it('should have the property collation (base name: "collation")', function() {
      // uncomment below and update the code to test the property collation
      //var instance = new PostgreSqlManagementClient.DatabaseProperties();
      //expect(instance).to.be();
    });

  });

}));
