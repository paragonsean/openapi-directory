/**
 * PostgreSQLManagementClient
 * The Microsoft Azure management API provides create, read, update, and delete functionality for Azure PostgreSQL resources including servers, databases, firewall rules, VNET rules, security alert policies, log files and configurations with new business model.
 *
 * The version of the OpenAPI document: 2017-12-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIServerProperties.h
 *
 * The properties of a server.
 */

#ifndef OAIServerProperties_H
#define OAIServerProperties_H

#include <QJsonObject>

#include "OAIServerVersion.h"
#include "OAISslEnforcement.h"
#include "OAIStorageProfile.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIStorageProfile;

class OAIServerProperties : public OAIObject {
public:
    OAIServerProperties();
    OAIServerProperties(QString json);
    ~OAIServerProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAdministratorLogin() const;
    void setAdministratorLogin(const QString &administrator_login);
    bool is_administrator_login_Set() const;
    bool is_administrator_login_Valid() const;

    QDateTime getEarliestRestoreDate() const;
    void setEarliestRestoreDate(const QDateTime &earliest_restore_date);
    bool is_earliest_restore_date_Set() const;
    bool is_earliest_restore_date_Valid() const;

    QString getFullyQualifiedDomainName() const;
    void setFullyQualifiedDomainName(const QString &fully_qualified_domain_name);
    bool is_fully_qualified_domain_name_Set() const;
    bool is_fully_qualified_domain_name_Valid() const;

    QString getMasterServerId() const;
    void setMasterServerId(const QString &master_server_id);
    bool is_master_server_id_Set() const;
    bool is_master_server_id_Valid() const;

    qint32 getReplicaCapacity() const;
    void setReplicaCapacity(const qint32 &replica_capacity);
    bool is_replica_capacity_Set() const;
    bool is_replica_capacity_Valid() const;

    QString getReplicationRole() const;
    void setReplicationRole(const QString &replication_role);
    bool is_replication_role_Set() const;
    bool is_replication_role_Valid() const;

    OAISslEnforcement getSslEnforcement() const;
    void setSslEnforcement(const OAISslEnforcement &ssl_enforcement);
    bool is_ssl_enforcement_Set() const;
    bool is_ssl_enforcement_Valid() const;

    OAIStorageProfile getStorageProfile() const;
    void setStorageProfile(const OAIStorageProfile &storage_profile);
    bool is_storage_profile_Set() const;
    bool is_storage_profile_Valid() const;

    QString getUserVisibleState() const;
    void setUserVisibleState(const QString &user_visible_state);
    bool is_user_visible_state_Set() const;
    bool is_user_visible_state_Valid() const;

    OAIServerVersion getVersion() const;
    void setVersion(const OAIServerVersion &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_administrator_login;
    bool m_administrator_login_isSet;
    bool m_administrator_login_isValid;

    QDateTime m_earliest_restore_date;
    bool m_earliest_restore_date_isSet;
    bool m_earliest_restore_date_isValid;

    QString m_fully_qualified_domain_name;
    bool m_fully_qualified_domain_name_isSet;
    bool m_fully_qualified_domain_name_isValid;

    QString m_master_server_id;
    bool m_master_server_id_isSet;
    bool m_master_server_id_isValid;

    qint32 m_replica_capacity;
    bool m_replica_capacity_isSet;
    bool m_replica_capacity_isValid;

    QString m_replication_role;
    bool m_replication_role_isSet;
    bool m_replication_role_isValid;

    OAISslEnforcement m_ssl_enforcement;
    bool m_ssl_enforcement_isSet;
    bool m_ssl_enforcement_isValid;

    OAIStorageProfile m_storage_profile;
    bool m_storage_profile_isSet;
    bool m_storage_profile_isValid;

    QString m_user_visible_state;
    bool m_user_visible_state_isSet;
    bool m_user_visible_state_isValid;

    OAIServerVersion m_version;
    bool m_version_isSet;
    bool m_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIServerProperties)

#endif // OAIServerProperties_H
