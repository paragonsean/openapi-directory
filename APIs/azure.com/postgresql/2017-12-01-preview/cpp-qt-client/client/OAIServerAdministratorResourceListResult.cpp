/**
 * PostgreSQLManagementClient
 * The Microsoft Azure management API provides create, read, update, and delete functionality for Azure PostgreSQL resources including servers, databases, firewall rules, VNET rules, security alert policies, log files and configurations with new business model.
 *
 * The version of the OpenAPI document: 2017-12-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIServerAdministratorResourceListResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIServerAdministratorResourceListResult::OAIServerAdministratorResourceListResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIServerAdministratorResourceListResult::OAIServerAdministratorResourceListResult() {
    this->initializeModel();
}

OAIServerAdministratorResourceListResult::~OAIServerAdministratorResourceListResult() {}

void OAIServerAdministratorResourceListResult::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
}

void OAIServerAdministratorResourceListResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIServerAdministratorResourceListResult::fromJsonObject(QJsonObject json) {

    m_value_isValid = ::OpenAPI::fromJsonValue(m_value, json[QString("value")]);
    m_value_isSet = !json[QString("value")].isNull() && m_value_isValid;
}

QString OAIServerAdministratorResourceListResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIServerAdministratorResourceListResult::asJsonObject() const {
    QJsonObject obj;
    if (m_value.size() > 0) {
        obj.insert(QString("value"), ::OpenAPI::toJsonValue(m_value));
    }
    return obj;
}

QList<OAIServerAdministratorResource> OAIServerAdministratorResourceListResult::getValue() const {
    return m_value;
}
void OAIServerAdministratorResourceListResult::setValue(const QList<OAIServerAdministratorResource> &value) {
    m_value = value;
    m_value_isSet = true;
}

bool OAIServerAdministratorResourceListResult::is_value_Set() const{
    return m_value_isSet;
}

bool OAIServerAdministratorResourceListResult::is_value_Valid() const{
    return m_value_isValid;
}

bool OAIServerAdministratorResourceListResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_value.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIServerAdministratorResourceListResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
