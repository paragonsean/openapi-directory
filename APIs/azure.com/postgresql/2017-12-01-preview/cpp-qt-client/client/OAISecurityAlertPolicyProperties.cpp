/**
 * PostgreSQLManagementClient
 * The Microsoft Azure management API provides create, read, update, and delete functionality for Azure PostgreSQL resources including servers, databases, firewall rules, VNET rules, security alert policies, log files and configurations with new business model.
 *
 * The version of the OpenAPI document: 2017-12-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISecurityAlertPolicyProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISecurityAlertPolicyProperties::OAISecurityAlertPolicyProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISecurityAlertPolicyProperties::OAISecurityAlertPolicyProperties() {
    this->initializeModel();
}

OAISecurityAlertPolicyProperties::~OAISecurityAlertPolicyProperties() {}

void OAISecurityAlertPolicyProperties::initializeModel() {

    m_disabled_alerts_isSet = false;
    m_disabled_alerts_isValid = false;

    m_email_account_admins_isSet = false;
    m_email_account_admins_isValid = false;

    m_email_addresses_isSet = false;
    m_email_addresses_isValid = false;

    m_retention_days_isSet = false;
    m_retention_days_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;

    m_storage_account_access_key_isSet = false;
    m_storage_account_access_key_isValid = false;

    m_storage_endpoint_isSet = false;
    m_storage_endpoint_isValid = false;
}

void OAISecurityAlertPolicyProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISecurityAlertPolicyProperties::fromJsonObject(QJsonObject json) {

    m_disabled_alerts_isValid = ::OpenAPI::fromJsonValue(m_disabled_alerts, json[QString("disabledAlerts")]);
    m_disabled_alerts_isSet = !json[QString("disabledAlerts")].isNull() && m_disabled_alerts_isValid;

    m_email_account_admins_isValid = ::OpenAPI::fromJsonValue(m_email_account_admins, json[QString("emailAccountAdmins")]);
    m_email_account_admins_isSet = !json[QString("emailAccountAdmins")].isNull() && m_email_account_admins_isValid;

    m_email_addresses_isValid = ::OpenAPI::fromJsonValue(m_email_addresses, json[QString("emailAddresses")]);
    m_email_addresses_isSet = !json[QString("emailAddresses")].isNull() && m_email_addresses_isValid;

    m_retention_days_isValid = ::OpenAPI::fromJsonValue(m_retention_days, json[QString("retentionDays")]);
    m_retention_days_isSet = !json[QString("retentionDays")].isNull() && m_retention_days_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("state")]);
    m_state_isSet = !json[QString("state")].isNull() && m_state_isValid;

    m_storage_account_access_key_isValid = ::OpenAPI::fromJsonValue(m_storage_account_access_key, json[QString("storageAccountAccessKey")]);
    m_storage_account_access_key_isSet = !json[QString("storageAccountAccessKey")].isNull() && m_storage_account_access_key_isValid;

    m_storage_endpoint_isValid = ::OpenAPI::fromJsonValue(m_storage_endpoint, json[QString("storageEndpoint")]);
    m_storage_endpoint_isSet = !json[QString("storageEndpoint")].isNull() && m_storage_endpoint_isValid;
}

QString OAISecurityAlertPolicyProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISecurityAlertPolicyProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_disabled_alerts.size() > 0) {
        obj.insert(QString("disabledAlerts"), ::OpenAPI::toJsonValue(m_disabled_alerts));
    }
    if (m_email_account_admins_isSet) {
        obj.insert(QString("emailAccountAdmins"), ::OpenAPI::toJsonValue(m_email_account_admins));
    }
    if (m_email_addresses.size() > 0) {
        obj.insert(QString("emailAddresses"), ::OpenAPI::toJsonValue(m_email_addresses));
    }
    if (m_retention_days_isSet) {
        obj.insert(QString("retentionDays"), ::OpenAPI::toJsonValue(m_retention_days));
    }
    if (m_state_isSet) {
        obj.insert(QString("state"), ::OpenAPI::toJsonValue(m_state));
    }
    if (m_storage_account_access_key_isSet) {
        obj.insert(QString("storageAccountAccessKey"), ::OpenAPI::toJsonValue(m_storage_account_access_key));
    }
    if (m_storage_endpoint_isSet) {
        obj.insert(QString("storageEndpoint"), ::OpenAPI::toJsonValue(m_storage_endpoint));
    }
    return obj;
}

QList<QString> OAISecurityAlertPolicyProperties::getDisabledAlerts() const {
    return m_disabled_alerts;
}
void OAISecurityAlertPolicyProperties::setDisabledAlerts(const QList<QString> &disabled_alerts) {
    m_disabled_alerts = disabled_alerts;
    m_disabled_alerts_isSet = true;
}

bool OAISecurityAlertPolicyProperties::is_disabled_alerts_Set() const{
    return m_disabled_alerts_isSet;
}

bool OAISecurityAlertPolicyProperties::is_disabled_alerts_Valid() const{
    return m_disabled_alerts_isValid;
}

bool OAISecurityAlertPolicyProperties::isEmailAccountAdmins() const {
    return m_email_account_admins;
}
void OAISecurityAlertPolicyProperties::setEmailAccountAdmins(const bool &email_account_admins) {
    m_email_account_admins = email_account_admins;
    m_email_account_admins_isSet = true;
}

bool OAISecurityAlertPolicyProperties::is_email_account_admins_Set() const{
    return m_email_account_admins_isSet;
}

bool OAISecurityAlertPolicyProperties::is_email_account_admins_Valid() const{
    return m_email_account_admins_isValid;
}

QList<QString> OAISecurityAlertPolicyProperties::getEmailAddresses() const {
    return m_email_addresses;
}
void OAISecurityAlertPolicyProperties::setEmailAddresses(const QList<QString> &email_addresses) {
    m_email_addresses = email_addresses;
    m_email_addresses_isSet = true;
}

bool OAISecurityAlertPolicyProperties::is_email_addresses_Set() const{
    return m_email_addresses_isSet;
}

bool OAISecurityAlertPolicyProperties::is_email_addresses_Valid() const{
    return m_email_addresses_isValid;
}

qint32 OAISecurityAlertPolicyProperties::getRetentionDays() const {
    return m_retention_days;
}
void OAISecurityAlertPolicyProperties::setRetentionDays(const qint32 &retention_days) {
    m_retention_days = retention_days;
    m_retention_days_isSet = true;
}

bool OAISecurityAlertPolicyProperties::is_retention_days_Set() const{
    return m_retention_days_isSet;
}

bool OAISecurityAlertPolicyProperties::is_retention_days_Valid() const{
    return m_retention_days_isValid;
}

QString OAISecurityAlertPolicyProperties::getState() const {
    return m_state;
}
void OAISecurityAlertPolicyProperties::setState(const QString &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAISecurityAlertPolicyProperties::is_state_Set() const{
    return m_state_isSet;
}

bool OAISecurityAlertPolicyProperties::is_state_Valid() const{
    return m_state_isValid;
}

QString OAISecurityAlertPolicyProperties::getStorageAccountAccessKey() const {
    return m_storage_account_access_key;
}
void OAISecurityAlertPolicyProperties::setStorageAccountAccessKey(const QString &storage_account_access_key) {
    m_storage_account_access_key = storage_account_access_key;
    m_storage_account_access_key_isSet = true;
}

bool OAISecurityAlertPolicyProperties::is_storage_account_access_key_Set() const{
    return m_storage_account_access_key_isSet;
}

bool OAISecurityAlertPolicyProperties::is_storage_account_access_key_Valid() const{
    return m_storage_account_access_key_isValid;
}

QString OAISecurityAlertPolicyProperties::getStorageEndpoint() const {
    return m_storage_endpoint;
}
void OAISecurityAlertPolicyProperties::setStorageEndpoint(const QString &storage_endpoint) {
    m_storage_endpoint = storage_endpoint;
    m_storage_endpoint_isSet = true;
}

bool OAISecurityAlertPolicyProperties::is_storage_endpoint_Set() const{
    return m_storage_endpoint_isSet;
}

bool OAISecurityAlertPolicyProperties::is_storage_endpoint_Valid() const{
    return m_storage_endpoint_isValid;
}

bool OAISecurityAlertPolicyProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_disabled_alerts.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_account_admins_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_addresses.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_retention_days_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_storage_account_access_key_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_storage_endpoint_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISecurityAlertPolicyProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_state_isValid && true;
}

} // namespace OpenAPI
