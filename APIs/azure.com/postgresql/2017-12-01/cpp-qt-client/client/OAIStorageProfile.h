/**
 * PostgreSQLManagementClient
 * The Microsoft Azure management API provides create, read, update, and delete functionality for Azure PostgreSQL resources including servers, databases, firewall rules, VNET rules, security alert policies, log files and configurations with new business model.
 *
 * The version of the OpenAPI document: 2017-12-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStorageProfile.h
 *
 * Storage Profile properties of a server
 */

#ifndef OAIStorageProfile_H
#define OAIStorageProfile_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIStorageProfile : public OAIObject {
public:
    OAIStorageProfile();
    OAIStorageProfile(QString json);
    ~OAIStorageProfile() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getBackupRetentionDays() const;
    void setBackupRetentionDays(const qint32 &backup_retention_days);
    bool is_backup_retention_days_Set() const;
    bool is_backup_retention_days_Valid() const;

    QString getGeoRedundantBackup() const;
    void setGeoRedundantBackup(const QString &geo_redundant_backup);
    bool is_geo_redundant_backup_Set() const;
    bool is_geo_redundant_backup_Valid() const;

    QString getStorageAutogrow() const;
    void setStorageAutogrow(const QString &storage_autogrow);
    bool is_storage_autogrow_Set() const;
    bool is_storage_autogrow_Valid() const;

    qint32 getStorageMb() const;
    void setStorageMb(const qint32 &storage_mb);
    bool is_storage_mb_Set() const;
    bool is_storage_mb_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_backup_retention_days;
    bool m_backup_retention_days_isSet;
    bool m_backup_retention_days_isValid;

    QString m_geo_redundant_backup;
    bool m_geo_redundant_backup_isSet;
    bool m_geo_redundant_backup_isValid;

    QString m_storage_autogrow;
    bool m_storage_autogrow_isSet;
    bool m_storage_autogrow_isValid;

    qint32 m_storage_mb;
    bool m_storage_mb_isSet;
    bool m_storage_mb_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStorageProfile)

#endif // OAIStorageProfile_H
