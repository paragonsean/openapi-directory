# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ConfigurationProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, allowed_values: str=None, data_type: str=None, default_value: str=None, description: str=None, source: str=None, value: str=None):
        """ConfigurationProperties - a model defined in OpenAPI

        :param allowed_values: The allowed_values of this ConfigurationProperties.
        :param data_type: The data_type of this ConfigurationProperties.
        :param default_value: The default_value of this ConfigurationProperties.
        :param description: The description of this ConfigurationProperties.
        :param source: The source of this ConfigurationProperties.
        :param value: The value of this ConfigurationProperties.
        """
        self.openapi_types = {
            'allowed_values': str,
            'data_type': str,
            'default_value': str,
            'description': str,
            'source': str,
            'value': str
        }

        self.attribute_map = {
            'allowed_values': 'allowedValues',
            'data_type': 'dataType',
            'default_value': 'defaultValue',
            'description': 'description',
            'source': 'source',
            'value': 'value'
        }

        self._allowed_values = allowed_values
        self._data_type = data_type
        self._default_value = default_value
        self._description = description
        self._source = source
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ConfigurationProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ConfigurationProperties of this ConfigurationProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def allowed_values(self):
        """Gets the allowed_values of this ConfigurationProperties.

        Allowed values of the configuration.

        :return: The allowed_values of this ConfigurationProperties.
        :rtype: str
        """
        return self._allowed_values

    @allowed_values.setter
    def allowed_values(self, allowed_values):
        """Sets the allowed_values of this ConfigurationProperties.

        Allowed values of the configuration.

        :param allowed_values: The allowed_values of this ConfigurationProperties.
        :type allowed_values: str
        """

        self._allowed_values = allowed_values

    @property
    def data_type(self):
        """Gets the data_type of this ConfigurationProperties.

        Data type of the configuration.

        :return: The data_type of this ConfigurationProperties.
        :rtype: str
        """
        return self._data_type

    @data_type.setter
    def data_type(self, data_type):
        """Sets the data_type of this ConfigurationProperties.

        Data type of the configuration.

        :param data_type: The data_type of this ConfigurationProperties.
        :type data_type: str
        """

        self._data_type = data_type

    @property
    def default_value(self):
        """Gets the default_value of this ConfigurationProperties.

        Default value of the configuration.

        :return: The default_value of this ConfigurationProperties.
        :rtype: str
        """
        return self._default_value

    @default_value.setter
    def default_value(self, default_value):
        """Sets the default_value of this ConfigurationProperties.

        Default value of the configuration.

        :param default_value: The default_value of this ConfigurationProperties.
        :type default_value: str
        """

        self._default_value = default_value

    @property
    def description(self):
        """Gets the description of this ConfigurationProperties.

        Description of the configuration.

        :return: The description of this ConfigurationProperties.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ConfigurationProperties.

        Description of the configuration.

        :param description: The description of this ConfigurationProperties.
        :type description: str
        """

        self._description = description

    @property
    def source(self):
        """Gets the source of this ConfigurationProperties.

        Source of the configuration.

        :return: The source of this ConfigurationProperties.
        :rtype: str
        """
        return self._source

    @source.setter
    def source(self, source):
        """Sets the source of this ConfigurationProperties.

        Source of the configuration.

        :param source: The source of this ConfigurationProperties.
        :type source: str
        """

        self._source = source

    @property
    def value(self):
        """Gets the value of this ConfigurationProperties.

        Value of the configuration.

        :return: The value of this ConfigurationProperties.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this ConfigurationProperties.

        Value of the configuration.

        :param value: The value of this ConfigurationProperties.
        :type value: str
        """

        self._value = value
