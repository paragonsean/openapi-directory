/**
 * PostgreSQLManagementClient
 * The Microsoft Azure management API provides create, read, update, and delete functionality for Azure PostgreSQL resources including servers, databases, firewall rules, log files and configurations.
 *
 * The version of the OpenAPI document: 2017-04-30-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIServerPropertiesForDefaultCreate.h
 *
 * The properties used to create a new server.
 */

#ifndef OAIServerPropertiesForDefaultCreate_H
#define OAIServerPropertiesForDefaultCreate_H

#include <QJsonObject>

#include "OAIServerPropertiesForCreate.h"
#include "OAIServerVersion.h"
#include "OAISslEnforcement.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIServerPropertiesForDefaultCreate : public OAIObject {
public:
    OAIServerPropertiesForDefaultCreate();
    OAIServerPropertiesForDefaultCreate(QString json);
    ~OAIServerPropertiesForDefaultCreate() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAdministratorLogin() const;
    void setAdministratorLogin(const QString &administrator_login);
    bool is_administrator_login_Set() const;
    bool is_administrator_login_Valid() const;

    QString getAdministratorLoginPassword() const;
    void setAdministratorLoginPassword(const QString &administrator_login_password);
    bool is_administrator_login_password_Set() const;
    bool is_administrator_login_password_Valid() const;

    QString getCreateMode() const;
    void setCreateMode(const QString &create_mode);
    bool is_create_mode_Set() const;
    bool is_create_mode_Valid() const;

    OAISslEnforcement getSslEnforcement() const;
    void setSslEnforcement(const OAISslEnforcement &ssl_enforcement);
    bool is_ssl_enforcement_Set() const;
    bool is_ssl_enforcement_Valid() const;

    qint64 getStorageMb() const;
    void setStorageMb(const qint64 &storage_mb);
    bool is_storage_mb_Set() const;
    bool is_storage_mb_Valid() const;

    OAIServerVersion getVersion() const;
    void setVersion(const OAIServerVersion &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_administrator_login;
    bool m_administrator_login_isSet;
    bool m_administrator_login_isValid;

    QString m_administrator_login_password;
    bool m_administrator_login_password_isSet;
    bool m_administrator_login_password_isValid;

    QString m_create_mode;
    bool m_create_mode_isSet;
    bool m_create_mode_isValid;

    OAISslEnforcement m_ssl_enforcement;
    bool m_ssl_enforcement_isSet;
    bool m_ssl_enforcement_isValid;

    qint64 m_storage_mb;
    bool m_storage_mb_isSet;
    bool m_storage_mb_isValid;

    OAIServerVersion m_version;
    bool m_version_isSet;
    bool m_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIServerPropertiesForDefaultCreate)

#endif // OAIServerPropertiesForDefaultCreate_H
