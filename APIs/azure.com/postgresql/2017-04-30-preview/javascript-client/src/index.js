/**
 * PostgreSQLManagementClient
 * The Microsoft Azure management API provides create, read, update, and delete functionality for Azure PostgreSQL resources including servers, databases, firewall rules, log files and configurations.
 *
 * The version of the OpenAPI document: 2017-04-30-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Configuration from './model/Configuration';
import ConfigurationListResult from './model/ConfigurationListResult';
import ConfigurationProperties from './model/ConfigurationProperties';
import Database from './model/Database';
import DatabaseListResult from './model/DatabaseListResult';
import DatabaseProperties from './model/DatabaseProperties';
import FirewallRule from './model/FirewallRule';
import FirewallRuleListResult from './model/FirewallRuleListResult';
import FirewallRuleProperties from './model/FirewallRuleProperties';
import LogFile from './model/LogFile';
import LogFileListResult from './model/LogFileListResult';
import LogFileProperties from './model/LogFileProperties';
import NameAvailability from './model/NameAvailability';
import NameAvailabilityRequest from './model/NameAvailabilityRequest';
import Operation from './model/Operation';
import OperationDisplay from './model/OperationDisplay';
import OperationListResult from './model/OperationListResult';
import PerformanceTierListResult from './model/PerformanceTierListResult';
import PerformanceTierProperties from './model/PerformanceTierProperties';
import PerformanceTierServiceLevelObjectives from './model/PerformanceTierServiceLevelObjectives';
import ProxyResource from './model/ProxyResource';
import Server from './model/Server';
import ServerForCreate from './model/ServerForCreate';
import ServerListResult from './model/ServerListResult';
import ServerProperties from './model/ServerProperties';
import ServerPropertiesForCreate from './model/ServerPropertiesForCreate';
import ServerPropertiesForDefaultCreate from './model/ServerPropertiesForDefaultCreate';
import ServerPropertiesForRestore from './model/ServerPropertiesForRestore';
import ServerUpdateParameters from './model/ServerUpdateParameters';
import ServerUpdateParametersProperties from './model/ServerUpdateParametersProperties';
import ServerVersion from './model/ServerVersion';
import Sku from './model/Sku';
import SslEnforcement from './model/SslEnforcement';
import TrackedResource from './model/TrackedResource';
import CheckNameAvailabilityApi from './api/CheckNameAvailabilityApi';
import ConfigurationsApi from './api/ConfigurationsApi';
import DatabasesApi from './api/DatabasesApi';
import FirewallRulesApi from './api/FirewallRulesApi';
import LocationBasedPerformanceTierApi from './api/LocationBasedPerformanceTierApi';
import LogFilesApi from './api/LogFilesApi';
import OperationsApi from './api/OperationsApi';
import PerformanceTiersApi from './api/PerformanceTiersApi';
import ServersApi from './api/ServersApi';


/**
* The Microsoft Azure management API provides create, read, update, and delete functionality for Azure PostgreSQL resources including servers, databases, firewall rules, log files and configurations..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var PostgreSqlManagementClient = require('index'); // See note below*.
* var xxxSvc = new PostgreSqlManagementClient.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new PostgreSqlManagementClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new PostgreSqlManagementClient.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new PostgreSqlManagementClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2017-04-30-preview
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Configuration model constructor.
     * @property {module:model/Configuration}
     */
    Configuration,

    /**
     * The ConfigurationListResult model constructor.
     * @property {module:model/ConfigurationListResult}
     */
    ConfigurationListResult,

    /**
     * The ConfigurationProperties model constructor.
     * @property {module:model/ConfigurationProperties}
     */
    ConfigurationProperties,

    /**
     * The Database model constructor.
     * @property {module:model/Database}
     */
    Database,

    /**
     * The DatabaseListResult model constructor.
     * @property {module:model/DatabaseListResult}
     */
    DatabaseListResult,

    /**
     * The DatabaseProperties model constructor.
     * @property {module:model/DatabaseProperties}
     */
    DatabaseProperties,

    /**
     * The FirewallRule model constructor.
     * @property {module:model/FirewallRule}
     */
    FirewallRule,

    /**
     * The FirewallRuleListResult model constructor.
     * @property {module:model/FirewallRuleListResult}
     */
    FirewallRuleListResult,

    /**
     * The FirewallRuleProperties model constructor.
     * @property {module:model/FirewallRuleProperties}
     */
    FirewallRuleProperties,

    /**
     * The LogFile model constructor.
     * @property {module:model/LogFile}
     */
    LogFile,

    /**
     * The LogFileListResult model constructor.
     * @property {module:model/LogFileListResult}
     */
    LogFileListResult,

    /**
     * The LogFileProperties model constructor.
     * @property {module:model/LogFileProperties}
     */
    LogFileProperties,

    /**
     * The NameAvailability model constructor.
     * @property {module:model/NameAvailability}
     */
    NameAvailability,

    /**
     * The NameAvailabilityRequest model constructor.
     * @property {module:model/NameAvailabilityRequest}
     */
    NameAvailabilityRequest,

    /**
     * The Operation model constructor.
     * @property {module:model/Operation}
     */
    Operation,

    /**
     * The OperationDisplay model constructor.
     * @property {module:model/OperationDisplay}
     */
    OperationDisplay,

    /**
     * The OperationListResult model constructor.
     * @property {module:model/OperationListResult}
     */
    OperationListResult,

    /**
     * The PerformanceTierListResult model constructor.
     * @property {module:model/PerformanceTierListResult}
     */
    PerformanceTierListResult,

    /**
     * The PerformanceTierProperties model constructor.
     * @property {module:model/PerformanceTierProperties}
     */
    PerformanceTierProperties,

    /**
     * The PerformanceTierServiceLevelObjectives model constructor.
     * @property {module:model/PerformanceTierServiceLevelObjectives}
     */
    PerformanceTierServiceLevelObjectives,

    /**
     * The ProxyResource model constructor.
     * @property {module:model/ProxyResource}
     */
    ProxyResource,

    /**
     * The Server model constructor.
     * @property {module:model/Server}
     */
    Server,

    /**
     * The ServerForCreate model constructor.
     * @property {module:model/ServerForCreate}
     */
    ServerForCreate,

    /**
     * The ServerListResult model constructor.
     * @property {module:model/ServerListResult}
     */
    ServerListResult,

    /**
     * The ServerProperties model constructor.
     * @property {module:model/ServerProperties}
     */
    ServerProperties,

    /**
     * The ServerPropertiesForCreate model constructor.
     * @property {module:model/ServerPropertiesForCreate}
     */
    ServerPropertiesForCreate,

    /**
     * The ServerPropertiesForDefaultCreate model constructor.
     * @property {module:model/ServerPropertiesForDefaultCreate}
     */
    ServerPropertiesForDefaultCreate,

    /**
     * The ServerPropertiesForRestore model constructor.
     * @property {module:model/ServerPropertiesForRestore}
     */
    ServerPropertiesForRestore,

    /**
     * The ServerUpdateParameters model constructor.
     * @property {module:model/ServerUpdateParameters}
     */
    ServerUpdateParameters,

    /**
     * The ServerUpdateParametersProperties model constructor.
     * @property {module:model/ServerUpdateParametersProperties}
     */
    ServerUpdateParametersProperties,

    /**
     * The ServerVersion model constructor.
     * @property {module:model/ServerVersion}
     */
    ServerVersion,

    /**
     * The Sku model constructor.
     * @property {module:model/Sku}
     */
    Sku,

    /**
     * The SslEnforcement model constructor.
     * @property {module:model/SslEnforcement}
     */
    SslEnforcement,

    /**
     * The TrackedResource model constructor.
     * @property {module:model/TrackedResource}
     */
    TrackedResource,

    /**
    * The CheckNameAvailabilityApi service constructor.
    * @property {module:api/CheckNameAvailabilityApi}
    */
    CheckNameAvailabilityApi,

    /**
    * The ConfigurationsApi service constructor.
    * @property {module:api/ConfigurationsApi}
    */
    ConfigurationsApi,

    /**
    * The DatabasesApi service constructor.
    * @property {module:api/DatabasesApi}
    */
    DatabasesApi,

    /**
    * The FirewallRulesApi service constructor.
    * @property {module:api/FirewallRulesApi}
    */
    FirewallRulesApi,

    /**
    * The LocationBasedPerformanceTierApi service constructor.
    * @property {module:api/LocationBasedPerformanceTierApi}
    */
    LocationBasedPerformanceTierApi,

    /**
    * The LogFilesApi service constructor.
    * @property {module:api/LogFilesApi}
    */
    LogFilesApi,

    /**
    * The OperationsApi service constructor.
    * @property {module:api/OperationsApi}
    */
    OperationsApi,

    /**
    * The PerformanceTiersApi service constructor.
    * @property {module:api/PerformanceTiersApi}
    */
    PerformanceTiersApi,

    /**
    * The ServersApi service constructor.
    * @property {module:api/ServersApi}
    */
    ServersApi
};
