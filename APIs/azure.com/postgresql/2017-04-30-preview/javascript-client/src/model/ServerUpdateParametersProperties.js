/**
 * PostgreSQLManagementClient
 * The Microsoft Azure management API provides create, read, update, and delete functionality for Azure PostgreSQL resources including servers, databases, firewall rules, log files and configurations.
 *
 * The version of the OpenAPI document: 2017-04-30-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ServerVersion from './ServerVersion';
import SslEnforcement from './SslEnforcement';

/**
 * The ServerUpdateParametersProperties model module.
 * @module model/ServerUpdateParametersProperties
 * @version 2017-04-30-preview
 */
class ServerUpdateParametersProperties {
    /**
     * Constructs a new <code>ServerUpdateParametersProperties</code>.
     * The properties that can be updated for a server.
     * @alias module:model/ServerUpdateParametersProperties
     */
    constructor() { 
        
        ServerUpdateParametersProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ServerUpdateParametersProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ServerUpdateParametersProperties} obj Optional instance to populate.
     * @return {module:model/ServerUpdateParametersProperties} The populated <code>ServerUpdateParametersProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ServerUpdateParametersProperties();

            if (data.hasOwnProperty('administratorLoginPassword')) {
                obj['administratorLoginPassword'] = ApiClient.convertToType(data['administratorLoginPassword'], 'String');
            }
            if (data.hasOwnProperty('sslEnforcement')) {
                obj['sslEnforcement'] = SslEnforcement.constructFromObject(data['sslEnforcement']);
            }
            if (data.hasOwnProperty('storageMB')) {
                obj['storageMB'] = ApiClient.convertToType(data['storageMB'], 'Number');
            }
            if (data.hasOwnProperty('version')) {
                obj['version'] = ServerVersion.constructFromObject(data['version']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ServerUpdateParametersProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ServerUpdateParametersProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['administratorLoginPassword'] && !(typeof data['administratorLoginPassword'] === 'string' || data['administratorLoginPassword'] instanceof String)) {
            throw new Error("Expected the field `administratorLoginPassword` to be a primitive type in the JSON string but got " + data['administratorLoginPassword']);
        }

        return true;
    }


}



/**
 * The password of the administrator login.
 * @member {String} administratorLoginPassword
 */
ServerUpdateParametersProperties.prototype['administratorLoginPassword'] = undefined;

/**
 * @member {module:model/SslEnforcement} sslEnforcement
 */
ServerUpdateParametersProperties.prototype['sslEnforcement'] = undefined;

/**
 * The max storage allowed for a server.
 * @member {Number} storageMB
 */
ServerUpdateParametersProperties.prototype['storageMB'] = undefined;

/**
 * @member {module:model/ServerVersion} version
 */
ServerUpdateParametersProperties.prototype['version'] = undefined;






export default ServerUpdateParametersProperties;

