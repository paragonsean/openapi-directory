# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PerformanceTierServiceLevelObjectives(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, dtu: int=None, edition: str=None, id: str=None, storage_mb: int=None):
        """PerformanceTierServiceLevelObjectives - a model defined in OpenAPI

        :param dtu: The dtu of this PerformanceTierServiceLevelObjectives.
        :param edition: The edition of this PerformanceTierServiceLevelObjectives.
        :param id: The id of this PerformanceTierServiceLevelObjectives.
        :param storage_mb: The storage_mb of this PerformanceTierServiceLevelObjectives.
        """
        self.openapi_types = {
            'dtu': int,
            'edition': str,
            'id': str,
            'storage_mb': int
        }

        self.attribute_map = {
            'dtu': 'dtu',
            'edition': 'edition',
            'id': 'id',
            'storage_mb': 'storageMB'
        }

        self._dtu = dtu
        self._edition = edition
        self._id = id
        self._storage_mb = storage_mb

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PerformanceTierServiceLevelObjectives':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PerformanceTierServiceLevelObjectives of this PerformanceTierServiceLevelObjectives.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def dtu(self):
        """Gets the dtu of this PerformanceTierServiceLevelObjectives.

        Database throughput unit associated with the service level objective

        :return: The dtu of this PerformanceTierServiceLevelObjectives.
        :rtype: int
        """
        return self._dtu

    @dtu.setter
    def dtu(self, dtu):
        """Sets the dtu of this PerformanceTierServiceLevelObjectives.

        Database throughput unit associated with the service level objective

        :param dtu: The dtu of this PerformanceTierServiceLevelObjectives.
        :type dtu: int
        """

        self._dtu = dtu

    @property
    def edition(self):
        """Gets the edition of this PerformanceTierServiceLevelObjectives.

        Edition of the performance tier.

        :return: The edition of this PerformanceTierServiceLevelObjectives.
        :rtype: str
        """
        return self._edition

    @edition.setter
    def edition(self, edition):
        """Sets the edition of this PerformanceTierServiceLevelObjectives.

        Edition of the performance tier.

        :param edition: The edition of this PerformanceTierServiceLevelObjectives.
        :type edition: str
        """

        self._edition = edition

    @property
    def id(self):
        """Gets the id of this PerformanceTierServiceLevelObjectives.

        ID for the service level objective.

        :return: The id of this PerformanceTierServiceLevelObjectives.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this PerformanceTierServiceLevelObjectives.

        ID for the service level objective.

        :param id: The id of this PerformanceTierServiceLevelObjectives.
        :type id: str
        """

        self._id = id

    @property
    def storage_mb(self):
        """Gets the storage_mb of this PerformanceTierServiceLevelObjectives.

        Maximum storage in MB associated with the service level objective

        :return: The storage_mb of this PerformanceTierServiceLevelObjectives.
        :rtype: int
        """
        return self._storage_mb

    @storage_mb.setter
    def storage_mb(self, storage_mb):
        """Sets the storage_mb of this PerformanceTierServiceLevelObjectives.

        Maximum storage in MB associated with the service level objective

        :param storage_mb: The storage_mb of this PerformanceTierServiceLevelObjectives.
        :type storage_mb: int
        """

        self._storage_mb = storage_mb
