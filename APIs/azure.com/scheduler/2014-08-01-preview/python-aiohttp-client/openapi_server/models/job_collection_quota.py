# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.job_max_recurrence import JobMaxRecurrence
from openapi_server import util


class JobCollectionQuota(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, max_job_count: int=None, max_job_occurrence: int=None, max_recurrence: JobMaxRecurrence=None):
        """JobCollectionQuota - a model defined in OpenAPI

        :param max_job_count: The max_job_count of this JobCollectionQuota.
        :param max_job_occurrence: The max_job_occurrence of this JobCollectionQuota.
        :param max_recurrence: The max_recurrence of this JobCollectionQuota.
        """
        self.openapi_types = {
            'max_job_count': int,
            'max_job_occurrence': int,
            'max_recurrence': JobMaxRecurrence
        }

        self.attribute_map = {
            'max_job_count': 'maxJobCount',
            'max_job_occurrence': 'maxJobOccurrence',
            'max_recurrence': 'maxRecurrence'
        }

        self._max_job_count = max_job_count
        self._max_job_occurrence = max_job_occurrence
        self._max_recurrence = max_recurrence

    @classmethod
    def from_dict(cls, dikt: dict) -> 'JobCollectionQuota':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The JobCollectionQuota of this JobCollectionQuota.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def max_job_count(self):
        """Gets the max_job_count of this JobCollectionQuota.

        Gets or set the maximum job count.

        :return: The max_job_count of this JobCollectionQuota.
        :rtype: int
        """
        return self._max_job_count

    @max_job_count.setter
    def max_job_count(self, max_job_count):
        """Sets the max_job_count of this JobCollectionQuota.

        Gets or set the maximum job count.

        :param max_job_count: The max_job_count of this JobCollectionQuota.
        :type max_job_count: int
        """

        self._max_job_count = max_job_count

    @property
    def max_job_occurrence(self):
        """Gets the max_job_occurrence of this JobCollectionQuota.

        Gets or sets the maximum job occurrence.

        :return: The max_job_occurrence of this JobCollectionQuota.
        :rtype: int
        """
        return self._max_job_occurrence

    @max_job_occurrence.setter
    def max_job_occurrence(self, max_job_occurrence):
        """Sets the max_job_occurrence of this JobCollectionQuota.

        Gets or sets the maximum job occurrence.

        :param max_job_occurrence: The max_job_occurrence of this JobCollectionQuota.
        :type max_job_occurrence: int
        """

        self._max_job_occurrence = max_job_occurrence

    @property
    def max_recurrence(self):
        """Gets the max_recurrence of this JobCollectionQuota.


        :return: The max_recurrence of this JobCollectionQuota.
        :rtype: JobMaxRecurrence
        """
        return self._max_recurrence

    @max_recurrence.setter
    def max_recurrence(self, max_recurrence):
        """Sets the max_recurrence of this JobCollectionQuota.


        :param max_recurrence: The max_recurrence of this JobCollectionQuota.
        :type max_recurrence: JobMaxRecurrence
        """

        self._max_recurrence = max_recurrence
