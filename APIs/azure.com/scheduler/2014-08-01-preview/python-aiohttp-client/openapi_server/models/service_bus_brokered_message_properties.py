# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ServiceBusBrokeredMessageProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, content_type: str=None, correlation_id: str=None, force_persistence: bool=None, label: str=None, message_id: str=None, partition_key: str=None, reply_to: str=None, reply_to_session_id: str=None, scheduled_enqueue_time_utc: datetime=None, session_id: str=None, time_to_live: datetime=None, to: str=None, via_partition_key: str=None):
        """ServiceBusBrokeredMessageProperties - a model defined in OpenAPI

        :param content_type: The content_type of this ServiceBusBrokeredMessageProperties.
        :param correlation_id: The correlation_id of this ServiceBusBrokeredMessageProperties.
        :param force_persistence: The force_persistence of this ServiceBusBrokeredMessageProperties.
        :param label: The label of this ServiceBusBrokeredMessageProperties.
        :param message_id: The message_id of this ServiceBusBrokeredMessageProperties.
        :param partition_key: The partition_key of this ServiceBusBrokeredMessageProperties.
        :param reply_to: The reply_to of this ServiceBusBrokeredMessageProperties.
        :param reply_to_session_id: The reply_to_session_id of this ServiceBusBrokeredMessageProperties.
        :param scheduled_enqueue_time_utc: The scheduled_enqueue_time_utc of this ServiceBusBrokeredMessageProperties.
        :param session_id: The session_id of this ServiceBusBrokeredMessageProperties.
        :param time_to_live: The time_to_live of this ServiceBusBrokeredMessageProperties.
        :param to: The to of this ServiceBusBrokeredMessageProperties.
        :param via_partition_key: The via_partition_key of this ServiceBusBrokeredMessageProperties.
        """
        self.openapi_types = {
            'content_type': str,
            'correlation_id': str,
            'force_persistence': bool,
            'label': str,
            'message_id': str,
            'partition_key': str,
            'reply_to': str,
            'reply_to_session_id': str,
            'scheduled_enqueue_time_utc': datetime,
            'session_id': str,
            'time_to_live': datetime,
            'to': str,
            'via_partition_key': str
        }

        self.attribute_map = {
            'content_type': 'contentType',
            'correlation_id': 'correlationId',
            'force_persistence': 'forcePersistence',
            'label': 'label',
            'message_id': 'messageId',
            'partition_key': 'partitionKey',
            'reply_to': 'replyTo',
            'reply_to_session_id': 'replyToSessionId',
            'scheduled_enqueue_time_utc': 'scheduledEnqueueTimeUtc',
            'session_id': 'sessionId',
            'time_to_live': 'timeToLive',
            'to': 'to',
            'via_partition_key': 'viaPartitionKey'
        }

        self._content_type = content_type
        self._correlation_id = correlation_id
        self._force_persistence = force_persistence
        self._label = label
        self._message_id = message_id
        self._partition_key = partition_key
        self._reply_to = reply_to
        self._reply_to_session_id = reply_to_session_id
        self._scheduled_enqueue_time_utc = scheduled_enqueue_time_utc
        self._session_id = session_id
        self._time_to_live = time_to_live
        self._to = to
        self._via_partition_key = via_partition_key

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ServiceBusBrokeredMessageProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ServiceBusBrokeredMessageProperties of this ServiceBusBrokeredMessageProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def content_type(self):
        """Gets the content_type of this ServiceBusBrokeredMessageProperties.

        Gets or sets the content type.

        :return: The content_type of this ServiceBusBrokeredMessageProperties.
        :rtype: str
        """
        return self._content_type

    @content_type.setter
    def content_type(self, content_type):
        """Sets the content_type of this ServiceBusBrokeredMessageProperties.

        Gets or sets the content type.

        :param content_type: The content_type of this ServiceBusBrokeredMessageProperties.
        :type content_type: str
        """

        self._content_type = content_type

    @property
    def correlation_id(self):
        """Gets the correlation_id of this ServiceBusBrokeredMessageProperties.

        Gets or sets the correlation id.

        :return: The correlation_id of this ServiceBusBrokeredMessageProperties.
        :rtype: str
        """
        return self._correlation_id

    @correlation_id.setter
    def correlation_id(self, correlation_id):
        """Sets the correlation_id of this ServiceBusBrokeredMessageProperties.

        Gets or sets the correlation id.

        :param correlation_id: The correlation_id of this ServiceBusBrokeredMessageProperties.
        :type correlation_id: str
        """

        self._correlation_id = correlation_id

    @property
    def force_persistence(self):
        """Gets the force_persistence of this ServiceBusBrokeredMessageProperties.

        Gets or sets the force persistence.

        :return: The force_persistence of this ServiceBusBrokeredMessageProperties.
        :rtype: bool
        """
        return self._force_persistence

    @force_persistence.setter
    def force_persistence(self, force_persistence):
        """Sets the force_persistence of this ServiceBusBrokeredMessageProperties.

        Gets or sets the force persistence.

        :param force_persistence: The force_persistence of this ServiceBusBrokeredMessageProperties.
        :type force_persistence: bool
        """

        self._force_persistence = force_persistence

    @property
    def label(self):
        """Gets the label of this ServiceBusBrokeredMessageProperties.

        Gets or sets the label.

        :return: The label of this ServiceBusBrokeredMessageProperties.
        :rtype: str
        """
        return self._label

    @label.setter
    def label(self, label):
        """Sets the label of this ServiceBusBrokeredMessageProperties.

        Gets or sets the label.

        :param label: The label of this ServiceBusBrokeredMessageProperties.
        :type label: str
        """

        self._label = label

    @property
    def message_id(self):
        """Gets the message_id of this ServiceBusBrokeredMessageProperties.

        Gets or sets the message id.

        :return: The message_id of this ServiceBusBrokeredMessageProperties.
        :rtype: str
        """
        return self._message_id

    @message_id.setter
    def message_id(self, message_id):
        """Sets the message_id of this ServiceBusBrokeredMessageProperties.

        Gets or sets the message id.

        :param message_id: The message_id of this ServiceBusBrokeredMessageProperties.
        :type message_id: str
        """

        self._message_id = message_id

    @property
    def partition_key(self):
        """Gets the partition_key of this ServiceBusBrokeredMessageProperties.

        Gets or sets the partition key.

        :return: The partition_key of this ServiceBusBrokeredMessageProperties.
        :rtype: str
        """
        return self._partition_key

    @partition_key.setter
    def partition_key(self, partition_key):
        """Sets the partition_key of this ServiceBusBrokeredMessageProperties.

        Gets or sets the partition key.

        :param partition_key: The partition_key of this ServiceBusBrokeredMessageProperties.
        :type partition_key: str
        """

        self._partition_key = partition_key

    @property
    def reply_to(self):
        """Gets the reply_to of this ServiceBusBrokeredMessageProperties.

        Gets or sets the reply to.

        :return: The reply_to of this ServiceBusBrokeredMessageProperties.
        :rtype: str
        """
        return self._reply_to

    @reply_to.setter
    def reply_to(self, reply_to):
        """Sets the reply_to of this ServiceBusBrokeredMessageProperties.

        Gets or sets the reply to.

        :param reply_to: The reply_to of this ServiceBusBrokeredMessageProperties.
        :type reply_to: str
        """

        self._reply_to = reply_to

    @property
    def reply_to_session_id(self):
        """Gets the reply_to_session_id of this ServiceBusBrokeredMessageProperties.

        Gets or sets the reply to session id.

        :return: The reply_to_session_id of this ServiceBusBrokeredMessageProperties.
        :rtype: str
        """
        return self._reply_to_session_id

    @reply_to_session_id.setter
    def reply_to_session_id(self, reply_to_session_id):
        """Sets the reply_to_session_id of this ServiceBusBrokeredMessageProperties.

        Gets or sets the reply to session id.

        :param reply_to_session_id: The reply_to_session_id of this ServiceBusBrokeredMessageProperties.
        :type reply_to_session_id: str
        """

        self._reply_to_session_id = reply_to_session_id

    @property
    def scheduled_enqueue_time_utc(self):
        """Gets the scheduled_enqueue_time_utc of this ServiceBusBrokeredMessageProperties.

        Gets or sets the scheduled enqueue time UTC.

        :return: The scheduled_enqueue_time_utc of this ServiceBusBrokeredMessageProperties.
        :rtype: datetime
        """
        return self._scheduled_enqueue_time_utc

    @scheduled_enqueue_time_utc.setter
    def scheduled_enqueue_time_utc(self, scheduled_enqueue_time_utc):
        """Sets the scheduled_enqueue_time_utc of this ServiceBusBrokeredMessageProperties.

        Gets or sets the scheduled enqueue time UTC.

        :param scheduled_enqueue_time_utc: The scheduled_enqueue_time_utc of this ServiceBusBrokeredMessageProperties.
        :type scheduled_enqueue_time_utc: datetime
        """

        self._scheduled_enqueue_time_utc = scheduled_enqueue_time_utc

    @property
    def session_id(self):
        """Gets the session_id of this ServiceBusBrokeredMessageProperties.

        Gets or sets the session id.

        :return: The session_id of this ServiceBusBrokeredMessageProperties.
        :rtype: str
        """
        return self._session_id

    @session_id.setter
    def session_id(self, session_id):
        """Sets the session_id of this ServiceBusBrokeredMessageProperties.

        Gets or sets the session id.

        :param session_id: The session_id of this ServiceBusBrokeredMessageProperties.
        :type session_id: str
        """

        self._session_id = session_id

    @property
    def time_to_live(self):
        """Gets the time_to_live of this ServiceBusBrokeredMessageProperties.

        Gets or sets the time to live.

        :return: The time_to_live of this ServiceBusBrokeredMessageProperties.
        :rtype: datetime
        """
        return self._time_to_live

    @time_to_live.setter
    def time_to_live(self, time_to_live):
        """Sets the time_to_live of this ServiceBusBrokeredMessageProperties.

        Gets or sets the time to live.

        :param time_to_live: The time_to_live of this ServiceBusBrokeredMessageProperties.
        :type time_to_live: datetime
        """

        self._time_to_live = time_to_live

    @property
    def to(self):
        """Gets the to of this ServiceBusBrokeredMessageProperties.

        Gets or sets the to.

        :return: The to of this ServiceBusBrokeredMessageProperties.
        :rtype: str
        """
        return self._to

    @to.setter
    def to(self, to):
        """Sets the to of this ServiceBusBrokeredMessageProperties.

        Gets or sets the to.

        :param to: The to of this ServiceBusBrokeredMessageProperties.
        :type to: str
        """

        self._to = to

    @property
    def via_partition_key(self):
        """Gets the via_partition_key of this ServiceBusBrokeredMessageProperties.

        Gets or sets the via partition key.

        :return: The via_partition_key of this ServiceBusBrokeredMessageProperties.
        :rtype: str
        """
        return self._via_partition_key

    @via_partition_key.setter
    def via_partition_key(self, via_partition_key):
        """Sets the via_partition_key of this ServiceBusBrokeredMessageProperties.

        Gets or sets the via partition key.

        :param via_partition_key: The via_partition_key of this ServiceBusBrokeredMessageProperties.
        :type via_partition_key: str
        """

        self._via_partition_key = via_partition_key
