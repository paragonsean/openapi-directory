/*
 * SchedulerManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2014-08-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ServiceBusBrokeredMessageProperties
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:39:14.666835-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ServiceBusBrokeredMessageProperties {
  public static final String SERIALIZED_NAME_CONTENT_TYPE = "contentType";
  @SerializedName(SERIALIZED_NAME_CONTENT_TYPE)
  private String contentType;

  public static final String SERIALIZED_NAME_CORRELATION_ID = "correlationId";
  @SerializedName(SERIALIZED_NAME_CORRELATION_ID)
  private String correlationId;

  public static final String SERIALIZED_NAME_FORCE_PERSISTENCE = "forcePersistence";
  @SerializedName(SERIALIZED_NAME_FORCE_PERSISTENCE)
  private Boolean forcePersistence;

  public static final String SERIALIZED_NAME_LABEL = "label";
  @SerializedName(SERIALIZED_NAME_LABEL)
  private String label;

  public static final String SERIALIZED_NAME_MESSAGE_ID = "messageId";
  @SerializedName(SERIALIZED_NAME_MESSAGE_ID)
  private String messageId;

  public static final String SERIALIZED_NAME_PARTITION_KEY = "partitionKey";
  @SerializedName(SERIALIZED_NAME_PARTITION_KEY)
  private String partitionKey;

  public static final String SERIALIZED_NAME_REPLY_TO = "replyTo";
  @SerializedName(SERIALIZED_NAME_REPLY_TO)
  private String replyTo;

  public static final String SERIALIZED_NAME_REPLY_TO_SESSION_ID = "replyToSessionId";
  @SerializedName(SERIALIZED_NAME_REPLY_TO_SESSION_ID)
  private String replyToSessionId;

  public static final String SERIALIZED_NAME_SCHEDULED_ENQUEUE_TIME_UTC = "scheduledEnqueueTimeUtc";
  @SerializedName(SERIALIZED_NAME_SCHEDULED_ENQUEUE_TIME_UTC)
  private OffsetDateTime scheduledEnqueueTimeUtc;

  public static final String SERIALIZED_NAME_SESSION_ID = "sessionId";
  @SerializedName(SERIALIZED_NAME_SESSION_ID)
  private String sessionId;

  public static final String SERIALIZED_NAME_TIME_TO_LIVE = "timeToLive";
  @SerializedName(SERIALIZED_NAME_TIME_TO_LIVE)
  private OffsetDateTime timeToLive;

  public static final String SERIALIZED_NAME_TO = "to";
  @SerializedName(SERIALIZED_NAME_TO)
  private String to;

  public static final String SERIALIZED_NAME_VIA_PARTITION_KEY = "viaPartitionKey";
  @SerializedName(SERIALIZED_NAME_VIA_PARTITION_KEY)
  private String viaPartitionKey;

  public ServiceBusBrokeredMessageProperties() {
  }

  public ServiceBusBrokeredMessageProperties contentType(String contentType) {
    this.contentType = contentType;
    return this;
  }

  /**
   * Gets or sets the content type.
   * @return contentType
   */
  @javax.annotation.Nullable
  public String getContentType() {
    return contentType;
  }

  public void setContentType(String contentType) {
    this.contentType = contentType;
  }


  public ServiceBusBrokeredMessageProperties correlationId(String correlationId) {
    this.correlationId = correlationId;
    return this;
  }

  /**
   * Gets or sets the correlation id.
   * @return correlationId
   */
  @javax.annotation.Nullable
  public String getCorrelationId() {
    return correlationId;
  }

  public void setCorrelationId(String correlationId) {
    this.correlationId = correlationId;
  }


  public ServiceBusBrokeredMessageProperties forcePersistence(Boolean forcePersistence) {
    this.forcePersistence = forcePersistence;
    return this;
  }

  /**
   * Gets or sets the force persistence.
   * @return forcePersistence
   */
  @javax.annotation.Nullable
  public Boolean getForcePersistence() {
    return forcePersistence;
  }

  public void setForcePersistence(Boolean forcePersistence) {
    this.forcePersistence = forcePersistence;
  }


  public ServiceBusBrokeredMessageProperties label(String label) {
    this.label = label;
    return this;
  }

  /**
   * Gets or sets the label.
   * @return label
   */
  @javax.annotation.Nullable
  public String getLabel() {
    return label;
  }

  public void setLabel(String label) {
    this.label = label;
  }


  public ServiceBusBrokeredMessageProperties messageId(String messageId) {
    this.messageId = messageId;
    return this;
  }

  /**
   * Gets or sets the message id.
   * @return messageId
   */
  @javax.annotation.Nullable
  public String getMessageId() {
    return messageId;
  }

  public void setMessageId(String messageId) {
    this.messageId = messageId;
  }


  public ServiceBusBrokeredMessageProperties partitionKey(String partitionKey) {
    this.partitionKey = partitionKey;
    return this;
  }

  /**
   * Gets or sets the partition key.
   * @return partitionKey
   */
  @javax.annotation.Nullable
  public String getPartitionKey() {
    return partitionKey;
  }

  public void setPartitionKey(String partitionKey) {
    this.partitionKey = partitionKey;
  }


  public ServiceBusBrokeredMessageProperties replyTo(String replyTo) {
    this.replyTo = replyTo;
    return this;
  }

  /**
   * Gets or sets the reply to.
   * @return replyTo
   */
  @javax.annotation.Nullable
  public String getReplyTo() {
    return replyTo;
  }

  public void setReplyTo(String replyTo) {
    this.replyTo = replyTo;
  }


  public ServiceBusBrokeredMessageProperties replyToSessionId(String replyToSessionId) {
    this.replyToSessionId = replyToSessionId;
    return this;
  }

  /**
   * Gets or sets the reply to session id.
   * @return replyToSessionId
   */
  @javax.annotation.Nullable
  public String getReplyToSessionId() {
    return replyToSessionId;
  }

  public void setReplyToSessionId(String replyToSessionId) {
    this.replyToSessionId = replyToSessionId;
  }


  public ServiceBusBrokeredMessageProperties scheduledEnqueueTimeUtc(OffsetDateTime scheduledEnqueueTimeUtc) {
    this.scheduledEnqueueTimeUtc = scheduledEnqueueTimeUtc;
    return this;
  }

  /**
   * Gets or sets the scheduled enqueue time UTC.
   * @return scheduledEnqueueTimeUtc
   */
  @javax.annotation.Nullable
  public OffsetDateTime getScheduledEnqueueTimeUtc() {
    return scheduledEnqueueTimeUtc;
  }

  public void setScheduledEnqueueTimeUtc(OffsetDateTime scheduledEnqueueTimeUtc) {
    this.scheduledEnqueueTimeUtc = scheduledEnqueueTimeUtc;
  }


  public ServiceBusBrokeredMessageProperties sessionId(String sessionId) {
    this.sessionId = sessionId;
    return this;
  }

  /**
   * Gets or sets the session id.
   * @return sessionId
   */
  @javax.annotation.Nullable
  public String getSessionId() {
    return sessionId;
  }

  public void setSessionId(String sessionId) {
    this.sessionId = sessionId;
  }


  public ServiceBusBrokeredMessageProperties timeToLive(OffsetDateTime timeToLive) {
    this.timeToLive = timeToLive;
    return this;
  }

  /**
   * Gets or sets the time to live.
   * @return timeToLive
   */
  @javax.annotation.Nullable
  public OffsetDateTime getTimeToLive() {
    return timeToLive;
  }

  public void setTimeToLive(OffsetDateTime timeToLive) {
    this.timeToLive = timeToLive;
  }


  public ServiceBusBrokeredMessageProperties to(String to) {
    this.to = to;
    return this;
  }

  /**
   * Gets or sets the to.
   * @return to
   */
  @javax.annotation.Nullable
  public String getTo() {
    return to;
  }

  public void setTo(String to) {
    this.to = to;
  }


  public ServiceBusBrokeredMessageProperties viaPartitionKey(String viaPartitionKey) {
    this.viaPartitionKey = viaPartitionKey;
    return this;
  }

  /**
   * Gets or sets the via partition key.
   * @return viaPartitionKey
   */
  @javax.annotation.Nullable
  public String getViaPartitionKey() {
    return viaPartitionKey;
  }

  public void setViaPartitionKey(String viaPartitionKey) {
    this.viaPartitionKey = viaPartitionKey;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ServiceBusBrokeredMessageProperties serviceBusBrokeredMessageProperties = (ServiceBusBrokeredMessageProperties) o;
    return Objects.equals(this.contentType, serviceBusBrokeredMessageProperties.contentType) &&
        Objects.equals(this.correlationId, serviceBusBrokeredMessageProperties.correlationId) &&
        Objects.equals(this.forcePersistence, serviceBusBrokeredMessageProperties.forcePersistence) &&
        Objects.equals(this.label, serviceBusBrokeredMessageProperties.label) &&
        Objects.equals(this.messageId, serviceBusBrokeredMessageProperties.messageId) &&
        Objects.equals(this.partitionKey, serviceBusBrokeredMessageProperties.partitionKey) &&
        Objects.equals(this.replyTo, serviceBusBrokeredMessageProperties.replyTo) &&
        Objects.equals(this.replyToSessionId, serviceBusBrokeredMessageProperties.replyToSessionId) &&
        Objects.equals(this.scheduledEnqueueTimeUtc, serviceBusBrokeredMessageProperties.scheduledEnqueueTimeUtc) &&
        Objects.equals(this.sessionId, serviceBusBrokeredMessageProperties.sessionId) &&
        Objects.equals(this.timeToLive, serviceBusBrokeredMessageProperties.timeToLive) &&
        Objects.equals(this.to, serviceBusBrokeredMessageProperties.to) &&
        Objects.equals(this.viaPartitionKey, serviceBusBrokeredMessageProperties.viaPartitionKey);
  }

  @Override
  public int hashCode() {
    return Objects.hash(contentType, correlationId, forcePersistence, label, messageId, partitionKey, replyTo, replyToSessionId, scheduledEnqueueTimeUtc, sessionId, timeToLive, to, viaPartitionKey);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ServiceBusBrokeredMessageProperties {\n");
    sb.append("    contentType: ").append(toIndentedString(contentType)).append("\n");
    sb.append("    correlationId: ").append(toIndentedString(correlationId)).append("\n");
    sb.append("    forcePersistence: ").append(toIndentedString(forcePersistence)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    messageId: ").append(toIndentedString(messageId)).append("\n");
    sb.append("    partitionKey: ").append(toIndentedString(partitionKey)).append("\n");
    sb.append("    replyTo: ").append(toIndentedString(replyTo)).append("\n");
    sb.append("    replyToSessionId: ").append(toIndentedString(replyToSessionId)).append("\n");
    sb.append("    scheduledEnqueueTimeUtc: ").append(toIndentedString(scheduledEnqueueTimeUtc)).append("\n");
    sb.append("    sessionId: ").append(toIndentedString(sessionId)).append("\n");
    sb.append("    timeToLive: ").append(toIndentedString(timeToLive)).append("\n");
    sb.append("    to: ").append(toIndentedString(to)).append("\n");
    sb.append("    viaPartitionKey: ").append(toIndentedString(viaPartitionKey)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("contentType");
    openapiFields.add("correlationId");
    openapiFields.add("forcePersistence");
    openapiFields.add("label");
    openapiFields.add("messageId");
    openapiFields.add("partitionKey");
    openapiFields.add("replyTo");
    openapiFields.add("replyToSessionId");
    openapiFields.add("scheduledEnqueueTimeUtc");
    openapiFields.add("sessionId");
    openapiFields.add("timeToLive");
    openapiFields.add("to");
    openapiFields.add("viaPartitionKey");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ServiceBusBrokeredMessageProperties
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ServiceBusBrokeredMessageProperties.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ServiceBusBrokeredMessageProperties is not found in the empty JSON string", ServiceBusBrokeredMessageProperties.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ServiceBusBrokeredMessageProperties.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ServiceBusBrokeredMessageProperties` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("contentType") != null && !jsonObj.get("contentType").isJsonNull()) && !jsonObj.get("contentType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `contentType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("contentType").toString()));
      }
      if ((jsonObj.get("correlationId") != null && !jsonObj.get("correlationId").isJsonNull()) && !jsonObj.get("correlationId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `correlationId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("correlationId").toString()));
      }
      if ((jsonObj.get("label") != null && !jsonObj.get("label").isJsonNull()) && !jsonObj.get("label").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `label` to be a primitive type in the JSON string but got `%s`", jsonObj.get("label").toString()));
      }
      if ((jsonObj.get("messageId") != null && !jsonObj.get("messageId").isJsonNull()) && !jsonObj.get("messageId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `messageId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("messageId").toString()));
      }
      if ((jsonObj.get("partitionKey") != null && !jsonObj.get("partitionKey").isJsonNull()) && !jsonObj.get("partitionKey").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `partitionKey` to be a primitive type in the JSON string but got `%s`", jsonObj.get("partitionKey").toString()));
      }
      if ((jsonObj.get("replyTo") != null && !jsonObj.get("replyTo").isJsonNull()) && !jsonObj.get("replyTo").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `replyTo` to be a primitive type in the JSON string but got `%s`", jsonObj.get("replyTo").toString()));
      }
      if ((jsonObj.get("replyToSessionId") != null && !jsonObj.get("replyToSessionId").isJsonNull()) && !jsonObj.get("replyToSessionId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `replyToSessionId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("replyToSessionId").toString()));
      }
      if ((jsonObj.get("sessionId") != null && !jsonObj.get("sessionId").isJsonNull()) && !jsonObj.get("sessionId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sessionId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sessionId").toString()));
      }
      if ((jsonObj.get("to") != null && !jsonObj.get("to").isJsonNull()) && !jsonObj.get("to").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `to` to be a primitive type in the JSON string but got `%s`", jsonObj.get("to").toString()));
      }
      if ((jsonObj.get("viaPartitionKey") != null && !jsonObj.get("viaPartitionKey").isJsonNull()) && !jsonObj.get("viaPartitionKey").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `viaPartitionKey` to be a primitive type in the JSON string but got `%s`", jsonObj.get("viaPartitionKey").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ServiceBusBrokeredMessageProperties.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ServiceBusBrokeredMessageProperties' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ServiceBusBrokeredMessageProperties> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ServiceBusBrokeredMessageProperties.class));

       return (TypeAdapter<T>) new TypeAdapter<ServiceBusBrokeredMessageProperties>() {
           @Override
           public void write(JsonWriter out, ServiceBusBrokeredMessageProperties value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ServiceBusBrokeredMessageProperties read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ServiceBusBrokeredMessageProperties given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ServiceBusBrokeredMessageProperties
   * @throws IOException if the JSON string is invalid with respect to ServiceBusBrokeredMessageProperties
   */
  public static ServiceBusBrokeredMessageProperties fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ServiceBusBrokeredMessageProperties.class);
  }

  /**
   * Convert an instance of ServiceBusBrokeredMessageProperties to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

