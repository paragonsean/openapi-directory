/*
 * SchedulerManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2014-08-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.JobDefinition;
import org.openapitools.client.model.JobHistoryListResult;
import org.openapitools.client.model.JobListResult;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for JobsApi
 */
@Disabled
public class JobsApiTest {

    private final JobsApi api = new JobsApi();

    /**
     * Provisions a new job or updates an existing job.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jobsCreateOrUpdateTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String jobCollectionName = null;
        String jobName = null;
        String apiVersion = null;
        JobDefinition job = null;
        JobDefinition response = api.jobsCreateOrUpdate(subscriptionId, resourceGroupName, jobCollectionName, jobName, apiVersion, job);
        // TODO: test validations
    }

    /**
     * Deletes a job.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jobsDeleteTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String jobCollectionName = null;
        String jobName = null;
        String apiVersion = null;
        api.jobsDelete(subscriptionId, resourceGroupName, jobCollectionName, jobName, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets a job.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jobsGetTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String jobCollectionName = null;
        String jobName = null;
        String apiVersion = null;
        JobDefinition response = api.jobsGet(subscriptionId, resourceGroupName, jobCollectionName, jobName, apiVersion);
        // TODO: test validations
    }

    /**
     * Lists all jobs under the specified job collection.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jobsListTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String jobCollectionName = null;
        String apiVersion = null;
        Integer $top = null;
        Integer $skip = null;
        String $filter = null;
        JobListResult response = api.jobsList(subscriptionId, resourceGroupName, jobCollectionName, apiVersion, $top, $skip, $filter);
        // TODO: test validations
    }

    /**
     * Lists job history.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jobsListJobHistoryTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String jobCollectionName = null;
        String jobName = null;
        String apiVersion = null;
        Integer $top = null;
        Integer $skip = null;
        String $filter = null;
        JobHistoryListResult response = api.jobsListJobHistory(subscriptionId, resourceGroupName, jobCollectionName, jobName, apiVersion, $top, $skip, $filter);
        // TODO: test validations
    }

    /**
     * Patches an existing job.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jobsPatchTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String jobCollectionName = null;
        String jobName = null;
        String apiVersion = null;
        JobDefinition job = null;
        JobDefinition response = api.jobsPatch(subscriptionId, resourceGroupName, jobCollectionName, jobName, apiVersion, job);
        // TODO: test validations
    }

    /**
     * Runs a job.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jobsRunTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String jobCollectionName = null;
        String jobName = null;
        String apiVersion = null;
        api.jobsRun(subscriptionId, resourceGroupName, jobCollectionName, jobName, apiVersion);
        // TODO: test validations
    }

}
