/**
 * SchedulerManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2014-08-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import JobRecurrenceScheduleMonthlyOccurrence from './JobRecurrenceScheduleMonthlyOccurrence';

/**
 * The JobRecurrenceSchedule model module.
 * @module model/JobRecurrenceSchedule
 * @version 2014-08-01-preview
 */
class JobRecurrenceSchedule {
    /**
     * Constructs a new <code>JobRecurrenceSchedule</code>.
     * @alias module:model/JobRecurrenceSchedule
     */
    constructor() { 
        
        JobRecurrenceSchedule.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>JobRecurrenceSchedule</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/JobRecurrenceSchedule} obj Optional instance to populate.
     * @return {module:model/JobRecurrenceSchedule} The populated <code>JobRecurrenceSchedule</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new JobRecurrenceSchedule();

            if (data.hasOwnProperty('hours')) {
                obj['hours'] = ApiClient.convertToType(data['hours'], ['Number']);
            }
            if (data.hasOwnProperty('minutes')) {
                obj['minutes'] = ApiClient.convertToType(data['minutes'], ['Number']);
            }
            if (data.hasOwnProperty('monthDays')) {
                obj['monthDays'] = ApiClient.convertToType(data['monthDays'], ['Number']);
            }
            if (data.hasOwnProperty('monthlyOccurrences')) {
                obj['monthlyOccurrences'] = ApiClient.convertToType(data['monthlyOccurrences'], [JobRecurrenceScheduleMonthlyOccurrence]);
            }
            if (data.hasOwnProperty('weekDays')) {
                obj['weekDays'] = ApiClient.convertToType(data['weekDays'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>JobRecurrenceSchedule</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>JobRecurrenceSchedule</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['hours'])) {
            throw new Error("Expected the field `hours` to be an array in the JSON data but got " + data['hours']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['minutes'])) {
            throw new Error("Expected the field `minutes` to be an array in the JSON data but got " + data['minutes']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['monthDays'])) {
            throw new Error("Expected the field `monthDays` to be an array in the JSON data but got " + data['monthDays']);
        }
        if (data['monthlyOccurrences']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['monthlyOccurrences'])) {
                throw new Error("Expected the field `monthlyOccurrences` to be an array in the JSON data but got " + data['monthlyOccurrences']);
            }
            // validate the optional field `monthlyOccurrences` (array)
            for (const item of data['monthlyOccurrences']) {
                JobRecurrenceScheduleMonthlyOccurrence.validateJSON(item);
            };
        }
        // ensure the json data is an array
        if (!Array.isArray(data['weekDays'])) {
            throw new Error("Expected the field `weekDays` to be an array in the JSON data but got " + data['weekDays']);
        }

        return true;
    }


}



/**
 * Gets or sets the hours of the day that the job should execute at.
 * @member {Array.<Number>} hours
 */
JobRecurrenceSchedule.prototype['hours'] = undefined;

/**
 * Gets or sets the minutes of the hour that the job should execute at.
 * @member {Array.<Number>} minutes
 */
JobRecurrenceSchedule.prototype['minutes'] = undefined;

/**
 * Gets or sets the days of the month that the job should execute on. Must be between 1 and 31.
 * @member {Array.<Number>} monthDays
 */
JobRecurrenceSchedule.prototype['monthDays'] = undefined;

/**
 * Gets or sets the occurrences of days within a month.
 * @member {Array.<module:model/JobRecurrenceScheduleMonthlyOccurrence>} monthlyOccurrences
 */
JobRecurrenceSchedule.prototype['monthlyOccurrences'] = undefined;

/**
 * Gets or sets the days of the week that the job should execute on.
 * @member {Array.<module:model/JobRecurrenceSchedule.WeekDaysEnum>} weekDays
 */
JobRecurrenceSchedule.prototype['weekDays'] = undefined;





/**
 * Allowed values for the <code>weekDays</code> property.
 * @enum {String}
 * @readonly
 */
JobRecurrenceSchedule['WeekDaysEnum'] = {

    /**
     * value: "Monday"
     * @const
     */
    "Monday": "Monday",

    /**
     * value: "Tuesday"
     * @const
     */
    "Tuesday": "Tuesday",

    /**
     * value: "Wednesday"
     * @const
     */
    "Wednesday": "Wednesday",

    /**
     * value: "Thursday"
     * @const
     */
    "Thursday": "Thursday",

    /**
     * value: "Friday"
     * @const
     */
    "Friday": "Friday",

    /**
     * value: "Saturday"
     * @const
     */
    "Saturday": "Saturday",

    /**
     * value: "Sunday"
     * @const
     */
    "Sunday": "Sunday"
};



export default JobRecurrenceSchedule;

