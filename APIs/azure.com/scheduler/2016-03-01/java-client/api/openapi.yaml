openapi: 3.0.1
info:
  title: SchedulerManagementClient
  version: 2016-03-01
  x-apisguru-categories:
  - cloud
  x-logo:
    url: https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png
  x-origin:
  - format: swagger
    url: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/scheduler/resource-manager/Microsoft.Scheduler/stable/2016-03-01/scheduler.json
    version: "2.0"
  x-preferred: true
  x-providerName: azure.com
  x-serviceName: scheduler
  x-tags:
  - Azure
  - Microsoft
servers:
- url: https://management.azure.com/
paths:
  /subscriptions/{subscriptionId}/providers/Microsoft.Scheduler/jobCollections:
    get:
      description: Gets all job collections under specified subscription.
      operationId: JobCollections_ListBySubscription
      parameters:
      - description: The subscription id.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: The API version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobCollectionListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/JobCollectionListResult'
          description: The job collections have been successfully returned.
      tags:
      - JobCollections
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
      - text/json
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Scheduler/jobCollections:
    get:
      description: Gets all job collections under specified resource group.
      operationId: JobCollections_ListByResourceGroup
      parameters:
      - description: The subscription id.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: The resource group name.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The API version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobCollectionListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/JobCollectionListResult'
          description: The job collections have been successfully returned.
      tags:
      - JobCollections
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
      - text/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Scheduler/jobCollections/{jobCollectionName}
  : delete:
      description: Deletes a job collection.
      operationId: JobCollections_Delete
      parameters:
      - description: The subscription id.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: The resource group name.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The job collection name.
        in: path
        name: jobCollectionName
        required: true
        schema:
          type: string
      - description: The API version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: The job collection has been successfully deleted.
        "202":
          content: {}
          description: The delete operation for the job collection has been accepted
            and will complete asynchronously.
      tags:
      - JobCollections
      x-ms-long-running-operation: true
      x-accepts:
      - application/json
    get:
      description: Gets a job collection.
      operationId: JobCollections_Get
      parameters:
      - description: The subscription id.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: The resource group name.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The job collection name.
        in: path
        name: jobCollectionName
        required: true
        schema:
          type: string
      - description: The API version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobCollectionDefinition'
            text/json:
              schema:
                $ref: '#/components/schemas/JobCollectionDefinition'
          description: The job collection has been successfully returned.
      tags:
      - JobCollections
      x-accepts:
      - application/json
      - text/json
    patch:
      description: Patches an existing job collection.
      operationId: JobCollections_Patch
      parameters:
      - description: The subscription id.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: The resource group name.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The job collection name.
        in: path
        name: jobCollectionName
        required: true
        schema:
          type: string
      - description: The API version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobCollectionDefinition'
          text/json:
            schema:
              $ref: '#/components/schemas/JobCollectionDefinition'
        description: The job collection definition.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobCollectionDefinition'
            text/json:
              schema:
                $ref: '#/components/schemas/JobCollectionDefinition'
          description: The job collection has been successfully patched.
      tags:
      - JobCollections
      x-codegen-request-body-name: jobCollection
      x-content-type: application/json
      x-accepts:
      - application/json
      - text/json
    put:
      description: Provisions a new job collection or updates an existing job collection.
      operationId: JobCollections_CreateOrUpdate
      parameters:
      - description: The subscription id.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: The resource group name.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The job collection name.
        in: path
        name: jobCollectionName
        required: true
        schema:
          type: string
      - description: The API version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobCollectionDefinition'
          text/json:
            schema:
              $ref: '#/components/schemas/JobCollectionDefinition'
        description: The job collection definition.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobCollectionDefinition'
            text/json:
              schema:
                $ref: '#/components/schemas/JobCollectionDefinition'
          description: The job collection has been successfully updated.
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobCollectionDefinition'
            text/json:
              schema:
                $ref: '#/components/schemas/JobCollectionDefinition'
          description: The job collection has been successfully created.
      tags:
      - JobCollections
      x-codegen-request-body-name: jobCollection
      x-content-type: application/json
      x-accepts:
      - application/json
      - text/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Scheduler/jobCollections/{jobCollectionName}/disable
  : post:
      description: Disables all of the jobs in the job collection.
      operationId: JobCollections_Disable
      parameters:
      - description: The subscription id.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: The resource group name.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The job collection name.
        in: path
        name: jobCollectionName
        required: true
        schema:
          type: string
      - description: The API version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: All of the jobs in the job collection have been successfully
            disabled.
        "202":
          content: {}
          description: Accepted and the disable job collection operation will complete
            asynchronously.
      tags:
      - JobCollections
      x-ms-long-running-operation: true
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Scheduler/jobCollections/{jobCollectionName}/enable
  : post:
      description: Enables all of the jobs in the job collection.
      operationId: JobCollections_Enable
      parameters:
      - description: The subscription id.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: The resource group name.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The job collection name.
        in: path
        name: jobCollectionName
        required: true
        schema:
          type: string
      - description: The API version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: All of the jobs in the job collection have been successfully
            enabled.
        "202":
          content: {}
          description: Accepted and the enable job collection operation will complete
            asynchronously.
      tags:
      - JobCollections
      x-ms-long-running-operation: true
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Scheduler/jobCollections/{jobCollectionName}/jobs
  : get:
      description: Lists all jobs under the specified job collection.
      operationId: Jobs_List
      parameters:
      - description: The subscription id.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: The resource group name.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The job collection name.
        in: path
        name: jobCollectionName
        required: true
        schema:
          type: string
      - description: The API version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: "The number of jobs to request, in the of range of [1..100]."
        in: query
        name: $top
        schema:
          maximum: 100
          minimum: 1
          type: integer
      - description: The (0-based) index of the job history list from which to begin
          requesting entries.
        in: query
        name: $skip
        schema:
          type: integer
      - description: The filter to apply on the job state.
        in: query
        name: $filter
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/JobListResult'
          description: The job has been successfully returned.
      tags:
      - Jobs
      x-ms-odata: '#/definitions/JobStateFilter'
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
      - text/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Scheduler/jobCollections/{jobCollectionName}/jobs/{jobName}
  : delete:
      description: Deletes a job.
      operationId: Jobs_Delete
      parameters:
      - description: The subscription id.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: The resource group name.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The job collection name.
        in: path
        name: jobCollectionName
        required: true
        schema:
          type: string
      - description: The job name.
        in: path
        name: jobName
        required: true
        schema:
          type: string
      - description: The API version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: The job has been successfully deleted.
      tags:
      - Jobs
      x-accepts:
      - application/json
    get:
      description: Gets a job.
      operationId: Jobs_Get
      parameters:
      - description: The subscription id.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: The resource group name.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The job collection name.
        in: path
        name: jobCollectionName
        required: true
        schema:
          type: string
      - description: The job name.
        in: path
        name: jobName
        required: true
        schema:
          type: string
      - description: The API version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobDefinition'
            text/json:
              schema:
                $ref: '#/components/schemas/JobDefinition'
          description: The job has been successfully returned.
      tags:
      - Jobs
      x-accepts:
      - application/json
      - text/json
    patch:
      description: Patches an existing job.
      operationId: Jobs_Patch
      parameters:
      - description: The subscription id.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: The resource group name.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The job collection name.
        in: path
        name: jobCollectionName
        required: true
        schema:
          type: string
      - description: The job name.
        in: path
        name: jobName
        required: true
        schema:
          type: string
      - description: The API version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobDefinition'
          text/json:
            schema:
              $ref: '#/components/schemas/JobDefinition'
        description: The job definition.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobDefinition'
            text/json:
              schema:
                $ref: '#/components/schemas/JobDefinition'
          description: The job has been successfully patched.
      tags:
      - Jobs
      x-codegen-request-body-name: job
      x-content-type: application/json
      x-accepts:
      - application/json
      - text/json
    put:
      description: Provisions a new job or updates an existing job.
      operationId: Jobs_CreateOrUpdate
      parameters:
      - description: The subscription id.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: The resource group name.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The job collection name.
        in: path
        name: jobCollectionName
        required: true
        schema:
          type: string
      - description: The job name.
        in: path
        name: jobName
        required: true
        schema:
          type: string
      - description: The API version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobDefinition'
          text/json:
            schema:
              $ref: '#/components/schemas/JobDefinition'
        description: The job definition.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobDefinition'
            text/json:
              schema:
                $ref: '#/components/schemas/JobDefinition'
          description: The job has been successfully updated.
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobDefinition'
            text/json:
              schema:
                $ref: '#/components/schemas/JobDefinition'
          description: The job has been successfully created.
      tags:
      - Jobs
      x-codegen-request-body-name: job
      x-content-type: application/json
      x-accepts:
      - application/json
      - text/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Scheduler/jobCollections/{jobCollectionName}/jobs/{jobName}/history
  : get:
      description: Lists job history.
      operationId: Jobs_ListJobHistory
      parameters:
      - description: The subscription id.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: The resource group name.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The job collection name.
        in: path
        name: jobCollectionName
        required: true
        schema:
          type: string
      - description: The job name.
        in: path
        name: jobName
        required: true
        schema:
          type: string
      - description: The API version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: "the number of job history to request, in the of range of [1..100]."
        in: query
        name: $top
        schema:
          maximum: 100
          minimum: 1
          type: integer
      - description: The (0-based) index of the job history list from which to begin
          requesting entries.
        in: query
        name: $skip
        schema:
          type: integer
      - description: The filter to apply on the job state.
        in: query
        name: $filter
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobHistoryListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/JobHistoryListResult'
          description: The job histories have been successfully returned.
      tags:
      - Jobs
      x-ms-odata: '#/definitions/JobHistoryFilter'
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
      - text/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Scheduler/jobCollections/{jobCollectionName}/jobs/{jobName}/run
  : post:
      description: Runs a job.
      operationId: Jobs_Run
      parameters:
      - description: The subscription id.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: The resource group name.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The job collection name.
        in: path
        name: jobCollectionName
        required: true
        schema:
          type: string
      - description: The job name.
        in: path
        name: jobName
        required: true
        schema:
          type: string
      - description: The API version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: The job has been successfully run.
      tags:
      - Jobs
      x-accepts:
      - application/json
components:
  parameters:
    apiVersion:
      description: The API version.
      in: query
      name: api-version
      required: true
      schema:
        type: string
    subscriptionId:
      description: The subscription id.
      in: path
      name: subscriptionId
      required: true
      schema:
        type: string
  schemas:
    BasicAuthentication:
      allOf:
      - $ref: '#/components/schemas/HttpAuthentication'
      properties:
        password:
          description: "Gets or sets the password, return value will always be empty."
          type: string
        username:
          description: Gets or sets the username.
          type: string
      x-ms-discriminator-value: Basic
    ClientCertAuthentication:
      allOf:
      - $ref: '#/components/schemas/HttpAuthentication'
      properties:
        certificateExpirationDate:
          description: Gets or sets the certificate expiration date.
          format: date-time
          type: string
        certificateSubjectName:
          description: Gets or sets the certificate subject name.
          type: string
        certificateThumbprint:
          description: Gets or sets the certificate thumbprint.
          type: string
        password:
          description: "Gets or sets the certificate password, return value will always\
            \ be empty."
          type: string
        pfx:
          description: "Gets or sets the pfx certificate. Accepts certification in\
            \ base64 encoding, return value will always be empty."
          type: string
      x-ms-discriminator-value: ClientCertificate
    HttpAuthentication:
      discriminator:
        propertyName: type
      example:
        type: NotSpecified
      properties:
        type:
          description: Gets or sets the HTTP authentication type.
          enum:
          - NotSpecified
          - ClientCertificate
          - ActiveDirectoryOAuth
          - Basic
          type: string
          x-ms-enum:
            modelAsString: false
            name: HttpAuthenticationType
      required:
      - type
      type: object
    HttpRequest:
      example:
        headers:
          key: headers
        method: method
        body: body
        uri: uri
        authentication:
          type: NotSpecified
      properties:
        authentication:
          $ref: '#/components/schemas/HttpAuthentication'
        body:
          description: Gets or sets the request body.
          type: string
        headers:
          additionalProperties:
            type: string
          description: Gets or sets the headers.
          type: object
        method:
          description: Gets or sets the method of the request.
          type: string
        uri:
          description: Gets or sets the URI of the request.
          type: string
      type: object
    JobAction:
      example:
        request:
          headers:
            key: headers
          method: method
          body: body
          uri: uri
          authentication:
            type: NotSpecified
        serviceBusTopicMessage:
          topicPath: topicPath
        retryPolicy:
          retryCount: 0
          retryInterval: retryInterval
          retryType: None
        serviceBusQueueMessage:
          queueName: queueName
        errorAction:
          request:
            headers:
              key: headers
            method: method
            body: body
            uri: uri
            authentication:
              type: NotSpecified
          serviceBusTopicMessage:
            topicPath: topicPath
          retryPolicy:
            retryCount: 0
            retryInterval: retryInterval
            retryType: None
          serviceBusQueueMessage:
            queueName: queueName
          queueMessage:
            sasToken: sasToken
            queueName: queueName
            message: message
            storageAccount: storageAccount
          type: Http
        queueMessage:
          sasToken: sasToken
          queueName: queueName
          message: message
          storageAccount: storageAccount
        type: Http
      properties:
        errorAction:
          $ref: '#/components/schemas/JobErrorAction'
        queueMessage:
          $ref: '#/components/schemas/StorageQueueMessage'
        request:
          $ref: '#/components/schemas/HttpRequest'
        retryPolicy:
          $ref: '#/components/schemas/RetryPolicy'
        serviceBusQueueMessage:
          $ref: '#/components/schemas/ServiceBusQueueMessage'
        serviceBusTopicMessage:
          $ref: '#/components/schemas/ServiceBusTopicMessage'
        type:
          description: Gets or sets the job action type.
          enum:
          - Http
          - Https
          - StorageQueue
          - ServiceBusQueue
          - ServiceBusTopic
          type: string
          x-ms-enum:
            modelAsString: false
            name: JobActionType
      type: object
    JobCollectionDefinition:
      example:
        name: name
        location: location
        id: id
        type: type
        properties:
          quota:
            maxJobCount: 0
            maxRecurrence:
              interval: 1
              frequency: Minute
            maxJobOccurrence: 6
          state: Enabled
          sku:
            name: Standard
        tags:
          key: tags
      properties:
        id:
          description: Gets the job collection resource identifier.
          readOnly: true
          type: string
        location:
          description: Gets or sets the storage account location.
          type: string
        name:
          description: Gets or sets the job collection resource name.
          type: string
        properties:
          $ref: '#/components/schemas/JobCollectionProperties'
        tags:
          additionalProperties:
            type: string
          description: Gets or sets the tags.
          type: object
        type:
          description: Gets the job collection resource type.
          readOnly: true
          type: string
      type: object
    JobCollectionListResult:
      example:
        value:
        - name: name
          location: location
          id: id
          type: type
          properties:
            quota:
              maxJobCount: 0
              maxRecurrence:
                interval: 1
                frequency: Minute
              maxJobOccurrence: 6
            state: Enabled
            sku:
              name: Standard
          tags:
            key: tags
        - name: name
          location: location
          id: id
          type: type
          properties:
            quota:
              maxJobCount: 0
              maxRecurrence:
                interval: 1
                frequency: Minute
              maxJobOccurrence: 6
            state: Enabled
            sku:
              name: Standard
          tags:
            key: tags
        nextLink: nextLink
      properties:
        nextLink:
          description: Gets or sets the URL to get the next set of job collections.
          type: string
        value:
          description: Gets the job collections.
          items:
            $ref: '#/components/schemas/JobCollectionDefinition'
          readOnly: true
          type: array
      type: object
    JobCollectionProperties:
      example:
        quota:
          maxJobCount: 0
          maxRecurrence:
            interval: 1
            frequency: Minute
          maxJobOccurrence: 6
        state: Enabled
        sku:
          name: Standard
      properties:
        quota:
          $ref: '#/components/schemas/JobCollectionQuota'
        sku:
          $ref: '#/components/schemas/Sku'
        state:
          description: Gets or sets the state.
          enum:
          - Enabled
          - Disabled
          - Suspended
          - Deleted
          type: string
          x-ms-enum:
            modelAsString: false
            name: JobCollectionState
      type: object
    JobCollectionQuota:
      example:
        maxJobCount: 0
        maxRecurrence:
          interval: 1
          frequency: Minute
        maxJobOccurrence: 6
      properties:
        maxJobCount:
          description: Gets or set the maximum job count.
          type: integer
        maxJobOccurrence:
          description: Gets or sets the maximum job occurrence.
          type: integer
        maxRecurrence:
          $ref: '#/components/schemas/JobMaxRecurrence'
      type: object
    JobDefinition:
      example:
        name: name
        id: id
        type: type
        properties:
          recurrence:
            schedule:
              hours:
              - 5
              - 5
              monthlyOccurrences:
              - Occurrence: 7
                day: Monday
              - Occurrence: 7
                day: Monday
              weekDays:
              - Sunday
              - Sunday
              minutes:
              - 5
              - 5
              monthDays:
              - 2
              - 2
            count: 6
            interval: 1
            endTime: 2000-01-23T04:56:07.000+00:00
            frequency: Minute
          action:
            request:
              headers:
                key: headers
              method: method
              body: body
              uri: uri
              authentication:
                type: NotSpecified
            serviceBusTopicMessage:
              topicPath: topicPath
            retryPolicy:
              retryCount: 0
              retryInterval: retryInterval
              retryType: None
            serviceBusQueueMessage:
              queueName: queueName
            errorAction:
              request:
                headers:
                  key: headers
                method: method
                body: body
                uri: uri
                authentication:
                  type: NotSpecified
              serviceBusTopicMessage:
                topicPath: topicPath
              retryPolicy:
                retryCount: 0
                retryInterval: retryInterval
                retryType: None
              serviceBusQueueMessage:
                queueName: queueName
              queueMessage:
                sasToken: sasToken
                queueName: queueName
                message: message
                storageAccount: storageAccount
              type: Http
            queueMessage:
              sasToken: sasToken
              queueName: queueName
              message: message
              storageAccount: storageAccount
            type: Http
          startTime: 2000-01-23T04:56:07.000+00:00
          state: Enabled
          status:
            nextExecutionTime: 2000-01-23T04:56:07.000+00:00
            executionCount: 9
            faultedCount: 2
            lastExecutionTime: 2000-01-23T04:56:07.000+00:00
            failureCount: 3
      properties:
        id:
          description: Gets the job resource identifier.
          readOnly: true
          type: string
        name:
          description: Gets the job resource name.
          readOnly: true
          type: string
        properties:
          $ref: '#/components/schemas/JobProperties'
        type:
          description: Gets the job resource type.
          readOnly: true
          type: string
      type: object
    JobErrorAction:
      example:
        request:
          headers:
            key: headers
          method: method
          body: body
          uri: uri
          authentication:
            type: NotSpecified
        serviceBusTopicMessage:
          topicPath: topicPath
        retryPolicy:
          retryCount: 0
          retryInterval: retryInterval
          retryType: None
        serviceBusQueueMessage:
          queueName: queueName
        queueMessage:
          sasToken: sasToken
          queueName: queueName
          message: message
          storageAccount: storageAccount
        type: Http
      properties:
        queueMessage:
          $ref: '#/components/schemas/StorageQueueMessage'
        request:
          $ref: '#/components/schemas/HttpRequest'
        retryPolicy:
          $ref: '#/components/schemas/RetryPolicy'
        serviceBusQueueMessage:
          $ref: '#/components/schemas/ServiceBusQueueMessage'
        serviceBusTopicMessage:
          $ref: '#/components/schemas/ServiceBusTopicMessage'
        type:
          description: Gets or sets the job error action type.
          enum:
          - Http
          - Https
          - StorageQueue
          - ServiceBusQueue
          - ServiceBusTopic
          type: string
          x-ms-enum:
            modelAsString: false
            name: JobActionType
      type: object
    JobExecutionStatus:
      description: Gets the job execution status.
      enum:
      - Completed
      - Failed
      - Postponed
      type: string
      x-ms-enum:
        modelAsString: false
        name: JobExecutionStatus
    JobHistoryDefinition:
      example:
        name: name
        id: id
        type: type
        properties:
          retryCount: 6
          startTime: 2000-01-23T04:56:07.000+00:00
          endTime: 2000-01-23T04:56:07.000+00:00
          message: message
          expectedExecutionTime: 2000-01-23T04:56:07.000+00:00
          actionName: MainAction
          repeatCount: 0
          status: Completed
      properties:
        id:
          description: Gets the job history identifier.
          readOnly: true
          type: string
        name:
          description: Gets the job history name.
          readOnly: true
          type: string
        properties:
          $ref: '#/components/schemas/JobHistoryDefinitionProperties'
        type:
          description: Gets the job history resource type.
          readOnly: true
          type: string
      type: object
    JobHistoryDefinitionProperties:
      example:
        retryCount: 6
        startTime: 2000-01-23T04:56:07.000+00:00
        endTime: 2000-01-23T04:56:07.000+00:00
        message: message
        expectedExecutionTime: 2000-01-23T04:56:07.000+00:00
        actionName: MainAction
        repeatCount: 0
        status: Completed
      properties:
        actionName:
          description: Gets the job history action name.
          enum:
          - MainAction
          - ErrorAction
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: false
            name: JobHistoryActionName
        endTime:
          description: Gets the end time for this job.
          format: date-time
          readOnly: true
          type: string
        expectedExecutionTime:
          description: Gets the expected execution time for this job.
          format: date-time
          readOnly: true
          type: string
        message:
          description: Gets the message for the job history.
          readOnly: true
          type: string
        repeatCount:
          description: Gets the repeat count for the job.
          readOnly: true
          type: integer
        retryCount:
          description: Gets the retry count for job.
          readOnly: true
          type: integer
        startTime:
          description: Gets the start time for this job.
          format: date-time
          readOnly: true
          type: string
        status:
          $ref: '#/components/schemas/JobExecutionStatus'
      type: object
    JobHistoryFilter:
      properties:
        status:
          $ref: '#/components/schemas/JobExecutionStatus'
      type: object
    JobHistoryListResult:
      example:
        value:
        - name: name
          id: id
          type: type
          properties:
            retryCount: 6
            startTime: 2000-01-23T04:56:07.000+00:00
            endTime: 2000-01-23T04:56:07.000+00:00
            message: message
            expectedExecutionTime: 2000-01-23T04:56:07.000+00:00
            actionName: MainAction
            repeatCount: 0
            status: Completed
        - name: name
          id: id
          type: type
          properties:
            retryCount: 6
            startTime: 2000-01-23T04:56:07.000+00:00
            endTime: 2000-01-23T04:56:07.000+00:00
            message: message
            expectedExecutionTime: 2000-01-23T04:56:07.000+00:00
            actionName: MainAction
            repeatCount: 0
            status: Completed
        nextLink: nextLink
      properties:
        nextLink:
          description: Gets or sets the URL to get the next set of job histories.
          type: string
        value:
          description: Gets or sets the job histories under job.
          items:
            $ref: '#/components/schemas/JobHistoryDefinition'
          type: array
      type: object
    JobListResult:
      example:
        value:
        - name: name
          id: id
          type: type
          properties:
            recurrence:
              schedule:
                hours:
                - 5
                - 5
                monthlyOccurrences:
                - Occurrence: 7
                  day: Monday
                - Occurrence: 7
                  day: Monday
                weekDays:
                - Sunday
                - Sunday
                minutes:
                - 5
                - 5
                monthDays:
                - 2
                - 2
              count: 6
              interval: 1
              endTime: 2000-01-23T04:56:07.000+00:00
              frequency: Minute
            action:
              request:
                headers:
                  key: headers
                method: method
                body: body
                uri: uri
                authentication:
                  type: NotSpecified
              serviceBusTopicMessage:
                topicPath: topicPath
              retryPolicy:
                retryCount: 0
                retryInterval: retryInterval
                retryType: None
              serviceBusQueueMessage:
                queueName: queueName
              errorAction:
                request:
                  headers:
                    key: headers
                  method: method
                  body: body
                  uri: uri
                  authentication:
                    type: NotSpecified
                serviceBusTopicMessage:
                  topicPath: topicPath
                retryPolicy:
                  retryCount: 0
                  retryInterval: retryInterval
                  retryType: None
                serviceBusQueueMessage:
                  queueName: queueName
                queueMessage:
                  sasToken: sasToken
                  queueName: queueName
                  message: message
                  storageAccount: storageAccount
                type: Http
              queueMessage:
                sasToken: sasToken
                queueName: queueName
                message: message
                storageAccount: storageAccount
              type: Http
            startTime: 2000-01-23T04:56:07.000+00:00
            state: Enabled
            status:
              nextExecutionTime: 2000-01-23T04:56:07.000+00:00
              executionCount: 9
              faultedCount: 2
              lastExecutionTime: 2000-01-23T04:56:07.000+00:00
              failureCount: 3
        - name: name
          id: id
          type: type
          properties:
            recurrence:
              schedule:
                hours:
                - 5
                - 5
                monthlyOccurrences:
                - Occurrence: 7
                  day: Monday
                - Occurrence: 7
                  day: Monday
                weekDays:
                - Sunday
                - Sunday
                minutes:
                - 5
                - 5
                monthDays:
                - 2
                - 2
              count: 6
              interval: 1
              endTime: 2000-01-23T04:56:07.000+00:00
              frequency: Minute
            action:
              request:
                headers:
                  key: headers
                method: method
                body: body
                uri: uri
                authentication:
                  type: NotSpecified
              serviceBusTopicMessage:
                topicPath: topicPath
              retryPolicy:
                retryCount: 0
                retryInterval: retryInterval
                retryType: None
              serviceBusQueueMessage:
                queueName: queueName
              errorAction:
                request:
                  headers:
                    key: headers
                  method: method
                  body: body
                  uri: uri
                  authentication:
                    type: NotSpecified
                serviceBusTopicMessage:
                  topicPath: topicPath
                retryPolicy:
                  retryCount: 0
                  retryInterval: retryInterval
                  retryType: None
                serviceBusQueueMessage:
                  queueName: queueName
                queueMessage:
                  sasToken: sasToken
                  queueName: queueName
                  message: message
                  storageAccount: storageAccount
                type: Http
              queueMessage:
                sasToken: sasToken
                queueName: queueName
                message: message
                storageAccount: storageAccount
              type: Http
            startTime: 2000-01-23T04:56:07.000+00:00
            state: Enabled
            status:
              nextExecutionTime: 2000-01-23T04:56:07.000+00:00
              executionCount: 9
              faultedCount: 2
              lastExecutionTime: 2000-01-23T04:56:07.000+00:00
              failureCount: 3
        nextLink: nextLink
      properties:
        nextLink:
          description: Gets or sets the URL to get the next set of jobs.
          type: string
        value:
          description: Gets or sets all jobs under job collection.
          items:
            $ref: '#/components/schemas/JobDefinition'
          type: array
      type: object
    JobMaxRecurrence:
      example:
        interval: 1
        frequency: Minute
      properties:
        frequency:
          description: "Gets or sets the frequency of recurrence (second, minute,\
            \ hour, day, week, month)."
          enum:
          - Minute
          - Hour
          - Day
          - Week
          - Month
          type: string
          x-ms-enum:
            modelAsString: false
            name: RecurrenceFrequency
        interval:
          description: Gets or sets the interval between retries.
          type: integer
      type: object
    JobProperties:
      example:
        recurrence:
          schedule:
            hours:
            - 5
            - 5
            monthlyOccurrences:
            - Occurrence: 7
              day: Monday
            - Occurrence: 7
              day: Monday
            weekDays:
            - Sunday
            - Sunday
            minutes:
            - 5
            - 5
            monthDays:
            - 2
            - 2
          count: 6
          interval: 1
          endTime: 2000-01-23T04:56:07.000+00:00
          frequency: Minute
        action:
          request:
            headers:
              key: headers
            method: method
            body: body
            uri: uri
            authentication:
              type: NotSpecified
          serviceBusTopicMessage:
            topicPath: topicPath
          retryPolicy:
            retryCount: 0
            retryInterval: retryInterval
            retryType: None
          serviceBusQueueMessage:
            queueName: queueName
          errorAction:
            request:
              headers:
                key: headers
              method: method
              body: body
              uri: uri
              authentication:
                type: NotSpecified
            serviceBusTopicMessage:
              topicPath: topicPath
            retryPolicy:
              retryCount: 0
              retryInterval: retryInterval
              retryType: None
            serviceBusQueueMessage:
              queueName: queueName
            queueMessage:
              sasToken: sasToken
              queueName: queueName
              message: message
              storageAccount: storageAccount
            type: Http
          queueMessage:
            sasToken: sasToken
            queueName: queueName
            message: message
            storageAccount: storageAccount
          type: Http
        startTime: 2000-01-23T04:56:07.000+00:00
        state: Enabled
        status:
          nextExecutionTime: 2000-01-23T04:56:07.000+00:00
          executionCount: 9
          faultedCount: 2
          lastExecutionTime: 2000-01-23T04:56:07.000+00:00
          failureCount: 3
      properties:
        action:
          $ref: '#/components/schemas/JobAction'
        recurrence:
          $ref: '#/components/schemas/JobRecurrence'
        startTime:
          description: Gets or sets the job start time.
          format: date-time
          type: string
        state:
          $ref: '#/components/schemas/JobState'
        status:
          $ref: '#/components/schemas/JobStatus'
      type: object
    JobRecurrence:
      example:
        schedule:
          hours:
          - 5
          - 5
          monthlyOccurrences:
          - Occurrence: 7
            day: Monday
          - Occurrence: 7
            day: Monday
          weekDays:
          - Sunday
          - Sunday
          minutes:
          - 5
          - 5
          monthDays:
          - 2
          - 2
        count: 6
        interval: 1
        endTime: 2000-01-23T04:56:07.000+00:00
        frequency: Minute
      properties:
        count:
          description: Gets or sets the maximum number of times that the job should
            run.
          type: integer
        endTime:
          description: Gets or sets the time at which the job will complete.
          format: date-time
          type: string
        frequency:
          description: "Gets or sets the frequency of recurrence (second, minute,\
            \ hour, day, week, month)."
          enum:
          - Minute
          - Hour
          - Day
          - Week
          - Month
          type: string
          x-ms-enum:
            modelAsString: false
            name: RecurrenceFrequency
        interval:
          description: Gets or sets the interval between retries.
          type: integer
        schedule:
          $ref: '#/components/schemas/JobRecurrenceSchedule'
      type: object
    JobRecurrenceSchedule:
      example:
        hours:
        - 5
        - 5
        monthlyOccurrences:
        - Occurrence: 7
          day: Monday
        - Occurrence: 7
          day: Monday
        weekDays:
        - Sunday
        - Sunday
        minutes:
        - 5
        - 5
        monthDays:
        - 2
        - 2
      properties:
        hours:
          description: Gets or sets the hours of the day that the job should execute
            at.
          items:
            type: integer
          type: array
        minutes:
          description: Gets or sets the minutes of the hour that the job should execute
            at.
          items:
            type: integer
          type: array
        monthDays:
          description: Gets or sets the days of the month that the job should execute
            on. Must be between 1 and 31.
          items:
            type: integer
          type: array
        monthlyOccurrences:
          description: Gets or sets the occurrences of days within a month.
          items:
            $ref: '#/components/schemas/JobRecurrenceScheduleMonthlyOccurrence'
          type: array
        weekDays:
          description: Gets or sets the days of the week that the job should execute
            on.
          items:
            enum:
            - Sunday
            - Monday
            - Tuesday
            - Wednesday
            - Thursday
            - Friday
            - Saturday
            type: string
            x-ms-enum:
              modelAsString: false
              name: DayOfWeek
          type: array
      type: object
    JobRecurrenceScheduleMonthlyOccurrence:
      example:
        Occurrence: 7
        day: Monday
      properties:
        Occurrence:
          description: Gets or sets the occurrence. Must be between -5 and 5.
          type: integer
        day:
          description: "Gets or sets the day. Must be one of monday, tuesday, wednesday,\
            \ thursday, friday, saturday, sunday."
          enum:
          - Monday
          - Tuesday
          - Wednesday
          - Thursday
          - Friday
          - Saturday
          - Sunday
          type: string
          x-ms-enum:
            modelAsString: false
            name: JobScheduleDay
      type: object
    JobState:
      description: Gets or set the job state.
      enum:
      - Enabled
      - Disabled
      - Faulted
      - Completed
      type: string
      x-ms-enum:
        modelAsString: false
        name: JobState
    JobStateFilter:
      properties:
        state:
          $ref: '#/components/schemas/JobState'
      type: object
    JobStatus:
      example:
        nextExecutionTime: 2000-01-23T04:56:07.000+00:00
        executionCount: 9
        faultedCount: 2
        lastExecutionTime: 2000-01-23T04:56:07.000+00:00
        failureCount: 3
      properties:
        executionCount:
          description: Gets the number of times this job has executed.
          readOnly: true
          type: integer
        failureCount:
          description: Gets the number of times this job has failed.
          readOnly: true
          type: integer
        faultedCount:
          description: Gets the number of faulted occurrences (occurrences that were
            retried and failed as many times as the retry policy states).
          readOnly: true
          type: integer
        lastExecutionTime:
          description: Gets the time the last occurrence executed in ISO-8601 format.  Could
            be empty if job has not run yet.
          format: date-time
          readOnly: true
          type: string
        nextExecutionTime:
          description: Gets the time of the next occurrence in ISO-8601 format. Could
            be empty if the job is completed.
          format: date-time
          readOnly: true
          type: string
      type: object
    OAuthAuthentication:
      allOf:
      - $ref: '#/components/schemas/HttpAuthentication'
      properties:
        audience:
          description: Gets or sets the audience.
          type: string
        clientId:
          description: Gets or sets the client identifier.
          type: string
        secret:
          description: "Gets or sets the secret, return value will always be empty."
          type: string
        tenant:
          description: Gets or sets the tenant.
          type: string
      x-ms-discriminator-value: ActiveDirectoryOAuth
    RecurrenceFrequency:
      description: "Gets or sets the frequency of recurrence (minute, hour, day, week,\
        \ month)."
      enum:
      - Minute
      - Hour
      - Day
      - Week
      - Month
      type: string
      x-ms-enum:
        modelAsString: false
        name: RecurrenceFrequency
    RetryPolicy:
      example:
        retryCount: 0
        retryInterval: retryInterval
        retryType: None
      properties:
        retryCount:
          description: Gets or sets the number of times a retry should be attempted.
          type: integer
        retryInterval:
          description: "Gets or sets the retry interval between retries, specify duration\
            \ in ISO 8601 format."
          format: duration
          type: string
        retryType:
          description: Gets or sets the retry strategy to be used.
          enum:
          - None
          - Fixed
          type: string
          x-ms-enum:
            modelAsString: false
            name: RetryType
      type: object
    ServiceBusAuthentication:
      properties:
        sasKey:
          description: Gets or sets the SAS key.
          type: string
        sasKeyName:
          description: Gets or sets the SAS key name.
          type: string
        type:
          description: Gets or sets the authentication type.
          enum:
          - NotSpecified
          - SharedAccessKey
          type: string
          x-ms-enum:
            modelAsString: false
            name: ServiceBusAuthenticationType
      type: object
    ServiceBusBrokeredMessageProperties:
      properties:
        contentType:
          description: Gets or sets the content type.
          type: string
        correlationId:
          description: Gets or sets the correlation ID.
          type: string
        forcePersistence:
          description: Gets or sets the force persistence.
          type: boolean
        label:
          description: Gets or sets the label.
          type: string
        messageId:
          description: Gets or sets the message ID.
          type: string
        partitionKey:
          description: Gets or sets the partition key.
          type: string
        replyTo:
          description: Gets or sets the reply to.
          type: string
        replyToSessionId:
          description: Gets or sets the reply to session ID.
          type: string
        scheduledEnqueueTimeUtc:
          description: Gets or sets the scheduled enqueue time UTC.
          format: date-time
          type: string
        sessionId:
          description: Gets or sets the session ID.
          type: string
        timeToLive:
          description: Gets or sets the time to live.
          format: duration
          type: string
        to:
          description: Gets or sets the to.
          type: string
        viaPartitionKey:
          description: Gets or sets the via partition key.
          type: string
      type: object
    ServiceBusMessage:
      properties:
        authentication:
          $ref: '#/components/schemas/ServiceBusAuthentication'
        brokeredMessageProperties:
          $ref: '#/components/schemas/ServiceBusBrokeredMessageProperties'
        customMessageProperties:
          additionalProperties:
            type: string
          description: Gets or sets the custom message properties.
          type: object
        message:
          description: Gets or sets the message.
          type: string
        namespace:
          description: Gets or sets the namespace.
          type: string
        transportType:
          description: Gets or sets the transport type.
          enum:
          - NotSpecified
          - NetMessaging
          - AMQP
          type: string
          x-ms-enum:
            modelAsString: false
            name: ServiceBusTransportType
      type: object
    ServiceBusQueueMessage:
      allOf:
      - $ref: '#/components/schemas/ServiceBusMessage'
      example:
        queueName: queueName
      properties:
        queueName:
          description: Gets or sets the queue name.
          type: string
    ServiceBusTopicMessage:
      allOf:
      - $ref: '#/components/schemas/ServiceBusMessage'
      example:
        topicPath: topicPath
      properties:
        topicPath:
          description: Gets or sets the topic path.
          type: string
    Sku:
      example:
        name: Standard
      properties:
        name:
          description: Gets or set the SKU.
          enum:
          - Standard
          - Free
          - P10Premium
          - P20Premium
          type: string
          x-ms-enum:
            modelAsString: false
            name: SkuDefinition
      type: object
    StorageQueueMessage:
      example:
        sasToken: sasToken
        queueName: queueName
        message: message
        storageAccount: storageAccount
      properties:
        message:
          description: Gets or sets the message.
          type: string
        queueName:
          description: Gets or sets the queue name.
          type: string
        sasToken:
          description: Gets or sets the SAS key.
          type: string
        storageAccount:
          description: Gets or sets the storage account name.
          type: string
      type: object
x-original-swagger-version: "2.0"

