/**
 * SchedulerManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-03-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIJobCollectionProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIJobCollectionProperties::OAIJobCollectionProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIJobCollectionProperties::OAIJobCollectionProperties() {
    this->initializeModel();
}

OAIJobCollectionProperties::~OAIJobCollectionProperties() {}

void OAIJobCollectionProperties::initializeModel() {

    m_quota_isSet = false;
    m_quota_isValid = false;

    m_sku_isSet = false;
    m_sku_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;
}

void OAIJobCollectionProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIJobCollectionProperties::fromJsonObject(QJsonObject json) {

    m_quota_isValid = ::OpenAPI::fromJsonValue(m_quota, json[QString("quota")]);
    m_quota_isSet = !json[QString("quota")].isNull() && m_quota_isValid;

    m_sku_isValid = ::OpenAPI::fromJsonValue(m_sku, json[QString("sku")]);
    m_sku_isSet = !json[QString("sku")].isNull() && m_sku_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("state")]);
    m_state_isSet = !json[QString("state")].isNull() && m_state_isValid;
}

QString OAIJobCollectionProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIJobCollectionProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_quota.isSet()) {
        obj.insert(QString("quota"), ::OpenAPI::toJsonValue(m_quota));
    }
    if (m_sku.isSet()) {
        obj.insert(QString("sku"), ::OpenAPI::toJsonValue(m_sku));
    }
    if (m_state_isSet) {
        obj.insert(QString("state"), ::OpenAPI::toJsonValue(m_state));
    }
    return obj;
}

OAIJobCollectionQuota OAIJobCollectionProperties::getQuota() const {
    return m_quota;
}
void OAIJobCollectionProperties::setQuota(const OAIJobCollectionQuota &quota) {
    m_quota = quota;
    m_quota_isSet = true;
}

bool OAIJobCollectionProperties::is_quota_Set() const{
    return m_quota_isSet;
}

bool OAIJobCollectionProperties::is_quota_Valid() const{
    return m_quota_isValid;
}

OAISku OAIJobCollectionProperties::getSku() const {
    return m_sku;
}
void OAIJobCollectionProperties::setSku(const OAISku &sku) {
    m_sku = sku;
    m_sku_isSet = true;
}

bool OAIJobCollectionProperties::is_sku_Set() const{
    return m_sku_isSet;
}

bool OAIJobCollectionProperties::is_sku_Valid() const{
    return m_sku_isValid;
}

QString OAIJobCollectionProperties::getState() const {
    return m_state;
}
void OAIJobCollectionProperties::setState(const QString &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAIJobCollectionProperties::is_state_Set() const{
    return m_state_isSet;
}

bool OAIJobCollectionProperties::is_state_Valid() const{
    return m_state_isValid;
}

bool OAIJobCollectionProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_quota.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_sku.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIJobCollectionProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
