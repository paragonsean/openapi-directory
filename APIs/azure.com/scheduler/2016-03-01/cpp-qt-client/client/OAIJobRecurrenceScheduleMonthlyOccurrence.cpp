/**
 * SchedulerManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-03-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIJobRecurrenceScheduleMonthlyOccurrence.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIJobRecurrenceScheduleMonthlyOccurrence::OAIJobRecurrenceScheduleMonthlyOccurrence(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIJobRecurrenceScheduleMonthlyOccurrence::OAIJobRecurrenceScheduleMonthlyOccurrence() {
    this->initializeModel();
}

OAIJobRecurrenceScheduleMonthlyOccurrence::~OAIJobRecurrenceScheduleMonthlyOccurrence() {}

void OAIJobRecurrenceScheduleMonthlyOccurrence::initializeModel() {

    m_occurrence_isSet = false;
    m_occurrence_isValid = false;

    m_day_isSet = false;
    m_day_isValid = false;
}

void OAIJobRecurrenceScheduleMonthlyOccurrence::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIJobRecurrenceScheduleMonthlyOccurrence::fromJsonObject(QJsonObject json) {

    m_occurrence_isValid = ::OpenAPI::fromJsonValue(m_occurrence, json[QString("Occurrence")]);
    m_occurrence_isSet = !json[QString("Occurrence")].isNull() && m_occurrence_isValid;

    m_day_isValid = ::OpenAPI::fromJsonValue(m_day, json[QString("day")]);
    m_day_isSet = !json[QString("day")].isNull() && m_day_isValid;
}

QString OAIJobRecurrenceScheduleMonthlyOccurrence::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIJobRecurrenceScheduleMonthlyOccurrence::asJsonObject() const {
    QJsonObject obj;
    if (m_occurrence_isSet) {
        obj.insert(QString("Occurrence"), ::OpenAPI::toJsonValue(m_occurrence));
    }
    if (m_day_isSet) {
        obj.insert(QString("day"), ::OpenAPI::toJsonValue(m_day));
    }
    return obj;
}

qint32 OAIJobRecurrenceScheduleMonthlyOccurrence::getOccurrence() const {
    return m_occurrence;
}
void OAIJobRecurrenceScheduleMonthlyOccurrence::setOccurrence(const qint32 &occurrence) {
    m_occurrence = occurrence;
    m_occurrence_isSet = true;
}

bool OAIJobRecurrenceScheduleMonthlyOccurrence::is_occurrence_Set() const{
    return m_occurrence_isSet;
}

bool OAIJobRecurrenceScheduleMonthlyOccurrence::is_occurrence_Valid() const{
    return m_occurrence_isValid;
}

QString OAIJobRecurrenceScheduleMonthlyOccurrence::getDay() const {
    return m_day;
}
void OAIJobRecurrenceScheduleMonthlyOccurrence::setDay(const QString &day) {
    m_day = day;
    m_day_isSet = true;
}

bool OAIJobRecurrenceScheduleMonthlyOccurrence::is_day_Set() const{
    return m_day_isSet;
}

bool OAIJobRecurrenceScheduleMonthlyOccurrence::is_day_Valid() const{
    return m_day_isValid;
}

bool OAIJobRecurrenceScheduleMonthlyOccurrence::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_occurrence_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_day_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIJobRecurrenceScheduleMonthlyOccurrence::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
