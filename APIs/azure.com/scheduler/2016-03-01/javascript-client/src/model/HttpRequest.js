/**
 * SchedulerManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-03-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import HttpAuthentication from './HttpAuthentication';

/**
 * The HttpRequest model module.
 * @module model/HttpRequest
 * @version 2016-03-01
 */
class HttpRequest {
    /**
     * Constructs a new <code>HttpRequest</code>.
     * @alias module:model/HttpRequest
     */
    constructor() { 
        
        HttpRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>HttpRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/HttpRequest} obj Optional instance to populate.
     * @return {module:model/HttpRequest} The populated <code>HttpRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new HttpRequest();

            if (data.hasOwnProperty('authentication')) {
                obj['authentication'] = HttpAuthentication.constructFromObject(data['authentication']);
            }
            if (data.hasOwnProperty('body')) {
                obj['body'] = ApiClient.convertToType(data['body'], 'String');
            }
            if (data.hasOwnProperty('headers')) {
                obj['headers'] = ApiClient.convertToType(data['headers'], {'String': 'String'});
            }
            if (data.hasOwnProperty('method')) {
                obj['method'] = ApiClient.convertToType(data['method'], 'String');
            }
            if (data.hasOwnProperty('uri')) {
                obj['uri'] = ApiClient.convertToType(data['uri'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>HttpRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>HttpRequest</code>.
     */
    static validateJSON(data) {
        // validate the optional field `authentication`
        if (data['authentication']) { // data not null
          HttpAuthentication.validateJSON(data['authentication']);
        }
        // ensure the json data is a string
        if (data['body'] && !(typeof data['body'] === 'string' || data['body'] instanceof String)) {
            throw new Error("Expected the field `body` to be a primitive type in the JSON string but got " + data['body']);
        }
        // ensure the json data is a string
        if (data['method'] && !(typeof data['method'] === 'string' || data['method'] instanceof String)) {
            throw new Error("Expected the field `method` to be a primitive type in the JSON string but got " + data['method']);
        }
        // ensure the json data is a string
        if (data['uri'] && !(typeof data['uri'] === 'string' || data['uri'] instanceof String)) {
            throw new Error("Expected the field `uri` to be a primitive type in the JSON string but got " + data['uri']);
        }

        return true;
    }


}



/**
 * @member {module:model/HttpAuthentication} authentication
 */
HttpRequest.prototype['authentication'] = undefined;

/**
 * Gets or sets the request body.
 * @member {String} body
 */
HttpRequest.prototype['body'] = undefined;

/**
 * Gets or sets the headers.
 * @member {Object.<String, String>} headers
 */
HttpRequest.prototype['headers'] = undefined;

/**
 * Gets or sets the method of the request.
 * @member {String} method
 */
HttpRequest.prototype['method'] = undefined;

/**
 * Gets or sets the URI of the request.
 * @member {String} uri
 */
HttpRequest.prototype['uri'] = undefined;






export default HttpRequest;

