/**
 * SchedulerManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-03-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import JobExecutionStatus from './JobExecutionStatus';

/**
 * The JobHistoryDefinitionProperties model module.
 * @module model/JobHistoryDefinitionProperties
 * @version 2016-03-01
 */
class JobHistoryDefinitionProperties {
    /**
     * Constructs a new <code>JobHistoryDefinitionProperties</code>.
     * @alias module:model/JobHistoryDefinitionProperties
     */
    constructor() { 
        
        JobHistoryDefinitionProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>JobHistoryDefinitionProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/JobHistoryDefinitionProperties} obj Optional instance to populate.
     * @return {module:model/JobHistoryDefinitionProperties} The populated <code>JobHistoryDefinitionProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new JobHistoryDefinitionProperties();

            if (data.hasOwnProperty('actionName')) {
                obj['actionName'] = ApiClient.convertToType(data['actionName'], 'String');
            }
            if (data.hasOwnProperty('endTime')) {
                obj['endTime'] = ApiClient.convertToType(data['endTime'], 'Date');
            }
            if (data.hasOwnProperty('expectedExecutionTime')) {
                obj['expectedExecutionTime'] = ApiClient.convertToType(data['expectedExecutionTime'], 'Date');
            }
            if (data.hasOwnProperty('message')) {
                obj['message'] = ApiClient.convertToType(data['message'], 'String');
            }
            if (data.hasOwnProperty('repeatCount')) {
                obj['repeatCount'] = ApiClient.convertToType(data['repeatCount'], 'Number');
            }
            if (data.hasOwnProperty('retryCount')) {
                obj['retryCount'] = ApiClient.convertToType(data['retryCount'], 'Number');
            }
            if (data.hasOwnProperty('startTime')) {
                obj['startTime'] = ApiClient.convertToType(data['startTime'], 'Date');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = JobExecutionStatus.constructFromObject(data['status']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>JobHistoryDefinitionProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>JobHistoryDefinitionProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['actionName'] && !(typeof data['actionName'] === 'string' || data['actionName'] instanceof String)) {
            throw new Error("Expected the field `actionName` to be a primitive type in the JSON string but got " + data['actionName']);
        }
        // ensure the json data is a string
        if (data['message'] && !(typeof data['message'] === 'string' || data['message'] instanceof String)) {
            throw new Error("Expected the field `message` to be a primitive type in the JSON string but got " + data['message']);
        }

        return true;
    }


}



/**
 * Gets the job history action name.
 * @member {module:model/JobHistoryDefinitionProperties.ActionNameEnum} actionName
 */
JobHistoryDefinitionProperties.prototype['actionName'] = undefined;

/**
 * Gets the end time for this job.
 * @member {Date} endTime
 */
JobHistoryDefinitionProperties.prototype['endTime'] = undefined;

/**
 * Gets the expected execution time for this job.
 * @member {Date} expectedExecutionTime
 */
JobHistoryDefinitionProperties.prototype['expectedExecutionTime'] = undefined;

/**
 * Gets the message for the job history.
 * @member {String} message
 */
JobHistoryDefinitionProperties.prototype['message'] = undefined;

/**
 * Gets the repeat count for the job.
 * @member {Number} repeatCount
 */
JobHistoryDefinitionProperties.prototype['repeatCount'] = undefined;

/**
 * Gets the retry count for job.
 * @member {Number} retryCount
 */
JobHistoryDefinitionProperties.prototype['retryCount'] = undefined;

/**
 * Gets the start time for this job.
 * @member {Date} startTime
 */
JobHistoryDefinitionProperties.prototype['startTime'] = undefined;

/**
 * @member {module:model/JobExecutionStatus} status
 */
JobHistoryDefinitionProperties.prototype['status'] = undefined;





/**
 * Allowed values for the <code>actionName</code> property.
 * @enum {String}
 * @readonly
 */
JobHistoryDefinitionProperties['ActionNameEnum'] = {

    /**
     * value: "MainAction"
     * @const
     */
    "MainAction": "MainAction",

    /**
     * value: "ErrorAction"
     * @const
     */
    "ErrorAction": "ErrorAction"
};



export default JobHistoryDefinitionProperties;

