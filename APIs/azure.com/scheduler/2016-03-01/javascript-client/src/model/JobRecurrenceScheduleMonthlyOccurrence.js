/**
 * SchedulerManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-03-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The JobRecurrenceScheduleMonthlyOccurrence model module.
 * @module model/JobRecurrenceScheduleMonthlyOccurrence
 * @version 2016-03-01
 */
class JobRecurrenceScheduleMonthlyOccurrence {
    /**
     * Constructs a new <code>JobRecurrenceScheduleMonthlyOccurrence</code>.
     * @alias module:model/JobRecurrenceScheduleMonthlyOccurrence
     */
    constructor() { 
        
        JobRecurrenceScheduleMonthlyOccurrence.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>JobRecurrenceScheduleMonthlyOccurrence</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/JobRecurrenceScheduleMonthlyOccurrence} obj Optional instance to populate.
     * @return {module:model/JobRecurrenceScheduleMonthlyOccurrence} The populated <code>JobRecurrenceScheduleMonthlyOccurrence</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new JobRecurrenceScheduleMonthlyOccurrence();

            if (data.hasOwnProperty('Occurrence')) {
                obj['Occurrence'] = ApiClient.convertToType(data['Occurrence'], 'Number');
            }
            if (data.hasOwnProperty('day')) {
                obj['day'] = ApiClient.convertToType(data['day'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>JobRecurrenceScheduleMonthlyOccurrence</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>JobRecurrenceScheduleMonthlyOccurrence</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['day'] && !(typeof data['day'] === 'string' || data['day'] instanceof String)) {
            throw new Error("Expected the field `day` to be a primitive type in the JSON string but got " + data['day']);
        }

        return true;
    }


}



/**
 * Gets or sets the occurrence. Must be between -5 and 5.
 * @member {Number} Occurrence
 */
JobRecurrenceScheduleMonthlyOccurrence.prototype['Occurrence'] = undefined;

/**
 * Gets or sets the day. Must be one of monday, tuesday, wednesday, thursday, friday, saturday, sunday.
 * @member {module:model/JobRecurrenceScheduleMonthlyOccurrence.DayEnum} day
 */
JobRecurrenceScheduleMonthlyOccurrence.prototype['day'] = undefined;





/**
 * Allowed values for the <code>day</code> property.
 * @enum {String}
 * @readonly
 */
JobRecurrenceScheduleMonthlyOccurrence['DayEnum'] = {

    /**
     * value: "Monday"
     * @const
     */
    "Monday": "Monday",

    /**
     * value: "Tuesday"
     * @const
     */
    "Tuesday": "Tuesday",

    /**
     * value: "Wednesday"
     * @const
     */
    "Wednesday": "Wednesday",

    /**
     * value: "Thursday"
     * @const
     */
    "Thursday": "Thursday",

    /**
     * value: "Friday"
     * @const
     */
    "Friday": "Friday",

    /**
     * value: "Saturday"
     * @const
     */
    "Saturday": "Saturday",

    /**
     * value: "Sunday"
     * @const
     */
    "Sunday": "Sunday"
};



export default JobRecurrenceScheduleMonthlyOccurrence;

