# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.http_request import HttpRequest
from openapi_server.models.job_error_action import JobErrorAction
from openapi_server.models.retry_policy import RetryPolicy
from openapi_server.models.service_bus_queue_message import ServiceBusQueueMessage
from openapi_server.models.service_bus_topic_message import ServiceBusTopicMessage
from openapi_server.models.storage_queue_message import StorageQueueMessage
from openapi_server import util


class JobAction(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, error_action: JobErrorAction=None, queue_message: StorageQueueMessage=None, request: HttpRequest=None, retry_policy: RetryPolicy=None, service_bus_queue_message: ServiceBusQueueMessage=None, service_bus_topic_message: ServiceBusTopicMessage=None, type: str=None):
        """JobAction - a model defined in OpenAPI

        :param error_action: The error_action of this JobAction.
        :param queue_message: The queue_message of this JobAction.
        :param request: The request of this JobAction.
        :param retry_policy: The retry_policy of this JobAction.
        :param service_bus_queue_message: The service_bus_queue_message of this JobAction.
        :param service_bus_topic_message: The service_bus_topic_message of this JobAction.
        :param type: The type of this JobAction.
        """
        self.openapi_types = {
            'error_action': JobErrorAction,
            'queue_message': StorageQueueMessage,
            'request': HttpRequest,
            'retry_policy': RetryPolicy,
            'service_bus_queue_message': ServiceBusQueueMessage,
            'service_bus_topic_message': ServiceBusTopicMessage,
            'type': str
        }

        self.attribute_map = {
            'error_action': 'errorAction',
            'queue_message': 'queueMessage',
            'request': 'request',
            'retry_policy': 'retryPolicy',
            'service_bus_queue_message': 'serviceBusQueueMessage',
            'service_bus_topic_message': 'serviceBusTopicMessage',
            'type': 'type'
        }

        self._error_action = error_action
        self._queue_message = queue_message
        self._request = request
        self._retry_policy = retry_policy
        self._service_bus_queue_message = service_bus_queue_message
        self._service_bus_topic_message = service_bus_topic_message
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'JobAction':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The JobAction of this JobAction.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def error_action(self):
        """Gets the error_action of this JobAction.


        :return: The error_action of this JobAction.
        :rtype: JobErrorAction
        """
        return self._error_action

    @error_action.setter
    def error_action(self, error_action):
        """Sets the error_action of this JobAction.


        :param error_action: The error_action of this JobAction.
        :type error_action: JobErrorAction
        """

        self._error_action = error_action

    @property
    def queue_message(self):
        """Gets the queue_message of this JobAction.


        :return: The queue_message of this JobAction.
        :rtype: StorageQueueMessage
        """
        return self._queue_message

    @queue_message.setter
    def queue_message(self, queue_message):
        """Sets the queue_message of this JobAction.


        :param queue_message: The queue_message of this JobAction.
        :type queue_message: StorageQueueMessage
        """

        self._queue_message = queue_message

    @property
    def request(self):
        """Gets the request of this JobAction.


        :return: The request of this JobAction.
        :rtype: HttpRequest
        """
        return self._request

    @request.setter
    def request(self, request):
        """Sets the request of this JobAction.


        :param request: The request of this JobAction.
        :type request: HttpRequest
        """

        self._request = request

    @property
    def retry_policy(self):
        """Gets the retry_policy of this JobAction.


        :return: The retry_policy of this JobAction.
        :rtype: RetryPolicy
        """
        return self._retry_policy

    @retry_policy.setter
    def retry_policy(self, retry_policy):
        """Sets the retry_policy of this JobAction.


        :param retry_policy: The retry_policy of this JobAction.
        :type retry_policy: RetryPolicy
        """

        self._retry_policy = retry_policy

    @property
    def service_bus_queue_message(self):
        """Gets the service_bus_queue_message of this JobAction.


        :return: The service_bus_queue_message of this JobAction.
        :rtype: ServiceBusQueueMessage
        """
        return self._service_bus_queue_message

    @service_bus_queue_message.setter
    def service_bus_queue_message(self, service_bus_queue_message):
        """Sets the service_bus_queue_message of this JobAction.


        :param service_bus_queue_message: The service_bus_queue_message of this JobAction.
        :type service_bus_queue_message: ServiceBusQueueMessage
        """

        self._service_bus_queue_message = service_bus_queue_message

    @property
    def service_bus_topic_message(self):
        """Gets the service_bus_topic_message of this JobAction.


        :return: The service_bus_topic_message of this JobAction.
        :rtype: ServiceBusTopicMessage
        """
        return self._service_bus_topic_message

    @service_bus_topic_message.setter
    def service_bus_topic_message(self, service_bus_topic_message):
        """Sets the service_bus_topic_message of this JobAction.


        :param service_bus_topic_message: The service_bus_topic_message of this JobAction.
        :type service_bus_topic_message: ServiceBusTopicMessage
        """

        self._service_bus_topic_message = service_bus_topic_message

    @property
    def type(self):
        """Gets the type of this JobAction.

        Gets or sets the job action type.

        :return: The type of this JobAction.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this JobAction.

        Gets or sets the job action type.

        :param type: The type of this JobAction.
        :type type: str
        """
        allowed_values = ["Http", "Https", "StorageQueue", "ServiceBusQueue", "ServiceBusTopic"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"
                .format(type, allowed_values)
            )

        self._type = type
