# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ServiceBusAuthentication(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, sas_key: str=None, sas_key_name: str=None, type: str=None):
        """ServiceBusAuthentication - a model defined in OpenAPI

        :param sas_key: The sas_key of this ServiceBusAuthentication.
        :param sas_key_name: The sas_key_name of this ServiceBusAuthentication.
        :param type: The type of this ServiceBusAuthentication.
        """
        self.openapi_types = {
            'sas_key': str,
            'sas_key_name': str,
            'type': str
        }

        self.attribute_map = {
            'sas_key': 'sasKey',
            'sas_key_name': 'sasKeyName',
            'type': 'type'
        }

        self._sas_key = sas_key
        self._sas_key_name = sas_key_name
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ServiceBusAuthentication':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ServiceBusAuthentication of this ServiceBusAuthentication.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def sas_key(self):
        """Gets the sas_key of this ServiceBusAuthentication.

        Gets or sets the SAS key.

        :return: The sas_key of this ServiceBusAuthentication.
        :rtype: str
        """
        return self._sas_key

    @sas_key.setter
    def sas_key(self, sas_key):
        """Sets the sas_key of this ServiceBusAuthentication.

        Gets or sets the SAS key.

        :param sas_key: The sas_key of this ServiceBusAuthentication.
        :type sas_key: str
        """

        self._sas_key = sas_key

    @property
    def sas_key_name(self):
        """Gets the sas_key_name of this ServiceBusAuthentication.

        Gets or sets the SAS key name.

        :return: The sas_key_name of this ServiceBusAuthentication.
        :rtype: str
        """
        return self._sas_key_name

    @sas_key_name.setter
    def sas_key_name(self, sas_key_name):
        """Sets the sas_key_name of this ServiceBusAuthentication.

        Gets or sets the SAS key name.

        :param sas_key_name: The sas_key_name of this ServiceBusAuthentication.
        :type sas_key_name: str
        """

        self._sas_key_name = sas_key_name

    @property
    def type(self):
        """Gets the type of this ServiceBusAuthentication.

        Gets or sets the authentication type.

        :return: The type of this ServiceBusAuthentication.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this ServiceBusAuthentication.

        Gets or sets the authentication type.

        :param type: The type of this ServiceBusAuthentication.
        :type type: str
        """
        allowed_values = ["NotSpecified", "SharedAccessKey"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"
                .format(type, allowed_values)
            )

        self._type = type
