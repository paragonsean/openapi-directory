/**
 * ApiManagementClient
 * Use these REST APIs for performing operations on the ApiVersionSet entity associated with your Azure API Management deployment. Using this entity you create and manage API Version Sets that are used to group APIs for consistent versioning.
 *
 * The version of the OpenAPI document: 2018-06-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApiVersionSet_ListByService_default_response.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApiVersionSet_ListByService_default_response::OAIApiVersionSet_ListByService_default_response(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApiVersionSet_ListByService_default_response::OAIApiVersionSet_ListByService_default_response() {
    this->initializeModel();
}

OAIApiVersionSet_ListByService_default_response::~OAIApiVersionSet_ListByService_default_response() {}

void OAIApiVersionSet_ListByService_default_response::initializeModel() {

    m_error_isSet = false;
    m_error_isValid = false;
}

void OAIApiVersionSet_ListByService_default_response::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIApiVersionSet_ListByService_default_response::fromJsonObject(QJsonObject json) {

    m_error_isValid = ::OpenAPI::fromJsonValue(m_error, json[QString("error")]);
    m_error_isSet = !json[QString("error")].isNull() && m_error_isValid;
}

QString OAIApiVersionSet_ListByService_default_response::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIApiVersionSet_ListByService_default_response::asJsonObject() const {
    QJsonObject obj;
    if (m_error.isSet()) {
        obj.insert(QString("error"), ::OpenAPI::toJsonValue(m_error));
    }
    return obj;
}

OAIApiVersionSet_ListByService_default_response_error OAIApiVersionSet_ListByService_default_response::getError() const {
    return m_error;
}
void OAIApiVersionSet_ListByService_default_response::setError(const OAIApiVersionSet_ListByService_default_response_error &error) {
    m_error = error;
    m_error_isSet = true;
}

bool OAIApiVersionSet_ListByService_default_response::is_error_Set() const{
    return m_error_isSet;
}

bool OAIApiVersionSet_ListByService_default_response::is_error_Valid() const{
    return m_error_isValid;
}

bool OAIApiVersionSet_ListByService_default_response::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_error.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIApiVersionSet_ListByService_default_response::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
