/*
 * RemediationsClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-07-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ErrorResponse;
import org.openapitools.client.model.Remediation;
import org.openapitools.client.model.RemediationDeploymentsListResult;
import org.openapitools.client.model.RemediationListResult;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Disabled
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    /**
     * Cancels a remediation at management group scope.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void remediationsCancelAtManagementGroupTest() throws ApiException {
        String managementGroupsNamespace = null;
        String managementGroupId = null;
        String remediationName = null;
        String apiVersion = null;
        Remediation response = api.remediationsCancelAtManagementGroup(managementGroupsNamespace, managementGroupId, remediationName, apiVersion);
        // TODO: test validations
    }

    /**
     * Cancel a remediation at resource scope.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void remediationsCancelAtResourceTest() throws ApiException {
        String resourceId = null;
        String remediationName = null;
        String apiVersion = null;
        Remediation response = api.remediationsCancelAtResource(resourceId, remediationName, apiVersion);
        // TODO: test validations
    }

    /**
     * Cancels a remediation at resource group scope.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void remediationsCancelAtResourceGroupTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String remediationName = null;
        String apiVersion = null;
        Remediation response = api.remediationsCancelAtResourceGroup(subscriptionId, resourceGroupName, remediationName, apiVersion);
        // TODO: test validations
    }

    /**
     * Cancels a remediation at subscription scope.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void remediationsCancelAtSubscriptionTest() throws ApiException {
        String subscriptionId = null;
        String remediationName = null;
        String apiVersion = null;
        Remediation response = api.remediationsCancelAtSubscription(subscriptionId, remediationName, apiVersion);
        // TODO: test validations
    }

    /**
     * Creates or updates a remediation at management group scope.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void remediationsCreateOrUpdateAtManagementGroupTest() throws ApiException {
        String managementGroupsNamespace = null;
        String managementGroupId = null;
        String remediationName = null;
        String apiVersion = null;
        Remediation parameters = null;
        Remediation response = api.remediationsCreateOrUpdateAtManagementGroup(managementGroupsNamespace, managementGroupId, remediationName, apiVersion, parameters);
        // TODO: test validations
    }

    /**
     * Creates or updates a remediation at resource scope.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void remediationsCreateOrUpdateAtResourceTest() throws ApiException {
        String resourceId = null;
        String remediationName = null;
        String apiVersion = null;
        Remediation parameters = null;
        Remediation response = api.remediationsCreateOrUpdateAtResource(resourceId, remediationName, apiVersion, parameters);
        // TODO: test validations
    }

    /**
     * Creates or updates a remediation at resource group scope.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void remediationsCreateOrUpdateAtResourceGroupTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String remediationName = null;
        String apiVersion = null;
        Remediation parameters = null;
        Remediation response = api.remediationsCreateOrUpdateAtResourceGroup(subscriptionId, resourceGroupName, remediationName, apiVersion, parameters);
        // TODO: test validations
    }

    /**
     * Creates or updates a remediation at subscription scope.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void remediationsCreateOrUpdateAtSubscriptionTest() throws ApiException {
        String subscriptionId = null;
        String remediationName = null;
        String apiVersion = null;
        Remediation parameters = null;
        Remediation response = api.remediationsCreateOrUpdateAtSubscription(subscriptionId, remediationName, apiVersion, parameters);
        // TODO: test validations
    }

    /**
     * Deletes an existing remediation at management group scope.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void remediationsDeleteAtManagementGroupTest() throws ApiException {
        String managementGroupsNamespace = null;
        String managementGroupId = null;
        String remediationName = null;
        String apiVersion = null;
        Remediation response = api.remediationsDeleteAtManagementGroup(managementGroupsNamespace, managementGroupId, remediationName, apiVersion);
        // TODO: test validations
    }

    /**
     * Deletes an existing remediation at individual resource scope.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void remediationsDeleteAtResourceTest() throws ApiException {
        String resourceId = null;
        String remediationName = null;
        String apiVersion = null;
        Remediation response = api.remediationsDeleteAtResource(resourceId, remediationName, apiVersion);
        // TODO: test validations
    }

    /**
     * Deletes an existing remediation at resource group scope.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void remediationsDeleteAtResourceGroupTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String remediationName = null;
        String apiVersion = null;
        Remediation response = api.remediationsDeleteAtResourceGroup(subscriptionId, resourceGroupName, remediationName, apiVersion);
        // TODO: test validations
    }

    /**
     * Deletes an existing remediation at subscription scope.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void remediationsDeleteAtSubscriptionTest() throws ApiException {
        String subscriptionId = null;
        String remediationName = null;
        String apiVersion = null;
        Remediation response = api.remediationsDeleteAtSubscription(subscriptionId, remediationName, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets an existing remediation at management group scope.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void remediationsGetAtManagementGroupTest() throws ApiException {
        String managementGroupsNamespace = null;
        String managementGroupId = null;
        String remediationName = null;
        String apiVersion = null;
        Remediation response = api.remediationsGetAtManagementGroup(managementGroupsNamespace, managementGroupId, remediationName, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets an existing remediation at resource scope.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void remediationsGetAtResourceTest() throws ApiException {
        String resourceId = null;
        String remediationName = null;
        String apiVersion = null;
        Remediation response = api.remediationsGetAtResource(resourceId, remediationName, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets an existing remediation at resource group scope.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void remediationsGetAtResourceGroupTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String remediationName = null;
        String apiVersion = null;
        Remediation response = api.remediationsGetAtResourceGroup(subscriptionId, resourceGroupName, remediationName, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets an existing remediation at subscription scope.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void remediationsGetAtSubscriptionTest() throws ApiException {
        String subscriptionId = null;
        String remediationName = null;
        String apiVersion = null;
        Remediation response = api.remediationsGetAtSubscription(subscriptionId, remediationName, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets all deployments for a remediation at management group scope.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void remediationsListDeploymentsAtManagementGroupTest() throws ApiException {
        String managementGroupsNamespace = null;
        String managementGroupId = null;
        String remediationName = null;
        String apiVersion = null;
        Integer $top = null;
        RemediationDeploymentsListResult response = api.remediationsListDeploymentsAtManagementGroup(managementGroupsNamespace, managementGroupId, remediationName, apiVersion, $top);
        // TODO: test validations
    }

    /**
     * Gets all deployments for a remediation at resource scope.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void remediationsListDeploymentsAtResourceTest() throws ApiException {
        String resourceId = null;
        String remediationName = null;
        String apiVersion = null;
        Integer $top = null;
        RemediationDeploymentsListResult response = api.remediationsListDeploymentsAtResource(resourceId, remediationName, apiVersion, $top);
        // TODO: test validations
    }

    /**
     * Gets all deployments for a remediation at resource group scope.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void remediationsListDeploymentsAtResourceGroupTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String remediationName = null;
        String apiVersion = null;
        Integer $top = null;
        RemediationDeploymentsListResult response = api.remediationsListDeploymentsAtResourceGroup(subscriptionId, resourceGroupName, remediationName, apiVersion, $top);
        // TODO: test validations
    }

    /**
     * Gets all deployments for a remediation at subscription scope.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void remediationsListDeploymentsAtSubscriptionTest() throws ApiException {
        String subscriptionId = null;
        String remediationName = null;
        String apiVersion = null;
        Integer $top = null;
        RemediationDeploymentsListResult response = api.remediationsListDeploymentsAtSubscription(subscriptionId, remediationName, apiVersion, $top);
        // TODO: test validations
    }

    /**
     * Gets all remediations for the management group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void remediationsListForManagementGroupTest() throws ApiException {
        String managementGroupsNamespace = null;
        String managementGroupId = null;
        String apiVersion = null;
        Integer $top = null;
        String $filter = null;
        RemediationListResult response = api.remediationsListForManagementGroup(managementGroupsNamespace, managementGroupId, apiVersion, $top, $filter);
        // TODO: test validations
    }

    /**
     * Gets all remediations for a resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void remediationsListForResourceTest() throws ApiException {
        String resourceId = null;
        String apiVersion = null;
        Integer $top = null;
        String $filter = null;
        RemediationListResult response = api.remediationsListForResource(resourceId, apiVersion, $top, $filter);
        // TODO: test validations
    }

    /**
     * Gets all remediations for the subscription.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void remediationsListForResourceGroupTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String apiVersion = null;
        Integer $top = null;
        String $filter = null;
        RemediationListResult response = api.remediationsListForResourceGroup(subscriptionId, resourceGroupName, apiVersion, $top, $filter);
        // TODO: test validations
    }

    /**
     * Gets all remediations for the subscription.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void remediationsListForSubscriptionTest() throws ApiException {
        String subscriptionId = null;
        String apiVersion = null;
        Integer $top = null;
        String $filter = null;
        RemediationListResult response = api.remediationsListForSubscription(subscriptionId, apiVersion, $top, $filter);
        // TODO: test validations
    }

}
