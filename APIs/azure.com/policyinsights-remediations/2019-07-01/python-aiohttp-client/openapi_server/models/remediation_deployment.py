# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.error_definition import ErrorDefinition
from openapi_server import util


class RemediationDeployment(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_on: datetime=None, deployment_id: str=None, error: ErrorDefinition=None, last_updated_on: datetime=None, remediated_resource_id: str=None, resource_location: str=None, status: str=None):
        """RemediationDeployment - a model defined in OpenAPI

        :param created_on: The created_on of this RemediationDeployment.
        :param deployment_id: The deployment_id of this RemediationDeployment.
        :param error: The error of this RemediationDeployment.
        :param last_updated_on: The last_updated_on of this RemediationDeployment.
        :param remediated_resource_id: The remediated_resource_id of this RemediationDeployment.
        :param resource_location: The resource_location of this RemediationDeployment.
        :param status: The status of this RemediationDeployment.
        """
        self.openapi_types = {
            'created_on': datetime,
            'deployment_id': str,
            'error': ErrorDefinition,
            'last_updated_on': datetime,
            'remediated_resource_id': str,
            'resource_location': str,
            'status': str
        }

        self.attribute_map = {
            'created_on': 'createdOn',
            'deployment_id': 'deploymentId',
            'error': 'error',
            'last_updated_on': 'lastUpdatedOn',
            'remediated_resource_id': 'remediatedResourceId',
            'resource_location': 'resourceLocation',
            'status': 'status'
        }

        self._created_on = created_on
        self._deployment_id = deployment_id
        self._error = error
        self._last_updated_on = last_updated_on
        self._remediated_resource_id = remediated_resource_id
        self._resource_location = resource_location
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RemediationDeployment':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RemediationDeployment of this RemediationDeployment.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_on(self):
        """Gets the created_on of this RemediationDeployment.

        The time at which the remediation was created.

        :return: The created_on of this RemediationDeployment.
        :rtype: datetime
        """
        return self._created_on

    @created_on.setter
    def created_on(self, created_on):
        """Sets the created_on of this RemediationDeployment.

        The time at which the remediation was created.

        :param created_on: The created_on of this RemediationDeployment.
        :type created_on: datetime
        """

        self._created_on = created_on

    @property
    def deployment_id(self):
        """Gets the deployment_id of this RemediationDeployment.

        Resource ID of the template deployment that will remediate the resource.

        :return: The deployment_id of this RemediationDeployment.
        :rtype: str
        """
        return self._deployment_id

    @deployment_id.setter
    def deployment_id(self, deployment_id):
        """Sets the deployment_id of this RemediationDeployment.

        Resource ID of the template deployment that will remediate the resource.

        :param deployment_id: The deployment_id of this RemediationDeployment.
        :type deployment_id: str
        """

        self._deployment_id = deployment_id

    @property
    def error(self):
        """Gets the error of this RemediationDeployment.


        :return: The error of this RemediationDeployment.
        :rtype: ErrorDefinition
        """
        return self._error

    @error.setter
    def error(self, error):
        """Sets the error of this RemediationDeployment.


        :param error: The error of this RemediationDeployment.
        :type error: ErrorDefinition
        """

        self._error = error

    @property
    def last_updated_on(self):
        """Gets the last_updated_on of this RemediationDeployment.

        The time at which the remediation deployment was last updated.

        :return: The last_updated_on of this RemediationDeployment.
        :rtype: datetime
        """
        return self._last_updated_on

    @last_updated_on.setter
    def last_updated_on(self, last_updated_on):
        """Sets the last_updated_on of this RemediationDeployment.

        The time at which the remediation deployment was last updated.

        :param last_updated_on: The last_updated_on of this RemediationDeployment.
        :type last_updated_on: datetime
        """

        self._last_updated_on = last_updated_on

    @property
    def remediated_resource_id(self):
        """Gets the remediated_resource_id of this RemediationDeployment.

        Resource ID of the resource that is being remediated by the deployment.

        :return: The remediated_resource_id of this RemediationDeployment.
        :rtype: str
        """
        return self._remediated_resource_id

    @remediated_resource_id.setter
    def remediated_resource_id(self, remediated_resource_id):
        """Sets the remediated_resource_id of this RemediationDeployment.

        Resource ID of the resource that is being remediated by the deployment.

        :param remediated_resource_id: The remediated_resource_id of this RemediationDeployment.
        :type remediated_resource_id: str
        """

        self._remediated_resource_id = remediated_resource_id

    @property
    def resource_location(self):
        """Gets the resource_location of this RemediationDeployment.

        Location of the resource that is being remediated.

        :return: The resource_location of this RemediationDeployment.
        :rtype: str
        """
        return self._resource_location

    @resource_location.setter
    def resource_location(self, resource_location):
        """Sets the resource_location of this RemediationDeployment.

        Location of the resource that is being remediated.

        :param resource_location: The resource_location of this RemediationDeployment.
        :type resource_location: str
        """

        self._resource_location = resource_location

    @property
    def status(self):
        """Gets the status of this RemediationDeployment.

        Status of the remediation deployment.

        :return: The status of this RemediationDeployment.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this RemediationDeployment.

        Status of the remediation deployment.

        :param status: The status of this RemediationDeployment.
        :type status: str
        """

        self._status = status
