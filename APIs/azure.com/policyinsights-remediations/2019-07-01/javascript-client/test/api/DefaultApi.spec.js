/**
 * RemediationsClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-07-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.RemediationsClient);
  }
}(this, function(expect, RemediationsClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new RemediationsClient.DefaultApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DefaultApi', function() {
    describe('remediationsCancelAtManagementGroup', function() {
      it('should call remediationsCancelAtManagementGroup successfully', function(done) {
        //uncomment below and update the code to test remediationsCancelAtManagementGroup
        //instance.remediationsCancelAtManagementGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('remediationsCancelAtResource', function() {
      it('should call remediationsCancelAtResource successfully', function(done) {
        //uncomment below and update the code to test remediationsCancelAtResource
        //instance.remediationsCancelAtResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('remediationsCancelAtResourceGroup', function() {
      it('should call remediationsCancelAtResourceGroup successfully', function(done) {
        //uncomment below and update the code to test remediationsCancelAtResourceGroup
        //instance.remediationsCancelAtResourceGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('remediationsCancelAtSubscription', function() {
      it('should call remediationsCancelAtSubscription successfully', function(done) {
        //uncomment below and update the code to test remediationsCancelAtSubscription
        //instance.remediationsCancelAtSubscription(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('remediationsCreateOrUpdateAtManagementGroup', function() {
      it('should call remediationsCreateOrUpdateAtManagementGroup successfully', function(done) {
        //uncomment below and update the code to test remediationsCreateOrUpdateAtManagementGroup
        //instance.remediationsCreateOrUpdateAtManagementGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('remediationsCreateOrUpdateAtResource', function() {
      it('should call remediationsCreateOrUpdateAtResource successfully', function(done) {
        //uncomment below and update the code to test remediationsCreateOrUpdateAtResource
        //instance.remediationsCreateOrUpdateAtResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('remediationsCreateOrUpdateAtResourceGroup', function() {
      it('should call remediationsCreateOrUpdateAtResourceGroup successfully', function(done) {
        //uncomment below and update the code to test remediationsCreateOrUpdateAtResourceGroup
        //instance.remediationsCreateOrUpdateAtResourceGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('remediationsCreateOrUpdateAtSubscription', function() {
      it('should call remediationsCreateOrUpdateAtSubscription successfully', function(done) {
        //uncomment below and update the code to test remediationsCreateOrUpdateAtSubscription
        //instance.remediationsCreateOrUpdateAtSubscription(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('remediationsDeleteAtManagementGroup', function() {
      it('should call remediationsDeleteAtManagementGroup successfully', function(done) {
        //uncomment below and update the code to test remediationsDeleteAtManagementGroup
        //instance.remediationsDeleteAtManagementGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('remediationsDeleteAtResource', function() {
      it('should call remediationsDeleteAtResource successfully', function(done) {
        //uncomment below and update the code to test remediationsDeleteAtResource
        //instance.remediationsDeleteAtResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('remediationsDeleteAtResourceGroup', function() {
      it('should call remediationsDeleteAtResourceGroup successfully', function(done) {
        //uncomment below and update the code to test remediationsDeleteAtResourceGroup
        //instance.remediationsDeleteAtResourceGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('remediationsDeleteAtSubscription', function() {
      it('should call remediationsDeleteAtSubscription successfully', function(done) {
        //uncomment below and update the code to test remediationsDeleteAtSubscription
        //instance.remediationsDeleteAtSubscription(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('remediationsGetAtManagementGroup', function() {
      it('should call remediationsGetAtManagementGroup successfully', function(done) {
        //uncomment below and update the code to test remediationsGetAtManagementGroup
        //instance.remediationsGetAtManagementGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('remediationsGetAtResource', function() {
      it('should call remediationsGetAtResource successfully', function(done) {
        //uncomment below and update the code to test remediationsGetAtResource
        //instance.remediationsGetAtResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('remediationsGetAtResourceGroup', function() {
      it('should call remediationsGetAtResourceGroup successfully', function(done) {
        //uncomment below and update the code to test remediationsGetAtResourceGroup
        //instance.remediationsGetAtResourceGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('remediationsGetAtSubscription', function() {
      it('should call remediationsGetAtSubscription successfully', function(done) {
        //uncomment below and update the code to test remediationsGetAtSubscription
        //instance.remediationsGetAtSubscription(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('remediationsListDeploymentsAtManagementGroup', function() {
      it('should call remediationsListDeploymentsAtManagementGroup successfully', function(done) {
        //uncomment below and update the code to test remediationsListDeploymentsAtManagementGroup
        //instance.remediationsListDeploymentsAtManagementGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('remediationsListDeploymentsAtResource', function() {
      it('should call remediationsListDeploymentsAtResource successfully', function(done) {
        //uncomment below and update the code to test remediationsListDeploymentsAtResource
        //instance.remediationsListDeploymentsAtResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('remediationsListDeploymentsAtResourceGroup', function() {
      it('should call remediationsListDeploymentsAtResourceGroup successfully', function(done) {
        //uncomment below and update the code to test remediationsListDeploymentsAtResourceGroup
        //instance.remediationsListDeploymentsAtResourceGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('remediationsListDeploymentsAtSubscription', function() {
      it('should call remediationsListDeploymentsAtSubscription successfully', function(done) {
        //uncomment below and update the code to test remediationsListDeploymentsAtSubscription
        //instance.remediationsListDeploymentsAtSubscription(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('remediationsListForManagementGroup', function() {
      it('should call remediationsListForManagementGroup successfully', function(done) {
        //uncomment below and update the code to test remediationsListForManagementGroup
        //instance.remediationsListForManagementGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('remediationsListForResource', function() {
      it('should call remediationsListForResource successfully', function(done) {
        //uncomment below and update the code to test remediationsListForResource
        //instance.remediationsListForResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('remediationsListForResourceGroup', function() {
      it('should call remediationsListForResourceGroup successfully', function(done) {
        //uncomment below and update the code to test remediationsListForResourceGroup
        //instance.remediationsListForResourceGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('remediationsListForSubscription', function() {
      it('should call remediationsListForSubscription successfully', function(done) {
        //uncomment below and update the code to test remediationsListForSubscription
        //instance.remediationsListForSubscription(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
