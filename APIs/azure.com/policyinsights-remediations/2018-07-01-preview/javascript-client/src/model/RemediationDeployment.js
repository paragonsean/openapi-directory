/**
 * RemediationsClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-07-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ErrorDefinition from './ErrorDefinition';

/**
 * The RemediationDeployment model module.
 * @module model/RemediationDeployment
 * @version 2018-07-01-preview
 */
class RemediationDeployment {
    /**
     * Constructs a new <code>RemediationDeployment</code>.
     * Details of a single deployment created by the remediation.
     * @alias module:model/RemediationDeployment
     */
    constructor() { 
        
        RemediationDeployment.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RemediationDeployment</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RemediationDeployment} obj Optional instance to populate.
     * @return {module:model/RemediationDeployment} The populated <code>RemediationDeployment</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RemediationDeployment();

            if (data.hasOwnProperty('createdOn')) {
                obj['createdOn'] = ApiClient.convertToType(data['createdOn'], 'Date');
            }
            if (data.hasOwnProperty('deploymentId')) {
                obj['deploymentId'] = ApiClient.convertToType(data['deploymentId'], 'String');
            }
            if (data.hasOwnProperty('error')) {
                obj['error'] = ErrorDefinition.constructFromObject(data['error']);
            }
            if (data.hasOwnProperty('lastUpdatedOn')) {
                obj['lastUpdatedOn'] = ApiClient.convertToType(data['lastUpdatedOn'], 'Date');
            }
            if (data.hasOwnProperty('remediatedResourceId')) {
                obj['remediatedResourceId'] = ApiClient.convertToType(data['remediatedResourceId'], 'String');
            }
            if (data.hasOwnProperty('resourceLocation')) {
                obj['resourceLocation'] = ApiClient.convertToType(data['resourceLocation'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RemediationDeployment</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RemediationDeployment</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['deploymentId'] && !(typeof data['deploymentId'] === 'string' || data['deploymentId'] instanceof String)) {
            throw new Error("Expected the field `deploymentId` to be a primitive type in the JSON string but got " + data['deploymentId']);
        }
        // validate the optional field `error`
        if (data['error']) { // data not null
          ErrorDefinition.validateJSON(data['error']);
        }
        // ensure the json data is a string
        if (data['remediatedResourceId'] && !(typeof data['remediatedResourceId'] === 'string' || data['remediatedResourceId'] instanceof String)) {
            throw new Error("Expected the field `remediatedResourceId` to be a primitive type in the JSON string but got " + data['remediatedResourceId']);
        }
        // ensure the json data is a string
        if (data['resourceLocation'] && !(typeof data['resourceLocation'] === 'string' || data['resourceLocation'] instanceof String)) {
            throw new Error("Expected the field `resourceLocation` to be a primitive type in the JSON string but got " + data['resourceLocation']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }

        return true;
    }


}



/**
 * The time at which the remediation was created.
 * @member {Date} createdOn
 */
RemediationDeployment.prototype['createdOn'] = undefined;

/**
 * Resource ID of the template deployment that will remediate the resource.
 * @member {String} deploymentId
 */
RemediationDeployment.prototype['deploymentId'] = undefined;

/**
 * @member {module:model/ErrorDefinition} error
 */
RemediationDeployment.prototype['error'] = undefined;

/**
 * The time at which the remediation deployment was last updated.
 * @member {Date} lastUpdatedOn
 */
RemediationDeployment.prototype['lastUpdatedOn'] = undefined;

/**
 * Resource ID of the resource that is being remediated by the deployment.
 * @member {String} remediatedResourceId
 */
RemediationDeployment.prototype['remediatedResourceId'] = undefined;

/**
 * Location of the resource that is being remediated.
 * @member {String} resourceLocation
 */
RemediationDeployment.prototype['resourceLocation'] = undefined;

/**
 * Status of the remediation deployment.
 * @member {String} status
 */
RemediationDeployment.prototype['status'] = undefined;






export default RemediationDeployment;

