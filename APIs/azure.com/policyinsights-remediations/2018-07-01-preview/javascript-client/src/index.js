/**
 * RemediationsClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-07-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import ErrorDefinition from './model/ErrorDefinition';
import ErrorResponse from './model/ErrorResponse';
import Remediation from './model/Remediation';
import RemediationDeployment from './model/RemediationDeployment';
import RemediationDeploymentSummary from './model/RemediationDeploymentSummary';
import RemediationDeploymentsListResult from './model/RemediationDeploymentsListResult';
import RemediationFilters from './model/RemediationFilters';
import RemediationListResult from './model/RemediationListResult';
import RemediationProperties from './model/RemediationProperties';
import TypedErrorInfo from './model/TypedErrorInfo';
import DefaultApi from './api/DefaultApi';


/**
* JS API client generated by OpenAPI Generator.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var RemediationsClient = require('index'); // See note below*.
* var xxxSvc = new RemediationsClient.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new RemediationsClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new RemediationsClient.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new RemediationsClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2018-07-01-preview
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The ErrorDefinition model constructor.
     * @property {module:model/ErrorDefinition}
     */
    ErrorDefinition,

    /**
     * The ErrorResponse model constructor.
     * @property {module:model/ErrorResponse}
     */
    ErrorResponse,

    /**
     * The Remediation model constructor.
     * @property {module:model/Remediation}
     */
    Remediation,

    /**
     * The RemediationDeployment model constructor.
     * @property {module:model/RemediationDeployment}
     */
    RemediationDeployment,

    /**
     * The RemediationDeploymentSummary model constructor.
     * @property {module:model/RemediationDeploymentSummary}
     */
    RemediationDeploymentSummary,

    /**
     * The RemediationDeploymentsListResult model constructor.
     * @property {module:model/RemediationDeploymentsListResult}
     */
    RemediationDeploymentsListResult,

    /**
     * The RemediationFilters model constructor.
     * @property {module:model/RemediationFilters}
     */
    RemediationFilters,

    /**
     * The RemediationListResult model constructor.
     * @property {module:model/RemediationListResult}
     */
    RemediationListResult,

    /**
     * The RemediationProperties model constructor.
     * @property {module:model/RemediationProperties}
     */
    RemediationProperties,

    /**
     * The TypedErrorInfo model constructor.
     * @property {module:model/TypedErrorInfo}
     */
    TypedErrorInfo,

    /**
    * The DefaultApi service constructor.
    * @property {module:api/DefaultApi}
    */
    DefaultApi
};
