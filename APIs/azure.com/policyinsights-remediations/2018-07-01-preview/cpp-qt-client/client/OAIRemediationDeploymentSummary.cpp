/**
 * RemediationsClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-07-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRemediationDeploymentSummary.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRemediationDeploymentSummary::OAIRemediationDeploymentSummary(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRemediationDeploymentSummary::OAIRemediationDeploymentSummary() {
    this->initializeModel();
}

OAIRemediationDeploymentSummary::~OAIRemediationDeploymentSummary() {}

void OAIRemediationDeploymentSummary::initializeModel() {

    m_failed_deployments_isSet = false;
    m_failed_deployments_isValid = false;

    m_successful_deployments_isSet = false;
    m_successful_deployments_isValid = false;

    m_total_deployments_isSet = false;
    m_total_deployments_isValid = false;
}

void OAIRemediationDeploymentSummary::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRemediationDeploymentSummary::fromJsonObject(QJsonObject json) {

    m_failed_deployments_isValid = ::OpenAPI::fromJsonValue(m_failed_deployments, json[QString("failedDeployments")]);
    m_failed_deployments_isSet = !json[QString("failedDeployments")].isNull() && m_failed_deployments_isValid;

    m_successful_deployments_isValid = ::OpenAPI::fromJsonValue(m_successful_deployments, json[QString("successfulDeployments")]);
    m_successful_deployments_isSet = !json[QString("successfulDeployments")].isNull() && m_successful_deployments_isValid;

    m_total_deployments_isValid = ::OpenAPI::fromJsonValue(m_total_deployments, json[QString("totalDeployments")]);
    m_total_deployments_isSet = !json[QString("totalDeployments")].isNull() && m_total_deployments_isValid;
}

QString OAIRemediationDeploymentSummary::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRemediationDeploymentSummary::asJsonObject() const {
    QJsonObject obj;
    if (m_failed_deployments_isSet) {
        obj.insert(QString("failedDeployments"), ::OpenAPI::toJsonValue(m_failed_deployments));
    }
    if (m_successful_deployments_isSet) {
        obj.insert(QString("successfulDeployments"), ::OpenAPI::toJsonValue(m_successful_deployments));
    }
    if (m_total_deployments_isSet) {
        obj.insert(QString("totalDeployments"), ::OpenAPI::toJsonValue(m_total_deployments));
    }
    return obj;
}

qint32 OAIRemediationDeploymentSummary::getFailedDeployments() const {
    return m_failed_deployments;
}
void OAIRemediationDeploymentSummary::setFailedDeployments(const qint32 &failed_deployments) {
    m_failed_deployments = failed_deployments;
    m_failed_deployments_isSet = true;
}

bool OAIRemediationDeploymentSummary::is_failed_deployments_Set() const{
    return m_failed_deployments_isSet;
}

bool OAIRemediationDeploymentSummary::is_failed_deployments_Valid() const{
    return m_failed_deployments_isValid;
}

qint32 OAIRemediationDeploymentSummary::getSuccessfulDeployments() const {
    return m_successful_deployments;
}
void OAIRemediationDeploymentSummary::setSuccessfulDeployments(const qint32 &successful_deployments) {
    m_successful_deployments = successful_deployments;
    m_successful_deployments_isSet = true;
}

bool OAIRemediationDeploymentSummary::is_successful_deployments_Set() const{
    return m_successful_deployments_isSet;
}

bool OAIRemediationDeploymentSummary::is_successful_deployments_Valid() const{
    return m_successful_deployments_isValid;
}

qint32 OAIRemediationDeploymentSummary::getTotalDeployments() const {
    return m_total_deployments;
}
void OAIRemediationDeploymentSummary::setTotalDeployments(const qint32 &total_deployments) {
    m_total_deployments = total_deployments;
    m_total_deployments_isSet = true;
}

bool OAIRemediationDeploymentSummary::is_total_deployments_Set() const{
    return m_total_deployments_isSet;
}

bool OAIRemediationDeploymentSummary::is_total_deployments_Valid() const{
    return m_total_deployments_isValid;
}

bool OAIRemediationDeploymentSummary::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_failed_deployments_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_successful_deployments_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_deployments_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRemediationDeploymentSummary::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
