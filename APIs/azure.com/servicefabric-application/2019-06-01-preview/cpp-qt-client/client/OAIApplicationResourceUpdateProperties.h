/**
 * ServiceFabricManagementClient
 * Azure Service Fabric Resource Provider API Client
 *
 * The version of the OpenAPI document: 2019-06-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIApplicationResourceUpdateProperties.h
 *
 * The application resource properties for patch operations.
 */

#ifndef OAIApplicationResourceUpdateProperties_H
#define OAIApplicationResourceUpdateProperties_H

#include <QJsonObject>

#include "OAIApplicationMetricDescription.h"
#include "OAIApplicationUpgradePolicy.h"
#include "OAIApplicationUserAssignedIdentity.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIApplicationUserAssignedIdentity;
class OAIApplicationMetricDescription;
class OAIApplicationUpgradePolicy;

class OAIApplicationResourceUpdateProperties : public OAIObject {
public:
    OAIApplicationResourceUpdateProperties();
    OAIApplicationResourceUpdateProperties(QString json);
    ~OAIApplicationResourceUpdateProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIApplicationUserAssignedIdentity> getManagedIdentities() const;
    void setManagedIdentities(const QList<OAIApplicationUserAssignedIdentity> &managed_identities);
    bool is_managed_identities_Set() const;
    bool is_managed_identities_Valid() const;

    qint64 getMaximumNodes() const;
    void setMaximumNodes(const qint64 &maximum_nodes);
    bool is_maximum_nodes_Set() const;
    bool is_maximum_nodes_Valid() const;

    QList<OAIApplicationMetricDescription> getMetrics() const;
    void setMetrics(const QList<OAIApplicationMetricDescription> &metrics);
    bool is_metrics_Set() const;
    bool is_metrics_Valid() const;

    qint64 getMinimumNodes() const;
    void setMinimumNodes(const qint64 &minimum_nodes);
    bool is_minimum_nodes_Set() const;
    bool is_minimum_nodes_Valid() const;

    QMap<QString, QString> getParameters() const;
    void setParameters(const QMap<QString, QString> &parameters);
    bool is_parameters_Set() const;
    bool is_parameters_Valid() const;

    bool isRemoveApplicationCapacity() const;
    void setRemoveApplicationCapacity(const bool &remove_application_capacity);
    bool is_remove_application_capacity_Set() const;
    bool is_remove_application_capacity_Valid() const;

    QString getTypeVersion() const;
    void setTypeVersion(const QString &type_version);
    bool is_type_version_Set() const;
    bool is_type_version_Valid() const;

    OAIApplicationUpgradePolicy getUpgradePolicy() const;
    void setUpgradePolicy(const OAIApplicationUpgradePolicy &upgrade_policy);
    bool is_upgrade_policy_Set() const;
    bool is_upgrade_policy_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIApplicationUserAssignedIdentity> m_managed_identities;
    bool m_managed_identities_isSet;
    bool m_managed_identities_isValid;

    qint64 m_maximum_nodes;
    bool m_maximum_nodes_isSet;
    bool m_maximum_nodes_isValid;

    QList<OAIApplicationMetricDescription> m_metrics;
    bool m_metrics_isSet;
    bool m_metrics_isValid;

    qint64 m_minimum_nodes;
    bool m_minimum_nodes_isSet;
    bool m_minimum_nodes_isValid;

    QMap<QString, QString> m_parameters;
    bool m_parameters_isSet;
    bool m_parameters_isValid;

    bool m_remove_application_capacity;
    bool m_remove_application_capacity_isSet;
    bool m_remove_application_capacity_isValid;

    QString m_type_version;
    bool m_type_version_isSet;
    bool m_type_version_isValid;

    OAIApplicationUpgradePolicy m_upgrade_policy;
    bool m_upgrade_policy_isSet;
    bool m_upgrade_policy_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIApplicationResourceUpdateProperties)

#endif // OAIApplicationResourceUpdateProperties_H
