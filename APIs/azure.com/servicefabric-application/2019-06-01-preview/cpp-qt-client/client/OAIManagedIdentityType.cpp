/**
 * ServiceFabricManagementClient
 * Azure Service Fabric Resource Provider API Client
 *
 * The version of the OpenAPI document: 2019-06-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIManagedIdentityType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIManagedIdentityType::OAIManagedIdentityType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIManagedIdentityType::OAIManagedIdentityType() {
    this->initializeModel();
}

OAIManagedIdentityType::~OAIManagedIdentityType() {}

void OAIManagedIdentityType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIManagedIdentityType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIManagedIdentityType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("SystemAssigned", Qt::CaseInsensitive) == 0) {
        m_value = eOAIManagedIdentityType::SYSTEMASSIGNED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("UserAssigned", Qt::CaseInsensitive) == 0) {
        m_value = eOAIManagedIdentityType::USERASSIGNED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SystemAssigned, UserAssigned", Qt::CaseInsensitive) == 0) {
        m_value = eOAIManagedIdentityType::SYSTEMASSIGNED_USERASSIGNED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("None", Qt::CaseInsensitive) == 0) {
        m_value = eOAIManagedIdentityType::NONE;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIManagedIdentityType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIManagedIdentityType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIManagedIdentityType::SYSTEMASSIGNED:
            val = "SystemAssigned";
            break;
        case eOAIManagedIdentityType::USERASSIGNED:
            val = "UserAssigned";
            break;
        case eOAIManagedIdentityType::SYSTEMASSIGNED_USERASSIGNED:
            val = "SystemAssigned, UserAssigned";
            break;
        case eOAIManagedIdentityType::NONE:
            val = "None";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIManagedIdentityType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIManagedIdentityType::eOAIManagedIdentityType OAIManagedIdentityType::getValue() const {
    return m_value;
}

void OAIManagedIdentityType::setValue(const OAIManagedIdentityType::eOAIManagedIdentityType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIManagedIdentityType::isSet() const {
    
    return m_value_isSet;
}

bool OAIManagedIdentityType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
