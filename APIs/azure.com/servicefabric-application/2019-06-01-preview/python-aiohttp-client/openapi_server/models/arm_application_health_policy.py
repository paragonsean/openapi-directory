# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.arm_service_type_health_policy import ArmServiceTypeHealthPolicy
from openapi_server import util


class ArmApplicationHealthPolicy(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, consider_warning_as_error: bool=False, default_service_type_health_policy: ArmServiceTypeHealthPolicy=None, max_percent_unhealthy_deployed_applications: int=None, service_type_health_policy_map: Dict[str, ArmServiceTypeHealthPolicy]=None):
        """ArmApplicationHealthPolicy - a model defined in OpenAPI

        :param consider_warning_as_error: The consider_warning_as_error of this ArmApplicationHealthPolicy.
        :param default_service_type_health_policy: The default_service_type_health_policy of this ArmApplicationHealthPolicy.
        :param max_percent_unhealthy_deployed_applications: The max_percent_unhealthy_deployed_applications of this ArmApplicationHealthPolicy.
        :param service_type_health_policy_map: The service_type_health_policy_map of this ArmApplicationHealthPolicy.
        """
        self.openapi_types = {
            'consider_warning_as_error': bool,
            'default_service_type_health_policy': ArmServiceTypeHealthPolicy,
            'max_percent_unhealthy_deployed_applications': int,
            'service_type_health_policy_map': Dict[str, ArmServiceTypeHealthPolicy]
        }

        self.attribute_map = {
            'consider_warning_as_error': 'considerWarningAsError',
            'default_service_type_health_policy': 'defaultServiceTypeHealthPolicy',
            'max_percent_unhealthy_deployed_applications': 'maxPercentUnhealthyDeployedApplications',
            'service_type_health_policy_map': 'serviceTypeHealthPolicyMap'
        }

        self._consider_warning_as_error = consider_warning_as_error
        self._default_service_type_health_policy = default_service_type_health_policy
        self._max_percent_unhealthy_deployed_applications = max_percent_unhealthy_deployed_applications
        self._service_type_health_policy_map = service_type_health_policy_map

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ArmApplicationHealthPolicy':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ArmApplicationHealthPolicy of this ArmApplicationHealthPolicy.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def consider_warning_as_error(self):
        """Gets the consider_warning_as_error of this ArmApplicationHealthPolicy.

        Indicates whether warnings are treated with the same severity as errors.

        :return: The consider_warning_as_error of this ArmApplicationHealthPolicy.
        :rtype: bool
        """
        return self._consider_warning_as_error

    @consider_warning_as_error.setter
    def consider_warning_as_error(self, consider_warning_as_error):
        """Sets the consider_warning_as_error of this ArmApplicationHealthPolicy.

        Indicates whether warnings are treated with the same severity as errors.

        :param consider_warning_as_error: The consider_warning_as_error of this ArmApplicationHealthPolicy.
        :type consider_warning_as_error: bool
        """

        self._consider_warning_as_error = consider_warning_as_error

    @property
    def default_service_type_health_policy(self):
        """Gets the default_service_type_health_policy of this ArmApplicationHealthPolicy.


        :return: The default_service_type_health_policy of this ArmApplicationHealthPolicy.
        :rtype: ArmServiceTypeHealthPolicy
        """
        return self._default_service_type_health_policy

    @default_service_type_health_policy.setter
    def default_service_type_health_policy(self, default_service_type_health_policy):
        """Sets the default_service_type_health_policy of this ArmApplicationHealthPolicy.


        :param default_service_type_health_policy: The default_service_type_health_policy of this ArmApplicationHealthPolicy.
        :type default_service_type_health_policy: ArmServiceTypeHealthPolicy
        """

        self._default_service_type_health_policy = default_service_type_health_policy

    @property
    def max_percent_unhealthy_deployed_applications(self):
        """Gets the max_percent_unhealthy_deployed_applications of this ArmApplicationHealthPolicy.

        The maximum allowed percentage of unhealthy deployed applications. Allowed values are Byte values from zero to 100. The percentage represents the maximum tolerated percentage of deployed applications that can be unhealthy before the application is considered in error. This is calculated by dividing the number of unhealthy deployed applications over the number of nodes where the application is currently deployed on in the cluster. The computation rounds up to tolerate one failure on small numbers of nodes. Default percentage is zero. 

        :return: The max_percent_unhealthy_deployed_applications of this ArmApplicationHealthPolicy.
        :rtype: int
        """
        return self._max_percent_unhealthy_deployed_applications

    @max_percent_unhealthy_deployed_applications.setter
    def max_percent_unhealthy_deployed_applications(self, max_percent_unhealthy_deployed_applications):
        """Sets the max_percent_unhealthy_deployed_applications of this ArmApplicationHealthPolicy.

        The maximum allowed percentage of unhealthy deployed applications. Allowed values are Byte values from zero to 100. The percentage represents the maximum tolerated percentage of deployed applications that can be unhealthy before the application is considered in error. This is calculated by dividing the number of unhealthy deployed applications over the number of nodes where the application is currently deployed on in the cluster. The computation rounds up to tolerate one failure on small numbers of nodes. Default percentage is zero. 

        :param max_percent_unhealthy_deployed_applications: The max_percent_unhealthy_deployed_applications of this ArmApplicationHealthPolicy.
        :type max_percent_unhealthy_deployed_applications: int
        """

        self._max_percent_unhealthy_deployed_applications = max_percent_unhealthy_deployed_applications

    @property
    def service_type_health_policy_map(self):
        """Gets the service_type_health_policy_map of this ArmApplicationHealthPolicy.

        Defines a ServiceTypeHealthPolicy per service type name.  The entries in the map replace the default service type health policy for each specified service type. For example, in an application that contains both a stateless gateway service type and a stateful engine service type, the health policies for the stateless and stateful services can be configured differently. With policy per service type, there's more granular control of the health of the service.  If no policy is specified for a service type name, the DefaultServiceTypeHealthPolicy is used for evaluation. 

        :return: The service_type_health_policy_map of this ArmApplicationHealthPolicy.
        :rtype: Dict[str, ArmServiceTypeHealthPolicy]
        """
        return self._service_type_health_policy_map

    @service_type_health_policy_map.setter
    def service_type_health_policy_map(self, service_type_health_policy_map):
        """Sets the service_type_health_policy_map of this ArmApplicationHealthPolicy.

        Defines a ServiceTypeHealthPolicy per service type name.  The entries in the map replace the default service type health policy for each specified service type. For example, in an application that contains both a stateless gateway service type and a stateful engine service type, the health policies for the stateless and stateful services can be configured differently. With policy per service type, there's more granular control of the health of the service.  If no policy is specified for a service type name, the DefaultServiceTypeHealthPolicy is used for evaluation. 

        :param service_type_health_policy_map: The service_type_health_policy_map of this ArmApplicationHealthPolicy.
        :type service_type_health_policy_map: Dict[str, ArmServiceTypeHealthPolicy]
        """

        self._service_type_health_policy_map = service_type_health_policy_map
