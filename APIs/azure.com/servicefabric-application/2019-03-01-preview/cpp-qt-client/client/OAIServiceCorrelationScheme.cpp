/**
 * ServiceFabricManagementClient
 * Azure Service Fabric Resource Provider API Client
 *
 * The version of the OpenAPI document: 2019-03-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIServiceCorrelationScheme.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIServiceCorrelationScheme::OAIServiceCorrelationScheme(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIServiceCorrelationScheme::OAIServiceCorrelationScheme() {
    this->initializeModel();
}

OAIServiceCorrelationScheme::~OAIServiceCorrelationScheme() {}

void OAIServiceCorrelationScheme::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIServiceCorrelationScheme::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIServiceCorrelationScheme::fromJson(QString jsonString) {
    
    if ( jsonString.compare("Invalid", Qt::CaseInsensitive) == 0) {
        m_value = eOAIServiceCorrelationScheme::INVALID;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Affinity", Qt::CaseInsensitive) == 0) {
        m_value = eOAIServiceCorrelationScheme::AFFINITY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("AlignedAffinity", Qt::CaseInsensitive) == 0) {
        m_value = eOAIServiceCorrelationScheme::ALIGNEDAFFINITY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("NonAlignedAffinity", Qt::CaseInsensitive) == 0) {
        m_value = eOAIServiceCorrelationScheme::NONALIGNEDAFFINITY;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIServiceCorrelationScheme::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIServiceCorrelationScheme::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIServiceCorrelationScheme::INVALID:
            val = "Invalid";
            break;
        case eOAIServiceCorrelationScheme::AFFINITY:
            val = "Affinity";
            break;
        case eOAIServiceCorrelationScheme::ALIGNEDAFFINITY:
            val = "AlignedAffinity";
            break;
        case eOAIServiceCorrelationScheme::NONALIGNEDAFFINITY:
            val = "NonAlignedAffinity";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIServiceCorrelationScheme::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIServiceCorrelationScheme::eOAIServiceCorrelationScheme OAIServiceCorrelationScheme::getValue() const {
    return m_value;
}

void OAIServiceCorrelationScheme::setValue(const OAIServiceCorrelationScheme::eOAIServiceCorrelationScheme& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIServiceCorrelationScheme::isSet() const {
    
    return m_value_isSet;
}

bool OAIServiceCorrelationScheme::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
