/**
 * ServiceFabricManagementClient
 * Azure Service Fabric Resource Provider API Client
 *
 * The version of the OpenAPI document: 2019-03-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIArmApplicationHealthPolicy.h
 *
 * Defines a health policy used to evaluate the health of an application or one of its children entities. 
 */

#ifndef OAIArmApplicationHealthPolicy_H
#define OAIArmApplicationHealthPolicy_H

#include <QJsonObject>

#include "OAIArmServiceTypeHealthPolicy.h"
#include <QMap>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIArmServiceTypeHealthPolicy;

class OAIArmApplicationHealthPolicy : public OAIObject {
public:
    OAIArmApplicationHealthPolicy();
    OAIArmApplicationHealthPolicy(QString json);
    ~OAIArmApplicationHealthPolicy() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isConsiderWarningAsError() const;
    void setConsiderWarningAsError(const bool &consider_warning_as_error);
    bool is_consider_warning_as_error_Set() const;
    bool is_consider_warning_as_error_Valid() const;

    OAIArmServiceTypeHealthPolicy getDefaultServiceTypeHealthPolicy() const;
    void setDefaultServiceTypeHealthPolicy(const OAIArmServiceTypeHealthPolicy &default_service_type_health_policy);
    bool is_default_service_type_health_policy_Set() const;
    bool is_default_service_type_health_policy_Valid() const;

    qint32 getMaxPercentUnhealthyDeployedApplications() const;
    void setMaxPercentUnhealthyDeployedApplications(const qint32 &max_percent_unhealthy_deployed_applications);
    bool is_max_percent_unhealthy_deployed_applications_Set() const;
    bool is_max_percent_unhealthy_deployed_applications_Valid() const;

    QMap<QString, OAIArmServiceTypeHealthPolicy> getServiceTypeHealthPolicyMap() const;
    void setServiceTypeHealthPolicyMap(const QMap<QString, OAIArmServiceTypeHealthPolicy> &service_type_health_policy_map);
    bool is_service_type_health_policy_map_Set() const;
    bool is_service_type_health_policy_map_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_consider_warning_as_error;
    bool m_consider_warning_as_error_isSet;
    bool m_consider_warning_as_error_isValid;

    OAIArmServiceTypeHealthPolicy m_default_service_type_health_policy;
    bool m_default_service_type_health_policy_isSet;
    bool m_default_service_type_health_policy_isValid;

    qint32 m_max_percent_unhealthy_deployed_applications;
    bool m_max_percent_unhealthy_deployed_applications_isSet;
    bool m_max_percent_unhealthy_deployed_applications_isValid;

    QMap<QString, OAIArmServiceTypeHealthPolicy> m_service_type_health_policy_map;
    bool m_service_type_health_policy_map_isSet;
    bool m_service_type_health_policy_map_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIArmApplicationHealthPolicy)

#endif // OAIArmApplicationHealthPolicy_H
