/**
 * ServiceFabricManagementClient
 * Azure Service Fabric Resource Provider API Client
 *
 * The version of the OpenAPI document: 2019-03-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ApplicationResource from '../model/ApplicationResource';
import ApplicationResourceList from '../model/ApplicationResourceList';
import ApplicationResourceUpdate from '../model/ApplicationResourceUpdate';
import ErrorModel from '../model/ErrorModel';

/**
* Application service.
* @module api/ApplicationApi
* @version 2019-03-01-preview
*/
export default class ApplicationApi {

    /**
    * Constructs a new ApplicationApi. 
    * @alias module:api/ApplicationApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the applicationsCreate operation.
     * @callback module:api/ApplicationApi~applicationsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApplicationResource} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates or updates a Service Fabric application resource.
     * Create or update a Service Fabric application resource with the specified name.
     * @param {String} subscriptionId The customer subscription identifier.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} clusterName The name of the cluster resource.
     * @param {String} applicationName The name of the application resource.
     * @param {module:model/String} apiVersion The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2019-03-01-preview\" for this specification.
     * @param {module:model/ApplicationResource} parameters The application resource.
     * @param {module:api/ApplicationApi~applicationsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApplicationResource}
     */
    applicationsCreate(subscriptionId, resourceGroupName, clusterName, applicationName, apiVersion, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling applicationsCreate");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling applicationsCreate");
      }
      // verify the required parameter 'clusterName' is set
      if (clusterName === undefined || clusterName === null) {
        throw new Error("Missing the required parameter 'clusterName' when calling applicationsCreate");
      }
      // verify the required parameter 'applicationName' is set
      if (applicationName === undefined || applicationName === null) {
        throw new Error("Missing the required parameter 'applicationName' when calling applicationsCreate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling applicationsCreate");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling applicationsCreate");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'clusterName': clusterName,
        'applicationName': applicationName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ApplicationResource;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/clusters/{clusterName}/applications/{applicationName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the applicationsDelete operation.
     * @callback module:api/ApplicationApi~applicationsDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes a Service Fabric application resource.
     * Delete a Service Fabric application resource with the specified name.
     * @param {String} subscriptionId The customer subscription identifier.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} clusterName The name of the cluster resource.
     * @param {String} applicationName The name of the application resource.
     * @param {module:model/String} apiVersion The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2019-03-01-preview\" for this specification.
     * @param {module:api/ApplicationApi~applicationsDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    applicationsDelete(subscriptionId, resourceGroupName, clusterName, applicationName, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling applicationsDelete");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling applicationsDelete");
      }
      // verify the required parameter 'clusterName' is set
      if (clusterName === undefined || clusterName === null) {
        throw new Error("Missing the required parameter 'clusterName' when calling applicationsDelete");
      }
      // verify the required parameter 'applicationName' is set
      if (applicationName === undefined || applicationName === null) {
        throw new Error("Missing the required parameter 'applicationName' when calling applicationsDelete");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling applicationsDelete");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'clusterName': clusterName,
        'applicationName': applicationName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/clusters/{clusterName}/applications/{applicationName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the applicationsGet operation.
     * @callback module:api/ApplicationApi~applicationsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApplicationResource} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets a Service Fabric application resource.
     * Get a Service Fabric application resource created or in the process of being created in the Service Fabric cluster resource.
     * @param {String} subscriptionId The customer subscription identifier.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} clusterName The name of the cluster resource.
     * @param {String} applicationName The name of the application resource.
     * @param {module:model/String} apiVersion The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2019-03-01-preview\" for this specification.
     * @param {module:api/ApplicationApi~applicationsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApplicationResource}
     */
    applicationsGet(subscriptionId, resourceGroupName, clusterName, applicationName, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling applicationsGet");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling applicationsGet");
      }
      // verify the required parameter 'clusterName' is set
      if (clusterName === undefined || clusterName === null) {
        throw new Error("Missing the required parameter 'clusterName' when calling applicationsGet");
      }
      // verify the required parameter 'applicationName' is set
      if (applicationName === undefined || applicationName === null) {
        throw new Error("Missing the required parameter 'applicationName' when calling applicationsGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling applicationsGet");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'clusterName': clusterName,
        'applicationName': applicationName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ApplicationResource;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/clusters/{clusterName}/applications/{applicationName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the applicationsList operation.
     * @callback module:api/ApplicationApi~applicationsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApplicationResourceList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the list of application resources created in the specified Service Fabric cluster resource.
     * Gets all application resources created or in the process of being created in the Service Fabric cluster resource.
     * @param {String} subscriptionId The customer subscription identifier.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} clusterName The name of the cluster resource.
     * @param {module:model/String} apiVersion The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2019-03-01-preview\" for this specification.
     * @param {module:api/ApplicationApi~applicationsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApplicationResourceList}
     */
    applicationsList(subscriptionId, resourceGroupName, clusterName, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling applicationsList");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling applicationsList");
      }
      // verify the required parameter 'clusterName' is set
      if (clusterName === undefined || clusterName === null) {
        throw new Error("Missing the required parameter 'clusterName' when calling applicationsList");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling applicationsList");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'clusterName': clusterName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ApplicationResourceList;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/clusters/{clusterName}/applications', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the applicationsUpdate operation.
     * @callback module:api/ApplicationApi~applicationsUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApplicationResource} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates a Service Fabric application resource.
     * Update a Service Fabric application resource with the specified name.
     * @param {String} subscriptionId The customer subscription identifier.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} clusterName The name of the cluster resource.
     * @param {String} applicationName The name of the application resource.
     * @param {module:model/String} apiVersion The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2019-03-01-preview\" for this specification.
     * @param {module:model/ApplicationResourceUpdate} parameters The application resource for patch operations.
     * @param {module:api/ApplicationApi~applicationsUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApplicationResource}
     */
    applicationsUpdate(subscriptionId, resourceGroupName, clusterName, applicationName, apiVersion, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling applicationsUpdate");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling applicationsUpdate");
      }
      // verify the required parameter 'clusterName' is set
      if (clusterName === undefined || clusterName === null) {
        throw new Error("Missing the required parameter 'clusterName' when calling applicationsUpdate");
      }
      // verify the required parameter 'applicationName' is set
      if (applicationName === undefined || applicationName === null) {
        throw new Error("Missing the required parameter 'applicationName' when calling applicationsUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling applicationsUpdate");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling applicationsUpdate");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'clusterName': clusterName,
        'applicationName': applicationName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ApplicationResource;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/clusters/{clusterName}/applications/{applicationName}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
