/**
 * ServiceFabricManagementClient
 * Azure Service Fabric Resource Provider API Client
 *
 * The version of the OpenAPI document: 2017-07-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ApplicationMetricDescription from './ApplicationMetricDescription';
import ApplicationResourceUpdateProperties from './ApplicationResourceUpdateProperties';
import ApplicationUpgradePolicy from './ApplicationUpgradePolicy';

/**
 * The ApplicationResourceProperties model module.
 * @module model/ApplicationResourceProperties
 * @version 2017-07-01-preview
 */
class ApplicationResourceProperties {
    /**
     * Constructs a new <code>ApplicationResourceProperties</code>.
     * The application resource properties.
     * @alias module:model/ApplicationResourceProperties
     * @implements module:model/ApplicationResourceUpdateProperties
     */
    constructor() { 
        ApplicationResourceUpdateProperties.initialize(this);
        ApplicationResourceProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['maximumNodes'] = 0;
    }

    /**
     * Constructs a <code>ApplicationResourceProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApplicationResourceProperties} obj Optional instance to populate.
     * @return {module:model/ApplicationResourceProperties} The populated <code>ApplicationResourceProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApplicationResourceProperties();
            ApplicationResourceUpdateProperties.constructFromObject(data, obj);

            if (data.hasOwnProperty('provisioningState')) {
                obj['provisioningState'] = ApiClient.convertToType(data['provisioningState'], 'String');
            }
            if (data.hasOwnProperty('typeName')) {
                obj['typeName'] = ApiClient.convertToType(data['typeName'], 'String');
            }
            if (data.hasOwnProperty('maximumNodes')) {
                obj['maximumNodes'] = ApiClient.convertToType(data['maximumNodes'], 'Number');
            }
            if (data.hasOwnProperty('metrics')) {
                obj['metrics'] = ApiClient.convertToType(data['metrics'], [ApplicationMetricDescription]);
            }
            if (data.hasOwnProperty('minimumNodes')) {
                obj['minimumNodes'] = ApiClient.convertToType(data['minimumNodes'], 'Number');
            }
            if (data.hasOwnProperty('parameters')) {
                obj['parameters'] = ApiClient.convertToType(data['parameters'], {'String': 'String'});
            }
            if (data.hasOwnProperty('removeApplicationCapacity')) {
                obj['removeApplicationCapacity'] = ApiClient.convertToType(data['removeApplicationCapacity'], 'Boolean');
            }
            if (data.hasOwnProperty('typeVersion')) {
                obj['typeVersion'] = ApiClient.convertToType(data['typeVersion'], 'String');
            }
            if (data.hasOwnProperty('upgradePolicy')) {
                obj['upgradePolicy'] = ApplicationUpgradePolicy.constructFromObject(data['upgradePolicy']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ApplicationResourceProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ApplicationResourceProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['provisioningState'] && !(typeof data['provisioningState'] === 'string' || data['provisioningState'] instanceof String)) {
            throw new Error("Expected the field `provisioningState` to be a primitive type in the JSON string but got " + data['provisioningState']);
        }
        // ensure the json data is a string
        if (data['typeName'] && !(typeof data['typeName'] === 'string' || data['typeName'] instanceof String)) {
            throw new Error("Expected the field `typeName` to be a primitive type in the JSON string but got " + data['typeName']);
        }
        if (data['metrics']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['metrics'])) {
                throw new Error("Expected the field `metrics` to be an array in the JSON data but got " + data['metrics']);
            }
            // validate the optional field `metrics` (array)
            for (const item of data['metrics']) {
                ApplicationMetricDescription.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['typeVersion'] && !(typeof data['typeVersion'] === 'string' || data['typeVersion'] instanceof String)) {
            throw new Error("Expected the field `typeVersion` to be a primitive type in the JSON string but got " + data['typeVersion']);
        }
        // validate the optional field `upgradePolicy`
        if (data['upgradePolicy']) { // data not null
          ApplicationUpgradePolicy.validateJSON(data['upgradePolicy']);
        }

        return true;
    }


}



/**
 * The current deployment or provisioning state, which only appears in the response
 * @member {String} provisioningState
 */
ApplicationResourceProperties.prototype['provisioningState'] = undefined;

/**
 * The application type name as defined in the application manifest.
 * @member {String} typeName
 */
ApplicationResourceProperties.prototype['typeName'] = undefined;

/**
 * The maximum number of nodes where Service Fabric will reserve capacity for this application. Note that this does not mean that the services of this application will be placed on all of those nodes. By default, the value of this property is zero and it means that the services can be placed on any node.
 * @member {Number} maximumNodes
 * @default 0
 */
ApplicationResourceProperties.prototype['maximumNodes'] = 0;

/**
 * List of application capacity metric description.
 * @member {Array.<module:model/ApplicationMetricDescription>} metrics
 */
ApplicationResourceProperties.prototype['metrics'] = undefined;

/**
 * The minimum number of nodes where Service Fabric will reserve capacity for this application. Note that this does not mean that the services of this application will be placed on all of those nodes. If this property is set to zero, no capacity will be reserved. The value of this property cannot be more than the value of the MaximumNodes property.
 * @member {Number} minimumNodes
 */
ApplicationResourceProperties.prototype['minimumNodes'] = undefined;

/**
 * List of application parameters with overridden values from their default values specified in the application manifest.
 * @member {Object.<String, String>} parameters
 */
ApplicationResourceProperties.prototype['parameters'] = undefined;

/**
 * Remove the current application capacity settings.
 * @member {Boolean} removeApplicationCapacity
 */
ApplicationResourceProperties.prototype['removeApplicationCapacity'] = undefined;

/**
 * The version of the application type as defined in the application manifest.
 * @member {String} typeVersion
 */
ApplicationResourceProperties.prototype['typeVersion'] = undefined;

/**
 * @member {module:model/ApplicationUpgradePolicy} upgradePolicy
 */
ApplicationResourceProperties.prototype['upgradePolicy'] = undefined;


// Implement ApplicationResourceUpdateProperties interface:
/**
 * The maximum number of nodes where Service Fabric will reserve capacity for this application. Note that this does not mean that the services of this application will be placed on all of those nodes. By default, the value of this property is zero and it means that the services can be placed on any node.
 * @member {Number} maximumNodes
 * @default 0
 */
ApplicationResourceUpdateProperties.prototype['maximumNodes'] = 0;
/**
 * List of application capacity metric description.
 * @member {Array.<module:model/ApplicationMetricDescription>} metrics
 */
ApplicationResourceUpdateProperties.prototype['metrics'] = undefined;
/**
 * The minimum number of nodes where Service Fabric will reserve capacity for this application. Note that this does not mean that the services of this application will be placed on all of those nodes. If this property is set to zero, no capacity will be reserved. The value of this property cannot be more than the value of the MaximumNodes property.
 * @member {Number} minimumNodes
 */
ApplicationResourceUpdateProperties.prototype['minimumNodes'] = undefined;
/**
 * List of application parameters with overridden values from their default values specified in the application manifest.
 * @member {Object.<String, String>} parameters
 */
ApplicationResourceUpdateProperties.prototype['parameters'] = undefined;
/**
 * Remove the current application capacity settings.
 * @member {Boolean} removeApplicationCapacity
 */
ApplicationResourceUpdateProperties.prototype['removeApplicationCapacity'] = undefined;
/**
 * The version of the application type as defined in the application manifest.
 * @member {String} typeVersion
 */
ApplicationResourceUpdateProperties.prototype['typeVersion'] = undefined;
/**
 * @member {module:model/ApplicationUpgradePolicy} upgradePolicy
 */
ApplicationResourceUpdateProperties.prototype['upgradePolicy'] = undefined;




export default ApplicationResourceProperties;

