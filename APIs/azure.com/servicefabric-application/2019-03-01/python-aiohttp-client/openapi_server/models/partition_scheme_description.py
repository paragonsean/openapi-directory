# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.partition_scheme import PartitionScheme
from openapi_server import util


class PartitionSchemeDescription(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, partition_scheme: PartitionScheme=None):
        """PartitionSchemeDescription - a model defined in OpenAPI

        :param partition_scheme: The partition_scheme of this PartitionSchemeDescription.
        """
        self.openapi_types = {
            'partition_scheme': PartitionScheme
        }

        self.attribute_map = {
            'partition_scheme': 'partitionScheme'
        }

        self._partition_scheme = partition_scheme

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PartitionSchemeDescription':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PartitionSchemeDescription of this PartitionSchemeDescription.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def partition_scheme(self):
        """Gets the partition_scheme of this PartitionSchemeDescription.


        :return: The partition_scheme of this PartitionSchemeDescription.
        :rtype: PartitionScheme
        """
        return self._partition_scheme

    @partition_scheme.setter
    def partition_scheme(self, partition_scheme):
        """Sets the partition_scheme of this PartitionSchemeDescription.


        :param partition_scheme: The partition_scheme of this PartitionSchemeDescription.
        :type partition_scheme: PartitionScheme
        """
        if partition_scheme is None:
            raise ValueError("Invalid value for `partition_scheme`, must not be `None`")

        self._partition_scheme = partition_scheme
