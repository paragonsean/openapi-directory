/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2018-08-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBgpServiceCommunityPropertiesFormat.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBgpServiceCommunityPropertiesFormat::OAIBgpServiceCommunityPropertiesFormat(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBgpServiceCommunityPropertiesFormat::OAIBgpServiceCommunityPropertiesFormat() {
    this->initializeModel();
}

OAIBgpServiceCommunityPropertiesFormat::~OAIBgpServiceCommunityPropertiesFormat() {}

void OAIBgpServiceCommunityPropertiesFormat::initializeModel() {

    m_bgp_communities_isSet = false;
    m_bgp_communities_isValid = false;

    m_service_name_isSet = false;
    m_service_name_isValid = false;
}

void OAIBgpServiceCommunityPropertiesFormat::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBgpServiceCommunityPropertiesFormat::fromJsonObject(QJsonObject json) {

    m_bgp_communities_isValid = ::OpenAPI::fromJsonValue(m_bgp_communities, json[QString("bgpCommunities")]);
    m_bgp_communities_isSet = !json[QString("bgpCommunities")].isNull() && m_bgp_communities_isValid;

    m_service_name_isValid = ::OpenAPI::fromJsonValue(m_service_name, json[QString("serviceName")]);
    m_service_name_isSet = !json[QString("serviceName")].isNull() && m_service_name_isValid;
}

QString OAIBgpServiceCommunityPropertiesFormat::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBgpServiceCommunityPropertiesFormat::asJsonObject() const {
    QJsonObject obj;
    if (m_bgp_communities.size() > 0) {
        obj.insert(QString("bgpCommunities"), ::OpenAPI::toJsonValue(m_bgp_communities));
    }
    if (m_service_name_isSet) {
        obj.insert(QString("serviceName"), ::OpenAPI::toJsonValue(m_service_name));
    }
    return obj;
}

QList<OAIBGPCommunity> OAIBgpServiceCommunityPropertiesFormat::getBgpCommunities() const {
    return m_bgp_communities;
}
void OAIBgpServiceCommunityPropertiesFormat::setBgpCommunities(const QList<OAIBGPCommunity> &bgp_communities) {
    m_bgp_communities = bgp_communities;
    m_bgp_communities_isSet = true;
}

bool OAIBgpServiceCommunityPropertiesFormat::is_bgp_communities_Set() const{
    return m_bgp_communities_isSet;
}

bool OAIBgpServiceCommunityPropertiesFormat::is_bgp_communities_Valid() const{
    return m_bgp_communities_isValid;
}

QString OAIBgpServiceCommunityPropertiesFormat::getServiceName() const {
    return m_service_name;
}
void OAIBgpServiceCommunityPropertiesFormat::setServiceName(const QString &service_name) {
    m_service_name = service_name;
    m_service_name_isSet = true;
}

bool OAIBgpServiceCommunityPropertiesFormat::is_service_name_Set() const{
    return m_service_name_isSet;
}

bool OAIBgpServiceCommunityPropertiesFormat::is_service_name_Valid() const{
    return m_service_name_isValid;
}

bool OAIBgpServiceCommunityPropertiesFormat::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_bgp_communities.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_service_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBgpServiceCommunityPropertiesFormat::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
