# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BGPCommunity(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, community_name: str=None, community_prefixes: List[str]=None, community_value: str=None, service_supported_region: str=None):
        """BGPCommunity - a model defined in OpenAPI

        :param community_name: The community_name of this BGPCommunity.
        :param community_prefixes: The community_prefixes of this BGPCommunity.
        :param community_value: The community_value of this BGPCommunity.
        :param service_supported_region: The service_supported_region of this BGPCommunity.
        """
        self.openapi_types = {
            'community_name': str,
            'community_prefixes': List[str],
            'community_value': str,
            'service_supported_region': str
        }

        self.attribute_map = {
            'community_name': 'communityName',
            'community_prefixes': 'communityPrefixes',
            'community_value': 'communityValue',
            'service_supported_region': 'serviceSupportedRegion'
        }

        self._community_name = community_name
        self._community_prefixes = community_prefixes
        self._community_value = community_value
        self._service_supported_region = service_supported_region

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BGPCommunity':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BGPCommunity of this BGPCommunity.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def community_name(self):
        """Gets the community_name of this BGPCommunity.

        The name of the bgp community. e.g. Skype.

        :return: The community_name of this BGPCommunity.
        :rtype: str
        """
        return self._community_name

    @community_name.setter
    def community_name(self, community_name):
        """Sets the community_name of this BGPCommunity.

        The name of the bgp community. e.g. Skype.

        :param community_name: The community_name of this BGPCommunity.
        :type community_name: str
        """

        self._community_name = community_name

    @property
    def community_prefixes(self):
        """Gets the community_prefixes of this BGPCommunity.

        The prefixes that the bgp community contains.

        :return: The community_prefixes of this BGPCommunity.
        :rtype: List[str]
        """
        return self._community_prefixes

    @community_prefixes.setter
    def community_prefixes(self, community_prefixes):
        """Sets the community_prefixes of this BGPCommunity.

        The prefixes that the bgp community contains.

        :param community_prefixes: The community_prefixes of this BGPCommunity.
        :type community_prefixes: List[str]
        """

        self._community_prefixes = community_prefixes

    @property
    def community_value(self):
        """Gets the community_value of this BGPCommunity.

        The value of the bgp community. For more information: https://docs.microsoft.com/en-us/azure/expressroute/expressroute-routing.

        :return: The community_value of this BGPCommunity.
        :rtype: str
        """
        return self._community_value

    @community_value.setter
    def community_value(self, community_value):
        """Sets the community_value of this BGPCommunity.

        The value of the bgp community. For more information: https://docs.microsoft.com/en-us/azure/expressroute/expressroute-routing.

        :param community_value: The community_value of this BGPCommunity.
        :type community_value: str
        """

        self._community_value = community_value

    @property
    def service_supported_region(self):
        """Gets the service_supported_region of this BGPCommunity.

        The region which the service support. e.g. For O365, region is Global.

        :return: The service_supported_region of this BGPCommunity.
        :rtype: str
        """
        return self._service_supported_region

    @service_supported_region.setter
    def service_supported_region(self, service_supported_region):
        """Sets the service_supported_region of this BGPCommunity.

        The region which the service support. e.g. For O365, region is Global.

        :param service_supported_region: The service_supported_region of this BGPCommunity.
        :type service_supported_region: str
        """

        self._service_supported_region = service_supported_region
