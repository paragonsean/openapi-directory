# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesSiteConfigPushProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, dynamic_tags_json: str=None, is_push_enabled: bool=None, tag_whitelist_json: str=None, tags_requiring_auth: str=None):
        """AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesSiteConfigPushProperties - a model defined in OpenAPI

        :param dynamic_tags_json: The dynamic_tags_json of this AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesSiteConfigPushProperties.
        :param is_push_enabled: The is_push_enabled of this AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesSiteConfigPushProperties.
        :param tag_whitelist_json: The tag_whitelist_json of this AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesSiteConfigPushProperties.
        :param tags_requiring_auth: The tags_requiring_auth of this AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesSiteConfigPushProperties.
        """
        self.openapi_types = {
            'dynamic_tags_json': str,
            'is_push_enabled': bool,
            'tag_whitelist_json': str,
            'tags_requiring_auth': str
        }

        self.attribute_map = {
            'dynamic_tags_json': 'dynamicTagsJson',
            'is_push_enabled': 'isPushEnabled',
            'tag_whitelist_json': 'tagWhitelistJson',
            'tags_requiring_auth': 'tagsRequiringAuth'
        }

        self._dynamic_tags_json = dynamic_tags_json
        self._is_push_enabled = is_push_enabled
        self._tag_whitelist_json = tag_whitelist_json
        self._tags_requiring_auth = tags_requiring_auth

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesSiteConfigPushProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AppServiceEnvironments_ChangeVnet_200_response_value_inner_properties_siteConfig_push_properties of this AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesSiteConfigPushProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def dynamic_tags_json(self):
        """Gets the dynamic_tags_json of this AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesSiteConfigPushProperties.

        Gets or sets a JSON string containing a list of dynamic tags that will be evaluated from user claims in the push registration endpoint.

        :return: The dynamic_tags_json of this AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesSiteConfigPushProperties.
        :rtype: str
        """
        return self._dynamic_tags_json

    @dynamic_tags_json.setter
    def dynamic_tags_json(self, dynamic_tags_json):
        """Sets the dynamic_tags_json of this AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesSiteConfigPushProperties.

        Gets or sets a JSON string containing a list of dynamic tags that will be evaluated from user claims in the push registration endpoint.

        :param dynamic_tags_json: The dynamic_tags_json of this AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesSiteConfigPushProperties.
        :type dynamic_tags_json: str
        """

        self._dynamic_tags_json = dynamic_tags_json

    @property
    def is_push_enabled(self):
        """Gets the is_push_enabled of this AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesSiteConfigPushProperties.

        Gets or sets a flag indicating whether the Push endpoint is enabled.

        :return: The is_push_enabled of this AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesSiteConfigPushProperties.
        :rtype: bool
        """
        return self._is_push_enabled

    @is_push_enabled.setter
    def is_push_enabled(self, is_push_enabled):
        """Sets the is_push_enabled of this AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesSiteConfigPushProperties.

        Gets or sets a flag indicating whether the Push endpoint is enabled.

        :param is_push_enabled: The is_push_enabled of this AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesSiteConfigPushProperties.
        :type is_push_enabled: bool
        """
        if is_push_enabled is None:
            raise ValueError("Invalid value for `is_push_enabled`, must not be `None`")

        self._is_push_enabled = is_push_enabled

    @property
    def tag_whitelist_json(self):
        """Gets the tag_whitelist_json of this AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesSiteConfigPushProperties.

        Gets or sets a JSON string containing a list of tags that are whitelisted for use by the push registration endpoint.

        :return: The tag_whitelist_json of this AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesSiteConfigPushProperties.
        :rtype: str
        """
        return self._tag_whitelist_json

    @tag_whitelist_json.setter
    def tag_whitelist_json(self, tag_whitelist_json):
        """Sets the tag_whitelist_json of this AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesSiteConfigPushProperties.

        Gets or sets a JSON string containing a list of tags that are whitelisted for use by the push registration endpoint.

        :param tag_whitelist_json: The tag_whitelist_json of this AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesSiteConfigPushProperties.
        :type tag_whitelist_json: str
        """

        self._tag_whitelist_json = tag_whitelist_json

    @property
    def tags_requiring_auth(self):
        """Gets the tags_requiring_auth of this AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesSiteConfigPushProperties.

        Gets or sets a JSON string containing a list of tags that require user authentication to be used in the push registration endpoint. Tags can consist of alphanumeric characters and the following: '_', '@', '#', '.', ':', '-'.  Validation should be performed at the PushRequestHandler.

        :return: The tags_requiring_auth of this AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesSiteConfigPushProperties.
        :rtype: str
        """
        return self._tags_requiring_auth

    @tags_requiring_auth.setter
    def tags_requiring_auth(self, tags_requiring_auth):
        """Sets the tags_requiring_auth of this AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesSiteConfigPushProperties.

        Gets or sets a JSON string containing a list of tags that require user authentication to be used in the push registration endpoint. Tags can consist of alphanumeric characters and the following: '_', '@', '#', '.', ':', '-'.  Validation should be performed at the PushRequestHandler.

        :param tags_requiring_auth: The tags_requiring_auth of this AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesSiteConfigPushProperties.
        :type tags_requiring_auth: str
        """

        self._tags_requiring_auth = tags_requiring_auth
