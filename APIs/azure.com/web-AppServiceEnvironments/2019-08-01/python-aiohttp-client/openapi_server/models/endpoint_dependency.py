# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.endpoint_detail import EndpointDetail
from openapi_server import util


class EndpointDependency(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, domain_name: str=None, endpoint_details: List[EndpointDetail]=None):
        """EndpointDependency - a model defined in OpenAPI

        :param domain_name: The domain_name of this EndpointDependency.
        :param endpoint_details: The endpoint_details of this EndpointDependency.
        """
        self.openapi_types = {
            'domain_name': str,
            'endpoint_details': List[EndpointDetail]
        }

        self.attribute_map = {
            'domain_name': 'domainName',
            'endpoint_details': 'endpointDetails'
        }

        self._domain_name = domain_name
        self._endpoint_details = endpoint_details

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EndpointDependency':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EndpointDependency of this EndpointDependency.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def domain_name(self):
        """Gets the domain_name of this EndpointDependency.

        The domain name of the dependency.

        :return: The domain_name of this EndpointDependency.
        :rtype: str
        """
        return self._domain_name

    @domain_name.setter
    def domain_name(self, domain_name):
        """Sets the domain_name of this EndpointDependency.

        The domain name of the dependency.

        :param domain_name: The domain_name of this EndpointDependency.
        :type domain_name: str
        """

        self._domain_name = domain_name

    @property
    def endpoint_details(self):
        """Gets the endpoint_details of this EndpointDependency.

        The IP Addresses and Ports used when connecting to DomainName.

        :return: The endpoint_details of this EndpointDependency.
        :rtype: List[EndpointDetail]
        """
        return self._endpoint_details

    @endpoint_details.setter
    def endpoint_details(self, endpoint_details):
        """Sets the endpoint_details of this EndpointDependency.

        The IP Addresses and Ports used when connecting to DomainName.

        :param endpoint_details: The endpoint_details of this EndpointDependency.
        :type endpoint_details: List[EndpointDetail]
        """

        self._endpoint_details = endpoint_details
