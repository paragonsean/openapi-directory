/*
 * AppServiceEnvironments API Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-08-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import java.util.UUID;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Information needed for cloning operation.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:58:51.419617-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesCloningInfo {
  public static final String SERIALIZED_NAME_APP_SETTINGS_OVERRIDES = "appSettingsOverrides";
  @SerializedName(SERIALIZED_NAME_APP_SETTINGS_OVERRIDES)
  private Map<String, String> appSettingsOverrides = new HashMap<>();

  public static final String SERIALIZED_NAME_CLONE_CUSTOM_HOST_NAMES = "cloneCustomHostNames";
  @SerializedName(SERIALIZED_NAME_CLONE_CUSTOM_HOST_NAMES)
  private Boolean cloneCustomHostNames;

  public static final String SERIALIZED_NAME_CLONE_SOURCE_CONTROL = "cloneSourceControl";
  @SerializedName(SERIALIZED_NAME_CLONE_SOURCE_CONTROL)
  private Boolean cloneSourceControl;

  public static final String SERIALIZED_NAME_CONFIGURE_LOAD_BALANCING = "configureLoadBalancing";
  @SerializedName(SERIALIZED_NAME_CONFIGURE_LOAD_BALANCING)
  private Boolean configureLoadBalancing;

  public static final String SERIALIZED_NAME_CORRELATION_ID = "correlationId";
  @SerializedName(SERIALIZED_NAME_CORRELATION_ID)
  private UUID correlationId;

  public static final String SERIALIZED_NAME_HOSTING_ENVIRONMENT = "hostingEnvironment";
  @SerializedName(SERIALIZED_NAME_HOSTING_ENVIRONMENT)
  private String hostingEnvironment;

  public static final String SERIALIZED_NAME_OVERWRITE = "overwrite";
  @SerializedName(SERIALIZED_NAME_OVERWRITE)
  private Boolean overwrite;

  public static final String SERIALIZED_NAME_SOURCE_WEB_APP_ID = "sourceWebAppId";
  @SerializedName(SERIALIZED_NAME_SOURCE_WEB_APP_ID)
  private String sourceWebAppId;

  public static final String SERIALIZED_NAME_SOURCE_WEB_APP_LOCATION = "sourceWebAppLocation";
  @SerializedName(SERIALIZED_NAME_SOURCE_WEB_APP_LOCATION)
  private String sourceWebAppLocation;

  public static final String SERIALIZED_NAME_TRAFFIC_MANAGER_PROFILE_ID = "trafficManagerProfileId";
  @SerializedName(SERIALIZED_NAME_TRAFFIC_MANAGER_PROFILE_ID)
  private String trafficManagerProfileId;

  public static final String SERIALIZED_NAME_TRAFFIC_MANAGER_PROFILE_NAME = "trafficManagerProfileName";
  @SerializedName(SERIALIZED_NAME_TRAFFIC_MANAGER_PROFILE_NAME)
  private String trafficManagerProfileName;

  public AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesCloningInfo() {
  }

  public AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesCloningInfo appSettingsOverrides(Map<String, String> appSettingsOverrides) {
    this.appSettingsOverrides = appSettingsOverrides;
    return this;
  }

  public AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesCloningInfo putAppSettingsOverridesItem(String key, String appSettingsOverridesItem) {
    if (this.appSettingsOverrides == null) {
      this.appSettingsOverrides = new HashMap<>();
    }
    this.appSettingsOverrides.put(key, appSettingsOverridesItem);
    return this;
  }

  /**
   * Application setting overrides for cloned app. If specified, these settings override the settings cloned  from source app. Otherwise, application settings from source app are retained.
   * @return appSettingsOverrides
   */
  @javax.annotation.Nullable
  public Map<String, String> getAppSettingsOverrides() {
    return appSettingsOverrides;
  }

  public void setAppSettingsOverrides(Map<String, String> appSettingsOverrides) {
    this.appSettingsOverrides = appSettingsOverrides;
  }


  public AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesCloningInfo cloneCustomHostNames(Boolean cloneCustomHostNames) {
    this.cloneCustomHostNames = cloneCustomHostNames;
    return this;
  }

  /**
   * &lt;code&gt;true&lt;/code&gt; to clone custom hostnames from source app; otherwise, &lt;code&gt;false&lt;/code&gt;.
   * @return cloneCustomHostNames
   */
  @javax.annotation.Nullable
  public Boolean getCloneCustomHostNames() {
    return cloneCustomHostNames;
  }

  public void setCloneCustomHostNames(Boolean cloneCustomHostNames) {
    this.cloneCustomHostNames = cloneCustomHostNames;
  }


  public AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesCloningInfo cloneSourceControl(Boolean cloneSourceControl) {
    this.cloneSourceControl = cloneSourceControl;
    return this;
  }

  /**
   * &lt;code&gt;true&lt;/code&gt; to clone source control from source app; otherwise, &lt;code&gt;false&lt;/code&gt;.
   * @return cloneSourceControl
   */
  @javax.annotation.Nullable
  public Boolean getCloneSourceControl() {
    return cloneSourceControl;
  }

  public void setCloneSourceControl(Boolean cloneSourceControl) {
    this.cloneSourceControl = cloneSourceControl;
  }


  public AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesCloningInfo configureLoadBalancing(Boolean configureLoadBalancing) {
    this.configureLoadBalancing = configureLoadBalancing;
    return this;
  }

  /**
   * &lt;code&gt;true&lt;/code&gt; to configure load balancing for source and destination app.
   * @return configureLoadBalancing
   */
  @javax.annotation.Nullable
  public Boolean getConfigureLoadBalancing() {
    return configureLoadBalancing;
  }

  public void setConfigureLoadBalancing(Boolean configureLoadBalancing) {
    this.configureLoadBalancing = configureLoadBalancing;
  }


  public AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesCloningInfo correlationId(UUID correlationId) {
    this.correlationId = correlationId;
    return this;
  }

  /**
   * Correlation ID of cloning operation. This ID ties multiple cloning operations together to use the same snapshot.
   * @return correlationId
   */
  @javax.annotation.Nullable
  public UUID getCorrelationId() {
    return correlationId;
  }

  public void setCorrelationId(UUID correlationId) {
    this.correlationId = correlationId;
  }


  public AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesCloningInfo hostingEnvironment(String hostingEnvironment) {
    this.hostingEnvironment = hostingEnvironment;
    return this;
  }

  /**
   * App Service Environment.
   * @return hostingEnvironment
   */
  @javax.annotation.Nullable
  public String getHostingEnvironment() {
    return hostingEnvironment;
  }

  public void setHostingEnvironment(String hostingEnvironment) {
    this.hostingEnvironment = hostingEnvironment;
  }


  public AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesCloningInfo overwrite(Boolean overwrite) {
    this.overwrite = overwrite;
    return this;
  }

  /**
   * &lt;code&gt;true&lt;/code&gt; to overwrite destination app; otherwise, &lt;code&gt;false&lt;/code&gt;.
   * @return overwrite
   */
  @javax.annotation.Nullable
  public Boolean getOverwrite() {
    return overwrite;
  }

  public void setOverwrite(Boolean overwrite) {
    this.overwrite = overwrite;
  }


  public AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesCloningInfo sourceWebAppId(String sourceWebAppId) {
    this.sourceWebAppId = sourceWebAppId;
    return this;
  }

  /**
   * ARM resource ID of the source app. App resource ID is of the form  /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName} for production slots and  /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slotName} for other slots.
   * @return sourceWebAppId
   */
  @javax.annotation.Nonnull
  public String getSourceWebAppId() {
    return sourceWebAppId;
  }

  public void setSourceWebAppId(String sourceWebAppId) {
    this.sourceWebAppId = sourceWebAppId;
  }


  public AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesCloningInfo sourceWebAppLocation(String sourceWebAppLocation) {
    this.sourceWebAppLocation = sourceWebAppLocation;
    return this;
  }

  /**
   * Location of source app ex: West US or North Europe
   * @return sourceWebAppLocation
   */
  @javax.annotation.Nullable
  public String getSourceWebAppLocation() {
    return sourceWebAppLocation;
  }

  public void setSourceWebAppLocation(String sourceWebAppLocation) {
    this.sourceWebAppLocation = sourceWebAppLocation;
  }


  public AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesCloningInfo trafficManagerProfileId(String trafficManagerProfileId) {
    this.trafficManagerProfileId = trafficManagerProfileId;
    return this;
  }

  /**
   * ARM resource ID of the Traffic Manager profile to use, if it exists. Traffic Manager resource ID is of the form  /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{profileName}.
   * @return trafficManagerProfileId
   */
  @javax.annotation.Nullable
  public String getTrafficManagerProfileId() {
    return trafficManagerProfileId;
  }

  public void setTrafficManagerProfileId(String trafficManagerProfileId) {
    this.trafficManagerProfileId = trafficManagerProfileId;
  }


  public AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesCloningInfo trafficManagerProfileName(String trafficManagerProfileName) {
    this.trafficManagerProfileName = trafficManagerProfileName;
    return this;
  }

  /**
   * Name of Traffic Manager profile to create. This is only needed if Traffic Manager profile does not already exist.
   * @return trafficManagerProfileName
   */
  @javax.annotation.Nullable
  public String getTrafficManagerProfileName() {
    return trafficManagerProfileName;
  }

  public void setTrafficManagerProfileName(String trafficManagerProfileName) {
    this.trafficManagerProfileName = trafficManagerProfileName;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesCloningInfo appServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesCloningInfo = (AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesCloningInfo) o;
    return Objects.equals(this.appSettingsOverrides, appServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesCloningInfo.appSettingsOverrides) &&
        Objects.equals(this.cloneCustomHostNames, appServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesCloningInfo.cloneCustomHostNames) &&
        Objects.equals(this.cloneSourceControl, appServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesCloningInfo.cloneSourceControl) &&
        Objects.equals(this.configureLoadBalancing, appServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesCloningInfo.configureLoadBalancing) &&
        Objects.equals(this.correlationId, appServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesCloningInfo.correlationId) &&
        Objects.equals(this.hostingEnvironment, appServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesCloningInfo.hostingEnvironment) &&
        Objects.equals(this.overwrite, appServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesCloningInfo.overwrite) &&
        Objects.equals(this.sourceWebAppId, appServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesCloningInfo.sourceWebAppId) &&
        Objects.equals(this.sourceWebAppLocation, appServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesCloningInfo.sourceWebAppLocation) &&
        Objects.equals(this.trafficManagerProfileId, appServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesCloningInfo.trafficManagerProfileId) &&
        Objects.equals(this.trafficManagerProfileName, appServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesCloningInfo.trafficManagerProfileName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(appSettingsOverrides, cloneCustomHostNames, cloneSourceControl, configureLoadBalancing, correlationId, hostingEnvironment, overwrite, sourceWebAppId, sourceWebAppLocation, trafficManagerProfileId, trafficManagerProfileName);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesCloningInfo {\n");
    sb.append("    appSettingsOverrides: ").append(toIndentedString(appSettingsOverrides)).append("\n");
    sb.append("    cloneCustomHostNames: ").append(toIndentedString(cloneCustomHostNames)).append("\n");
    sb.append("    cloneSourceControl: ").append(toIndentedString(cloneSourceControl)).append("\n");
    sb.append("    configureLoadBalancing: ").append(toIndentedString(configureLoadBalancing)).append("\n");
    sb.append("    correlationId: ").append(toIndentedString(correlationId)).append("\n");
    sb.append("    hostingEnvironment: ").append(toIndentedString(hostingEnvironment)).append("\n");
    sb.append("    overwrite: ").append(toIndentedString(overwrite)).append("\n");
    sb.append("    sourceWebAppId: ").append(toIndentedString(sourceWebAppId)).append("\n");
    sb.append("    sourceWebAppLocation: ").append(toIndentedString(sourceWebAppLocation)).append("\n");
    sb.append("    trafficManagerProfileId: ").append(toIndentedString(trafficManagerProfileId)).append("\n");
    sb.append("    trafficManagerProfileName: ").append(toIndentedString(trafficManagerProfileName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("appSettingsOverrides");
    openapiFields.add("cloneCustomHostNames");
    openapiFields.add("cloneSourceControl");
    openapiFields.add("configureLoadBalancing");
    openapiFields.add("correlationId");
    openapiFields.add("hostingEnvironment");
    openapiFields.add("overwrite");
    openapiFields.add("sourceWebAppId");
    openapiFields.add("sourceWebAppLocation");
    openapiFields.add("trafficManagerProfileId");
    openapiFields.add("trafficManagerProfileName");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("sourceWebAppId");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesCloningInfo
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesCloningInfo.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesCloningInfo is not found in the empty JSON string", AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesCloningInfo.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesCloningInfo.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesCloningInfo` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesCloningInfo.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("correlationId") != null && !jsonObj.get("correlationId").isJsonNull()) && !jsonObj.get("correlationId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `correlationId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("correlationId").toString()));
      }
      if ((jsonObj.get("hostingEnvironment") != null && !jsonObj.get("hostingEnvironment").isJsonNull()) && !jsonObj.get("hostingEnvironment").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `hostingEnvironment` to be a primitive type in the JSON string but got `%s`", jsonObj.get("hostingEnvironment").toString()));
      }
      if (!jsonObj.get("sourceWebAppId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sourceWebAppId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sourceWebAppId").toString()));
      }
      if ((jsonObj.get("sourceWebAppLocation") != null && !jsonObj.get("sourceWebAppLocation").isJsonNull()) && !jsonObj.get("sourceWebAppLocation").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sourceWebAppLocation` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sourceWebAppLocation").toString()));
      }
      if ((jsonObj.get("trafficManagerProfileId") != null && !jsonObj.get("trafficManagerProfileId").isJsonNull()) && !jsonObj.get("trafficManagerProfileId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `trafficManagerProfileId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("trafficManagerProfileId").toString()));
      }
      if ((jsonObj.get("trafficManagerProfileName") != null && !jsonObj.get("trafficManagerProfileName").isJsonNull()) && !jsonObj.get("trafficManagerProfileName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `trafficManagerProfileName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("trafficManagerProfileName").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesCloningInfo.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesCloningInfo' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesCloningInfo> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesCloningInfo.class));

       return (TypeAdapter<T>) new TypeAdapter<AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesCloningInfo>() {
           @Override
           public void write(JsonWriter out, AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesCloningInfo value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesCloningInfo read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesCloningInfo given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesCloningInfo
   * @throws IOException if the JSON string is invalid with respect to AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesCloningInfo
   */
  public static AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesCloningInfo fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesCloningInfo.class);
  }

  /**
   * Convert an instance of AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesCloningInfo to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

