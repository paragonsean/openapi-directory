/**
 * AppServiceEnvironments API Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-08-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAppServiceEnvironments_ListAppServicePlans_200_response_value_inner_properties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAppServiceEnvironments_ListAppServicePlans_200_response_value_inner_properties::OAIAppServiceEnvironments_ListAppServicePlans_200_response_value_inner_properties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAppServiceEnvironments_ListAppServicePlans_200_response_value_inner_properties::OAIAppServiceEnvironments_ListAppServicePlans_200_response_value_inner_properties() {
    this->initializeModel();
}

OAIAppServiceEnvironments_ListAppServicePlans_200_response_value_inner_properties::~OAIAppServiceEnvironments_ListAppServicePlans_200_response_value_inner_properties() {}

void OAIAppServiceEnvironments_ListAppServicePlans_200_response_value_inner_properties::initializeModel() {

    m_free_offer_expiration_time_isSet = false;
    m_free_offer_expiration_time_isValid = false;

    m_geo_region_isSet = false;
    m_geo_region_isValid = false;

    m_hosting_environment_profile_isSet = false;
    m_hosting_environment_profile_isValid = false;

    m_hyper_v_isSet = false;
    m_hyper_v_isValid = false;

    m_is_spot_isSet = false;
    m_is_spot_isValid = false;

    m_is_xenon_isSet = false;
    m_is_xenon_isValid = false;

    m_maximum_elastic_worker_count_isSet = false;
    m_maximum_elastic_worker_count_isValid = false;

    m_maximum_number_of_workers_isSet = false;
    m_maximum_number_of_workers_isValid = false;

    m_number_of_sites_isSet = false;
    m_number_of_sites_isValid = false;

    m_per_site_scaling_isSet = false;
    m_per_site_scaling_isValid = false;

    m_provisioning_state_isSet = false;
    m_provisioning_state_isValid = false;

    m_reserved_isSet = false;
    m_reserved_isValid = false;

    m_resource_group_isSet = false;
    m_resource_group_isValid = false;

    m_spot_expiration_time_isSet = false;
    m_spot_expiration_time_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_subscription_isSet = false;
    m_subscription_isValid = false;

    m_target_worker_count_isSet = false;
    m_target_worker_count_isValid = false;

    m_target_worker_size_id_isSet = false;
    m_target_worker_size_id_isValid = false;

    m_worker_tier_name_isSet = false;
    m_worker_tier_name_isValid = false;
}

void OAIAppServiceEnvironments_ListAppServicePlans_200_response_value_inner_properties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAppServiceEnvironments_ListAppServicePlans_200_response_value_inner_properties::fromJsonObject(QJsonObject json) {

    m_free_offer_expiration_time_isValid = ::OpenAPI::fromJsonValue(m_free_offer_expiration_time, json[QString("freeOfferExpirationTime")]);
    m_free_offer_expiration_time_isSet = !json[QString("freeOfferExpirationTime")].isNull() && m_free_offer_expiration_time_isValid;

    m_geo_region_isValid = ::OpenAPI::fromJsonValue(m_geo_region, json[QString("geoRegion")]);
    m_geo_region_isSet = !json[QString("geoRegion")].isNull() && m_geo_region_isValid;

    m_hosting_environment_profile_isValid = ::OpenAPI::fromJsonValue(m_hosting_environment_profile, json[QString("hostingEnvironmentProfile")]);
    m_hosting_environment_profile_isSet = !json[QString("hostingEnvironmentProfile")].isNull() && m_hosting_environment_profile_isValid;

    m_hyper_v_isValid = ::OpenAPI::fromJsonValue(m_hyper_v, json[QString("hyperV")]);
    m_hyper_v_isSet = !json[QString("hyperV")].isNull() && m_hyper_v_isValid;

    m_is_spot_isValid = ::OpenAPI::fromJsonValue(m_is_spot, json[QString("isSpot")]);
    m_is_spot_isSet = !json[QString("isSpot")].isNull() && m_is_spot_isValid;

    m_is_xenon_isValid = ::OpenAPI::fromJsonValue(m_is_xenon, json[QString("isXenon")]);
    m_is_xenon_isSet = !json[QString("isXenon")].isNull() && m_is_xenon_isValid;

    m_maximum_elastic_worker_count_isValid = ::OpenAPI::fromJsonValue(m_maximum_elastic_worker_count, json[QString("maximumElasticWorkerCount")]);
    m_maximum_elastic_worker_count_isSet = !json[QString("maximumElasticWorkerCount")].isNull() && m_maximum_elastic_worker_count_isValid;

    m_maximum_number_of_workers_isValid = ::OpenAPI::fromJsonValue(m_maximum_number_of_workers, json[QString("maximumNumberOfWorkers")]);
    m_maximum_number_of_workers_isSet = !json[QString("maximumNumberOfWorkers")].isNull() && m_maximum_number_of_workers_isValid;

    m_number_of_sites_isValid = ::OpenAPI::fromJsonValue(m_number_of_sites, json[QString("numberOfSites")]);
    m_number_of_sites_isSet = !json[QString("numberOfSites")].isNull() && m_number_of_sites_isValid;

    m_per_site_scaling_isValid = ::OpenAPI::fromJsonValue(m_per_site_scaling, json[QString("perSiteScaling")]);
    m_per_site_scaling_isSet = !json[QString("perSiteScaling")].isNull() && m_per_site_scaling_isValid;

    m_provisioning_state_isValid = ::OpenAPI::fromJsonValue(m_provisioning_state, json[QString("provisioningState")]);
    m_provisioning_state_isSet = !json[QString("provisioningState")].isNull() && m_provisioning_state_isValid;

    m_reserved_isValid = ::OpenAPI::fromJsonValue(m_reserved, json[QString("reserved")]);
    m_reserved_isSet = !json[QString("reserved")].isNull() && m_reserved_isValid;

    m_resource_group_isValid = ::OpenAPI::fromJsonValue(m_resource_group, json[QString("resourceGroup")]);
    m_resource_group_isSet = !json[QString("resourceGroup")].isNull() && m_resource_group_isValid;

    m_spot_expiration_time_isValid = ::OpenAPI::fromJsonValue(m_spot_expiration_time, json[QString("spotExpirationTime")]);
    m_spot_expiration_time_isSet = !json[QString("spotExpirationTime")].isNull() && m_spot_expiration_time_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_subscription_isValid = ::OpenAPI::fromJsonValue(m_subscription, json[QString("subscription")]);
    m_subscription_isSet = !json[QString("subscription")].isNull() && m_subscription_isValid;

    m_target_worker_count_isValid = ::OpenAPI::fromJsonValue(m_target_worker_count, json[QString("targetWorkerCount")]);
    m_target_worker_count_isSet = !json[QString("targetWorkerCount")].isNull() && m_target_worker_count_isValid;

    m_target_worker_size_id_isValid = ::OpenAPI::fromJsonValue(m_target_worker_size_id, json[QString("targetWorkerSizeId")]);
    m_target_worker_size_id_isSet = !json[QString("targetWorkerSizeId")].isNull() && m_target_worker_size_id_isValid;

    m_worker_tier_name_isValid = ::OpenAPI::fromJsonValue(m_worker_tier_name, json[QString("workerTierName")]);
    m_worker_tier_name_isSet = !json[QString("workerTierName")].isNull() && m_worker_tier_name_isValid;
}

QString OAIAppServiceEnvironments_ListAppServicePlans_200_response_value_inner_properties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAppServiceEnvironments_ListAppServicePlans_200_response_value_inner_properties::asJsonObject() const {
    QJsonObject obj;
    if (m_free_offer_expiration_time_isSet) {
        obj.insert(QString("freeOfferExpirationTime"), ::OpenAPI::toJsonValue(m_free_offer_expiration_time));
    }
    if (m_geo_region_isSet) {
        obj.insert(QString("geoRegion"), ::OpenAPI::toJsonValue(m_geo_region));
    }
    if (m_hosting_environment_profile.isSet()) {
        obj.insert(QString("hostingEnvironmentProfile"), ::OpenAPI::toJsonValue(m_hosting_environment_profile));
    }
    if (m_hyper_v_isSet) {
        obj.insert(QString("hyperV"), ::OpenAPI::toJsonValue(m_hyper_v));
    }
    if (m_is_spot_isSet) {
        obj.insert(QString("isSpot"), ::OpenAPI::toJsonValue(m_is_spot));
    }
    if (m_is_xenon_isSet) {
        obj.insert(QString("isXenon"), ::OpenAPI::toJsonValue(m_is_xenon));
    }
    if (m_maximum_elastic_worker_count_isSet) {
        obj.insert(QString("maximumElasticWorkerCount"), ::OpenAPI::toJsonValue(m_maximum_elastic_worker_count));
    }
    if (m_maximum_number_of_workers_isSet) {
        obj.insert(QString("maximumNumberOfWorkers"), ::OpenAPI::toJsonValue(m_maximum_number_of_workers));
    }
    if (m_number_of_sites_isSet) {
        obj.insert(QString("numberOfSites"), ::OpenAPI::toJsonValue(m_number_of_sites));
    }
    if (m_per_site_scaling_isSet) {
        obj.insert(QString("perSiteScaling"), ::OpenAPI::toJsonValue(m_per_site_scaling));
    }
    if (m_provisioning_state_isSet) {
        obj.insert(QString("provisioningState"), ::OpenAPI::toJsonValue(m_provisioning_state));
    }
    if (m_reserved_isSet) {
        obj.insert(QString("reserved"), ::OpenAPI::toJsonValue(m_reserved));
    }
    if (m_resource_group_isSet) {
        obj.insert(QString("resourceGroup"), ::OpenAPI::toJsonValue(m_resource_group));
    }
    if (m_spot_expiration_time_isSet) {
        obj.insert(QString("spotExpirationTime"), ::OpenAPI::toJsonValue(m_spot_expiration_time));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_subscription_isSet) {
        obj.insert(QString("subscription"), ::OpenAPI::toJsonValue(m_subscription));
    }
    if (m_target_worker_count_isSet) {
        obj.insert(QString("targetWorkerCount"), ::OpenAPI::toJsonValue(m_target_worker_count));
    }
    if (m_target_worker_size_id_isSet) {
        obj.insert(QString("targetWorkerSizeId"), ::OpenAPI::toJsonValue(m_target_worker_size_id));
    }
    if (m_worker_tier_name_isSet) {
        obj.insert(QString("workerTierName"), ::OpenAPI::toJsonValue(m_worker_tier_name));
    }
    return obj;
}

QDateTime OAIAppServiceEnvironments_ListAppServicePlans_200_response_value_inner_properties::getFreeOfferExpirationTime() const {
    return m_free_offer_expiration_time;
}
void OAIAppServiceEnvironments_ListAppServicePlans_200_response_value_inner_properties::setFreeOfferExpirationTime(const QDateTime &free_offer_expiration_time) {
    m_free_offer_expiration_time = free_offer_expiration_time;
    m_free_offer_expiration_time_isSet = true;
}

bool OAIAppServiceEnvironments_ListAppServicePlans_200_response_value_inner_properties::is_free_offer_expiration_time_Set() const{
    return m_free_offer_expiration_time_isSet;
}

bool OAIAppServiceEnvironments_ListAppServicePlans_200_response_value_inner_properties::is_free_offer_expiration_time_Valid() const{
    return m_free_offer_expiration_time_isValid;
}

QString OAIAppServiceEnvironments_ListAppServicePlans_200_response_value_inner_properties::getGeoRegion() const {
    return m_geo_region;
}
void OAIAppServiceEnvironments_ListAppServicePlans_200_response_value_inner_properties::setGeoRegion(const QString &geo_region) {
    m_geo_region = geo_region;
    m_geo_region_isSet = true;
}

bool OAIAppServiceEnvironments_ListAppServicePlans_200_response_value_inner_properties::is_geo_region_Set() const{
    return m_geo_region_isSet;
}

bool OAIAppServiceEnvironments_ListAppServicePlans_200_response_value_inner_properties::is_geo_region_Valid() const{
    return m_geo_region_isValid;
}

OAIAppServiceEnvironments_ChangeVnet_200_response_value_inner_properties_hostingEnvironmentProfile OAIAppServiceEnvironments_ListAppServicePlans_200_response_value_inner_properties::getHostingEnvironmentProfile() const {
    return m_hosting_environment_profile;
}
void OAIAppServiceEnvironments_ListAppServicePlans_200_response_value_inner_properties::setHostingEnvironmentProfile(const OAIAppServiceEnvironments_ChangeVnet_200_response_value_inner_properties_hostingEnvironmentProfile &hosting_environment_profile) {
    m_hosting_environment_profile = hosting_environment_profile;
    m_hosting_environment_profile_isSet = true;
}

bool OAIAppServiceEnvironments_ListAppServicePlans_200_response_value_inner_properties::is_hosting_environment_profile_Set() const{
    return m_hosting_environment_profile_isSet;
}

bool OAIAppServiceEnvironments_ListAppServicePlans_200_response_value_inner_properties::is_hosting_environment_profile_Valid() const{
    return m_hosting_environment_profile_isValid;
}

bool OAIAppServiceEnvironments_ListAppServicePlans_200_response_value_inner_properties::isHyperV() const {
    return m_hyper_v;
}
void OAIAppServiceEnvironments_ListAppServicePlans_200_response_value_inner_properties::setHyperV(const bool &hyper_v) {
    m_hyper_v = hyper_v;
    m_hyper_v_isSet = true;
}

bool OAIAppServiceEnvironments_ListAppServicePlans_200_response_value_inner_properties::is_hyper_v_Set() const{
    return m_hyper_v_isSet;
}

bool OAIAppServiceEnvironments_ListAppServicePlans_200_response_value_inner_properties::is_hyper_v_Valid() const{
    return m_hyper_v_isValid;
}

bool OAIAppServiceEnvironments_ListAppServicePlans_200_response_value_inner_properties::isIsSpot() const {
    return m_is_spot;
}
void OAIAppServiceEnvironments_ListAppServicePlans_200_response_value_inner_properties::setIsSpot(const bool &is_spot) {
    m_is_spot = is_spot;
    m_is_spot_isSet = true;
}

bool OAIAppServiceEnvironments_ListAppServicePlans_200_response_value_inner_properties::is_is_spot_Set() const{
    return m_is_spot_isSet;
}

bool OAIAppServiceEnvironments_ListAppServicePlans_200_response_value_inner_properties::is_is_spot_Valid() const{
    return m_is_spot_isValid;
}

bool OAIAppServiceEnvironments_ListAppServicePlans_200_response_value_inner_properties::isIsXenon() const {
    return m_is_xenon;
}
void OAIAppServiceEnvironments_ListAppServicePlans_200_response_value_inner_properties::setIsXenon(const bool &is_xenon) {
    m_is_xenon = is_xenon;
    m_is_xenon_isSet = true;
}

bool OAIAppServiceEnvironments_ListAppServicePlans_200_response_value_inner_properties::is_is_xenon_Set() const{
    return m_is_xenon_isSet;
}

bool OAIAppServiceEnvironments_ListAppServicePlans_200_response_value_inner_properties::is_is_xenon_Valid() const{
    return m_is_xenon_isValid;
}

qint32 OAIAppServiceEnvironments_ListAppServicePlans_200_response_value_inner_properties::getMaximumElasticWorkerCount() const {
    return m_maximum_elastic_worker_count;
}
void OAIAppServiceEnvironments_ListAppServicePlans_200_response_value_inner_properties::setMaximumElasticWorkerCount(const qint32 &maximum_elastic_worker_count) {
    m_maximum_elastic_worker_count = maximum_elastic_worker_count;
    m_maximum_elastic_worker_count_isSet = true;
}

bool OAIAppServiceEnvironments_ListAppServicePlans_200_response_value_inner_properties::is_maximum_elastic_worker_count_Set() const{
    return m_maximum_elastic_worker_count_isSet;
}

bool OAIAppServiceEnvironments_ListAppServicePlans_200_response_value_inner_properties::is_maximum_elastic_worker_count_Valid() const{
    return m_maximum_elastic_worker_count_isValid;
}

qint32 OAIAppServiceEnvironments_ListAppServicePlans_200_response_value_inner_properties::getMaximumNumberOfWorkers() const {
    return m_maximum_number_of_workers;
}
void OAIAppServiceEnvironments_ListAppServicePlans_200_response_value_inner_properties::setMaximumNumberOfWorkers(const qint32 &maximum_number_of_workers) {
    m_maximum_number_of_workers = maximum_number_of_workers;
    m_maximum_number_of_workers_isSet = true;
}

bool OAIAppServiceEnvironments_ListAppServicePlans_200_response_value_inner_properties::is_maximum_number_of_workers_Set() const{
    return m_maximum_number_of_workers_isSet;
}

bool OAIAppServiceEnvironments_ListAppServicePlans_200_response_value_inner_properties::is_maximum_number_of_workers_Valid() const{
    return m_maximum_number_of_workers_isValid;
}

qint32 OAIAppServiceEnvironments_ListAppServicePlans_200_response_value_inner_properties::getNumberOfSites() const {
    return m_number_of_sites;
}
void OAIAppServiceEnvironments_ListAppServicePlans_200_response_value_inner_properties::setNumberOfSites(const qint32 &number_of_sites) {
    m_number_of_sites = number_of_sites;
    m_number_of_sites_isSet = true;
}

bool OAIAppServiceEnvironments_ListAppServicePlans_200_response_value_inner_properties::is_number_of_sites_Set() const{
    return m_number_of_sites_isSet;
}

bool OAIAppServiceEnvironments_ListAppServicePlans_200_response_value_inner_properties::is_number_of_sites_Valid() const{
    return m_number_of_sites_isValid;
}

bool OAIAppServiceEnvironments_ListAppServicePlans_200_response_value_inner_properties::isPerSiteScaling() const {
    return m_per_site_scaling;
}
void OAIAppServiceEnvironments_ListAppServicePlans_200_response_value_inner_properties::setPerSiteScaling(const bool &per_site_scaling) {
    m_per_site_scaling = per_site_scaling;
    m_per_site_scaling_isSet = true;
}

bool OAIAppServiceEnvironments_ListAppServicePlans_200_response_value_inner_properties::is_per_site_scaling_Set() const{
    return m_per_site_scaling_isSet;
}

bool OAIAppServiceEnvironments_ListAppServicePlans_200_response_value_inner_properties::is_per_site_scaling_Valid() const{
    return m_per_site_scaling_isValid;
}

QString OAIAppServiceEnvironments_ListAppServicePlans_200_response_value_inner_properties::getProvisioningState() const {
    return m_provisioning_state;
}
void OAIAppServiceEnvironments_ListAppServicePlans_200_response_value_inner_properties::setProvisioningState(const QString &provisioning_state) {
    m_provisioning_state = provisioning_state;
    m_provisioning_state_isSet = true;
}

bool OAIAppServiceEnvironments_ListAppServicePlans_200_response_value_inner_properties::is_provisioning_state_Set() const{
    return m_provisioning_state_isSet;
}

bool OAIAppServiceEnvironments_ListAppServicePlans_200_response_value_inner_properties::is_provisioning_state_Valid() const{
    return m_provisioning_state_isValid;
}

bool OAIAppServiceEnvironments_ListAppServicePlans_200_response_value_inner_properties::isReserved() const {
    return m_reserved;
}
void OAIAppServiceEnvironments_ListAppServicePlans_200_response_value_inner_properties::setReserved(const bool &reserved) {
    m_reserved = reserved;
    m_reserved_isSet = true;
}

bool OAIAppServiceEnvironments_ListAppServicePlans_200_response_value_inner_properties::is_reserved_Set() const{
    return m_reserved_isSet;
}

bool OAIAppServiceEnvironments_ListAppServicePlans_200_response_value_inner_properties::is_reserved_Valid() const{
    return m_reserved_isValid;
}

QString OAIAppServiceEnvironments_ListAppServicePlans_200_response_value_inner_properties::getResourceGroup() const {
    return m_resource_group;
}
void OAIAppServiceEnvironments_ListAppServicePlans_200_response_value_inner_properties::setResourceGroup(const QString &resource_group) {
    m_resource_group = resource_group;
    m_resource_group_isSet = true;
}

bool OAIAppServiceEnvironments_ListAppServicePlans_200_response_value_inner_properties::is_resource_group_Set() const{
    return m_resource_group_isSet;
}

bool OAIAppServiceEnvironments_ListAppServicePlans_200_response_value_inner_properties::is_resource_group_Valid() const{
    return m_resource_group_isValid;
}

QDateTime OAIAppServiceEnvironments_ListAppServicePlans_200_response_value_inner_properties::getSpotExpirationTime() const {
    return m_spot_expiration_time;
}
void OAIAppServiceEnvironments_ListAppServicePlans_200_response_value_inner_properties::setSpotExpirationTime(const QDateTime &spot_expiration_time) {
    m_spot_expiration_time = spot_expiration_time;
    m_spot_expiration_time_isSet = true;
}

bool OAIAppServiceEnvironments_ListAppServicePlans_200_response_value_inner_properties::is_spot_expiration_time_Set() const{
    return m_spot_expiration_time_isSet;
}

bool OAIAppServiceEnvironments_ListAppServicePlans_200_response_value_inner_properties::is_spot_expiration_time_Valid() const{
    return m_spot_expiration_time_isValid;
}

QString OAIAppServiceEnvironments_ListAppServicePlans_200_response_value_inner_properties::getStatus() const {
    return m_status;
}
void OAIAppServiceEnvironments_ListAppServicePlans_200_response_value_inner_properties::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIAppServiceEnvironments_ListAppServicePlans_200_response_value_inner_properties::is_status_Set() const{
    return m_status_isSet;
}

bool OAIAppServiceEnvironments_ListAppServicePlans_200_response_value_inner_properties::is_status_Valid() const{
    return m_status_isValid;
}

QString OAIAppServiceEnvironments_ListAppServicePlans_200_response_value_inner_properties::getSubscription() const {
    return m_subscription;
}
void OAIAppServiceEnvironments_ListAppServicePlans_200_response_value_inner_properties::setSubscription(const QString &subscription) {
    m_subscription = subscription;
    m_subscription_isSet = true;
}

bool OAIAppServiceEnvironments_ListAppServicePlans_200_response_value_inner_properties::is_subscription_Set() const{
    return m_subscription_isSet;
}

bool OAIAppServiceEnvironments_ListAppServicePlans_200_response_value_inner_properties::is_subscription_Valid() const{
    return m_subscription_isValid;
}

qint32 OAIAppServiceEnvironments_ListAppServicePlans_200_response_value_inner_properties::getTargetWorkerCount() const {
    return m_target_worker_count;
}
void OAIAppServiceEnvironments_ListAppServicePlans_200_response_value_inner_properties::setTargetWorkerCount(const qint32 &target_worker_count) {
    m_target_worker_count = target_worker_count;
    m_target_worker_count_isSet = true;
}

bool OAIAppServiceEnvironments_ListAppServicePlans_200_response_value_inner_properties::is_target_worker_count_Set() const{
    return m_target_worker_count_isSet;
}

bool OAIAppServiceEnvironments_ListAppServicePlans_200_response_value_inner_properties::is_target_worker_count_Valid() const{
    return m_target_worker_count_isValid;
}

qint32 OAIAppServiceEnvironments_ListAppServicePlans_200_response_value_inner_properties::getTargetWorkerSizeId() const {
    return m_target_worker_size_id;
}
void OAIAppServiceEnvironments_ListAppServicePlans_200_response_value_inner_properties::setTargetWorkerSizeId(const qint32 &target_worker_size_id) {
    m_target_worker_size_id = target_worker_size_id;
    m_target_worker_size_id_isSet = true;
}

bool OAIAppServiceEnvironments_ListAppServicePlans_200_response_value_inner_properties::is_target_worker_size_id_Set() const{
    return m_target_worker_size_id_isSet;
}

bool OAIAppServiceEnvironments_ListAppServicePlans_200_response_value_inner_properties::is_target_worker_size_id_Valid() const{
    return m_target_worker_size_id_isValid;
}

QString OAIAppServiceEnvironments_ListAppServicePlans_200_response_value_inner_properties::getWorkerTierName() const {
    return m_worker_tier_name;
}
void OAIAppServiceEnvironments_ListAppServicePlans_200_response_value_inner_properties::setWorkerTierName(const QString &worker_tier_name) {
    m_worker_tier_name = worker_tier_name;
    m_worker_tier_name_isSet = true;
}

bool OAIAppServiceEnvironments_ListAppServicePlans_200_response_value_inner_properties::is_worker_tier_name_Set() const{
    return m_worker_tier_name_isSet;
}

bool OAIAppServiceEnvironments_ListAppServicePlans_200_response_value_inner_properties::is_worker_tier_name_Valid() const{
    return m_worker_tier_name_isValid;
}

bool OAIAppServiceEnvironments_ListAppServicePlans_200_response_value_inner_properties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_free_offer_expiration_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_geo_region_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_hosting_environment_profile.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_hyper_v_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_spot_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_xenon_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_maximum_elastic_worker_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_maximum_number_of_workers_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_number_of_sites_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_per_site_scaling_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_provisioning_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reserved_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_group_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_spot_expiration_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_subscription_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_target_worker_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_target_worker_size_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_worker_tier_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAppServiceEnvironments_ListAppServicePlans_200_response_value_inner_properties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
