# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class InboundEnvironmentEndpoint(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, endpoints: List[str]=None, ports: List[str]=None):
        """InboundEnvironmentEndpoint - a model defined in OpenAPI

        :param description: The description of this InboundEnvironmentEndpoint.
        :param endpoints: The endpoints of this InboundEnvironmentEndpoint.
        :param ports: The ports of this InboundEnvironmentEndpoint.
        """
        self.openapi_types = {
            'description': str,
            'endpoints': List[str],
            'ports': List[str]
        }

        self.attribute_map = {
            'description': 'description',
            'endpoints': 'endpoints',
            'ports': 'ports'
        }

        self._description = description
        self._endpoints = endpoints
        self._ports = ports

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InboundEnvironmentEndpoint':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InboundEnvironmentEndpoint of this InboundEnvironmentEndpoint.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this InboundEnvironmentEndpoint.

        Short text describing the purpose of the network traffic.

        :return: The description of this InboundEnvironmentEndpoint.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this InboundEnvironmentEndpoint.

        Short text describing the purpose of the network traffic.

        :param description: The description of this InboundEnvironmentEndpoint.
        :type description: str
        """

        self._description = description

    @property
    def endpoints(self):
        """Gets the endpoints of this InboundEnvironmentEndpoint.

        The IP addresses that network traffic will originate from in cidr notation.

        :return: The endpoints of this InboundEnvironmentEndpoint.
        :rtype: List[str]
        """
        return self._endpoints

    @endpoints.setter
    def endpoints(self, endpoints):
        """Sets the endpoints of this InboundEnvironmentEndpoint.

        The IP addresses that network traffic will originate from in cidr notation.

        :param endpoints: The endpoints of this InboundEnvironmentEndpoint.
        :type endpoints: List[str]
        """

        self._endpoints = endpoints

    @property
    def ports(self):
        """Gets the ports of this InboundEnvironmentEndpoint.

        The ports that network traffic will arrive to the App Service Environment at.

        :return: The ports of this InboundEnvironmentEndpoint.
        :rtype: List[str]
        """
        return self._ports

    @ports.setter
    def ports(self, ports):
        """Sets the ports of this InboundEnvironmentEndpoint.

        The ports that network traffic will arrive to the App Service Environment at.

        :param ports: The ports of this InboundEnvironmentEndpoint.
        :type ports: List[str]
        """

        self._ports = ports
