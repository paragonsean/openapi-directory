/*
 * AppServiceEnvironments API Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-02-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Body of the error response returned from the API.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:58:43.927946-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AppServiceEnvironmentsListOperations200ResponseInnerErrorsInner {
  public static final String SERIALIZED_NAME_CODE = "code";
  @SerializedName(SERIALIZED_NAME_CODE)
  private String code;

  public static final String SERIALIZED_NAME_EXTENDED_CODE = "extendedCode";
  @SerializedName(SERIALIZED_NAME_EXTENDED_CODE)
  private String extendedCode;

  public static final String SERIALIZED_NAME_INNER_ERRORS = "innerErrors";
  @SerializedName(SERIALIZED_NAME_INNER_ERRORS)
  private List<Object> innerErrors = new ArrayList<>();

  public static final String SERIALIZED_NAME_MESSAGE = "message";
  @SerializedName(SERIALIZED_NAME_MESSAGE)
  private String message;

  public static final String SERIALIZED_NAME_MESSAGE_TEMPLATE = "messageTemplate";
  @SerializedName(SERIALIZED_NAME_MESSAGE_TEMPLATE)
  private String messageTemplate;

  public static final String SERIALIZED_NAME_PARAMETERS = "parameters";
  @SerializedName(SERIALIZED_NAME_PARAMETERS)
  private List<String> parameters = new ArrayList<>();

  public AppServiceEnvironmentsListOperations200ResponseInnerErrorsInner() {
  }

  public AppServiceEnvironmentsListOperations200ResponseInnerErrorsInner code(String code) {
    this.code = code;
    return this;
  }

  /**
   * Basic error code.
   * @return code
   */
  @javax.annotation.Nullable
  public String getCode() {
    return code;
  }

  public void setCode(String code) {
    this.code = code;
  }


  public AppServiceEnvironmentsListOperations200ResponseInnerErrorsInner extendedCode(String extendedCode) {
    this.extendedCode = extendedCode;
    return this;
  }

  /**
   * Type of error.
   * @return extendedCode
   */
  @javax.annotation.Nullable
  public String getExtendedCode() {
    return extendedCode;
  }

  public void setExtendedCode(String extendedCode) {
    this.extendedCode = extendedCode;
  }


  public AppServiceEnvironmentsListOperations200ResponseInnerErrorsInner innerErrors(List<Object> innerErrors) {
    this.innerErrors = innerErrors;
    return this;
  }

  public AppServiceEnvironmentsListOperations200ResponseInnerErrorsInner addInnerErrorsItem(Object innerErrorsItem) {
    if (this.innerErrors == null) {
      this.innerErrors = new ArrayList<>();
    }
    this.innerErrors.add(innerErrorsItem);
    return this;
  }

  /**
   * Inner errors.
   * @return innerErrors
   */
  @javax.annotation.Nullable
  public List<Object> getInnerErrors() {
    return innerErrors;
  }

  public void setInnerErrors(List<Object> innerErrors) {
    this.innerErrors = innerErrors;
  }


  public AppServiceEnvironmentsListOperations200ResponseInnerErrorsInner message(String message) {
    this.message = message;
    return this;
  }

  /**
   * Any details of the error.
   * @return message
   */
  @javax.annotation.Nullable
  public String getMessage() {
    return message;
  }

  public void setMessage(String message) {
    this.message = message;
  }


  public AppServiceEnvironmentsListOperations200ResponseInnerErrorsInner messageTemplate(String messageTemplate) {
    this.messageTemplate = messageTemplate;
    return this;
  }

  /**
   * Message template.
   * @return messageTemplate
   */
  @javax.annotation.Nullable
  public String getMessageTemplate() {
    return messageTemplate;
  }

  public void setMessageTemplate(String messageTemplate) {
    this.messageTemplate = messageTemplate;
  }


  public AppServiceEnvironmentsListOperations200ResponseInnerErrorsInner parameters(List<String> parameters) {
    this.parameters = parameters;
    return this;
  }

  public AppServiceEnvironmentsListOperations200ResponseInnerErrorsInner addParametersItem(String parametersItem) {
    if (this.parameters == null) {
      this.parameters = new ArrayList<>();
    }
    this.parameters.add(parametersItem);
    return this;
  }

  /**
   * Parameters for the template.
   * @return parameters
   */
  @javax.annotation.Nullable
  public List<String> getParameters() {
    return parameters;
  }

  public void setParameters(List<String> parameters) {
    this.parameters = parameters;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AppServiceEnvironmentsListOperations200ResponseInnerErrorsInner appServiceEnvironmentsListOperations200ResponseInnerErrorsInner = (AppServiceEnvironmentsListOperations200ResponseInnerErrorsInner) o;
    return Objects.equals(this.code, appServiceEnvironmentsListOperations200ResponseInnerErrorsInner.code) &&
        Objects.equals(this.extendedCode, appServiceEnvironmentsListOperations200ResponseInnerErrorsInner.extendedCode) &&
        Objects.equals(this.innerErrors, appServiceEnvironmentsListOperations200ResponseInnerErrorsInner.innerErrors) &&
        Objects.equals(this.message, appServiceEnvironmentsListOperations200ResponseInnerErrorsInner.message) &&
        Objects.equals(this.messageTemplate, appServiceEnvironmentsListOperations200ResponseInnerErrorsInner.messageTemplate) &&
        Objects.equals(this.parameters, appServiceEnvironmentsListOperations200ResponseInnerErrorsInner.parameters);
  }

  @Override
  public int hashCode() {
    return Objects.hash(code, extendedCode, innerErrors, message, messageTemplate, parameters);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AppServiceEnvironmentsListOperations200ResponseInnerErrorsInner {\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    extendedCode: ").append(toIndentedString(extendedCode)).append("\n");
    sb.append("    innerErrors: ").append(toIndentedString(innerErrors)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    messageTemplate: ").append(toIndentedString(messageTemplate)).append("\n");
    sb.append("    parameters: ").append(toIndentedString(parameters)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("code");
    openapiFields.add("extendedCode");
    openapiFields.add("innerErrors");
    openapiFields.add("message");
    openapiFields.add("messageTemplate");
    openapiFields.add("parameters");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AppServiceEnvironmentsListOperations200ResponseInnerErrorsInner
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AppServiceEnvironmentsListOperations200ResponseInnerErrorsInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AppServiceEnvironmentsListOperations200ResponseInnerErrorsInner is not found in the empty JSON string", AppServiceEnvironmentsListOperations200ResponseInnerErrorsInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AppServiceEnvironmentsListOperations200ResponseInnerErrorsInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AppServiceEnvironmentsListOperations200ResponseInnerErrorsInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("code") != null && !jsonObj.get("code").isJsonNull()) && !jsonObj.get("code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("code").toString()));
      }
      if ((jsonObj.get("extendedCode") != null && !jsonObj.get("extendedCode").isJsonNull()) && !jsonObj.get("extendedCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `extendedCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("extendedCode").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("innerErrors") != null && !jsonObj.get("innerErrors").isJsonNull() && !jsonObj.get("innerErrors").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `innerErrors` to be an array in the JSON string but got `%s`", jsonObj.get("innerErrors").toString()));
      }
      if ((jsonObj.get("message") != null && !jsonObj.get("message").isJsonNull()) && !jsonObj.get("message").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `message` to be a primitive type in the JSON string but got `%s`", jsonObj.get("message").toString()));
      }
      if ((jsonObj.get("messageTemplate") != null && !jsonObj.get("messageTemplate").isJsonNull()) && !jsonObj.get("messageTemplate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `messageTemplate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("messageTemplate").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("parameters") != null && !jsonObj.get("parameters").isJsonNull() && !jsonObj.get("parameters").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `parameters` to be an array in the JSON string but got `%s`", jsonObj.get("parameters").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AppServiceEnvironmentsListOperations200ResponseInnerErrorsInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AppServiceEnvironmentsListOperations200ResponseInnerErrorsInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AppServiceEnvironmentsListOperations200ResponseInnerErrorsInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AppServiceEnvironmentsListOperations200ResponseInnerErrorsInner.class));

       return (TypeAdapter<T>) new TypeAdapter<AppServiceEnvironmentsListOperations200ResponseInnerErrorsInner>() {
           @Override
           public void write(JsonWriter out, AppServiceEnvironmentsListOperations200ResponseInnerErrorsInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AppServiceEnvironmentsListOperations200ResponseInnerErrorsInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AppServiceEnvironmentsListOperations200ResponseInnerErrorsInner given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AppServiceEnvironmentsListOperations200ResponseInnerErrorsInner
   * @throws IOException if the JSON string is invalid with respect to AppServiceEnvironmentsListOperations200ResponseInnerErrorsInner
   */
  public static AppServiceEnvironmentsListOperations200ResponseInnerErrorsInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AppServiceEnvironmentsListOperations200ResponseInnerErrorsInner.class);
  }

  /**
   * Convert an instance of AppServiceEnvironmentsListOperations200ResponseInnerErrorsInner to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

