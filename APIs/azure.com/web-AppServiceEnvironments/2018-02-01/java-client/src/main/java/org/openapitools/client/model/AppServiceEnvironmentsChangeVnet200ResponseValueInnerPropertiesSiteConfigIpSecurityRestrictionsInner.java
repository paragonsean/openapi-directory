/*
 * AppServiceEnvironments API Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-02-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * IP security restriction on an app.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:58:43.927946-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesSiteConfigIpSecurityRestrictionsInner {
  public static final String SERIALIZED_NAME_ACTION = "action";
  @SerializedName(SERIALIZED_NAME_ACTION)
  private String action;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_IP_ADDRESS = "ipAddress";
  @SerializedName(SERIALIZED_NAME_IP_ADDRESS)
  private String ipAddress;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PRIORITY = "priority";
  @SerializedName(SERIALIZED_NAME_PRIORITY)
  private Integer priority;

  public static final String SERIALIZED_NAME_SUBNET_MASK = "subnetMask";
  @SerializedName(SERIALIZED_NAME_SUBNET_MASK)
  private String subnetMask;

  public static final String SERIALIZED_NAME_SUBNET_TRAFFIC_TAG = "subnetTrafficTag";
  @SerializedName(SERIALIZED_NAME_SUBNET_TRAFFIC_TAG)
  private Integer subnetTrafficTag;

  /**
   * Defines what this IP filter will be used for. This is to support IP filtering on proxies.
   */
  @JsonAdapter(TagEnum.Adapter.class)
  public enum TagEnum {
    DEFAULT("Default"),
    
    XFF_PROXY("XffProxy");

    private String value;

    TagEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TagEnum fromValue(String value) {
      for (TagEnum b : TagEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TagEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TagEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TagEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TagEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      TagEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_TAG = "tag";
  @SerializedName(SERIALIZED_NAME_TAG)
  private TagEnum tag;

  public static final String SERIALIZED_NAME_VNET_SUBNET_RESOURCE_ID = "vnetSubnetResourceId";
  @SerializedName(SERIALIZED_NAME_VNET_SUBNET_RESOURCE_ID)
  private String vnetSubnetResourceId;

  public static final String SERIALIZED_NAME_VNET_TRAFFIC_TAG = "vnetTrafficTag";
  @SerializedName(SERIALIZED_NAME_VNET_TRAFFIC_TAG)
  private Integer vnetTrafficTag;

  public AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesSiteConfigIpSecurityRestrictionsInner() {
  }

  public AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesSiteConfigIpSecurityRestrictionsInner action(String action) {
    this.action = action;
    return this;
  }

  /**
   * Allow or Deny access for this IP range.
   * @return action
   */
  @javax.annotation.Nullable
  public String getAction() {
    return action;
  }

  public void setAction(String action) {
    this.action = action;
  }


  public AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesSiteConfigIpSecurityRestrictionsInner description(String description) {
    this.description = description;
    return this;
  }

  /**
   * IP restriction rule description.
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesSiteConfigIpSecurityRestrictionsInner ipAddress(String ipAddress) {
    this.ipAddress = ipAddress;
    return this;
  }

  /**
   * IP address the security restriction is valid for. It can be in form of pure ipv4 address (required SubnetMask property) or CIDR notation such as ipv4/mask (leading bit match). For CIDR, SubnetMask property must not be specified.
   * @return ipAddress
   */
  @javax.annotation.Nullable
  public String getIpAddress() {
    return ipAddress;
  }

  public void setIpAddress(String ipAddress) {
    this.ipAddress = ipAddress;
  }


  public AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesSiteConfigIpSecurityRestrictionsInner name(String name) {
    this.name = name;
    return this;
  }

  /**
   * IP restriction rule name.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesSiteConfigIpSecurityRestrictionsInner priority(Integer priority) {
    this.priority = priority;
    return this;
  }

  /**
   * Priority of IP restriction rule.
   * @return priority
   */
  @javax.annotation.Nullable
  public Integer getPriority() {
    return priority;
  }

  public void setPriority(Integer priority) {
    this.priority = priority;
  }


  public AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesSiteConfigIpSecurityRestrictionsInner subnetMask(String subnetMask) {
    this.subnetMask = subnetMask;
    return this;
  }

  /**
   * Subnet mask for the range of IP addresses the restriction is valid for.
   * @return subnetMask
   */
  @javax.annotation.Nullable
  public String getSubnetMask() {
    return subnetMask;
  }

  public void setSubnetMask(String subnetMask) {
    this.subnetMask = subnetMask;
  }


  public AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesSiteConfigIpSecurityRestrictionsInner subnetTrafficTag(Integer subnetTrafficTag) {
    this.subnetTrafficTag = subnetTrafficTag;
    return this;
  }

  /**
   * (internal) Subnet traffic tag
   * @return subnetTrafficTag
   */
  @javax.annotation.Nullable
  public Integer getSubnetTrafficTag() {
    return subnetTrafficTag;
  }

  public void setSubnetTrafficTag(Integer subnetTrafficTag) {
    this.subnetTrafficTag = subnetTrafficTag;
  }


  public AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesSiteConfigIpSecurityRestrictionsInner tag(TagEnum tag) {
    this.tag = tag;
    return this;
  }

  /**
   * Defines what this IP filter will be used for. This is to support IP filtering on proxies.
   * @return tag
   */
  @javax.annotation.Nullable
  public TagEnum getTag() {
    return tag;
  }

  public void setTag(TagEnum tag) {
    this.tag = tag;
  }


  public AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesSiteConfigIpSecurityRestrictionsInner vnetSubnetResourceId(String vnetSubnetResourceId) {
    this.vnetSubnetResourceId = vnetSubnetResourceId;
    return this;
  }

  /**
   * Virtual network resource id
   * @return vnetSubnetResourceId
   */
  @javax.annotation.Nullable
  public String getVnetSubnetResourceId() {
    return vnetSubnetResourceId;
  }

  public void setVnetSubnetResourceId(String vnetSubnetResourceId) {
    this.vnetSubnetResourceId = vnetSubnetResourceId;
  }


  public AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesSiteConfigIpSecurityRestrictionsInner vnetTrafficTag(Integer vnetTrafficTag) {
    this.vnetTrafficTag = vnetTrafficTag;
    return this;
  }

  /**
   * (internal) Vnet traffic tag
   * @return vnetTrafficTag
   */
  @javax.annotation.Nullable
  public Integer getVnetTrafficTag() {
    return vnetTrafficTag;
  }

  public void setVnetTrafficTag(Integer vnetTrafficTag) {
    this.vnetTrafficTag = vnetTrafficTag;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesSiteConfigIpSecurityRestrictionsInner appServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesSiteConfigIpSecurityRestrictionsInner = (AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesSiteConfigIpSecurityRestrictionsInner) o;
    return Objects.equals(this.action, appServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesSiteConfigIpSecurityRestrictionsInner.action) &&
        Objects.equals(this.description, appServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesSiteConfigIpSecurityRestrictionsInner.description) &&
        Objects.equals(this.ipAddress, appServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesSiteConfigIpSecurityRestrictionsInner.ipAddress) &&
        Objects.equals(this.name, appServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesSiteConfigIpSecurityRestrictionsInner.name) &&
        Objects.equals(this.priority, appServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesSiteConfigIpSecurityRestrictionsInner.priority) &&
        Objects.equals(this.subnetMask, appServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesSiteConfigIpSecurityRestrictionsInner.subnetMask) &&
        Objects.equals(this.subnetTrafficTag, appServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesSiteConfigIpSecurityRestrictionsInner.subnetTrafficTag) &&
        Objects.equals(this.tag, appServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesSiteConfigIpSecurityRestrictionsInner.tag) &&
        Objects.equals(this.vnetSubnetResourceId, appServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesSiteConfigIpSecurityRestrictionsInner.vnetSubnetResourceId) &&
        Objects.equals(this.vnetTrafficTag, appServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesSiteConfigIpSecurityRestrictionsInner.vnetTrafficTag);
  }

  @Override
  public int hashCode() {
    return Objects.hash(action, description, ipAddress, name, priority, subnetMask, subnetTrafficTag, tag, vnetSubnetResourceId, vnetTrafficTag);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesSiteConfigIpSecurityRestrictionsInner {\n");
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    ipAddress: ").append(toIndentedString(ipAddress)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("    subnetMask: ").append(toIndentedString(subnetMask)).append("\n");
    sb.append("    subnetTrafficTag: ").append(toIndentedString(subnetTrafficTag)).append("\n");
    sb.append("    tag: ").append(toIndentedString(tag)).append("\n");
    sb.append("    vnetSubnetResourceId: ").append(toIndentedString(vnetSubnetResourceId)).append("\n");
    sb.append("    vnetTrafficTag: ").append(toIndentedString(vnetTrafficTag)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("action");
    openapiFields.add("description");
    openapiFields.add("ipAddress");
    openapiFields.add("name");
    openapiFields.add("priority");
    openapiFields.add("subnetMask");
    openapiFields.add("subnetTrafficTag");
    openapiFields.add("tag");
    openapiFields.add("vnetSubnetResourceId");
    openapiFields.add("vnetTrafficTag");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesSiteConfigIpSecurityRestrictionsInner
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesSiteConfigIpSecurityRestrictionsInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesSiteConfigIpSecurityRestrictionsInner is not found in the empty JSON string", AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesSiteConfigIpSecurityRestrictionsInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesSiteConfigIpSecurityRestrictionsInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesSiteConfigIpSecurityRestrictionsInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("action") != null && !jsonObj.get("action").isJsonNull()) && !jsonObj.get("action").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `action` to be a primitive type in the JSON string but got `%s`", jsonObj.get("action").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("ipAddress") != null && !jsonObj.get("ipAddress").isJsonNull()) && !jsonObj.get("ipAddress").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ipAddress` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ipAddress").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("subnetMask") != null && !jsonObj.get("subnetMask").isJsonNull()) && !jsonObj.get("subnetMask").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `subnetMask` to be a primitive type in the JSON string but got `%s`", jsonObj.get("subnetMask").toString()));
      }
      if ((jsonObj.get("tag") != null && !jsonObj.get("tag").isJsonNull()) && !jsonObj.get("tag").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tag` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tag").toString()));
      }
      // validate the optional field `tag`
      if (jsonObj.get("tag") != null && !jsonObj.get("tag").isJsonNull()) {
        TagEnum.validateJsonElement(jsonObj.get("tag"));
      }
      if ((jsonObj.get("vnetSubnetResourceId") != null && !jsonObj.get("vnetSubnetResourceId").isJsonNull()) && !jsonObj.get("vnetSubnetResourceId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `vnetSubnetResourceId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("vnetSubnetResourceId").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesSiteConfigIpSecurityRestrictionsInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesSiteConfigIpSecurityRestrictionsInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesSiteConfigIpSecurityRestrictionsInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesSiteConfigIpSecurityRestrictionsInner.class));

       return (TypeAdapter<T>) new TypeAdapter<AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesSiteConfigIpSecurityRestrictionsInner>() {
           @Override
           public void write(JsonWriter out, AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesSiteConfigIpSecurityRestrictionsInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesSiteConfigIpSecurityRestrictionsInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesSiteConfigIpSecurityRestrictionsInner given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesSiteConfigIpSecurityRestrictionsInner
   * @throws IOException if the JSON string is invalid with respect to AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesSiteConfigIpSecurityRestrictionsInner
   */
  public static AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesSiteConfigIpSecurityRestrictionsInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesSiteConfigIpSecurityRestrictionsInner.class);
  }

  /**
   * Convert an instance of AppServiceEnvironmentsChangeVnet200ResponseValueInnerPropertiesSiteConfigIpSecurityRestrictionsInner to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

