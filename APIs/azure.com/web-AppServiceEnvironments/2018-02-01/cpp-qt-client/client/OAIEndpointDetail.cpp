/**
 * AppServiceEnvironments API Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-02-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEndpointDetail.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEndpointDetail::OAIEndpointDetail(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEndpointDetail::OAIEndpointDetail() {
    this->initializeModel();
}

OAIEndpointDetail::~OAIEndpointDetail() {}

void OAIEndpointDetail::initializeModel() {

    m_ip_address_isSet = false;
    m_ip_address_isValid = false;

    m_is_accessable_isSet = false;
    m_is_accessable_isValid = false;

    m_latency_isSet = false;
    m_latency_isValid = false;

    m_port_isSet = false;
    m_port_isValid = false;
}

void OAIEndpointDetail::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEndpointDetail::fromJsonObject(QJsonObject json) {

    m_ip_address_isValid = ::OpenAPI::fromJsonValue(m_ip_address, json[QString("ipAddress")]);
    m_ip_address_isSet = !json[QString("ipAddress")].isNull() && m_ip_address_isValid;

    m_is_accessable_isValid = ::OpenAPI::fromJsonValue(m_is_accessable, json[QString("isAccessable")]);
    m_is_accessable_isSet = !json[QString("isAccessable")].isNull() && m_is_accessable_isValid;

    m_latency_isValid = ::OpenAPI::fromJsonValue(m_latency, json[QString("latency")]);
    m_latency_isSet = !json[QString("latency")].isNull() && m_latency_isValid;

    m_port_isValid = ::OpenAPI::fromJsonValue(m_port, json[QString("port")]);
    m_port_isSet = !json[QString("port")].isNull() && m_port_isValid;
}

QString OAIEndpointDetail::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEndpointDetail::asJsonObject() const {
    QJsonObject obj;
    if (m_ip_address_isSet) {
        obj.insert(QString("ipAddress"), ::OpenAPI::toJsonValue(m_ip_address));
    }
    if (m_is_accessable_isSet) {
        obj.insert(QString("isAccessable"), ::OpenAPI::toJsonValue(m_is_accessable));
    }
    if (m_latency_isSet) {
        obj.insert(QString("latency"), ::OpenAPI::toJsonValue(m_latency));
    }
    if (m_port_isSet) {
        obj.insert(QString("port"), ::OpenAPI::toJsonValue(m_port));
    }
    return obj;
}

QString OAIEndpointDetail::getIpAddress() const {
    return m_ip_address;
}
void OAIEndpointDetail::setIpAddress(const QString &ip_address) {
    m_ip_address = ip_address;
    m_ip_address_isSet = true;
}

bool OAIEndpointDetail::is_ip_address_Set() const{
    return m_ip_address_isSet;
}

bool OAIEndpointDetail::is_ip_address_Valid() const{
    return m_ip_address_isValid;
}

bool OAIEndpointDetail::isIsAccessable() const {
    return m_is_accessable;
}
void OAIEndpointDetail::setIsAccessable(const bool &is_accessable) {
    m_is_accessable = is_accessable;
    m_is_accessable_isSet = true;
}

bool OAIEndpointDetail::is_is_accessable_Set() const{
    return m_is_accessable_isSet;
}

bool OAIEndpointDetail::is_is_accessable_Valid() const{
    return m_is_accessable_isValid;
}

double OAIEndpointDetail::getLatency() const {
    return m_latency;
}
void OAIEndpointDetail::setLatency(const double &latency) {
    m_latency = latency;
    m_latency_isSet = true;
}

bool OAIEndpointDetail::is_latency_Set() const{
    return m_latency_isSet;
}

bool OAIEndpointDetail::is_latency_Valid() const{
    return m_latency_isValid;
}

qint32 OAIEndpointDetail::getPort() const {
    return m_port;
}
void OAIEndpointDetail::setPort(const qint32 &port) {
    m_port = port;
    m_port_isSet = true;
}

bool OAIEndpointDetail::is_port_Set() const{
    return m_port_isSet;
}

bool OAIEndpointDetail::is_port_Valid() const{
    return m_port_isValid;
}

bool OAIEndpointDetail::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_ip_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_accessable_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_latency_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_port_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEndpointDetail::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
