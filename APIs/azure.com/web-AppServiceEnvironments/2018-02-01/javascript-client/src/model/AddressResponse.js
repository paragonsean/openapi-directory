/**
 * AppServiceEnvironments API Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-02-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AddressResponseVipMappingsInner from './AddressResponseVipMappingsInner';

/**
 * The AddressResponse model module.
 * @module model/AddressResponse
 * @version 2018-02-01
 */
class AddressResponse {
    /**
     * Constructs a new <code>AddressResponse</code>.
     * Describes main public IP address and any extra virtual IPs.
     * @alias module:model/AddressResponse
     */
    constructor() { 
        
        AddressResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AddressResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AddressResponse} obj Optional instance to populate.
     * @return {module:model/AddressResponse} The populated <code>AddressResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AddressResponse();

            if (data.hasOwnProperty('internalIpAddress')) {
                obj['internalIpAddress'] = ApiClient.convertToType(data['internalIpAddress'], 'String');
            }
            if (data.hasOwnProperty('outboundIpAddresses')) {
                obj['outboundIpAddresses'] = ApiClient.convertToType(data['outboundIpAddresses'], ['String']);
            }
            if (data.hasOwnProperty('serviceIpAddress')) {
                obj['serviceIpAddress'] = ApiClient.convertToType(data['serviceIpAddress'], 'String');
            }
            if (data.hasOwnProperty('vipMappings')) {
                obj['vipMappings'] = ApiClient.convertToType(data['vipMappings'], [AddressResponseVipMappingsInner]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AddressResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AddressResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['internalIpAddress'] && !(typeof data['internalIpAddress'] === 'string' || data['internalIpAddress'] instanceof String)) {
            throw new Error("Expected the field `internalIpAddress` to be a primitive type in the JSON string but got " + data['internalIpAddress']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['outboundIpAddresses'])) {
            throw new Error("Expected the field `outboundIpAddresses` to be an array in the JSON data but got " + data['outboundIpAddresses']);
        }
        // ensure the json data is a string
        if (data['serviceIpAddress'] && !(typeof data['serviceIpAddress'] === 'string' || data['serviceIpAddress'] instanceof String)) {
            throw new Error("Expected the field `serviceIpAddress` to be a primitive type in the JSON string but got " + data['serviceIpAddress']);
        }
        if (data['vipMappings']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['vipMappings'])) {
                throw new Error("Expected the field `vipMappings` to be an array in the JSON data but got " + data['vipMappings']);
            }
            // validate the optional field `vipMappings` (array)
            for (const item of data['vipMappings']) {
                AddressResponseVipMappingsInner.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Virtual Network internal IP address of the App Service Environment if it is in internal load-balancing mode.
 * @member {String} internalIpAddress
 */
AddressResponse.prototype['internalIpAddress'] = undefined;

/**
 * IP addresses appearing on outbound connections.
 * @member {Array.<String>} outboundIpAddresses
 */
AddressResponse.prototype['outboundIpAddresses'] = undefined;

/**
 * Main public virtual IP.
 * @member {String} serviceIpAddress
 */
AddressResponse.prototype['serviceIpAddress'] = undefined;

/**
 * Additional virtual IPs.
 * @member {Array.<module:model/AddressResponseVipMappingsInner>} vipMappings
 */
AddressResponse.prototype['vipMappings'] = undefined;






export default AddressResponse;

