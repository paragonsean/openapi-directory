# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.address_response_vip_mappings_inner import AddressResponseVipMappingsInner
from openapi_server import util


class AddressResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, internal_ip_address: str=None, outbound_ip_addresses: List[str]=None, service_ip_address: str=None, vip_mappings: List[AddressResponseVipMappingsInner]=None):
        """AddressResponse - a model defined in OpenAPI

        :param internal_ip_address: The internal_ip_address of this AddressResponse.
        :param outbound_ip_addresses: The outbound_ip_addresses of this AddressResponse.
        :param service_ip_address: The service_ip_address of this AddressResponse.
        :param vip_mappings: The vip_mappings of this AddressResponse.
        """
        self.openapi_types = {
            'internal_ip_address': str,
            'outbound_ip_addresses': List[str],
            'service_ip_address': str,
            'vip_mappings': List[AddressResponseVipMappingsInner]
        }

        self.attribute_map = {
            'internal_ip_address': 'internalIpAddress',
            'outbound_ip_addresses': 'outboundIpAddresses',
            'service_ip_address': 'serviceIpAddress',
            'vip_mappings': 'vipMappings'
        }

        self._internal_ip_address = internal_ip_address
        self._outbound_ip_addresses = outbound_ip_addresses
        self._service_ip_address = service_ip_address
        self._vip_mappings = vip_mappings

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AddressResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AddressResponse of this AddressResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def internal_ip_address(self):
        """Gets the internal_ip_address of this AddressResponse.

        Virtual Network internal IP address of the App Service Environment if it is in internal load-balancing mode.

        :return: The internal_ip_address of this AddressResponse.
        :rtype: str
        """
        return self._internal_ip_address

    @internal_ip_address.setter
    def internal_ip_address(self, internal_ip_address):
        """Sets the internal_ip_address of this AddressResponse.

        Virtual Network internal IP address of the App Service Environment if it is in internal load-balancing mode.

        :param internal_ip_address: The internal_ip_address of this AddressResponse.
        :type internal_ip_address: str
        """

        self._internal_ip_address = internal_ip_address

    @property
    def outbound_ip_addresses(self):
        """Gets the outbound_ip_addresses of this AddressResponse.

        IP addresses appearing on outbound connections.

        :return: The outbound_ip_addresses of this AddressResponse.
        :rtype: List[str]
        """
        return self._outbound_ip_addresses

    @outbound_ip_addresses.setter
    def outbound_ip_addresses(self, outbound_ip_addresses):
        """Sets the outbound_ip_addresses of this AddressResponse.

        IP addresses appearing on outbound connections.

        :param outbound_ip_addresses: The outbound_ip_addresses of this AddressResponse.
        :type outbound_ip_addresses: List[str]
        """

        self._outbound_ip_addresses = outbound_ip_addresses

    @property
    def service_ip_address(self):
        """Gets the service_ip_address of this AddressResponse.

        Main public virtual IP.

        :return: The service_ip_address of this AddressResponse.
        :rtype: str
        """
        return self._service_ip_address

    @service_ip_address.setter
    def service_ip_address(self, service_ip_address):
        """Sets the service_ip_address of this AddressResponse.

        Main public virtual IP.

        :param service_ip_address: The service_ip_address of this AddressResponse.
        :type service_ip_address: str
        """

        self._service_ip_address = service_ip_address

    @property
    def vip_mappings(self):
        """Gets the vip_mappings of this AddressResponse.

        Additional virtual IPs.

        :return: The vip_mappings of this AddressResponse.
        :rtype: List[AddressResponseVipMappingsInner]
        """
        return self._vip_mappings

    @vip_mappings.setter
    def vip_mappings(self, vip_mappings):
        """Sets the vip_mappings of this AddressResponse.

        Additional virtual IPs.

        :param vip_mappings: The vip_mappings of this AddressResponse.
        :type vip_mappings: List[AddressResponseVipMappingsInner]
        """

        self._vip_mappings = vip_mappings
