# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.app_service_environments_resume200_response_value_inner_properties_snapshot_info_properties_recovery_target import AppServiceEnvironmentsResume200ResponseValueInnerPropertiesSnapshotInfoPropertiesRecoveryTarget
from openapi_server import util


class AppServiceEnvironmentsResume200ResponseValueInnerPropertiesSnapshotInfoProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ignore_conflicting_host_names: bool=None, overwrite: bool=None, recover_configuration: bool=None, recovery_target: AppServiceEnvironmentsResume200ResponseValueInnerPropertiesSnapshotInfoPropertiesRecoveryTarget=None, snapshot_time: str=None):
        """AppServiceEnvironmentsResume200ResponseValueInnerPropertiesSnapshotInfoProperties - a model defined in OpenAPI

        :param ignore_conflicting_host_names: The ignore_conflicting_host_names of this AppServiceEnvironmentsResume200ResponseValueInnerPropertiesSnapshotInfoProperties.
        :param overwrite: The overwrite of this AppServiceEnvironmentsResume200ResponseValueInnerPropertiesSnapshotInfoProperties.
        :param recover_configuration: The recover_configuration of this AppServiceEnvironmentsResume200ResponseValueInnerPropertiesSnapshotInfoProperties.
        :param recovery_target: The recovery_target of this AppServiceEnvironmentsResume200ResponseValueInnerPropertiesSnapshotInfoProperties.
        :param snapshot_time: The snapshot_time of this AppServiceEnvironmentsResume200ResponseValueInnerPropertiesSnapshotInfoProperties.
        """
        self.openapi_types = {
            'ignore_conflicting_host_names': bool,
            'overwrite': bool,
            'recover_configuration': bool,
            'recovery_target': AppServiceEnvironmentsResume200ResponseValueInnerPropertiesSnapshotInfoPropertiesRecoveryTarget,
            'snapshot_time': str
        }

        self.attribute_map = {
            'ignore_conflicting_host_names': 'ignoreConflictingHostNames',
            'overwrite': 'overwrite',
            'recover_configuration': 'recoverConfiguration',
            'recovery_target': 'recoveryTarget',
            'snapshot_time': 'snapshotTime'
        }

        self._ignore_conflicting_host_names = ignore_conflicting_host_names
        self._overwrite = overwrite
        self._recover_configuration = recover_configuration
        self._recovery_target = recovery_target
        self._snapshot_time = snapshot_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AppServiceEnvironmentsResume200ResponseValueInnerPropertiesSnapshotInfoProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AppServiceEnvironments_Resume_200_response_value_inner_properties_snapshotInfo_properties of this AppServiceEnvironmentsResume200ResponseValueInnerPropertiesSnapshotInfoProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ignore_conflicting_host_names(self):
        """Gets the ignore_conflicting_host_names of this AppServiceEnvironmentsResume200ResponseValueInnerPropertiesSnapshotInfoProperties.

        If true, custom hostname conflicts will be ignored when recovering to a target web app. This setting is only necessary when RecoverConfiguration is enabled.

        :return: The ignore_conflicting_host_names of this AppServiceEnvironmentsResume200ResponseValueInnerPropertiesSnapshotInfoProperties.
        :rtype: bool
        """
        return self._ignore_conflicting_host_names

    @ignore_conflicting_host_names.setter
    def ignore_conflicting_host_names(self, ignore_conflicting_host_names):
        """Sets the ignore_conflicting_host_names of this AppServiceEnvironmentsResume200ResponseValueInnerPropertiesSnapshotInfoProperties.

        If true, custom hostname conflicts will be ignored when recovering to a target web app. This setting is only necessary when RecoverConfiguration is enabled.

        :param ignore_conflicting_host_names: The ignore_conflicting_host_names of this AppServiceEnvironmentsResume200ResponseValueInnerPropertiesSnapshotInfoProperties.
        :type ignore_conflicting_host_names: bool
        """

        self._ignore_conflicting_host_names = ignore_conflicting_host_names

    @property
    def overwrite(self):
        """Gets the overwrite of this AppServiceEnvironmentsResume200ResponseValueInnerPropertiesSnapshotInfoProperties.

        If <code>true</code> the recovery operation can overwrite source app; otherwise, <code>false</code>.

        :return: The overwrite of this AppServiceEnvironmentsResume200ResponseValueInnerPropertiesSnapshotInfoProperties.
        :rtype: bool
        """
        return self._overwrite

    @overwrite.setter
    def overwrite(self, overwrite):
        """Sets the overwrite of this AppServiceEnvironmentsResume200ResponseValueInnerPropertiesSnapshotInfoProperties.

        If <code>true</code> the recovery operation can overwrite source app; otherwise, <code>false</code>.

        :param overwrite: The overwrite of this AppServiceEnvironmentsResume200ResponseValueInnerPropertiesSnapshotInfoProperties.
        :type overwrite: bool
        """
        if overwrite is None:
            raise ValueError("Invalid value for `overwrite`, must not be `None`")

        self._overwrite = overwrite

    @property
    def recover_configuration(self):
        """Gets the recover_configuration of this AppServiceEnvironmentsResume200ResponseValueInnerPropertiesSnapshotInfoProperties.

        If true, site configuration, in addition to content, will be reverted.

        :return: The recover_configuration of this AppServiceEnvironmentsResume200ResponseValueInnerPropertiesSnapshotInfoProperties.
        :rtype: bool
        """
        return self._recover_configuration

    @recover_configuration.setter
    def recover_configuration(self, recover_configuration):
        """Sets the recover_configuration of this AppServiceEnvironmentsResume200ResponseValueInnerPropertiesSnapshotInfoProperties.

        If true, site configuration, in addition to content, will be reverted.

        :param recover_configuration: The recover_configuration of this AppServiceEnvironmentsResume200ResponseValueInnerPropertiesSnapshotInfoProperties.
        :type recover_configuration: bool
        """

        self._recover_configuration = recover_configuration

    @property
    def recovery_target(self):
        """Gets the recovery_target of this AppServiceEnvironmentsResume200ResponseValueInnerPropertiesSnapshotInfoProperties.


        :return: The recovery_target of this AppServiceEnvironmentsResume200ResponseValueInnerPropertiesSnapshotInfoProperties.
        :rtype: AppServiceEnvironmentsResume200ResponseValueInnerPropertiesSnapshotInfoPropertiesRecoveryTarget
        """
        return self._recovery_target

    @recovery_target.setter
    def recovery_target(self, recovery_target):
        """Sets the recovery_target of this AppServiceEnvironmentsResume200ResponseValueInnerPropertiesSnapshotInfoProperties.


        :param recovery_target: The recovery_target of this AppServiceEnvironmentsResume200ResponseValueInnerPropertiesSnapshotInfoProperties.
        :type recovery_target: AppServiceEnvironmentsResume200ResponseValueInnerPropertiesSnapshotInfoPropertiesRecoveryTarget
        """

        self._recovery_target = recovery_target

    @property
    def snapshot_time(self):
        """Gets the snapshot_time of this AppServiceEnvironmentsResume200ResponseValueInnerPropertiesSnapshotInfoProperties.

        Point in time in which the app recovery should be attempted, formatted as a DateTime string.

        :return: The snapshot_time of this AppServiceEnvironmentsResume200ResponseValueInnerPropertiesSnapshotInfoProperties.
        :rtype: str
        """
        return self._snapshot_time

    @snapshot_time.setter
    def snapshot_time(self, snapshot_time):
        """Sets the snapshot_time of this AppServiceEnvironmentsResume200ResponseValueInnerPropertiesSnapshotInfoProperties.

        Point in time in which the app recovery should be attempted, formatted as a DateTime string.

        :param snapshot_time: The snapshot_time of this AppServiceEnvironmentsResume200ResponseValueInnerPropertiesSnapshotInfoProperties.
        :type snapshot_time: str
        """

        self._snapshot_time = snapshot_time
