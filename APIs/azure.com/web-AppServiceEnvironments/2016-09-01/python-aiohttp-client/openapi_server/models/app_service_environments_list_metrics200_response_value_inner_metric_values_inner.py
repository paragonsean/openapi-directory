# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.app_service_environments_list_metrics200_response_value_inner_metric_values_inner_properties_inner import AppServiceEnvironmentsListMetrics200ResponseValueInnerMetricValuesInnerPropertiesInner
from openapi_server import util


class AppServiceEnvironmentsListMetrics200ResponseValueInnerMetricValuesInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, average: float=None, count: float=None, maximum: float=None, minimum: float=None, properties: List[AppServiceEnvironmentsListMetrics200ResponseValueInnerMetricValuesInnerPropertiesInner]=None, timestamp: str=None, total: float=None):
        """AppServiceEnvironmentsListMetrics200ResponseValueInnerMetricValuesInner - a model defined in OpenAPI

        :param average: The average of this AppServiceEnvironmentsListMetrics200ResponseValueInnerMetricValuesInner.
        :param count: The count of this AppServiceEnvironmentsListMetrics200ResponseValueInnerMetricValuesInner.
        :param maximum: The maximum of this AppServiceEnvironmentsListMetrics200ResponseValueInnerMetricValuesInner.
        :param minimum: The minimum of this AppServiceEnvironmentsListMetrics200ResponseValueInnerMetricValuesInner.
        :param properties: The properties of this AppServiceEnvironmentsListMetrics200ResponseValueInnerMetricValuesInner.
        :param timestamp: The timestamp of this AppServiceEnvironmentsListMetrics200ResponseValueInnerMetricValuesInner.
        :param total: The total of this AppServiceEnvironmentsListMetrics200ResponseValueInnerMetricValuesInner.
        """
        self.openapi_types = {
            'average': float,
            'count': float,
            'maximum': float,
            'minimum': float,
            'properties': List[AppServiceEnvironmentsListMetrics200ResponseValueInnerMetricValuesInnerPropertiesInner],
            'timestamp': str,
            'total': float
        }

        self.attribute_map = {
            'average': 'average',
            'count': 'count',
            'maximum': 'maximum',
            'minimum': 'minimum',
            'properties': 'properties',
            'timestamp': 'timestamp',
            'total': 'total'
        }

        self._average = average
        self._count = count
        self._maximum = maximum
        self._minimum = minimum
        self._properties = properties
        self._timestamp = timestamp
        self._total = total

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AppServiceEnvironmentsListMetrics200ResponseValueInnerMetricValuesInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AppServiceEnvironments_ListMetrics_200_response_value_inner_metricValues_inner of this AppServiceEnvironmentsListMetrics200ResponseValueInnerMetricValuesInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def average(self):
        """Gets the average of this AppServiceEnvironmentsListMetrics200ResponseValueInnerMetricValuesInner.

        Value average.

        :return: The average of this AppServiceEnvironmentsListMetrics200ResponseValueInnerMetricValuesInner.
        :rtype: float
        """
        return self._average

    @average.setter
    def average(self, average):
        """Sets the average of this AppServiceEnvironmentsListMetrics200ResponseValueInnerMetricValuesInner.

        Value average.

        :param average: The average of this AppServiceEnvironmentsListMetrics200ResponseValueInnerMetricValuesInner.
        :type average: float
        """

        self._average = average

    @property
    def count(self):
        """Gets the count of this AppServiceEnvironmentsListMetrics200ResponseValueInnerMetricValuesInner.

        Value count.

        :return: The count of this AppServiceEnvironmentsListMetrics200ResponseValueInnerMetricValuesInner.
        :rtype: float
        """
        return self._count

    @count.setter
    def count(self, count):
        """Sets the count of this AppServiceEnvironmentsListMetrics200ResponseValueInnerMetricValuesInner.

        Value count.

        :param count: The count of this AppServiceEnvironmentsListMetrics200ResponseValueInnerMetricValuesInner.
        :type count: float
        """

        self._count = count

    @property
    def maximum(self):
        """Gets the maximum of this AppServiceEnvironmentsListMetrics200ResponseValueInnerMetricValuesInner.

        Value maximum.

        :return: The maximum of this AppServiceEnvironmentsListMetrics200ResponseValueInnerMetricValuesInner.
        :rtype: float
        """
        return self._maximum

    @maximum.setter
    def maximum(self, maximum):
        """Sets the maximum of this AppServiceEnvironmentsListMetrics200ResponseValueInnerMetricValuesInner.

        Value maximum.

        :param maximum: The maximum of this AppServiceEnvironmentsListMetrics200ResponseValueInnerMetricValuesInner.
        :type maximum: float
        """

        self._maximum = maximum

    @property
    def minimum(self):
        """Gets the minimum of this AppServiceEnvironmentsListMetrics200ResponseValueInnerMetricValuesInner.

        Value minimum.

        :return: The minimum of this AppServiceEnvironmentsListMetrics200ResponseValueInnerMetricValuesInner.
        :rtype: float
        """
        return self._minimum

    @minimum.setter
    def minimum(self, minimum):
        """Sets the minimum of this AppServiceEnvironmentsListMetrics200ResponseValueInnerMetricValuesInner.

        Value minimum.

        :param minimum: The minimum of this AppServiceEnvironmentsListMetrics200ResponseValueInnerMetricValuesInner.
        :type minimum: float
        """

        self._minimum = minimum

    @property
    def properties(self):
        """Gets the properties of this AppServiceEnvironmentsListMetrics200ResponseValueInnerMetricValuesInner.

        Resource metric properties collection.

        :return: The properties of this AppServiceEnvironmentsListMetrics200ResponseValueInnerMetricValuesInner.
        :rtype: List[AppServiceEnvironmentsListMetrics200ResponseValueInnerMetricValuesInnerPropertiesInner]
        """
        return self._properties

    @properties.setter
    def properties(self, properties):
        """Sets the properties of this AppServiceEnvironmentsListMetrics200ResponseValueInnerMetricValuesInner.

        Resource metric properties collection.

        :param properties: The properties of this AppServiceEnvironmentsListMetrics200ResponseValueInnerMetricValuesInner.
        :type properties: List[AppServiceEnvironmentsListMetrics200ResponseValueInnerMetricValuesInnerPropertiesInner]
        """

        self._properties = properties

    @property
    def timestamp(self):
        """Gets the timestamp of this AppServiceEnvironmentsListMetrics200ResponseValueInnerMetricValuesInner.

        Value timestamp.

        :return: The timestamp of this AppServiceEnvironmentsListMetrics200ResponseValueInnerMetricValuesInner.
        :rtype: str
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp):
        """Sets the timestamp of this AppServiceEnvironmentsListMetrics200ResponseValueInnerMetricValuesInner.

        Value timestamp.

        :param timestamp: The timestamp of this AppServiceEnvironmentsListMetrics200ResponseValueInnerMetricValuesInner.
        :type timestamp: str
        """

        self._timestamp = timestamp

    @property
    def total(self):
        """Gets the total of this AppServiceEnvironmentsListMetrics200ResponseValueInnerMetricValuesInner.

        Value total.

        :return: The total of this AppServiceEnvironmentsListMetrics200ResponseValueInnerMetricValuesInner.
        :rtype: float
        """
        return self._total

    @total.setter
    def total(self, total):
        """Sets the total of this AppServiceEnvironmentsListMetrics200ResponseValueInnerMetricValuesInner.

        Value total.

        :param total: The total of this AppServiceEnvironmentsListMetrics200ResponseValueInnerMetricValuesInner.
        :type total: float
        """

        self._total = total
