/**
 * AutomationManagement
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2015-10-31
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Credential from './model/Credential';
import CredentialCreateOrUpdateParameters from './model/CredentialCreateOrUpdateParameters';
import CredentialCreateOrUpdateProperties from './model/CredentialCreateOrUpdateProperties';
import CredentialGetDefaultResponse from './model/CredentialGetDefaultResponse';
import CredentialListResult from './model/CredentialListResult';
import CredentialProperties from './model/CredentialProperties';
import CredentialUpdateParameters from './model/CredentialUpdateParameters';
import CredentialUpdateProperties from './model/CredentialUpdateProperties';
import CredentialApi from './api/CredentialApi';


/**
* JS API client generated by OpenAPI Generator.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var AutomationManagement = require('index'); // See note below*.
* var xxxSvc = new AutomationManagement.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new AutomationManagement.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new AutomationManagement.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new AutomationManagement.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2015-10-31
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Credential model constructor.
     * @property {module:model/Credential}
     */
    Credential,

    /**
     * The CredentialCreateOrUpdateParameters model constructor.
     * @property {module:model/CredentialCreateOrUpdateParameters}
     */
    CredentialCreateOrUpdateParameters,

    /**
     * The CredentialCreateOrUpdateProperties model constructor.
     * @property {module:model/CredentialCreateOrUpdateProperties}
     */
    CredentialCreateOrUpdateProperties,

    /**
     * The CredentialGetDefaultResponse model constructor.
     * @property {module:model/CredentialGetDefaultResponse}
     */
    CredentialGetDefaultResponse,

    /**
     * The CredentialListResult model constructor.
     * @property {module:model/CredentialListResult}
     */
    CredentialListResult,

    /**
     * The CredentialProperties model constructor.
     * @property {module:model/CredentialProperties}
     */
    CredentialProperties,

    /**
     * The CredentialUpdateParameters model constructor.
     * @property {module:model/CredentialUpdateParameters}
     */
    CredentialUpdateParameters,

    /**
     * The CredentialUpdateProperties model constructor.
     * @property {module:model/CredentialUpdateProperties}
     */
    CredentialUpdateProperties,

    /**
    * The CredentialApi service constructor.
    * @property {module:api/CredentialApi}
    */
    CredentialApi
};
