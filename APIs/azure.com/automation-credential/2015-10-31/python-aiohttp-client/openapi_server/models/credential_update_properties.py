# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CredentialUpdateProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, password: str=None, user_name: str=None):
        """CredentialUpdateProperties - a model defined in OpenAPI

        :param description: The description of this CredentialUpdateProperties.
        :param password: The password of this CredentialUpdateProperties.
        :param user_name: The user_name of this CredentialUpdateProperties.
        """
        self.openapi_types = {
            'description': str,
            'password': str,
            'user_name': str
        }

        self.attribute_map = {
            'description': 'description',
            'password': 'password',
            'user_name': 'userName'
        }

        self._description = description
        self._password = password
        self._user_name = user_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CredentialUpdateProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CredentialUpdateProperties of this CredentialUpdateProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this CredentialUpdateProperties.

        Gets or sets the description of the credential.

        :return: The description of this CredentialUpdateProperties.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this CredentialUpdateProperties.

        Gets or sets the description of the credential.

        :param description: The description of this CredentialUpdateProperties.
        :type description: str
        """

        self._description = description

    @property
    def password(self):
        """Gets the password of this CredentialUpdateProperties.

        Gets or sets the password of the credential.

        :return: The password of this CredentialUpdateProperties.
        :rtype: str
        """
        return self._password

    @password.setter
    def password(self, password):
        """Sets the password of this CredentialUpdateProperties.

        Gets or sets the password of the credential.

        :param password: The password of this CredentialUpdateProperties.
        :type password: str
        """

        self._password = password

    @property
    def user_name(self):
        """Gets the user_name of this CredentialUpdateProperties.

        Gets or sets the user name of the credential.

        :return: The user_name of this CredentialUpdateProperties.
        :rtype: str
        """
        return self._user_name

    @user_name.setter
    def user_name(self, user_name):
        """Sets the user_name of this CredentialUpdateProperties.

        Gets or sets the user name of the credential.

        :param user_name: The user_name of this CredentialUpdateProperties.
        :type user_name: str
        """

        self._user_name = user_name
