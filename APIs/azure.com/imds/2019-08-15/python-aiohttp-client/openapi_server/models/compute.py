# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.plan_properties import PlanProperties
from openapi_server.models.public_keys_properties import PublicKeysProperties
from openapi_server.models.storage_profile import StorageProfile
from openapi_server import util


class Compute(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, az_environment: str=None, location: str=None, name: str=None, offer: str=None, os_type: str=None, placement_group_id: str=None, plan: PlanProperties=None, platform_fault_domain: str=None, platform_update_domain: str=None, provider: str=None, public_keys: List[PublicKeysProperties]=None, publisher: str=None, resource_group_name: str=None, resource_id: str=None, sku: str=None, storage_profile: StorageProfile=None, subscription_id: str=None, tags: str=None, version: str=None, vm_id: str=None, vm_scale_set_name: str=None, vm_size: str=None, zone: str=None):
        """Compute - a model defined in OpenAPI

        :param az_environment: The az_environment of this Compute.
        :param location: The location of this Compute.
        :param name: The name of this Compute.
        :param offer: The offer of this Compute.
        :param os_type: The os_type of this Compute.
        :param placement_group_id: The placement_group_id of this Compute.
        :param plan: The plan of this Compute.
        :param platform_fault_domain: The platform_fault_domain of this Compute.
        :param platform_update_domain: The platform_update_domain of this Compute.
        :param provider: The provider of this Compute.
        :param public_keys: The public_keys of this Compute.
        :param publisher: The publisher of this Compute.
        :param resource_group_name: The resource_group_name of this Compute.
        :param resource_id: The resource_id of this Compute.
        :param sku: The sku of this Compute.
        :param storage_profile: The storage_profile of this Compute.
        :param subscription_id: The subscription_id of this Compute.
        :param tags: The tags of this Compute.
        :param version: The version of this Compute.
        :param vm_id: The vm_id of this Compute.
        :param vm_scale_set_name: The vm_scale_set_name of this Compute.
        :param vm_size: The vm_size of this Compute.
        :param zone: The zone of this Compute.
        """
        self.openapi_types = {
            'az_environment': str,
            'location': str,
            'name': str,
            'offer': str,
            'os_type': str,
            'placement_group_id': str,
            'plan': PlanProperties,
            'platform_fault_domain': str,
            'platform_update_domain': str,
            'provider': str,
            'public_keys': List[PublicKeysProperties],
            'publisher': str,
            'resource_group_name': str,
            'resource_id': str,
            'sku': str,
            'storage_profile': StorageProfile,
            'subscription_id': str,
            'tags': str,
            'version': str,
            'vm_id': str,
            'vm_scale_set_name': str,
            'vm_size': str,
            'zone': str
        }

        self.attribute_map = {
            'az_environment': 'azEnvironment',
            'location': 'location',
            'name': 'name',
            'offer': 'offer',
            'os_type': 'osType',
            'placement_group_id': 'placementGroupId',
            'plan': 'plan',
            'platform_fault_domain': 'platformFaultDomain',
            'platform_update_domain': 'platformUpdateDomain',
            'provider': 'provider',
            'public_keys': 'publicKeys',
            'publisher': 'publisher',
            'resource_group_name': 'resourceGroupName',
            'resource_id': 'resourceId',
            'sku': 'sku',
            'storage_profile': 'storageProfile',
            'subscription_id': 'subscriptionId',
            'tags': 'tags',
            'version': 'version',
            'vm_id': 'vmId',
            'vm_scale_set_name': 'vmScaleSetName',
            'vm_size': 'vmSize',
            'zone': 'zone'
        }

        self._az_environment = az_environment
        self._location = location
        self._name = name
        self._offer = offer
        self._os_type = os_type
        self._placement_group_id = placement_group_id
        self._plan = plan
        self._platform_fault_domain = platform_fault_domain
        self._platform_update_domain = platform_update_domain
        self._provider = provider
        self._public_keys = public_keys
        self._publisher = publisher
        self._resource_group_name = resource_group_name
        self._resource_id = resource_id
        self._sku = sku
        self._storage_profile = storage_profile
        self._subscription_id = subscription_id
        self._tags = tags
        self._version = version
        self._vm_id = vm_id
        self._vm_scale_set_name = vm_scale_set_name
        self._vm_size = vm_size
        self._zone = zone

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Compute':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Compute of this Compute.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def az_environment(self):
        """Gets the az_environment of this Compute.

        This is the name of the environment in which the VM is running.

        :return: The az_environment of this Compute.
        :rtype: str
        """
        return self._az_environment

    @az_environment.setter
    def az_environment(self, az_environment):
        """Sets the az_environment of this Compute.

        This is the name of the environment in which the VM is running.

        :param az_environment: The az_environment of this Compute.
        :type az_environment: str
        """

        self._az_environment = az_environment

    @property
    def location(self):
        """Gets the location of this Compute.

        This is the Azure Region in which the VM is running.

        :return: The location of this Compute.
        :rtype: str
        """
        return self._location

    @location.setter
    def location(self, location):
        """Sets the location of this Compute.

        This is the Azure Region in which the VM is running.

        :param location: The location of this Compute.
        :type location: str
        """

        self._location = location

    @property
    def name(self):
        """Gets the name of this Compute.

        This is the name of the VM.

        :return: The name of this Compute.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Compute.

        This is the name of the VM.

        :param name: The name of this Compute.
        :type name: str
        """

        self._name = name

    @property
    def offer(self):
        """Gets the offer of this Compute.

        This is the offer information for the VM image. This value is only present for images deployed from the Azure Image Gallery.

        :return: The offer of this Compute.
        :rtype: str
        """
        return self._offer

    @offer.setter
    def offer(self, offer):
        """Sets the offer of this Compute.

        This is the offer information for the VM image. This value is only present for images deployed from the Azure Image Gallery.

        :param offer: The offer of this Compute.
        :type offer: str
        """

        self._offer = offer

    @property
    def os_type(self):
        """Gets the os_type of this Compute.

        This value indicates the type of OS the VM is running, either Linux or Windows.

        :return: The os_type of this Compute.
        :rtype: str
        """
        return self._os_type

    @os_type.setter
    def os_type(self, os_type):
        """Sets the os_type of this Compute.

        This value indicates the type of OS the VM is running, either Linux or Windows.

        :param os_type: The os_type of this Compute.
        :type os_type: str
        """

        self._os_type = os_type

    @property
    def placement_group_id(self):
        """Gets the placement_group_id of this Compute.

        This is the placement group of your Virtual Machine Scale Set.

        :return: The placement_group_id of this Compute.
        :rtype: str
        """
        return self._placement_group_id

    @placement_group_id.setter
    def placement_group_id(self, placement_group_id):
        """Sets the placement_group_id of this Compute.

        This is the placement group of your Virtual Machine Scale Set.

        :param placement_group_id: The placement_group_id of this Compute.
        :type placement_group_id: str
        """

        self._placement_group_id = placement_group_id

    @property
    def plan(self):
        """Gets the plan of this Compute.


        :return: The plan of this Compute.
        :rtype: PlanProperties
        """
        return self._plan

    @plan.setter
    def plan(self, plan):
        """Sets the plan of this Compute.


        :param plan: The plan of this Compute.
        :type plan: PlanProperties
        """

        self._plan = plan

    @property
    def platform_fault_domain(self):
        """Gets the platform_fault_domain of this Compute.

        This is the fault domain in which the VM.

        :return: The platform_fault_domain of this Compute.
        :rtype: str
        """
        return self._platform_fault_domain

    @platform_fault_domain.setter
    def platform_fault_domain(self, platform_fault_domain):
        """Sets the platform_fault_domain of this Compute.

        This is the fault domain in which the VM.

        :param platform_fault_domain: The platform_fault_domain of this Compute.
        :type platform_fault_domain: str
        """

        self._platform_fault_domain = platform_fault_domain

    @property
    def platform_update_domain(self):
        """Gets the platform_update_domain of this Compute.

        This is the update domain in which the VM.

        :return: The platform_update_domain of this Compute.
        :rtype: str
        """
        return self._platform_update_domain

    @platform_update_domain.setter
    def platform_update_domain(self, platform_update_domain):
        """Sets the platform_update_domain of this Compute.

        This is the update domain in which the VM.

        :param platform_update_domain: The platform_update_domain of this Compute.
        :type platform_update_domain: str
        """

        self._platform_update_domain = platform_update_domain

    @property
    def provider(self):
        """Gets the provider of this Compute.

        This is the provider of the VM.

        :return: The provider of this Compute.
        :rtype: str
        """
        return self._provider

    @provider.setter
    def provider(self, provider):
        """Sets the provider of this Compute.

        This is the provider of the VM.

        :param provider: The provider of this Compute.
        :type provider: str
        """

        self._provider = provider

    @property
    def public_keys(self):
        """Gets the public_keys of this Compute.

        This is information about the SSH certificate

        :return: The public_keys of this Compute.
        :rtype: List[PublicKeysProperties]
        """
        return self._public_keys

    @public_keys.setter
    def public_keys(self, public_keys):
        """Sets the public_keys of this Compute.

        This is information about the SSH certificate

        :param public_keys: The public_keys of this Compute.
        :type public_keys: List[PublicKeysProperties]
        """

        self._public_keys = public_keys

    @property
    def publisher(self):
        """Gets the publisher of this Compute.

        This is the publisher of the VM image.

        :return: The publisher of this Compute.
        :rtype: str
        """
        return self._publisher

    @publisher.setter
    def publisher(self, publisher):
        """Sets the publisher of this Compute.

        This is the publisher of the VM image.

        :param publisher: The publisher of this Compute.
        :type publisher: str
        """

        self._publisher = publisher

    @property
    def resource_group_name(self):
        """Gets the resource_group_name of this Compute.

        This is the resource group for the VM.

        :return: The resource_group_name of this Compute.
        :rtype: str
        """
        return self._resource_group_name

    @resource_group_name.setter
    def resource_group_name(self, resource_group_name):
        """Sets the resource_group_name of this Compute.

        This is the resource group for the VM.

        :param resource_group_name: The resource_group_name of this Compute.
        :type resource_group_name: str
        """

        self._resource_group_name = resource_group_name

    @property
    def resource_id(self):
        """Gets the resource_id of this Compute.

        This is the fully qualified ID for the VM.

        :return: The resource_id of this Compute.
        :rtype: str
        """
        return self._resource_id

    @resource_id.setter
    def resource_id(self, resource_id):
        """Sets the resource_id of this Compute.

        This is the fully qualified ID for the VM.

        :param resource_id: The resource_id of this Compute.
        :type resource_id: str
        """

        self._resource_id = resource_id

    @property
    def sku(self):
        """Gets the sku of this Compute.

        This is the specific SKU for the VM image.

        :return: The sku of this Compute.
        :rtype: str
        """
        return self._sku

    @sku.setter
    def sku(self, sku):
        """Sets the sku of this Compute.

        This is the specific SKU for the VM image.

        :param sku: The sku of this Compute.
        :type sku: str
        """

        self._sku = sku

    @property
    def storage_profile(self):
        """Gets the storage_profile of this Compute.


        :return: The storage_profile of this Compute.
        :rtype: StorageProfile
        """
        return self._storage_profile

    @storage_profile.setter
    def storage_profile(self, storage_profile):
        """Sets the storage_profile of this Compute.


        :param storage_profile: The storage_profile of this Compute.
        :type storage_profile: StorageProfile
        """

        self._storage_profile = storage_profile

    @property
    def subscription_id(self):
        """Gets the subscription_id of this Compute.

        This is the Azure subscription for the VM.

        :return: The subscription_id of this Compute.
        :rtype: str
        """
        return self._subscription_id

    @subscription_id.setter
    def subscription_id(self, subscription_id):
        """Sets the subscription_id of this Compute.

        This is the Azure subscription for the VM.

        :param subscription_id: The subscription_id of this Compute.
        :type subscription_id: str
        """

        self._subscription_id = subscription_id

    @property
    def tags(self):
        """Gets the tags of this Compute.

        This is the list of tags for your VM.

        :return: The tags of this Compute.
        :rtype: str
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this Compute.

        This is the list of tags for your VM.

        :param tags: The tags of this Compute.
        :type tags: str
        """

        self._tags = tags

    @property
    def version(self):
        """Gets the version of this Compute.

        This is the version of the VM image.

        :return: The version of this Compute.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this Compute.

        This is the version of the VM image.

        :param version: The version of this Compute.
        :type version: str
        """

        self._version = version

    @property
    def vm_id(self):
        """Gets the vm_id of this Compute.

        This is the unique identifier for the VM.

        :return: The vm_id of this Compute.
        :rtype: str
        """
        return self._vm_id

    @vm_id.setter
    def vm_id(self, vm_id):
        """Sets the vm_id of this Compute.

        This is the unique identifier for the VM.

        :param vm_id: The vm_id of this Compute.
        :type vm_id: str
        """

        self._vm_id = vm_id

    @property
    def vm_scale_set_name(self):
        """Gets the vm_scale_set_name of this Compute.

        This is the resource name of the VMSS.

        :return: The vm_scale_set_name of this Compute.
        :rtype: str
        """
        return self._vm_scale_set_name

    @vm_scale_set_name.setter
    def vm_scale_set_name(self, vm_scale_set_name):
        """Sets the vm_scale_set_name of this Compute.

        This is the resource name of the VMSS.

        :param vm_scale_set_name: The vm_scale_set_name of this Compute.
        :type vm_scale_set_name: str
        """

        self._vm_scale_set_name = vm_scale_set_name

    @property
    def vm_size(self):
        """Gets the vm_size of this Compute.

        This is the size of the VM.

        :return: The vm_size of this Compute.
        :rtype: str
        """
        return self._vm_size

    @vm_size.setter
    def vm_size(self, vm_size):
        """Sets the vm_size of this Compute.

        This is the size of the VM.

        :param vm_size: The vm_size of this Compute.
        :type vm_size: str
        """

        self._vm_size = vm_size

    @property
    def zone(self):
        """Gets the zone of this Compute.

        This is the availability zone of the VM.

        :return: The zone of this Compute.
        :rtype: str
        """
        return self._zone

    @zone.setter
    def zone(self, zone):
        """Sets the zone of this Compute.

        This is the availability zone of the VM.

        :param zone: The zone of this Compute.
        :type zone: str
        """

        self._zone = zone
