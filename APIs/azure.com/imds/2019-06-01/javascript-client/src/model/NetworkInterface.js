/**
 * InstanceMetadataClient
 * The Azure Instance Metadata Client
 *
 * The version of the OpenAPI document: 2019-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import NetworkInterfaceIpv4 from './NetworkInterfaceIpv4';
import NetworkInterfaceIpv6 from './NetworkInterfaceIpv6';

/**
 * The NetworkInterface model module.
 * @module model/NetworkInterface
 * @version 2019-06-01
 */
class NetworkInterface {
    /**
     * Constructs a new <code>NetworkInterface</code>.
     * This contains data about the network interface.
     * @alias module:model/NetworkInterface
     */
    constructor() { 
        
        NetworkInterface.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>NetworkInterface</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NetworkInterface} obj Optional instance to populate.
     * @return {module:model/NetworkInterface} The populated <code>NetworkInterface</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NetworkInterface();

            if (data.hasOwnProperty('ipv4')) {
                obj['ipv4'] = NetworkInterfaceIpv4.constructFromObject(data['ipv4']);
            }
            if (data.hasOwnProperty('ipv6')) {
                obj['ipv6'] = NetworkInterfaceIpv6.constructFromObject(data['ipv6']);
            }
            if (data.hasOwnProperty('macAddress')) {
                obj['macAddress'] = ApiClient.convertToType(data['macAddress'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>NetworkInterface</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>NetworkInterface</code>.
     */
    static validateJSON(data) {
        // validate the optional field `ipv4`
        if (data['ipv4']) { // data not null
          NetworkInterfaceIpv4.validateJSON(data['ipv4']);
        }
        // validate the optional field `ipv6`
        if (data['ipv6']) { // data not null
          NetworkInterfaceIpv6.validateJSON(data['ipv6']);
        }
        // ensure the json data is a string
        if (data['macAddress'] && !(typeof data['macAddress'] === 'string' || data['macAddress'] instanceof String)) {
            throw new Error("Expected the field `macAddress` to be a primitive type in the JSON string but got " + data['macAddress']);
        }

        return true;
    }


}



/**
 * @member {module:model/NetworkInterfaceIpv4} ipv4
 */
NetworkInterface.prototype['ipv4'] = undefined;

/**
 * @member {module:model/NetworkInterfaceIpv6} ipv6
 */
NetworkInterface.prototype['ipv6'] = undefined;

/**
 * This is the MAC address of the interface.
 * @member {String} macAddress
 */
NetworkInterface.prototype['macAddress'] = undefined;






export default NetworkInterface;

