# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AttestedData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, encoding: str=None, signature: str=None):
        """AttestedData - a model defined in OpenAPI

        :param encoding: The encoding of this AttestedData.
        :param signature: The signature of this AttestedData.
        """
        self.openapi_types = {
            'encoding': str,
            'signature': str
        }

        self.attribute_map = {
            'encoding': 'encoding',
            'signature': 'signature'
        }

        self._encoding = encoding
        self._signature = signature

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AttestedData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AttestedData of this AttestedData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def encoding(self):
        """Gets the encoding of this AttestedData.

        This is the encoding scheme of the signature.

        :return: The encoding of this AttestedData.
        :rtype: str
        """
        return self._encoding

    @encoding.setter
    def encoding(self, encoding):
        """Sets the encoding of this AttestedData.

        This is the encoding scheme of the signature.

        :param encoding: The encoding of this AttestedData.
        :type encoding: str
        """

        self._encoding = encoding

    @property
    def signature(self):
        """Gets the signature of this AttestedData.

        This is the encoded string containing the VM ID, plan information, public key, timestamp, and nonce value.

        :return: The signature of this AttestedData.
        :rtype: str
        """
        return self._signature

    @signature.setter
    def signature(self, signature):
        """Sets the signature of this AttestedData.

        This is the encoded string containing the VM ID, plan information, public key, timestamp, and nonce value.

        :param signature: The signature of this AttestedData.
        :type signature: str
        """

        self._signature = signature
