/**
 * InstanceMetadataClient
 * The Azure Instance Metadata Client
 *
 * The version of the OpenAPI document: 2019-03-11
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The IdentityTokenResponse model module.
 * @module model/IdentityTokenResponse
 * @version 2019-03-11
 */
class IdentityTokenResponse {
    /**
     * Constructs a new <code>IdentityTokenResponse</code>.
     * This is the response from the Identity_GetToken operation.
     * @alias module:model/IdentityTokenResponse
     */
    constructor() { 
        
        IdentityTokenResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>IdentityTokenResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IdentityTokenResponse} obj Optional instance to populate.
     * @return {module:model/IdentityTokenResponse} The populated <code>IdentityTokenResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IdentityTokenResponse();

            if (data.hasOwnProperty('access_token')) {
                obj['access_token'] = ApiClient.convertToType(data['access_token'], 'String');
            }
            if (data.hasOwnProperty('client_id')) {
                obj['client_id'] = ApiClient.convertToType(data['client_id'], 'String');
            }
            if (data.hasOwnProperty('expires_in')) {
                obj['expires_in'] = ApiClient.convertToType(data['expires_in'], 'String');
            }
            if (data.hasOwnProperty('expires_on')) {
                obj['expires_on'] = ApiClient.convertToType(data['expires_on'], 'String');
            }
            if (data.hasOwnProperty('ext_expires_in')) {
                obj['ext_expires_in'] = ApiClient.convertToType(data['ext_expires_in'], 'String');
            }
            if (data.hasOwnProperty('msi_res_id')) {
                obj['msi_res_id'] = ApiClient.convertToType(data['msi_res_id'], 'String');
            }
            if (data.hasOwnProperty('not_before')) {
                obj['not_before'] = ApiClient.convertToType(data['not_before'], 'String');
            }
            if (data.hasOwnProperty('object_id')) {
                obj['object_id'] = ApiClient.convertToType(data['object_id'], 'String');
            }
            if (data.hasOwnProperty('resource')) {
                obj['resource'] = ApiClient.convertToType(data['resource'], 'String');
            }
            if (data.hasOwnProperty('token_type')) {
                obj['token_type'] = ApiClient.convertToType(data['token_type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IdentityTokenResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IdentityTokenResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['access_token'] && !(typeof data['access_token'] === 'string' || data['access_token'] instanceof String)) {
            throw new Error("Expected the field `access_token` to be a primitive type in the JSON string but got " + data['access_token']);
        }
        // ensure the json data is a string
        if (data['client_id'] && !(typeof data['client_id'] === 'string' || data['client_id'] instanceof String)) {
            throw new Error("Expected the field `client_id` to be a primitive type in the JSON string but got " + data['client_id']);
        }
        // ensure the json data is a string
        if (data['expires_in'] && !(typeof data['expires_in'] === 'string' || data['expires_in'] instanceof String)) {
            throw new Error("Expected the field `expires_in` to be a primitive type in the JSON string but got " + data['expires_in']);
        }
        // ensure the json data is a string
        if (data['expires_on'] && !(typeof data['expires_on'] === 'string' || data['expires_on'] instanceof String)) {
            throw new Error("Expected the field `expires_on` to be a primitive type in the JSON string but got " + data['expires_on']);
        }
        // ensure the json data is a string
        if (data['ext_expires_in'] && !(typeof data['ext_expires_in'] === 'string' || data['ext_expires_in'] instanceof String)) {
            throw new Error("Expected the field `ext_expires_in` to be a primitive type in the JSON string but got " + data['ext_expires_in']);
        }
        // ensure the json data is a string
        if (data['msi_res_id'] && !(typeof data['msi_res_id'] === 'string' || data['msi_res_id'] instanceof String)) {
            throw new Error("Expected the field `msi_res_id` to be a primitive type in the JSON string but got " + data['msi_res_id']);
        }
        // ensure the json data is a string
        if (data['not_before'] && !(typeof data['not_before'] === 'string' || data['not_before'] instanceof String)) {
            throw new Error("Expected the field `not_before` to be a primitive type in the JSON string but got " + data['not_before']);
        }
        // ensure the json data is a string
        if (data['object_id'] && !(typeof data['object_id'] === 'string' || data['object_id'] instanceof String)) {
            throw new Error("Expected the field `object_id` to be a primitive type in the JSON string but got " + data['object_id']);
        }
        // ensure the json data is a string
        if (data['resource'] && !(typeof data['resource'] === 'string' || data['resource'] instanceof String)) {
            throw new Error("Expected the field `resource` to be a primitive type in the JSON string but got " + data['resource']);
        }
        // ensure the json data is a string
        if (data['token_type'] && !(typeof data['token_type'] === 'string' || data['token_type'] instanceof String)) {
            throw new Error("Expected the field `token_type` to be a primitive type in the JSON string but got " + data['token_type']);
        }

        return true;
    }


}



/**
 * This is the requested access token. The app can use this token to authenticate to the sink resource.
 * @member {String} access_token
 */
IdentityTokenResponse.prototype['access_token'] = undefined;

/**
 * This is the client_id specified in the request, if any.
 * @member {String} client_id
 */
IdentityTokenResponse.prototype['client_id'] = undefined;

/**
 * This is how long the access token is valid (in seconds).
 * @member {String} expires_in
 */
IdentityTokenResponse.prototype['expires_in'] = undefined;

/**
 * This is the time when the access token expires. The date is represented as the number of seconds from 1970-01-01T0:0:0Z UTC until the expiration time. This value is used to determine the lifetime of cached tokens.
 * @member {String} expires_on
 */
IdentityTokenResponse.prototype['expires_on'] = undefined;

/**
 * This indicates the extended lifetime of the token (in seconds).
 * @member {String} ext_expires_in
 */
IdentityTokenResponse.prototype['ext_expires_in'] = undefined;

/**
 * This is the msi_res_id specified in the request, if any.
 * @member {String} msi_res_id
 */
IdentityTokenResponse.prototype['msi_res_id'] = undefined;

/**
 * This is the time when the access token becomes effective. The date is represented as the number of seconds from 1970-01-01T0:0:0Z UTC until the expiration time.
 * @member {String} not_before
 */
IdentityTokenResponse.prototype['not_before'] = undefined;

/**
 * This is the object_id specified in the request, if any.
 * @member {String} object_id
 */
IdentityTokenResponse.prototype['object_id'] = undefined;

/**
 * This is the app ID URI of the sink resource.
 * @member {String} resource
 */
IdentityTokenResponse.prototype['resource'] = undefined;

/**
 * This indicates the token type value.
 * @member {String} token_type
 */
IdentityTokenResponse.prototype['token_type'] = undefined;






export default IdentityTokenResponse;

