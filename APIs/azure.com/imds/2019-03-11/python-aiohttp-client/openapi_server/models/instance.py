# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.compute import Compute
from openapi_server.models.network import Network
from openapi_server import util


class Instance(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, compute: Compute=None, network: Network=None):
        """Instance - a model defined in OpenAPI

        :param compute: The compute of this Instance.
        :param network: The network of this Instance.
        """
        self.openapi_types = {
            'compute': Compute,
            'network': Network
        }

        self.attribute_map = {
            'compute': 'compute',
            'network': 'network'
        }

        self._compute = compute
        self._network = network

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Instance':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Instance of this Instance.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def compute(self):
        """Gets the compute of this Instance.


        :return: The compute of this Instance.
        :rtype: Compute
        """
        return self._compute

    @compute.setter
    def compute(self, compute):
        """Sets the compute of this Instance.


        :param compute: The compute of this Instance.
        :type compute: Compute
        """

        self._compute = compute

    @property
    def network(self):
        """Gets the network of this Instance.


        :return: The network of this Instance.
        :rtype: Network
        """
        return self._network

    @network.setter
    def network(self, network):
        """Sets the network of this Instance.


        :param network: The network of this Instance.
        :type network: Network
        """

        self._network = network
