/**
 * InstanceMetadataClient
 * The Azure Instance Metadata Client
 *
 * The version of the OpenAPI document: 2019-02-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The IdentityErrorResponse model module.
 * @module model/IdentityErrorResponse
 * @version 2019-02-01
 */
class IdentityErrorResponse {
    /**
     * Constructs a new <code>IdentityErrorResponse</code>.
     * This is the response from an Identity operation in the case an error occurs.
     * @alias module:model/IdentityErrorResponse
     */
    constructor() { 
        
        IdentityErrorResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>IdentityErrorResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IdentityErrorResponse} obj Optional instance to populate.
     * @return {module:model/IdentityErrorResponse} The populated <code>IdentityErrorResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IdentityErrorResponse();

            if (data.hasOwnProperty('error')) {
                obj['error'] = ApiClient.convertToType(data['error'], 'String');
            }
            if (data.hasOwnProperty('error_description')) {
                obj['error_description'] = ApiClient.convertToType(data['error_description'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IdentityErrorResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IdentityErrorResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['error'] && !(typeof data['error'] === 'string' || data['error'] instanceof String)) {
            throw new Error("Expected the field `error` to be a primitive type in the JSON string but got " + data['error']);
        }
        // ensure the json data is a string
        if (data['error_description'] && !(typeof data['error_description'] === 'string' || data['error_description'] instanceof String)) {
            throw new Error("Expected the field `error_description` to be a primitive type in the JSON string but got " + data['error_description']);
        }

        return true;
    }


}



/**
 * Error code
 * @member {module:model/IdentityErrorResponse.ErrorEnum} error
 */
IdentityErrorResponse.prototype['error'] = undefined;

/**
 * Error message indicating why the operation failed.
 * @member {String} error_description
 */
IdentityErrorResponse.prototype['error_description'] = undefined;





/**
 * Allowed values for the <code>error</code> property.
 * @enum {String}
 * @readonly
 */
IdentityErrorResponse['ErrorEnum'] = {

    /**
     * value: "invalid_request"
     * @const
     */
    "invalid_request": "invalid_request",

    /**
     * value: "unauthorized_client"
     * @const
     */
    "unauthorized_client": "unauthorized_client",

    /**
     * value: "access_denied"
     * @const
     */
    "access_denied": "access_denied",

    /**
     * value: "unsupported_response_type"
     * @const
     */
    "unsupported_response_type": "unsupported_response_type",

    /**
     * value: "invalid_scope"
     * @const
     */
    "invalid_scope": "invalid_scope",

    /**
     * value: "server_error"
     * @const
     */
    "server_error": "server_error",

    /**
     * value: "service_unavailable"
     * @const
     */
    "service_unavailable": "service_unavailable",

    /**
     * value: "bad_request"
     * @const
     */
    "bad_request": "bad_request",

    /**
     * value: "forbidden"
     * @const
     */
    "forbidden": "forbidden",

    /**
     * value: "not_found"
     * @const
     */
    "not_found": "not_found",

    /**
     * value: "method_not_allowed"
     * @const
     */
    "method_not_allowed": "method_not_allowed",

    /**
     * value: "too_many_requests"
     * @const
     */
    "too_many_requests": "too_many_requests"
};



export default IdentityErrorResponse;

