/**
 * InstanceMetadataClient
 * The Azure Instance Metadata Client
 *
 * The version of the OpenAPI document: 2019-11-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDataDisk.h
 *
 * This contains information about the data disk.
 */

#ifndef OAIDataDisk_H
#define OAIDataDisk_H

#include <QJsonObject>

#include "OAIDiskImage.h"
#include "OAIManagedDisk.h"
#include "OAIVirtualHardDisk.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDiskImage;
class OAIManagedDisk;
class OAIVirtualHardDisk;

class OAIDataDisk : public OAIObject {
public:
    OAIDataDisk();
    OAIDataDisk(QString json);
    ~OAIDataDisk() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCaching() const;
    void setCaching(const QString &caching);
    bool is_caching_Set() const;
    bool is_caching_Valid() const;

    QString getCreateOption() const;
    void setCreateOption(const QString &create_option);
    bool is_create_option_Set() const;
    bool is_create_option_Valid() const;

    QString getDiskSizeGb() const;
    void setDiskSizeGb(const QString &disk_size_gb);
    bool is_disk_size_gb_Set() const;
    bool is_disk_size_gb_Valid() const;

    OAIDiskImage getImage() const;
    void setImage(const OAIDiskImage &image);
    bool is_image_Set() const;
    bool is_image_Valid() const;

    QString getLun() const;
    void setLun(const QString &lun);
    bool is_lun_Set() const;
    bool is_lun_Valid() const;

    OAIManagedDisk getManagedDisk() const;
    void setManagedDisk(const OAIManagedDisk &managed_disk);
    bool is_managed_disk_Set() const;
    bool is_managed_disk_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIVirtualHardDisk getVhd() const;
    void setVhd(const OAIVirtualHardDisk &vhd);
    bool is_vhd_Set() const;
    bool is_vhd_Valid() const;

    QString getWriteAcceleratorEnabled() const;
    void setWriteAcceleratorEnabled(const QString &write_accelerator_enabled);
    bool is_write_accelerator_enabled_Set() const;
    bool is_write_accelerator_enabled_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_caching;
    bool m_caching_isSet;
    bool m_caching_isValid;

    QString m_create_option;
    bool m_create_option_isSet;
    bool m_create_option_isValid;

    QString m_disk_size_gb;
    bool m_disk_size_gb_isSet;
    bool m_disk_size_gb_isValid;

    OAIDiskImage m_image;
    bool m_image_isSet;
    bool m_image_isValid;

    QString m_lun;
    bool m_lun_isSet;
    bool m_lun_isValid;

    OAIManagedDisk m_managed_disk;
    bool m_managed_disk_isSet;
    bool m_managed_disk_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIVirtualHardDisk m_vhd;
    bool m_vhd_isSet;
    bool m_vhd_isValid;

    QString m_write_accelerator_enabled;
    bool m_write_accelerator_enabled_isSet;
    bool m_write_accelerator_enabled_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDataDisk)

#endif // OAIDataDisk_H
