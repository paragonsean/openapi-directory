/**
 * InstanceMetadataClient
 * The Azure Instance Metadata Client
 *
 * The version of the OpenAPI document: 2019-11-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import IdentityErrorResponse from '../model/IdentityErrorResponse';
import IdentityTokenResponse from '../model/IdentityTokenResponse';

/**
* GetToken service.
* @module api/GetTokenApi
* @version 2019-11-01
*/
export default class GetTokenApi {

    /**
    * Constructs a new GetTokenApi. 
    * @alias module:api/GetTokenApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the identityGetToken operation.
     * @callback module:api/GetTokenApi~identityGetTokenCallback
     * @param {String} error Error message, if any.
     * @param {module:model/IdentityTokenResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a Token from Azure AD
     * @param {module:model/String} metadata This must be set to 'true'.
     * @param {String} resource This is the urlencoded identifier URI of the sink resource for the requested Azure AD token. The resulting token contains the corresponding aud for this resource.
     * @param {module:model/String} apiVersion This is the API version to use.
     * @param {Object} opts Optional parameters
     * @param {String} [clientId] This identifies, by Azure AD client id, a specific explicit identity to use when authenticating to Azure AD. Mutually exclusive with object_id and msi_res_id.
     * @param {String} [objectId] This identifies, by Azure AD object id, a specific explicit identity to use when authenticating to Azure AD. Mutually exclusive with client_id and msi_res_id.
     * @param {String} [msiResId] This identifies, by urlencoded ARM resource id, a specific explicit identity to use when authenticating to Azure AD. Mutually exclusive with client_id and object_id.
     * @param {String} [authority] This indicates the authority to request AAD tokens from. Defaults to the known authority of the identity to be used.
     * @param {module:model/String} [bypassCache] If provided, the value must be 'true'. This indicates to the server that the token must be retrieved from Azure AD and cannot be retrieved from an internal cache.
     * @param {module:api/GetTokenApi~identityGetTokenCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/IdentityTokenResponse}
     */
    identityGetToken(metadata, resource, apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'metadata' is set
      if (metadata === undefined || metadata === null) {
        throw new Error("Missing the required parameter 'metadata' when calling identityGetToken");
      }
      // verify the required parameter 'resource' is set
      if (resource === undefined || resource === null) {
        throw new Error("Missing the required parameter 'resource' when calling identityGetToken");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling identityGetToken");
      }

      let pathParams = {
      };
      let queryParams = {
        'resource': resource,
        'api-version': apiVersion,
        'client_id': opts['clientId'],
        'object_id': opts['objectId'],
        'msi_res_id': opts['msiResId'],
        'authority': opts['authority'],
        'bypass_cache': opts['bypassCache']
      };
      let headerParams = {
        'Metadata': metadata
      };
      let formParams = {
      };

      let authNames = ['basic_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = IdentityTokenResponse;
      return this.apiClient.callApi(
        '/identity/oauth2/token', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
