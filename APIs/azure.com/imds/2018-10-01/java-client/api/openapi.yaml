openapi: 3.0.1
info:
  description: The Azure Instance Metadata Client
  title: InstanceMetadataClient
  version: 2018-10-01
  x-apisguru-categories:
  - cloud
  x-logo:
    url: https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png
  x-origin:
  - format: swagger
    url: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/imds/data-plane/Microsoft.InstanceMetadataService/stable/2018-10-01/imds.json
    version: "2.0"
  x-preferred: false
  x-providerName: azure.com
  x-serviceName: imds
  x-tags:
  - Azure
  - Microsoft
servers:
- url: https://169.254.169.254/metadata
security:
- azure_auth:
  - user_impersonation
paths:
  /attested/document:
    get:
      description: Get Attested Data for the Virtual Machine.
      operationId: Attested_GetDocument
      parameters:
      - description: This is the API version to use.
        in: query
        name: api-version
        required: true
        schema:
          enum:
          - 2018-10-01
          type: string
          x-ms-enum:
            modelAsString: true
            name: ApiVersion
        x-ms-enum:
          modelAsString: true
          name: ApiVersion
      - description: This is a string of up to 32 random alphanumeric characters.
        in: query
        name: nonce
        schema:
          type: string
      - description: This must be set to 'true'.
        in: header
        name: Metadata
        required: true
        schema:
          enum:
          - "true"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttestedData'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Method not allowed
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Server error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Service unavailable
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response describing why the operation failed.
      x-ms-examples:
        Get Attested Data for the VM:
          parameters:
            Metadata: "true"
            api-version: 2018-10-01
            nonce: abcde12345
          responses:
            "200":
              body:
                encoding: pkcs7
                signature: MIID2gYJKoZIhvcNAQcCoIIDyzCCA8cCAQExDzANBgkqhkiG9w0BAQsFADCBggYJKoZIhvcNAQcBoHUEc3sibm9uY2UiOiIxMTExMTExMTExIiwicGxhbiI6eyJuYW1lIjoiIiwicHJvZHVjdCI6IiIsInB1Ymxpc2hlciI6IiJ9LCJ2bUlkIjoiMDJhYWI4YTQtNzRlZi00NzZlLTgxODItZjZkMmJhNDE2NmE2In2gggI/MIICOzCCAaSgAwIBAgIQQWsFjXN35oBJKFXI3QrM3TANBgkqhkiG9w0BAQQFADArMSkwJwYDVQQDEyB0ZXN0c3ViZG9tYWluLm1ldGFkYXRhLmF6dXJlLmNvbTAeFw0xODExMDgxODUzMDRaFw0xODEyMDgxODUzMDNaMCsxKTAnBgNVBAMTIHRlc3RzdWJkb21haW4ubWV0YWRhdGEuYXp1cmUuY29tMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDEi0FVslYnUX+MneC7ERMU4ZM88z4J80r7RPgvzxCPNhXUQlWm3cmVRZMD8kKMv7brkvEsATP7Ak60/I/XEtOga4LGCvMaQa8I/MW8IhSyp2Vj015glAiV8TeUI5DuOIOS96lQvM+G7bt23swkIwVjm1u1ViTZiKKytwpY/EGqzQIDAQABo2AwXjBcBgNVHQEEVTBTgBAt3MRgJmEoUMiPy7k06cLfoS0wKzEpMCcGA1UEAxMgdGVzdHN1YmRvbWFpbi5tZXRhZGF0YS5henVyZS5jb22CEEFrBY1zd+aASShVyN0KzN0wDQYJKoZIhvcNAQEEBQADgYEAd87qiZnRlGIFQ5IEcL/A7ru23WSQAOBsNPt70Fg1GtaEHcYshKUJFhGwXOgZ11cY5wRfrSvEKuzvhAeIZwkvzkBjC04g8sRrjN5leLY5CsKzQhjN52TUMsHhqTM58tfAnICeTddQwn6LOgfqtYH5WO+F/VbFCwPstYUqjmQEYAoxgegwgeUCAQEwPzArMSkwJwYDVQQDEyB0ZXN0c3ViZG9tYWluLm1ldGFkYXRhLmF6dXJlLmNvbQIQQWsFjXN35oBJKFXI3QrM3TANBgkqhkiG9w0BAQsFADANBgkqhkiG9w0BAQEFAASBgCbkRKmQ1MdWZPVOrX7ZBKHQUWPFrQQNdjk3KB67GkY0W0Taxut4K7D2PmiflVEwxB92pTbaZZr/dldu1k1ab1YamHcVYdgZgxIkoOWohGR0ym8oL9JHjFMEqHUbEPtDwE8X+djtDd8TVdb6LYe77IXmz/VaX4whuejlSvQXjaL
            "400":
              body:
                error: Bad request
            "403":
              body:
                error: Forbidden
            "404":
              body:
                error: Not found
            "405":
              body:
                error: Not allowed
            "429":
              body:
                error: Too many requests
            "500":
              body:
                error: Server error
            "503":
              body:
                error: Service unavailable
      x-accepts:
      - application/json
  /identity/info:
    get:
      description: Get information about AAD Metadata
      operationId: Identity_GetInfo
      parameters:
      - description: This must be set to 'true'.
        in: header
        name: Metadata
        required: true
        schema:
          enum:
          - "true"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: This is the API version to use.
        in: query
        name: api-version
        required: true
        schema:
          enum:
          - 2018-10-01
          type: string
          x-ms-enum:
            modelAsString: true
            name: ApiVersion
        x-ms-enum:
          modelAsString: true
          name: ApiVersion
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityInfoResponse'
          description: Successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityErrorResponse'
          description: Invalid request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityErrorResponse'
          description: Not found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityErrorResponse'
          description: Method not allowed
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityErrorResponse'
          description: Too many requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityErrorResponse'
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityErrorResponse'
          description: Error response describing why the operation failed.
      tags:
      - Get metadata information
      x-ms-examples:
        Get Identity Info for the VM:
          parameters:
            Metadata: "true"
            api-version: 2018-10-01
          responses:
            "200":
              body:
                tenantId: abd8daee-d393-4239-9377-883adda3d40f
            "400":
              body:
                error: invalid_request
                error_description: Bad request
            "404":
              body:
                error: not_found
                error_description: Not found
            "405":
              body:
                error: method_not_allowed
                error_description: Not allowed
            "429":
              body:
                error: too_many_requests
                error_description: Too many requests
            "500":
              body:
                error: server_error
                error_description: Server error
      x-accepts:
      - application/json
  /identity/oauth2/token:
    get:
      description: Get a Token from Azure AD
      operationId: Identity_GetToken
      parameters:
      - description: This must be set to 'true'.
        in: header
        name: Metadata
        required: true
        schema:
          enum:
          - "true"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: This is the urlencoded identifier URI of the sink resource for
          the requested Azure AD token. The resulting token contains the corresponding
          aud for this resource.
        in: query
        name: resource
        required: true
        schema:
          type: string
      - description: This is the API version to use.
        in: query
        name: api-version
        required: true
        schema:
          enum:
          - 2018-10-01
          type: string
          x-ms-enum:
            modelAsString: true
            name: ApiVersion
        x-ms-enum:
          modelAsString: true
          name: ApiVersion
      - description: "This identifies, by Azure AD client id, a specific explicit\
          \ identity to use when authenticating to Azure AD. Mutually exclusive with\
          \ object_id and msi_res_id."
        in: query
        name: client_id
        schema:
          type: string
      - description: "This identifies, by Azure AD object id, a specific explicit\
          \ identity to use when authenticating to Azure AD. Mutually exclusive with\
          \ client_id and msi_res_id."
        in: query
        name: object_id
        schema:
          type: string
      - description: "This identifies, by urlencoded ARM resource id, a specific explicit\
          \ identity to use when authenticating to Azure AD. Mutually exclusive with\
          \ client_id and object_id."
        in: query
        name: msi_res_id
        schema:
          type: string
      - description: This indicates the authority to request AAD tokens from. Defaults
          to the known authority of the identity to be used.
        in: query
        name: authority
        schema:
          type: string
      - description: "If provided, the value must be 'true'. This indicates to the\
          \ server that the token must be retrieved from Azure AD and cannot be retrieved\
          \ from an internal cache."
        in: query
        name: bypass_cache
        schema:
          enum:
          - "true"
          type: string
          x-ms-enum:
            modelAsString: true
            name: BypassCache
        x-ms-enum:
          modelAsString: true
          name: BypassCache
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityTokenResponse'
          description: Successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityErrorResponse'
          description: Invalid request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityErrorResponse'
          description: Not found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityErrorResponse'
          description: Method not allowed
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityErrorResponse'
          description: Too many requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityErrorResponse'
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityErrorResponse'
          description: Error response describing why the operation failed.
      tags:
      - Get token
      x-ms-examples:
        Get Identity Token for the VM:
          parameters:
            Metadata: "true"
            api-version: 2018-10-01
            resource: https://vault.azure.net
          responses:
            "200":
              body:
                access_token: dummytoken
                client_id: be5947ed-3560-4afe-9504-59967a63f810
                expires_in: "3599"
                expires_on: "1541705014"
                ext_expires_in: "262800"
                not_before: "1508961830"
                resource: https://va
            "400":
              body:
                error: invalid_request
                error_description: Bad request
            "404":
              body:
                error: not_found
                error_description: Not found
            "405":
              body:
                error: method_not_allowed
                error_description: Not allowed
            "429":
              body:
                error: too_many_requests
                error_description: Too many requests
            "500":
              body:
                error: server_error
                error_description: Server error
      x-accepts:
      - application/json
  /instance:
    get:
      description: Get Instance Metadata for the Virtual Machine.
      operationId: Instances_GetMetadata
      parameters:
      - description: This is the API version to use.
        in: query
        name: api-version
        required: true
        schema:
          enum:
          - 2018-10-01
          type: string
          x-ms-enum:
            modelAsString: true
            name: ApiVersion
        x-ms-enum:
          modelAsString: true
          name: ApiVersion
      - description: This must be set to 'true'.
        in: header
        name: Metadata
        required: true
        schema:
          enum:
          - "true"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Instance'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Method not allowed
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Server error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Service unavailable
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response describing why the operation failed.
      x-ms-examples:
        Get Instance Metadata for the VM:
          parameters:
            Metadata: "true"
            api-version: 2018-10-01
          responses:
            "200":
              body:
                compute:
                  azEnvironment: AZUREPUBLICCLOUD
                  location: westus
                  name: examplevmname
                  offer: Windows
                  osType: linux
                  placementGroupId: f67c14ab-e92c-408c-ae2d-da15866ec79a
                  plan:
                    name: planName
                    product: planProduct
                    publisher: planPublisher
                  platformFaultDomain: "36"
                  platformUpdateDomain: "42"
                  publicKeys:
                  - keyData: ssh-rsa 0
                    path: /home/user/.ssh/authorized_keys0
                  - keyData: ssh-rsa 1
                    path: /home/user/.ssh/authorized_keys1
                  publisher: RDFE-Test-Microsoft-Windows-Server-Group
                  resourceGroupName: macikgo-test-may-23
                  sku: Windows-Server-2012-R2-Datacenter
                  subscriptionId: 8d10da13-8125-4ba9-a717-bf7490507b3d
                  tags: baz:bash;foo:bar
                  version: 15.05.22
                  vmId: 02aab8a4-74ef-476e-8182-f6d2ba4166a6
                  vmScaleSetName: crpteste9vflji9
                  vmSize: Standard_A3
                  zone: ""
            "400":
              body:
                error: Bad request
            "403":
              body:
                error: Forbidden
            "404":
              body:
                error: Not found
            "405":
              body:
                error: Not allowed
            "429":
              body:
                error: Too many requests
            "500":
              body:
                error: Server error
            "503":
              body:
                error: Service unavailable
      x-accepts:
      - application/json
components:
  parameters:
    ApiVersionParameter:
      description: This is the API version to use.
      in: query
      name: api-version
      required: true
      schema:
        enum:
        - 2018-10-01
        type: string
        x-ms-enum:
          modelAsString: true
          name: ApiVersion
      x-ms-enum:
        modelAsString: true
        name: ApiVersion
    MetadataParameter:
      description: This must be set to 'true'.
      in: header
      name: Metadata
      required: true
      schema:
        enum:
        - "true"
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
  schemas:
    AttestedData:
      description: This is the response from the Attested_GetDocument operation.
      example:
        signature: signature
        encoding: encoding
      properties:
        encoding:
          description: This is the encoding scheme of the signature.
          type: string
        signature:
          description: "This is the encoded string containing the VM ID, plan information,\
            \ public key, timestamp, and nonce value."
          type: string
      type: object
    Compute:
      description: Compute Metadata
      example:
        publicKeys:
        - path: path
          keyData: keyData
        - path: path
          keyData: keyData
        azEnvironment: azEnvironment
        resourceGroupName: resourceGroupName
        vmScaleSetName: vmScaleSetName
        vmId: vmId
        version: version
        tags: tags
        offer: offer
        provider: provider
        zone: zone
        name: name
        osType: osType
        placementGroupId: placementGroupId
        publisher: publisher
        location: location
        vmSize: vmSize
        platformUpdateDomain: platformUpdateDomain
        sku: sku
        subscriptionId: subscriptionId
        plan:
          product: product
          name: name
          publisher: publisher
        platformFaultDomain: platformFaultDomain
      properties:
        azEnvironment:
          description: This is the name of the environment in which the VM is running.
          type: string
        location:
          description: This is the Azure Region in which the VM is running.
          type: string
        name:
          description: This is the name of the VM.
          type: string
        offer:
          description: This is the offer information for the VM image. This value
            is only present for images deployed from the Azure Image Gallery.
          type: string
        osType:
          description: "This value indicates the type of OS the VM is running, either\
            \ Linux or Windows."
          type: string
        placementGroupId:
          description: This is the placement group of your Virtual Machine Scale Set.
          type: string
        plan:
          $ref: '#/components/schemas/PlanProperties'
        platformFaultDomain:
          description: This is the fault domain in which the VM.
          type: string
        platformUpdateDomain:
          description: This is the update domain in which the VM.
          type: string
        provider:
          description: This is the provider of the VM.
          type: string
        publicKeys:
          description: This is information about the SSH certificate
          items:
            $ref: '#/components/schemas/PublicKeysProperties'
          type: array
        publisher:
          description: This is the publisher of the VM image.
          type: string
        resourceGroupName:
          description: This is the resource group for the VM.
          type: string
        sku:
          description: This is the specific SKU for the VM image.
          type: string
        subscriptionId:
          description: This is the Azure subscription for the VM.
          type: string
        tags:
          description: This is the list of tags for your VM.
          type: string
        version:
          description: This is the version of the VM image.
          type: string
        vmId:
          description: This is the unique identifier for the VM.
          type: string
        vmScaleSetName:
          description: This is the resource name of the VMSS.
          type: string
        vmSize:
          description: This is the size of the VM.
          type: string
        zone:
          description: This is the availability zone of the VM.
          type: string
      type: object
    ErrorResponse:
      description: This is the response from an operation in the case an error occurs.
      example:
        error: error
      properties:
        error:
          description: Error message indicating why the operation failed.
          type: string
      type: object
    IdentityErrorResponse:
      description: This is the response from an Identity operation in the case an
        error occurs.
      example:
        error_description: error_description
        error: invalid_request
      properties:
        error:
          description: Error code
          enum:
          - invalid_request
          - unauthorized_client
          - access_denied
          - unsupported_response_type
          - invalid_scope
          - server_error
          - service_unavailable
          - bad_request
          - forbidden
          - not_found
          - method_not_allowed
          - too_many_requests
          type: string
          x-ms-enum:
            modelAsString: true
            name: Error
        error_description:
          description: Error message indicating why the operation failed.
          type: string
      type: object
    IdentityInfoResponse:
      description: This is the response from the Identity_GetInfo operation.
      example:
        tenantId: tenantId
      properties:
        tenantId:
          description: This is the AAD tenantId of the identity of the caller.
          type: string
      type: object
    IdentityTokenResponse:
      description: This is the response from the Identity_GetToken operation.
      example:
        access_token: access_token
        resource: resource
        not_before: not_before
        expires_on: expires_on
        ext_expires_in: ext_expires_in
        token_type: token_type
        expires_in: expires_in
        msi_res_id: msi_res_id
        object_id: object_id
        client_id: client_id
      properties:
        access_token:
          description: This is the requested access token. The app can use this token
            to authenticate to the sink resource.
          type: string
        client_id:
          description: "This is the client_id specified in the request, if any."
          type: string
        expires_in:
          description: This is how long the access token is valid (in seconds).
          type: string
        expires_on:
          description: This is the time when the access token expires. The date is
            represented as the number of seconds from 1970-01-01T0:0:0Z UTC until
            the expiration time. This value is used to determine the lifetime of cached
            tokens.
          type: string
        ext_expires_in:
          description: This indicates the extended lifetime of the token.
          type: string
        msi_res_id:
          description: "This is the msi_res_id specified in the request, if any."
          type: string
        not_before:
          description: This is the time when the access token becomes effective. The
            date is represented as the number of seconds from 1970-01-01T0:0:0Z UTC
            until the expiration time.
          type: string
        object_id:
          description: "This is the object_id specified in the request, if any."
          type: string
        resource:
          description: This is the app ID URI of the sink resource.
          type: string
        token_type:
          description: This indicates the token type value.
          type: string
      type: object
    Instance:
      description: This is the response from the Instance_GetMetadata operation.
      example:
        compute:
          publicKeys:
          - path: path
            keyData: keyData
          - path: path
            keyData: keyData
          azEnvironment: azEnvironment
          resourceGroupName: resourceGroupName
          vmScaleSetName: vmScaleSetName
          vmId: vmId
          version: version
          tags: tags
          offer: offer
          provider: provider
          zone: zone
          name: name
          osType: osType
          placementGroupId: placementGroupId
          publisher: publisher
          location: location
          vmSize: vmSize
          platformUpdateDomain: platformUpdateDomain
          sku: sku
          subscriptionId: subscriptionId
          plan:
            product: product
            name: name
            publisher: publisher
          platformFaultDomain: platformFaultDomain
        network:
          interface:
          - macAddress: macAddress
            ipv4:
              subnet:
              - address: address
                prefix: prefix
              - address: address
                prefix: prefix
              ipAddress:
              - publicIpAddress: publicIpAddress
                privateIpAddress: privateIpAddress
              - publicIpAddress: publicIpAddress
                privateIpAddress: privateIpAddress
            ipv6:
              ipAddress:
              - privateIpAddress: privateIpAddress
              - privateIpAddress: privateIpAddress
          - macAddress: macAddress
            ipv4:
              subnet:
              - address: address
                prefix: prefix
              - address: address
                prefix: prefix
              ipAddress:
              - publicIpAddress: publicIpAddress
                privateIpAddress: privateIpAddress
              - publicIpAddress: publicIpAddress
                privateIpAddress: privateIpAddress
            ipv6:
              ipAddress:
              - privateIpAddress: privateIpAddress
              - privateIpAddress: privateIpAddress
      properties:
        compute:
          $ref: '#/components/schemas/Compute'
        network:
          $ref: '#/components/schemas/Network'
      type: object
    Ipv4Properties:
      description: This contains the IPv4 properties.
      example:
        publicIpAddress: publicIpAddress
        privateIpAddress: privateIpAddress
      properties:
        privateIpAddress:
          description: This is the private IP address assigned to the interface.
          type: string
        publicIpAddress:
          description: This is the public IP address assigned to the interface.
          type: string
      type: object
    Ipv6Properties:
      description: This contains the IPv6 properties.
      example:
        privateIpAddress: privateIpAddress
      properties:
        privateIpAddress:
          description: This is the private IPv6 address assigned to the interface.
          type: string
      type: object
    Network:
      description: Network Metadata
      example:
        interface:
        - macAddress: macAddress
          ipv4:
            subnet:
            - address: address
              prefix: prefix
            - address: address
              prefix: prefix
            ipAddress:
            - publicIpAddress: publicIpAddress
              privateIpAddress: privateIpAddress
            - publicIpAddress: publicIpAddress
              privateIpAddress: privateIpAddress
          ipv6:
            ipAddress:
            - privateIpAddress: privateIpAddress
            - privateIpAddress: privateIpAddress
        - macAddress: macAddress
          ipv4:
            subnet:
            - address: address
              prefix: prefix
            - address: address
              prefix: prefix
            ipAddress:
            - publicIpAddress: publicIpAddress
              privateIpAddress: privateIpAddress
            - publicIpAddress: publicIpAddress
              privateIpAddress: privateIpAddress
          ipv6:
            ipAddress:
            - privateIpAddress: privateIpAddress
            - privateIpAddress: privateIpAddress
      properties:
        interface:
          description: This contains data about the network interface.
          items:
            $ref: '#/components/schemas/NetworkInterface'
          type: array
      type: object
    NetworkInterface:
      description: This contains data about the network interface.
      example:
        macAddress: macAddress
        ipv4:
          subnet:
          - address: address
            prefix: prefix
          - address: address
            prefix: prefix
          ipAddress:
          - publicIpAddress: publicIpAddress
            privateIpAddress: privateIpAddress
          - publicIpAddress: publicIpAddress
            privateIpAddress: privateIpAddress
        ipv6:
          ipAddress:
          - privateIpAddress: privateIpAddress
          - privateIpAddress: privateIpAddress
      properties:
        ipv4:
          $ref: '#/components/schemas/NetworkInterface_ipv4'
        ipv6:
          $ref: '#/components/schemas/NetworkInterface_ipv6'
        macAddress:
          description: This is the MAC address of the interface.
          type: string
      type: object
    PlanProperties:
      description: This contains the data about the plan.
      example:
        product: product
        name: name
        publisher: publisher
      properties:
        name:
          description: This is the Plan ID.
          type: string
        product:
          description: This is the product of the image from the Marketplace.
          type: string
        publisher:
          description: This is the publisher ID.
          type: string
      type: object
    PublicKeysProperties:
      description: This contains the data about the public key.
      example:
        path: path
        keyData: keyData
      properties:
        keyData:
          description: This is the SSH public key certificate used to authenticate
            with the VM.
          type: string
        path:
          description: This specifies the full path on the VM where the SSH public
            key is stored.
          type: string
      type: object
    SubnetProperties:
      description: This contains the properties of the subnet.
      example:
        address: address
        prefix: prefix
      properties:
        address:
          description: This is the address range of the subnet.
          type: string
        prefix:
          description: This is the prefix of the subnet.
          type: string
      type: object
    NetworkInterface_ipv4:
      description: This contains the IPv4 address.
      example:
        subnet:
        - address: address
          prefix: prefix
        - address: address
          prefix: prefix
        ipAddress:
        - publicIpAddress: publicIpAddress
          privateIpAddress: privateIpAddress
        - publicIpAddress: publicIpAddress
          privateIpAddress: privateIpAddress
      properties:
        ipAddress:
          description: This is the IP address
          items:
            $ref: '#/components/schemas/Ipv4Properties'
          type: array
        subnet:
          description: This is the subnet
          items:
            $ref: '#/components/schemas/SubnetProperties'
          type: array
      type: object
    NetworkInterface_ipv6:
      description: This contains the IPv6 address.
      example:
        ipAddress:
        - privateIpAddress: privateIpAddress
        - privateIpAddress: privateIpAddress
      properties:
        ipAddress:
          description: This is the IP address
          items:
            $ref: '#/components/schemas/Ipv6Properties'
          type: array
      type: object
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
      type: oauth2
x-original-swagger-version: "2.0"

