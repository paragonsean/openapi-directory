# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.network_interface import NetworkInterface
from openapi_server import util


class Network(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, interface: List[NetworkInterface]=None):
        """Network - a model defined in OpenAPI

        :param interface: The interface of this Network.
        """
        self.openapi_types = {
            'interface': List[NetworkInterface]
        }

        self.attribute_map = {
            'interface': 'interface'
        }

        self._interface = interface

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Network':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Network of this Network.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def interface(self):
        """Gets the interface of this Network.

        This contains data about the network interface.

        :return: The interface of this Network.
        :rtype: List[NetworkInterface]
        """
        return self._interface

    @interface.setter
    def interface(self, interface):
        """Sets the interface of this Network.

        This contains data about the network interface.

        :param interface: The interface of this Network.
        :type interface: List[NetworkInterface]
        """

        self._interface = interface
