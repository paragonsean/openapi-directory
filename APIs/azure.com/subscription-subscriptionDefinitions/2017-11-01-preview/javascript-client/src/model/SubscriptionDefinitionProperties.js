/**
 * SubscriptionDefinitionsClient
 * Subscription definitions client provides an interface to create, modify and retrieve azure subscriptions programmatically.
 *
 * The version of the OpenAPI document: 2017-11-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SubscriptionDefinitionProperties model module.
 * @module model/SubscriptionDefinitionProperties
 * @version 2017-11-01-preview
 */
class SubscriptionDefinitionProperties {
    /**
     * Constructs a new <code>SubscriptionDefinitionProperties</code>.
     * The subscription definition properties.
     * @alias module:model/SubscriptionDefinitionProperties
     */
    constructor() { 
        
        SubscriptionDefinitionProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SubscriptionDefinitionProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SubscriptionDefinitionProperties} obj Optional instance to populate.
     * @return {module:model/SubscriptionDefinitionProperties} The populated <code>SubscriptionDefinitionProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SubscriptionDefinitionProperties();

            if (data.hasOwnProperty('etag')) {
                obj['etag'] = ApiClient.convertToType(data['etag'], 'String');
            }
            if (data.hasOwnProperty('offerType')) {
                obj['offerType'] = ApiClient.convertToType(data['offerType'], 'String');
            }
            if (data.hasOwnProperty('subscriptionDisplayName')) {
                obj['subscriptionDisplayName'] = ApiClient.convertToType(data['subscriptionDisplayName'], 'String');
            }
            if (data.hasOwnProperty('subscriptionId')) {
                obj['subscriptionId'] = ApiClient.convertToType(data['subscriptionId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SubscriptionDefinitionProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SubscriptionDefinitionProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['etag'] && !(typeof data['etag'] === 'string' || data['etag'] instanceof String)) {
            throw new Error("Expected the field `etag` to be a primitive type in the JSON string but got " + data['etag']);
        }
        // ensure the json data is a string
        if (data['offerType'] && !(typeof data['offerType'] === 'string' || data['offerType'] instanceof String)) {
            throw new Error("Expected the field `offerType` to be a primitive type in the JSON string but got " + data['offerType']);
        }
        // ensure the json data is a string
        if (data['subscriptionDisplayName'] && !(typeof data['subscriptionDisplayName'] === 'string' || data['subscriptionDisplayName'] instanceof String)) {
            throw new Error("Expected the field `subscriptionDisplayName` to be a primitive type in the JSON string but got " + data['subscriptionDisplayName']);
        }
        // ensure the json data is a string
        if (data['subscriptionId'] && !(typeof data['subscriptionId'] === 'string' || data['subscriptionId'] instanceof String)) {
            throw new Error("Expected the field `subscriptionId` to be a primitive type in the JSON string but got " + data['subscriptionId']);
        }

        return true;
    }


}



/**
 * The etag the subscription definition.
 * @member {String} etag
 */
SubscriptionDefinitionProperties.prototype['etag'] = undefined;

/**
 * The offer type of the subscription. For example, MS-AZR-0017P (EnterpriseAgreement) and MS-AZR-0148P (EnterpriseAgreement devTest) are available.
 * @member {String} offerType
 */
SubscriptionDefinitionProperties.prototype['offerType'] = undefined;

/**
 * The display name of the subscription.
 * @member {String} subscriptionDisplayName
 */
SubscriptionDefinitionProperties.prototype['subscriptionDisplayName'] = undefined;

/**
 * The ID of the subscription.
 * @member {String} subscriptionId
 */
SubscriptionDefinitionProperties.prototype['subscriptionId'] = undefined;






export default SubscriptionDefinitionProperties;

