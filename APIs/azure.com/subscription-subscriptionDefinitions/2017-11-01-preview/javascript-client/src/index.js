/**
 * SubscriptionDefinitionsClient
 * Subscription definitions client provides an interface to create, modify and retrieve azure subscriptions programmatically.
 *
 * The version of the OpenAPI document: 2017-11-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import ErrorResponse from './model/ErrorResponse';
import Operation from './model/Operation';
import OperationDisplay from './model/OperationDisplay';
import OperationListResult from './model/OperationListResult';
import SubscriptionDefinition from './model/SubscriptionDefinition';
import SubscriptionDefinitionList from './model/SubscriptionDefinitionList';
import SubscriptionDefinitionProperties from './model/SubscriptionDefinitionProperties';
import SubscriptionDefinitionsApi from './api/SubscriptionDefinitionsApi';


/**
* Subscription definitions client provides an interface to create, modify and retrieve azure subscriptions programmatically..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var SubscriptionDefinitionsClient = require('index'); // See note below*.
* var xxxSvc = new SubscriptionDefinitionsClient.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new SubscriptionDefinitionsClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new SubscriptionDefinitionsClient.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new SubscriptionDefinitionsClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2017-11-01-preview
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The ErrorResponse model constructor.
     * @property {module:model/ErrorResponse}
     */
    ErrorResponse,

    /**
     * The Operation model constructor.
     * @property {module:model/Operation}
     */
    Operation,

    /**
     * The OperationDisplay model constructor.
     * @property {module:model/OperationDisplay}
     */
    OperationDisplay,

    /**
     * The OperationListResult model constructor.
     * @property {module:model/OperationListResult}
     */
    OperationListResult,

    /**
     * The SubscriptionDefinition model constructor.
     * @property {module:model/SubscriptionDefinition}
     */
    SubscriptionDefinition,

    /**
     * The SubscriptionDefinitionList model constructor.
     * @property {module:model/SubscriptionDefinitionList}
     */
    SubscriptionDefinitionList,

    /**
     * The SubscriptionDefinitionProperties model constructor.
     * @property {module:model/SubscriptionDefinitionProperties}
     */
    SubscriptionDefinitionProperties,

    /**
    * The SubscriptionDefinitionsApi service constructor.
    * @property {module:api/SubscriptionDefinitionsApi}
    */
    SubscriptionDefinitionsApi
};
