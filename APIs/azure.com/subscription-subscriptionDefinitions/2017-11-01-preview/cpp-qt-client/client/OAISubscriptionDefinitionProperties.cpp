/**
 * SubscriptionDefinitionsClient
 * Subscription definitions client provides an interface to create, modify and retrieve azure subscriptions programmatically.
 *
 * The version of the OpenAPI document: 2017-11-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISubscriptionDefinitionProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISubscriptionDefinitionProperties::OAISubscriptionDefinitionProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISubscriptionDefinitionProperties::OAISubscriptionDefinitionProperties() {
    this->initializeModel();
}

OAISubscriptionDefinitionProperties::~OAISubscriptionDefinitionProperties() {}

void OAISubscriptionDefinitionProperties::initializeModel() {

    m_etag_isSet = false;
    m_etag_isValid = false;

    m_offer_type_isSet = false;
    m_offer_type_isValid = false;

    m_subscription_display_name_isSet = false;
    m_subscription_display_name_isValid = false;

    m_subscription_id_isSet = false;
    m_subscription_id_isValid = false;
}

void OAISubscriptionDefinitionProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISubscriptionDefinitionProperties::fromJsonObject(QJsonObject json) {

    m_etag_isValid = ::OpenAPI::fromJsonValue(m_etag, json[QString("etag")]);
    m_etag_isSet = !json[QString("etag")].isNull() && m_etag_isValid;

    m_offer_type_isValid = ::OpenAPI::fromJsonValue(m_offer_type, json[QString("offerType")]);
    m_offer_type_isSet = !json[QString("offerType")].isNull() && m_offer_type_isValid;

    m_subscription_display_name_isValid = ::OpenAPI::fromJsonValue(m_subscription_display_name, json[QString("subscriptionDisplayName")]);
    m_subscription_display_name_isSet = !json[QString("subscriptionDisplayName")].isNull() && m_subscription_display_name_isValid;

    m_subscription_id_isValid = ::OpenAPI::fromJsonValue(m_subscription_id, json[QString("subscriptionId")]);
    m_subscription_id_isSet = !json[QString("subscriptionId")].isNull() && m_subscription_id_isValid;
}

QString OAISubscriptionDefinitionProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISubscriptionDefinitionProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_etag_isSet) {
        obj.insert(QString("etag"), ::OpenAPI::toJsonValue(m_etag));
    }
    if (m_offer_type_isSet) {
        obj.insert(QString("offerType"), ::OpenAPI::toJsonValue(m_offer_type));
    }
    if (m_subscription_display_name_isSet) {
        obj.insert(QString("subscriptionDisplayName"), ::OpenAPI::toJsonValue(m_subscription_display_name));
    }
    if (m_subscription_id_isSet) {
        obj.insert(QString("subscriptionId"), ::OpenAPI::toJsonValue(m_subscription_id));
    }
    return obj;
}

QString OAISubscriptionDefinitionProperties::getEtag() const {
    return m_etag;
}
void OAISubscriptionDefinitionProperties::setEtag(const QString &etag) {
    m_etag = etag;
    m_etag_isSet = true;
}

bool OAISubscriptionDefinitionProperties::is_etag_Set() const{
    return m_etag_isSet;
}

bool OAISubscriptionDefinitionProperties::is_etag_Valid() const{
    return m_etag_isValid;
}

QString OAISubscriptionDefinitionProperties::getOfferType() const {
    return m_offer_type;
}
void OAISubscriptionDefinitionProperties::setOfferType(const QString &offer_type) {
    m_offer_type = offer_type;
    m_offer_type_isSet = true;
}

bool OAISubscriptionDefinitionProperties::is_offer_type_Set() const{
    return m_offer_type_isSet;
}

bool OAISubscriptionDefinitionProperties::is_offer_type_Valid() const{
    return m_offer_type_isValid;
}

QString OAISubscriptionDefinitionProperties::getSubscriptionDisplayName() const {
    return m_subscription_display_name;
}
void OAISubscriptionDefinitionProperties::setSubscriptionDisplayName(const QString &subscription_display_name) {
    m_subscription_display_name = subscription_display_name;
    m_subscription_display_name_isSet = true;
}

bool OAISubscriptionDefinitionProperties::is_subscription_display_name_Set() const{
    return m_subscription_display_name_isSet;
}

bool OAISubscriptionDefinitionProperties::is_subscription_display_name_Valid() const{
    return m_subscription_display_name_isValid;
}

QString OAISubscriptionDefinitionProperties::getSubscriptionId() const {
    return m_subscription_id;
}
void OAISubscriptionDefinitionProperties::setSubscriptionId(const QString &subscription_id) {
    m_subscription_id = subscription_id;
    m_subscription_id_isSet = true;
}

bool OAISubscriptionDefinitionProperties::is_subscription_id_Set() const{
    return m_subscription_id_isSet;
}

bool OAISubscriptionDefinitionProperties::is_subscription_id_Valid() const{
    return m_subscription_id_isValid;
}

bool OAISubscriptionDefinitionProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_etag_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_offer_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_subscription_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_subscription_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISubscriptionDefinitionProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
