/**
 * ContainerServiceClient
 * The Container Service Client.
 *
 * The version of the OpenAPI document: 2018-03-31
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ManagedClusterServicePrincipalProfile model module.
 * @module model/ManagedClusterServicePrincipalProfile
 * @version 2018-03-31
 */
class ManagedClusterServicePrincipalProfile {
    /**
     * Constructs a new <code>ManagedClusterServicePrincipalProfile</code>.
     * Information about a service principal identity for the cluster to use for manipulating Azure APIs.
     * @alias module:model/ManagedClusterServicePrincipalProfile
     * @param clientId {String} The ID for the service principal.
     */
    constructor(clientId) { 
        
        ManagedClusterServicePrincipalProfile.initialize(this, clientId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, clientId) { 
        obj['clientId'] = clientId;
    }

    /**
     * Constructs a <code>ManagedClusterServicePrincipalProfile</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ManagedClusterServicePrincipalProfile} obj Optional instance to populate.
     * @return {module:model/ManagedClusterServicePrincipalProfile} The populated <code>ManagedClusterServicePrincipalProfile</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ManagedClusterServicePrincipalProfile();

            if (data.hasOwnProperty('clientId')) {
                obj['clientId'] = ApiClient.convertToType(data['clientId'], 'String');
            }
            if (data.hasOwnProperty('secret')) {
                obj['secret'] = ApiClient.convertToType(data['secret'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ManagedClusterServicePrincipalProfile</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ManagedClusterServicePrincipalProfile</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ManagedClusterServicePrincipalProfile.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['clientId'] && !(typeof data['clientId'] === 'string' || data['clientId'] instanceof String)) {
            throw new Error("Expected the field `clientId` to be a primitive type in the JSON string but got " + data['clientId']);
        }
        // ensure the json data is a string
        if (data['secret'] && !(typeof data['secret'] === 'string' || data['secret'] instanceof String)) {
            throw new Error("Expected the field `secret` to be a primitive type in the JSON string but got " + data['secret']);
        }

        return true;
    }


}

ManagedClusterServicePrincipalProfile.RequiredProperties = ["clientId"];

/**
 * The ID for the service principal.
 * @member {String} clientId
 */
ManagedClusterServicePrincipalProfile.prototype['clientId'] = undefined;

/**
 * The secret password associated with the service principal in plain text.
 * @member {String} secret
 */
ManagedClusterServicePrincipalProfile.prototype['secret'] = undefined;






export default ManagedClusterServicePrincipalProfile;

