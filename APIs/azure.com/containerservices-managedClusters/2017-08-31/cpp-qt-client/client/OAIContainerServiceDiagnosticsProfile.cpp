/**
 * ContainerServiceClient
 * The Container Service Client.
 *
 * The version of the OpenAPI document: 2017-08-31
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIContainerServiceDiagnosticsProfile.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIContainerServiceDiagnosticsProfile::OAIContainerServiceDiagnosticsProfile(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIContainerServiceDiagnosticsProfile::OAIContainerServiceDiagnosticsProfile() {
    this->initializeModel();
}

OAIContainerServiceDiagnosticsProfile::~OAIContainerServiceDiagnosticsProfile() {}

void OAIContainerServiceDiagnosticsProfile::initializeModel() {

    m_vm_diagnostics_isSet = false;
    m_vm_diagnostics_isValid = false;
}

void OAIContainerServiceDiagnosticsProfile::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIContainerServiceDiagnosticsProfile::fromJsonObject(QJsonObject json) {

    m_vm_diagnostics_isValid = ::OpenAPI::fromJsonValue(m_vm_diagnostics, json[QString("vmDiagnostics")]);
    m_vm_diagnostics_isSet = !json[QString("vmDiagnostics")].isNull() && m_vm_diagnostics_isValid;
}

QString OAIContainerServiceDiagnosticsProfile::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIContainerServiceDiagnosticsProfile::asJsonObject() const {
    QJsonObject obj;
    if (m_vm_diagnostics.isSet()) {
        obj.insert(QString("vmDiagnostics"), ::OpenAPI::toJsonValue(m_vm_diagnostics));
    }
    return obj;
}

OAIContainerServiceVMDiagnostics OAIContainerServiceDiagnosticsProfile::getVmDiagnostics() const {
    return m_vm_diagnostics;
}
void OAIContainerServiceDiagnosticsProfile::setVmDiagnostics(const OAIContainerServiceVMDiagnostics &vm_diagnostics) {
    m_vm_diagnostics = vm_diagnostics;
    m_vm_diagnostics_isSet = true;
}

bool OAIContainerServiceDiagnosticsProfile::is_vm_diagnostics_Set() const{
    return m_vm_diagnostics_isSet;
}

bool OAIContainerServiceDiagnosticsProfile::is_vm_diagnostics_Valid() const{
    return m_vm_diagnostics_isValid;
}

bool OAIContainerServiceDiagnosticsProfile::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_vm_diagnostics.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIContainerServiceDiagnosticsProfile::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_vm_diagnostics_isValid && true;
}

} // namespace OpenAPI
