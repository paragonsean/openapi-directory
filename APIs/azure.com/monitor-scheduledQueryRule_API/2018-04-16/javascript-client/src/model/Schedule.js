/**
 * Microsoft Insights
 * Azure Monitor client to create/update/delete Scheduled Query Rules
 *
 * The version of the OpenAPI document: 2018-04-16
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Schedule model module.
 * @module model/Schedule
 * @version 2018-04-16
 */
class Schedule {
    /**
     * Constructs a new <code>Schedule</code>.
     * Defines how often to run the search and the time interval.
     * @alias module:model/Schedule
     * @param frequencyInMinutes {Number} frequency (in minutes) at which rule condition should be evaluated.
     * @param timeWindowInMinutes {Number} Time window for which data needs to be fetched for query (should be greater than or equal to frequencyInMinutes).
     */
    constructor(frequencyInMinutes, timeWindowInMinutes) { 
        
        Schedule.initialize(this, frequencyInMinutes, timeWindowInMinutes);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, frequencyInMinutes, timeWindowInMinutes) { 
        obj['frequencyInMinutes'] = frequencyInMinutes;
        obj['timeWindowInMinutes'] = timeWindowInMinutes;
    }

    /**
     * Constructs a <code>Schedule</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Schedule} obj Optional instance to populate.
     * @return {module:model/Schedule} The populated <code>Schedule</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Schedule();

            if (data.hasOwnProperty('frequencyInMinutes')) {
                obj['frequencyInMinutes'] = ApiClient.convertToType(data['frequencyInMinutes'], 'Number');
            }
            if (data.hasOwnProperty('timeWindowInMinutes')) {
                obj['timeWindowInMinutes'] = ApiClient.convertToType(data['timeWindowInMinutes'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Schedule</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Schedule</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Schedule.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

Schedule.RequiredProperties = ["frequencyInMinutes", "timeWindowInMinutes"];

/**
 * frequency (in minutes) at which rule condition should be evaluated.
 * @member {Number} frequencyInMinutes
 */
Schedule.prototype['frequencyInMinutes'] = undefined;

/**
 * Time window for which data needs to be fetched for query (should be greater than or equal to frequencyInMinutes).
 * @member {Number} timeWindowInMinutes
 */
Schedule.prototype['timeWindowInMinutes'] = undefined;






export default Schedule;

