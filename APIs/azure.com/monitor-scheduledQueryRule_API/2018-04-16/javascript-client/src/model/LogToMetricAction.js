/**
 * Microsoft Insights
 * Azure Monitor client to create/update/delete Scheduled Query Rules
 *
 * The version of the OpenAPI document: 2018-04-16
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Action from './Action';
import Criteria from './Criteria';

/**
 * The LogToMetricAction model module.
 * @module model/LogToMetricAction
 * @version 2018-04-16
 */
class LogToMetricAction {
    /**
     * Constructs a new <code>LogToMetricAction</code>.
     * Specify action need to be taken when rule type is converting log to metric
     * @alias module:model/LogToMetricAction
     * @extends module:model/Action
     * @implements module:model/Action
     * @param odataType {String} Specifies the action. Supported values - AlertingAction, LogToMetricAction
     */
    constructor(odataType) { 
        Action.initialize(this, odataType);
        LogToMetricAction.initialize(this, odataType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, odataType) { 
        obj['criteria'] = criteria;
    }

    /**
     * Constructs a <code>LogToMetricAction</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LogToMetricAction} obj Optional instance to populate.
     * @return {module:model/LogToMetricAction} The populated <code>LogToMetricAction</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LogToMetricAction();
            Action.constructFromObject(data, obj);
            Action.constructFromObject(data, obj);

            if (data.hasOwnProperty('criteria')) {
                obj['criteria'] = ApiClient.convertToType(data['criteria'], [Criteria]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LogToMetricAction</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LogToMetricAction</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of LogToMetricAction.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['criteria']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['criteria'])) {
                throw new Error("Expected the field `criteria` to be an array in the JSON data but got " + data['criteria']);
            }
            // validate the optional field `criteria` (array)
            for (const item of data['criteria']) {
                Criteria.validateJSON(item);
            };
        }

        return true;
    }


}

LogToMetricAction.RequiredProperties = ["criteria", "odata.type"];

/**
 * Criteria of Metric
 * @member {Array.<module:model/Criteria>} criteria
 */
LogToMetricAction.prototype['criteria'] = undefined;


// Implement Action interface:
/**
 * Specifies the action. Supported values - AlertingAction, LogToMetricAction
 * @member {String} odata.type
 */
Action.prototype['odata.type'] = undefined;




export default LogToMetricAction;

