/**
 * Microsoft Insights
 * Azure Monitor client to create/update/delete Scheduled Query Rules
 *
 * The version of the OpenAPI document: 2018-04-16
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAlertingAction.h
 *
 * Specify action need to be taken when rule type is Alert
 */

#ifndef OAIAlertingAction_H
#define OAIAlertingAction_H

#include <QJsonObject>

#include "OAIAction.h"
#include "OAIAlertSeverity.h"
#include "OAIAzNsActionGroup.h"
#include "OAITriggerCondition.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAzNsActionGroup;
class OAITriggerCondition;

class OAIAlertingAction : public OAIObject {
public:
    OAIAlertingAction();
    OAIAlertingAction(QString json);
    ~OAIAlertingAction() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAzNsActionGroup getAznsAction() const;
    void setAznsAction(const OAIAzNsActionGroup &azns_action);
    bool is_azns_action_Set() const;
    bool is_azns_action_Valid() const;

    OAIAlertSeverity getSeverity() const;
    void setSeverity(const OAIAlertSeverity &severity);
    bool is_severity_Set() const;
    bool is_severity_Valid() const;

    qint32 getThrottlingInMin() const;
    void setThrottlingInMin(const qint32 &throttling_in_min);
    bool is_throttling_in_min_Set() const;
    bool is_throttling_in_min_Valid() const;

    OAITriggerCondition getTrigger() const;
    void setTrigger(const OAITriggerCondition &trigger);
    bool is_trigger_Set() const;
    bool is_trigger_Valid() const;

    QString getOdataType() const;
    void setOdataType(const QString &odata_type);
    bool is_odata_type_Set() const;
    bool is_odata_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAzNsActionGroup m_azns_action;
    bool m_azns_action_isSet;
    bool m_azns_action_isValid;

    OAIAlertSeverity m_severity;
    bool m_severity_isSet;
    bool m_severity_isValid;

    qint32 m_throttling_in_min;
    bool m_throttling_in_min_isSet;
    bool m_throttling_in_min_isValid;

    OAITriggerCondition m_trigger;
    bool m_trigger_isSet;
    bool m_trigger_isValid;

    QString m_odata_type;
    bool m_odata_type_isSet;
    bool m_odata_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAlertingAction)

#endif // OAIAlertingAction_H
