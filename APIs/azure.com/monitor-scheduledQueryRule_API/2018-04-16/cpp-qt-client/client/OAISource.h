/**
 * Microsoft Insights
 * Azure Monitor client to create/update/delete Scheduled Query Rules
 *
 * The version of the OpenAPI document: 2018-04-16
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISource.h
 *
 * Specifies the log search query.
 */

#ifndef OAISource_H
#define OAISource_H

#include <QJsonObject>

#include "OAIQueryType.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISource : public OAIObject {
public:
    OAISource();
    OAISource(QString json);
    ~OAISource() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getAuthorizedResources() const;
    void setAuthorizedResources(const QList<QString> &authorized_resources);
    bool is_authorized_resources_Set() const;
    bool is_authorized_resources_Valid() const;

    QString getDataSourceId() const;
    void setDataSourceId(const QString &data_source_id);
    bool is_data_source_id_Set() const;
    bool is_data_source_id_Valid() const;

    QString getQuery() const;
    void setQuery(const QString &query);
    bool is_query_Set() const;
    bool is_query_Valid() const;

    OAIQueryType getQueryType() const;
    void setQueryType(const OAIQueryType &query_type);
    bool is_query_type_Set() const;
    bool is_query_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_authorized_resources;
    bool m_authorized_resources_isSet;
    bool m_authorized_resources_isValid;

    QString m_data_source_id;
    bool m_data_source_id_isSet;
    bool m_data_source_id_isValid;

    QString m_query;
    bool m_query_isSet;
    bool m_query_isValid;

    OAIQueryType m_query_type;
    bool m_query_type_isSet;
    bool m_query_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISource)

#endif // OAISource_H
