/**
 * Microsoft Insights
 * Azure Monitor client to create/update/delete Scheduled Query Rules
 *
 * The version of the OpenAPI document: 2018-04-16
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILogToMetricAction.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILogToMetricAction::OAILogToMetricAction(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILogToMetricAction::OAILogToMetricAction() {
    this->initializeModel();
}

OAILogToMetricAction::~OAILogToMetricAction() {}

void OAILogToMetricAction::initializeModel() {

    m_criteria_isSet = false;
    m_criteria_isValid = false;

    m_odata_type_isSet = false;
    m_odata_type_isValid = false;
}

void OAILogToMetricAction::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILogToMetricAction::fromJsonObject(QJsonObject json) {

    m_criteria_isValid = ::OpenAPI::fromJsonValue(m_criteria, json[QString("criteria")]);
    m_criteria_isSet = !json[QString("criteria")].isNull() && m_criteria_isValid;

    m_odata_type_isValid = ::OpenAPI::fromJsonValue(m_odata_type, json[QString("odata.type")]);
    m_odata_type_isSet = !json[QString("odata.type")].isNull() && m_odata_type_isValid;
}

QString OAILogToMetricAction::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILogToMetricAction::asJsonObject() const {
    QJsonObject obj;
    if (m_criteria.size() > 0) {
        obj.insert(QString("criteria"), ::OpenAPI::toJsonValue(m_criteria));
    }
    if (m_odata_type_isSet) {
        obj.insert(QString("odata.type"), ::OpenAPI::toJsonValue(m_odata_type));
    }
    return obj;
}

QList<OAICriteria> OAILogToMetricAction::getCriteria() const {
    return m_criteria;
}
void OAILogToMetricAction::setCriteria(const QList<OAICriteria> &criteria) {
    m_criteria = criteria;
    m_criteria_isSet = true;
}

bool OAILogToMetricAction::is_criteria_Set() const{
    return m_criteria_isSet;
}

bool OAILogToMetricAction::is_criteria_Valid() const{
    return m_criteria_isValid;
}

QString OAILogToMetricAction::getOdataType() const {
    return m_odata_type;
}
void OAILogToMetricAction::setOdataType(const QString &odata_type) {
    m_odata_type = odata_type;
    m_odata_type_isSet = true;
}

bool OAILogToMetricAction::is_odata_type_Set() const{
    return m_odata_type_isSet;
}

bool OAILogToMetricAction::is_odata_type_Valid() const{
    return m_odata_type_isValid;
}

bool OAILogToMetricAction::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_criteria.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_odata_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILogToMetricAction::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_criteria_isValid && m_odata_type_isValid && true;
}

} // namespace OpenAPI
