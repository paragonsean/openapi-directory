/**
 * Microsoft Insights
 * Azure Monitor client to create/update/delete Scheduled Query Rules
 *
 * The version of the OpenAPI document: 2018-04-16
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILogMetricTrigger.h
 *
 * A log metrics trigger descriptor.
 */

#ifndef OAILogMetricTrigger_H
#define OAILogMetricTrigger_H

#include <QJsonObject>

#include "OAIConditionalOperator.h"
#include "OAIMetricTriggerType.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAILogMetricTrigger : public OAIObject {
public:
    OAILogMetricTrigger();
    OAILogMetricTrigger(QString json);
    ~OAILogMetricTrigger() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getMetricColumn() const;
    void setMetricColumn(const QString &metric_column);
    bool is_metric_column_Set() const;
    bool is_metric_column_Valid() const;

    OAIMetricTriggerType getMetricTriggerType() const;
    void setMetricTriggerType(const OAIMetricTriggerType &metric_trigger_type);
    bool is_metric_trigger_type_Set() const;
    bool is_metric_trigger_type_Valid() const;

    double getThreshold() const;
    void setThreshold(const double &threshold);
    bool is_threshold_Set() const;
    bool is_threshold_Valid() const;

    OAIConditionalOperator getThresholdOperator() const;
    void setThresholdOperator(const OAIConditionalOperator &threshold_operator);
    bool is_threshold_operator_Set() const;
    bool is_threshold_operator_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_metric_column;
    bool m_metric_column_isSet;
    bool m_metric_column_isValid;

    OAIMetricTriggerType m_metric_trigger_type;
    bool m_metric_trigger_type_isSet;
    bool m_metric_trigger_type_isValid;

    double m_threshold;
    bool m_threshold_isSet;
    bool m_threshold_isValid;

    OAIConditionalOperator m_threshold_operator;
    bool m_threshold_operator_isSet;
    bool m_threshold_operator_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILogMetricTrigger)

#endif // OAILogMetricTrigger_H
