/**
 * Microsoft Insights
 * Azure Monitor client to create/update/delete Scheduled Query Rules
 *
 * The version of the OpenAPI document: 2018-04-16
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICriteria.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICriteria::OAICriteria(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICriteria::OAICriteria() {
    this->initializeModel();
}

OAICriteria::~OAICriteria() {}

void OAICriteria::initializeModel() {

    m_dimensions_isSet = false;
    m_dimensions_isValid = false;

    m_metric_name_isSet = false;
    m_metric_name_isValid = false;
}

void OAICriteria::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICriteria::fromJsonObject(QJsonObject json) {

    m_dimensions_isValid = ::OpenAPI::fromJsonValue(m_dimensions, json[QString("dimensions")]);
    m_dimensions_isSet = !json[QString("dimensions")].isNull() && m_dimensions_isValid;

    m_metric_name_isValid = ::OpenAPI::fromJsonValue(m_metric_name, json[QString("metricName")]);
    m_metric_name_isSet = !json[QString("metricName")].isNull() && m_metric_name_isValid;
}

QString OAICriteria::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICriteria::asJsonObject() const {
    QJsonObject obj;
    if (m_dimensions.size() > 0) {
        obj.insert(QString("dimensions"), ::OpenAPI::toJsonValue(m_dimensions));
    }
    if (m_metric_name_isSet) {
        obj.insert(QString("metricName"), ::OpenAPI::toJsonValue(m_metric_name));
    }
    return obj;
}

QList<OAIDimension> OAICriteria::getDimensions() const {
    return m_dimensions;
}
void OAICriteria::setDimensions(const QList<OAIDimension> &dimensions) {
    m_dimensions = dimensions;
    m_dimensions_isSet = true;
}

bool OAICriteria::is_dimensions_Set() const{
    return m_dimensions_isSet;
}

bool OAICriteria::is_dimensions_Valid() const{
    return m_dimensions_isValid;
}

QString OAICriteria::getMetricName() const {
    return m_metric_name;
}
void OAICriteria::setMetricName(const QString &metric_name) {
    m_metric_name = metric_name;
    m_metric_name_isSet = true;
}

bool OAICriteria::is_metric_name_Set() const{
    return m_metric_name_isSet;
}

bool OAICriteria::is_metric_name_Valid() const{
    return m_metric_name_isValid;
}

bool OAICriteria::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_dimensions.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_metric_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICriteria::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_metric_name_isValid && true;
}

} // namespace OpenAPI
