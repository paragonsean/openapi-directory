/**
 * Microsoft Insights
 * Azure Monitor client to create/update/delete Scheduled Query Rules
 *
 * The version of the OpenAPI document: 2018-04-16
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIConditionalOperator.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIConditionalOperator::OAIConditionalOperator(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIConditionalOperator::OAIConditionalOperator() {
    this->initializeModel();
}

OAIConditionalOperator::~OAIConditionalOperator() {}

void OAIConditionalOperator::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIConditionalOperator::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIConditionalOperator::fromJson(QString jsonString) {
    
    if ( jsonString.compare("GreaterThan", Qt::CaseInsensitive) == 0) {
        m_value = eOAIConditionalOperator::GREATERTHAN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("LessThan", Qt::CaseInsensitive) == 0) {
        m_value = eOAIConditionalOperator::LESSTHAN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Equal", Qt::CaseInsensitive) == 0) {
        m_value = eOAIConditionalOperator::EQUAL;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIConditionalOperator::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIConditionalOperator::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIConditionalOperator::GREATERTHAN:
            val = "GreaterThan";
            break;
        case eOAIConditionalOperator::LESSTHAN:
            val = "LessThan";
            break;
        case eOAIConditionalOperator::EQUAL:
            val = "Equal";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIConditionalOperator::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIConditionalOperator::eOAIConditionalOperator OAIConditionalOperator::getValue() const {
    return m_value;
}

void OAIConditionalOperator::setValue(const OAIConditionalOperator::eOAIConditionalOperator& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIConditionalOperator::isSet() const {
    
    return m_value_isSet;
}

bool OAIConditionalOperator::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
