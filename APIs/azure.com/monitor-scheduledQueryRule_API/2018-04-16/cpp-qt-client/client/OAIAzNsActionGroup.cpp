/**
 * Microsoft Insights
 * Azure Monitor client to create/update/delete Scheduled Query Rules
 *
 * The version of the OpenAPI document: 2018-04-16
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAzNsActionGroup.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAzNsActionGroup::OAIAzNsActionGroup(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAzNsActionGroup::OAIAzNsActionGroup() {
    this->initializeModel();
}

OAIAzNsActionGroup::~OAIAzNsActionGroup() {}

void OAIAzNsActionGroup::initializeModel() {

    m_action_group_isSet = false;
    m_action_group_isValid = false;

    m_custom_webhook_payload_isSet = false;
    m_custom_webhook_payload_isValid = false;

    m_email_subject_isSet = false;
    m_email_subject_isValid = false;
}

void OAIAzNsActionGroup::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAzNsActionGroup::fromJsonObject(QJsonObject json) {

    m_action_group_isValid = ::OpenAPI::fromJsonValue(m_action_group, json[QString("actionGroup")]);
    m_action_group_isSet = !json[QString("actionGroup")].isNull() && m_action_group_isValid;

    m_custom_webhook_payload_isValid = ::OpenAPI::fromJsonValue(m_custom_webhook_payload, json[QString("customWebhookPayload")]);
    m_custom_webhook_payload_isSet = !json[QString("customWebhookPayload")].isNull() && m_custom_webhook_payload_isValid;

    m_email_subject_isValid = ::OpenAPI::fromJsonValue(m_email_subject, json[QString("emailSubject")]);
    m_email_subject_isSet = !json[QString("emailSubject")].isNull() && m_email_subject_isValid;
}

QString OAIAzNsActionGroup::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAzNsActionGroup::asJsonObject() const {
    QJsonObject obj;
    if (m_action_group.size() > 0) {
        obj.insert(QString("actionGroup"), ::OpenAPI::toJsonValue(m_action_group));
    }
    if (m_custom_webhook_payload_isSet) {
        obj.insert(QString("customWebhookPayload"), ::OpenAPI::toJsonValue(m_custom_webhook_payload));
    }
    if (m_email_subject_isSet) {
        obj.insert(QString("emailSubject"), ::OpenAPI::toJsonValue(m_email_subject));
    }
    return obj;
}

QList<QString> OAIAzNsActionGroup::getActionGroup() const {
    return m_action_group;
}
void OAIAzNsActionGroup::setActionGroup(const QList<QString> &action_group) {
    m_action_group = action_group;
    m_action_group_isSet = true;
}

bool OAIAzNsActionGroup::is_action_group_Set() const{
    return m_action_group_isSet;
}

bool OAIAzNsActionGroup::is_action_group_Valid() const{
    return m_action_group_isValid;
}

QString OAIAzNsActionGroup::getCustomWebhookPayload() const {
    return m_custom_webhook_payload;
}
void OAIAzNsActionGroup::setCustomWebhookPayload(const QString &custom_webhook_payload) {
    m_custom_webhook_payload = custom_webhook_payload;
    m_custom_webhook_payload_isSet = true;
}

bool OAIAzNsActionGroup::is_custom_webhook_payload_Set() const{
    return m_custom_webhook_payload_isSet;
}

bool OAIAzNsActionGroup::is_custom_webhook_payload_Valid() const{
    return m_custom_webhook_payload_isValid;
}

QString OAIAzNsActionGroup::getEmailSubject() const {
    return m_email_subject;
}
void OAIAzNsActionGroup::setEmailSubject(const QString &email_subject) {
    m_email_subject = email_subject;
    m_email_subject_isSet = true;
}

bool OAIAzNsActionGroup::is_email_subject_Set() const{
    return m_email_subject_isSet;
}

bool OAIAzNsActionGroup::is_email_subject_Valid() const{
    return m_email_subject_isValid;
}

bool OAIAzNsActionGroup::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_action_group.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_custom_webhook_payload_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_subject_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAzNsActionGroup::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
