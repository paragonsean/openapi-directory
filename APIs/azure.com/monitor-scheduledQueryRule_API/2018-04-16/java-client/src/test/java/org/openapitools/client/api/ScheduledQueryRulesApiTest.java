/*
 * Microsoft Insights
 * Azure Monitor client to create/update/delete Scheduled Query Rules
 *
 * The version of the OpenAPI document: 2018-04-16
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ErrorResponse;
import org.openapitools.client.model.LogSearchRuleResource;
import org.openapitools.client.model.LogSearchRuleResourceCollection;
import org.openapitools.client.model.LogSearchRuleResourcePatch;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ScheduledQueryRulesApi
 */
@Disabled
public class ScheduledQueryRulesApiTest {

    private final ScheduledQueryRulesApi api = new ScheduledQueryRulesApi();

    /**
     * Creates or updates an log search rule.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void scheduledQueryRulesCreateOrUpdateTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String ruleName = null;
        String apiVersion = null;
        LogSearchRuleResource parameters = null;
        LogSearchRuleResource response = api.scheduledQueryRulesCreateOrUpdate(subscriptionId, resourceGroupName, ruleName, apiVersion, parameters);
        // TODO: test validations
    }

    /**
     * Deletes a Log Search rule
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void scheduledQueryRulesDeleteTest() throws ApiException {
        String resourceGroupName = null;
        String ruleName = null;
        String apiVersion = null;
        String subscriptionId = null;
        api.scheduledQueryRulesDelete(resourceGroupName, ruleName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Gets an Log Search rule
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void scheduledQueryRulesGetTest() throws ApiException {
        String resourceGroupName = null;
        String ruleName = null;
        String apiVersion = null;
        String subscriptionId = null;
        LogSearchRuleResource response = api.scheduledQueryRulesGet(resourceGroupName, ruleName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * List the Log Search rules within a resource group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void scheduledQueryRulesListByResourceGroupTest() throws ApiException {
        String resourceGroupName = null;
        String apiVersion = null;
        String subscriptionId = null;
        String $filter = null;
        LogSearchRuleResourceCollection response = api.scheduledQueryRulesListByResourceGroup(resourceGroupName, apiVersion, subscriptionId, $filter);
        // TODO: test validations
    }

    /**
     * List the Log Search rules within a subscription group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void scheduledQueryRulesListBySubscriptionTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String $filter = null;
        LogSearchRuleResourceCollection response = api.scheduledQueryRulesListBySubscription(apiVersion, subscriptionId, $filter);
        // TODO: test validations
    }

    /**
     * Update log search Rule.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void scheduledQueryRulesUpdateTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String ruleName = null;
        String apiVersion = null;
        LogSearchRuleResourcePatch parameters = null;
        LogSearchRuleResource response = api.scheduledQueryRulesUpdate(subscriptionId, resourceGroupName, ruleName, apiVersion, parameters);
        // TODO: test validations
    }

}
