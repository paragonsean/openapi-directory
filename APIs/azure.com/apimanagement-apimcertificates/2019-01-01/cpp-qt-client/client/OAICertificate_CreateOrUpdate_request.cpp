/**
 * ApiManagementClient
 * Use these REST APIs for performing operations on Certificate entity in your Azure API Management deployment. Certificates can be used to setup mutual authentication with your Backend in API Management. For more information refer to [How to secure backend using Mutual Auth Certificate](https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-mutual-certificates).
 *
 * The version of the OpenAPI document: 2019-01-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICertificate_CreateOrUpdate_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICertificate_CreateOrUpdate_request::OAICertificate_CreateOrUpdate_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICertificate_CreateOrUpdate_request::OAICertificate_CreateOrUpdate_request() {
    this->initializeModel();
}

OAICertificate_CreateOrUpdate_request::~OAICertificate_CreateOrUpdate_request() {}

void OAICertificate_CreateOrUpdate_request::initializeModel() {

    m_properties_isSet = false;
    m_properties_isValid = false;
}

void OAICertificate_CreateOrUpdate_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICertificate_CreateOrUpdate_request::fromJsonObject(QJsonObject json) {

    m_properties_isValid = ::OpenAPI::fromJsonValue(m_properties, json[QString("properties")]);
    m_properties_isSet = !json[QString("properties")].isNull() && m_properties_isValid;
}

QString OAICertificate_CreateOrUpdate_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICertificate_CreateOrUpdate_request::asJsonObject() const {
    QJsonObject obj;
    if (m_properties.isSet()) {
        obj.insert(QString("properties"), ::OpenAPI::toJsonValue(m_properties));
    }
    return obj;
}

OAICertificate_CreateOrUpdate_request_properties OAICertificate_CreateOrUpdate_request::getProperties() const {
    return m_properties;
}
void OAICertificate_CreateOrUpdate_request::setProperties(const OAICertificate_CreateOrUpdate_request_properties &properties) {
    m_properties = properties;
    m_properties_isSet = true;
}

bool OAICertificate_CreateOrUpdate_request::is_properties_Set() const{
    return m_properties_isSet;
}

bool OAICertificate_CreateOrUpdate_request::is_properties_Valid() const{
    return m_properties_isValid;
}

bool OAICertificate_CreateOrUpdate_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_properties.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICertificate_CreateOrUpdate_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
