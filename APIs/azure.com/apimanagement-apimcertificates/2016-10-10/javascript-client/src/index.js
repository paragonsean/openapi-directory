/**
 * ApiManagementClient
 * Use these REST APIs for performing operations on Certificate entity in your Azure API Management deployment. Certificates can be used to setup mutual authentication with your Backend in API Management. For more information refer to [How to secure backend using Mutual Auth Certificate](https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-mutual-certificates).
 *
 * The version of the OpenAPI document: 2016-10-10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import CertificateCollection from './model/CertificateCollection';
import CertificateContract from './model/CertificateContract';
import CertificateCreateOrUpdateParameters from './model/CertificateCreateOrUpdateParameters';
import CertificatesListByServiceDefaultResponse from './model/CertificatesListByServiceDefaultResponse';
import CertificatesListByServiceDefaultResponseDetailsInner from './model/CertificatesListByServiceDefaultResponseDetailsInner';
import CertificatesApi from './api/CertificatesApi';


/**
* Use these REST APIs for performing operations on Certificate entity in your Azure API Management deployment. Certificates can be used to setup mutual authentication with your Backend in API Management. For more information refer to [How to secure backend using Mutual Auth Certificate](https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-mutual-certificates)..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var ApiManagementClient = require('index'); // See note below*.
* var xxxSvc = new ApiManagementClient.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new ApiManagementClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new ApiManagementClient.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new ApiManagementClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2016-10-10
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The CertificateCollection model constructor.
     * @property {module:model/CertificateCollection}
     */
    CertificateCollection,

    /**
     * The CertificateContract model constructor.
     * @property {module:model/CertificateContract}
     */
    CertificateContract,

    /**
     * The CertificateCreateOrUpdateParameters model constructor.
     * @property {module:model/CertificateCreateOrUpdateParameters}
     */
    CertificateCreateOrUpdateParameters,

    /**
     * The CertificatesListByServiceDefaultResponse model constructor.
     * @property {module:model/CertificatesListByServiceDefaultResponse}
     */
    CertificatesListByServiceDefaultResponse,

    /**
     * The CertificatesListByServiceDefaultResponseDetailsInner model constructor.
     * @property {module:model/CertificatesListByServiceDefaultResponseDetailsInner}
     */
    CertificatesListByServiceDefaultResponseDetailsInner,

    /**
    * The CertificatesApi service constructor.
    * @property {module:api/CertificatesApi}
    */
    CertificatesApi
};
