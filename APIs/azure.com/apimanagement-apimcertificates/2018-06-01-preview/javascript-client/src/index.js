/**
 * ApiManagementClient
 * Use these REST APIs for performing operations on Certificate entity in your Azure API Management deployment. Certificates can be used to setup mutual authentication with your Backend in API Management. For more information refer to [How to secure backend using Mutual Auth Certificate](https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-mutual-certificates).
 *
 * The version of the OpenAPI document: 2018-06-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import CertificateCreateOrUpdateRequest from './model/CertificateCreateOrUpdateRequest';
import CertificateCreateOrUpdateRequestProperties from './model/CertificateCreateOrUpdateRequestProperties';
import CertificateGet200Response from './model/CertificateGet200Response';
import CertificateListByService200Response from './model/CertificateListByService200Response';
import CertificateListByService200ResponseValueInner from './model/CertificateListByService200ResponseValueInner';
import CertificateListByService200ResponseValueInnerProperties from './model/CertificateListByService200ResponseValueInnerProperties';
import CertificateListByServiceDefaultResponse from './model/CertificateListByServiceDefaultResponse';
import CertificateListByServiceDefaultResponseError from './model/CertificateListByServiceDefaultResponseError';
import CertificateListByServiceDefaultResponseErrorDetailsInner from './model/CertificateListByServiceDefaultResponseErrorDetailsInner';
import CertificateApi from './api/CertificateApi';


/**
* Use these REST APIs for performing operations on Certificate entity in your Azure API Management deployment. Certificates can be used to setup mutual authentication with your Backend in API Management. For more information refer to [How to secure backend using Mutual Auth Certificate](https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-mutual-certificates)..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var ApiManagementClient = require('index'); // See note below*.
* var xxxSvc = new ApiManagementClient.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new ApiManagementClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new ApiManagementClient.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new ApiManagementClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2018-06-01-preview
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The CertificateCreateOrUpdateRequest model constructor.
     * @property {module:model/CertificateCreateOrUpdateRequest}
     */
    CertificateCreateOrUpdateRequest,

    /**
     * The CertificateCreateOrUpdateRequestProperties model constructor.
     * @property {module:model/CertificateCreateOrUpdateRequestProperties}
     */
    CertificateCreateOrUpdateRequestProperties,

    /**
     * The CertificateGet200Response model constructor.
     * @property {module:model/CertificateGet200Response}
     */
    CertificateGet200Response,

    /**
     * The CertificateListByService200Response model constructor.
     * @property {module:model/CertificateListByService200Response}
     */
    CertificateListByService200Response,

    /**
     * The CertificateListByService200ResponseValueInner model constructor.
     * @property {module:model/CertificateListByService200ResponseValueInner}
     */
    CertificateListByService200ResponseValueInner,

    /**
     * The CertificateListByService200ResponseValueInnerProperties model constructor.
     * @property {module:model/CertificateListByService200ResponseValueInnerProperties}
     */
    CertificateListByService200ResponseValueInnerProperties,

    /**
     * The CertificateListByServiceDefaultResponse model constructor.
     * @property {module:model/CertificateListByServiceDefaultResponse}
     */
    CertificateListByServiceDefaultResponse,

    /**
     * The CertificateListByServiceDefaultResponseError model constructor.
     * @property {module:model/CertificateListByServiceDefaultResponseError}
     */
    CertificateListByServiceDefaultResponseError,

    /**
     * The CertificateListByServiceDefaultResponseErrorDetailsInner model constructor.
     * @property {module:model/CertificateListByServiceDefaultResponseErrorDetailsInner}
     */
    CertificateListByServiceDefaultResponseErrorDetailsInner,

    /**
    * The CertificateApi service constructor.
    * @property {module:api/CertificateApi}
    */
    CertificateApi
};
