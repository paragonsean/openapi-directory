/**
 * ApiManagementClient
 * Use these REST APIs for performing operations on Certificate entity in your Azure API Management deployment. Certificates can be used to setup mutual authentication with your Backend in API Management. For more information refer to [How to secure backend using Mutual Auth Certificate](https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-mutual-certificates).
 *
 * The version of the OpenAPI document: 2017-03-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CertificateCreateOrUpdateProperties from './CertificateCreateOrUpdateProperties';

/**
 * The CertificateCreateOrUpdateParameters model module.
 * @module model/CertificateCreateOrUpdateParameters
 * @version 2017-03-01
 */
class CertificateCreateOrUpdateParameters {
    /**
     * Constructs a new <code>CertificateCreateOrUpdateParameters</code>.
     * Certificate create or update details.
     * @alias module:model/CertificateCreateOrUpdateParameters
     */
    constructor() { 
        
        CertificateCreateOrUpdateParameters.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CertificateCreateOrUpdateParameters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CertificateCreateOrUpdateParameters} obj Optional instance to populate.
     * @return {module:model/CertificateCreateOrUpdateParameters} The populated <code>CertificateCreateOrUpdateParameters</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CertificateCreateOrUpdateParameters();

            if (data.hasOwnProperty('properties')) {
                obj['properties'] = CertificateCreateOrUpdateProperties.constructFromObject(data['properties']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CertificateCreateOrUpdateParameters</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CertificateCreateOrUpdateParameters</code>.
     */
    static validateJSON(data) {
        // validate the optional field `properties`
        if (data['properties']) { // data not null
          CertificateCreateOrUpdateProperties.validateJSON(data['properties']);
        }

        return true;
    }


}



/**
 * @member {module:model/CertificateCreateOrUpdateProperties} properties
 */
CertificateCreateOrUpdateParameters.prototype['properties'] = undefined;






export default CertificateCreateOrUpdateParameters;

