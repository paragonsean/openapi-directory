# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ListContainerSasInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, expiry_time: datetime=None, permissions: str=None):
        """ListContainerSasInput - a model defined in OpenAPI

        :param expiry_time: The expiry_time of this ListContainerSasInput.
        :param permissions: The permissions of this ListContainerSasInput.
        """
        self.openapi_types = {
            'expiry_time': datetime,
            'permissions': str
        }

        self.attribute_map = {
            'expiry_time': 'expiryTime',
            'permissions': 'permissions'
        }

        self._expiry_time = expiry_time
        self._permissions = permissions

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListContainerSasInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListContainerSasInput of this ListContainerSasInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def expiry_time(self):
        """Gets the expiry_time of this ListContainerSasInput.

        The SAS URL expiration time.  This must be less than 24 hours from the current time.

        :return: The expiry_time of this ListContainerSasInput.
        :rtype: datetime
        """
        return self._expiry_time

    @expiry_time.setter
    def expiry_time(self, expiry_time):
        """Sets the expiry_time of this ListContainerSasInput.

        The SAS URL expiration time.  This must be less than 24 hours from the current time.

        :param expiry_time: The expiry_time of this ListContainerSasInput.
        :type expiry_time: datetime
        """

        self._expiry_time = expiry_time

    @property
    def permissions(self):
        """Gets the permissions of this ListContainerSasInput.

        The permissions to set on the SAS URL.

        :return: The permissions of this ListContainerSasInput.
        :rtype: str
        """
        return self._permissions

    @permissions.setter
    def permissions(self, permissions):
        """Sets the permissions of this ListContainerSasInput.

        The permissions to set on the SAS URL.

        :param permissions: The permissions of this ListContainerSasInput.
        :type permissions: str
        """
        allowed_values = ["Read", "ReadWrite", "ReadWriteDelete"]  # noqa: E501
        if permissions not in allowed_values:
            raise ValueError(
                "Invalid value for `permissions` ({0}), must be one of {1}"
                .format(permissions, allowed_values)
            )

        self._permissions = permissions
