# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AssetFileEncryptionMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, asset_file_id: str=None, asset_file_name: str=None, initialization_vector: str=None):
        """AssetFileEncryptionMetadata - a model defined in OpenAPI

        :param asset_file_id: The asset_file_id of this AssetFileEncryptionMetadata.
        :param asset_file_name: The asset_file_name of this AssetFileEncryptionMetadata.
        :param initialization_vector: The initialization_vector of this AssetFileEncryptionMetadata.
        """
        self.openapi_types = {
            'asset_file_id': str,
            'asset_file_name': str,
            'initialization_vector': str
        }

        self.attribute_map = {
            'asset_file_id': 'assetFileId',
            'asset_file_name': 'assetFileName',
            'initialization_vector': 'initializationVector'
        }

        self._asset_file_id = asset_file_id
        self._asset_file_name = asset_file_name
        self._initialization_vector = initialization_vector

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AssetFileEncryptionMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AssetFileEncryptionMetadata of this AssetFileEncryptionMetadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def asset_file_id(self):
        """Gets the asset_file_id of this AssetFileEncryptionMetadata.

        The Asset File Id.

        :return: The asset_file_id of this AssetFileEncryptionMetadata.
        :rtype: str
        """
        return self._asset_file_id

    @asset_file_id.setter
    def asset_file_id(self, asset_file_id):
        """Sets the asset_file_id of this AssetFileEncryptionMetadata.

        The Asset File Id.

        :param asset_file_id: The asset_file_id of this AssetFileEncryptionMetadata.
        :type asset_file_id: str
        """
        if asset_file_id is None:
            raise ValueError("Invalid value for `asset_file_id`, must not be `None`")

        self._asset_file_id = asset_file_id

    @property
    def asset_file_name(self):
        """Gets the asset_file_name of this AssetFileEncryptionMetadata.

        The Asset File name.

        :return: The asset_file_name of this AssetFileEncryptionMetadata.
        :rtype: str
        """
        return self._asset_file_name

    @asset_file_name.setter
    def asset_file_name(self, asset_file_name):
        """Sets the asset_file_name of this AssetFileEncryptionMetadata.

        The Asset File name.

        :param asset_file_name: The asset_file_name of this AssetFileEncryptionMetadata.
        :type asset_file_name: str
        """

        self._asset_file_name = asset_file_name

    @property
    def initialization_vector(self):
        """Gets the initialization_vector of this AssetFileEncryptionMetadata.

        The Asset File initialization vector.

        :return: The initialization_vector of this AssetFileEncryptionMetadata.
        :rtype: str
        """
        return self._initialization_vector

    @initialization_vector.setter
    def initialization_vector(self, initialization_vector):
        """Sets the initialization_vector of this AssetFileEncryptionMetadata.

        The Asset File initialization vector.

        :param initialization_vector: The initialization_vector of this AssetFileEncryptionMetadata.
        :type initialization_vector: str
        """

        self._initialization_vector = initialization_vector
