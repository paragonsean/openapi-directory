# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class FirstQuality(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bitrate: int=None):
        """FirstQuality - a model defined in OpenAPI

        :param bitrate: The bitrate of this FirstQuality.
        """
        self.openapi_types = {
            'bitrate': int
        }

        self.attribute_map = {
            'bitrate': 'bitrate'
        }

        self._bitrate = bitrate

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FirstQuality':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FirstQuality of this FirstQuality.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bitrate(self):
        """Gets the bitrate of this FirstQuality.

        The first quality bitrate.

        :return: The bitrate of this FirstQuality.
        :rtype: int
        """
        return self._bitrate

    @bitrate.setter
    def bitrate(self, bitrate):
        """Sets the bitrate of this FirstQuality.

        The first quality bitrate.

        :param bitrate: The bitrate of this FirstQuality.
        :type bitrate: int
        """
        if bitrate is None:
            raise ValueError("Invalid value for `bitrate`, must not be `None`")

        self._bitrate = bitrate
