# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.asset_streaming_locator import AssetStreamingLocator
from openapi_server import util


class ListStreamingLocatorsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, streaming_locators: List[AssetStreamingLocator]=None):
        """ListStreamingLocatorsResponse - a model defined in OpenAPI

        :param streaming_locators: The streaming_locators of this ListStreamingLocatorsResponse.
        """
        self.openapi_types = {
            'streaming_locators': List[AssetStreamingLocator]
        }

        self.attribute_map = {
            'streaming_locators': 'streamingLocators'
        }

        self._streaming_locators = streaming_locators

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListStreamingLocatorsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListStreamingLocatorsResponse of this ListStreamingLocatorsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def streaming_locators(self):
        """Gets the streaming_locators of this ListStreamingLocatorsResponse.

        The list of Streaming Locators.

        :return: The streaming_locators of this ListStreamingLocatorsResponse.
        :rtype: List[AssetStreamingLocator]
        """
        return self._streaming_locators

    @streaming_locators.setter
    def streaming_locators(self, streaming_locators):
        """Sets the streaming_locators of this ListStreamingLocatorsResponse.

        The list of Streaming Locators.

        :param streaming_locators: The streaming_locators of this ListStreamingLocatorsResponse.
        :type streaming_locators: List[AssetStreamingLocator]
        """

        self._streaming_locators = streaming_locators
