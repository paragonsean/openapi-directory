/**
 * Azure Media Services
 * This Swagger was generated by the API Framework.
 *
 * The version of the OpenAPI document: 2018-07-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import ApiError from './model/ApiError';
import Asset from './model/Asset';
import AssetCollection from './model/AssetCollection';
import AssetContainerSas from './model/AssetContainerSas';
import AssetFileEncryptionMetadata from './model/AssetFileEncryptionMetadata';
import AssetFilter from './model/AssetFilter';
import AssetFilterCollection from './model/AssetFilterCollection';
import AssetProperties from './model/AssetProperties';
import AssetStreamingLocator from './model/AssetStreamingLocator';
import FilterTrackPropertyCondition from './model/FilterTrackPropertyCondition';
import FilterTrackSelection from './model/FilterTrackSelection';
import FirstQuality from './model/FirstQuality';
import ListContainerSasInput from './model/ListContainerSasInput';
import ListStreamingLocatorsResponse from './model/ListStreamingLocatorsResponse';
import MediaFilterProperties from './model/MediaFilterProperties';
import ODataError from './model/ODataError';
import PresentationTimeRange from './model/PresentationTimeRange';
import StorageEncryptedAssetDecryptionData from './model/StorageEncryptedAssetDecryptionData';
import DefaultApi from './api/DefaultApi';


/**
* This Swagger was generated by the API Framework..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var AzureMediaServices = require('index'); // See note below*.
* var xxxSvc = new AzureMediaServices.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new AzureMediaServices.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new AzureMediaServices.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new AzureMediaServices.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2018-07-01
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The ApiError model constructor.
     * @property {module:model/ApiError}
     */
    ApiError,

    /**
     * The Asset model constructor.
     * @property {module:model/Asset}
     */
    Asset,

    /**
     * The AssetCollection model constructor.
     * @property {module:model/AssetCollection}
     */
    AssetCollection,

    /**
     * The AssetContainerSas model constructor.
     * @property {module:model/AssetContainerSas}
     */
    AssetContainerSas,

    /**
     * The AssetFileEncryptionMetadata model constructor.
     * @property {module:model/AssetFileEncryptionMetadata}
     */
    AssetFileEncryptionMetadata,

    /**
     * The AssetFilter model constructor.
     * @property {module:model/AssetFilter}
     */
    AssetFilter,

    /**
     * The AssetFilterCollection model constructor.
     * @property {module:model/AssetFilterCollection}
     */
    AssetFilterCollection,

    /**
     * The AssetProperties model constructor.
     * @property {module:model/AssetProperties}
     */
    AssetProperties,

    /**
     * The AssetStreamingLocator model constructor.
     * @property {module:model/AssetStreamingLocator}
     */
    AssetStreamingLocator,

    /**
     * The FilterTrackPropertyCondition model constructor.
     * @property {module:model/FilterTrackPropertyCondition}
     */
    FilterTrackPropertyCondition,

    /**
     * The FilterTrackSelection model constructor.
     * @property {module:model/FilterTrackSelection}
     */
    FilterTrackSelection,

    /**
     * The FirstQuality model constructor.
     * @property {module:model/FirstQuality}
     */
    FirstQuality,

    /**
     * The ListContainerSasInput model constructor.
     * @property {module:model/ListContainerSasInput}
     */
    ListContainerSasInput,

    /**
     * The ListStreamingLocatorsResponse model constructor.
     * @property {module:model/ListStreamingLocatorsResponse}
     */
    ListStreamingLocatorsResponse,

    /**
     * The MediaFilterProperties model constructor.
     * @property {module:model/MediaFilterProperties}
     */
    MediaFilterProperties,

    /**
     * The ODataError model constructor.
     * @property {module:model/ODataError}
     */
    ODataError,

    /**
     * The PresentationTimeRange model constructor.
     * @property {module:model/PresentationTimeRange}
     */
    PresentationTimeRange,

    /**
     * The StorageEncryptedAssetDecryptionData model constructor.
     * @property {module:model/StorageEncryptedAssetDecryptionData}
     */
    StorageEncryptedAssetDecryptionData,

    /**
    * The DefaultApi service constructor.
    * @property {module:api/DefaultApi}
    */
    DefaultApi
};
