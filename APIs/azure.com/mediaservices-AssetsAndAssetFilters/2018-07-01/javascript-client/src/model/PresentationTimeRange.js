/**
 * Azure Media Services
 * This Swagger was generated by the API Framework.
 *
 * The version of the OpenAPI document: 2018-07-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PresentationTimeRange model module.
 * @module model/PresentationTimeRange
 * @version 2018-07-01
 */
class PresentationTimeRange {
    /**
     * Constructs a new <code>PresentationTimeRange</code>.
     * The presentation time range, this is asset related and not recommended for Account Filter.
     * @alias module:model/PresentationTimeRange
     */
    constructor() { 
        
        PresentationTimeRange.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PresentationTimeRange</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PresentationTimeRange} obj Optional instance to populate.
     * @return {module:model/PresentationTimeRange} The populated <code>PresentationTimeRange</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PresentationTimeRange();

            if (data.hasOwnProperty('endTimestamp')) {
                obj['endTimestamp'] = ApiClient.convertToType(data['endTimestamp'], 'Number');
            }
            if (data.hasOwnProperty('forceEndTimestamp')) {
                obj['forceEndTimestamp'] = ApiClient.convertToType(data['forceEndTimestamp'], 'Boolean');
            }
            if (data.hasOwnProperty('liveBackoffDuration')) {
                obj['liveBackoffDuration'] = ApiClient.convertToType(data['liveBackoffDuration'], 'Number');
            }
            if (data.hasOwnProperty('presentationWindowDuration')) {
                obj['presentationWindowDuration'] = ApiClient.convertToType(data['presentationWindowDuration'], 'Number');
            }
            if (data.hasOwnProperty('startTimestamp')) {
                obj['startTimestamp'] = ApiClient.convertToType(data['startTimestamp'], 'Number');
            }
            if (data.hasOwnProperty('timescale')) {
                obj['timescale'] = ApiClient.convertToType(data['timescale'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PresentationTimeRange</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PresentationTimeRange</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * The absolute end time boundary.
 * @member {Number} endTimestamp
 */
PresentationTimeRange.prototype['endTimestamp'] = undefined;

/**
 * The indicator of forcing existing of end time stamp.
 * @member {Boolean} forceEndTimestamp
 */
PresentationTimeRange.prototype['forceEndTimestamp'] = undefined;

/**
 * The relative to end right edge.
 * @member {Number} liveBackoffDuration
 */
PresentationTimeRange.prototype['liveBackoffDuration'] = undefined;

/**
 * The relative to end sliding window.
 * @member {Number} presentationWindowDuration
 */
PresentationTimeRange.prototype['presentationWindowDuration'] = undefined;

/**
 * The absolute start time boundary.
 * @member {Number} startTimestamp
 */
PresentationTimeRange.prototype['startTimestamp'] = undefined;

/**
 * The time scale of time stamps.
 * @member {Number} timescale
 */
PresentationTimeRange.prototype['timescale'] = undefined;






export default PresentationTimeRange;

