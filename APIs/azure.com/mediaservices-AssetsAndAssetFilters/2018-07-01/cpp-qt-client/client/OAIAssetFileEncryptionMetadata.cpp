/**
 * Azure Media Services
 * This Swagger was generated by the API Framework.
 *
 * The version of the OpenAPI document: 2018-07-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAssetFileEncryptionMetadata.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAssetFileEncryptionMetadata::OAIAssetFileEncryptionMetadata(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAssetFileEncryptionMetadata::OAIAssetFileEncryptionMetadata() {
    this->initializeModel();
}

OAIAssetFileEncryptionMetadata::~OAIAssetFileEncryptionMetadata() {}

void OAIAssetFileEncryptionMetadata::initializeModel() {

    m_asset_file_id_isSet = false;
    m_asset_file_id_isValid = false;

    m_asset_file_name_isSet = false;
    m_asset_file_name_isValid = false;

    m_initialization_vector_isSet = false;
    m_initialization_vector_isValid = false;
}

void OAIAssetFileEncryptionMetadata::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAssetFileEncryptionMetadata::fromJsonObject(QJsonObject json) {

    m_asset_file_id_isValid = ::OpenAPI::fromJsonValue(m_asset_file_id, json[QString("assetFileId")]);
    m_asset_file_id_isSet = !json[QString("assetFileId")].isNull() && m_asset_file_id_isValid;

    m_asset_file_name_isValid = ::OpenAPI::fromJsonValue(m_asset_file_name, json[QString("assetFileName")]);
    m_asset_file_name_isSet = !json[QString("assetFileName")].isNull() && m_asset_file_name_isValid;

    m_initialization_vector_isValid = ::OpenAPI::fromJsonValue(m_initialization_vector, json[QString("initializationVector")]);
    m_initialization_vector_isSet = !json[QString("initializationVector")].isNull() && m_initialization_vector_isValid;
}

QString OAIAssetFileEncryptionMetadata::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAssetFileEncryptionMetadata::asJsonObject() const {
    QJsonObject obj;
    if (m_asset_file_id_isSet) {
        obj.insert(QString("assetFileId"), ::OpenAPI::toJsonValue(m_asset_file_id));
    }
    if (m_asset_file_name_isSet) {
        obj.insert(QString("assetFileName"), ::OpenAPI::toJsonValue(m_asset_file_name));
    }
    if (m_initialization_vector_isSet) {
        obj.insert(QString("initializationVector"), ::OpenAPI::toJsonValue(m_initialization_vector));
    }
    return obj;
}

QString OAIAssetFileEncryptionMetadata::getAssetFileId() const {
    return m_asset_file_id;
}
void OAIAssetFileEncryptionMetadata::setAssetFileId(const QString &asset_file_id) {
    m_asset_file_id = asset_file_id;
    m_asset_file_id_isSet = true;
}

bool OAIAssetFileEncryptionMetadata::is_asset_file_id_Set() const{
    return m_asset_file_id_isSet;
}

bool OAIAssetFileEncryptionMetadata::is_asset_file_id_Valid() const{
    return m_asset_file_id_isValid;
}

QString OAIAssetFileEncryptionMetadata::getAssetFileName() const {
    return m_asset_file_name;
}
void OAIAssetFileEncryptionMetadata::setAssetFileName(const QString &asset_file_name) {
    m_asset_file_name = asset_file_name;
    m_asset_file_name_isSet = true;
}

bool OAIAssetFileEncryptionMetadata::is_asset_file_name_Set() const{
    return m_asset_file_name_isSet;
}

bool OAIAssetFileEncryptionMetadata::is_asset_file_name_Valid() const{
    return m_asset_file_name_isValid;
}

QString OAIAssetFileEncryptionMetadata::getInitializationVector() const {
    return m_initialization_vector;
}
void OAIAssetFileEncryptionMetadata::setInitializationVector(const QString &initialization_vector) {
    m_initialization_vector = initialization_vector;
    m_initialization_vector_isSet = true;
}

bool OAIAssetFileEncryptionMetadata::is_initialization_vector_Set() const{
    return m_initialization_vector_isSet;
}

bool OAIAssetFileEncryptionMetadata::is_initialization_vector_Valid() const{
    return m_initialization_vector_isValid;
}

bool OAIAssetFileEncryptionMetadata::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_asset_file_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_asset_file_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_initialization_vector_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAssetFileEncryptionMetadata::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_asset_file_id_isValid && true;
}

} // namespace OpenAPI
