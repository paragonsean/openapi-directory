/**
 * Azure Media Services
 * This Swagger was generated by the API Framework.
 *
 * The version of the OpenAPI document: 2018-07-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListStreamingLocatorsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListStreamingLocatorsResponse::OAIListStreamingLocatorsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListStreamingLocatorsResponse::OAIListStreamingLocatorsResponse() {
    this->initializeModel();
}

OAIListStreamingLocatorsResponse::~OAIListStreamingLocatorsResponse() {}

void OAIListStreamingLocatorsResponse::initializeModel() {

    m_streaming_locators_isSet = false;
    m_streaming_locators_isValid = false;
}

void OAIListStreamingLocatorsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListStreamingLocatorsResponse::fromJsonObject(QJsonObject json) {

    m_streaming_locators_isValid = ::OpenAPI::fromJsonValue(m_streaming_locators, json[QString("streamingLocators")]);
    m_streaming_locators_isSet = !json[QString("streamingLocators")].isNull() && m_streaming_locators_isValid;
}

QString OAIListStreamingLocatorsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListStreamingLocatorsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_streaming_locators.size() > 0) {
        obj.insert(QString("streamingLocators"), ::OpenAPI::toJsonValue(m_streaming_locators));
    }
    return obj;
}

QList<OAIAssetStreamingLocator> OAIListStreamingLocatorsResponse::getStreamingLocators() const {
    return m_streaming_locators;
}
void OAIListStreamingLocatorsResponse::setStreamingLocators(const QList<OAIAssetStreamingLocator> &streaming_locators) {
    m_streaming_locators = streaming_locators;
    m_streaming_locators_isSet = true;
}

bool OAIListStreamingLocatorsResponse::is_streaming_locators_Set() const{
    return m_streaming_locators_isSet;
}

bool OAIListStreamingLocatorsResponse::is_streaming_locators_Valid() const{
    return m_streaming_locators_isValid;
}

bool OAIListStreamingLocatorsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_streaming_locators.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListStreamingLocatorsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
