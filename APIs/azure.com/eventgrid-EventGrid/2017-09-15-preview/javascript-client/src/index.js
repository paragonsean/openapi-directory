/**
 * EventGridManagementClient
 * Azure EventGrid Management Client
 *
 * The version of the OpenAPI document: 2017-09-15-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import EventHubEventSubscriptionDestination from './model/EventHubEventSubscriptionDestination';
import EventHubEventSubscriptionDestinationProperties from './model/EventHubEventSubscriptionDestinationProperties';
import EventSubscription from './model/EventSubscription';
import EventSubscriptionDestination from './model/EventSubscriptionDestination';
import EventSubscriptionFilter from './model/EventSubscriptionFilter';
import EventSubscriptionFullUrl from './model/EventSubscriptionFullUrl';
import EventSubscriptionProperties from './model/EventSubscriptionProperties';
import EventSubscriptionUpdateParameters from './model/EventSubscriptionUpdateParameters';
import EventSubscriptionsListResult from './model/EventSubscriptionsListResult';
import EventType from './model/EventType';
import EventTypeProperties from './model/EventTypeProperties';
import EventTypesListResult from './model/EventTypesListResult';
import Operation from './model/Operation';
import OperationInfo from './model/OperationInfo';
import OperationsListResult from './model/OperationsListResult';
import Resource from './model/Resource';
import Topic from './model/Topic';
import TopicProperties from './model/TopicProperties';
import TopicRegenerateKeyRequest from './model/TopicRegenerateKeyRequest';
import TopicSharedAccessKeys from './model/TopicSharedAccessKeys';
import TopicTypeInfo from './model/TopicTypeInfo';
import TopicTypeProperties from './model/TopicTypeProperties';
import TopicTypesListResult from './model/TopicTypesListResult';
import TopicUpdateParameters from './model/TopicUpdateParameters';
import TopicsListResult from './model/TopicsListResult';
import TrackedResource from './model/TrackedResource';
import WebHookEventSubscriptionDestination from './model/WebHookEventSubscriptionDestination';
import WebHookEventSubscriptionDestinationProperties from './model/WebHookEventSubscriptionDestinationProperties';
import EventSubscriptionsApi from './api/EventSubscriptionsApi';
import OperationsApi from './api/OperationsApi';
import TopicTypesApi from './api/TopicTypesApi';
import TopicsApi from './api/TopicsApi';


/**
* Azure EventGrid Management Client.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var EventGridManagementClient = require('index'); // See note below*.
* var xxxSvc = new EventGridManagementClient.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new EventGridManagementClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new EventGridManagementClient.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new EventGridManagementClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2017-09-15-preview
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The EventHubEventSubscriptionDestination model constructor.
     * @property {module:model/EventHubEventSubscriptionDestination}
     */
    EventHubEventSubscriptionDestination,

    /**
     * The EventHubEventSubscriptionDestinationProperties model constructor.
     * @property {module:model/EventHubEventSubscriptionDestinationProperties}
     */
    EventHubEventSubscriptionDestinationProperties,

    /**
     * The EventSubscription model constructor.
     * @property {module:model/EventSubscription}
     */
    EventSubscription,

    /**
     * The EventSubscriptionDestination model constructor.
     * @property {module:model/EventSubscriptionDestination}
     */
    EventSubscriptionDestination,

    /**
     * The EventSubscriptionFilter model constructor.
     * @property {module:model/EventSubscriptionFilter}
     */
    EventSubscriptionFilter,

    /**
     * The EventSubscriptionFullUrl model constructor.
     * @property {module:model/EventSubscriptionFullUrl}
     */
    EventSubscriptionFullUrl,

    /**
     * The EventSubscriptionProperties model constructor.
     * @property {module:model/EventSubscriptionProperties}
     */
    EventSubscriptionProperties,

    /**
     * The EventSubscriptionUpdateParameters model constructor.
     * @property {module:model/EventSubscriptionUpdateParameters}
     */
    EventSubscriptionUpdateParameters,

    /**
     * The EventSubscriptionsListResult model constructor.
     * @property {module:model/EventSubscriptionsListResult}
     */
    EventSubscriptionsListResult,

    /**
     * The EventType model constructor.
     * @property {module:model/EventType}
     */
    EventType,

    /**
     * The EventTypeProperties model constructor.
     * @property {module:model/EventTypeProperties}
     */
    EventTypeProperties,

    /**
     * The EventTypesListResult model constructor.
     * @property {module:model/EventTypesListResult}
     */
    EventTypesListResult,

    /**
     * The Operation model constructor.
     * @property {module:model/Operation}
     */
    Operation,

    /**
     * The OperationInfo model constructor.
     * @property {module:model/OperationInfo}
     */
    OperationInfo,

    /**
     * The OperationsListResult model constructor.
     * @property {module:model/OperationsListResult}
     */
    OperationsListResult,

    /**
     * The Resource model constructor.
     * @property {module:model/Resource}
     */
    Resource,

    /**
     * The Topic model constructor.
     * @property {module:model/Topic}
     */
    Topic,

    /**
     * The TopicProperties model constructor.
     * @property {module:model/TopicProperties}
     */
    TopicProperties,

    /**
     * The TopicRegenerateKeyRequest model constructor.
     * @property {module:model/TopicRegenerateKeyRequest}
     */
    TopicRegenerateKeyRequest,

    /**
     * The TopicSharedAccessKeys model constructor.
     * @property {module:model/TopicSharedAccessKeys}
     */
    TopicSharedAccessKeys,

    /**
     * The TopicTypeInfo model constructor.
     * @property {module:model/TopicTypeInfo}
     */
    TopicTypeInfo,

    /**
     * The TopicTypeProperties model constructor.
     * @property {module:model/TopicTypeProperties}
     */
    TopicTypeProperties,

    /**
     * The TopicTypesListResult model constructor.
     * @property {module:model/TopicTypesListResult}
     */
    TopicTypesListResult,

    /**
     * The TopicUpdateParameters model constructor.
     * @property {module:model/TopicUpdateParameters}
     */
    TopicUpdateParameters,

    /**
     * The TopicsListResult model constructor.
     * @property {module:model/TopicsListResult}
     */
    TopicsListResult,

    /**
     * The TrackedResource model constructor.
     * @property {module:model/TrackedResource}
     */
    TrackedResource,

    /**
     * The WebHookEventSubscriptionDestination model constructor.
     * @property {module:model/WebHookEventSubscriptionDestination}
     */
    WebHookEventSubscriptionDestination,

    /**
     * The WebHookEventSubscriptionDestinationProperties model constructor.
     * @property {module:model/WebHookEventSubscriptionDestinationProperties}
     */
    WebHookEventSubscriptionDestinationProperties,

    /**
    * The EventSubscriptionsApi service constructor.
    * @property {module:api/EventSubscriptionsApi}
    */
    EventSubscriptionsApi,

    /**
    * The OperationsApi service constructor.
    * @property {module:api/OperationsApi}
    */
    OperationsApi,

    /**
    * The TopicTypesApi service constructor.
    * @property {module:api/TopicTypesApi}
    */
    TopicTypesApi,

    /**
    * The TopicsApi service constructor.
    * @property {module:api/TopicsApi}
    */
    TopicsApi
};
