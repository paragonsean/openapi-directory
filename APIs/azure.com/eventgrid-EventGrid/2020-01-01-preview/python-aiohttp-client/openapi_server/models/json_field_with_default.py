# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class JsonFieldWithDefault(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, default_value: str=None, source_field: str=None):
        """JsonFieldWithDefault - a model defined in OpenAPI

        :param default_value: The default_value of this JsonFieldWithDefault.
        :param source_field: The source_field of this JsonFieldWithDefault.
        """
        self.openapi_types = {
            'default_value': str,
            'source_field': str
        }

        self.attribute_map = {
            'default_value': 'defaultValue',
            'source_field': 'sourceField'
        }

        self._default_value = default_value
        self._source_field = source_field

    @classmethod
    def from_dict(cls, dikt: dict) -> 'JsonFieldWithDefault':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The JsonFieldWithDefault of this JsonFieldWithDefault.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def default_value(self):
        """Gets the default_value of this JsonFieldWithDefault.

        The default value to be used for mapping when a SourceField is not provided or if there's no property with the specified name in the published JSON event payload.

        :return: The default_value of this JsonFieldWithDefault.
        :rtype: str
        """
        return self._default_value

    @default_value.setter
    def default_value(self, default_value):
        """Sets the default_value of this JsonFieldWithDefault.

        The default value to be used for mapping when a SourceField is not provided or if there's no property with the specified name in the published JSON event payload.

        :param default_value: The default_value of this JsonFieldWithDefault.
        :type default_value: str
        """

        self._default_value = default_value

    @property
    def source_field(self):
        """Gets the source_field of this JsonFieldWithDefault.

        Name of a field in the input event schema that's to be used as the source of a mapping.

        :return: The source_field of this JsonFieldWithDefault.
        :rtype: str
        """
        return self._source_field

    @source_field.setter
    def source_field(self, source_field):
        """Sets the source_field of this JsonFieldWithDefault.

        Name of a field in the input event schema that's to be used as the source of a mapping.

        :param source_field: The source_field of this JsonFieldWithDefault.
        :type source_field: str
        """

        self._source_field = source_field
