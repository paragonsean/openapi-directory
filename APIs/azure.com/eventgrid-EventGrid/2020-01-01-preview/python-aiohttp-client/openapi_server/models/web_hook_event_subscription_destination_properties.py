# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class WebHookEventSubscriptionDestinationProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, azure_active_directory_application_id_or_uri: str=None, azure_active_directory_tenant_id: str=None, endpoint_base_url: str=None, endpoint_url: str=None, max_events_per_batch: int=None, preferred_batch_size_in_kilobytes: int=None):
        """WebHookEventSubscriptionDestinationProperties - a model defined in OpenAPI

        :param azure_active_directory_application_id_or_uri: The azure_active_directory_application_id_or_uri of this WebHookEventSubscriptionDestinationProperties.
        :param azure_active_directory_tenant_id: The azure_active_directory_tenant_id of this WebHookEventSubscriptionDestinationProperties.
        :param endpoint_base_url: The endpoint_base_url of this WebHookEventSubscriptionDestinationProperties.
        :param endpoint_url: The endpoint_url of this WebHookEventSubscriptionDestinationProperties.
        :param max_events_per_batch: The max_events_per_batch of this WebHookEventSubscriptionDestinationProperties.
        :param preferred_batch_size_in_kilobytes: The preferred_batch_size_in_kilobytes of this WebHookEventSubscriptionDestinationProperties.
        """
        self.openapi_types = {
            'azure_active_directory_application_id_or_uri': str,
            'azure_active_directory_tenant_id': str,
            'endpoint_base_url': str,
            'endpoint_url': str,
            'max_events_per_batch': int,
            'preferred_batch_size_in_kilobytes': int
        }

        self.attribute_map = {
            'azure_active_directory_application_id_or_uri': 'azureActiveDirectoryApplicationIdOrUri',
            'azure_active_directory_tenant_id': 'azureActiveDirectoryTenantId',
            'endpoint_base_url': 'endpointBaseUrl',
            'endpoint_url': 'endpointUrl',
            'max_events_per_batch': 'maxEventsPerBatch',
            'preferred_batch_size_in_kilobytes': 'preferredBatchSizeInKilobytes'
        }

        self._azure_active_directory_application_id_or_uri = azure_active_directory_application_id_or_uri
        self._azure_active_directory_tenant_id = azure_active_directory_tenant_id
        self._endpoint_base_url = endpoint_base_url
        self._endpoint_url = endpoint_url
        self._max_events_per_batch = max_events_per_batch
        self._preferred_batch_size_in_kilobytes = preferred_batch_size_in_kilobytes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'WebHookEventSubscriptionDestinationProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The WebHookEventSubscriptionDestinationProperties of this WebHookEventSubscriptionDestinationProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def azure_active_directory_application_id_or_uri(self):
        """Gets the azure_active_directory_application_id_or_uri of this WebHookEventSubscriptionDestinationProperties.

        The Azure Active Directory Application ID or URI to get the access token that will be included as the bearer token in delivery requests.

        :return: The azure_active_directory_application_id_or_uri of this WebHookEventSubscriptionDestinationProperties.
        :rtype: str
        """
        return self._azure_active_directory_application_id_or_uri

    @azure_active_directory_application_id_or_uri.setter
    def azure_active_directory_application_id_or_uri(self, azure_active_directory_application_id_or_uri):
        """Sets the azure_active_directory_application_id_or_uri of this WebHookEventSubscriptionDestinationProperties.

        The Azure Active Directory Application ID or URI to get the access token that will be included as the bearer token in delivery requests.

        :param azure_active_directory_application_id_or_uri: The azure_active_directory_application_id_or_uri of this WebHookEventSubscriptionDestinationProperties.
        :type azure_active_directory_application_id_or_uri: str
        """

        self._azure_active_directory_application_id_or_uri = azure_active_directory_application_id_or_uri

    @property
    def azure_active_directory_tenant_id(self):
        """Gets the azure_active_directory_tenant_id of this WebHookEventSubscriptionDestinationProperties.

        The Azure Active Directory Tenant ID to get the access token that will be included as the bearer token in delivery requests.

        :return: The azure_active_directory_tenant_id of this WebHookEventSubscriptionDestinationProperties.
        :rtype: str
        """
        return self._azure_active_directory_tenant_id

    @azure_active_directory_tenant_id.setter
    def azure_active_directory_tenant_id(self, azure_active_directory_tenant_id):
        """Sets the azure_active_directory_tenant_id of this WebHookEventSubscriptionDestinationProperties.

        The Azure Active Directory Tenant ID to get the access token that will be included as the bearer token in delivery requests.

        :param azure_active_directory_tenant_id: The azure_active_directory_tenant_id of this WebHookEventSubscriptionDestinationProperties.
        :type azure_active_directory_tenant_id: str
        """

        self._azure_active_directory_tenant_id = azure_active_directory_tenant_id

    @property
    def endpoint_base_url(self):
        """Gets the endpoint_base_url of this WebHookEventSubscriptionDestinationProperties.

        The base URL that represents the endpoint of the destination of an event subscription.

        :return: The endpoint_base_url of this WebHookEventSubscriptionDestinationProperties.
        :rtype: str
        """
        return self._endpoint_base_url

    @endpoint_base_url.setter
    def endpoint_base_url(self, endpoint_base_url):
        """Sets the endpoint_base_url of this WebHookEventSubscriptionDestinationProperties.

        The base URL that represents the endpoint of the destination of an event subscription.

        :param endpoint_base_url: The endpoint_base_url of this WebHookEventSubscriptionDestinationProperties.
        :type endpoint_base_url: str
        """

        self._endpoint_base_url = endpoint_base_url

    @property
    def endpoint_url(self):
        """Gets the endpoint_url of this WebHookEventSubscriptionDestinationProperties.

        The URL that represents the endpoint of the destination of an event subscription.

        :return: The endpoint_url of this WebHookEventSubscriptionDestinationProperties.
        :rtype: str
        """
        return self._endpoint_url

    @endpoint_url.setter
    def endpoint_url(self, endpoint_url):
        """Sets the endpoint_url of this WebHookEventSubscriptionDestinationProperties.

        The URL that represents the endpoint of the destination of an event subscription.

        :param endpoint_url: The endpoint_url of this WebHookEventSubscriptionDestinationProperties.
        :type endpoint_url: str
        """

        self._endpoint_url = endpoint_url

    @property
    def max_events_per_batch(self):
        """Gets the max_events_per_batch of this WebHookEventSubscriptionDestinationProperties.

        Maximum number of events per batch.

        :return: The max_events_per_batch of this WebHookEventSubscriptionDestinationProperties.
        :rtype: int
        """
        return self._max_events_per_batch

    @max_events_per_batch.setter
    def max_events_per_batch(self, max_events_per_batch):
        """Sets the max_events_per_batch of this WebHookEventSubscriptionDestinationProperties.

        Maximum number of events per batch.

        :param max_events_per_batch: The max_events_per_batch of this WebHookEventSubscriptionDestinationProperties.
        :type max_events_per_batch: int
        """

        self._max_events_per_batch = max_events_per_batch

    @property
    def preferred_batch_size_in_kilobytes(self):
        """Gets the preferred_batch_size_in_kilobytes of this WebHookEventSubscriptionDestinationProperties.

        Preferred batch size in Kilobytes.

        :return: The preferred_batch_size_in_kilobytes of this WebHookEventSubscriptionDestinationProperties.
        :rtype: int
        """
        return self._preferred_batch_size_in_kilobytes

    @preferred_batch_size_in_kilobytes.setter
    def preferred_batch_size_in_kilobytes(self, preferred_batch_size_in_kilobytes):
        """Sets the preferred_batch_size_in_kilobytes of this WebHookEventSubscriptionDestinationProperties.

        Preferred batch size in Kilobytes.

        :param preferred_batch_size_in_kilobytes: The preferred_batch_size_in_kilobytes of this WebHookEventSubscriptionDestinationProperties.
        :type preferred_batch_size_in_kilobytes: int
        """

        self._preferred_batch_size_in_kilobytes = preferred_batch_size_in_kilobytes
