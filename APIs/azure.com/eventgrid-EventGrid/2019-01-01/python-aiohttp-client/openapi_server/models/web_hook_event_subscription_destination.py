# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.event_subscription_destination import EventSubscriptionDestination
from openapi_server.models.web_hook_event_subscription_destination_properties import WebHookEventSubscriptionDestinationProperties
from openapi_server import util


class WebHookEventSubscriptionDestination(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, properties: WebHookEventSubscriptionDestinationProperties=None, endpoint_type: str=None):
        """WebHookEventSubscriptionDestination - a model defined in OpenAPI

        :param properties: The properties of this WebHookEventSubscriptionDestination.
        :param endpoint_type: The endpoint_type of this WebHookEventSubscriptionDestination.
        """
        self.openapi_types = {
            'properties': WebHookEventSubscriptionDestinationProperties,
            'endpoint_type': str
        }

        self.attribute_map = {
            'properties': 'properties',
            'endpoint_type': 'endpointType'
        }

        self._properties = properties
        self._endpoint_type = endpoint_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'WebHookEventSubscriptionDestination':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The WebHookEventSubscriptionDestination of this WebHookEventSubscriptionDestination.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def properties(self):
        """Gets the properties of this WebHookEventSubscriptionDestination.


        :return: The properties of this WebHookEventSubscriptionDestination.
        :rtype: WebHookEventSubscriptionDestinationProperties
        """
        return self._properties

    @properties.setter
    def properties(self, properties):
        """Sets the properties of this WebHookEventSubscriptionDestination.


        :param properties: The properties of this WebHookEventSubscriptionDestination.
        :type properties: WebHookEventSubscriptionDestinationProperties
        """

        self._properties = properties

    @property
    def endpoint_type(self):
        """Gets the endpoint_type of this WebHookEventSubscriptionDestination.

        Type of the endpoint for the event subscription destination

        :return: The endpoint_type of this WebHookEventSubscriptionDestination.
        :rtype: str
        """
        return self._endpoint_type

    @endpoint_type.setter
    def endpoint_type(self, endpoint_type):
        """Sets the endpoint_type of this WebHookEventSubscriptionDestination.

        Type of the endpoint for the event subscription destination

        :param endpoint_type: The endpoint_type of this WebHookEventSubscriptionDestination.
        :type endpoint_type: str
        """
        allowed_values = ["WebHook", "EventHub", "StorageQueue", "HybridConnection"]  # noqa: E501
        if endpoint_type not in allowed_values:
            raise ValueError(
                "Invalid value for `endpoint_type` ({0}), must be one of {1}"
                .format(endpoint_type, allowed_values)
            )

        self._endpoint_type = endpoint_type
