/**
 * EventGridManagementClient
 * Azure EventGrid Management Client
 *
 * The version of the OpenAPI document: 2018-09-15-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import DomainTopic from '../model/DomainTopic';
import DomainTopicsListResult from '../model/DomainTopicsListResult';

/**
* DomainTopics service.
* @module api/DomainTopicsApi
* @version 2018-09-15-preview
*/
export default class DomainTopicsApi {

    /**
    * Constructs a new DomainTopicsApi. 
    * @alias module:api/DomainTopicsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the domainTopicsGet operation.
     * @callback module:api/DomainTopicsApi~domainTopicsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DomainTopic} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a domain topic
     * Get properties of a domain topic
     * @param {String} subscriptionId Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroupName The name of the resource group within the user's subscription.
     * @param {String} domainName Name of the domain
     * @param {String} topicName Name of the topic
     * @param {String} apiVersion Version of the API to be used with the client request.
     * @param {module:api/DomainTopicsApi~domainTopicsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DomainTopic}
     */
    domainTopicsGet(subscriptionId, resourceGroupName, domainName, topicName, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling domainTopicsGet");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling domainTopicsGet");
      }
      // verify the required parameter 'domainName' is set
      if (domainName === undefined || domainName === null) {
        throw new Error("Missing the required parameter 'domainName' when calling domainTopicsGet");
      }
      // verify the required parameter 'topicName' is set
      if (topicName === undefined || topicName === null) {
        throw new Error("Missing the required parameter 'topicName' when calling domainTopicsGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling domainTopicsGet");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'domainName': domainName,
        'topicName': topicName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DomainTopic;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/domains/{domainName}/topics/{topicName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the domainTopicsListByDomain operation.
     * @callback module:api/DomainTopicsApi~domainTopicsListByDomainCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DomainTopicsListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List domain topics.
     * List all the topics in a domain.
     * @param {String} subscriptionId Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroupName The name of the resource group within the user's subscription.
     * @param {String} domainName Domain name.
     * @param {String} apiVersion Version of the API to be used with the client request.
     * @param {module:api/DomainTopicsApi~domainTopicsListByDomainCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DomainTopicsListResult}
     */
    domainTopicsListByDomain(subscriptionId, resourceGroupName, domainName, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling domainTopicsListByDomain");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling domainTopicsListByDomain");
      }
      // verify the required parameter 'domainName' is set
      if (domainName === undefined || domainName === null) {
        throw new Error("Missing the required parameter 'domainName' when calling domainTopicsListByDomain");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling domainTopicsListByDomain");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'domainName': domainName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DomainTopicsListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/domains/{domainName}/topics', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
