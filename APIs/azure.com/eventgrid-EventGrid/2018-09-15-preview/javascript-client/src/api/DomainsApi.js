/**
 * EventGridManagementClient
 * Azure EventGrid Management Client
 *
 * The version of the OpenAPI document: 2018-09-15-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Domain from '../model/Domain';
import DomainRegenerateKeyRequest from '../model/DomainRegenerateKeyRequest';
import DomainSharedAccessKeys from '../model/DomainSharedAccessKeys';
import DomainUpdateParameters from '../model/DomainUpdateParameters';
import DomainsListResult from '../model/DomainsListResult';

/**
* Domains service.
* @module api/DomainsApi
* @version 2018-09-15-preview
*/
export default class DomainsApi {

    /**
    * Constructs a new DomainsApi. 
    * @alias module:api/DomainsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the domainsCreateOrUpdate operation.
     * @callback module:api/DomainsApi~domainsCreateOrUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Domain} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a domain
     * Asynchronously creates a new domain with the specified parameters.
     * @param {String} subscriptionId Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroupName The name of the resource group within the user's subscription.
     * @param {String} domainName Name of the domain
     * @param {String} apiVersion Version of the API to be used with the client request.
     * @param {module:model/Domain} domainInfo Domain information
     * @param {module:api/DomainsApi~domainsCreateOrUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Domain}
     */
    domainsCreateOrUpdate(subscriptionId, resourceGroupName, domainName, apiVersion, domainInfo, callback) {
      let postBody = domainInfo;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling domainsCreateOrUpdate");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling domainsCreateOrUpdate");
      }
      // verify the required parameter 'domainName' is set
      if (domainName === undefined || domainName === null) {
        throw new Error("Missing the required parameter 'domainName' when calling domainsCreateOrUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling domainsCreateOrUpdate");
      }
      // verify the required parameter 'domainInfo' is set
      if (domainInfo === undefined || domainInfo === null) {
        throw new Error("Missing the required parameter 'domainInfo' when calling domainsCreateOrUpdate");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'domainName': domainName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Domain;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/domains/{domainName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the domainsDelete operation.
     * @callback module:api/DomainsApi~domainsDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete a domain
     * Delete existing domain
     * @param {String} subscriptionId Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroupName The name of the resource group within the user's subscription.
     * @param {String} domainName Name of the domain
     * @param {String} apiVersion Version of the API to be used with the client request.
     * @param {module:api/DomainsApi~domainsDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    domainsDelete(subscriptionId, resourceGroupName, domainName, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling domainsDelete");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling domainsDelete");
      }
      // verify the required parameter 'domainName' is set
      if (domainName === undefined || domainName === null) {
        throw new Error("Missing the required parameter 'domainName' when calling domainsDelete");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling domainsDelete");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'domainName': domainName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/domains/{domainName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the domainsGet operation.
     * @callback module:api/DomainsApi~domainsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Domain} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a domain
     * Get properties of a domain
     * @param {String} subscriptionId Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroupName The name of the resource group within the user's subscription.
     * @param {String} domainName Name of the domain
     * @param {String} apiVersion Version of the API to be used with the client request.
     * @param {module:api/DomainsApi~domainsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Domain}
     */
    domainsGet(subscriptionId, resourceGroupName, domainName, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling domainsGet");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling domainsGet");
      }
      // verify the required parameter 'domainName' is set
      if (domainName === undefined || domainName === null) {
        throw new Error("Missing the required parameter 'domainName' when calling domainsGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling domainsGet");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'domainName': domainName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Domain;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/domains/{domainName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the domainsListByResourceGroup operation.
     * @callback module:api/DomainsApi~domainsListByResourceGroupCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DomainsListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List domains under a resource group
     * List all the domains under a resource group
     * @param {String} subscriptionId Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroupName The name of the resource group within the user's subscription.
     * @param {String} apiVersion Version of the API to be used with the client request.
     * @param {module:api/DomainsApi~domainsListByResourceGroupCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DomainsListResult}
     */
    domainsListByResourceGroup(subscriptionId, resourceGroupName, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling domainsListByResourceGroup");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling domainsListByResourceGroup");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling domainsListByResourceGroup");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DomainsListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/domains', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the domainsListBySubscription operation.
     * @callback module:api/DomainsApi~domainsListBySubscriptionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DomainsListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List domains under an Azure subscription
     * List all the domains under an Azure subscription
     * @param {String} subscriptionId Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} apiVersion Version of the API to be used with the client request.
     * @param {module:api/DomainsApi~domainsListBySubscriptionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DomainsListResult}
     */
    domainsListBySubscription(subscriptionId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling domainsListBySubscription");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling domainsListBySubscription");
      }

      let pathParams = {
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DomainsListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.EventGrid/domains', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the domainsListSharedAccessKeys operation.
     * @callback module:api/DomainsApi~domainsListSharedAccessKeysCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DomainSharedAccessKeys} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List keys for a domain
     * List the two keys used to publish to a domain
     * @param {String} subscriptionId Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroupName The name of the resource group within the user's subscription.
     * @param {String} domainName Name of the domain
     * @param {String} apiVersion Version of the API to be used with the client request.
     * @param {module:api/DomainsApi~domainsListSharedAccessKeysCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DomainSharedAccessKeys}
     */
    domainsListSharedAccessKeys(subscriptionId, resourceGroupName, domainName, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling domainsListSharedAccessKeys");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling domainsListSharedAccessKeys");
      }
      // verify the required parameter 'domainName' is set
      if (domainName === undefined || domainName === null) {
        throw new Error("Missing the required parameter 'domainName' when calling domainsListSharedAccessKeys");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling domainsListSharedAccessKeys");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'domainName': domainName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DomainSharedAccessKeys;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/domains/{domainName}/listKeys', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the domainsRegenerateKey operation.
     * @callback module:api/DomainsApi~domainsRegenerateKeyCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DomainSharedAccessKeys} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Regenerate key for a domain
     * Regenerate a shared access key for a domain
     * @param {String} subscriptionId Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroupName The name of the resource group within the user's subscription.
     * @param {String} domainName Name of the domain
     * @param {String} apiVersion Version of the API to be used with the client request.
     * @param {module:model/DomainRegenerateKeyRequest} regenerateKeyRequest Request body to regenerate key
     * @param {module:api/DomainsApi~domainsRegenerateKeyCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DomainSharedAccessKeys}
     */
    domainsRegenerateKey(subscriptionId, resourceGroupName, domainName, apiVersion, regenerateKeyRequest, callback) {
      let postBody = regenerateKeyRequest;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling domainsRegenerateKey");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling domainsRegenerateKey");
      }
      // verify the required parameter 'domainName' is set
      if (domainName === undefined || domainName === null) {
        throw new Error("Missing the required parameter 'domainName' when calling domainsRegenerateKey");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling domainsRegenerateKey");
      }
      // verify the required parameter 'regenerateKeyRequest' is set
      if (regenerateKeyRequest === undefined || regenerateKeyRequest === null) {
        throw new Error("Missing the required parameter 'regenerateKeyRequest' when calling domainsRegenerateKey");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'domainName': domainName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = DomainSharedAccessKeys;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/domains/{domainName}/regenerateKey', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the domainsUpdate operation.
     * @callback module:api/DomainsApi~domainsUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Domain} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update a domain
     * Asynchronously updates a domain with the specified parameters.
     * @param {String} subscriptionId Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroupName The name of the resource group within the user's subscription.
     * @param {String} domainName Name of the domain
     * @param {String} apiVersion Version of the API to be used with the client request.
     * @param {module:model/DomainUpdateParameters} domainUpdateParameters Domain update information
     * @param {module:api/DomainsApi~domainsUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Domain}
     */
    domainsUpdate(subscriptionId, resourceGroupName, domainName, apiVersion, domainUpdateParameters, callback) {
      let postBody = domainUpdateParameters;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling domainsUpdate");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling domainsUpdate");
      }
      // verify the required parameter 'domainName' is set
      if (domainName === undefined || domainName === null) {
        throw new Error("Missing the required parameter 'domainName' when calling domainsUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling domainsUpdate");
      }
      // verify the required parameter 'domainUpdateParameters' is set
      if (domainUpdateParameters === undefined || domainUpdateParameters === null) {
        throw new Error("Missing the required parameter 'domainUpdateParameters' when calling domainsUpdate");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'domainName': domainName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Domain;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/domains/{domainName}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
