/**
 * EventGridManagementClient
 * Azure EventGrid Management Client
 *
 * The version of the OpenAPI document: 2018-09-15-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.EventGridManagementClient);
  }
}(this, function(expect, EventGridManagementClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new EventGridManagementClient.EventSubscriptionsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('EventSubscriptionsApi', function() {
    describe('eventSubscriptionsCreateOrUpdate', function() {
      it('should call eventSubscriptionsCreateOrUpdate successfully', function(done) {
        //uncomment below and update the code to test eventSubscriptionsCreateOrUpdate
        //instance.eventSubscriptionsCreateOrUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventSubscriptionsDelete', function() {
      it('should call eventSubscriptionsDelete successfully', function(done) {
        //uncomment below and update the code to test eventSubscriptionsDelete
        //instance.eventSubscriptionsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventSubscriptionsGet', function() {
      it('should call eventSubscriptionsGet successfully', function(done) {
        //uncomment below and update the code to test eventSubscriptionsGet
        //instance.eventSubscriptionsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventSubscriptionsGetFullUrl', function() {
      it('should call eventSubscriptionsGetFullUrl successfully', function(done) {
        //uncomment below and update the code to test eventSubscriptionsGetFullUrl
        //instance.eventSubscriptionsGetFullUrl(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventSubscriptionsListByDomainTopic', function() {
      it('should call eventSubscriptionsListByDomainTopic successfully', function(done) {
        //uncomment below and update the code to test eventSubscriptionsListByDomainTopic
        //instance.eventSubscriptionsListByDomainTopic(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventSubscriptionsListByResource', function() {
      it('should call eventSubscriptionsListByResource successfully', function(done) {
        //uncomment below and update the code to test eventSubscriptionsListByResource
        //instance.eventSubscriptionsListByResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventSubscriptionsListGlobalByResourceGroup', function() {
      it('should call eventSubscriptionsListGlobalByResourceGroup successfully', function(done) {
        //uncomment below and update the code to test eventSubscriptionsListGlobalByResourceGroup
        //instance.eventSubscriptionsListGlobalByResourceGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventSubscriptionsListGlobalByResourceGroupForTopicType', function() {
      it('should call eventSubscriptionsListGlobalByResourceGroupForTopicType successfully', function(done) {
        //uncomment below and update the code to test eventSubscriptionsListGlobalByResourceGroupForTopicType
        //instance.eventSubscriptionsListGlobalByResourceGroupForTopicType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventSubscriptionsListGlobalBySubscription', function() {
      it('should call eventSubscriptionsListGlobalBySubscription successfully', function(done) {
        //uncomment below and update the code to test eventSubscriptionsListGlobalBySubscription
        //instance.eventSubscriptionsListGlobalBySubscription(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventSubscriptionsListGlobalBySubscriptionForTopicType', function() {
      it('should call eventSubscriptionsListGlobalBySubscriptionForTopicType successfully', function(done) {
        //uncomment below and update the code to test eventSubscriptionsListGlobalBySubscriptionForTopicType
        //instance.eventSubscriptionsListGlobalBySubscriptionForTopicType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventSubscriptionsListRegionalByResourceGroup', function() {
      it('should call eventSubscriptionsListRegionalByResourceGroup successfully', function(done) {
        //uncomment below and update the code to test eventSubscriptionsListRegionalByResourceGroup
        //instance.eventSubscriptionsListRegionalByResourceGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventSubscriptionsListRegionalByResourceGroupForTopicType', function() {
      it('should call eventSubscriptionsListRegionalByResourceGroupForTopicType successfully', function(done) {
        //uncomment below and update the code to test eventSubscriptionsListRegionalByResourceGroupForTopicType
        //instance.eventSubscriptionsListRegionalByResourceGroupForTopicType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventSubscriptionsListRegionalBySubscription', function() {
      it('should call eventSubscriptionsListRegionalBySubscription successfully', function(done) {
        //uncomment below and update the code to test eventSubscriptionsListRegionalBySubscription
        //instance.eventSubscriptionsListRegionalBySubscription(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventSubscriptionsListRegionalBySubscriptionForTopicType', function() {
      it('should call eventSubscriptionsListRegionalBySubscriptionForTopicType successfully', function(done) {
        //uncomment below and update the code to test eventSubscriptionsListRegionalBySubscriptionForTopicType
        //instance.eventSubscriptionsListRegionalBySubscriptionForTopicType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventSubscriptionsUpdate', function() {
      it('should call eventSubscriptionsUpdate successfully', function(done) {
        //uncomment below and update the code to test eventSubscriptionsUpdate
        //instance.eventSubscriptionsUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
