/**
 * EventGridManagementClient
 * Azure EventGrid Management Client
 *
 * The version of the OpenAPI document: 2020-04-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIJsonFieldWithDefault.h
 *
 * This is used to express the source of an input schema mapping for a single target field  in the Event Grid Event schema. This is currently used in the mappings for the &#39;subject&#39;,  &#39;eventtype&#39; and &#39;dataversion&#39; properties. This represents a field in the input event schema  along with a default value to be used, and at least one of these two properties should be provided.
 */

#ifndef OAIJsonFieldWithDefault_H
#define OAIJsonFieldWithDefault_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIJsonFieldWithDefault : public OAIObject {
public:
    OAIJsonFieldWithDefault();
    OAIJsonFieldWithDefault(QString json);
    ~OAIJsonFieldWithDefault() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDefaultValue() const;
    void setDefaultValue(const QString &default_value);
    bool is_default_value_Set() const;
    bool is_default_value_Valid() const;

    QString getSourceField() const;
    void setSourceField(const QString &source_field);
    bool is_source_field_Set() const;
    bool is_source_field_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_default_value;
    bool m_default_value_isSet;
    bool m_default_value_isValid;

    QString m_source_field;
    bool m_source_field_isSet;
    bool m_source_field_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIJsonFieldWithDefault)

#endif // OAIJsonFieldWithDefault_H
