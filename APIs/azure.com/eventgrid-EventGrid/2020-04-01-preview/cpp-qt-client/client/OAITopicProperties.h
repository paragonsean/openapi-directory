/**
 * EventGridManagementClient
 * Azure EventGrid Management Client
 *
 * The version of the OpenAPI document: 2020-04-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITopicProperties.h
 *
 * Properties of the Topic
 */

#ifndef OAITopicProperties_H
#define OAITopicProperties_H

#include <QJsonObject>

#include "OAIInboundIpRule.h"
#include "OAIInputSchemaMapping.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIInboundIpRule;
class OAIInputSchemaMapping;

class OAITopicProperties : public OAIObject {
public:
    OAITopicProperties();
    OAITopicProperties(QString json);
    ~OAITopicProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAllowTrafficFromAllIps() const;
    void setAllowTrafficFromAllIps(const bool &allow_traffic_from_all_ips);
    bool is_allow_traffic_from_all_ips_Set() const;
    bool is_allow_traffic_from_all_ips_Valid() const;

    QString getEndpoint() const;
    void setEndpoint(const QString &endpoint);
    bool is_endpoint_Set() const;
    bool is_endpoint_Valid() const;

    QList<OAIInboundIpRule> getInboundIpRules() const;
    void setInboundIpRules(const QList<OAIInboundIpRule> &inbound_ip_rules);
    bool is_inbound_ip_rules_Set() const;
    bool is_inbound_ip_rules_Valid() const;

    QString getInputSchema() const;
    void setInputSchema(const QString &input_schema);
    bool is_input_schema_Set() const;
    bool is_input_schema_Valid() const;

    OAIInputSchemaMapping getInputSchemaMapping() const;
    void setInputSchemaMapping(const OAIInputSchemaMapping &input_schema_mapping);
    bool is_input_schema_mapping_Set() const;
    bool is_input_schema_mapping_Valid() const;

    QString getMetricResourceId() const;
    void setMetricResourceId(const QString &metric_resource_id);
    bool is_metric_resource_id_Set() const;
    bool is_metric_resource_id_Valid() const;

    QString getProvisioningState() const;
    void setProvisioningState(const QString &provisioning_state);
    bool is_provisioning_state_Set() const;
    bool is_provisioning_state_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_allow_traffic_from_all_ips;
    bool m_allow_traffic_from_all_ips_isSet;
    bool m_allow_traffic_from_all_ips_isValid;

    QString m_endpoint;
    bool m_endpoint_isSet;
    bool m_endpoint_isValid;

    QList<OAIInboundIpRule> m_inbound_ip_rules;
    bool m_inbound_ip_rules_isSet;
    bool m_inbound_ip_rules_isValid;

    QString m_input_schema;
    bool m_input_schema_isSet;
    bool m_input_schema_isValid;

    OAIInputSchemaMapping m_input_schema_mapping;
    bool m_input_schema_mapping_isSet;
    bool m_input_schema_mapping_isValid;

    QString m_metric_resource_id;
    bool m_metric_resource_id_isSet;
    bool m_metric_resource_id_isValid;

    QString m_provisioning_state;
    bool m_provisioning_state_isSet;
    bool m_provisioning_state_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITopicProperties)

#endif // OAITopicProperties_H
