# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.input_schema_mapping import InputSchemaMapping
from openapi_server.models.json_input_schema_mapping_properties import JsonInputSchemaMappingProperties
from openapi_server import util


class JsonInputSchemaMapping(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, properties: JsonInputSchemaMappingProperties=None, input_schema_mapping_type: str=None):
        """JsonInputSchemaMapping - a model defined in OpenAPI

        :param properties: The properties of this JsonInputSchemaMapping.
        :param input_schema_mapping_type: The input_schema_mapping_type of this JsonInputSchemaMapping.
        """
        self.openapi_types = {
            'properties': JsonInputSchemaMappingProperties,
            'input_schema_mapping_type': str
        }

        self.attribute_map = {
            'properties': 'properties',
            'input_schema_mapping_type': 'inputSchemaMappingType'
        }

        self._properties = properties
        self._input_schema_mapping_type = input_schema_mapping_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'JsonInputSchemaMapping':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The JsonInputSchemaMapping of this JsonInputSchemaMapping.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def properties(self):
        """Gets the properties of this JsonInputSchemaMapping.


        :return: The properties of this JsonInputSchemaMapping.
        :rtype: JsonInputSchemaMappingProperties
        """
        return self._properties

    @properties.setter
    def properties(self, properties):
        """Sets the properties of this JsonInputSchemaMapping.


        :param properties: The properties of this JsonInputSchemaMapping.
        :type properties: JsonInputSchemaMappingProperties
        """

        self._properties = properties

    @property
    def input_schema_mapping_type(self):
        """Gets the input_schema_mapping_type of this JsonInputSchemaMapping.

        Type of the custom mapping

        :return: The input_schema_mapping_type of this JsonInputSchemaMapping.
        :rtype: str
        """
        return self._input_schema_mapping_type

    @input_schema_mapping_type.setter
    def input_schema_mapping_type(self, input_schema_mapping_type):
        """Sets the input_schema_mapping_type of this JsonInputSchemaMapping.

        Type of the custom mapping

        :param input_schema_mapping_type: The input_schema_mapping_type of this JsonInputSchemaMapping.
        :type input_schema_mapping_type: str
        """
        allowed_values = ["Json"]  # noqa: E501
        if input_schema_mapping_type not in allowed_values:
            raise ValueError(
                "Invalid value for `input_schema_mapping_type` ({0}), must be one of {1}"
                .format(input_schema_mapping_type, allowed_values)
            )

        self._input_schema_mapping_type = input_schema_mapping_type
