# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EventSubscriptionFullUrl(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, endpoint_url: str=None):
        """EventSubscriptionFullUrl - a model defined in OpenAPI

        :param endpoint_url: The endpoint_url of this EventSubscriptionFullUrl.
        """
        self.openapi_types = {
            'endpoint_url': str
        }

        self.attribute_map = {
            'endpoint_url': 'endpointUrl'
        }

        self._endpoint_url = endpoint_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EventSubscriptionFullUrl':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EventSubscriptionFullUrl of this EventSubscriptionFullUrl.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def endpoint_url(self):
        """Gets the endpoint_url of this EventSubscriptionFullUrl.

        The URL that represents the endpoint of the destination of an event subscription.

        :return: The endpoint_url of this EventSubscriptionFullUrl.
        :rtype: str
        """
        return self._endpoint_url

    @endpoint_url.setter
    def endpoint_url(self, endpoint_url):
        """Sets the endpoint_url of this EventSubscriptionFullUrl.

        The URL that represents the endpoint of the destination of an event subscription.

        :param endpoint_url: The endpoint_url of this EventSubscriptionFullUrl.
        :type endpoint_url: str
        """

        self._endpoint_url = endpoint_url
