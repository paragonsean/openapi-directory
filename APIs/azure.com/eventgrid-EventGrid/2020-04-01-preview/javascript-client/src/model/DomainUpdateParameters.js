/**
 * EventGridManagementClient
 * Azure EventGrid Management Client
 *
 * The version of the OpenAPI document: 2020-04-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InboundIpRule from './InboundIpRule';

/**
 * The DomainUpdateParameters model module.
 * @module model/DomainUpdateParameters
 * @version 2020-04-01-preview
 */
class DomainUpdateParameters {
    /**
     * Constructs a new <code>DomainUpdateParameters</code>.
     * Properties of the Domain update
     * @alias module:model/DomainUpdateParameters
     */
    constructor() { 
        
        DomainUpdateParameters.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DomainUpdateParameters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DomainUpdateParameters} obj Optional instance to populate.
     * @return {module:model/DomainUpdateParameters} The populated <code>DomainUpdateParameters</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DomainUpdateParameters();

            if (data.hasOwnProperty('allowTrafficFromAllIPs')) {
                obj['allowTrafficFromAllIPs'] = ApiClient.convertToType(data['allowTrafficFromAllIPs'], 'Boolean');
            }
            if (data.hasOwnProperty('inboundIpRules')) {
                obj['inboundIpRules'] = ApiClient.convertToType(data['inboundIpRules'], [InboundIpRule]);
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], {'String': 'String'});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DomainUpdateParameters</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DomainUpdateParameters</code>.
     */
    static validateJSON(data) {
        if (data['inboundIpRules']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['inboundIpRules'])) {
                throw new Error("Expected the field `inboundIpRules` to be an array in the JSON data but got " + data['inboundIpRules']);
            }
            // validate the optional field `inboundIpRules` (array)
            for (const item of data['inboundIpRules']) {
                InboundIpRule.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * This determines if IP filtering rules ought to be evaluated or not. By default it will not evaluate and will allow traffic from all IPs.
 * @member {Boolean} allowTrafficFromAllIPs
 */
DomainUpdateParameters.prototype['allowTrafficFromAllIPs'] = undefined;

/**
 * This determines the IP filtering rules that ought be applied when events are received on this domain.
 * @member {Array.<module:model/InboundIpRule>} inboundIpRules
 */
DomainUpdateParameters.prototype['inboundIpRules'] = undefined;

/**
 * Tags of the domains resource
 * @member {Object.<String, String>} tags
 */
DomainUpdateParameters.prototype['tags'] = undefined;






export default DomainUpdateParameters;

