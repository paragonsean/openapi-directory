/*
 * EventGridManagementClient
 * Azure EventGrid Management Client
 *
 * The version of the OpenAPI document: 2019-02-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Domain;
import org.openapitools.client.model.DomainRegenerateKeyRequest;
import org.openapitools.client.model.DomainSharedAccessKeys;
import org.openapitools.client.model.DomainUpdateParameters;
import org.openapitools.client.model.DomainsListResult;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DomainsApi
 */
@Disabled
public class DomainsApiTest {

    private final DomainsApi api = new DomainsApi();

    /**
     * Create or update a domain
     *
     * Asynchronously creates or updates a new domain with the specified parameters.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void domainsCreateOrUpdateTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String domainName = null;
        String apiVersion = null;
        Domain domainInfo = null;
        Domain response = api.domainsCreateOrUpdate(subscriptionId, resourceGroupName, domainName, apiVersion, domainInfo);
        // TODO: test validations
    }

    /**
     * Delete a domain
     *
     * Delete existing domain
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void domainsDeleteTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String domainName = null;
        String apiVersion = null;
        api.domainsDelete(subscriptionId, resourceGroupName, domainName, apiVersion);
        // TODO: test validations
    }

    /**
     * Get a domain
     *
     * Get properties of a domain
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void domainsGetTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String domainName = null;
        String apiVersion = null;
        Domain response = api.domainsGet(subscriptionId, resourceGroupName, domainName, apiVersion);
        // TODO: test validations
    }

    /**
     * List domains under a resource group
     *
     * List all the domains under a resource group
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void domainsListByResourceGroupTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String apiVersion = null;
        String $filter = null;
        Integer $top = null;
        DomainsListResult response = api.domainsListByResourceGroup(subscriptionId, resourceGroupName, apiVersion, $filter, $top);
        // TODO: test validations
    }

    /**
     * List domains under an Azure subscription
     *
     * List all the domains under an Azure subscription
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void domainsListBySubscriptionTest() throws ApiException {
        String subscriptionId = null;
        String apiVersion = null;
        String $filter = null;
        Integer $top = null;
        DomainsListResult response = api.domainsListBySubscription(subscriptionId, apiVersion, $filter, $top);
        // TODO: test validations
    }

    /**
     * List keys for a domain
     *
     * List the two keys used to publish to a domain
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void domainsListSharedAccessKeysTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String domainName = null;
        String apiVersion = null;
        DomainSharedAccessKeys response = api.domainsListSharedAccessKeys(subscriptionId, resourceGroupName, domainName, apiVersion);
        // TODO: test validations
    }

    /**
     * Regenerate key for a domain
     *
     * Regenerate a shared access key for a domain
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void domainsRegenerateKeyTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String domainName = null;
        String apiVersion = null;
        DomainRegenerateKeyRequest regenerateKeyRequest = null;
        DomainSharedAccessKeys response = api.domainsRegenerateKey(subscriptionId, resourceGroupName, domainName, apiVersion, regenerateKeyRequest);
        // TODO: test validations
    }

    /**
     * Update a domain
     *
     * Asynchronously updates a domain with the specified parameters.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void domainsUpdateTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String domainName = null;
        String apiVersion = null;
        DomainUpdateParameters domainUpdateParameters = null;
        Domain response = api.domainsUpdate(subscriptionId, resourceGroupName, domainName, apiVersion, domainUpdateParameters);
        // TODO: test validations
    }

}
