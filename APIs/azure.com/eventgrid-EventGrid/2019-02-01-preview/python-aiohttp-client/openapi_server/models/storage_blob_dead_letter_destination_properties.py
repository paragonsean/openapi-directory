# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class StorageBlobDeadLetterDestinationProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, blob_container_name: str=None, resource_id: str=None):
        """StorageBlobDeadLetterDestinationProperties - a model defined in OpenAPI

        :param blob_container_name: The blob_container_name of this StorageBlobDeadLetterDestinationProperties.
        :param resource_id: The resource_id of this StorageBlobDeadLetterDestinationProperties.
        """
        self.openapi_types = {
            'blob_container_name': str,
            'resource_id': str
        }

        self.attribute_map = {
            'blob_container_name': 'blobContainerName',
            'resource_id': 'resourceId'
        }

        self._blob_container_name = blob_container_name
        self._resource_id = resource_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StorageBlobDeadLetterDestinationProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StorageBlobDeadLetterDestinationProperties of this StorageBlobDeadLetterDestinationProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def blob_container_name(self):
        """Gets the blob_container_name of this StorageBlobDeadLetterDestinationProperties.

        The name of the Storage blob container that is the destination of the deadletter events

        :return: The blob_container_name of this StorageBlobDeadLetterDestinationProperties.
        :rtype: str
        """
        return self._blob_container_name

    @blob_container_name.setter
    def blob_container_name(self, blob_container_name):
        """Sets the blob_container_name of this StorageBlobDeadLetterDestinationProperties.

        The name of the Storage blob container that is the destination of the deadletter events

        :param blob_container_name: The blob_container_name of this StorageBlobDeadLetterDestinationProperties.
        :type blob_container_name: str
        """

        self._blob_container_name = blob_container_name

    @property
    def resource_id(self):
        """Gets the resource_id of this StorageBlobDeadLetterDestinationProperties.

        The Azure Resource ID of the storage account that is the destination of the deadletter events

        :return: The resource_id of this StorageBlobDeadLetterDestinationProperties.
        :rtype: str
        """
        return self._resource_id

    @resource_id.setter
    def resource_id(self, resource_id):
        """Sets the resource_id of this StorageBlobDeadLetterDestinationProperties.

        The Azure Resource ID of the storage account that is the destination of the deadletter events

        :param resource_id: The resource_id of this StorageBlobDeadLetterDestinationProperties.
        :type resource_id: str
        """

        self._resource_id = resource_id
