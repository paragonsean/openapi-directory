/**
 * EventGridManagementClient
 * Azure EventGrid Management Client
 *
 * The version of the OpenAPI document: 2019-02-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDomainSharedAccessKeys.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDomainSharedAccessKeys::OAIDomainSharedAccessKeys(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDomainSharedAccessKeys::OAIDomainSharedAccessKeys() {
    this->initializeModel();
}

OAIDomainSharedAccessKeys::~OAIDomainSharedAccessKeys() {}

void OAIDomainSharedAccessKeys::initializeModel() {

    m_key1_isSet = false;
    m_key1_isValid = false;

    m_key2_isSet = false;
    m_key2_isValid = false;
}

void OAIDomainSharedAccessKeys::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDomainSharedAccessKeys::fromJsonObject(QJsonObject json) {

    m_key1_isValid = ::OpenAPI::fromJsonValue(m_key1, json[QString("key1")]);
    m_key1_isSet = !json[QString("key1")].isNull() && m_key1_isValid;

    m_key2_isValid = ::OpenAPI::fromJsonValue(m_key2, json[QString("key2")]);
    m_key2_isSet = !json[QString("key2")].isNull() && m_key2_isValid;
}

QString OAIDomainSharedAccessKeys::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDomainSharedAccessKeys::asJsonObject() const {
    QJsonObject obj;
    if (m_key1_isSet) {
        obj.insert(QString("key1"), ::OpenAPI::toJsonValue(m_key1));
    }
    if (m_key2_isSet) {
        obj.insert(QString("key2"), ::OpenAPI::toJsonValue(m_key2));
    }
    return obj;
}

QString OAIDomainSharedAccessKeys::getKey1() const {
    return m_key1;
}
void OAIDomainSharedAccessKeys::setKey1(const QString &key1) {
    m_key1 = key1;
    m_key1_isSet = true;
}

bool OAIDomainSharedAccessKeys::is_key1_Set() const{
    return m_key1_isSet;
}

bool OAIDomainSharedAccessKeys::is_key1_Valid() const{
    return m_key1_isValid;
}

QString OAIDomainSharedAccessKeys::getKey2() const {
    return m_key2;
}
void OAIDomainSharedAccessKeys::setKey2(const QString &key2) {
    m_key2 = key2;
    m_key2_isSet = true;
}

bool OAIDomainSharedAccessKeys::is_key2_Set() const{
    return m_key2_isSet;
}

bool OAIDomainSharedAccessKeys::is_key2_Valid() const{
    return m_key2_isValid;
}

bool OAIDomainSharedAccessKeys::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_key1_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_key2_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDomainSharedAccessKeys::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
