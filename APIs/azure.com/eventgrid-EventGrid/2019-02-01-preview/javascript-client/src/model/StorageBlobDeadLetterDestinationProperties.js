/**
 * EventGridManagementClient
 * Azure EventGrid Management Client
 *
 * The version of the OpenAPI document: 2019-02-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The StorageBlobDeadLetterDestinationProperties model module.
 * @module model/StorageBlobDeadLetterDestinationProperties
 * @version 2019-02-01-preview
 */
class StorageBlobDeadLetterDestinationProperties {
    /**
     * Constructs a new <code>StorageBlobDeadLetterDestinationProperties</code>.
     * Properties of the storage blob based dead letter destination.
     * @alias module:model/StorageBlobDeadLetterDestinationProperties
     */
    constructor() { 
        
        StorageBlobDeadLetterDestinationProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>StorageBlobDeadLetterDestinationProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/StorageBlobDeadLetterDestinationProperties} obj Optional instance to populate.
     * @return {module:model/StorageBlobDeadLetterDestinationProperties} The populated <code>StorageBlobDeadLetterDestinationProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StorageBlobDeadLetterDestinationProperties();

            if (data.hasOwnProperty('blobContainerName')) {
                obj['blobContainerName'] = ApiClient.convertToType(data['blobContainerName'], 'String');
            }
            if (data.hasOwnProperty('resourceId')) {
                obj['resourceId'] = ApiClient.convertToType(data['resourceId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>StorageBlobDeadLetterDestinationProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>StorageBlobDeadLetterDestinationProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['blobContainerName'] && !(typeof data['blobContainerName'] === 'string' || data['blobContainerName'] instanceof String)) {
            throw new Error("Expected the field `blobContainerName` to be a primitive type in the JSON string but got " + data['blobContainerName']);
        }
        // ensure the json data is a string
        if (data['resourceId'] && !(typeof data['resourceId'] === 'string' || data['resourceId'] instanceof String)) {
            throw new Error("Expected the field `resourceId` to be a primitive type in the JSON string but got " + data['resourceId']);
        }

        return true;
    }


}



/**
 * The name of the Storage blob container that is the destination of the deadletter events
 * @member {String} blobContainerName
 */
StorageBlobDeadLetterDestinationProperties.prototype['blobContainerName'] = undefined;

/**
 * The Azure Resource ID of the storage account that is the destination of the deadletter events
 * @member {String} resourceId
 */
StorageBlobDeadLetterDestinationProperties.prototype['resourceId'] = undefined;






export default StorageBlobDeadLetterDestinationProperties;

