# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.event_subscription_destination import EventSubscriptionDestination
from openapi_server.models.event_subscription_filter import EventSubscriptionFilter
from openapi_server import util


class EventSubscriptionUpdateParameters(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, destination: EventSubscriptionDestination=None, filter: EventSubscriptionFilter=None, labels: List[str]=None):
        """EventSubscriptionUpdateParameters - a model defined in OpenAPI

        :param destination: The destination of this EventSubscriptionUpdateParameters.
        :param filter: The filter of this EventSubscriptionUpdateParameters.
        :param labels: The labels of this EventSubscriptionUpdateParameters.
        """
        self.openapi_types = {
            'destination': EventSubscriptionDestination,
            'filter': EventSubscriptionFilter,
            'labels': List[str]
        }

        self.attribute_map = {
            'destination': 'destination',
            'filter': 'filter',
            'labels': 'labels'
        }

        self._destination = destination
        self._filter = filter
        self._labels = labels

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EventSubscriptionUpdateParameters':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EventSubscriptionUpdateParameters of this EventSubscriptionUpdateParameters.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def destination(self):
        """Gets the destination of this EventSubscriptionUpdateParameters.


        :return: The destination of this EventSubscriptionUpdateParameters.
        :rtype: EventSubscriptionDestination
        """
        return self._destination

    @destination.setter
    def destination(self, destination):
        """Sets the destination of this EventSubscriptionUpdateParameters.


        :param destination: The destination of this EventSubscriptionUpdateParameters.
        :type destination: EventSubscriptionDestination
        """

        self._destination = destination

    @property
    def filter(self):
        """Gets the filter of this EventSubscriptionUpdateParameters.


        :return: The filter of this EventSubscriptionUpdateParameters.
        :rtype: EventSubscriptionFilter
        """
        return self._filter

    @filter.setter
    def filter(self, filter):
        """Sets the filter of this EventSubscriptionUpdateParameters.


        :param filter: The filter of this EventSubscriptionUpdateParameters.
        :type filter: EventSubscriptionFilter
        """

        self._filter = filter

    @property
    def labels(self):
        """Gets the labels of this EventSubscriptionUpdateParameters.

        List of user defined labels.

        :return: The labels of this EventSubscriptionUpdateParameters.
        :rtype: List[str]
        """
        return self._labels

    @labels.setter
    def labels(self, labels):
        """Sets the labels of this EventSubscriptionUpdateParameters.

        List of user defined labels.

        :param labels: The labels of this EventSubscriptionUpdateParameters.
        :type labels: List[str]
        """

        self._labels = labels
