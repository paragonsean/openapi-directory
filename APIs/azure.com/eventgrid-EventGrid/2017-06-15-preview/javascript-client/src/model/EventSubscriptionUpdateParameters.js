/**
 * EventGridManagementClient
 * Azure EventGrid Management Client
 *
 * The version of the OpenAPI document: 2017-06-15-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EventSubscriptionDestination from './EventSubscriptionDestination';
import EventSubscriptionFilter from './EventSubscriptionFilter';

/**
 * The EventSubscriptionUpdateParameters model module.
 * @module model/EventSubscriptionUpdateParameters
 * @version 2017-06-15-preview
 */
class EventSubscriptionUpdateParameters {
    /**
     * Constructs a new <code>EventSubscriptionUpdateParameters</code>.
     * Properties of the Event Subscription update
     * @alias module:model/EventSubscriptionUpdateParameters
     */
    constructor() { 
        
        EventSubscriptionUpdateParameters.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EventSubscriptionUpdateParameters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EventSubscriptionUpdateParameters} obj Optional instance to populate.
     * @return {module:model/EventSubscriptionUpdateParameters} The populated <code>EventSubscriptionUpdateParameters</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EventSubscriptionUpdateParameters();

            if (data.hasOwnProperty('destination')) {
                obj['destination'] = EventSubscriptionDestination.constructFromObject(data['destination']);
            }
            if (data.hasOwnProperty('filter')) {
                obj['filter'] = EventSubscriptionFilter.constructFromObject(data['filter']);
            }
            if (data.hasOwnProperty('labels')) {
                obj['labels'] = ApiClient.convertToType(data['labels'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EventSubscriptionUpdateParameters</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EventSubscriptionUpdateParameters</code>.
     */
    static validateJSON(data) {
        // validate the optional field `destination`
        if (data['destination']) { // data not null
          EventSubscriptionDestination.validateJSON(data['destination']);
        }
        // validate the optional field `filter`
        if (data['filter']) { // data not null
          EventSubscriptionFilter.validateJSON(data['filter']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['labels'])) {
            throw new Error("Expected the field `labels` to be an array in the JSON data but got " + data['labels']);
        }

        return true;
    }


}



/**
 * @member {module:model/EventSubscriptionDestination} destination
 */
EventSubscriptionUpdateParameters.prototype['destination'] = undefined;

/**
 * @member {module:model/EventSubscriptionFilter} filter
 */
EventSubscriptionUpdateParameters.prototype['filter'] = undefined;

/**
 * List of user defined labels.
 * @member {Array.<String>} labels
 */
EventSubscriptionUpdateParameters.prototype['labels'] = undefined;






export default EventSubscriptionUpdateParameters;

