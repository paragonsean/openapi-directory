/**
 * EventGridManagementClient
 * Azure EventGrid Management Client
 *
 * The version of the OpenAPI document: 2017-06-15-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EventSubscriptionDestinationProperties from './EventSubscriptionDestinationProperties';

/**
 * The EventSubscriptionDestination model module.
 * @module model/EventSubscriptionDestination
 * @version 2017-06-15-preview
 */
class EventSubscriptionDestination {
    /**
     * Constructs a new <code>EventSubscriptionDestination</code>.
     * Information about the destination for an event subscription
     * @alias module:model/EventSubscriptionDestination
     */
    constructor() { 
        
        EventSubscriptionDestination.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EventSubscriptionDestination</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EventSubscriptionDestination} obj Optional instance to populate.
     * @return {module:model/EventSubscriptionDestination} The populated <code>EventSubscriptionDestination</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EventSubscriptionDestination();

            if (data.hasOwnProperty('endpointType')) {
                obj['endpointType'] = ApiClient.convertToType(data['endpointType'], 'String');
            }
            if (data.hasOwnProperty('properties')) {
                obj['properties'] = EventSubscriptionDestinationProperties.constructFromObject(data['properties']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EventSubscriptionDestination</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EventSubscriptionDestination</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['endpointType'] && !(typeof data['endpointType'] === 'string' || data['endpointType'] instanceof String)) {
            throw new Error("Expected the field `endpointType` to be a primitive type in the JSON string but got " + data['endpointType']);
        }
        // validate the optional field `properties`
        if (data['properties']) { // data not null
          EventSubscriptionDestinationProperties.validateJSON(data['properties']);
        }

        return true;
    }


}



/**
 * Type of the endpoint for the event subscription destination
 * @member {module:model/EventSubscriptionDestination.EndpointTypeEnum} endpointType
 */
EventSubscriptionDestination.prototype['endpointType'] = undefined;

/**
 * @member {module:model/EventSubscriptionDestinationProperties} properties
 */
EventSubscriptionDestination.prototype['properties'] = undefined;





/**
 * Allowed values for the <code>endpointType</code> property.
 * @enum {String}
 * @readonly
 */
EventSubscriptionDestination['EndpointTypeEnum'] = {

    /**
     * value: "WebHook"
     * @const
     */
    "WebHook": "WebHook"
};



export default EventSubscriptionDestination;

