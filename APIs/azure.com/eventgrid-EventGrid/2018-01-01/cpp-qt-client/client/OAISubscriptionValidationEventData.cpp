/**
 * EventGridClient
 * Azure EventGrid Client
 *
 * The version of the OpenAPI document: 2018-01-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISubscriptionValidationEventData.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISubscriptionValidationEventData::OAISubscriptionValidationEventData(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISubscriptionValidationEventData::OAISubscriptionValidationEventData() {
    this->initializeModel();
}

OAISubscriptionValidationEventData::~OAISubscriptionValidationEventData() {}

void OAISubscriptionValidationEventData::initializeModel() {

    m_validation_code_isSet = false;
    m_validation_code_isValid = false;

    m_validation_url_isSet = false;
    m_validation_url_isValid = false;
}

void OAISubscriptionValidationEventData::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISubscriptionValidationEventData::fromJsonObject(QJsonObject json) {

    m_validation_code_isValid = ::OpenAPI::fromJsonValue(m_validation_code, json[QString("validationCode")]);
    m_validation_code_isSet = !json[QString("validationCode")].isNull() && m_validation_code_isValid;

    m_validation_url_isValid = ::OpenAPI::fromJsonValue(m_validation_url, json[QString("validationUrl")]);
    m_validation_url_isSet = !json[QString("validationUrl")].isNull() && m_validation_url_isValid;
}

QString OAISubscriptionValidationEventData::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISubscriptionValidationEventData::asJsonObject() const {
    QJsonObject obj;
    if (m_validation_code_isSet) {
        obj.insert(QString("validationCode"), ::OpenAPI::toJsonValue(m_validation_code));
    }
    if (m_validation_url_isSet) {
        obj.insert(QString("validationUrl"), ::OpenAPI::toJsonValue(m_validation_url));
    }
    return obj;
}

QString OAISubscriptionValidationEventData::getValidationCode() const {
    return m_validation_code;
}
void OAISubscriptionValidationEventData::setValidationCode(const QString &validation_code) {
    m_validation_code = validation_code;
    m_validation_code_isSet = true;
}

bool OAISubscriptionValidationEventData::is_validation_code_Set() const{
    return m_validation_code_isSet;
}

bool OAISubscriptionValidationEventData::is_validation_code_Valid() const{
    return m_validation_code_isValid;
}

QString OAISubscriptionValidationEventData::getValidationUrl() const {
    return m_validation_url;
}
void OAISubscriptionValidationEventData::setValidationUrl(const QString &validation_url) {
    m_validation_url = validation_url;
    m_validation_url_isSet = true;
}

bool OAISubscriptionValidationEventData::is_validation_url_Set() const{
    return m_validation_url_isSet;
}

bool OAISubscriptionValidationEventData::is_validation_url_Valid() const{
    return m_validation_url_isValid;
}

bool OAISubscriptionValidationEventData::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_validation_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_validation_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISubscriptionValidationEventData::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
