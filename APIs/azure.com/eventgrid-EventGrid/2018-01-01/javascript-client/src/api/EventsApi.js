/**
 * EventGridClient
 * Azure EventGrid Client
 *
 * The version of the OpenAPI document: 2018-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import EventGridEvent from '../model/EventGridEvent';

/**
* Events service.
* @module api/EventsApi
* @version 2018-01-01
*/
export default class EventsApi {

    /**
    * Constructs a new EventsApi. 
    * @alias module:api/EventsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the publishEvents operation.
     * @callback module:api/EventsApi~publishEventsCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Publishes a batch of events to an Azure Event Grid topic.
     * @param {String} apiVersion Version of the API to be used with the client request.
     * @param {Array.<module:model/EventGridEvent>} events An array of events to be published to Event Grid.
     * @param {module:api/EventsApi~publishEventsCallback} callback The callback function, accepting three arguments: error, data, response
     */
    publishEvents(apiVersion, events, callback) {
      let postBody = events;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling publishEvents");
      }
      // verify the required parameter 'events' is set
      if (events === undefined || events === null) {
        throw new Error("Missing the required parameter 'events' when calling publishEvents");
      }

      let pathParams = {
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/events', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
