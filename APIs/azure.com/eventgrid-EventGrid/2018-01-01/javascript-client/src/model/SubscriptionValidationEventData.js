/**
 * EventGridClient
 * Azure EventGrid Client
 *
 * The version of the OpenAPI document: 2018-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SubscriptionValidationEventData model module.
 * @module model/SubscriptionValidationEventData
 * @version 2018-01-01
 */
class SubscriptionValidationEventData {
    /**
     * Constructs a new <code>SubscriptionValidationEventData</code>.
     * Schema of the Data property of an EventGridEvent for a Microsoft.EventGrid.SubscriptionValidationEvent.
     * @alias module:model/SubscriptionValidationEventData
     */
    constructor() { 
        
        SubscriptionValidationEventData.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SubscriptionValidationEventData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SubscriptionValidationEventData} obj Optional instance to populate.
     * @return {module:model/SubscriptionValidationEventData} The populated <code>SubscriptionValidationEventData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SubscriptionValidationEventData();

            if (data.hasOwnProperty('validationCode')) {
                obj['validationCode'] = ApiClient.convertToType(data['validationCode'], 'String');
            }
            if (data.hasOwnProperty('validationUrl')) {
                obj['validationUrl'] = ApiClient.convertToType(data['validationUrl'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SubscriptionValidationEventData</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SubscriptionValidationEventData</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['validationCode'] && !(typeof data['validationCode'] === 'string' || data['validationCode'] instanceof String)) {
            throw new Error("Expected the field `validationCode` to be a primitive type in the JSON string but got " + data['validationCode']);
        }
        // ensure the json data is a string
        if (data['validationUrl'] && !(typeof data['validationUrl'] === 'string' || data['validationUrl'] instanceof String)) {
            throw new Error("Expected the field `validationUrl` to be a primitive type in the JSON string but got " + data['validationUrl']);
        }

        return true;
    }


}



/**
 * The validation code sent by Azure Event Grid to validate an event subscription. To complete the validation handshake, the subscriber must either respond with this validation code as part of the validation response, or perform a GET request on the validationUrl (available starting version 2018-05-01-preview).
 * @member {String} validationCode
 */
SubscriptionValidationEventData.prototype['validationCode'] = undefined;

/**
 * The validation URL sent by Azure Event Grid (available starting version 2018-05-01-preview). To complete the validation handshake, the subscriber must either respond with the validationCode as part of the validation response, or perform a GET request on the validationUrl (available starting version 2018-05-01-preview).
 * @member {String} validationUrl
 */
SubscriptionValidationEventData.prototype['validationUrl'] = undefined;






export default SubscriptionValidationEventData;

