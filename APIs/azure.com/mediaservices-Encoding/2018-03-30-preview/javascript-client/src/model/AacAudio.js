/**
 * Azure Media Services
 * This Swagger was generated by the API Framework.
 *
 * The version of the OpenAPI document: 2018-03-30-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Audio from './Audio';

/**
 * The AacAudio model module.
 * @module model/AacAudio
 * @version 2018-03-30-preview
 */
class AacAudio {
    /**
     * Constructs a new <code>AacAudio</code>.
     * Describes Advanced Audio Codec (AAC) audio encoding settings.
     * @alias module:model/AacAudio
     * @extends module:model/Audio
     * @implements module:model/Audio
     * @param odataType {String} The discriminator for derived types.
     */
    constructor(odataType) { 
        Audio.initialize(this, odataType);
        AacAudio.initialize(this, odataType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, odataType) { 
    }

    /**
     * Constructs a <code>AacAudio</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AacAudio} obj Optional instance to populate.
     * @return {module:model/AacAudio} The populated <code>AacAudio</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AacAudio();
            Audio.constructFromObject(data, obj);
            Audio.constructFromObject(data, obj);

            if (data.hasOwnProperty('profile')) {
                obj['profile'] = ApiClient.convertToType(data['profile'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AacAudio</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AacAudio</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AacAudio.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['profile'] && !(typeof data['profile'] === 'string' || data['profile'] instanceof String)) {
            throw new Error("Expected the field `profile` to be a primitive type in the JSON string but got " + data['profile']);
        }

        return true;
    }


}

AacAudio.RequiredProperties = ["@odata.type"];

/**
 * The encoding profile to be used when encoding audio with AAC.
 * @member {module:model/AacAudio.ProfileEnum} profile
 */
AacAudio.prototype['profile'] = undefined;


// Implement Audio interface:
/**
 * The discriminator for derived types.
 * @member {String} @odata.type
 */
Audio.prototype['@odata.type'] = undefined;
/**
 * An optional label for the codec. The label can be used to control muxing behavior.
 * @member {String} label
 */
Audio.prototype['label'] = undefined;



/**
 * Allowed values for the <code>profile</code> property.
 * @enum {String}
 * @readonly
 */
AacAudio['ProfileEnum'] = {

    /**
     * value: "AacLc"
     * @const
     */
    "AacLc": "AacLc",

    /**
     * value: "HeAacV1"
     * @const
     */
    "HeAacV1": "HeAacV1",

    /**
     * value: "HeAacV2"
     * @const
     */
    "HeAacV2": "HeAacV2"
};



export default AacAudio;

