/**
 * Azure Media Services
 * This Swagger was generated by the API Framework.
 *
 * The version of the OpenAPI document: 2018-03-30-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import JobInput from './JobInput';

/**
 * The JobInputClip model module.
 * @module model/JobInputClip
 * @version 2018-03-30-preview
 */
class JobInputClip {
    /**
     * Constructs a new <code>JobInputClip</code>.
     * Represents input files for a Job.
     * @alias module:model/JobInputClip
     * @extends module:model/JobInput
     * @implements module:model/JobInput
     * @param odataType {String} The discriminator for derived types.
     */
    constructor(odataType) { 
        JobInput.initialize(this, odataType);
        JobInputClip.initialize(this, odataType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, odataType) { 
    }

    /**
     * Constructs a <code>JobInputClip</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/JobInputClip} obj Optional instance to populate.
     * @return {module:model/JobInputClip} The populated <code>JobInputClip</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new JobInputClip();
            JobInput.constructFromObject(data, obj);
            JobInput.constructFromObject(data, obj);

            if (data.hasOwnProperty('files')) {
                obj['files'] = ApiClient.convertToType(data['files'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>JobInputClip</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>JobInputClip</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of JobInputClip.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is an array
        if (!Array.isArray(data['files'])) {
            throw new Error("Expected the field `files` to be an array in the JSON data but got " + data['files']);
        }

        return true;
    }


}

JobInputClip.RequiredProperties = ["@odata.type"];

/**
 * List of files. Required for JobInputHttp.
 * @member {Array.<String>} files
 */
JobInputClip.prototype['files'] = undefined;


// Implement JobInput interface:
/**
 * The discriminator for derived types.
 * @member {String} @odata.type
 */
JobInput.prototype['@odata.type'] = undefined;
/**
 * A label that is assigned to a JobInput, that is used to satisfy a reference used in the Transform. For example, a Transform can be authored so as to take an image file with the label 'xyz' and apply it as an overlay onto the input video before it is encoded. When submitting a Job, exactly one of the JobInputs should be the image file, and it should have the label 'xyz'.
 * @member {String} label
 */
JobInput.prototype['label'] = undefined;




export default JobInputClip;

