/*
 * Azure Media Services
 * This Swagger was generated by the API Framework.
 *
 * The version of the OpenAPI document: 2018-03-30-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ApiError;
import org.openapitools.client.model.Job;
import org.openapitools.client.model.JobCollection;
import org.openapitools.client.model.Transform;
import org.openapitools.client.model.TransformCollection;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Disabled
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    /**
     * Cancel Job
     *
     * Cancel a Job.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jobsCancelJobTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String accountName = null;
        String transformName = null;
        String jobName = null;
        String apiVersion = null;
        api.jobsCancelJob(subscriptionId, resourceGroupName, accountName, transformName, jobName, apiVersion);
        // TODO: test validations
    }

    /**
     * Create Job
     *
     * Creates a Job.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jobsCreateTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String accountName = null;
        String transformName = null;
        String jobName = null;
        String apiVersion = null;
        Job parameters = null;
        Job response = api.jobsCreate(subscriptionId, resourceGroupName, accountName, transformName, jobName, apiVersion, parameters);
        // TODO: test validations
    }

    /**
     * Delete Job
     *
     * Deletes a Job.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jobsDeleteTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String accountName = null;
        String transformName = null;
        String jobName = null;
        String apiVersion = null;
        api.jobsDelete(subscriptionId, resourceGroupName, accountName, transformName, jobName, apiVersion);
        // TODO: test validations
    }

    /**
     * Get Job
     *
     * Gets a Job.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jobsGetTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String accountName = null;
        String transformName = null;
        String jobName = null;
        String apiVersion = null;
        Job response = api.jobsGet(subscriptionId, resourceGroupName, accountName, transformName, jobName, apiVersion);
        // TODO: test validations
    }

    /**
     * List Jobs
     *
     * Lists all of the Jobs for the Transform.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jobsListTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String accountName = null;
        String transformName = null;
        String apiVersion = null;
        String $filter = null;
        Integer $top = null;
        Integer $skip = null;
        JobCollection response = api.jobsList(subscriptionId, resourceGroupName, accountName, transformName, apiVersion, $filter, $top, $skip);
        // TODO: test validations
    }

    /**
     * Create or Update Transform
     *
     * Creates or updates a new Transform.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void transformsCreateOrUpdateTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String accountName = null;
        String transformName = null;
        String apiVersion = null;
        Transform parameters = null;
        Transform response = api.transformsCreateOrUpdate(subscriptionId, resourceGroupName, accountName, transformName, apiVersion, parameters);
        // TODO: test validations
    }

    /**
     * Delete Transform
     *
     * Deletes a Transform.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void transformsDeleteTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String accountName = null;
        String transformName = null;
        String apiVersion = null;
        api.transformsDelete(subscriptionId, resourceGroupName, accountName, transformName, apiVersion);
        // TODO: test validations
    }

    /**
     * Get Transform
     *
     * Gets a Transform.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void transformsGetTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String accountName = null;
        String transformName = null;
        String apiVersion = null;
        Transform response = api.transformsGet(subscriptionId, resourceGroupName, accountName, transformName, apiVersion);
        // TODO: test validations
    }

    /**
     * List Transforms
     *
     * Lists the Transforms in the account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void transformsListTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String accountName = null;
        String apiVersion = null;
        String $filter = null;
        Integer $top = null;
        Integer $skip = null;
        TransformCollection response = api.transformsList(subscriptionId, resourceGroupName, accountName, apiVersion, $filter, $top, $skip);
        // TODO: test validations
    }

    /**
     * Update Transform
     *
     * Updates a Transform.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void transformsUpdateTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String accountName = null;
        String transformName = null;
        String apiVersion = null;
        Transform parameters = null;
        Transform response = api.transformsUpdate(subscriptionId, resourceGroupName, accountName, transformName, apiVersion, parameters);
        // TODO: test validations
    }

}
