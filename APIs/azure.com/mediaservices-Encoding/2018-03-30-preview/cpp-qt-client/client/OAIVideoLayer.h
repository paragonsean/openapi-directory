/**
 * Azure Media Services
 * This Swagger was generated by the API Framework.
 *
 * The version of the OpenAPI document: 2018-03-30-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVideoLayer.h
 *
 * Describes the settings to be used when encoding the input video into a desired output bitrate layer.
 */

#ifndef OAIVideoLayer_H
#define OAIVideoLayer_H

#include <QJsonObject>

#include "OAILayer.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIVideoLayer : public OAIObject {
public:
    OAIVideoLayer();
    OAIVideoLayer(QString json);
    ~OAIVideoLayer() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAdaptiveBFrame() const;
    void setAdaptiveBFrame(const bool &adaptive_b_frame);
    bool is_adaptive_b_frame_Set() const;
    bool is_adaptive_b_frame_Valid() const;

    qint32 getBFrames() const;
    void setBFrames(const qint32 &b_frames);
    bool is_b_frames_Set() const;
    bool is_b_frames_Valid() const;

    qint32 getBitrate() const;
    void setBitrate(const qint32 &bitrate);
    bool is_bitrate_Set() const;
    bool is_bitrate_Valid() const;

    QString getFrameRate() const;
    void setFrameRate(const QString &frame_rate);
    bool is_frame_rate_Set() const;
    bool is_frame_rate_Valid() const;

    qint32 getMaxBitrate() const;
    void setMaxBitrate(const qint32 &max_bitrate);
    bool is_max_bitrate_Set() const;
    bool is_max_bitrate_Valid() const;

    qint32 getSlices() const;
    void setSlices(const qint32 &slices);
    bool is_slices_Set() const;
    bool is_slices_Valid() const;

    QString getOdataType() const;
    void setOdataType(const QString &odata_type);
    bool is_odata_type_Set() const;
    bool is_odata_type_Valid() const;

    QString getHeight() const;
    void setHeight(const QString &height);
    bool is_height_Set() const;
    bool is_height_Valid() const;

    QString getLabel() const;
    void setLabel(const QString &label);
    bool is_label_Set() const;
    bool is_label_Valid() const;

    QString getWidth() const;
    void setWidth(const QString &width);
    bool is_width_Set() const;
    bool is_width_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_adaptive_b_frame;
    bool m_adaptive_b_frame_isSet;
    bool m_adaptive_b_frame_isValid;

    qint32 m_b_frames;
    bool m_b_frames_isSet;
    bool m_b_frames_isValid;

    qint32 m_bitrate;
    bool m_bitrate_isSet;
    bool m_bitrate_isValid;

    QString m_frame_rate;
    bool m_frame_rate_isSet;
    bool m_frame_rate_isValid;

    qint32 m_max_bitrate;
    bool m_max_bitrate_isSet;
    bool m_max_bitrate_isValid;

    qint32 m_slices;
    bool m_slices_isSet;
    bool m_slices_isValid;

    QString m_odata_type;
    bool m_odata_type_isSet;
    bool m_odata_type_isValid;

    QString m_height;
    bool m_height_isSet;
    bool m_height_isValid;

    QString m_label;
    bool m_label_isSet;
    bool m_label_isValid;

    QString m_width;
    bool m_width_isSet;
    bool m_width_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVideoLayer)

#endif // OAIVideoLayer_H
