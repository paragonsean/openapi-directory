/**
 * Azure Media Services
 * This Swagger was generated by the API Framework.
 *
 * The version of the OpenAPI document: 2018-07-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AudioAnalyzerPreset from './AudioAnalyzerPreset';

/**
 * The VideoAnalyzerPreset model module.
 * @module model/VideoAnalyzerPreset
 * @version 2018-07-01
 */
class VideoAnalyzerPreset {
    /**
     * Constructs a new <code>VideoAnalyzerPreset</code>.
     * A video analyzer preset that extracts insights (rich metadata) from both audio and video, and outputs a JSON format file.
     * @alias module:model/VideoAnalyzerPreset
     * @extends module:model/AudioAnalyzerPreset
     * @implements module:model/AudioAnalyzerPreset
     * @param odataType {String} The discriminator for derived types.
     */
    constructor(odataType) { 
        AudioAnalyzerPreset.initialize(this, odataType);
        VideoAnalyzerPreset.initialize(this, odataType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, odataType) { 
    }

    /**
     * Constructs a <code>VideoAnalyzerPreset</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VideoAnalyzerPreset} obj Optional instance to populate.
     * @return {module:model/VideoAnalyzerPreset} The populated <code>VideoAnalyzerPreset</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VideoAnalyzerPreset();
            AudioAnalyzerPreset.constructFromObject(data, obj);
            AudioAnalyzerPreset.constructFromObject(data, obj);

            if (data.hasOwnProperty('insightsToExtract')) {
                obj['insightsToExtract'] = ApiClient.convertToType(data['insightsToExtract'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VideoAnalyzerPreset</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VideoAnalyzerPreset</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of VideoAnalyzerPreset.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['insightsToExtract'] && !(typeof data['insightsToExtract'] === 'string' || data['insightsToExtract'] instanceof String)) {
            throw new Error("Expected the field `insightsToExtract` to be a primitive type in the JSON string but got " + data['insightsToExtract']);
        }

        return true;
    }


}

VideoAnalyzerPreset.RequiredProperties = ["@odata.type"];

/**
 * Defines the type of insights that you want the service to generate. The allowed values are 'AudioInsightsOnly', 'VideoInsightsOnly', and 'AllInsights'. The default is AllInsights. If you set this to AllInsights and the input is audio only, then only audio insights are generated. Similarly if the input is video only, then only video insights are generated. It is recommended that you not use AudioInsightsOnly if you expect some of your inputs to be video only; or use VideoInsightsOnly if you expect some of your inputs to be audio only. Your Jobs in such conditions would error out.
 * @member {module:model/VideoAnalyzerPreset.InsightsToExtractEnum} insightsToExtract
 */
VideoAnalyzerPreset.prototype['insightsToExtract'] = undefined;


// Implement AudioAnalyzerPreset interface:
/**
 * The discriminator for derived types.
 * @member {String} @odata.type
 */
AudioAnalyzerPreset.prototype['@odata.type'] = undefined;



/**
 * Allowed values for the <code>insightsToExtract</code> property.
 * @enum {String}
 * @readonly
 */
VideoAnalyzerPreset['InsightsToExtractEnum'] = {

    /**
     * value: "AudioInsightsOnly"
     * @const
     */
    "AudioInsightsOnly": "AudioInsightsOnly",

    /**
     * value: "VideoInsightsOnly"
     * @const
     */
    "VideoInsightsOnly": "VideoInsightsOnly",

    /**
     * value: "AllInsights"
     * @const
     */
    "AllInsights": "AllInsights"
};



export default VideoAnalyzerPreset;

