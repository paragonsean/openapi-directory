/**
 * Azure Media Services
 * This Swagger was generated by the API Framework.
 *
 * The version of the OpenAPI document: 2018-07-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIJobInputs.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIJobInputs::OAIJobInputs(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIJobInputs::OAIJobInputs() {
    this->initializeModel();
}

OAIJobInputs::~OAIJobInputs() {}

void OAIJobInputs::initializeModel() {

    m_inputs_isSet = false;
    m_inputs_isValid = false;

    m_odata_type_isSet = false;
    m_odata_type_isValid = false;
}

void OAIJobInputs::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIJobInputs::fromJsonObject(QJsonObject json) {

    m_inputs_isValid = ::OpenAPI::fromJsonValue(m_inputs, json[QString("inputs")]);
    m_inputs_isSet = !json[QString("inputs")].isNull() && m_inputs_isValid;

    m_odata_type_isValid = ::OpenAPI::fromJsonValue(m_odata_type, json[QString("@odata.type")]);
    m_odata_type_isSet = !json[QString("@odata.type")].isNull() && m_odata_type_isValid;
}

QString OAIJobInputs::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIJobInputs::asJsonObject() const {
    QJsonObject obj;
    if (m_inputs.size() > 0) {
        obj.insert(QString("inputs"), ::OpenAPI::toJsonValue(m_inputs));
    }
    if (m_odata_type_isSet) {
        obj.insert(QString("@odata.type"), ::OpenAPI::toJsonValue(m_odata_type));
    }
    return obj;
}

QList<OAIJobInput> OAIJobInputs::getInputs() const {
    return m_inputs;
}
void OAIJobInputs::setInputs(const QList<OAIJobInput> &inputs) {
    m_inputs = inputs;
    m_inputs_isSet = true;
}

bool OAIJobInputs::is_inputs_Set() const{
    return m_inputs_isSet;
}

bool OAIJobInputs::is_inputs_Valid() const{
    return m_inputs_isValid;
}

QString OAIJobInputs::getOdataType() const {
    return m_odata_type;
}
void OAIJobInputs::setOdataType(const QString &odata_type) {
    m_odata_type = odata_type;
    m_odata_type_isSet = true;
}

bool OAIJobInputs::is_odata_type_Set() const{
    return m_odata_type_isSet;
}

bool OAIJobInputs::is_odata_type_Valid() const{
    return m_odata_type_isValid;
}

bool OAIJobInputs::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_inputs.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_odata_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIJobInputs::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_odata_type_isValid && true;
}

} // namespace OpenAPI
