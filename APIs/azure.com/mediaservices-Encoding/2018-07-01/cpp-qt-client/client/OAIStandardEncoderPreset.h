/**
 * Azure Media Services
 * This Swagger was generated by the API Framework.
 *
 * The version of the OpenAPI document: 2018-07-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStandardEncoderPreset.h
 *
 * Describes all the settings to be used when encoding the input video with the Standard Encoder.
 */

#ifndef OAIStandardEncoderPreset_H
#define OAIStandardEncoderPreset_H

#include <QJsonObject>

#include "OAICodec.h"
#include "OAIFilters.h"
#include "OAIFormat.h"
#include "OAIPreset.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICodec;
class OAIFilters;
class OAIFormat;

class OAIStandardEncoderPreset : public OAIObject {
public:
    OAIStandardEncoderPreset();
    OAIStandardEncoderPreset(QString json);
    ~OAIStandardEncoderPreset() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAICodec> getCodecs() const;
    void setCodecs(const QList<OAICodec> &codecs);
    bool is_codecs_Set() const;
    bool is_codecs_Valid() const;

    OAIFilters getFilters() const;
    void setFilters(const OAIFilters &filters);
    bool is_filters_Set() const;
    bool is_filters_Valid() const;

    QList<OAIFormat> getFormats() const;
    void setFormats(const QList<OAIFormat> &formats);
    bool is_formats_Set() const;
    bool is_formats_Valid() const;

    QString getOdataType() const;
    void setOdataType(const QString &odata_type);
    bool is_odata_type_Set() const;
    bool is_odata_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAICodec> m_codecs;
    bool m_codecs_isSet;
    bool m_codecs_isValid;

    OAIFilters m_filters;
    bool m_filters_isSet;
    bool m_filters_isValid;

    QList<OAIFormat> m_formats;
    bool m_formats_isSet;
    bool m_formats_isValid;

    QString m_odata_type;
    bool m_odata_type_isSet;
    bool m_odata_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStandardEncoderPreset)

#endif // OAIStandardEncoderPreset_H
