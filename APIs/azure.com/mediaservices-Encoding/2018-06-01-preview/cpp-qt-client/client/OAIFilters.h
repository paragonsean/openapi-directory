/**
 * Azure Media Services
 * This Swagger was generated by the API Framework.
 *
 * The version of the OpenAPI document: 2018-06-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFilters.h
 *
 * Describes all the filtering operations, such as de-interlacing, rotation etc. that are to be applied to the input media before encoding.
 */

#ifndef OAIFilters_H
#define OAIFilters_H

#include <QJsonObject>

#include "OAIDeinterlace.h"
#include "OAIOverlay.h"
#include "OAIRectangle.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIRectangle;
class OAIDeinterlace;
class OAIOverlay;

class OAIFilters : public OAIObject {
public:
    OAIFilters();
    OAIFilters(QString json);
    ~OAIFilters() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIRectangle getCrop() const;
    void setCrop(const OAIRectangle &crop);
    bool is_crop_Set() const;
    bool is_crop_Valid() const;

    OAIDeinterlace getDeinterlace() const;
    void setDeinterlace(const OAIDeinterlace &deinterlace);
    bool is_deinterlace_Set() const;
    bool is_deinterlace_Valid() const;

    QList<OAIOverlay> getOverlays() const;
    void setOverlays(const QList<OAIOverlay> &overlays);
    bool is_overlays_Set() const;
    bool is_overlays_Valid() const;

    QString getRotation() const;
    void setRotation(const QString &rotation);
    bool is_rotation_Set() const;
    bool is_rotation_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIRectangle m_crop;
    bool m_crop_isSet;
    bool m_crop_isValid;

    OAIDeinterlace m_deinterlace;
    bool m_deinterlace_isSet;
    bool m_deinterlace_isValid;

    QList<OAIOverlay> m_overlays;
    bool m_overlays_isSet;
    bool m_overlays_isValid;

    QString m_rotation;
    bool m_rotation_isSet;
    bool m_rotation_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFilters)

#endif // OAIFilters_H
