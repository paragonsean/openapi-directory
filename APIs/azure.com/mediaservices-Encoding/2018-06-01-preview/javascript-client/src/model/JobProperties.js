/**
 * Azure Media Services
 * This Swagger was generated by the API Framework.
 *
 * The version of the OpenAPI document: 2018-06-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import JobInput from './JobInput';
import JobOutput from './JobOutput';

/**
 * The JobProperties model module.
 * @module model/JobProperties
 * @version 2018-06-01-preview
 */
class JobProperties {
    /**
     * Constructs a new <code>JobProperties</code>.
     * Properties of the Job.
     * @alias module:model/JobProperties
     * @param input {module:model/JobInput} 
     * @param outputs {Array.<module:model/JobOutput>} The outputs for the Job.
     */
    constructor(input, outputs) { 
        
        JobProperties.initialize(this, input, outputs);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, input, outputs) { 
        obj['input'] = input;
        obj['outputs'] = outputs;
    }

    /**
     * Constructs a <code>JobProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/JobProperties} obj Optional instance to populate.
     * @return {module:model/JobProperties} The populated <code>JobProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new JobProperties();

            if (data.hasOwnProperty('correlationData')) {
                obj['correlationData'] = ApiClient.convertToType(data['correlationData'], {'String': 'String'});
            }
            if (data.hasOwnProperty('created')) {
                obj['created'] = ApiClient.convertToType(data['created'], 'Date');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('input')) {
                obj['input'] = JobInput.constructFromObject(data['input']);
            }
            if (data.hasOwnProperty('lastModified')) {
                obj['lastModified'] = ApiClient.convertToType(data['lastModified'], 'Date');
            }
            if (data.hasOwnProperty('outputs')) {
                obj['outputs'] = ApiClient.convertToType(data['outputs'], [JobOutput]);
            }
            if (data.hasOwnProperty('priority')) {
                obj['priority'] = ApiClient.convertToType(data['priority'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>JobProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>JobProperties</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of JobProperties.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // validate the optional field `input`
        if (data['input']) { // data not null
          JobInput.validateJSON(data['input']);
        }
        if (data['outputs']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['outputs'])) {
                throw new Error("Expected the field `outputs` to be an array in the JSON data but got " + data['outputs']);
            }
            // validate the optional field `outputs` (array)
            for (const item of data['outputs']) {
                JobOutput.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['priority'] && !(typeof data['priority'] === 'string' || data['priority'] instanceof String)) {
            throw new Error("Expected the field `priority` to be a primitive type in the JSON string but got " + data['priority']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }

        return true;
    }


}

JobProperties.RequiredProperties = ["input", "outputs"];

/**
 * Customer provided correlation data that will be returned in Job completed events.
 * @member {Object.<String, String>} correlationData
 */
JobProperties.prototype['correlationData'] = undefined;

/**
 * The UTC date and time when the Job was created, in 'YYYY-MM-DDThh:mm:ssZ' format.
 * @member {Date} created
 */
JobProperties.prototype['created'] = undefined;

/**
 * Optional customer supplied description of the Job.
 * @member {String} description
 */
JobProperties.prototype['description'] = undefined;

/**
 * @member {module:model/JobInput} input
 */
JobProperties.prototype['input'] = undefined;

/**
 * The UTC date and time when the Job was last updated, in 'YYYY-MM-DDThh:mm:ssZ' format.
 * @member {Date} lastModified
 */
JobProperties.prototype['lastModified'] = undefined;

/**
 * The outputs for the Job.
 * @member {Array.<module:model/JobOutput>} outputs
 */
JobProperties.prototype['outputs'] = undefined;

/**
 * Priority with which the job should be processed. Higher priority jobs are processed before lower priority jobs. If not set, the default is normal.
 * @member {module:model/JobProperties.PriorityEnum} priority
 */
JobProperties.prototype['priority'] = undefined;

/**
 * The current state of the job.
 * @member {module:model/JobProperties.StateEnum} state
 */
JobProperties.prototype['state'] = undefined;





/**
 * Allowed values for the <code>priority</code> property.
 * @enum {String}
 * @readonly
 */
JobProperties['PriorityEnum'] = {

    /**
     * value: "Low"
     * @const
     */
    "Low": "Low",

    /**
     * value: "Normal"
     * @const
     */
    "Normal": "Normal",

    /**
     * value: "High"
     * @const
     */
    "High": "High"
};


/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
JobProperties['StateEnum'] = {

    /**
     * value: "Canceled"
     * @const
     */
    "Canceled": "Canceled",

    /**
     * value: "Canceling"
     * @const
     */
    "Canceling": "Canceling",

    /**
     * value: "Error"
     * @const
     */
    "Error": "Error",

    /**
     * value: "Finished"
     * @const
     */
    "Finished": "Finished",

    /**
     * value: "Processing"
     * @const
     */
    "Processing": "Processing",

    /**
     * value: "Queued"
     * @const
     */
    "Queued": "Queued",

    /**
     * value: "Scheduled"
     * @const
     */
    "Scheduled": "Scheduled"
};



export default JobProperties;

