/**
 * Azure Media Services
 * This Swagger was generated by the API Framework.
 *
 * The version of the OpenAPI document: 2018-06-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Preset from './Preset';

/**
 * The TransformOutput model module.
 * @module model/TransformOutput
 * @version 2018-06-01-preview
 */
class TransformOutput {
    /**
     * Constructs a new <code>TransformOutput</code>.
     * Describes the properties of a TransformOutput, which are the rules to be applied while generating the desired output.
     * @alias module:model/TransformOutput
     * @param preset {module:model/Preset} 
     */
    constructor(preset) { 
        
        TransformOutput.initialize(this, preset);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, preset) { 
        obj['preset'] = preset;
    }

    /**
     * Constructs a <code>TransformOutput</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TransformOutput} obj Optional instance to populate.
     * @return {module:model/TransformOutput} The populated <code>TransformOutput</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TransformOutput();

            if (data.hasOwnProperty('onError')) {
                obj['onError'] = ApiClient.convertToType(data['onError'], 'String');
            }
            if (data.hasOwnProperty('preset')) {
                obj['preset'] = Preset.constructFromObject(data['preset']);
            }
            if (data.hasOwnProperty('relativePriority')) {
                obj['relativePriority'] = ApiClient.convertToType(data['relativePriority'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TransformOutput</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TransformOutput</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of TransformOutput.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['onError'] && !(typeof data['onError'] === 'string' || data['onError'] instanceof String)) {
            throw new Error("Expected the field `onError` to be a primitive type in the JSON string but got " + data['onError']);
        }
        // validate the optional field `preset`
        if (data['preset']) { // data not null
          Preset.validateJSON(data['preset']);
        }
        // ensure the json data is a string
        if (data['relativePriority'] && !(typeof data['relativePriority'] === 'string' || data['relativePriority'] instanceof String)) {
            throw new Error("Expected the field `relativePriority` to be a primitive type in the JSON string but got " + data['relativePriority']);
        }

        return true;
    }


}

TransformOutput.RequiredProperties = ["preset"];

/**
 * A Transform can define more than one outputs. This property defines what the service should do when one output fails - either continue to produce other outputs, or, stop the other outputs. The default is stop.
 * @member {module:model/TransformOutput.OnErrorEnum} onError
 */
TransformOutput.prototype['onError'] = undefined;

/**
 * @member {module:model/Preset} preset
 */
TransformOutput.prototype['preset'] = undefined;

/**
 * Sets the relative priority of the TransformOutputs within a Transform. This sets the priority that the service uses for processing TransformOutputs. The default priority is Normal.
 * @member {module:model/TransformOutput.RelativePriorityEnum} relativePriority
 */
TransformOutput.prototype['relativePriority'] = undefined;





/**
 * Allowed values for the <code>onError</code> property.
 * @enum {String}
 * @readonly
 */
TransformOutput['OnErrorEnum'] = {

    /**
     * value: "StopProcessingJob"
     * @const
     */
    "StopProcessingJob": "StopProcessingJob",

    /**
     * value: "ContinueJob"
     * @const
     */
    "ContinueJob": "ContinueJob"
};


/**
 * Allowed values for the <code>relativePriority</code> property.
 * @enum {String}
 * @readonly
 */
TransformOutput['RelativePriorityEnum'] = {

    /**
     * value: "Low"
     * @const
     */
    "Low": "Low",

    /**
     * value: "Normal"
     * @const
     */
    "Normal": "Normal",

    /**
     * value: "High"
     * @const
     */
    "High": "High"
};



export default TransformOutput;

