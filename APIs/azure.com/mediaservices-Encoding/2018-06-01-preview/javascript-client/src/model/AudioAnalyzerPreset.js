/**
 * Azure Media Services
 * This Swagger was generated by the API Framework.
 *
 * The version of the OpenAPI document: 2018-06-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Preset from './Preset';

/**
 * The AudioAnalyzerPreset model module.
 * @module model/AudioAnalyzerPreset
 * @version 2018-06-01-preview
 */
class AudioAnalyzerPreset {
    /**
     * Constructs a new <code>AudioAnalyzerPreset</code>.
     * The Audio Analyzer preset applies a pre-defined set of AI-based analysis operations, including speech transcription. Currently, the preset supports processing of content with a single audio track.
     * @alias module:model/AudioAnalyzerPreset
     * @extends module:model/Preset
     * @implements module:model/Preset
     * @param odataType {String} The discriminator for derived types.
     */
    constructor(odataType) { 
        Preset.initialize(this, odataType);
        AudioAnalyzerPreset.initialize(this, odataType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, odataType) { 
    }

    /**
     * Constructs a <code>AudioAnalyzerPreset</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AudioAnalyzerPreset} obj Optional instance to populate.
     * @return {module:model/AudioAnalyzerPreset} The populated <code>AudioAnalyzerPreset</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AudioAnalyzerPreset();
            Preset.constructFromObject(data, obj);
            Preset.constructFromObject(data, obj);

            if (data.hasOwnProperty('audioLanguage')) {
                obj['audioLanguage'] = ApiClient.convertToType(data['audioLanguage'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AudioAnalyzerPreset</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AudioAnalyzerPreset</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AudioAnalyzerPreset.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['audioLanguage'] && !(typeof data['audioLanguage'] === 'string' || data['audioLanguage'] instanceof String)) {
            throw new Error("Expected the field `audioLanguage` to be a primitive type in the JSON string but got " + data['audioLanguage']);
        }

        return true;
    }


}

AudioAnalyzerPreset.RequiredProperties = ["@odata.type"];

/**
 * The language for the audio payload in the input using the BCP-47 format of 'language tag-region' (e.g: 'en-US'). The list of supported languages are, 'en-US', 'en-GB', 'es-ES', 'es-MX', 'fr-FR', 'it-IT', 'ja-JP', 'pt-BR', 'zh-CN'.
 * @member {String} audioLanguage
 */
AudioAnalyzerPreset.prototype['audioLanguage'] = undefined;


// Implement Preset interface:
/**
 * The discriminator for derived types.
 * @member {String} @odata.type
 */
Preset.prototype['@odata.type'] = undefined;




export default AudioAnalyzerPreset;

