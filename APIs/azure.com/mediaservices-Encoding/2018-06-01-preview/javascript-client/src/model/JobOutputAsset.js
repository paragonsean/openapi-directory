/**
 * Azure Media Services
 * This Swagger was generated by the API Framework.
 *
 * The version of the OpenAPI document: 2018-06-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import JobError from './JobError';
import JobOutput from './JobOutput';

/**
 * The JobOutputAsset model module.
 * @module model/JobOutputAsset
 * @version 2018-06-01-preview
 */
class JobOutputAsset {
    /**
     * Constructs a new <code>JobOutputAsset</code>.
     * Represents an Asset used as a JobOutput.
     * @alias module:model/JobOutputAsset
     * @extends module:model/JobOutput
     * @implements module:model/JobOutput
     * @param odataType {String} The discriminator for derived types.
     */
    constructor(odataType) { 
        JobOutput.initialize(this, odataType);
        JobOutputAsset.initialize(this, odataType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, odataType) { 
        obj['assetName'] = assetName;
    }

    /**
     * Constructs a <code>JobOutputAsset</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/JobOutputAsset} obj Optional instance to populate.
     * @return {module:model/JobOutputAsset} The populated <code>JobOutputAsset</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new JobOutputAsset();
            JobOutput.constructFromObject(data, obj);
            JobOutput.constructFromObject(data, obj);

            if (data.hasOwnProperty('assetName')) {
                obj['assetName'] = ApiClient.convertToType(data['assetName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>JobOutputAsset</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>JobOutputAsset</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of JobOutputAsset.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['assetName'] && !(typeof data['assetName'] === 'string' || data['assetName'] instanceof String)) {
            throw new Error("Expected the field `assetName` to be a primitive type in the JSON string but got " + data['assetName']);
        }

        return true;
    }


}

JobOutputAsset.RequiredProperties = ["assetName", "@odata.type"];

/**
 * The name of the output Asset.
 * @member {String} assetName
 */
JobOutputAsset.prototype['assetName'] = undefined;


// Implement JobOutput interface:
/**
 * The discriminator for derived types.
 * @member {String} @odata.type
 */
JobOutput.prototype['@odata.type'] = undefined;
/**
 * @member {module:model/JobError} error
 */
JobOutput.prototype['error'] = undefined;
/**
 * If the JobOutput is in a Processing state, this contains the job completion percentage.  The value is an estimate and not intended to be used to predict job completion times. To determine if the JobOutput is complete, use the State property.
 * @member {Number} progress
 */
JobOutput.prototype['progress'] = undefined;
/**
 * Describes the state of the JobOutput.
 * @member {module:model/JobOutput.StateEnum} state
 */
JobOutput.prototype['state'] = undefined;




export default JobOutputAsset;

