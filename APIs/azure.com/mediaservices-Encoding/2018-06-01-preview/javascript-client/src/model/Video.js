/**
 * Azure Media Services
 * This Swagger was generated by the API Framework.
 *
 * The version of the OpenAPI document: 2018-06-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Codec from './Codec';

/**
 * The Video model module.
 * @module model/Video
 * @version 2018-06-01-preview
 */
class Video {
    /**
     * Constructs a new <code>Video</code>.
     * Describes the basic properties for encoding the input video.
     * @alias module:model/Video
     * @extends module:model/Codec
     * @implements module:model/Codec
     * @param odataType {String} The discriminator for derived types.
     */
    constructor(odataType) { 
        Codec.initialize(this, odataType);
        Video.initialize(this, odataType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, odataType) { 
    }

    /**
     * Constructs a <code>Video</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Video} obj Optional instance to populate.
     * @return {module:model/Video} The populated <code>Video</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Video();
            Codec.constructFromObject(data, obj);
            Codec.constructFromObject(data, obj);

            if (data.hasOwnProperty('keyFrameInterval')) {
                obj['keyFrameInterval'] = ApiClient.convertToType(data['keyFrameInterval'], 'String');
            }
            if (data.hasOwnProperty('stretchMode')) {
                obj['stretchMode'] = ApiClient.convertToType(data['stretchMode'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Video</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Video</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Video.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['keyFrameInterval'] && !(typeof data['keyFrameInterval'] === 'string' || data['keyFrameInterval'] instanceof String)) {
            throw new Error("Expected the field `keyFrameInterval` to be a primitive type in the JSON string but got " + data['keyFrameInterval']);
        }
        // ensure the json data is a string
        if (data['stretchMode'] && !(typeof data['stretchMode'] === 'string' || data['stretchMode'] instanceof String)) {
            throw new Error("Expected the field `stretchMode` to be a primitive type in the JSON string but got " + data['stretchMode']);
        }

        return true;
    }


}

Video.RequiredProperties = ["@odata.type"];

/**
 * The distance between two key frames, thereby defining a group of pictures (GOP). The value should be a non-zero integer in the range [1, 30] seconds, specified in ISO 8601 format. The default is 2 seconds (PT2S).
 * @member {String} keyFrameInterval
 */
Video.prototype['keyFrameInterval'] = undefined;

/**
 * The resizing mode - how the input video will be resized to fit the desired output resolution(s). Default is AutoSize
 * @member {module:model/Video.StretchModeEnum} stretchMode
 */
Video.prototype['stretchMode'] = undefined;


// Implement Codec interface:
/**
 * The discriminator for derived types.
 * @member {String} @odata.type
 */
Codec.prototype['@odata.type'] = undefined;
/**
 * An optional label for the codec. The label can be used to control muxing behavior.
 * @member {String} label
 */
Codec.prototype['label'] = undefined;



/**
 * Allowed values for the <code>stretchMode</code> property.
 * @enum {String}
 * @readonly
 */
Video['StretchModeEnum'] = {

    /**
     * value: "None"
     * @const
     */
    "None": "None",

    /**
     * value: "AutoSize"
     * @const
     */
    "AutoSize": "AutoSize",

    /**
     * value: "AutoFit"
     * @const
     */
    "AutoFit": "AutoFit"
};



export default Video;

