# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class IPAddressAvailabilityResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, available: bool=None, available_ip_addresses: List[str]=None):
        """IPAddressAvailabilityResult - a model defined in OpenAPI

        :param available: The available of this IPAddressAvailabilityResult.
        :param available_ip_addresses: The available_ip_addresses of this IPAddressAvailabilityResult.
        """
        self.openapi_types = {
            'available': bool,
            'available_ip_addresses': List[str]
        }

        self.attribute_map = {
            'available': 'available',
            'available_ip_addresses': 'availableIPAddresses'
        }

        self._available = available
        self._available_ip_addresses = available_ip_addresses

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IPAddressAvailabilityResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IPAddressAvailabilityResult of this IPAddressAvailabilityResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def available(self):
        """Gets the available of this IPAddressAvailabilityResult.

        Private IP address availability

        :return: The available of this IPAddressAvailabilityResult.
        :rtype: bool
        """
        return self._available

    @available.setter
    def available(self, available):
        """Sets the available of this IPAddressAvailabilityResult.

        Private IP address availability

        :param available: The available of this IPAddressAvailabilityResult.
        :type available: bool
        """

        self._available = available

    @property
    def available_ip_addresses(self):
        """Gets the available_ip_addresses of this IPAddressAvailabilityResult.

        Contains other available private IP addresses if the asked for address is taken

        :return: The available_ip_addresses of this IPAddressAvailabilityResult.
        :rtype: List[str]
        """
        return self._available_ip_addresses

    @available_ip_addresses.setter
    def available_ip_addresses(self, available_ip_addresses):
        """Sets the available_ip_addresses of this IPAddressAvailabilityResult.

        Contains other available private IP addresses if the asked for address is taken

        :param available_ip_addresses: The available_ip_addresses of this IPAddressAvailabilityResult.
        :type available_ip_addresses: List[str]
        """

        self._available_ip_addresses = available_ip_addresses
