# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.sub_resource import SubResource
from openapi_server import util


class ApplicationGatewayPathRulePropertiesFormat(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, backend_address_pool: SubResource=None, backend_http_settings: SubResource=None, paths: List[str]=None, provisioning_state: str=None):
        """ApplicationGatewayPathRulePropertiesFormat - a model defined in OpenAPI

        :param backend_address_pool: The backend_address_pool of this ApplicationGatewayPathRulePropertiesFormat.
        :param backend_http_settings: The backend_http_settings of this ApplicationGatewayPathRulePropertiesFormat.
        :param paths: The paths of this ApplicationGatewayPathRulePropertiesFormat.
        :param provisioning_state: The provisioning_state of this ApplicationGatewayPathRulePropertiesFormat.
        """
        self.openapi_types = {
            'backend_address_pool': SubResource,
            'backend_http_settings': SubResource,
            'paths': List[str],
            'provisioning_state': str
        }

        self.attribute_map = {
            'backend_address_pool': 'backendAddressPool',
            'backend_http_settings': 'backendHttpSettings',
            'paths': 'paths',
            'provisioning_state': 'provisioningState'
        }

        self._backend_address_pool = backend_address_pool
        self._backend_http_settings = backend_http_settings
        self._paths = paths
        self._provisioning_state = provisioning_state

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApplicationGatewayPathRulePropertiesFormat':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ApplicationGatewayPathRulePropertiesFormat of this ApplicationGatewayPathRulePropertiesFormat.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def backend_address_pool(self):
        """Gets the backend_address_pool of this ApplicationGatewayPathRulePropertiesFormat.


        :return: The backend_address_pool of this ApplicationGatewayPathRulePropertiesFormat.
        :rtype: SubResource
        """
        return self._backend_address_pool

    @backend_address_pool.setter
    def backend_address_pool(self, backend_address_pool):
        """Sets the backend_address_pool of this ApplicationGatewayPathRulePropertiesFormat.


        :param backend_address_pool: The backend_address_pool of this ApplicationGatewayPathRulePropertiesFormat.
        :type backend_address_pool: SubResource
        """

        self._backend_address_pool = backend_address_pool

    @property
    def backend_http_settings(self):
        """Gets the backend_http_settings of this ApplicationGatewayPathRulePropertiesFormat.


        :return: The backend_http_settings of this ApplicationGatewayPathRulePropertiesFormat.
        :rtype: SubResource
        """
        return self._backend_http_settings

    @backend_http_settings.setter
    def backend_http_settings(self, backend_http_settings):
        """Sets the backend_http_settings of this ApplicationGatewayPathRulePropertiesFormat.


        :param backend_http_settings: The backend_http_settings of this ApplicationGatewayPathRulePropertiesFormat.
        :type backend_http_settings: SubResource
        """

        self._backend_http_settings = backend_http_settings

    @property
    def paths(self):
        """Gets the paths of this ApplicationGatewayPathRulePropertiesFormat.

        Path rules of URL path map

        :return: The paths of this ApplicationGatewayPathRulePropertiesFormat.
        :rtype: List[str]
        """
        return self._paths

    @paths.setter
    def paths(self, paths):
        """Sets the paths of this ApplicationGatewayPathRulePropertiesFormat.

        Path rules of URL path map

        :param paths: The paths of this ApplicationGatewayPathRulePropertiesFormat.
        :type paths: List[str]
        """

        self._paths = paths

    @property
    def provisioning_state(self):
        """Gets the provisioning_state of this ApplicationGatewayPathRulePropertiesFormat.

        Path rule of URL path map resource Updating/Deleting/Failed

        :return: The provisioning_state of this ApplicationGatewayPathRulePropertiesFormat.
        :rtype: str
        """
        return self._provisioning_state

    @provisioning_state.setter
    def provisioning_state(self, provisioning_state):
        """Sets the provisioning_state of this ApplicationGatewayPathRulePropertiesFormat.

        Path rule of URL path map resource Updating/Deleting/Failed

        :param provisioning_state: The provisioning_state of this ApplicationGatewayPathRulePropertiesFormat.
        :type provisioning_state: str
        """

        self._provisioning_state = provisioning_state
