/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2016-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import SecurityRule from '../model/SecurityRule';
import SecurityRuleListResult from '../model/SecurityRuleListResult';

/**
* SecurityRules service.
* @module api/SecurityRulesApi
* @version 2016-06-01
*/
export default class SecurityRulesApi {

    /**
    * Constructs a new SecurityRulesApi. 
    * @alias module:api/SecurityRulesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the securityRulesCreateOrUpdate operation.
     * @callback module:api/SecurityRulesApi~securityRulesCreateOrUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SecurityRule} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * The Put network security rule operation creates/updates a security rule in the specified network security group
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} networkSecurityGroupName The name of the network security group.
     * @param {String} securityRuleName The name of the security rule.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:model/SecurityRule} securityRuleParameters Parameters supplied to the create/update network security rule operation
     * @param {module:api/SecurityRulesApi~securityRulesCreateOrUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SecurityRule}
     */
    securityRulesCreateOrUpdate(resourceGroupName, networkSecurityGroupName, securityRuleName, apiVersion, subscriptionId, securityRuleParameters, callback) {
      let postBody = securityRuleParameters;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling securityRulesCreateOrUpdate");
      }
      // verify the required parameter 'networkSecurityGroupName' is set
      if (networkSecurityGroupName === undefined || networkSecurityGroupName === null) {
        throw new Error("Missing the required parameter 'networkSecurityGroupName' when calling securityRulesCreateOrUpdate");
      }
      // verify the required parameter 'securityRuleName' is set
      if (securityRuleName === undefined || securityRuleName === null) {
        throw new Error("Missing the required parameter 'securityRuleName' when calling securityRulesCreateOrUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling securityRulesCreateOrUpdate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling securityRulesCreateOrUpdate");
      }
      // verify the required parameter 'securityRuleParameters' is set
      if (securityRuleParameters === undefined || securityRuleParameters === null) {
        throw new Error("Missing the required parameter 'securityRuleParameters' when calling securityRulesCreateOrUpdate");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'networkSecurityGroupName': networkSecurityGroupName,
        'securityRuleName': securityRuleName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json', 'text/json'];
      let accepts = ['application/json', 'text/json'];
      let returnType = SecurityRule;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityGroups/{networkSecurityGroupName}/securityRules/{securityRuleName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the securityRulesDelete operation.
     * @callback module:api/SecurityRulesApi~securityRulesDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * The delete network security rule operation deletes the specified network security rule.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} networkSecurityGroupName The name of the network security group.
     * @param {String} securityRuleName The name of the security rule.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/SecurityRulesApi~securityRulesDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    securityRulesDelete(resourceGroupName, networkSecurityGroupName, securityRuleName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling securityRulesDelete");
      }
      // verify the required parameter 'networkSecurityGroupName' is set
      if (networkSecurityGroupName === undefined || networkSecurityGroupName === null) {
        throw new Error("Missing the required parameter 'networkSecurityGroupName' when calling securityRulesDelete");
      }
      // verify the required parameter 'securityRuleName' is set
      if (securityRuleName === undefined || securityRuleName === null) {
        throw new Error("Missing the required parameter 'securityRuleName' when calling securityRulesDelete");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling securityRulesDelete");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling securityRulesDelete");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'networkSecurityGroupName': networkSecurityGroupName,
        'securityRuleName': securityRuleName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityGroups/{networkSecurityGroupName}/securityRules/{securityRuleName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the securityRulesGet operation.
     * @callback module:api/SecurityRulesApi~securityRulesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SecurityRule} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * The Get NetworkSecurityRule operation retrieves information about the specified network security rule.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} networkSecurityGroupName The name of the network security group.
     * @param {String} securityRuleName The name of the security rule.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/SecurityRulesApi~securityRulesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SecurityRule}
     */
    securityRulesGet(resourceGroupName, networkSecurityGroupName, securityRuleName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling securityRulesGet");
      }
      // verify the required parameter 'networkSecurityGroupName' is set
      if (networkSecurityGroupName === undefined || networkSecurityGroupName === null) {
        throw new Error("Missing the required parameter 'networkSecurityGroupName' when calling securityRulesGet");
      }
      // verify the required parameter 'securityRuleName' is set
      if (securityRuleName === undefined || securityRuleName === null) {
        throw new Error("Missing the required parameter 'securityRuleName' when calling securityRulesGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling securityRulesGet");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling securityRulesGet");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'networkSecurityGroupName': networkSecurityGroupName,
        'securityRuleName': securityRuleName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json'];
      let returnType = SecurityRule;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityGroups/{networkSecurityGroupName}/securityRules/{securityRuleName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the securityRulesList operation.
     * @callback module:api/SecurityRulesApi~securityRulesListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SecurityRuleListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * The List network security rule operation retrieves all the security rules in a network security group.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} networkSecurityGroupName The name of the network security group.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/SecurityRulesApi~securityRulesListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SecurityRuleListResult}
     */
    securityRulesList(resourceGroupName, networkSecurityGroupName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling securityRulesList");
      }
      // verify the required parameter 'networkSecurityGroupName' is set
      if (networkSecurityGroupName === undefined || networkSecurityGroupName === null) {
        throw new Error("Missing the required parameter 'networkSecurityGroupName' when calling securityRulesList");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling securityRulesList");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling securityRulesList");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'networkSecurityGroupName': networkSecurityGroupName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json'];
      let returnType = SecurityRuleListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityGroups/{networkSecurityGroupName}/securityRules', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
