/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2016-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import VirtualNetworkPeering from '../model/VirtualNetworkPeering';
import VirtualNetworkPeeringListResult from '../model/VirtualNetworkPeeringListResult';

/**
* VirtualNetworkPeerings service.
* @module api/VirtualNetworkPeeringsApi
* @version 2016-06-01
*/
export default class VirtualNetworkPeeringsApi {

    /**
    * Constructs a new VirtualNetworkPeeringsApi. 
    * @alias module:api/VirtualNetworkPeeringsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the virtualNetworkPeeringsCreateOrUpdate operation.
     * @callback module:api/VirtualNetworkPeeringsApi~virtualNetworkPeeringsCreateOrUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VirtualNetworkPeering} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * The Put virtual network peering operation creates/updates a peering in the specified virtual network
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} virtualNetworkName The name of the virtual network.
     * @param {String} virtualNetworkPeeringName The name of the peering.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:model/VirtualNetworkPeering} virtualNetworkPeeringParameters Parameters supplied to the create/update virtual network peering operation
     * @param {module:api/VirtualNetworkPeeringsApi~virtualNetworkPeeringsCreateOrUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VirtualNetworkPeering}
     */
    virtualNetworkPeeringsCreateOrUpdate(resourceGroupName, virtualNetworkName, virtualNetworkPeeringName, apiVersion, subscriptionId, virtualNetworkPeeringParameters, callback) {
      let postBody = virtualNetworkPeeringParameters;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling virtualNetworkPeeringsCreateOrUpdate");
      }
      // verify the required parameter 'virtualNetworkName' is set
      if (virtualNetworkName === undefined || virtualNetworkName === null) {
        throw new Error("Missing the required parameter 'virtualNetworkName' when calling virtualNetworkPeeringsCreateOrUpdate");
      }
      // verify the required parameter 'virtualNetworkPeeringName' is set
      if (virtualNetworkPeeringName === undefined || virtualNetworkPeeringName === null) {
        throw new Error("Missing the required parameter 'virtualNetworkPeeringName' when calling virtualNetworkPeeringsCreateOrUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling virtualNetworkPeeringsCreateOrUpdate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling virtualNetworkPeeringsCreateOrUpdate");
      }
      // verify the required parameter 'virtualNetworkPeeringParameters' is set
      if (virtualNetworkPeeringParameters === undefined || virtualNetworkPeeringParameters === null) {
        throw new Error("Missing the required parameter 'virtualNetworkPeeringParameters' when calling virtualNetworkPeeringsCreateOrUpdate");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'virtualNetworkName': virtualNetworkName,
        'virtualNetworkPeeringName': virtualNetworkPeeringName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json', 'text/json'];
      let accepts = ['application/json', 'text/json'];
      let returnType = VirtualNetworkPeering;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/virtualNetworkPeerings/{virtualNetworkPeeringName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the virtualNetworkPeeringsDelete operation.
     * @callback module:api/VirtualNetworkPeeringsApi~virtualNetworkPeeringsDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * The delete virtual network peering operation deletes the specified peering.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} virtualNetworkName The name of the virtual network.
     * @param {String} virtualNetworkPeeringName The name of the virtual network peering.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/VirtualNetworkPeeringsApi~virtualNetworkPeeringsDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    virtualNetworkPeeringsDelete(resourceGroupName, virtualNetworkName, virtualNetworkPeeringName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling virtualNetworkPeeringsDelete");
      }
      // verify the required parameter 'virtualNetworkName' is set
      if (virtualNetworkName === undefined || virtualNetworkName === null) {
        throw new Error("Missing the required parameter 'virtualNetworkName' when calling virtualNetworkPeeringsDelete");
      }
      // verify the required parameter 'virtualNetworkPeeringName' is set
      if (virtualNetworkPeeringName === undefined || virtualNetworkPeeringName === null) {
        throw new Error("Missing the required parameter 'virtualNetworkPeeringName' when calling virtualNetworkPeeringsDelete");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling virtualNetworkPeeringsDelete");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling virtualNetworkPeeringsDelete");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'virtualNetworkName': virtualNetworkName,
        'virtualNetworkPeeringName': virtualNetworkPeeringName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/virtualNetworkPeerings/{virtualNetworkPeeringName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the virtualNetworkPeeringsGet operation.
     * @callback module:api/VirtualNetworkPeeringsApi~virtualNetworkPeeringsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VirtualNetworkPeering} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * The Get virtual network peering operation retrieves information about the specified virtual network peering.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} virtualNetworkName The name of the virtual network.
     * @param {String} virtualNetworkPeeringName The name of the virtual network peering.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/VirtualNetworkPeeringsApi~virtualNetworkPeeringsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VirtualNetworkPeering}
     */
    virtualNetworkPeeringsGet(resourceGroupName, virtualNetworkName, virtualNetworkPeeringName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling virtualNetworkPeeringsGet");
      }
      // verify the required parameter 'virtualNetworkName' is set
      if (virtualNetworkName === undefined || virtualNetworkName === null) {
        throw new Error("Missing the required parameter 'virtualNetworkName' when calling virtualNetworkPeeringsGet");
      }
      // verify the required parameter 'virtualNetworkPeeringName' is set
      if (virtualNetworkPeeringName === undefined || virtualNetworkPeeringName === null) {
        throw new Error("Missing the required parameter 'virtualNetworkPeeringName' when calling virtualNetworkPeeringsGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling virtualNetworkPeeringsGet");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling virtualNetworkPeeringsGet");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'virtualNetworkName': virtualNetworkName,
        'virtualNetworkPeeringName': virtualNetworkPeeringName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json'];
      let returnType = VirtualNetworkPeering;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/virtualNetworkPeerings/{virtualNetworkPeeringName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the virtualNetworkPeeringsList operation.
     * @callback module:api/VirtualNetworkPeeringsApi~virtualNetworkPeeringsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VirtualNetworkPeeringListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * The List virtual network peerings operation retrieves all the peerings in a virtual network.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} virtualNetworkName The name of the virtual network.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/VirtualNetworkPeeringsApi~virtualNetworkPeeringsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VirtualNetworkPeeringListResult}
     */
    virtualNetworkPeeringsList(resourceGroupName, virtualNetworkName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling virtualNetworkPeeringsList");
      }
      // verify the required parameter 'virtualNetworkName' is set
      if (virtualNetworkName === undefined || virtualNetworkName === null) {
        throw new Error("Missing the required parameter 'virtualNetworkName' when calling virtualNetworkPeeringsList");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling virtualNetworkPeeringsList");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling virtualNetworkPeeringsList");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'virtualNetworkName': virtualNetworkName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json'];
      let returnType = VirtualNetworkPeeringListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/virtualNetworkPeerings', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
