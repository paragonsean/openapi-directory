/*
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2016-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.EffectiveNetworkSecurityGroupAssociation;
import org.openapitools.client.model.EffectiveNetworkSecurityRule;
import org.openapitools.client.model.SubResource;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Effective NetworkSecurityGroup
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:25:58.883742-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class EffectiveNetworkSecurityGroup {
  public static final String SERIALIZED_NAME_ASSOCIATION = "association";
  @SerializedName(SERIALIZED_NAME_ASSOCIATION)
  private EffectiveNetworkSecurityGroupAssociation association;

  public static final String SERIALIZED_NAME_EFFECTIVE_SECURITY_RULES = "effectiveSecurityRules";
  @SerializedName(SERIALIZED_NAME_EFFECTIVE_SECURITY_RULES)
  private List<EffectiveNetworkSecurityRule> effectiveSecurityRules = new ArrayList<>();

  public static final String SERIALIZED_NAME_NETWORK_SECURITY_GROUP = "networkSecurityGroup";
  @SerializedName(SERIALIZED_NAME_NETWORK_SECURITY_GROUP)
  private SubResource networkSecurityGroup;

  public EffectiveNetworkSecurityGroup() {
  }

  public EffectiveNetworkSecurityGroup association(EffectiveNetworkSecurityGroupAssociation association) {
    this.association = association;
    return this;
  }

  /**
   * Get association
   * @return association
   */
  @javax.annotation.Nullable
  public EffectiveNetworkSecurityGroupAssociation getAssociation() {
    return association;
  }

  public void setAssociation(EffectiveNetworkSecurityGroupAssociation association) {
    this.association = association;
  }


  public EffectiveNetworkSecurityGroup effectiveSecurityRules(List<EffectiveNetworkSecurityRule> effectiveSecurityRules) {
    this.effectiveSecurityRules = effectiveSecurityRules;
    return this;
  }

  public EffectiveNetworkSecurityGroup addEffectiveSecurityRulesItem(EffectiveNetworkSecurityRule effectiveSecurityRulesItem) {
    if (this.effectiveSecurityRules == null) {
      this.effectiveSecurityRules = new ArrayList<>();
    }
    this.effectiveSecurityRules.add(effectiveSecurityRulesItem);
    return this;
  }

  /**
   * Gets collection of effective security rules
   * @return effectiveSecurityRules
   */
  @javax.annotation.Nullable
  public List<EffectiveNetworkSecurityRule> getEffectiveSecurityRules() {
    return effectiveSecurityRules;
  }

  public void setEffectiveSecurityRules(List<EffectiveNetworkSecurityRule> effectiveSecurityRules) {
    this.effectiveSecurityRules = effectiveSecurityRules;
  }


  public EffectiveNetworkSecurityGroup networkSecurityGroup(SubResource networkSecurityGroup) {
    this.networkSecurityGroup = networkSecurityGroup;
    return this;
  }

  /**
   * Get networkSecurityGroup
   * @return networkSecurityGroup
   */
  @javax.annotation.Nullable
  public SubResource getNetworkSecurityGroup() {
    return networkSecurityGroup;
  }

  public void setNetworkSecurityGroup(SubResource networkSecurityGroup) {
    this.networkSecurityGroup = networkSecurityGroup;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EffectiveNetworkSecurityGroup effectiveNetworkSecurityGroup = (EffectiveNetworkSecurityGroup) o;
    return Objects.equals(this.association, effectiveNetworkSecurityGroup.association) &&
        Objects.equals(this.effectiveSecurityRules, effectiveNetworkSecurityGroup.effectiveSecurityRules) &&
        Objects.equals(this.networkSecurityGroup, effectiveNetworkSecurityGroup.networkSecurityGroup);
  }

  @Override
  public int hashCode() {
    return Objects.hash(association, effectiveSecurityRules, networkSecurityGroup);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EffectiveNetworkSecurityGroup {\n");
    sb.append("    association: ").append(toIndentedString(association)).append("\n");
    sb.append("    effectiveSecurityRules: ").append(toIndentedString(effectiveSecurityRules)).append("\n");
    sb.append("    networkSecurityGroup: ").append(toIndentedString(networkSecurityGroup)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("association");
    openapiFields.add("effectiveSecurityRules");
    openapiFields.add("networkSecurityGroup");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to EffectiveNetworkSecurityGroup
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!EffectiveNetworkSecurityGroup.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in EffectiveNetworkSecurityGroup is not found in the empty JSON string", EffectiveNetworkSecurityGroup.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!EffectiveNetworkSecurityGroup.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `EffectiveNetworkSecurityGroup` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `association`
      if (jsonObj.get("association") != null && !jsonObj.get("association").isJsonNull()) {
        EffectiveNetworkSecurityGroupAssociation.validateJsonElement(jsonObj.get("association"));
      }
      if (jsonObj.get("effectiveSecurityRules") != null && !jsonObj.get("effectiveSecurityRules").isJsonNull()) {
        JsonArray jsonArrayeffectiveSecurityRules = jsonObj.getAsJsonArray("effectiveSecurityRules");
        if (jsonArrayeffectiveSecurityRules != null) {
          // ensure the json data is an array
          if (!jsonObj.get("effectiveSecurityRules").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `effectiveSecurityRules` to be an array in the JSON string but got `%s`", jsonObj.get("effectiveSecurityRules").toString()));
          }

          // validate the optional field `effectiveSecurityRules` (array)
          for (int i = 0; i < jsonArrayeffectiveSecurityRules.size(); i++) {
            EffectiveNetworkSecurityRule.validateJsonElement(jsonArrayeffectiveSecurityRules.get(i));
          };
        }
      }
      // validate the optional field `networkSecurityGroup`
      if (jsonObj.get("networkSecurityGroup") != null && !jsonObj.get("networkSecurityGroup").isJsonNull()) {
        SubResource.validateJsonElement(jsonObj.get("networkSecurityGroup"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EffectiveNetworkSecurityGroup.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EffectiveNetworkSecurityGroup' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EffectiveNetworkSecurityGroup> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EffectiveNetworkSecurityGroup.class));

       return (TypeAdapter<T>) new TypeAdapter<EffectiveNetworkSecurityGroup>() {
           @Override
           public void write(JsonWriter out, EffectiveNetworkSecurityGroup value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public EffectiveNetworkSecurityGroup read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of EffectiveNetworkSecurityGroup given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of EffectiveNetworkSecurityGroup
   * @throws IOException if the JSON string is invalid with respect to EffectiveNetworkSecurityGroup
   */
  public static EffectiveNetworkSecurityGroup fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EffectiveNetworkSecurityGroup.class);
  }

  /**
   * Convert an instance of EffectiveNetworkSecurityGroup to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

