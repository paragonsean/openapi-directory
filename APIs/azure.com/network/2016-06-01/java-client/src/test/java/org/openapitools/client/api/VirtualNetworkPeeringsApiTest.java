/*
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2016-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.VirtualNetworkPeering;
import org.openapitools.client.model.VirtualNetworkPeeringListResult;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for VirtualNetworkPeeringsApi
 */
@Disabled
public class VirtualNetworkPeeringsApiTest {

    private final VirtualNetworkPeeringsApi api = new VirtualNetworkPeeringsApi();

    /**
     * The Put virtual network peering operation creates/updates a peering in the specified virtual network
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void virtualNetworkPeeringsCreateOrUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String virtualNetworkName = null;
        String virtualNetworkPeeringName = null;
        String apiVersion = null;
        String subscriptionId = null;
        VirtualNetworkPeering virtualNetworkPeeringParameters = null;
        VirtualNetworkPeering response = api.virtualNetworkPeeringsCreateOrUpdate(resourceGroupName, virtualNetworkName, virtualNetworkPeeringName, apiVersion, subscriptionId, virtualNetworkPeeringParameters);
        // TODO: test validations
    }

    /**
     * The delete virtual network peering operation deletes the specified peering.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void virtualNetworkPeeringsDeleteTest() throws ApiException {
        String resourceGroupName = null;
        String virtualNetworkName = null;
        String virtualNetworkPeeringName = null;
        String apiVersion = null;
        String subscriptionId = null;
        api.virtualNetworkPeeringsDelete(resourceGroupName, virtualNetworkName, virtualNetworkPeeringName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * The Get virtual network peering operation retrieves information about the specified virtual network peering.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void virtualNetworkPeeringsGetTest() throws ApiException {
        String resourceGroupName = null;
        String virtualNetworkName = null;
        String virtualNetworkPeeringName = null;
        String apiVersion = null;
        String subscriptionId = null;
        VirtualNetworkPeering response = api.virtualNetworkPeeringsGet(resourceGroupName, virtualNetworkName, virtualNetworkPeeringName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * The List virtual network peerings operation retrieves all the peerings in a virtual network.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void virtualNetworkPeeringsListTest() throws ApiException {
        String resourceGroupName = null;
        String virtualNetworkName = null;
        String apiVersion = null;
        String subscriptionId = null;
        VirtualNetworkPeeringListResult response = api.virtualNetworkPeeringsList(resourceGroupName, virtualNetworkName, apiVersion, subscriptionId);
        // TODO: test validations
    }

}
