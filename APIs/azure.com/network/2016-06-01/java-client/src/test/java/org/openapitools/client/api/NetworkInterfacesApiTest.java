/*
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2016-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.EffectiveNetworkSecurityGroupListResult;
import org.openapitools.client.model.EffectiveRouteListResult;
import org.openapitools.client.model.NetworkInterface;
import org.openapitools.client.model.NetworkInterfaceListResult;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for NetworkInterfacesApi
 */
@Disabled
public class NetworkInterfacesApiTest {

    private final NetworkInterfacesApi api = new NetworkInterfacesApi();

    /**
     * The Put NetworkInterface operation creates/updates a networkInterface
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void networkInterfacesCreateOrUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String networkInterfaceName = null;
        String apiVersion = null;
        String subscriptionId = null;
        NetworkInterface parameters = null;
        NetworkInterface response = api.networkInterfacesCreateOrUpdate(resourceGroupName, networkInterfaceName, apiVersion, subscriptionId, parameters);
        // TODO: test validations
    }

    /**
     * The delete networkInterface operation deletes the specified networkInterface.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void networkInterfacesDeleteTest() throws ApiException {
        String resourceGroupName = null;
        String networkInterfaceName = null;
        String apiVersion = null;
        String subscriptionId = null;
        api.networkInterfacesDelete(resourceGroupName, networkInterfaceName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * The Get network interface operation retrieves information about the specified network interface.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void networkInterfacesGetTest() throws ApiException {
        String resourceGroupName = null;
        String networkInterfaceName = null;
        String apiVersion = null;
        String subscriptionId = null;
        String $expand = null;
        NetworkInterface response = api.networkInterfacesGet(resourceGroupName, networkInterfaceName, apiVersion, subscriptionId, $expand);
        // TODO: test validations
    }

    /**
     * Retrieves all the route tables applied on a networkInterface.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void networkInterfacesGetEffectiveRouteTableTest() throws ApiException {
        String resourceGroupName = null;
        String networkInterfaceName = null;
        String apiVersion = null;
        String subscriptionId = null;
        EffectiveRouteListResult response = api.networkInterfacesGetEffectiveRouteTable(resourceGroupName, networkInterfaceName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * The Get network interface operation retrieves information about the specified network interface in a virtual machine scale set.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void networkInterfacesGetVirtualMachineScaleSetNetworkInterfaceTest() throws ApiException {
        String resourceGroupName = null;
        String virtualMachineScaleSetName = null;
        String virtualmachineIndex = null;
        String networkInterfaceName = null;
        String apiVersion = null;
        String subscriptionId = null;
        String $expand = null;
        NetworkInterface response = api.networkInterfacesGetVirtualMachineScaleSetNetworkInterface(resourceGroupName, virtualMachineScaleSetName, virtualmachineIndex, networkInterfaceName, apiVersion, subscriptionId, $expand);
        // TODO: test validations
    }

    /**
     * The List networkInterfaces operation retrieves all the networkInterfaces in a resource group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void networkInterfacesListTest() throws ApiException {
        String resourceGroupName = null;
        String apiVersion = null;
        String subscriptionId = null;
        NetworkInterfaceListResult response = api.networkInterfacesList(resourceGroupName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * The List networkInterfaces operation retrieves all the networkInterfaces in a subscription.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void networkInterfacesListAllTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        NetworkInterfaceListResult response = api.networkInterfacesListAll(apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * The list effective network security group operation retrieves all the network security groups applied on a networkInterface.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void networkInterfacesListEffectiveNetworkSecurityGroupsTest() throws ApiException {
        String resourceGroupName = null;
        String networkInterfaceName = null;
        String apiVersion = null;
        String subscriptionId = null;
        EffectiveNetworkSecurityGroupListResult response = api.networkInterfacesListEffectiveNetworkSecurityGroups(resourceGroupName, networkInterfaceName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * The list network interface operation retrieves information about all network interfaces in a virtual machine scale set.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void networkInterfacesListVirtualMachineScaleSetNetworkInterfacesTest() throws ApiException {
        String resourceGroupName = null;
        String virtualMachineScaleSetName = null;
        String apiVersion = null;
        String subscriptionId = null;
        NetworkInterfaceListResult response = api.networkInterfacesListVirtualMachineScaleSetNetworkInterfaces(resourceGroupName, virtualMachineScaleSetName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * The list network interface operation retrieves information about all network interfaces in a virtual machine from a virtual machine scale set.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void networkInterfacesListVirtualMachineScaleSetVMNetworkInterfacesTest() throws ApiException {
        String resourceGroupName = null;
        String virtualMachineScaleSetName = null;
        String virtualmachineIndex = null;
        String apiVersion = null;
        String subscriptionId = null;
        NetworkInterfaceListResult response = api.networkInterfacesListVirtualMachineScaleSetVMNetworkInterfaces(resourceGroupName, virtualMachineScaleSetName, virtualmachineIndex, apiVersion, subscriptionId);
        // TODO: test validations
    }

}
