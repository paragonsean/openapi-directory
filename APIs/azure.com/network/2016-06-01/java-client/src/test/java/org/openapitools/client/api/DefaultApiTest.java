/*
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2016-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.DnsNameAvailabilityResult;
import org.openapitools.client.model.IPAddressAvailabilityResult;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Disabled
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    /**
     * Checks whether a domain name in the cloudapp.net zone is available for use.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void checkDnsNameAvailabilityTest() throws ApiException {
        String location = null;
        String apiVersion = null;
        String subscriptionId = null;
        String domainNameLabel = null;
        DnsNameAvailabilityResult response = api.checkDnsNameAvailability(location, apiVersion, subscriptionId, domainNameLabel);
        // TODO: test validations
    }

    /**
     * Checks whether a private Ip address is available for use.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void virtualNetworksCheckIPAddressAvailabilityTest() throws ApiException {
        String resourceGroupName = null;
        String virtualNetworkName = null;
        String apiVersion = null;
        String subscriptionId = null;
        String ipAddress = null;
        IPAddressAvailabilityResult response = api.virtualNetworksCheckIPAddressAvailability(resourceGroupName, virtualNetworkName, apiVersion, subscriptionId, ipAddress);
        // TODO: test validations
    }

}
