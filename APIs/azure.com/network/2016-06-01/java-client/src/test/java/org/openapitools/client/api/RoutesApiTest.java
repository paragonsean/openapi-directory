/*
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2016-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Route;
import org.openapitools.client.model.RouteListResult;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for RoutesApi
 */
@Disabled
public class RoutesApiTest {

    private final RoutesApi api = new RoutesApi();

    /**
     * The Put route operation creates/updates a route in the specified route table
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void routesCreateOrUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String routeTableName = null;
        String routeName = null;
        String apiVersion = null;
        String subscriptionId = null;
        Route routeParameters = null;
        Route response = api.routesCreateOrUpdate(resourceGroupName, routeTableName, routeName, apiVersion, subscriptionId, routeParameters);
        // TODO: test validations
    }

    /**
     * The delete route operation deletes the specified route from a route table.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void routesDeleteTest() throws ApiException {
        String resourceGroupName = null;
        String routeTableName = null;
        String routeName = null;
        String apiVersion = null;
        String subscriptionId = null;
        api.routesDelete(resourceGroupName, routeTableName, routeName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * The Get route operation retrieves information about the specified route from the route table.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void routesGetTest() throws ApiException {
        String resourceGroupName = null;
        String routeTableName = null;
        String routeName = null;
        String apiVersion = null;
        String subscriptionId = null;
        Route response = api.routesGet(resourceGroupName, routeTableName, routeName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * The List network security rule operation retrieves all the routes in a route table.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void routesListTest() throws ApiException {
        String resourceGroupName = null;
        String routeTableName = null;
        String apiVersion = null;
        String subscriptionId = null;
        RouteListResult response = api.routesList(resourceGroupName, routeTableName, apiVersion, subscriptionId);
        // TODO: test validations
    }

}
