/*
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2016-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Subnet;
import org.openapitools.client.model.SubnetListResult;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SubnetsApi
 */
@Disabled
public class SubnetsApiTest {

    private final SubnetsApi api = new SubnetsApi();

    /**
     * The Put Subnet operation creates/updates a subnet in the specified virtual network
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void subnetsCreateOrUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String virtualNetworkName = null;
        String subnetName = null;
        String apiVersion = null;
        String subscriptionId = null;
        Subnet subnetParameters = null;
        Subnet response = api.subnetsCreateOrUpdate(resourceGroupName, virtualNetworkName, subnetName, apiVersion, subscriptionId, subnetParameters);
        // TODO: test validations
    }

    /**
     * The delete subnet operation deletes the specified subnet.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void subnetsDeleteTest() throws ApiException {
        String resourceGroupName = null;
        String virtualNetworkName = null;
        String subnetName = null;
        String apiVersion = null;
        String subscriptionId = null;
        api.subnetsDelete(resourceGroupName, virtualNetworkName, subnetName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * The Get subnet operation retrieves information about the specified subnet.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void subnetsGetTest() throws ApiException {
        String resourceGroupName = null;
        String virtualNetworkName = null;
        String subnetName = null;
        String apiVersion = null;
        String subscriptionId = null;
        String $expand = null;
        Subnet response = api.subnetsGet(resourceGroupName, virtualNetworkName, subnetName, apiVersion, subscriptionId, $expand);
        // TODO: test validations
    }

    /**
     * The List subnets operation retrieves all the subnets in a virtual network.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void subnetsListTest() throws ApiException {
        String resourceGroupName = null;
        String virtualNetworkName = null;
        String apiVersion = null;
        String subscriptionId = null;
        SubnetListResult response = api.subnetsList(resourceGroupName, virtualNetworkName, apiVersion, subscriptionId);
        // TODO: test validations
    }

}
