/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2016-06-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIIPAddressAvailabilityResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIIPAddressAvailabilityResult::OAIIPAddressAvailabilityResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIIPAddressAvailabilityResult::OAIIPAddressAvailabilityResult() {
    this->initializeModel();
}

OAIIPAddressAvailabilityResult::~OAIIPAddressAvailabilityResult() {}

void OAIIPAddressAvailabilityResult::initializeModel() {

    m_available_isSet = false;
    m_available_isValid = false;

    m_available_ip_addresses_isSet = false;
    m_available_ip_addresses_isValid = false;
}

void OAIIPAddressAvailabilityResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIIPAddressAvailabilityResult::fromJsonObject(QJsonObject json) {

    m_available_isValid = ::OpenAPI::fromJsonValue(m_available, json[QString("available")]);
    m_available_isSet = !json[QString("available")].isNull() && m_available_isValid;

    m_available_ip_addresses_isValid = ::OpenAPI::fromJsonValue(m_available_ip_addresses, json[QString("availableIPAddresses")]);
    m_available_ip_addresses_isSet = !json[QString("availableIPAddresses")].isNull() && m_available_ip_addresses_isValid;
}

QString OAIIPAddressAvailabilityResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIIPAddressAvailabilityResult::asJsonObject() const {
    QJsonObject obj;
    if (m_available_isSet) {
        obj.insert(QString("available"), ::OpenAPI::toJsonValue(m_available));
    }
    if (m_available_ip_addresses.size() > 0) {
        obj.insert(QString("availableIPAddresses"), ::OpenAPI::toJsonValue(m_available_ip_addresses));
    }
    return obj;
}

bool OAIIPAddressAvailabilityResult::isAvailable() const {
    return m_available;
}
void OAIIPAddressAvailabilityResult::setAvailable(const bool &available) {
    m_available = available;
    m_available_isSet = true;
}

bool OAIIPAddressAvailabilityResult::is_available_Set() const{
    return m_available_isSet;
}

bool OAIIPAddressAvailabilityResult::is_available_Valid() const{
    return m_available_isValid;
}

QList<QString> OAIIPAddressAvailabilityResult::getAvailableIpAddresses() const {
    return m_available_ip_addresses;
}
void OAIIPAddressAvailabilityResult::setAvailableIpAddresses(const QList<QString> &available_ip_addresses) {
    m_available_ip_addresses = available_ip_addresses;
    m_available_ip_addresses_isSet = true;
}

bool OAIIPAddressAvailabilityResult::is_available_ip_addresses_Set() const{
    return m_available_ip_addresses_isSet;
}

bool OAIIPAddressAvailabilityResult::is_available_ip_addresses_Valid() const{
    return m_available_ip_addresses_isValid;
}

bool OAIIPAddressAvailabilityResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_available_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_available_ip_addresses.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIIPAddressAvailabilityResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
