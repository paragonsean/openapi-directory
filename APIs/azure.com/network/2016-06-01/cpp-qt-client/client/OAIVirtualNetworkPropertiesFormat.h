/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2016-06-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVirtualNetworkPropertiesFormat.h
 *
 * 
 */

#ifndef OAIVirtualNetworkPropertiesFormat_H
#define OAIVirtualNetworkPropertiesFormat_H

#include <QJsonObject>

#include "OAIAddressSpace.h"
#include "OAIDhcpOptions.h"
#include "OAISubnet.h"
#include "OAIVirtualNetworkPeering.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIVirtualNetworkPeering;
class OAIAddressSpace;
class OAIDhcpOptions;
class OAISubnet;

class OAIVirtualNetworkPropertiesFormat : public OAIObject {
public:
    OAIVirtualNetworkPropertiesFormat();
    OAIVirtualNetworkPropertiesFormat(QString json);
    ~OAIVirtualNetworkPropertiesFormat() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIVirtualNetworkPeering> getVirtualNetworkPeerings() const;
    void setVirtualNetworkPeerings(const QList<OAIVirtualNetworkPeering> &virtual_network_peerings);
    bool is_virtual_network_peerings_Set() const;
    bool is_virtual_network_peerings_Valid() const;

    OAIAddressSpace getAddressSpace() const;
    void setAddressSpace(const OAIAddressSpace &address_space);
    bool is_address_space_Set() const;
    bool is_address_space_Valid() const;

    OAIDhcpOptions getDhcpOptions() const;
    void setDhcpOptions(const OAIDhcpOptions &dhcp_options);
    bool is_dhcp_options_Set() const;
    bool is_dhcp_options_Valid() const;

    QString getProvisioningState() const;
    void setProvisioningState(const QString &provisioning_state);
    bool is_provisioning_state_Set() const;
    bool is_provisioning_state_Valid() const;

    QString getResourceGuid() const;
    void setResourceGuid(const QString &resource_guid);
    bool is_resource_guid_Set() const;
    bool is_resource_guid_Valid() const;

    QList<OAISubnet> getSubnets() const;
    void setSubnets(const QList<OAISubnet> &subnets);
    bool is_subnets_Set() const;
    bool is_subnets_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIVirtualNetworkPeering> m_virtual_network_peerings;
    bool m_virtual_network_peerings_isSet;
    bool m_virtual_network_peerings_isValid;

    OAIAddressSpace m_address_space;
    bool m_address_space_isSet;
    bool m_address_space_isValid;

    OAIDhcpOptions m_dhcp_options;
    bool m_dhcp_options_isSet;
    bool m_dhcp_options_isValid;

    QString m_provisioning_state;
    bool m_provisioning_state_isSet;
    bool m_provisioning_state_isValid;

    QString m_resource_guid;
    bool m_resource_guid_isSet;
    bool m_resource_guid_isValid;

    QList<OAISubnet> m_subnets;
    bool m_subnets_isSet;
    bool m_subnets_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVirtualNetworkPropertiesFormat)

#endif // OAIVirtualNetworkPropertiesFormat_H
