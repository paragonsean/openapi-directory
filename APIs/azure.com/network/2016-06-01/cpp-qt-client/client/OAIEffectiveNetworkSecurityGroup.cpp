/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2016-06-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEffectiveNetworkSecurityGroup.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEffectiveNetworkSecurityGroup::OAIEffectiveNetworkSecurityGroup(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEffectiveNetworkSecurityGroup::OAIEffectiveNetworkSecurityGroup() {
    this->initializeModel();
}

OAIEffectiveNetworkSecurityGroup::~OAIEffectiveNetworkSecurityGroup() {}

void OAIEffectiveNetworkSecurityGroup::initializeModel() {

    m_association_isSet = false;
    m_association_isValid = false;

    m_effective_security_rules_isSet = false;
    m_effective_security_rules_isValid = false;

    m_network_security_group_isSet = false;
    m_network_security_group_isValid = false;
}

void OAIEffectiveNetworkSecurityGroup::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEffectiveNetworkSecurityGroup::fromJsonObject(QJsonObject json) {

    m_association_isValid = ::OpenAPI::fromJsonValue(m_association, json[QString("association")]);
    m_association_isSet = !json[QString("association")].isNull() && m_association_isValid;

    m_effective_security_rules_isValid = ::OpenAPI::fromJsonValue(m_effective_security_rules, json[QString("effectiveSecurityRules")]);
    m_effective_security_rules_isSet = !json[QString("effectiveSecurityRules")].isNull() && m_effective_security_rules_isValid;

    m_network_security_group_isValid = ::OpenAPI::fromJsonValue(m_network_security_group, json[QString("networkSecurityGroup")]);
    m_network_security_group_isSet = !json[QString("networkSecurityGroup")].isNull() && m_network_security_group_isValid;
}

QString OAIEffectiveNetworkSecurityGroup::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEffectiveNetworkSecurityGroup::asJsonObject() const {
    QJsonObject obj;
    if (m_association.isSet()) {
        obj.insert(QString("association"), ::OpenAPI::toJsonValue(m_association));
    }
    if (m_effective_security_rules.size() > 0) {
        obj.insert(QString("effectiveSecurityRules"), ::OpenAPI::toJsonValue(m_effective_security_rules));
    }
    if (m_network_security_group.isSet()) {
        obj.insert(QString("networkSecurityGroup"), ::OpenAPI::toJsonValue(m_network_security_group));
    }
    return obj;
}

OAIEffectiveNetworkSecurityGroupAssociation OAIEffectiveNetworkSecurityGroup::getAssociation() const {
    return m_association;
}
void OAIEffectiveNetworkSecurityGroup::setAssociation(const OAIEffectiveNetworkSecurityGroupAssociation &association) {
    m_association = association;
    m_association_isSet = true;
}

bool OAIEffectiveNetworkSecurityGroup::is_association_Set() const{
    return m_association_isSet;
}

bool OAIEffectiveNetworkSecurityGroup::is_association_Valid() const{
    return m_association_isValid;
}

QList<OAIEffectiveNetworkSecurityRule> OAIEffectiveNetworkSecurityGroup::getEffectiveSecurityRules() const {
    return m_effective_security_rules;
}
void OAIEffectiveNetworkSecurityGroup::setEffectiveSecurityRules(const QList<OAIEffectiveNetworkSecurityRule> &effective_security_rules) {
    m_effective_security_rules = effective_security_rules;
    m_effective_security_rules_isSet = true;
}

bool OAIEffectiveNetworkSecurityGroup::is_effective_security_rules_Set() const{
    return m_effective_security_rules_isSet;
}

bool OAIEffectiveNetworkSecurityGroup::is_effective_security_rules_Valid() const{
    return m_effective_security_rules_isValid;
}

OAISubResource OAIEffectiveNetworkSecurityGroup::getNetworkSecurityGroup() const {
    return m_network_security_group;
}
void OAIEffectiveNetworkSecurityGroup::setNetworkSecurityGroup(const OAISubResource &network_security_group) {
    m_network_security_group = network_security_group;
    m_network_security_group_isSet = true;
}

bool OAIEffectiveNetworkSecurityGroup::is_network_security_group_Set() const{
    return m_network_security_group_isSet;
}

bool OAIEffectiveNetworkSecurityGroup::is_network_security_group_Valid() const{
    return m_network_security_group_isValid;
}

bool OAIEffectiveNetworkSecurityGroup::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_association.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_effective_security_rules.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_network_security_group.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEffectiveNetworkSecurityGroup::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
