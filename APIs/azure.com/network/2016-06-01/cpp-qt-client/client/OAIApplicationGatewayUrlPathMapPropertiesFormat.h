/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2016-06-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIApplicationGatewayUrlPathMapPropertiesFormat.h
 *
 * Properties of UrlPathMap of application gateway
 */

#ifndef OAIApplicationGatewayUrlPathMapPropertiesFormat_H
#define OAIApplicationGatewayUrlPathMapPropertiesFormat_H

#include <QJsonObject>

#include "OAIApplicationGatewayPathRule.h"
#include "OAISubResource.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISubResource;
class OAIApplicationGatewayPathRule;

class OAIApplicationGatewayUrlPathMapPropertiesFormat : public OAIObject {
public:
    OAIApplicationGatewayUrlPathMapPropertiesFormat();
    OAIApplicationGatewayUrlPathMapPropertiesFormat(QString json);
    ~OAIApplicationGatewayUrlPathMapPropertiesFormat() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAISubResource getDefaultBackendAddressPool() const;
    void setDefaultBackendAddressPool(const OAISubResource &default_backend_address_pool);
    bool is_default_backend_address_pool_Set() const;
    bool is_default_backend_address_pool_Valid() const;

    OAISubResource getDefaultBackendHttpSettings() const;
    void setDefaultBackendHttpSettings(const OAISubResource &default_backend_http_settings);
    bool is_default_backend_http_settings_Set() const;
    bool is_default_backend_http_settings_Valid() const;

    QList<OAIApplicationGatewayPathRule> getPathRules() const;
    void setPathRules(const QList<OAIApplicationGatewayPathRule> &path_rules);
    bool is_path_rules_Set() const;
    bool is_path_rules_Valid() const;

    QString getProvisioningState() const;
    void setProvisioningState(const QString &provisioning_state);
    bool is_provisioning_state_Set() const;
    bool is_provisioning_state_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAISubResource m_default_backend_address_pool;
    bool m_default_backend_address_pool_isSet;
    bool m_default_backend_address_pool_isValid;

    OAISubResource m_default_backend_http_settings;
    bool m_default_backend_http_settings_isSet;
    bool m_default_backend_http_settings_isValid;

    QList<OAIApplicationGatewayPathRule> m_path_rules;
    bool m_path_rules_isSet;
    bool m_path_rules_isValid;

    QString m_provisioning_state;
    bool m_provisioning_state_isSet;
    bool m_provisioning_state_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIApplicationGatewayUrlPathMapPropertiesFormat)

#endif // OAIApplicationGatewayUrlPathMapPropertiesFormat_H
