/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2016-06-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEffectiveNetworkSecurityGroupAssociation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEffectiveNetworkSecurityGroupAssociation::OAIEffectiveNetworkSecurityGroupAssociation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEffectiveNetworkSecurityGroupAssociation::OAIEffectiveNetworkSecurityGroupAssociation() {
    this->initializeModel();
}

OAIEffectiveNetworkSecurityGroupAssociation::~OAIEffectiveNetworkSecurityGroupAssociation() {}

void OAIEffectiveNetworkSecurityGroupAssociation::initializeModel() {

    m_network_interface_isSet = false;
    m_network_interface_isValid = false;

    m_subnet_isSet = false;
    m_subnet_isValid = false;
}

void OAIEffectiveNetworkSecurityGroupAssociation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEffectiveNetworkSecurityGroupAssociation::fromJsonObject(QJsonObject json) {

    m_network_interface_isValid = ::OpenAPI::fromJsonValue(m_network_interface, json[QString("networkInterface")]);
    m_network_interface_isSet = !json[QString("networkInterface")].isNull() && m_network_interface_isValid;

    m_subnet_isValid = ::OpenAPI::fromJsonValue(m_subnet, json[QString("subnet")]);
    m_subnet_isSet = !json[QString("subnet")].isNull() && m_subnet_isValid;
}

QString OAIEffectiveNetworkSecurityGroupAssociation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEffectiveNetworkSecurityGroupAssociation::asJsonObject() const {
    QJsonObject obj;
    if (m_network_interface.isSet()) {
        obj.insert(QString("networkInterface"), ::OpenAPI::toJsonValue(m_network_interface));
    }
    if (m_subnet.isSet()) {
        obj.insert(QString("subnet"), ::OpenAPI::toJsonValue(m_subnet));
    }
    return obj;
}

OAISubResource OAIEffectiveNetworkSecurityGroupAssociation::getNetworkInterface() const {
    return m_network_interface;
}
void OAIEffectiveNetworkSecurityGroupAssociation::setNetworkInterface(const OAISubResource &network_interface) {
    m_network_interface = network_interface;
    m_network_interface_isSet = true;
}

bool OAIEffectiveNetworkSecurityGroupAssociation::is_network_interface_Set() const{
    return m_network_interface_isSet;
}

bool OAIEffectiveNetworkSecurityGroupAssociation::is_network_interface_Valid() const{
    return m_network_interface_isValid;
}

OAISubResource OAIEffectiveNetworkSecurityGroupAssociation::getSubnet() const {
    return m_subnet;
}
void OAIEffectiveNetworkSecurityGroupAssociation::setSubnet(const OAISubResource &subnet) {
    m_subnet = subnet;
    m_subnet_isSet = true;
}

bool OAIEffectiveNetworkSecurityGroupAssociation::is_subnet_Set() const{
    return m_subnet_isSet;
}

bool OAIEffectiveNetworkSecurityGroupAssociation::is_subnet_Valid() const{
    return m_subnet_isValid;
}

bool OAIEffectiveNetworkSecurityGroupAssociation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_network_interface.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_subnet.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEffectiveNetworkSecurityGroupAssociation::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
