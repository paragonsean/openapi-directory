/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2016-06-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDhcpOptions.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDhcpOptions::OAIDhcpOptions(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDhcpOptions::OAIDhcpOptions() {
    this->initializeModel();
}

OAIDhcpOptions::~OAIDhcpOptions() {}

void OAIDhcpOptions::initializeModel() {

    m_dns_servers_isSet = false;
    m_dns_servers_isValid = false;
}

void OAIDhcpOptions::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDhcpOptions::fromJsonObject(QJsonObject json) {

    m_dns_servers_isValid = ::OpenAPI::fromJsonValue(m_dns_servers, json[QString("dnsServers")]);
    m_dns_servers_isSet = !json[QString("dnsServers")].isNull() && m_dns_servers_isValid;
}

QString OAIDhcpOptions::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDhcpOptions::asJsonObject() const {
    QJsonObject obj;
    if (m_dns_servers.size() > 0) {
        obj.insert(QString("dnsServers"), ::OpenAPI::toJsonValue(m_dns_servers));
    }
    return obj;
}

QList<QString> OAIDhcpOptions::getDnsServers() const {
    return m_dns_servers;
}
void OAIDhcpOptions::setDnsServers(const QList<QString> &dns_servers) {
    m_dns_servers = dns_servers;
    m_dns_servers_isSet = true;
}

bool OAIDhcpOptions::is_dns_servers_Set() const{
    return m_dns_servers_isSet;
}

bool OAIDhcpOptions::is_dns_servers_Valid() const{
    return m_dns_servers_isValid;
}

bool OAIDhcpOptions::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_dns_servers.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDhcpOptions::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
