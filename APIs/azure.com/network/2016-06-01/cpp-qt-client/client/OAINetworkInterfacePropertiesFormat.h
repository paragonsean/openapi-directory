/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2016-06-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINetworkInterfacePropertiesFormat.h
 *
 * NetworkInterface properties. 
 */

#ifndef OAINetworkInterfacePropertiesFormat_H
#define OAINetworkInterfacePropertiesFormat_H

#include <QJsonObject>

#include "OAINetworkInterfaceDnsSettings.h"
#include "OAINetworkInterfaceIPConfiguration.h"
#include "OAINetworkSecurityGroup.h"
#include "OAISubResource.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAINetworkInterfaceDnsSettings;
class OAINetworkInterfaceIPConfiguration;
class OAINetworkSecurityGroup;
class OAISubResource;

class OAINetworkInterfacePropertiesFormat : public OAIObject {
public:
    OAINetworkInterfacePropertiesFormat();
    OAINetworkInterfacePropertiesFormat(QString json);
    ~OAINetworkInterfacePropertiesFormat() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAINetworkInterfaceDnsSettings getDnsSettings() const;
    void setDnsSettings(const OAINetworkInterfaceDnsSettings &dns_settings);
    bool is_dns_settings_Set() const;
    bool is_dns_settings_Valid() const;

    bool isEnableIpForwarding() const;
    void setEnableIpForwarding(const bool &enable_ip_forwarding);
    bool is_enable_ip_forwarding_Set() const;
    bool is_enable_ip_forwarding_Valid() const;

    QList<OAINetworkInterfaceIPConfiguration> getIpConfigurations() const;
    void setIpConfigurations(const QList<OAINetworkInterfaceIPConfiguration> &ip_configurations);
    bool is_ip_configurations_Set() const;
    bool is_ip_configurations_Valid() const;

    QString getMacAddress() const;
    void setMacAddress(const QString &mac_address);
    bool is_mac_address_Set() const;
    bool is_mac_address_Valid() const;

    OAINetworkSecurityGroup getNetworkSecurityGroup() const;
    void setNetworkSecurityGroup(const OAINetworkSecurityGroup &network_security_group);
    bool is_network_security_group_Set() const;
    bool is_network_security_group_Valid() const;

    bool isPrimary() const;
    void setPrimary(const bool &primary);
    bool is_primary_Set() const;
    bool is_primary_Valid() const;

    QString getProvisioningState() const;
    void setProvisioningState(const QString &provisioning_state);
    bool is_provisioning_state_Set() const;
    bool is_provisioning_state_Valid() const;

    QString getResourceGuid() const;
    void setResourceGuid(const QString &resource_guid);
    bool is_resource_guid_Set() const;
    bool is_resource_guid_Valid() const;

    OAISubResource getVirtualMachine() const;
    void setVirtualMachine(const OAISubResource &virtual_machine);
    bool is_virtual_machine_Set() const;
    bool is_virtual_machine_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAINetworkInterfaceDnsSettings m_dns_settings;
    bool m_dns_settings_isSet;
    bool m_dns_settings_isValid;

    bool m_enable_ip_forwarding;
    bool m_enable_ip_forwarding_isSet;
    bool m_enable_ip_forwarding_isValid;

    QList<OAINetworkInterfaceIPConfiguration> m_ip_configurations;
    bool m_ip_configurations_isSet;
    bool m_ip_configurations_isValid;

    QString m_mac_address;
    bool m_mac_address_isSet;
    bool m_mac_address_isValid;

    OAINetworkSecurityGroup m_network_security_group;
    bool m_network_security_group_isSet;
    bool m_network_security_group_isValid;

    bool m_primary;
    bool m_primary_isSet;
    bool m_primary_isValid;

    QString m_provisioning_state;
    bool m_provisioning_state_isSet;
    bool m_provisioning_state_isValid;

    QString m_resource_guid;
    bool m_resource_guid_isSet;
    bool m_resource_guid_isValid;

    OAISubResource m_virtual_machine;
    bool m_virtual_machine_isSet;
    bool m_virtual_machine_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINetworkInterfacePropertiesFormat)

#endif // OAINetworkInterfacePropertiesFormat_H
