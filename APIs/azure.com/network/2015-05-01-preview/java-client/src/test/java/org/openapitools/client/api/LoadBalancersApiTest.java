/*
 * NetworkResourceProviderClient
 * The Windows Azure Network management API provides a RESTful set of web services that interact with Windows Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Windows Azure Networks service.
 *
 * The version of the OpenAPI document: 2015-05-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.LoadBalancer;
import org.openapitools.client.model.LoadBalancerListResult;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for LoadBalancersApi
 */
@Disabled
public class LoadBalancersApiTest {

    private final LoadBalancersApi api = new LoadBalancersApi();

    /**
     * The Put LoadBalancer operation creates/updates a LoadBalancer
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void loadBalancersCreateOrUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String loadBalancerName = null;
        String apiVersion = null;
        String subscriptionId = null;
        LoadBalancer parameters = null;
        LoadBalancer response = api.loadBalancersCreateOrUpdate(resourceGroupName, loadBalancerName, apiVersion, subscriptionId, parameters);
        // TODO: test validations
    }

    /**
     * The delete loadbalancer operation deletes the specified loadbalancer.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void loadBalancersDeleteTest() throws ApiException {
        String resourceGroupName = null;
        String loadBalancerName = null;
        String apiVersion = null;
        String subscriptionId = null;
        api.loadBalancersDelete(resourceGroupName, loadBalancerName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * The Get network interface operation retrieves information about the specified network interface.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void loadBalancersGetTest() throws ApiException {
        String resourceGroupName = null;
        String loadBalancerName = null;
        String apiVersion = null;
        String subscriptionId = null;
        LoadBalancer response = api.loadBalancersGet(resourceGroupName, loadBalancerName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * The List loadBalancer operation retrieves all the load balancers in a resource group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void loadBalancersListTest() throws ApiException {
        String resourceGroupName = null;
        String apiVersion = null;
        String subscriptionId = null;
        LoadBalancerListResult response = api.loadBalancersList(resourceGroupName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * The List loadBalancer operation retrieves all the load balancers in a subscription.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void loadBalancersListAllTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        LoadBalancerListResult response = api.loadBalancersListAll(apiVersion, subscriptionId);
        // TODO: test validations
    }

}
