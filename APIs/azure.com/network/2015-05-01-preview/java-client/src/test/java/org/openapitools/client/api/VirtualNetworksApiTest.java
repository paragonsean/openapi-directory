/*
 * NetworkResourceProviderClient
 * The Windows Azure Network management API provides a RESTful set of web services that interact with Windows Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Windows Azure Networks service.
 *
 * The version of the OpenAPI document: 2015-05-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.VirtualNetwork;
import org.openapitools.client.model.VirtualNetworkListResult;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for VirtualNetworksApi
 */
@Disabled
public class VirtualNetworksApiTest {

    private final VirtualNetworksApi api = new VirtualNetworksApi();

    /**
     * The Put VirtualNetwork operation creates/updates a virtual network in the specified resource group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void virtualNetworksCreateOrUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String virtualNetworkName = null;
        String apiVersion = null;
        String subscriptionId = null;
        VirtualNetwork parameters = null;
        VirtualNetwork response = api.virtualNetworksCreateOrUpdate(resourceGroupName, virtualNetworkName, apiVersion, subscriptionId, parameters);
        // TODO: test validations
    }

    /**
     * The Delete VirtualNetwork operation deletes the specified virtual network
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void virtualNetworksDeleteTest() throws ApiException {
        String resourceGroupName = null;
        String virtualNetworkName = null;
        String apiVersion = null;
        String subscriptionId = null;
        api.virtualNetworksDelete(resourceGroupName, virtualNetworkName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * The Get VirtualNetwork operation retrieves information about the specified virtual network.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void virtualNetworksGetTest() throws ApiException {
        String resourceGroupName = null;
        String virtualNetworkName = null;
        String apiVersion = null;
        String subscriptionId = null;
        VirtualNetwork response = api.virtualNetworksGet(resourceGroupName, virtualNetworkName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * The list VirtualNetwork returns all Virtual Networks in a resource group
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void virtualNetworksListTest() throws ApiException {
        String resourceGroupName = null;
        String apiVersion = null;
        String subscriptionId = null;
        VirtualNetworkListResult response = api.virtualNetworksList(resourceGroupName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * The list VirtualNetwork returns all Virtual Networks in a subscription
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void virtualNetworksListAllTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        VirtualNetworkListResult response = api.virtualNetworksListAll(apiVersion, subscriptionId);
        // TODO: test validations
    }

}
