/*
 * NetworkResourceProviderClient
 * The Windows Azure Network management API provides a RESTful set of web services that interact with Windows Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Windows Azure Networks service.
 *
 * The version of the OpenAPI document: 2015-05-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.PublicIpAddress;
import org.openapitools.client.model.PublicIpAddressListResult;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PublicIpAddressesApi
 */
@Disabled
public class PublicIpAddressesApiTest {

    private final PublicIpAddressesApi api = new PublicIpAddressesApi();

    /**
     * The Put PublicIPAddress operation creates/updates a stable/dynamic PublicIP address
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void publicIpAddressesCreateOrUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String publicIpAddressName = null;
        String apiVersion = null;
        String subscriptionId = null;
        PublicIpAddress parameters = null;
        PublicIpAddress response = api.publicIpAddressesCreateOrUpdate(resourceGroupName, publicIpAddressName, apiVersion, subscriptionId, parameters);
        // TODO: test validations
    }

    /**
     * The delete publicIpAddress operation deletes the specified publicIpAddress.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void publicIpAddressesDeleteTest() throws ApiException {
        String resourceGroupName = null;
        String publicIpAddressName = null;
        String apiVersion = null;
        String subscriptionId = null;
        api.publicIpAddressesDelete(resourceGroupName, publicIpAddressName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * The Get publicIpAddress operation retrieves information about the specified pubicIpAddress
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void publicIpAddressesGetTest() throws ApiException {
        String resourceGroupName = null;
        String publicIpAddressName = null;
        String apiVersion = null;
        String subscriptionId = null;
        PublicIpAddress response = api.publicIpAddressesGet(resourceGroupName, publicIpAddressName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * The List publicIpAddress operation retrieves all the publicIpAddresses in a resource group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void publicIpAddressesListTest() throws ApiException {
        String resourceGroupName = null;
        String apiVersion = null;
        String subscriptionId = null;
        PublicIpAddressListResult response = api.publicIpAddressesList(resourceGroupName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * The List publicIpAddress operation retrieves all the publicIpAddresses in a subscription.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void publicIpAddressesListAllTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        PublicIpAddressListResult response = api.publicIpAddressesListAll(apiVersion, subscriptionId);
        // TODO: test validations
    }

}
