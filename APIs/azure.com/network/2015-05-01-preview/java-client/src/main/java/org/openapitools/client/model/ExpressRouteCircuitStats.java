/*
 * NetworkResourceProviderClient
 * The Windows Azure Network management API provides a RESTful set of web services that interact with Windows Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Windows Azure Networks service.
 *
 * The version of the OpenAPI document: 2015-05-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Contains Stats associated with the peering
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:25:56.955675-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ExpressRouteCircuitStats {
  public static final String SERIALIZED_NAME_BYTES_IN = "bytesIn";
  @SerializedName(SERIALIZED_NAME_BYTES_IN)
  private Integer bytesIn;

  public static final String SERIALIZED_NAME_BYTES_OUT = "bytesOut";
  @SerializedName(SERIALIZED_NAME_BYTES_OUT)
  private Integer bytesOut;

  public ExpressRouteCircuitStats() {
  }

  public ExpressRouteCircuitStats bytesIn(Integer bytesIn) {
    this.bytesIn = bytesIn;
    return this;
  }

  /**
   * Gets BytesIn of the peering.
   * @return bytesIn
   */
  @javax.annotation.Nullable
  public Integer getBytesIn() {
    return bytesIn;
  }

  public void setBytesIn(Integer bytesIn) {
    this.bytesIn = bytesIn;
  }


  public ExpressRouteCircuitStats bytesOut(Integer bytesOut) {
    this.bytesOut = bytesOut;
    return this;
  }

  /**
   * Gets BytesOut of the peering.
   * @return bytesOut
   */
  @javax.annotation.Nullable
  public Integer getBytesOut() {
    return bytesOut;
  }

  public void setBytesOut(Integer bytesOut) {
    this.bytesOut = bytesOut;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExpressRouteCircuitStats expressRouteCircuitStats = (ExpressRouteCircuitStats) o;
    return Objects.equals(this.bytesIn, expressRouteCircuitStats.bytesIn) &&
        Objects.equals(this.bytesOut, expressRouteCircuitStats.bytesOut);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bytesIn, bytesOut);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExpressRouteCircuitStats {\n");
    sb.append("    bytesIn: ").append(toIndentedString(bytesIn)).append("\n");
    sb.append("    bytesOut: ").append(toIndentedString(bytesOut)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("bytesIn");
    openapiFields.add("bytesOut");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ExpressRouteCircuitStats
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ExpressRouteCircuitStats.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ExpressRouteCircuitStats is not found in the empty JSON string", ExpressRouteCircuitStats.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ExpressRouteCircuitStats.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ExpressRouteCircuitStats` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ExpressRouteCircuitStats.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ExpressRouteCircuitStats' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ExpressRouteCircuitStats> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ExpressRouteCircuitStats.class));

       return (TypeAdapter<T>) new TypeAdapter<ExpressRouteCircuitStats>() {
           @Override
           public void write(JsonWriter out, ExpressRouteCircuitStats value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ExpressRouteCircuitStats read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ExpressRouteCircuitStats given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ExpressRouteCircuitStats
   * @throws IOException if the JSON string is invalid with respect to ExpressRouteCircuitStats
   */
  public static ExpressRouteCircuitStats fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ExpressRouteCircuitStats.class);
  }

  /**
   * Convert an instance of ExpressRouteCircuitStats to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

