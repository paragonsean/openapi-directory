openapi: 3.0.1
info:
  description: The Windows Azure Network management API provides a RESTful set of
    web services that interact with Windows Azure Networks service to manage your
    network resources. The API has entities that capture the relationship between
    an end user and the Windows Azure Networks service.
  title: NetworkResourceProviderClient
  version: 2015-05-01-preview
  x-apisguru-categories:
  - cloud
  x-logo:
    url: https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png
  x-origin:
  - format: swagger
    url: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/network/resource-manager/Microsoft.Network/preview/2015-05-01-preview/network.json
    version: "2.0"
  x-preferred: false
  x-providerName: azure.com
  x-serviceName: network
  x-tags:
  - Azure
  - Microsoft
servers:
- url: https://management.azure.com/
security:
- azure_auth:
  - user_impersonation
paths:
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/applicationGateways:
    get:
      description: The List application gateway operation retrieves all the application
        gateways in a subscription.
      operationId: ApplicationGateways_ListAll
      parameters:
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationGatewayListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/ApplicationGatewayListResult'
          description: ""
      tags:
      - ApplicationGateways
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
      - text/json
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/expressRouteCircuits:
    get:
      description: The List ExpressRouteCircuit operation retrieves all the ExpressRouteCircuits
        in a subscription.
      operationId: ExpressRouteCircuits_ListAll
      parameters:
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpressRouteCircuitListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/ExpressRouteCircuitListResult'
          description: ""
      tags:
      - ExpressRouteCircuits
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
      - text/json
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/expressRouteServiceProviders:
    get:
      description: The List ExpressRouteServiceProvider operation retrieves all the
        available ExpressRouteServiceProviders.
      operationId: ExpressRouteServiceProviders_List
      parameters:
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpressRouteServiceProviderListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/ExpressRouteServiceProviderListResult'
          description: ""
      tags:
      - ExpressRouteServiceProviders
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
      - text/json
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/loadBalancers:
    get:
      description: The List loadBalancer operation retrieves all the load balancers
        in a subscription.
      operationId: LoadBalancers_ListAll
      parameters:
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadBalancerListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/LoadBalancerListResult'
          description: ""
      tags:
      - LoadBalancers
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
      - text/json
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/locations/{location}/CheckDnsNameAvailability:
    get:
      description: Checks whether a domain name in the cloudapp.net zone is available
        for use.
      operationId: CheckDnsNameAvailability
      parameters:
      - description: The location of the domain name
        in: path
        name: location
        required: true
        schema:
          type: string
      - description: "The domain name to be verified. It must conform to the following\
          \ regular expression: ^[a-z][a-z0-9-]{1,61}[a-z0-9]$."
        in: query
        name: domainNameLabel
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnsNameAvailabilityResult'
            text/json:
              schema:
                $ref: '#/components/schemas/DnsNameAvailabilityResult'
          description: ""
      x-accepts:
      - application/json
      - text/json
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/locations/{location}/usages:
    get:
      description: Lists compute usages for a subscription.
      operationId: Usages_List
      parameters:
      - description: The location upon which resource usage is queried.
        in: path
        name: location
        required: true
        schema:
          pattern: "^[-\\w\\._]+$"
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsagesListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/UsagesListResult'
          description: ""
      tags:
      - Usages
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
      - text/json
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/networkInterfaces:
    get:
      description: The List networkInterfaces operation retrieves all the networkInterfaces
        in a subscription.
      operationId: NetworkInterfaces_ListAll
      parameters:
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkInterfaceListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/NetworkInterfaceListResult'
          description: ""
      tags:
      - NetworkInterfaces
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
      - text/json
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/networkSecurityGroups:
    get:
      description: The list NetworkSecurityGroups returns all network security groups
        in a subscription
      operationId: NetworkSecurityGroups_ListAll
      parameters:
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkSecurityGroupListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/NetworkSecurityGroupListResult'
          description: ""
      tags:
      - NetworkSecurityGroups
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
      - text/json
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/publicIPAddresses:
    get:
      description: The List publicIpAddress operation retrieves all the publicIpAddresses
        in a subscription.
      operationId: PublicIpAddresses_ListAll
      parameters:
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicIpAddressListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/PublicIpAddressListResult'
          description: ""
      tags:
      - PublicIpAddresses
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
      - text/json
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/routeTables:
    get:
      description: The list RouteTables returns all route tables in a subscription
      operationId: RouteTables_ListAll
      parameters:
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RouteTableListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/RouteTableListResult'
          description: ""
      tags:
      - RouteTables
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
      - text/json
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/virtualnetworks:
    get:
      description: The list VirtualNetwork returns all Virtual Networks in a subscription
      operationId: VirtualNetworks_ListAll
      parameters:
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetworkListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/VirtualNetworkListResult'
          description: ""
      tags:
      - VirtualNetworks
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
      - text/json
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways:
    get:
      description: The List ApplicationGateway operation retrieves all the application
        gateways in a resource group.
      operationId: ApplicationGateways_List
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationGatewayListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/ApplicationGatewayListResult'
          description: ""
      tags:
      - ApplicationGateways
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
      - text/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}
  : delete:
      description: The delete application gateway operation deletes the specified
        application gateway.
      operationId: ApplicationGateways_Delete
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the application gateway.
        in: path
        name: applicationGatewayName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: ""
        "202":
          content: {}
          description: ""
        "204":
          content: {}
          description: ""
      tags:
      - ApplicationGateways
      x-ms-long-running-operation: true
      x-accepts:
      - application/json
    get:
      description: The Get application gateway operation retrieves information about
        the specified application gateway.
      operationId: ApplicationGateways_Get
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the application gateway.
        in: path
        name: applicationGatewayName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationGateway'
            text/json:
              schema:
                $ref: '#/components/schemas/ApplicationGateway'
          description: ""
      tags:
      - ApplicationGateways
      x-accepts:
      - application/json
      - text/json
    put:
      description: The Put ApplicationGateway operation creates/updates a ApplicationGateway
      operationId: ApplicationGateways_CreateOrUpdate
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the ApplicationGateway.
        in: path
        name: applicationGatewayName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationGateway'
          text/json:
            schema:
              $ref: '#/components/schemas/ApplicationGateway'
        description: Parameters supplied to the create/delete ApplicationGateway operation
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationGateway'
            text/json:
              schema:
                $ref: '#/components/schemas/ApplicationGateway'
          description: ""
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationGateway'
            text/json:
              schema:
                $ref: '#/components/schemas/ApplicationGateway'
          description: ""
      tags:
      - ApplicationGateways
      x-ms-long-running-operation: true
      x-codegen-request-body-name: parameters
      x-content-type: application/json
      x-accepts:
      - application/json
      - text/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}/start
  : post:
      description: The Start ApplicationGateway operation starts application gateway
        in the specified resource group through Network resource provider.
      operationId: ApplicationGateways_Start
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the application gateway.
        in: path
        name: applicationGatewayName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "202":
          content: {}
          description: ""
      tags:
      - ApplicationGateways
      x-ms-long-running-operation: true
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}/stop
  : post:
      description: The STOP ApplicationGateway operation stops application gateway
        in the specified resource group through Network resource provider.
      operationId: ApplicationGateways_Stop
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the application gateway.
        in: path
        name: applicationGatewayName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: ""
        "202":
          content: {}
          description: ""
      tags:
      - ApplicationGateways
      x-ms-long-running-operation: true
      x-accepts:
      - application/json
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections:
    get:
      description: The List VirtualNetworkGatewayConnections operation retrieves all
        the virtual network gateways connections created.
      operationId: VirtualNetworkGatewayConnections_List
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetworkGatewayConnectionListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/VirtualNetworkGatewayConnectionListResult'
          description: ""
      tags:
      - VirtualNetworkGatewayConnections
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
      - text/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}
  : get:
      description: The Get VirtualNetworkGatewayConnection operation retrieves information
        about the specified virtual network gateway connection through Network resource
        provider.
      operationId: VirtualNetworkGatewayConnections_Get
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the virtual network gateway connection.
        in: path
        name: virtualNetworkGatewayConnectionName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetworkGatewayConnection'
            text/json:
              schema:
                $ref: '#/components/schemas/VirtualNetworkGatewayConnection'
          description: ""
      tags:
      - VirtualNetworkGatewayConnections
      x-accepts:
      - application/json
      - text/json
    put:
      description: The Put VirtualNetworkGatewayConnection operation creates/updates
        a virtual network gateway connection in the specified resource group through
        Network resource provider.
      operationId: VirtualNetworkGatewayConnections_CreateOrUpdate
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the virtual network gateway connection.
        in: path
        name: virtualNetworkGatewayConnectionName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualNetworkGatewayConnection'
          text/json:
            schema:
              $ref: '#/components/schemas/VirtualNetworkGatewayConnection'
        description: Parameters supplied to the Begin Create or update Virtual Network
          Gateway connection operation through Network resource provider.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetworkGatewayConnection'
            text/json:
              schema:
                $ref: '#/components/schemas/VirtualNetworkGatewayConnection'
          description: ""
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetworkGatewayConnection'
            text/json:
              schema:
                $ref: '#/components/schemas/VirtualNetworkGatewayConnection'
          description: ""
      tags:
      - VirtualNetworkGatewayConnections
      x-ms-long-running-operation: true
      x-codegen-request-body-name: parameters
      x-content-type: application/json
      x-accepts:
      - application/json
      - text/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}/
  : delete:
      description: The Delete VirtualNetworkGatewayConnection operation deletes the
        specified virtual network Gateway connection through Network resource provider.
      operationId: VirtualNetworkGatewayConnections_Delete
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the virtual network gateway connection.
        in: path
        name: virtualNetworkGatewayConnectionName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: ""
        "202":
          content: {}
          description: ""
        "204":
          content: {}
          description: ""
      tags:
      - VirtualNetworkGatewayConnections
      x-ms-long-running-operation: true
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}/sharedkey
  : get:
      description: The Get VirtualNetworkGatewayConnectionSharedKey operation retrieves
        information about the specified virtual network gateway connection shared
        key through Network resource provider.
      operationId: VirtualNetworkGatewayConnections_GetSharedKey
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The virtual network gateway connection shared key name.
        in: path
        name: virtualNetworkGatewayConnectionName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionSharedKey'
            text/json:
              schema:
                $ref: '#/components/schemas/ConnectionSharedKey'
          description: ""
      tags:
      - VirtualNetworkGatewayConnections
      x-accepts:
      - application/json
      - text/json
    put:
      description: The Put VirtualNetworkGatewayConnectionSharedKey operation sets
        the virtual network gateway connection shared key for passed virtual network
        gateway connection in the specified resource group through Network resource
        provider.
      operationId: VirtualNetworkGatewayConnections_SetSharedKey
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The virtual network gateway connection name.
        in: path
        name: virtualNetworkGatewayConnectionName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionSharedKey'
          text/json:
            schema:
              $ref: '#/components/schemas/ConnectionSharedKey'
        description: Parameters supplied to the Begin Set Virtual Network Gateway
          connection Shared key operation through Network resource provider.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionSharedKey'
            text/json:
              schema:
                $ref: '#/components/schemas/ConnectionSharedKey'
          description: ""
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionSharedKey'
            text/json:
              schema:
                $ref: '#/components/schemas/ConnectionSharedKey'
          description: ""
      tags:
      - VirtualNetworkGatewayConnections
      x-ms-long-running-operation: true
      x-codegen-request-body-name: parameters
      x-content-type: application/json
      x-accepts:
      - application/json
      - text/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}/sharedkey/reset
  : post:
      description: The VirtualNetworkGatewayConnectionResetSharedKey operation resets
        the virtual network gateway connection shared key for passed virtual network
        gateway connection in the specified resource group through Network resource
        provider.
      operationId: VirtualNetworkGatewayConnections_ResetSharedKey
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The virtual network gateway connection reset shared key Name.
        in: path
        name: virtualNetworkGatewayConnectionName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionResetSharedKey'
          text/json:
            schema:
              $ref: '#/components/schemas/ConnectionResetSharedKey'
        description: Parameters supplied to the Begin Reset Virtual Network Gateway
          connection shared key operation through Network resource provider.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionResetSharedKey'
            text/json:
              schema:
                $ref: '#/components/schemas/ConnectionResetSharedKey'
          description: ""
        "202":
          content: {}
          description: ""
      tags:
      - VirtualNetworkGatewayConnections
      x-ms-long-running-operation: true
      x-codegen-request-body-name: parameters
      x-content-type: application/json
      x-accepts:
      - application/json
      - text/json
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits:
    get:
      description: The List ExpressRouteCircuit operation retrieves all the ExpressRouteCircuits
        in a resource group.
      operationId: ExpressRouteCircuits_List
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpressRouteCircuitListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/ExpressRouteCircuitListResult'
          description: ""
      tags:
      - ExpressRouteCircuits
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
      - text/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/
  : delete:
      description: The delete ExpressRouteCircuit operation deletes the specified
        ExpressRouteCircuit.
      operationId: ExpressRouteCircuits_Delete
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the express route Circuit.
        in: path
        name: circuitName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: ""
        "202":
          content: {}
          description: ""
        "204":
          content: {}
          description: ""
      tags:
      - ExpressRouteCircuits
      x-ms-long-running-operation: true
      x-accepts:
      - application/json
    get:
      description: The Get ExpressRouteCircuit operation retrieves information about
        the specified ExpressRouteCircuit.
      operationId: ExpressRouteCircuits_Get
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the circuit.
        in: path
        name: circuitName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpressRouteCircuit'
            text/json:
              schema:
                $ref: '#/components/schemas/ExpressRouteCircuit'
          description: ""
      tags:
      - ExpressRouteCircuits
      x-accepts:
      - application/json
      - text/json
    put:
      description: The Put ExpressRouteCircuit operation creates/updates a ExpressRouteCircuit
      operationId: ExpressRouteCircuits_CreateOrUpdate
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the circuit.
        in: path
        name: circuitName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExpressRouteCircuit'
          text/json:
            schema:
              $ref: '#/components/schemas/ExpressRouteCircuit'
        description: Parameters supplied to the create/delete ExpressRouteCircuit
          operation
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpressRouteCircuit'
            text/json:
              schema:
                $ref: '#/components/schemas/ExpressRouteCircuit'
          description: ""
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpressRouteCircuit'
            text/json:
              schema:
                $ref: '#/components/schemas/ExpressRouteCircuit'
          description: ""
      tags:
      - ExpressRouteCircuits
      x-ms-long-running-operation: true
      x-codegen-request-body-name: parameters
      x-content-type: application/json
      x-accepts:
      - application/json
      - text/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/authorizations
  : get:
      description: The List authorization operation retrieves all the authorizations
        in an ExpressRouteCircuit.
      operationId: ExpressRouteCircuitAuthorizations_List
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the circuit.
        in: path
        name: circuitName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/AuthorizationListResult'
          description: ""
      tags:
      - ExpressRouteCircuitAuthorizations
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
      - text/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/authorizations/{authorizationName}
  : delete:
      description: The delete authorization operation deletes the specified authorization
        from the specified ExpressRouteCircuit.
      operationId: ExpressRouteCircuitAuthorizations_Delete
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the express route circuit.
        in: path
        name: circuitName
        required: true
        schema:
          type: string
      - description: The name of the authorization.
        in: path
        name: authorizationName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: ""
        "202":
          content: {}
          description: ""
        "204":
          content: {}
          description: ""
      tags:
      - ExpressRouteCircuitAuthorizations
      x-ms-long-running-operation: true
      x-accepts:
      - application/json
    get:
      description: The GET authorization operation retrieves the specified authorization
        from the specified ExpressRouteCircuit.
      operationId: ExpressRouteCircuitAuthorizations_Get
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the express route circuit.
        in: path
        name: circuitName
        required: true
        schema:
          type: string
      - description: The name of the authorization.
        in: path
        name: authorizationName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpressRouteCircuitAuthorization'
            text/json:
              schema:
                $ref: '#/components/schemas/ExpressRouteCircuitAuthorization'
          description: ""
      tags:
      - ExpressRouteCircuitAuthorizations
      x-accepts:
      - application/json
      - text/json
    put:
      description: The Put Authorization operation creates/updates an authorization
        in the specified ExpressRouteCircuits
      operationId: ExpressRouteCircuitAuthorizations_CreateOrUpdate
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the express route circuit.
        in: path
        name: circuitName
        required: true
        schema:
          type: string
      - description: The name of the authorization.
        in: path
        name: authorizationName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExpressRouteCircuitAuthorization'
          text/json:
            schema:
              $ref: '#/components/schemas/ExpressRouteCircuitAuthorization'
        description: Parameters supplied to the create/update ExpressRouteCircuitAuthorization
          operation
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpressRouteCircuitAuthorization'
            text/json:
              schema:
                $ref: '#/components/schemas/ExpressRouteCircuitAuthorization'
          description: ""
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpressRouteCircuitAuthorization'
            text/json:
              schema:
                $ref: '#/components/schemas/ExpressRouteCircuitAuthorization'
          description: ""
      tags:
      - ExpressRouteCircuitAuthorizations
      x-ms-long-running-operation: true
      x-codegen-request-body-name: authorizationParameters
      x-content-type: application/json
      x-accepts:
      - application/json
      - text/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings
  : get:
      description: The List peering operation retrieves all the peerings in an ExpressRouteCircuit.
      operationId: ExpressRouteCircuitPeerings_List
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the circuit.
        in: path
        name: circuitName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpressRouteCircuitPeeringListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/ExpressRouteCircuitPeeringListResult'
          description: ""
      tags:
      - ExpressRouteCircuitPeerings
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
      - text/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}
  : delete:
      description: The delete peering operation deletes the specified peering from
        the ExpressRouteCircuit.
      operationId: ExpressRouteCircuitPeerings_Delete
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the express route circuit.
        in: path
        name: circuitName
        required: true
        schema:
          type: string
      - description: The name of the peering.
        in: path
        name: peeringName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: ""
        "202":
          content: {}
          description: ""
        "204":
          content: {}
          description: ""
      tags:
      - ExpressRouteCircuitPeerings
      x-ms-long-running-operation: true
      x-accepts:
      - application/json
    get:
      description: The GET peering operation retrieves the specified authorization
        from the ExpressRouteCircuit.
      operationId: ExpressRouteCircuitPeerings_Get
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the express route circuit.
        in: path
        name: circuitName
        required: true
        schema:
          type: string
      - description: The name of the peering.
        in: path
        name: peeringName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpressRouteCircuitPeering'
            text/json:
              schema:
                $ref: '#/components/schemas/ExpressRouteCircuitPeering'
          description: ""
      tags:
      - ExpressRouteCircuitPeerings
      x-accepts:
      - application/json
      - text/json
    put:
      description: The Put Peering operation creates/updates an peering in the specified
        ExpressRouteCircuits
      operationId: ExpressRouteCircuitPeerings_CreateOrUpdate
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the express route circuit.
        in: path
        name: circuitName
        required: true
        schema:
          type: string
      - description: The name of the peering.
        in: path
        name: peeringName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExpressRouteCircuitPeering'
          text/json:
            schema:
              $ref: '#/components/schemas/ExpressRouteCircuitPeering'
        description: Parameters supplied to the create/update ExpressRouteCircuit
          Peering operation
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpressRouteCircuitPeering'
            text/json:
              schema:
                $ref: '#/components/schemas/ExpressRouteCircuitPeering'
          description: ""
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpressRouteCircuitPeering'
            text/json:
              schema:
                $ref: '#/components/schemas/ExpressRouteCircuitPeering'
          description: ""
      tags:
      - ExpressRouteCircuitPeerings
      x-ms-long-running-operation: true
      x-codegen-request-body-name: peeringParameters
      x-content-type: application/json
      x-accepts:
      - application/json
      - text/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}arpTable
  : get:
      description: The ListArpTable from ExpressRouteCircuit operation retrieves the
        currently advertised arp table associated with the ExpressRouteCircuits in
        a resource group.
      operationId: ExpressRouteCircuits_ListArpTable
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the circuit.
        in: path
        name: circuitName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpressRouteCircuitsArpTableListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/ExpressRouteCircuitsArpTableListResult'
          description: ""
      tags:
      - ExpressRouteCircuits
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
      - text/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}routesTable
  : get:
      description: The ListRoutesTable from ExpressRouteCircuit operation retrieves
        the currently advertised routes table associated with the ExpressRouteCircuits
        in a resource group.
      operationId: ExpressRouteCircuits_ListRoutesTable
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the circuit.
        in: path
        name: circuitName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpressRouteCircuitsRoutesTableListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/ExpressRouteCircuitsRoutesTableListResult'
          description: ""
      tags:
      - ExpressRouteCircuits
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
      - text/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}stats
  : get:
      description: The ListStats ExpressRouteCircuit operation retrieves all the stats
        from a ExpressRouteCircuits in a resource group.
      operationId: ExpressRouteCircuits_ListStats
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the loadBalancer.
        in: path
        name: circuitName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpressRouteCircuitsStatsListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/ExpressRouteCircuitsStatsListResult'
          description: ""
      tags:
      - ExpressRouteCircuits
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
      - text/json
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers:
    get:
      description: The List loadBalancer operation retrieves all the load balancers
        in a resource group.
      operationId: LoadBalancers_List
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadBalancerListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/LoadBalancerListResult'
          description: ""
      tags:
      - LoadBalancers
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
      - text/json
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}:
    delete:
      description: The delete loadbalancer operation deletes the specified loadbalancer.
      operationId: LoadBalancers_Delete
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the loadBalancer.
        in: path
        name: loadBalancerName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: ""
        "202":
          content: {}
          description: ""
        "204":
          content: {}
          description: ""
      tags:
      - LoadBalancers
      x-ms-long-running-operation: true
      x-accepts:
      - application/json
    get:
      description: The Get network interface operation retrieves information about
        the specified network interface.
      operationId: LoadBalancers_Get
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the loadBalancer.
        in: path
        name: loadBalancerName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadBalancer'
            text/json:
              schema:
                $ref: '#/components/schemas/LoadBalancer'
          description: ""
      tags:
      - LoadBalancers
      x-accepts:
      - application/json
      - text/json
    put:
      description: The Put LoadBalancer operation creates/updates a LoadBalancer
      operationId: LoadBalancers_CreateOrUpdate
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the loadBalancer.
        in: path
        name: loadBalancerName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoadBalancer'
          text/json:
            schema:
              $ref: '#/components/schemas/LoadBalancer'
        description: Parameters supplied to the create/delete LoadBalancer operation
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadBalancer'
            text/json:
              schema:
                $ref: '#/components/schemas/LoadBalancer'
          description: ""
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadBalancer'
            text/json:
              schema:
                $ref: '#/components/schemas/LoadBalancer'
          description: ""
      tags:
      - LoadBalancers
      x-ms-long-running-operation: true
      x-codegen-request-body-name: parameters
      x-content-type: application/json
      x-accepts:
      - application/json
      - text/json
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/localNetworkGateways:
    get:
      description: The List LocalNetworkGateways operation retrieves all the local
        network gateways stored.
      operationId: LocalNetworkGateways_List
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalNetworkGatewayListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/LocalNetworkGatewayListResult'
          description: ""
      tags:
      - LocalNetworkGateways
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
      - text/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/localNetworkGateways/{localNetworkGatewayName}
  : get:
      description: The Get LocalNetworkGateway operation retrieves information about
        the specified local network gateway through Network resource provider.
      operationId: LocalNetworkGateways_Get
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the local network gateway.
        in: path
        name: localNetworkGatewayName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalNetworkGateway'
            text/json:
              schema:
                $ref: '#/components/schemas/LocalNetworkGateway'
          description: ""
      tags:
      - LocalNetworkGateways
      x-accepts:
      - application/json
      - text/json
    put:
      description: The Put LocalNetworkGateway operation creates/updates a local network
        gateway in the specified resource group through Network resource provider.
      operationId: LocalNetworkGateways_CreateOrUpdate
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the local network gateway.
        in: path
        name: localNetworkGatewayName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocalNetworkGateway'
          text/json:
            schema:
              $ref: '#/components/schemas/LocalNetworkGateway'
        description: Parameters supplied to the Begin Create or update Local Network
          Gateway operation through Network resource provider.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalNetworkGateway'
            text/json:
              schema:
                $ref: '#/components/schemas/LocalNetworkGateway'
          description: ""
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalNetworkGateway'
            text/json:
              schema:
                $ref: '#/components/schemas/LocalNetworkGateway'
          description: ""
      tags:
      - LocalNetworkGateways
      x-ms-long-running-operation: true
      x-codegen-request-body-name: parameters
      x-content-type: application/json
      x-accepts:
      - application/json
      - text/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/localNetworkGateways/{localNetworkGatewayName}/
  : delete:
      description: The Delete LocalNetworkGateway operation deletes the specified
        local network Gateway through Network resource provider.
      operationId: LocalNetworkGateways_Delete
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the local network gateway.
        in: path
        name: localNetworkGatewayName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: ""
        "202":
          content: {}
          description: ""
        "204":
          content: {}
          description: ""
      tags:
      - LocalNetworkGateways
      x-ms-long-running-operation: true
      x-accepts:
      - application/json
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces:
    get:
      description: The List networkInterfaces operation retrieves all the networkInterfaces
        in a resource group.
      operationId: NetworkInterfaces_List
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkInterfaceListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/NetworkInterfaceListResult'
          description: ""
      tags:
      - NetworkInterfaces
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
      - text/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}
  : delete:
      description: The delete networkInterface operation deletes the specified networkInterface.
      operationId: NetworkInterfaces_Delete
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the network interface.
        in: path
        name: networkInterfaceName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: ""
        "202":
          content: {}
          description: ""
        "204":
          content: {}
          description: ""
      tags:
      - NetworkInterfaces
      x-ms-long-running-operation: true
      x-accepts:
      - application/json
    get:
      description: The Get network interface operation retrieves information about
        the specified network interface.
      operationId: NetworkInterfaces_Get
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the network interface.
        in: path
        name: networkInterfaceName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkInterface'
            text/json:
              schema:
                $ref: '#/components/schemas/NetworkInterface'
          description: ""
      tags:
      - NetworkInterfaces
      x-accepts:
      - application/json
      - text/json
    put:
      description: The Put NetworkInterface operation creates/updates a networkInterface
      operationId: NetworkInterfaces_CreateOrUpdate
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the network interface.
        in: path
        name: networkInterfaceName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkInterface'
          text/json:
            schema:
              $ref: '#/components/schemas/NetworkInterface'
        description: Parameters supplied to the create/update NetworkInterface operation
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkInterface'
            text/json:
              schema:
                $ref: '#/components/schemas/NetworkInterface'
          description: ""
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkInterface'
            text/json:
              schema:
                $ref: '#/components/schemas/NetworkInterface'
          description: ""
      tags:
      - NetworkInterfaces
      x-ms-long-running-operation: true
      x-codegen-request-body-name: parameters
      x-content-type: application/json
      x-accepts:
      - application/json
      - text/json
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityGroups:
    get:
      description: The list NetworkSecurityGroups returns all network security groups
        in a resource group
      operationId: NetworkSecurityGroups_List
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkSecurityGroupListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/NetworkSecurityGroupListResult'
          description: ""
      tags:
      - NetworkSecurityGroups
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
      - text/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityGroups/{networkSecurityGroupName}
  : delete:
      description: The Delete NetworkSecurityGroup operation deletes the specified
        network security group
      operationId: NetworkSecurityGroups_Delete
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the network security group.
        in: path
        name: networkSecurityGroupName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: ""
        "202":
          content: {}
          description: ""
        "204":
          content: {}
          description: ""
      tags:
      - NetworkSecurityGroups
      x-ms-long-running-operation: true
      x-accepts:
      - application/json
    get:
      description: The Get NetworkSecurityGroups operation retrieves information about
        the specified network security group.
      operationId: NetworkSecurityGroups_Get
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the network security group.
        in: path
        name: networkSecurityGroupName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkSecurityGroup'
            text/json:
              schema:
                $ref: '#/components/schemas/NetworkSecurityGroup'
          description: ""
      tags:
      - NetworkSecurityGroups
      x-accepts:
      - application/json
      - text/json
    put:
      description: The Put NetworkSecurityGroup operation creates/updates a network
        security group in the specified resource group.
      operationId: NetworkSecurityGroups_CreateOrUpdate
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the network security group.
        in: path
        name: networkSecurityGroupName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkSecurityGroup'
          text/json:
            schema:
              $ref: '#/components/schemas/NetworkSecurityGroup'
        description: Parameters supplied to the create/update Network Security Group
          operation
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkSecurityGroup'
            text/json:
              schema:
                $ref: '#/components/schemas/NetworkSecurityGroup'
          description: ""
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkSecurityGroup'
            text/json:
              schema:
                $ref: '#/components/schemas/NetworkSecurityGroup'
          description: ""
      tags:
      - NetworkSecurityGroups
      x-ms-long-running-operation: true
      x-codegen-request-body-name: parameters
      x-content-type: application/json
      x-accepts:
      - application/json
      - text/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityGroups/{networkSecurityGroupName}/securityRules
  : get:
      description: The List network security rule operation retrieves all the security
        rules in a network security group.
      operationId: SecurityRules_List
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the network security group.
        in: path
        name: networkSecurityGroupName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityRuleListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/SecurityRuleListResult'
          description: ""
      tags:
      - SecurityRules
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
      - text/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityGroups/{networkSecurityGroupName}/securityRules/{securityRuleName}
  : delete:
      description: The delete network security rule operation deletes the specified
        network security rule.
      operationId: SecurityRules_Delete
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the network security group.
        in: path
        name: networkSecurityGroupName
        required: true
        schema:
          type: string
      - description: The name of the security rule.
        in: path
        name: securityRuleName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: ""
        "202":
          content: {}
          description: ""
        "204":
          content: {}
          description: ""
      tags:
      - SecurityRules
      x-ms-long-running-operation: true
      x-accepts:
      - application/json
    get:
      description: The Get NetworkSecurityRule operation retrieves information about
        the specified network security rule.
      operationId: SecurityRules_Get
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the network security group.
        in: path
        name: networkSecurityGroupName
        required: true
        schema:
          type: string
      - description: The name of the security rule.
        in: path
        name: securityRuleName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityRule'
            text/json:
              schema:
                $ref: '#/components/schemas/SecurityRule'
          description: ""
      tags:
      - SecurityRules
      x-accepts:
      - application/json
      - text/json
    put:
      description: The Put network security rule operation creates/updates a security
        rule in the specified network security group
      operationId: SecurityRules_CreateOrUpdate
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the network security group.
        in: path
        name: networkSecurityGroupName
        required: true
        schema:
          type: string
      - description: The name of the security rule.
        in: path
        name: securityRuleName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityRule'
          text/json:
            schema:
              $ref: '#/components/schemas/SecurityRule'
        description: Parameters supplied to the create/update network security rule
          operation
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityRule'
            text/json:
              schema:
                $ref: '#/components/schemas/SecurityRule'
          description: ""
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityRule'
            text/json:
              schema:
                $ref: '#/components/schemas/SecurityRule'
          description: ""
      tags:
      - SecurityRules
      x-ms-long-running-operation: true
      x-codegen-request-body-name: securityRuleParameters
      x-content-type: application/json
      x-accepts:
      - application/json
      - text/json
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPAddresses:
    get:
      description: The List publicIpAddress operation retrieves all the publicIpAddresses
        in a resource group.
      operationId: PublicIpAddresses_List
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicIpAddressListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/PublicIpAddressListResult'
          description: ""
      tags:
      - PublicIpAddresses
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
      - text/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPAddresses/{publicIpAddressName}/
  : delete:
      description: The delete publicIpAddress operation deletes the specified publicIpAddress.
      operationId: PublicIpAddresses_Delete
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the subnet.
        in: path
        name: publicIpAddressName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: ""
        "202":
          content: {}
          description: ""
        "204":
          content: {}
          description: ""
      tags:
      - PublicIpAddresses
      x-ms-long-running-operation: true
      x-accepts:
      - application/json
    get:
      description: The Get publicIpAddress operation retrieves information about the
        specified pubicIpAddress
      operationId: PublicIpAddresses_Get
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the subnet.
        in: path
        name: publicIpAddressName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicIpAddress'
            text/json:
              schema:
                $ref: '#/components/schemas/PublicIpAddress'
          description: ""
      tags:
      - PublicIpAddresses
      x-accepts:
      - application/json
      - text/json
    put:
      description: The Put PublicIPAddress operation creates/updates a stable/dynamic
        PublicIP address
      operationId: PublicIpAddresses_CreateOrUpdate
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the publicIpAddress.
        in: path
        name: publicIpAddressName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublicIpAddress'
          text/json:
            schema:
              $ref: '#/components/schemas/PublicIpAddress'
        description: Parameters supplied to the create/update PublicIPAddress operation
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicIpAddress'
            text/json:
              schema:
                $ref: '#/components/schemas/PublicIpAddress'
          description: ""
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicIpAddress'
            text/json:
              schema:
                $ref: '#/components/schemas/PublicIpAddress'
          description: ""
      tags:
      - PublicIpAddresses
      x-ms-long-running-operation: true
      x-codegen-request-body-name: parameters
      x-content-type: application/json
      x-accepts:
      - application/json
      - text/json
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables:
    get:
      description: The list RouteTables returns all route tables in a resource group
      operationId: RouteTables_List
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RouteTableListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/RouteTableListResult'
          description: ""
      tags:
      - RouteTables
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
      - text/json
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}:
    delete:
      description: The Delete RouteTable operation deletes the specified Route Table
      operationId: RouteTables_Delete
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the route table.
        in: path
        name: routeTableName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: ""
        "202":
          content: {}
          description: ""
        "204":
          content: {}
          description: ""
      tags:
      - RouteTables
      x-ms-long-running-operation: true
      x-accepts:
      - application/json
    get:
      description: The Get RouteTables operation retrieves information about the specified
        route table.
      operationId: RouteTables_Get
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the route table.
        in: path
        name: routeTableName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RouteTable'
            text/json:
              schema:
                $ref: '#/components/schemas/RouteTable'
          description: ""
      tags:
      - RouteTables
      x-accepts:
      - application/json
      - text/json
    put:
      description: The Put RouteTable operation creates/updates a route table in the
        specified resource group.
      operationId: RouteTables_CreateOrUpdate
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the route table.
        in: path
        name: routeTableName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RouteTable'
          text/json:
            schema:
              $ref: '#/components/schemas/RouteTable'
        description: Parameters supplied to the create/update Route Table operation
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RouteTable'
            text/json:
              schema:
                $ref: '#/components/schemas/RouteTable'
          description: ""
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RouteTable'
            text/json:
              schema:
                $ref: '#/components/schemas/RouteTable'
          description: ""
      tags:
      - RouteTables
      x-ms-long-running-operation: true
      x-codegen-request-body-name: parameters
      x-content-type: application/json
      x-accepts:
      - application/json
      - text/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}/routes
  : get:
      description: The List network security rule operation retrieves all the routes
        in a route table.
      operationId: Routes_List
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the route table.
        in: path
        name: routeTableName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RouteListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/RouteListResult'
          description: ""
      tags:
      - Routes
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
      - text/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}/routes/{routeName}
  : delete:
      description: The delete route operation deletes the specified route from a route
        table.
      operationId: Routes_Delete
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the route table.
        in: path
        name: routeTableName
        required: true
        schema:
          type: string
      - description: The name of the route.
        in: path
        name: routeName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: ""
        "202":
          content: {}
          description: ""
        "204":
          content: {}
          description: ""
      tags:
      - Routes
      x-ms-long-running-operation: true
      x-accepts:
      - application/json
    get:
      description: The Get route operation retrieves information about the specified
        route from the route table.
      operationId: Routes_Get
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the route table.
        in: path
        name: routeTableName
        required: true
        schema:
          type: string
      - description: The name of the route.
        in: path
        name: routeName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Route'
            text/json:
              schema:
                $ref: '#/components/schemas/Route'
          description: ""
      tags:
      - Routes
      x-accepts:
      - application/json
      - text/json
    put:
      description: The Put route operation creates/updates a route in the specified
        route table
      operationId: Routes_CreateOrUpdate
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the route table.
        in: path
        name: routeTableName
        required: true
        schema:
          type: string
      - description: The name of the route.
        in: path
        name: routeName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Route'
          text/json:
            schema:
              $ref: '#/components/schemas/Route'
        description: Parameters supplied to the create/update route operation
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Route'
            text/json:
              schema:
                $ref: '#/components/schemas/Route'
          description: ""
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Route'
            text/json:
              schema:
                $ref: '#/components/schemas/Route'
          description: ""
      tags:
      - Routes
      x-ms-long-running-operation: true
      x-codegen-request-body-name: routeParameters
      x-content-type: application/json
      x-accepts:
      - application/json
      - text/json
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways:
    get:
      description: The List VirtualNetworkGateways operation retrieves all the virtual
        network gateways stored.
      operationId: VirtualNetworkGateways_List
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetworkGatewayListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/VirtualNetworkGatewayListResult'
          description: ""
      tags:
      - VirtualNetworkGateways
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
      - text/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/
  : delete:
      description: The Delete VirtualNetworkGateway operation deletes the specified
        virtual network Gateway through Network resource provider.
      operationId: VirtualNetworkGateways_Delete
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the virtual network gateway.
        in: path
        name: virtualNetworkGatewayName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: ""
        "202":
          content: {}
          description: ""
        "204":
          content: {}
          description: ""
      tags:
      - VirtualNetworkGateways
      x-ms-long-running-operation: true
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualnetworkgateways/{virtualNetworkGatewayName}
  : get:
      description: The Get VirtualNetworkGateway operation retrieves information about
        the specified virtual network gateway through Network resource provider.
      operationId: VirtualNetworkGateways_Get
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the virtual network gateway.
        in: path
        name: virtualNetworkGatewayName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetworkGateway'
            text/json:
              schema:
                $ref: '#/components/schemas/VirtualNetworkGateway'
          description: ""
      tags:
      - VirtualNetworkGateways
      x-accepts:
      - application/json
      - text/json
    put:
      description: The Put VirtualNetworkGateway operation creates/updates a virtual
        network gateway in the specified resource group through Network resource provider.
      operationId: VirtualNetworkGateways_CreateOrUpdate
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the virtual network gateway.
        in: path
        name: virtualNetworkGatewayName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualNetworkGateway'
          text/json:
            schema:
              $ref: '#/components/schemas/VirtualNetworkGateway'
        description: Parameters supplied to the Begin Create or update Virtual Network
          Gateway operation through Network resource provider.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetworkGateway'
            text/json:
              schema:
                $ref: '#/components/schemas/VirtualNetworkGateway'
          description: ""
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetworkGateway'
            text/json:
              schema:
                $ref: '#/components/schemas/VirtualNetworkGateway'
          description: ""
      tags:
      - VirtualNetworkGateways
      x-ms-long-running-operation: true
      x-codegen-request-body-name: parameters
      x-content-type: application/json
      x-accepts:
      - application/json
      - text/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualnetworkgateways/{virtualNetworkGatewayName}/reset
  : post:
      description: The Reset VirtualNetworkGateway operation resets the primary of
        the virtual network gateway in the specified resource group through Network
        resource provider.
      operationId: VirtualNetworkGateways_Reset
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the virtual network gateway.
        in: path
        name: virtualNetworkGatewayName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualNetworkGateway'
          text/json:
            schema:
              $ref: '#/components/schemas/VirtualNetworkGateway'
        description: Parameters supplied to the Begin Reset Virtual Network Gateway
          operation through Network resource provider.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetworkGateway'
            text/json:
              schema:
                $ref: '#/components/schemas/VirtualNetworkGateway'
          description: ""
        "202":
          content: {}
          description: ""
      tags:
      - VirtualNetworkGateways
      x-ms-long-running-operation: true
      x-codegen-request-body-name: parameters
      x-content-type: application/json
      x-accepts:
      - application/json
      - text/json
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualnetworks:
    get:
      description: The list VirtualNetwork returns all Virtual Networks in a resource
        group
      operationId: VirtualNetworks_List
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetworkListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/VirtualNetworkListResult'
          description: ""
      tags:
      - VirtualNetworks
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
      - text/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualnetworks/{virtualNetworkName}
  : delete:
      description: The Delete VirtualNetwork operation deletes the specified virtual
        network
      operationId: VirtualNetworks_Delete
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the virtual network.
        in: path
        name: virtualNetworkName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: ""
        "202":
          content: {}
          description: ""
        "204":
          content: {}
          description: ""
      tags:
      - VirtualNetworks
      x-ms-long-running-operation: true
      x-accepts:
      - application/json
    get:
      description: The Get VirtualNetwork operation retrieves information about the
        specified virtual network.
      operationId: VirtualNetworks_Get
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the virtual network.
        in: path
        name: virtualNetworkName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetwork'
            text/json:
              schema:
                $ref: '#/components/schemas/VirtualNetwork'
          description: ""
      tags:
      - VirtualNetworks
      x-accepts:
      - application/json
      - text/json
    put:
      description: The Put VirtualNetwork operation creates/updates a virtual network
        in the specified resource group.
      operationId: VirtualNetworks_CreateOrUpdate
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the virtual network.
        in: path
        name: virtualNetworkName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualNetwork'
          text/json:
            schema:
              $ref: '#/components/schemas/VirtualNetwork'
        description: Parameters supplied to the create/update Virtual Network operation
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetwork'
            text/json:
              schema:
                $ref: '#/components/schemas/VirtualNetwork'
          description: ""
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetwork'
            text/json:
              schema:
                $ref: '#/components/schemas/VirtualNetwork'
          description: ""
      tags:
      - VirtualNetworks
      x-ms-long-running-operation: true
      x-codegen-request-body-name: parameters
      x-content-type: application/json
      x-accepts:
      - application/json
      - text/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualnetworks/{virtualNetworkName}/subnets
  : get:
      description: The List subnets operation retrieves all the subnets in a virtual
        network.
      operationId: Subnets_List
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the virtual network.
        in: path
        name: virtualNetworkName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubnetListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/SubnetListResult'
          description: ""
      tags:
      - Subnets
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
      - text/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualnetworks/{virtualNetworkName}/subnets/{subnetName}
  : delete:
      description: The delete subnet operation deletes the specified subnet.
      operationId: Subnets_Delete
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the virtual network.
        in: path
        name: virtualNetworkName
        required: true
        schema:
          type: string
      - description: The name of the subnet.
        in: path
        name: subnetName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: ""
        "202":
          content: {}
          description: ""
        "204":
          content: {}
          description: ""
      tags:
      - Subnets
      x-ms-long-running-operation: true
      x-accepts:
      - application/json
    get:
      description: The Get subnet operation retrieves information about the specified
        subnet.
      operationId: Subnets_Get
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the virtual network.
        in: path
        name: virtualNetworkName
        required: true
        schema:
          type: string
      - description: The name of the subnet.
        in: path
        name: subnetName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subnet'
            text/json:
              schema:
                $ref: '#/components/schemas/Subnet'
          description: ""
      tags:
      - Subnets
      x-accepts:
      - application/json
      - text/json
    put:
      description: The Put Subnet operation creates/updates a subnet in the specified
        virtual network
      operationId: Subnets_CreateOrUpdate
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the virtual network.
        in: path
        name: virtualNetworkName
        required: true
        schema:
          type: string
      - description: The name of the subnet.
        in: path
        name: subnetName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subnet'
          text/json:
            schema:
              $ref: '#/components/schemas/Subnet'
        description: Parameters supplied to the create/update Subnet operation
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subnet'
            text/json:
              schema:
                $ref: '#/components/schemas/Subnet'
          description: ""
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subnet'
            text/json:
              schema:
                $ref: '#/components/schemas/Subnet'
          description: ""
      tags:
      - Subnets
      x-ms-long-running-operation: true
      x-codegen-request-body-name: subnetParameters
      x-content-type: application/json
      x-accepts:
      - application/json
      - text/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.compute/virtualMachineScaleSets/{virtualMachineScaleSetName}/networkInterfaces
  : get:
      description: The list network interface operation retrieves information about
        all network interfaces in a virtual machine scale set.
      operationId: NetworkInterfaces_ListVirtualMachineScaleSetNetworkInterfaces
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the virtual machine scale set.
        in: path
        name: virtualMachineScaleSetName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkInterfaceListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/NetworkInterfaceListResult'
          description: ""
      tags:
      - NetworkInterfaces
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
      - text/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.compute/virtualMachineScaleSets/{virtualMachineScaleSetName}/virtualMachines/{virtualmachineIndex}/networkInterfaces
  : get:
      description: The list network interface operation retrieves information about
        all network interfaces in a virtual machine from a virtual machine scale set.
      operationId: NetworkInterfaces_ListVirtualMachineScaleSetVMNetworkInterfaces
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the virtual machine scale set.
        in: path
        name: virtualMachineScaleSetName
        required: true
        schema:
          type: string
      - description: The virtual machine index.
        in: path
        name: virtualmachineIndex
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkInterfaceListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/NetworkInterfaceListResult'
          description: ""
      tags:
      - NetworkInterfaces
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
      - text/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.compute/virtualMachineScaleSets/{virtualMachineScaleSetName}/virtualMachines/{virtualmachineIndex}/networkInterfaces/{networkInterfaceName}
  : get:
      description: The Get network interface operation retrieves information about
        the specified network interface in a virtual machine scale set.
      operationId: NetworkInterfaces_GetVirtualMachineScaleSetNetworkInterface
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the virtual machine scale set.
        in: path
        name: virtualMachineScaleSetName
        required: true
        schema:
          type: string
      - description: The virtual machine index.
        in: path
        name: virtualmachineIndex
        required: true
        schema:
          type: string
      - description: The name of the network interface.
        in: path
        name: networkInterfaceName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkInterface'
            text/json:
              schema:
                $ref: '#/components/schemas/NetworkInterface'
          description: ""
      tags:
      - NetworkInterfaces
      x-accepts:
      - application/json
      - text/json
components:
  parameters:
    ApiVersionParameter:
      description: Client Api Version.
      in: query
      name: api-version
      required: true
      schema:
        type: string
    SubscriptionIdParameter:
      description: Gets subscription credentials which uniquely identify Microsoft
        Azure subscription. The subscription ID forms part of the URI for every service
        call.
      in: path
      name: subscriptionId
      required: true
      schema:
        type: string
  schemas:
    AddressSpace:
      description: AddressSpace contains an array of IP address ranges that can be
        used by subnets
      example:
        addressPrefixes:
        - addressPrefixes
        - addressPrefixes
      properties:
        addressPrefixes:
          description: Gets or sets List of address blocks reserved for this virtual
            network in CIDR notation
          items:
            type: string
          type: array
      type: object
    ApplicationGateway:
      allOf:
      - $ref: '#/components/schemas/Resource'
      description: ApplicationGateways resource
      example:
        etag: etag
        properties:
          gatewayIPConfigurations:
          - name: name
            etag: etag
            properties:
              subnet:
                id: id
              provisioningState: provisioningState
          - name: name
            etag: etag
            properties:
              subnet:
                id: id
              provisioningState: provisioningState
          sslCertificates:
          - name: name
            etag: etag
            properties:
              password: password
              data: data
              provisioningState: provisioningState
              publicCertData: publicCertData
          - name: name
            etag: etag
            properties:
              password: password
              data: data
              provisioningState: provisioningState
              publicCertData: publicCertData
          resourceGuid: resourceGuid
          backendHttpSettingsCollection:
          - name: name
            etag: etag
            properties:
              protocol: Http
              port: 0
              cookieBasedAffinity: Enabled
              provisioningState: provisioningState
          - name: name
            etag: etag
            properties:
              protocol: Http
              port: 0
              cookieBasedAffinity: Enabled
              provisioningState: provisioningState
          frontendIPConfigurations:
          - name: name
            etag: etag
            properties:
              subnet:
                id: id
              privateIPAllocationMethod: Static
              privateIPAddress: privateIPAddress
              provisioningState: provisioningState
              publicIPAddress:
                id: id
          - name: name
            etag: etag
            properties:
              subnet:
                id: id
              privateIPAllocationMethod: Static
              privateIPAddress: privateIPAddress
              provisioningState: provisioningState
              publicIPAddress:
                id: id
          operationalState: Stopped
          provisioningState: provisioningState
          backendAddressPools:
          - name: name
            etag: etag
            properties:
              backendIPConfigurations:
              - id: id
              - id: id
              provisioningState: provisioningState
              backendAddresses:
              - fqdn: fqdn
                ipAddress: ipAddress
              - fqdn: fqdn
                ipAddress: ipAddress
          - name: name
            etag: etag
            properties:
              backendIPConfigurations:
              - id: id
              - id: id
              provisioningState: provisioningState
              backendAddresses:
              - fqdn: fqdn
                ipAddress: ipAddress
              - fqdn: fqdn
                ipAddress: ipAddress
          sku:
            tier: Standard
            name: Standard_Small
            capacity: 1
          httpListeners:
          - name: name
            etag: etag
            properties:
              protocol: Http
              sslCertificate:
                id: id
              frontendIPConfiguration:
                id: id
              frontendPort:
                id: id
              provisioningState: provisioningState
          - name: name
            etag: etag
            properties:
              protocol: Http
              sslCertificate:
                id: id
              frontendIPConfiguration:
                id: id
              frontendPort:
                id: id
              provisioningState: provisioningState
          frontendPorts:
          - name: name
            etag: etag
            properties:
              port: 6
              provisioningState: provisioningState
          - name: name
            etag: etag
            properties:
              port: 6
              provisioningState: provisioningState
          requestRoutingRules:
          - name: name
            etag: etag
            properties:
              httpListener:
                id: id
              ruleType: Basic
              backendAddressPool:
                id: id
              provisioningState: provisioningState
              backendHttpSettings:
                id: id
          - name: name
            etag: etag
            properties:
              httpListener:
                id: id
              ruleType: Basic
              backendAddressPool:
                id: id
              provisioningState: provisioningState
              backendHttpSettings:
                id: id
      properties:
        etag:
          description: Gets a unique read-only string that changes whenever the resource
            is updated
          type: string
        properties:
          $ref: '#/components/schemas/ApplicationGatewayPropertiesFormat'
    ApplicationGatewayBackendAddress:
      description: Backend Address of application gateway
      example:
        fqdn: fqdn
        ipAddress: ipAddress
      properties:
        fqdn:
          description: Gets or sets the dns name
          type: string
        ipAddress:
          description: Gets or sets the ip address
          type: string
      type: object
    ApplicationGatewayBackendAddressPool:
      allOf:
      - $ref: '#/components/schemas/SubResource'
      description: Backend Address Pool of application gateway
      example:
        name: name
        etag: etag
        properties:
          backendIPConfigurations:
          - id: id
          - id: id
          provisioningState: provisioningState
          backendAddresses:
          - fqdn: fqdn
            ipAddress: ipAddress
          - fqdn: fqdn
            ipAddress: ipAddress
      properties:
        etag:
          description: A unique read-only string that changes whenever the resource
            is updated
          type: string
        name:
          description: Gets name of the resource that is unique within a resource
            group. This name can be used to access the resource
          type: string
        properties:
          $ref: '#/components/schemas/ApplicationGatewayBackendAddressPoolPropertiesFormat'
    ApplicationGatewayBackendAddressPoolPropertiesFormat:
      description: Properties of Backend Address Pool of application gateway
      example:
        backendIPConfigurations:
        - id: id
        - id: id
        provisioningState: provisioningState
        backendAddresses:
        - fqdn: fqdn
          ipAddress: ipAddress
        - fqdn: fqdn
          ipAddress: ipAddress
      properties:
        backendAddresses:
          description: Gets or sets the backend addresses
          items:
            $ref: '#/components/schemas/ApplicationGatewayBackendAddress'
          type: array
        backendIPConfigurations:
          description: 'Gets or sets backendIPConfiguration of application gateway '
          items:
            $ref: '#/components/schemas/SubResource'
          type: array
        provisioningState:
          description: Gets or sets Provisioning state of the backend address pool
            resource Updating/Deleting/Failed
          type: string
      type: object
    ApplicationGatewayBackendHttpSettings:
      allOf:
      - $ref: '#/components/schemas/SubResource'
      description: Backend address pool settings of application gateway
      example:
        name: name
        etag: etag
        properties:
          protocol: Http
          port: 0
          cookieBasedAffinity: Enabled
          provisioningState: provisioningState
      properties:
        etag:
          description: A unique read-only string that changes whenever the resource
            is updated
          type: string
        name:
          description: Gets name of the resource that is unique within a resource
            group. This name can be used to access the resource
          type: string
        properties:
          $ref: '#/components/schemas/ApplicationGatewayBackendHttpSettingsPropertiesFormat'
    ApplicationGatewayBackendHttpSettingsPropertiesFormat:
      description: Properties of Backend address pool settings of application gateway
      example:
        protocol: Http
        port: 0
        cookieBasedAffinity: Enabled
        provisioningState: provisioningState
      properties:
        cookieBasedAffinity:
          description: Gets or sets the cookie affinity
          enum:
          - Enabled
          - Disabled
          type: string
          x-ms-enum:
            modelAsString: true
            name: ApplicationGatewayCookieBasedAffinity
        port:
          description: Gets or sets the port
          format: int32
          type: integer
        protocol:
          description: Gets or sets the protocol
          enum:
          - Http
          - Https
          type: string
          x-ms-enum:
            modelAsString: true
            name: ApplicationGatewayProtocol
        provisioningState:
          description: Gets or sets Provisioning state of the backend http settings
            resource Updating/Deleting/Failed
          type: string
      type: object
    ApplicationGatewayFrontendIPConfiguration:
      allOf:
      - $ref: '#/components/schemas/SubResource'
      description: Frontend IP configuration of application gateway
      example:
        name: name
        etag: etag
        properties:
          subnet:
            id: id
          privateIPAllocationMethod: Static
          privateIPAddress: privateIPAddress
          provisioningState: provisioningState
          publicIPAddress:
            id: id
      properties:
        etag:
          description: A unique read-only string that changes whenever the resource
            is updated
          type: string
        name:
          description: Gets name of the resource that is unique within a resource
            group. This name can be used to access the resource
          type: string
        properties:
          $ref: '#/components/schemas/ApplicationGatewayFrontendIPConfigurationPropertiesFormat'
    ApplicationGatewayFrontendIPConfigurationPropertiesFormat:
      description: Properties of Frontend IP configuration of application gateway
      example:
        subnet:
          id: id
        privateIPAllocationMethod: Static
        privateIPAddress: privateIPAddress
        provisioningState: provisioningState
        publicIPAddress:
          id: id
      properties:
        privateIPAddress:
          description: Gets or sets the privateIPAddress of the Network Interface
            IP Configuration
          type: string
        privateIPAllocationMethod:
          description: Gets or sets PrivateIP allocation method (Static/Dynamic)
          enum:
          - Static
          - Dynamic
          type: string
          x-ms-enum:
            modelAsString: true
            name: IpAllocationMethod
        provisioningState:
          description: Gets or sets Provisioning state of the PublicIP resource Updating/Deleting/Failed
          type: string
        publicIPAddress:
          $ref: '#/components/schemas/SubResource'
        subnet:
          $ref: '#/components/schemas/SubResource'
      type: object
    ApplicationGatewayFrontendPort:
      allOf:
      - $ref: '#/components/schemas/SubResource'
      description: Frontend Port of application gateway
      example:
        name: name
        etag: etag
        properties:
          port: 6
          provisioningState: provisioningState
      properties:
        etag:
          description: A unique read-only string that changes whenever the resource
            is updated
          type: string
        name:
          description: Gets name of the resource that is unique within a resource
            group. This name can be used to access the resource
          type: string
        properties:
          $ref: '#/components/schemas/ApplicationGatewayFrontendPortPropertiesFormat'
    ApplicationGatewayFrontendPortPropertiesFormat:
      description: Properties of Frontend Port of application gateway
      example:
        port: 6
        provisioningState: provisioningState
      properties:
        port:
          description: Gets or sets the frontend port
          format: int32
          type: integer
        provisioningState:
          description: Gets or sets Provisioning state of the frontend port resource
            Updating/Deleting/Failed
          type: string
      type: object
    ApplicationGatewayHttpListener:
      allOf:
      - $ref: '#/components/schemas/SubResource'
      description: Http listener of application gateway
      example:
        name: name
        etag: etag
        properties:
          protocol: Http
          sslCertificate:
            id: id
          frontendIPConfiguration:
            id: id
          frontendPort:
            id: id
          provisioningState: provisioningState
      properties:
        etag:
          description: A unique read-only string that changes whenever the resource
            is updated
          type: string
        name:
          description: Gets name of the resource that is unique within a resource
            group. This name can be used to access the resource
          type: string
        properties:
          $ref: '#/components/schemas/ApplicationGatewayHttpListenerPropertiesFormat'
    ApplicationGatewayHttpListenerPropertiesFormat:
      description: Properties of Http listener of application gateway
      example:
        protocol: Http
        sslCertificate:
          id: id
        frontendIPConfiguration:
          id: id
        frontendPort:
          id: id
        provisioningState: provisioningState
      properties:
        frontendIPConfiguration:
          $ref: '#/components/schemas/SubResource'
        frontendPort:
          $ref: '#/components/schemas/SubResource'
        protocol:
          description: Gets or sets the protocol
          enum:
          - Http
          - Https
          type: string
          x-ms-enum:
            modelAsString: true
            name: ApplicationGatewayProtocol
        provisioningState:
          description: Gets or sets Provisioning state of the http listener resource
            Updating/Deleting/Failed
          type: string
        sslCertificate:
          $ref: '#/components/schemas/SubResource'
      type: object
    ApplicationGatewayIPConfiguration:
      allOf:
      - $ref: '#/components/schemas/SubResource'
      description: IP configuration of application gateway
      example:
        name: name
        etag: etag
        properties:
          subnet:
            id: id
          provisioningState: provisioningState
      properties:
        etag:
          description: A unique read-only string that changes whenever the resource
            is updated
          type: string
        name:
          description: Gets name of the resource that is unique within a resource
            group. This name can be used to access the resource
          type: string
        properties:
          $ref: '#/components/schemas/ApplicationGatewayIPConfigurationPropertiesFormat'
    ApplicationGatewayIPConfigurationPropertiesFormat:
      description: Properties of IP configuration of application gateway
      example:
        subnet:
          id: id
        provisioningState: provisioningState
      properties:
        provisioningState:
          description: Gets or sets Provisioning state of the application gateway
            subnet resource Updating/Deleting/Failed
          type: string
        subnet:
          $ref: '#/components/schemas/SubResource'
      type: object
    ApplicationGatewayListResult:
      description: Response for ListLoadBalancers Api service call
      example:
        value:
        - etag: etag
          properties:
            gatewayIPConfigurations:
            - name: name
              etag: etag
              properties:
                subnet:
                  id: id
                provisioningState: provisioningState
            - name: name
              etag: etag
              properties:
                subnet:
                  id: id
                provisioningState: provisioningState
            sslCertificates:
            - name: name
              etag: etag
              properties:
                password: password
                data: data
                provisioningState: provisioningState
                publicCertData: publicCertData
            - name: name
              etag: etag
              properties:
                password: password
                data: data
                provisioningState: provisioningState
                publicCertData: publicCertData
            resourceGuid: resourceGuid
            backendHttpSettingsCollection:
            - name: name
              etag: etag
              properties:
                protocol: Http
                port: 0
                cookieBasedAffinity: Enabled
                provisioningState: provisioningState
            - name: name
              etag: etag
              properties:
                protocol: Http
                port: 0
                cookieBasedAffinity: Enabled
                provisioningState: provisioningState
            frontendIPConfigurations:
            - name: name
              etag: etag
              properties:
                subnet:
                  id: id
                privateIPAllocationMethod: Static
                privateIPAddress: privateIPAddress
                provisioningState: provisioningState
                publicIPAddress:
                  id: id
            - name: name
              etag: etag
              properties:
                subnet:
                  id: id
                privateIPAllocationMethod: Static
                privateIPAddress: privateIPAddress
                provisioningState: provisioningState
                publicIPAddress:
                  id: id
            operationalState: Stopped
            provisioningState: provisioningState
            backendAddressPools:
            - name: name
              etag: etag
              properties:
                backendIPConfigurations:
                - id: id
                - id: id
                provisioningState: provisioningState
                backendAddresses:
                - fqdn: fqdn
                  ipAddress: ipAddress
                - fqdn: fqdn
                  ipAddress: ipAddress
            - name: name
              etag: etag
              properties:
                backendIPConfigurations:
                - id: id
                - id: id
                provisioningState: provisioningState
                backendAddresses:
                - fqdn: fqdn
                  ipAddress: ipAddress
                - fqdn: fqdn
                  ipAddress: ipAddress
            sku:
              tier: Standard
              name: Standard_Small
              capacity: 1
            httpListeners:
            - name: name
              etag: etag
              properties:
                protocol: Http
                sslCertificate:
                  id: id
                frontendIPConfiguration:
                  id: id
                frontendPort:
                  id: id
                provisioningState: provisioningState
            - name: name
              etag: etag
              properties:
                protocol: Http
                sslCertificate:
                  id: id
                frontendIPConfiguration:
                  id: id
                frontendPort:
                  id: id
                provisioningState: provisioningState
            frontendPorts:
            - name: name
              etag: etag
              properties:
                port: 6
                provisioningState: provisioningState
            - name: name
              etag: etag
              properties:
                port: 6
                provisioningState: provisioningState
            requestRoutingRules:
            - name: name
              etag: etag
              properties:
                httpListener:
                  id: id
                ruleType: Basic
                backendAddressPool:
                  id: id
                provisioningState: provisioningState
                backendHttpSettings:
                  id: id
            - name: name
              etag: etag
              properties:
                httpListener:
                  id: id
                ruleType: Basic
                backendAddressPool:
                  id: id
                provisioningState: provisioningState
                backendHttpSettings:
                  id: id
        - etag: etag
          properties:
            gatewayIPConfigurations:
            - name: name
              etag: etag
              properties:
                subnet:
                  id: id
                provisioningState: provisioningState
            - name: name
              etag: etag
              properties:
                subnet:
                  id: id
                provisioningState: provisioningState
            sslCertificates:
            - name: name
              etag: etag
              properties:
                password: password
                data: data
                provisioningState: provisioningState
                publicCertData: publicCertData
            - name: name
              etag: etag
              properties:
                password: password
                data: data
                provisioningState: provisioningState
                publicCertData: publicCertData
            resourceGuid: resourceGuid
            backendHttpSettingsCollection:
            - name: name
              etag: etag
              properties:
                protocol: Http
                port: 0
                cookieBasedAffinity: Enabled
                provisioningState: provisioningState
            - name: name
              etag: etag
              properties:
                protocol: Http
                port: 0
                cookieBasedAffinity: Enabled
                provisioningState: provisioningState
            frontendIPConfigurations:
            - name: name
              etag: etag
              properties:
                subnet:
                  id: id
                privateIPAllocationMethod: Static
                privateIPAddress: privateIPAddress
                provisioningState: provisioningState
                publicIPAddress:
                  id: id
            - name: name
              etag: etag
              properties:
                subnet:
                  id: id
                privateIPAllocationMethod: Static
                privateIPAddress: privateIPAddress
                provisioningState: provisioningState
                publicIPAddress:
                  id: id
            operationalState: Stopped
            provisioningState: provisioningState
            backendAddressPools:
            - name: name
              etag: etag
              properties:
                backendIPConfigurations:
                - id: id
                - id: id
                provisioningState: provisioningState
                backendAddresses:
                - fqdn: fqdn
                  ipAddress: ipAddress
                - fqdn: fqdn
                  ipAddress: ipAddress
            - name: name
              etag: etag
              properties:
                backendIPConfigurations:
                - id: id
                - id: id
                provisioningState: provisioningState
                backendAddresses:
                - fqdn: fqdn
                  ipAddress: ipAddress
                - fqdn: fqdn
                  ipAddress: ipAddress
            sku:
              tier: Standard
              name: Standard_Small
              capacity: 1
            httpListeners:
            - name: name
              etag: etag
              properties:
                protocol: Http
                sslCertificate:
                  id: id
                frontendIPConfiguration:
                  id: id
                frontendPort:
                  id: id
                provisioningState: provisioningState
            - name: name
              etag: etag
              properties:
                protocol: Http
                sslCertificate:
                  id: id
                frontendIPConfiguration:
                  id: id
                frontendPort:
                  id: id
                provisioningState: provisioningState
            frontendPorts:
            - name: name
              etag: etag
              properties:
                port: 6
                provisioningState: provisioningState
            - name: name
              etag: etag
              properties:
                port: 6
                provisioningState: provisioningState
            requestRoutingRules:
            - name: name
              etag: etag
              properties:
                httpListener:
                  id: id
                ruleType: Basic
                backendAddressPool:
                  id: id
                provisioningState: provisioningState
                backendHttpSettings:
                  id: id
            - name: name
              etag: etag
              properties:
                httpListener:
                  id: id
                ruleType: Basic
                backendAddressPool:
                  id: id
                provisioningState: provisioningState
                backendHttpSettings:
                  id: id
        nextLink: nextLink
      properties:
        nextLink:
          description: Gets the URL to get the next set of results.
          type: string
        value:
          description: Gets a list of ApplicationGateways in a resource group
          items:
            $ref: '#/components/schemas/ApplicationGateway'
          type: array
      type: object
    ApplicationGatewayPropertiesFormat:
      description: Properties of Application Gateway
      example:
        gatewayIPConfigurations:
        - name: name
          etag: etag
          properties:
            subnet:
              id: id
            provisioningState: provisioningState
        - name: name
          etag: etag
          properties:
            subnet:
              id: id
            provisioningState: provisioningState
        sslCertificates:
        - name: name
          etag: etag
          properties:
            password: password
            data: data
            provisioningState: provisioningState
            publicCertData: publicCertData
        - name: name
          etag: etag
          properties:
            password: password
            data: data
            provisioningState: provisioningState
            publicCertData: publicCertData
        resourceGuid: resourceGuid
        backendHttpSettingsCollection:
        - name: name
          etag: etag
          properties:
            protocol: Http
            port: 0
            cookieBasedAffinity: Enabled
            provisioningState: provisioningState
        - name: name
          etag: etag
          properties:
            protocol: Http
            port: 0
            cookieBasedAffinity: Enabled
            provisioningState: provisioningState
        frontendIPConfigurations:
        - name: name
          etag: etag
          properties:
            subnet:
              id: id
            privateIPAllocationMethod: Static
            privateIPAddress: privateIPAddress
            provisioningState: provisioningState
            publicIPAddress:
              id: id
        - name: name
          etag: etag
          properties:
            subnet:
              id: id
            privateIPAllocationMethod: Static
            privateIPAddress: privateIPAddress
            provisioningState: provisioningState
            publicIPAddress:
              id: id
        operationalState: Stopped
        provisioningState: provisioningState
        backendAddressPools:
        - name: name
          etag: etag
          properties:
            backendIPConfigurations:
            - id: id
            - id: id
            provisioningState: provisioningState
            backendAddresses:
            - fqdn: fqdn
              ipAddress: ipAddress
            - fqdn: fqdn
              ipAddress: ipAddress
        - name: name
          etag: etag
          properties:
            backendIPConfigurations:
            - id: id
            - id: id
            provisioningState: provisioningState
            backendAddresses:
            - fqdn: fqdn
              ipAddress: ipAddress
            - fqdn: fqdn
              ipAddress: ipAddress
        sku:
          tier: Standard
          name: Standard_Small
          capacity: 1
        httpListeners:
        - name: name
          etag: etag
          properties:
            protocol: Http
            sslCertificate:
              id: id
            frontendIPConfiguration:
              id: id
            frontendPort:
              id: id
            provisioningState: provisioningState
        - name: name
          etag: etag
          properties:
            protocol: Http
            sslCertificate:
              id: id
            frontendIPConfiguration:
              id: id
            frontendPort:
              id: id
            provisioningState: provisioningState
        frontendPorts:
        - name: name
          etag: etag
          properties:
            port: 6
            provisioningState: provisioningState
        - name: name
          etag: etag
          properties:
            port: 6
            provisioningState: provisioningState
        requestRoutingRules:
        - name: name
          etag: etag
          properties:
            httpListener:
              id: id
            ruleType: Basic
            backendAddressPool:
              id: id
            provisioningState: provisioningState
            backendHttpSettings:
              id: id
        - name: name
          etag: etag
          properties:
            httpListener:
              id: id
            ruleType: Basic
            backendAddressPool:
              id: id
            provisioningState: provisioningState
            backendHttpSettings:
              id: id
      properties:
        backendAddressPools:
          description: Gets or sets backend address pool of application gateway resource
          items:
            $ref: '#/components/schemas/ApplicationGatewayBackendAddressPool'
          type: array
        backendHttpSettingsCollection:
          description: Gets or sets backend http settings of application gateway resource
          items:
            $ref: '#/components/schemas/ApplicationGatewayBackendHttpSettings'
          type: array
        frontendIPConfigurations:
          description: Gets or sets frontend IP addresses of application gateway resource
          items:
            $ref: '#/components/schemas/ApplicationGatewayFrontendIPConfiguration'
          type: array
        frontendPorts:
          description: Gets or sets frontend ports of application gateway resource
          items:
            $ref: '#/components/schemas/ApplicationGatewayFrontendPort'
          type: array
        gatewayIPConfigurations:
          description: Gets or sets subnets of application gateway resource
          items:
            $ref: '#/components/schemas/ApplicationGatewayIPConfiguration'
          type: array
        httpListeners:
          description: Gets or sets HTTP listeners of application gateway resource
          items:
            $ref: '#/components/schemas/ApplicationGatewayHttpListener'
          type: array
        operationalState:
          description: Gets operational state of application gateway resource
          enum:
          - Stopped
          - Starting
          - Running
          - Stopping
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: ApplicationGatewayOperationalState
        provisioningState:
          description: Gets or sets Provisioning state of the ApplicationGateway resource
            Updating/Deleting/Failed
          type: string
        requestRoutingRules:
          description: Gets or sets request routing rules of application gateway resource
          items:
            $ref: '#/components/schemas/ApplicationGatewayRequestRoutingRule'
          type: array
        resourceGuid:
          description: Gets or sets resource guid property of the ApplicationGateway
            resource
          type: string
        sku:
          $ref: '#/components/schemas/ApplicationGatewaySku'
        sslCertificates:
          description: Gets or sets ssl certificates of application gateway resource
          items:
            $ref: '#/components/schemas/ApplicationGatewaySslCertificate'
          type: array
      type: object
    ApplicationGatewayRequestRoutingRule:
      allOf:
      - $ref: '#/components/schemas/SubResource'
      description: Request routing rule of application gateway
      example:
        name: name
        etag: etag
        properties:
          httpListener:
            id: id
          ruleType: Basic
          backendAddressPool:
            id: id
          provisioningState: provisioningState
          backendHttpSettings:
            id: id
      properties:
        etag:
          description: A unique read-only string that changes whenever the resource
            is updated
          type: string
        name:
          description: Gets name of the resource that is unique within a resource
            group. This name can be used to access the resource
          type: string
        properties:
          $ref: '#/components/schemas/ApplicationGatewayRequestRoutingRulePropertiesFormat'
    ApplicationGatewayRequestRoutingRulePropertiesFormat:
      description: Properties of Request routing rule of application gateway
      example:
        httpListener:
          id: id
        ruleType: Basic
        backendAddressPool:
          id: id
        provisioningState: provisioningState
        backendHttpSettings:
          id: id
      properties:
        backendAddressPool:
          $ref: '#/components/schemas/SubResource'
        backendHttpSettings:
          $ref: '#/components/schemas/SubResource'
        httpListener:
          $ref: '#/components/schemas/SubResource'
        provisioningState:
          description: Gets or sets Provisioning state of the request routing rule
            resource Updating/Deleting/Failed
          type: string
        ruleType:
          description: Gets or sets the rule type
          enum:
          - Basic
          type: string
          x-ms-enum:
            modelAsString: true
            name: ApplicationGatewayRequestRoutingRuleType
      type: object
    ApplicationGatewaySku:
      description: SKU of application gateway
      example:
        tier: Standard
        name: Standard_Small
        capacity: 1
      properties:
        capacity:
          description: Gets or sets capacity (instance count) of application gateway
          format: int32
          type: integer
        name:
          description: Gets or sets name of application gateway SKU
          enum:
          - Standard_Small
          - Standard_Medium
          - Standard_Large
          type: string
          x-ms-enum:
            modelAsString: true
            name: ApplicationGatewaySkuName
        tier:
          description: Gets or sets tier of application gateway
          enum:
          - Standard
          type: string
          x-ms-enum:
            modelAsString: true
            name: ApplicationGatewayTier
      type: object
    ApplicationGatewaySslCertificate:
      allOf:
      - $ref: '#/components/schemas/SubResource'
      description: SSL certificates of application gateway
      example:
        name: name
        etag: etag
        properties:
          password: password
          data: data
          provisioningState: provisioningState
          publicCertData: publicCertData
      properties:
        etag:
          description: A unique read-only string that changes whenever the resource
            is updated
          type: string
        name:
          description: Gets name of the resource that is unique within a resource
            group. This name can be used to access the resource
          type: string
        properties:
          $ref: '#/components/schemas/ApplicationGatewaySslCertificatePropertiesFormat'
    ApplicationGatewaySslCertificatePropertiesFormat:
      description: Properties of SSL certificates of application gateway
      example:
        password: password
        data: data
        provisioningState: provisioningState
        publicCertData: publicCertData
      properties:
        data:
          description: 'Gets or sets the certificate data '
          type: string
        password:
          description: 'Gets or sets the certificate password '
          type: string
        provisioningState:
          description: Gets or sets Provisioning state of the ssl certificate resource
            Updating/Deleting/Failed
          type: string
        publicCertData:
          description: 'Gets or sets the certificate public data '
          type: string
      type: object
    AuthorizationListResult:
      description: Response for ListAuthorizations Api service callRetrieves all authorizations
        that belongs to an ExpressRouteCircuit
      example:
        value:
        - name: name
          etag: etag
          properties:
            authorizationUseStatus: Available
            authorizationKey: authorizationKey
            provisioningState: provisioningState
        - name: name
          etag: etag
          properties:
            authorizationUseStatus: Available
            authorizationKey: authorizationKey
            provisioningState: provisioningState
        nextLink: nextLink
      properties:
        nextLink:
          description: Gets the URL to get the next set of results.
          type: string
        value:
          description: Gets the authorizations in an ExpressRoute Circuit
          items:
            $ref: '#/components/schemas/ExpressRouteCircuitAuthorization'
          type: array
      type: object
    AuthorizationPropertiesFormat:
      example:
        authorizationUseStatus: Available
        authorizationKey: authorizationKey
        provisioningState: provisioningState
      properties:
        authorizationKey:
          description: Gets or sets the authorization key
          type: string
        authorizationUseStatus:
          description: Gets or sets AuthorizationUseStatus
          enum:
          - Available
          - InUse
          type: string
          x-ms-enum:
            modelAsString: true
            name: AuthorizationUseStatus
        provisioningState:
          description: Gets or sets Provisioning state of the PublicIP resource Updating/Deleting/Failed
          type: string
      type: object
    AzureAsyncOperationResult:
      description: "The response body contains the status of the specified asynchronous\
        \ operation, indicating whether it has succeeded, is in progress, or has failed.\
        \ Note that this status is distinct from the HTTP status code returned for\
        \ the Get Operation Status operation itself. If the asynchronous operation\
        \ succeeded, the response body includes the HTTP status code for the successful\
        \ request. If the asynchronous operation failed, the response body includes\
        \ the HTTP status code for the failed request and error information regarding\
        \ the failure."
      properties:
        error:
          $ref: '#/components/schemas/Error'
        status:
          description: Status of the AzureAsyncOperation
          enum:
          - InProgress
          - Succeeded
          - Failed
          type: string
          x-ms-enum:
            modelAsString: true
            name: NetworkOperationStatus
      type: object
    BackendAddressPool:
      allOf:
      - $ref: '#/components/schemas/SubResource'
      description: Pool of backend IP addresses
      example:
        name: name
        etag: etag
        properties:
          outboundNatRule:
            id: id
          loadBalancingRules:
          - id: id
          - id: id
          backendIPConfigurations:
          - id: id
          - id: id
          provisioningState: provisioningState
      properties:
        etag:
          description: A unique read-only string that changes whenever the resource
            is updated
          type: string
        name:
          description: Gets name of the resource that is unique within a resource
            group. This name can be used to access the resource
          type: string
        properties:
          $ref: '#/components/schemas/BackendAddressPoolPropertiesFormat'
    BackendAddressPoolPropertiesFormat:
      description: Properties of BackendAddressPool
      example:
        outboundNatRule:
          id: id
        loadBalancingRules:
        - id: id
        - id: id
        backendIPConfigurations:
        - id: id
        - id: id
        provisioningState: provisioningState
      properties:
        backendIPConfigurations:
          description: Gets collection of references to IPs defined in NICs
          items:
            $ref: '#/components/schemas/SubResource'
          type: array
        loadBalancingRules:
          description: Gets Load Balancing rules that use this Backend Address Pool
          items:
            $ref: '#/components/schemas/SubResource'
          type: array
        outboundNatRule:
          $ref: '#/components/schemas/SubResource'
        provisioningState:
          description: Provisioning state of the PublicIP resource Updating/Deleting/Failed
          type: string
      type: object
    ConnectionResetSharedKey:
      example:
        keyLength: 0
      properties:
        keyLength:
          description: The virtual network connection reset shared key length
          format: int64
          type: integer
      type: object
    ConnectionSharedKey:
      description: Response for GetConnectionSharedKey Api service call
      example:
        value: value
      properties:
        value:
          description: The virtual network connection shared key value
          type: string
      type: object
    DhcpOptions:
      description: DHCPOptions contains an array of DNS servers available to VMs deployed
        in the virtual networkStandard DHCP option for a subnet overrides VNET DHCP
        options.
      example:
        dnsServers:
        - dnsServers
        - dnsServers
      properties:
        dnsServers:
          description: Gets or sets list of DNS servers IP addresses
          items:
            type: string
          type: array
      type: object
    DnsNameAvailabilityResult:
      description: Response for CheckDnsNameAvailability Api service call
      example:
        available: true
      properties:
        available:
          description: Domain availability (True/False)
          type: boolean
      type: object
    Error:
      properties:
        code:
          type: string
        details:
          items:
            $ref: '#/components/schemas/ErrorDetails'
          type: array
        innerError:
          type: string
        message:
          type: string
        target:
          type: string
      type: object
    ErrorDetails:
      properties:
        code:
          type: string
        message:
          type: string
        target:
          type: string
      type: object
    ExpressRouteCircuit:
      allOf:
      - $ref: '#/components/schemas/Resource'
      description: ExpressRouteCircuit resource
      example:
        etag: etag
        sku:
          tier: Standard
          name: name
          family: UnlimitedData
        properties:
          circuitProvisioningState: circuitProvisioningState
          authorizations:
          - name: name
            etag: etag
            properties:
              authorizationUseStatus: Available
              authorizationKey: authorizationKey
              provisioningState: provisioningState
          - name: name
            etag: etag
            properties:
              authorizationUseStatus: Available
              authorizationKey: authorizationKey
              provisioningState: provisioningState
          serviceProviderNotes: serviceProviderNotes
          peerings:
          - name: name
            etag: etag
            properties:
              sharedKey: sharedKey
              primaryAzurePort: primaryAzurePort
              secondaryAzurePort: secondaryAzurePort
              vlanId: 2
              azureASN: 0
              provisioningState: provisioningState
              peerASN: 1
              secondaryPeerAddressPrefix: secondaryPeerAddressPrefix
              stats:
                bytesIn: 5
                bytesOut: 5
              microsoftPeeringConfig:
                routingRegistryName: routingRegistryName
                advertisedPublicPrefixes:
                - advertisedPublicPrefixes
                - advertisedPublicPrefixes
                advertisedPublicPrefixesState: NotConfigured
                customerASN: 6
              primaryPeerAddressPrefix: primaryPeerAddressPrefix
              state: Disabled
              peeringType: AzurePublicPeering
          - name: name
            etag: etag
            properties:
              sharedKey: sharedKey
              primaryAzurePort: primaryAzurePort
              secondaryAzurePort: secondaryAzurePort
              vlanId: 2
              azureASN: 0
              provisioningState: provisioningState
              peerASN: 1
              secondaryPeerAddressPrefix: secondaryPeerAddressPrefix
              stats:
                bytesIn: 5
                bytesOut: 5
              microsoftPeeringConfig:
                routingRegistryName: routingRegistryName
                advertisedPublicPrefixes:
                - advertisedPublicPrefixes
                - advertisedPublicPrefixes
                advertisedPublicPrefixesState: NotConfigured
                customerASN: 6
              primaryPeerAddressPrefix: primaryPeerAddressPrefix
              state: Disabled
              peeringType: AzurePublicPeering
          provisioningState: provisioningState
          serviceKey: serviceKey
          serviceProviderProvisioningState: NotProvisioned
          serviceProviderProperties:
            bandwidthInMbps: 7
            serviceProviderName: serviceProviderName
            peeringLocation: peeringLocation
      properties:
        etag:
          description: Gets a unique read-only string that changes whenever the resource
            is updated
          type: string
        properties:
          $ref: '#/components/schemas/ExpressRouteCircuitPropertiesFormat'
        sku:
          $ref: '#/components/schemas/ExpressRouteCircuitSku'
    ExpressRouteCircuitArpTable:
      description: The arp table associated with the ExpressRouteCircuit
      example:
        macAddress: macAddress
        ipAddress: ipAddress
      properties:
        ipAddress:
          description: Gets ipAddress.
          type: string
        macAddress:
          description: Gets macAddress.
          type: string
      type: object
    ExpressRouteCircuitAuthorization:
      allOf:
      - $ref: '#/components/schemas/SubResource'
      description: Authorization in a ExpressRouteCircuit resource
      example:
        name: name
        etag: etag
        properties:
          authorizationUseStatus: Available
          authorizationKey: authorizationKey
          provisioningState: provisioningState
      properties:
        etag:
          description: A unique read-only string that changes whenever the resource
            is updated
          type: string
        name:
          description: Gets name of the resource that is unique within a resource
            group. This name can be used to access the resource
          type: string
        properties:
          $ref: '#/components/schemas/AuthorizationPropertiesFormat'
    ExpressRouteCircuitListResult:
      description: Response for ListExpressRouteCircuit Api service call
      example:
        value:
        - etag: etag
          sku:
            tier: Standard
            name: name
            family: UnlimitedData
          properties:
            circuitProvisioningState: circuitProvisioningState
            authorizations:
            - name: name
              etag: etag
              properties:
                authorizationUseStatus: Available
                authorizationKey: authorizationKey
                provisioningState: provisioningState
            - name: name
              etag: etag
              properties:
                authorizationUseStatus: Available
                authorizationKey: authorizationKey
                provisioningState: provisioningState
            serviceProviderNotes: serviceProviderNotes
            peerings:
            - name: name
              etag: etag
              properties:
                sharedKey: sharedKey
                primaryAzurePort: primaryAzurePort
                secondaryAzurePort: secondaryAzurePort
                vlanId: 2
                azureASN: 0
                provisioningState: provisioningState
                peerASN: 1
                secondaryPeerAddressPrefix: secondaryPeerAddressPrefix
                stats:
                  bytesIn: 5
                  bytesOut: 5
                microsoftPeeringConfig:
                  routingRegistryName: routingRegistryName
                  advertisedPublicPrefixes:
                  - advertisedPublicPrefixes
                  - advertisedPublicPrefixes
                  advertisedPublicPrefixesState: NotConfigured
                  customerASN: 6
                primaryPeerAddressPrefix: primaryPeerAddressPrefix
                state: Disabled
                peeringType: AzurePublicPeering
            - name: name
              etag: etag
              properties:
                sharedKey: sharedKey
                primaryAzurePort: primaryAzurePort
                secondaryAzurePort: secondaryAzurePort
                vlanId: 2
                azureASN: 0
                provisioningState: provisioningState
                peerASN: 1
                secondaryPeerAddressPrefix: secondaryPeerAddressPrefix
                stats:
                  bytesIn: 5
                  bytesOut: 5
                microsoftPeeringConfig:
                  routingRegistryName: routingRegistryName
                  advertisedPublicPrefixes:
                  - advertisedPublicPrefixes
                  - advertisedPublicPrefixes
                  advertisedPublicPrefixesState: NotConfigured
                  customerASN: 6
                primaryPeerAddressPrefix: primaryPeerAddressPrefix
                state: Disabled
                peeringType: AzurePublicPeering
            provisioningState: provisioningState
            serviceKey: serviceKey
            serviceProviderProvisioningState: NotProvisioned
            serviceProviderProperties:
              bandwidthInMbps: 7
              serviceProviderName: serviceProviderName
              peeringLocation: peeringLocation
        - etag: etag
          sku:
            tier: Standard
            name: name
            family: UnlimitedData
          properties:
            circuitProvisioningState: circuitProvisioningState
            authorizations:
            - name: name
              etag: etag
              properties:
                authorizationUseStatus: Available
                authorizationKey: authorizationKey
                provisioningState: provisioningState
            - name: name
              etag: etag
              properties:
                authorizationUseStatus: Available
                authorizationKey: authorizationKey
                provisioningState: provisioningState
            serviceProviderNotes: serviceProviderNotes
            peerings:
            - name: name
              etag: etag
              properties:
                sharedKey: sharedKey
                primaryAzurePort: primaryAzurePort
                secondaryAzurePort: secondaryAzurePort
                vlanId: 2
                azureASN: 0
                provisioningState: provisioningState
                peerASN: 1
                secondaryPeerAddressPrefix: secondaryPeerAddressPrefix
                stats:
                  bytesIn: 5
                  bytesOut: 5
                microsoftPeeringConfig:
                  routingRegistryName: routingRegistryName
                  advertisedPublicPrefixes:
                  - advertisedPublicPrefixes
                  - advertisedPublicPrefixes
                  advertisedPublicPrefixesState: NotConfigured
                  customerASN: 6
                primaryPeerAddressPrefix: primaryPeerAddressPrefix
                state: Disabled
                peeringType: AzurePublicPeering
            - name: name
              etag: etag
              properties:
                sharedKey: sharedKey
                primaryAzurePort: primaryAzurePort
                secondaryAzurePort: secondaryAzurePort
                vlanId: 2
                azureASN: 0
                provisioningState: provisioningState
                peerASN: 1
                secondaryPeerAddressPrefix: secondaryPeerAddressPrefix
                stats:
                  bytesIn: 5
                  bytesOut: 5
                microsoftPeeringConfig:
                  routingRegistryName: routingRegistryName
                  advertisedPublicPrefixes:
                  - advertisedPublicPrefixes
                  - advertisedPublicPrefixes
                  advertisedPublicPrefixesState: NotConfigured
                  customerASN: 6
                primaryPeerAddressPrefix: primaryPeerAddressPrefix
                state: Disabled
                peeringType: AzurePublicPeering
            provisioningState: provisioningState
            serviceKey: serviceKey
            serviceProviderProvisioningState: NotProvisioned
            serviceProviderProperties:
              bandwidthInMbps: 7
              serviceProviderName: serviceProviderName
              peeringLocation: peeringLocation
        nextLink: nextLink
      properties:
        nextLink:
          description: Gets the URL to get the next set of results.
          type: string
        value:
          description: Gets a list of ExpressRouteCircuits in a resource group
          items:
            $ref: '#/components/schemas/ExpressRouteCircuit'
          type: array
      type: object
    ExpressRouteCircuitPeering:
      allOf:
      - $ref: '#/components/schemas/SubResource'
      description: Peering in a ExpressRouteCircuit resource
      example:
        name: name
        etag: etag
        properties:
          sharedKey: sharedKey
          primaryAzurePort: primaryAzurePort
          secondaryAzurePort: secondaryAzurePort
          vlanId: 2
          azureASN: 0
          provisioningState: provisioningState
          peerASN: 1
          secondaryPeerAddressPrefix: secondaryPeerAddressPrefix
          stats:
            bytesIn: 5
            bytesOut: 5
          microsoftPeeringConfig:
            routingRegistryName: routingRegistryName
            advertisedPublicPrefixes:
            - advertisedPublicPrefixes
            - advertisedPublicPrefixes
            advertisedPublicPrefixesState: NotConfigured
            customerASN: 6
          primaryPeerAddressPrefix: primaryPeerAddressPrefix
          state: Disabled
          peeringType: AzurePublicPeering
      properties:
        etag:
          description: A unique read-only string that changes whenever the resource
            is updated
          type: string
        name:
          description: Gets name of the resource that is unique within a resource
            group. This name can be used to access the resource
          type: string
        properties:
          $ref: '#/components/schemas/ExpressRouteCircuitPeeringPropertiesFormat'
    ExpressRouteCircuitPeeringConfig:
      description: Specifies the peering config
      example:
        routingRegistryName: routingRegistryName
        advertisedPublicPrefixes:
        - advertisedPublicPrefixes
        - advertisedPublicPrefixes
        advertisedPublicPrefixesState: NotConfigured
        customerASN: 6
      properties:
        advertisedPublicPrefixes:
          description: Gets or sets the reference of AdvertisedPublicPrefixes
          items:
            type: string
          type: array
        advertisedPublicPrefixesState:
          description: 'Gets or sets AdvertisedPublicPrefixState of the Peering resource '
          enum:
          - NotConfigured
          - Configuring
          - Configured
          - ValidationNeeded
          type: string
          x-ms-enum:
            modelAsString: true
            name: ExpressRouteCircuitPeeringAdvertisedPublicPrefixState
        customerASN:
          description: Gets or Sets CustomerAsn of the peering.
          format: int32
          type: integer
        routingRegistryName:
          description: Gets or Sets RoutingRegistryName of the config.
          type: string
      type: object
    ExpressRouteCircuitPeeringListResult:
      description: Response for ListPeering Api service callRetrieves all Peerings
        that belongs to an ExpressRouteCircuit
      example:
        value:
        - name: name
          etag: etag
          properties:
            sharedKey: sharedKey
            primaryAzurePort: primaryAzurePort
            secondaryAzurePort: secondaryAzurePort
            vlanId: 2
            azureASN: 0
            provisioningState: provisioningState
            peerASN: 1
            secondaryPeerAddressPrefix: secondaryPeerAddressPrefix
            stats:
              bytesIn: 5
              bytesOut: 5
            microsoftPeeringConfig:
              routingRegistryName: routingRegistryName
              advertisedPublicPrefixes:
              - advertisedPublicPrefixes
              - advertisedPublicPrefixes
              advertisedPublicPrefixesState: NotConfigured
              customerASN: 6
            primaryPeerAddressPrefix: primaryPeerAddressPrefix
            state: Disabled
            peeringType: AzurePublicPeering
        - name: name
          etag: etag
          properties:
            sharedKey: sharedKey
            primaryAzurePort: primaryAzurePort
            secondaryAzurePort: secondaryAzurePort
            vlanId: 2
            azureASN: 0
            provisioningState: provisioningState
            peerASN: 1
            secondaryPeerAddressPrefix: secondaryPeerAddressPrefix
            stats:
              bytesIn: 5
              bytesOut: 5
            microsoftPeeringConfig:
              routingRegistryName: routingRegistryName
              advertisedPublicPrefixes:
              - advertisedPublicPrefixes
              - advertisedPublicPrefixes
              advertisedPublicPrefixesState: NotConfigured
              customerASN: 6
            primaryPeerAddressPrefix: primaryPeerAddressPrefix
            state: Disabled
            peeringType: AzurePublicPeering
        nextLink: nextLink
      properties:
        nextLink:
          description: Gets the URL to get the next set of results.
          type: string
        value:
          description: Gets the peerings in an express route circuit
          items:
            $ref: '#/components/schemas/ExpressRouteCircuitPeering'
          type: array
      type: object
    ExpressRouteCircuitPeeringPropertiesFormat:
      example:
        sharedKey: sharedKey
        primaryAzurePort: primaryAzurePort
        secondaryAzurePort: secondaryAzurePort
        vlanId: 2
        azureASN: 0
        provisioningState: provisioningState
        peerASN: 1
        secondaryPeerAddressPrefix: secondaryPeerAddressPrefix
        stats:
          bytesIn: 5
          bytesOut: 5
        microsoftPeeringConfig:
          routingRegistryName: routingRegistryName
          advertisedPublicPrefixes:
          - advertisedPublicPrefixes
          - advertisedPublicPrefixes
          advertisedPublicPrefixesState: NotConfigured
          customerASN: 6
        primaryPeerAddressPrefix: primaryPeerAddressPrefix
        state: Disabled
        peeringType: AzurePublicPeering
      properties:
        azureASN:
          description: Gets or sets the azure ASN
          format: int32
          type: integer
        microsoftPeeringConfig:
          $ref: '#/components/schemas/ExpressRouteCircuitPeeringConfig'
        peerASN:
          description: Gets or sets the peer ASN
          format: int32
          type: integer
        peeringType:
          description: Gets or sets PeeringType
          enum:
          - AzurePublicPeering
          - AzurePrivatePeering
          - MicrosoftPeering
          type: string
          x-ms-enum:
            modelAsString: true
            name: ExpressRouteCircuitPeeringType
        primaryAzurePort:
          description: Gets or sets the primary port
          type: string
        primaryPeerAddressPrefix:
          description: Gets or sets the primary address prefix
          type: string
        provisioningState:
          description: Gets or sets Provisioning state of the PublicIP resource Updating/Deleting/Failed
          type: string
        secondaryAzurePort:
          description: Gets or sets the secondary port
          type: string
        secondaryPeerAddressPrefix:
          description: Gets or sets the secondary address prefix
          type: string
        sharedKey:
          description: Gets or sets the shared key
          type: string
        state:
          description: Gets or sets state of Peering
          enum:
          - Disabled
          - Enabled
          type: string
          x-ms-enum:
            modelAsString: true
            name: ExpressRouteCircuitPeeringState
        stats:
          $ref: '#/components/schemas/ExpressRouteCircuitStats'
        vlanId:
          description: Gets or sets the vlan id
          format: int32
          type: integer
      type: object
    ExpressRouteCircuitPropertiesFormat:
      description: Properties of ExpressRouteCircuit
      example:
        circuitProvisioningState: circuitProvisioningState
        authorizations:
        - name: name
          etag: etag
          properties:
            authorizationUseStatus: Available
            authorizationKey: authorizationKey
            provisioningState: provisioningState
        - name: name
          etag: etag
          properties:
            authorizationUseStatus: Available
            authorizationKey: authorizationKey
            provisioningState: provisioningState
        serviceProviderNotes: serviceProviderNotes
        peerings:
        - name: name
          etag: etag
          properties:
            sharedKey: sharedKey
            primaryAzurePort: primaryAzurePort
            secondaryAzurePort: secondaryAzurePort
            vlanId: 2
            azureASN: 0
            provisioningState: provisioningState
            peerASN: 1
            secondaryPeerAddressPrefix: secondaryPeerAddressPrefix
            stats:
              bytesIn: 5
              bytesOut: 5
            microsoftPeeringConfig:
              routingRegistryName: routingRegistryName
              advertisedPublicPrefixes:
              - advertisedPublicPrefixes
              - advertisedPublicPrefixes
              advertisedPublicPrefixesState: NotConfigured
              customerASN: 6
            primaryPeerAddressPrefix: primaryPeerAddressPrefix
            state: Disabled
            peeringType: AzurePublicPeering
        - name: name
          etag: etag
          properties:
            sharedKey: sharedKey
            primaryAzurePort: primaryAzurePort
            secondaryAzurePort: secondaryAzurePort
            vlanId: 2
            azureASN: 0
            provisioningState: provisioningState
            peerASN: 1
            secondaryPeerAddressPrefix: secondaryPeerAddressPrefix
            stats:
              bytesIn: 5
              bytesOut: 5
            microsoftPeeringConfig:
              routingRegistryName: routingRegistryName
              advertisedPublicPrefixes:
              - advertisedPublicPrefixes
              - advertisedPublicPrefixes
              advertisedPublicPrefixesState: NotConfigured
              customerASN: 6
            primaryPeerAddressPrefix: primaryPeerAddressPrefix
            state: Disabled
            peeringType: AzurePublicPeering
        provisioningState: provisioningState
        serviceKey: serviceKey
        serviceProviderProvisioningState: NotProvisioned
        serviceProviderProperties:
          bandwidthInMbps: 7
          serviceProviderName: serviceProviderName
          peeringLocation: peeringLocation
      properties:
        authorizations:
          description: Gets or sets list of authorizations
          items:
            $ref: '#/components/schemas/ExpressRouteCircuitAuthorization'
          type: array
        circuitProvisioningState:
          description: 'Gets or sets CircuitProvisioningState state of the resource '
          type: string
        peerings:
          description: Gets or sets list of peerings
          items:
            $ref: '#/components/schemas/ExpressRouteCircuitPeering'
          type: array
        provisioningState:
          description: Gets or sets Provisioning state of the PublicIP resource Updating/Deleting/Failed
          type: string
        serviceKey:
          description: Gets or sets ServiceKey
          type: string
        serviceProviderNotes:
          description: Gets or sets ServiceProviderNotes
          type: string
        serviceProviderProperties:
          $ref: '#/components/schemas/ExpressRouteCircuitServiceProviderProperties'
        serviceProviderProvisioningState:
          description: 'Gets or sets ServiceProviderProvisioningState state of the
            resource '
          enum:
          - NotProvisioned
          - Provisioning
          - Provisioned
          - Deprovisioning
          type: string
          x-ms-enum:
            modelAsString: true
            name: ServiceProviderProvisioningState
      type: object
    ExpressRouteCircuitRoutesTable:
      description: The routes table associated with the ExpressRouteCircuit
      example:
        addressPrefix: addressPrefix
        asPath: asPath
        nextHopType: VirtualNetworkGateway
        nextHopIP: nextHopIP
      properties:
        addressPrefix:
          description: Gets AddressPrefix.
          type: string
        asPath:
          description: Gets AsPath.
          type: string
        nextHopIP:
          description: Gets NextHopIP.
          type: string
        nextHopType:
          description: Gets NextHopType.
          enum:
          - VirtualNetworkGateway
          - VnetLocal
          - Internet
          - VirtualAppliance
          - None
          type: string
          x-ms-enum:
            modelAsString: true
            name: RouteNextHopType
      required:
      - nextHopType
      type: object
    ExpressRouteCircuitServiceProviderProperties:
      description: Contains ServiceProviderProperties in an ExpressRouteCircuit
      example:
        bandwidthInMbps: 7
        serviceProviderName: serviceProviderName
        peeringLocation: peeringLocation
      properties:
        bandwidthInMbps:
          description: Gets or sets BandwidthInMbps.
          format: int32
          type: integer
        peeringLocation:
          description: Gets or sets peering location.
          type: string
        serviceProviderName:
          description: Gets or sets serviceProviderName.
          type: string
      type: object
    ExpressRouteCircuitSku:
      description: Contains sku in an ExpressRouteCircuit
      example:
        tier: Standard
        name: name
        family: UnlimitedData
      properties:
        family:
          description: Gets or sets family of the sku.
          enum:
          - UnlimitedData
          - MeteredData
          type: string
          x-ms-enum:
            modelAsString: true
            name: ExpressRouteCircuitSkuFamily
        name:
          description: Gets or sets name of the sku.
          type: string
        tier:
          description: Gets or sets tier of the sku.
          enum:
          - Standard
          - Premium
          type: string
          x-ms-enum:
            modelAsString: true
            name: ExpressRouteCircuitSkuTier
      type: object
    ExpressRouteCircuitStats:
      description: Contains Stats associated with the peering
      example:
        bytesIn: 5
        bytesOut: 5
      properties:
        bytesIn:
          description: Gets BytesIn of the peering.
          format: int32
          type: integer
        bytesOut:
          description: Gets BytesOut of the peering.
          format: int32
          type: integer
      type: object
    ExpressRouteCircuitsArpTableListResult:
      description: Response for ListArpTable associated with the Express Route Circuits
        Api
      example:
        value:
        - macAddress: macAddress
          ipAddress: ipAddress
        - macAddress: macAddress
          ipAddress: ipAddress
        nextLink: nextLink
      properties:
        nextLink:
          description: Gets the URL to get the next set of results.
          type: string
        value:
          description: Gets List of ArpTable
          items:
            $ref: '#/components/schemas/ExpressRouteCircuitArpTable'
          type: array
      type: object
    ExpressRouteCircuitsRoutesTableListResult:
      description: Response for ListRoutesTable associated with the Express Route
        Circuits Api
      example:
        value:
        - addressPrefix: addressPrefix
          asPath: asPath
          nextHopType: VirtualNetworkGateway
          nextHopIP: nextHopIP
        - addressPrefix: addressPrefix
          asPath: asPath
          nextHopType: VirtualNetworkGateway
          nextHopIP: nextHopIP
        nextLink: nextLink
      properties:
        nextLink:
          description: Gets the URL to get the next set of results.
          type: string
        value:
          description: Gets List of RoutesTable
          items:
            $ref: '#/components/schemas/ExpressRouteCircuitRoutesTable'
          type: array
      type: object
    ExpressRouteCircuitsStatsListResult:
      description: Response for ListStats from Express Route Circuits Api service
        call
      example:
        value:
        - bytesIn: 5
          bytesOut: 5
        - bytesIn: 5
          bytesOut: 5
        nextLink: nextLink
      properties:
        nextLink:
          description: Gets the URL to get the next set of results.
          type: string
        value:
          description: Gets List of Stats
          items:
            $ref: '#/components/schemas/ExpressRouteCircuitStats'
          type: array
      type: object
    ExpressRouteServiceProvider:
      description: ExpressRouteResourceProvider object
      example:
        name: name
        id: id
        type: type
        properties:
          provisioningState: provisioningState
          bandwidthsOffered:
          - offerName: offerName
            valueInMbps: 0
          - offerName: offerName
            valueInMbps: 0
          peeringLocations:
          - peeringLocations
          - peeringLocations
      properties:
        id:
          description: Gets or sets the ID of the resource.
          type: string
        name:
          description: Gets or sets the name of the resource.
          type: string
        properties:
          $ref: '#/components/schemas/ExpressRouteServiceProviderPropertiesFormat'
        type:
          description: Gets or sets the type of the resource.
          type: string
      type: object
    ExpressRouteServiceProviderBandwidthsOffered:
      description: Contains Bandwidths offered in ExpressRouteServiceProviders
      example:
        offerName: offerName
        valueInMbps: 0
      properties:
        offerName:
          description: Gets the OfferName
          type: string
        valueInMbps:
          description: Gets the ValueInMbps.
          format: int32
          type: integer
      type: object
    ExpressRouteServiceProviderListResult:
      description: Response for ListExpressRouteServiceProvider Api service call
      example:
        value:
        - name: name
          id: id
          type: type
          properties:
            provisioningState: provisioningState
            bandwidthsOffered:
            - offerName: offerName
              valueInMbps: 0
            - offerName: offerName
              valueInMbps: 0
            peeringLocations:
            - peeringLocations
            - peeringLocations
        - name: name
          id: id
          type: type
          properties:
            provisioningState: provisioningState
            bandwidthsOffered:
            - offerName: offerName
              valueInMbps: 0
            - offerName: offerName
              valueInMbps: 0
            peeringLocations:
            - peeringLocations
            - peeringLocations
        nextLink: nextLink
      properties:
        nextLink:
          description: Gets the URL to get the next set of results.
          type: string
        value:
          description: Gets List of ExpressRouteResourceProvider
          items:
            $ref: '#/components/schemas/ExpressRouteServiceProvider'
          type: array
      type: object
    ExpressRouteServiceProviderPropertiesFormat:
      description: Properties of ExpressRouteServiceProvider
      example:
        provisioningState: provisioningState
        bandwidthsOffered:
        - offerName: offerName
          valueInMbps: 0
        - offerName: offerName
          valueInMbps: 0
        peeringLocations:
        - peeringLocations
        - peeringLocations
      properties:
        bandwidthsOffered:
          description: Gets or bandwidths offered
          items:
            $ref: '#/components/schemas/ExpressRouteServiceProviderBandwidthsOffered'
          type: array
        peeringLocations:
          description: Gets or list of peering locations
          items:
            type: string
          type: array
        provisioningState:
          description: 'Gets or sets Provisioning state of the resource '
          type: string
      type: object
    FrontendIpConfiguration:
      allOf:
      - $ref: '#/components/schemas/SubResource'
      description: Frontend IP address of the load balancer
      example:
        name: name
        etag: etag
        properties:
          inboundNatPools:
          - id: id
          - id: id
          inboundNatRules:
          - id: id
          - id: id
          subnet:
            id: id
          loadBalancingRules:
          - id: id
          - id: id
          privateIPAllocationMethod: Static
          privateIPAddress: privateIPAddress
          provisioningState: provisioningState
          outboundNatRules:
          - id: id
          - id: id
          publicIPAddress:
            id: id
      properties:
        etag:
          description: A unique read-only string that changes whenever the resource
            is updated
          type: string
        name:
          description: Gets name of the resource that is unique within a resource
            group. This name can be used to access the resource
          type: string
        properties:
          $ref: '#/components/schemas/FrontendIpConfigurationPropertiesFormat'
    FrontendIpConfigurationPropertiesFormat:
      description: Properties of Frontend IP Configuration of the load balancer
      example:
        inboundNatPools:
        - id: id
        - id: id
        inboundNatRules:
        - id: id
        - id: id
        subnet:
          id: id
        loadBalancingRules:
        - id: id
        - id: id
        privateIPAllocationMethod: Static
        privateIPAddress: privateIPAddress
        provisioningState: provisioningState
        outboundNatRules:
        - id: id
        - id: id
        publicIPAddress:
          id: id
      properties:
        inboundNatPools:
          description: Read only.Inbound pools URIs that use this frontend IP
          items:
            $ref: '#/components/schemas/SubResource'
          type: array
        inboundNatRules:
          description: Read only.Inbound rules URIs that use this frontend IP
          items:
            $ref: '#/components/schemas/SubResource'
          type: array
        loadBalancingRules:
          description: Gets Load Balancing rules URIs that use this frontend IP
          items:
            $ref: '#/components/schemas/SubResource'
          type: array
        outboundNatRules:
          description: Read only.Outbound rules URIs that use this frontend IP
          items:
            $ref: '#/components/schemas/SubResource'
          type: array
        privateIPAddress:
          description: Gets or sets the IP address of the Load Balancer.This is only
            specified if a specific private IP address shall be allocated from the
            subnet specified in subnetRef
          type: string
        privateIPAllocationMethod:
          description: Gets or sets PrivateIP allocation method (Static/Dynamic)
          enum:
          - Static
          - Dynamic
          type: string
          x-ms-enum:
            modelAsString: true
            name: IpAllocationMethod
        provisioningState:
          description: Gets or sets Provisioning state of the PublicIP resource Updating/Deleting/Failed
          type: string
        publicIPAddress:
          $ref: '#/components/schemas/SubResource'
        subnet:
          $ref: '#/components/schemas/SubResource'
      type: object
    InboundNatPool:
      allOf:
      - $ref: '#/components/schemas/SubResource'
      description: Inbound NAT pool of the loadbalancer
      example:
        name: name
        etag: etag
        properties:
          protocol: Udp
          backendPort: 0
          frontendPortRangeStart: 1
          frontendIPConfiguration:
            id: id
          provisioningState: provisioningState
          frontendPortRangeEnd: 6
      properties:
        etag:
          description: A unique read-only string that changes whenever the resource
            is updated
          type: string
        name:
          description: Gets name of the resource that is unique within a resource
            group. This name can be used to access the resource
          type: string
        properties:
          $ref: '#/components/schemas/InboundNatPoolPropertiesFormat'
    InboundNatPoolPropertiesFormat:
      description: Properties of Inbound NAT pool
      example:
        protocol: Udp
        backendPort: 0
        frontendPortRangeStart: 1
        frontendIPConfiguration:
          id: id
        provisioningState: provisioningState
        frontendPortRangeEnd: 6
      properties:
        backendPort:
          description: "Gets or sets a port used for internal connections on the endpoint.\
            \ The localPort attribute maps the eternal port of the endpoint to an\
            \ internal port on a role. This is useful in scenarios where a role must\
            \ communicate to an internal component on a port that is different from\
            \ the one that is exposed externally. If not specified, the value of localPort\
            \ is the same as the port attribute. Set the value of localPort to '*'\
            \ to automatically assign an unallocated port that is discoverable using\
            \ the runtime API"
          format: int32
          type: integer
        frontendIPConfiguration:
          $ref: '#/components/schemas/SubResource'
        frontendPortRangeEnd:
          description: "Gets or sets the ending port range for the NAT pool. You can\
            \ specify any port number you choose, but the port numbers specified for\
            \ each role in the service must be unique. Possible values range between\
            \ 1 and 65535, inclusive"
          format: int32
          type: integer
        frontendPortRangeStart:
          description: "Gets or sets the starting port range for the NAT pool. You\
            \ can specify any port number you choose, but the port numbers specified\
            \ for each role in the service must be unique. Possible values range between\
            \ 1 and 65535, inclusive"
          format: int32
          type: integer
        protocol:
          description: Gets or sets the transport protocol for the external endpoint.
            Possible values are Udp or Tcp
          enum:
          - Udp
          - Tcp
          type: string
          x-ms-enum:
            modelAsString: true
            name: TransportProtocol
        provisioningState:
          description: Gets or sets Provisioning state of the PublicIP resource Updating/Deleting/Failed
          type: string
      required:
      - backendPort
      - frontendPortRangeEnd
      - frontendPortRangeStart
      - protocol
      type: object
    InboundNatRule:
      allOf:
      - $ref: '#/components/schemas/SubResource'
      description: Inbound NAT rule of the loadbalancer
      example:
        name: name
        etag: etag
        properties:
          enableFloatingIP: true
          protocol: Udp
          backendPort: 5
          backendIPConfiguration:
            id: id
          frontendIPConfiguration:
            id: id
          idleTimeoutInMinutes: 2
          frontendPort: 5
          provisioningState: provisioningState
      properties:
        etag:
          description: A unique read-only string that changes whenever the resource
            is updated
          type: string
        name:
          description: Gets name of the resource that is unique within a resource
            group. This name can be used to access the resource
          type: string
        properties:
          $ref: '#/components/schemas/InboundNatRulePropertiesFormat'
    InboundNatRulePropertiesFormat:
      description: Properties of Inbound NAT rule
      example:
        enableFloatingIP: true
        protocol: Udp
        backendPort: 5
        backendIPConfiguration:
          id: id
        frontendIPConfiguration:
          id: id
        idleTimeoutInMinutes: 2
        frontendPort: 5
        provisioningState: provisioningState
      properties:
        backendIPConfiguration:
          $ref: '#/components/schemas/SubResource'
        backendPort:
          description: "Gets or sets a port used for internal connections on the endpoint.\
            \ The localPort attribute maps the eternal port of the endpoint to an\
            \ internal port on a role. This is useful in scenarios where a role must\
            \ communicate to an internal component on a port that is different from\
            \ the one that is exposed externally. If not specified, the value of localPort\
            \ is the same as the port attribute. Set the value of localPort to '*'\
            \ to automatically assign an unallocated port that is discoverable using\
            \ the runtime API"
          format: int32
          type: integer
        enableFloatingIP:
          description: Configures a virtual machine's endpoint for the floating IP
            capability required to configure a SQL AlwaysOn availability Group. This
            setting is required when using the SQL Always ON availability Groups in
            SQL server. This setting can't be changed after you create the endpoint
          type: boolean
        frontendIPConfiguration:
          $ref: '#/components/schemas/SubResource'
        frontendPort:
          description: "Gets or sets the port for the external endpoint. You can specify\
            \ any port number you choose, but the port numbers specified for each\
            \ role in the service must be unique. Possible values range between 1\
            \ and 65535, inclusive"
          format: int32
          type: integer
        idleTimeoutInMinutes:
          description: Gets or sets the timeout for the Tcp idle connection. The value
            can be set between 4 and 30 minutes. The default value is 4 minutes. This
            element is only used when the protocol is set to Tcp
          format: int32
          type: integer
        protocol:
          description: Gets or sets the transport protocol for the external endpoint.
            Possible values are Udp or Tcp
          enum:
          - Udp
          - Tcp
          type: string
          x-ms-enum:
            modelAsString: true
            name: TransportProtocol
        provisioningState:
          description: Gets or sets Provisioning state of the PublicIP resource Updating/Deleting/Failed
          type: string
      required:
      - enableFloatingIP
      - frontendPort
      - protocol
      type: object
    LoadBalancer:
      allOf:
      - $ref: '#/components/schemas/Resource'
      description: LoadBalancer resource
      example:
        etag: etag
        properties:
          inboundNatPools:
          - name: name
            etag: etag
            properties:
              protocol: Udp
              backendPort: 0
              frontendPortRangeStart: 1
              frontendIPConfiguration:
                id: id
              provisioningState: provisioningState
              frontendPortRangeEnd: 6
          - name: name
            etag: etag
            properties:
              protocol: Udp
              backendPort: 0
              frontendPortRangeStart: 1
              frontendIPConfiguration:
                id: id
              provisioningState: provisioningState
              frontendPortRangeEnd: 6
          inboundNatRules:
          - name: name
            etag: etag
            properties:
              enableFloatingIP: true
              protocol: Udp
              backendPort: 5
              backendIPConfiguration:
                id: id
              frontendIPConfiguration:
                id: id
              idleTimeoutInMinutes: 2
              frontendPort: 5
              provisioningState: provisioningState
          - name: name
            etag: etag
            properties:
              enableFloatingIP: true
              protocol: Udp
              backendPort: 5
              backendIPConfiguration:
                id: id
              frontendIPConfiguration:
                id: id
              idleTimeoutInMinutes: 2
              frontendPort: 5
              provisioningState: provisioningState
          loadBalancingRules:
          - name: name
            etag: etag
            properties:
              enableFloatingIP: true
              loadDistribution: Default
              protocol: Udp
              backendPort: 7
              frontendIPConfiguration:
                id: id
              idleTimeoutInMinutes: 3
              backendAddressPool:
                id: id
              frontendPort: 9
              provisioningState: provisioningState
              probe:
                id: id
          - name: name
            etag: etag
            properties:
              enableFloatingIP: true
              loadDistribution: Default
              protocol: Udp
              backendPort: 7
              frontendIPConfiguration:
                id: id
              idleTimeoutInMinutes: 3
              backendAddressPool:
                id: id
              frontendPort: 9
              provisioningState: provisioningState
              probe:
                id: id
          resourceGuid: resourceGuid
          probes:
          - name: name
            etag: etag
            properties:
              loadBalancingRules:
              - id: id
              - id: id
              protocol: Http
              port: 1
              intervalInSeconds: 4
              numberOfProbes: 7
              provisioningState: provisioningState
              requestPath: requestPath
          - name: name
            etag: etag
            properties:
              loadBalancingRules:
              - id: id
              - id: id
              protocol: Http
              port: 1
              intervalInSeconds: 4
              numberOfProbes: 7
              provisioningState: provisioningState
              requestPath: requestPath
          frontendIPConfigurations:
          - name: name
            etag: etag
            properties:
              inboundNatPools:
              - id: id
              - id: id
              inboundNatRules:
              - id: id
              - id: id
              subnet:
                id: id
              loadBalancingRules:
              - id: id
              - id: id
              privateIPAllocationMethod: Static
              privateIPAddress: privateIPAddress
              provisioningState: provisioningState
              outboundNatRules:
              - id: id
              - id: id
              publicIPAddress:
                id: id
          - name: name
            etag: etag
            properties:
              inboundNatPools:
              - id: id
              - id: id
              inboundNatRules:
              - id: id
              - id: id
              subnet:
                id: id
              loadBalancingRules:
              - id: id
              - id: id
              privateIPAllocationMethod: Static
              privateIPAddress: privateIPAddress
              provisioningState: provisioningState
              outboundNatRules:
              - id: id
              - id: id
              publicIPAddress:
                id: id
          provisioningState: provisioningState
          backendAddressPools:
          - name: name
            etag: etag
            properties:
              outboundNatRule:
                id: id
              loadBalancingRules:
              - id: id
              - id: id
              backendIPConfigurations:
              - id: id
              - id: id
              provisioningState: provisioningState
          - name: name
            etag: etag
            properties:
              outboundNatRule:
                id: id
              loadBalancingRules:
              - id: id
              - id: id
              backendIPConfigurations:
              - id: id
              - id: id
              provisioningState: provisioningState
          outboundNatRules:
          - name: name
            etag: etag
            properties:
              allocatedOutboundPorts: 2
              backendAddressPool:
                id: id
              frontendIPConfigurations:
              - id: id
              - id: id
              provisioningState: provisioningState
          - name: name
            etag: etag
            properties:
              allocatedOutboundPorts: 2
              backendAddressPool:
                id: id
              frontendIPConfigurations:
              - id: id
              - id: id
              provisioningState: provisioningState
      properties:
        etag:
          description: Gets a unique read-only string that changes whenever the resource
            is updated
          type: string
        properties:
          $ref: '#/components/schemas/LoadBalancerPropertiesFormat'
    LoadBalancerListResult:
      description: Response for ListLoadBalancers Api service call
      example:
        value:
        - etag: etag
          properties:
            inboundNatPools:
            - name: name
              etag: etag
              properties:
                protocol: Udp
                backendPort: 0
                frontendPortRangeStart: 1
                frontendIPConfiguration:
                  id: id
                provisioningState: provisioningState
                frontendPortRangeEnd: 6
            - name: name
              etag: etag
              properties:
                protocol: Udp
                backendPort: 0
                frontendPortRangeStart: 1
                frontendIPConfiguration:
                  id: id
                provisioningState: provisioningState
                frontendPortRangeEnd: 6
            inboundNatRules:
            - name: name
              etag: etag
              properties:
                enableFloatingIP: true
                protocol: Udp
                backendPort: 5
                backendIPConfiguration:
                  id: id
                frontendIPConfiguration:
                  id: id
                idleTimeoutInMinutes: 2
                frontendPort: 5
                provisioningState: provisioningState
            - name: name
              etag: etag
              properties:
                enableFloatingIP: true
                protocol: Udp
                backendPort: 5
                backendIPConfiguration:
                  id: id
                frontendIPConfiguration:
                  id: id
                idleTimeoutInMinutes: 2
                frontendPort: 5
                provisioningState: provisioningState
            loadBalancingRules:
            - name: name
              etag: etag
              properties:
                enableFloatingIP: true
                loadDistribution: Default
                protocol: Udp
                backendPort: 7
                frontendIPConfiguration:
                  id: id
                idleTimeoutInMinutes: 3
                backendAddressPool:
                  id: id
                frontendPort: 9
                provisioningState: provisioningState
                probe:
                  id: id
            - name: name
              etag: etag
              properties:
                enableFloatingIP: true
                loadDistribution: Default
                protocol: Udp
                backendPort: 7
                frontendIPConfiguration:
                  id: id
                idleTimeoutInMinutes: 3
                backendAddressPool:
                  id: id
                frontendPort: 9
                provisioningState: provisioningState
                probe:
                  id: id
            resourceGuid: resourceGuid
            probes:
            - name: name
              etag: etag
              properties:
                loadBalancingRules:
                - id: id
                - id: id
                protocol: Http
                port: 1
                intervalInSeconds: 4
                numberOfProbes: 7
                provisioningState: provisioningState
                requestPath: requestPath
            - name: name
              etag: etag
              properties:
                loadBalancingRules:
                - id: id
                - id: id
                protocol: Http
                port: 1
                intervalInSeconds: 4
                numberOfProbes: 7
                provisioningState: provisioningState
                requestPath: requestPath
            frontendIPConfigurations:
            - name: name
              etag: etag
              properties:
                inboundNatPools:
                - id: id
                - id: id
                inboundNatRules:
                - id: id
                - id: id
                subnet:
                  id: id
                loadBalancingRules:
                - id: id
                - id: id
                privateIPAllocationMethod: Static
                privateIPAddress: privateIPAddress
                provisioningState: provisioningState
                outboundNatRules:
                - id: id
                - id: id
                publicIPAddress:
                  id: id
            - name: name
              etag: etag
              properties:
                inboundNatPools:
                - id: id
                - id: id
                inboundNatRules:
                - id: id
                - id: id
                subnet:
                  id: id
                loadBalancingRules:
                - id: id
                - id: id
                privateIPAllocationMethod: Static
                privateIPAddress: privateIPAddress
                provisioningState: provisioningState
                outboundNatRules:
                - id: id
                - id: id
                publicIPAddress:
                  id: id
            provisioningState: provisioningState
            backendAddressPools:
            - name: name
              etag: etag
              properties:
                outboundNatRule:
                  id: id
                loadBalancingRules:
                - id: id
                - id: id
                backendIPConfigurations:
                - id: id
                - id: id
                provisioningState: provisioningState
            - name: name
              etag: etag
              properties:
                outboundNatRule:
                  id: id
                loadBalancingRules:
                - id: id
                - id: id
                backendIPConfigurations:
                - id: id
                - id: id
                provisioningState: provisioningState
            outboundNatRules:
            - name: name
              etag: etag
              properties:
                allocatedOutboundPorts: 2
                backendAddressPool:
                  id: id
                frontendIPConfigurations:
                - id: id
                - id: id
                provisioningState: provisioningState
            - name: name
              etag: etag
              properties:
                allocatedOutboundPorts: 2
                backendAddressPool:
                  id: id
                frontendIPConfigurations:
                - id: id
                - id: id
                provisioningState: provisioningState
        - etag: etag
          properties:
            inboundNatPools:
            - name: name
              etag: etag
              properties:
                protocol: Udp
                backendPort: 0
                frontendPortRangeStart: 1
                frontendIPConfiguration:
                  id: id
                provisioningState: provisioningState
                frontendPortRangeEnd: 6
            - name: name
              etag: etag
              properties:
                protocol: Udp
                backendPort: 0
                frontendPortRangeStart: 1
                frontendIPConfiguration:
                  id: id
                provisioningState: provisioningState
                frontendPortRangeEnd: 6
            inboundNatRules:
            - name: name
              etag: etag
              properties:
                enableFloatingIP: true
                protocol: Udp
                backendPort: 5
                backendIPConfiguration:
                  id: id
                frontendIPConfiguration:
                  id: id
                idleTimeoutInMinutes: 2
                frontendPort: 5
                provisioningState: provisioningState
            - name: name
              etag: etag
              properties:
                enableFloatingIP: true
                protocol: Udp
                backendPort: 5
                backendIPConfiguration:
                  id: id
                frontendIPConfiguration:
                  id: id
                idleTimeoutInMinutes: 2
                frontendPort: 5
                provisioningState: provisioningState
            loadBalancingRules:
            - name: name
              etag: etag
              properties:
                enableFloatingIP: true
                loadDistribution: Default
                protocol: Udp
                backendPort: 7
                frontendIPConfiguration:
                  id: id
                idleTimeoutInMinutes: 3
                backendAddressPool:
                  id: id
                frontendPort: 9
                provisioningState: provisioningState
                probe:
                  id: id
            - name: name
              etag: etag
              properties:
                enableFloatingIP: true
                loadDistribution: Default
                protocol: Udp
                backendPort: 7
                frontendIPConfiguration:
                  id: id
                idleTimeoutInMinutes: 3
                backendAddressPool:
                  id: id
                frontendPort: 9
                provisioningState: provisioningState
                probe:
                  id: id
            resourceGuid: resourceGuid
            probes:
            - name: name
              etag: etag
              properties:
                loadBalancingRules:
                - id: id
                - id: id
                protocol: Http
                port: 1
                intervalInSeconds: 4
                numberOfProbes: 7
                provisioningState: provisioningState
                requestPath: requestPath
            - name: name
              etag: etag
              properties:
                loadBalancingRules:
                - id: id
                - id: id
                protocol: Http
                port: 1
                intervalInSeconds: 4
                numberOfProbes: 7
                provisioningState: provisioningState
                requestPath: requestPath
            frontendIPConfigurations:
            - name: name
              etag: etag
              properties:
                inboundNatPools:
                - id: id
                - id: id
                inboundNatRules:
                - id: id
                - id: id
                subnet:
                  id: id
                loadBalancingRules:
                - id: id
                - id: id
                privateIPAllocationMethod: Static
                privateIPAddress: privateIPAddress
                provisioningState: provisioningState
                outboundNatRules:
                - id: id
                - id: id
                publicIPAddress:
                  id: id
            - name: name
              etag: etag
              properties:
                inboundNatPools:
                - id: id
                - id: id
                inboundNatRules:
                - id: id
                - id: id
                subnet:
                  id: id
                loadBalancingRules:
                - id: id
                - id: id
                privateIPAllocationMethod: Static
                privateIPAddress: privateIPAddress
                provisioningState: provisioningState
                outboundNatRules:
                - id: id
                - id: id
                publicIPAddress:
                  id: id
            provisioningState: provisioningState
            backendAddressPools:
            - name: name
              etag: etag
              properties:
                outboundNatRule:
                  id: id
                loadBalancingRules:
                - id: id
                - id: id
                backendIPConfigurations:
                - id: id
                - id: id
                provisioningState: provisioningState
            - name: name
              etag: etag
              properties:
                outboundNatRule:
                  id: id
                loadBalancingRules:
                - id: id
                - id: id
                backendIPConfigurations:
                - id: id
                - id: id
                provisioningState: provisioningState
            outboundNatRules:
            - name: name
              etag: etag
              properties:
                allocatedOutboundPorts: 2
                backendAddressPool:
                  id: id
                frontendIPConfigurations:
                - id: id
                - id: id
                provisioningState: provisioningState
            - name: name
              etag: etag
              properties:
                allocatedOutboundPorts: 2
                backendAddressPool:
                  id: id
                frontendIPConfigurations:
                - id: id
                - id: id
                provisioningState: provisioningState
        nextLink: nextLink
      properties:
        nextLink:
          description: Gets the URL to get the next set of results.
          type: string
        value:
          description: Gets a list of LoadBalancers in a resource group
          items:
            $ref: '#/components/schemas/LoadBalancer'
          type: array
      type: object
    LoadBalancerPropertiesFormat:
      description: Properties of Load Balancer
      example:
        inboundNatPools:
        - name: name
          etag: etag
          properties:
            protocol: Udp
            backendPort: 0
            frontendPortRangeStart: 1
            frontendIPConfiguration:
              id: id
            provisioningState: provisioningState
            frontendPortRangeEnd: 6
        - name: name
          etag: etag
          properties:
            protocol: Udp
            backendPort: 0
            frontendPortRangeStart: 1
            frontendIPConfiguration:
              id: id
            provisioningState: provisioningState
            frontendPortRangeEnd: 6
        inboundNatRules:
        - name: name
          etag: etag
          properties:
            enableFloatingIP: true
            protocol: Udp
            backendPort: 5
            backendIPConfiguration:
              id: id
            frontendIPConfiguration:
              id: id
            idleTimeoutInMinutes: 2
            frontendPort: 5
            provisioningState: provisioningState
        - name: name
          etag: etag
          properties:
            enableFloatingIP: true
            protocol: Udp
            backendPort: 5
            backendIPConfiguration:
              id: id
            frontendIPConfiguration:
              id: id
            idleTimeoutInMinutes: 2
            frontendPort: 5
            provisioningState: provisioningState
        loadBalancingRules:
        - name: name
          etag: etag
          properties:
            enableFloatingIP: true
            loadDistribution: Default
            protocol: Udp
            backendPort: 7
            frontendIPConfiguration:
              id: id
            idleTimeoutInMinutes: 3
            backendAddressPool:
              id: id
            frontendPort: 9
            provisioningState: provisioningState
            probe:
              id: id
        - name: name
          etag: etag
          properties:
            enableFloatingIP: true
            loadDistribution: Default
            protocol: Udp
            backendPort: 7
            frontendIPConfiguration:
              id: id
            idleTimeoutInMinutes: 3
            backendAddressPool:
              id: id
            frontendPort: 9
            provisioningState: provisioningState
            probe:
              id: id
        resourceGuid: resourceGuid
        probes:
        - name: name
          etag: etag
          properties:
            loadBalancingRules:
            - id: id
            - id: id
            protocol: Http
            port: 1
            intervalInSeconds: 4
            numberOfProbes: 7
            provisioningState: provisioningState
            requestPath: requestPath
        - name: name
          etag: etag
          properties:
            loadBalancingRules:
            - id: id
            - id: id
            protocol: Http
            port: 1
            intervalInSeconds: 4
            numberOfProbes: 7
            provisioningState: provisioningState
            requestPath: requestPath
        frontendIPConfigurations:
        - name: name
          etag: etag
          properties:
            inboundNatPools:
            - id: id
            - id: id
            inboundNatRules:
            - id: id
            - id: id
            subnet:
              id: id
            loadBalancingRules:
            - id: id
            - id: id
            privateIPAllocationMethod: Static
            privateIPAddress: privateIPAddress
            provisioningState: provisioningState
            outboundNatRules:
            - id: id
            - id: id
            publicIPAddress:
              id: id
        - name: name
          etag: etag
          properties:
            inboundNatPools:
            - id: id
            - id: id
            inboundNatRules:
            - id: id
            - id: id
            subnet:
              id: id
            loadBalancingRules:
            - id: id
            - id: id
            privateIPAllocationMethod: Static
            privateIPAddress: privateIPAddress
            provisioningState: provisioningState
            outboundNatRules:
            - id: id
            - id: id
            publicIPAddress:
              id: id
        provisioningState: provisioningState
        backendAddressPools:
        - name: name
          etag: etag
          properties:
            outboundNatRule:
              id: id
            loadBalancingRules:
            - id: id
            - id: id
            backendIPConfigurations:
            - id: id
            - id: id
            provisioningState: provisioningState
        - name: name
          etag: etag
          properties:
            outboundNatRule:
              id: id
            loadBalancingRules:
            - id: id
            - id: id
            backendIPConfigurations:
            - id: id
            - id: id
            provisioningState: provisioningState
        outboundNatRules:
        - name: name
          etag: etag
          properties:
            allocatedOutboundPorts: 2
            backendAddressPool:
              id: id
            frontendIPConfigurations:
            - id: id
            - id: id
            provisioningState: provisioningState
        - name: name
          etag: etag
          properties:
            allocatedOutboundPorts: 2
            backendAddressPool:
              id: id
            frontendIPConfigurations:
            - id: id
            - id: id
            provisioningState: provisioningState
      properties:
        backendAddressPools:
          description: Gets or sets Pools of backend IP addresses
          items:
            $ref: '#/components/schemas/BackendAddressPool'
          type: array
        frontendIPConfigurations:
          description: Gets or sets frontend IP addresses of the load balancer
          items:
            $ref: '#/components/schemas/FrontendIpConfiguration'
          type: array
        inboundNatPools:
          description: Gets or sets inbound NAT pools
          items:
            $ref: '#/components/schemas/InboundNatPool'
          type: array
        inboundNatRules:
          description: Gets or sets list of inbound rules
          items:
            $ref: '#/components/schemas/InboundNatRule'
          type: array
        loadBalancingRules:
          description: Gets or sets load balancing rules
          items:
            $ref: '#/components/schemas/LoadBalancingRule'
          type: array
        outboundNatRules:
          description: Gets or sets outbound NAT rules
          items:
            $ref: '#/components/schemas/OutboundNatRule'
          type: array
        probes:
          description: Gets or sets list of Load balancer probes
          items:
            $ref: '#/components/schemas/Probe'
          type: array
        provisioningState:
          description: Gets or sets Provisioning state of the PublicIP resource Updating/Deleting/Failed
          type: string
        resourceGuid:
          description: Gets or sets resource guid property of the Load balancer resource
          type: string
      type: object
    LoadBalancingRule:
      allOf:
      - $ref: '#/components/schemas/SubResource'
      description: Rules of the load balancer
      example:
        name: name
        etag: etag
        properties:
          enableFloatingIP: true
          loadDistribution: Default
          protocol: Udp
          backendPort: 7
          frontendIPConfiguration:
            id: id
          idleTimeoutInMinutes: 3
          backendAddressPool:
            id: id
          frontendPort: 9
          provisioningState: provisioningState
          probe:
            id: id
      properties:
        etag:
          description: A unique read-only string that changes whenever the resource
            is updated
          type: string
        name:
          description: Gets name of the resource that is unique within a resource
            group. This name can be used to access the resource
          type: string
        properties:
          $ref: '#/components/schemas/LoadBalancingRulePropertiesFormat'
    LoadBalancingRulePropertiesFormat:
      description: Properties of the load balancer
      example:
        enableFloatingIP: true
        loadDistribution: Default
        protocol: Udp
        backendPort: 7
        frontendIPConfiguration:
          id: id
        idleTimeoutInMinutes: 3
        backendAddressPool:
          id: id
        frontendPort: 9
        provisioningState: provisioningState
        probe:
          id: id
      properties:
        backendAddressPool:
          $ref: '#/components/schemas/SubResource'
        backendPort:
          description: "Gets or sets a port used for internal connections on the endpoint.\
            \ The localPort attribute maps the eternal port of the endpoint to an\
            \ internal port on a role. This is useful in scenarios where a role must\
            \ communicate to an internal component on a port that is different from\
            \ the one that is exposed externally. If not specified, the value of localPort\
            \ is the same as the port attribute. Set the value of localPort to '*'\
            \ to automatically assign an unallocated port that is discoverable using\
            \ the runtime API"
          format: int32
          type: integer
        enableFloatingIP:
          description: Configures a virtual machine's endpoint for the floating IP
            capability required to configure a SQL AlwaysOn availability Group. This
            setting is required when using the SQL Always ON availability Groups in
            SQL server. This setting can't be changed after you create the endpoint
          type: boolean
        frontendIPConfiguration:
          $ref: '#/components/schemas/SubResource'
        frontendPort:
          description: "Gets or sets the port for the external endpoint. You can specify\
            \ any port number you choose, but the port numbers specified for each\
            \ role in the service must be unique. Possible values range between 1\
            \ and 65535, inclusive"
          format: int32
          type: integer
        idleTimeoutInMinutes:
          description: Gets or sets the timeout for the Tcp idle connection. The value
            can be set between 4 and 30 minutes. The default value is 4 minutes. This
            element is only used when the protocol is set to Tcp
          format: int32
          type: integer
        loadDistribution:
          description: Gets or sets the load distribution policy for this rule
          enum:
          - Default
          - SourceIP
          - SourceIPProtocol
          type: string
          x-ms-enum:
            modelAsString: true
            name: LoadDistribution
        probe:
          $ref: '#/components/schemas/SubResource'
        protocol:
          description: Gets or sets the transport protocol for the external endpoint.
            Possible values are Udp or Tcp
          enum:
          - Udp
          - Tcp
          type: string
          x-ms-enum:
            modelAsString: true
            name: TransportProtocol
        provisioningState:
          description: Gets or sets Provisioning state of the PublicIP resource Updating/Deleting/Failed
          type: string
      required:
      - backendAddressPool
      - enableFloatingIP
      - frontendPort
      - protocol
      type: object
    LocalNetworkGateway:
      allOf:
      - $ref: '#/components/schemas/Resource'
      description: A common class for general resource information
      example:
        etag: etag
        properties:
          localNetworkAddressSpace:
            addressPrefixes:
            - addressPrefixes
            - addressPrefixes
          resourceGuid: resourceGuid
          gatewayIpAddress: gatewayIpAddress
          provisioningState: provisioningState
      properties:
        etag:
          description: Gets a unique read-only string that changes whenever the resource
            is updated
          type: string
        properties:
          $ref: '#/components/schemas/LocalNetworkGatewayPropertiesFormat'
    LocalNetworkGatewayListResult:
      description: Response for ListLocalNetworkGateways Api service call
      example:
        value:
        - etag: etag
          properties:
            localNetworkAddressSpace:
              addressPrefixes:
              - addressPrefixes
              - addressPrefixes
            resourceGuid: resourceGuid
            gatewayIpAddress: gatewayIpAddress
            provisioningState: provisioningState
        - etag: etag
          properties:
            localNetworkAddressSpace:
              addressPrefixes:
              - addressPrefixes
              - addressPrefixes
            resourceGuid: resourceGuid
            gatewayIpAddress: gatewayIpAddress
            provisioningState: provisioningState
        nextLink: nextLink
      properties:
        nextLink:
          description: Gets the URL to get the next set of results.
          type: string
        value:
          description: Gets List of LocalNetworkGateways that exists in a resource
            group
          items:
            $ref: '#/components/schemas/LocalNetworkGateway'
          type: array
      type: object
    LocalNetworkGatewayPropertiesFormat:
      description: LocalNetworkGateway properties
      example:
        localNetworkAddressSpace:
          addressPrefixes:
          - addressPrefixes
          - addressPrefixes
        resourceGuid: resourceGuid
        gatewayIpAddress: gatewayIpAddress
        provisioningState: provisioningState
      properties:
        gatewayIpAddress:
          description: IP address of local network gateway.
          type: string
        localNetworkAddressSpace:
          $ref: '#/components/schemas/AddressSpace'
        provisioningState:
          description: Gets or sets Provisioning state of the LocalNetworkGateway
            resource Updating/Deleting/Failed
          type: string
        resourceGuid:
          description: Gets or sets resource guid property of the LocalNetworkGateway
            resource
          type: string
      type: object
    NetworkInterface:
      allOf:
      - $ref: '#/components/schemas/Resource'
      description: A NetworkInterface in a resource group
      example:
        etag: etag
        properties:
          ipConfigurations:
          - name: name
            etag: etag
            properties:
              subnet:
                id: id
              loadBalancerInboundNatRules:
              - id: id
              - id: id
              privateIPAllocationMethod: Static
              privateIPAddress: privateIPAddress
              provisioningState: provisioningState
              loadBalancerBackendAddressPools:
              - id: id
              - id: id
              publicIPAddress:
                id: id
          - name: name
            etag: etag
            properties:
              subnet:
                id: id
              loadBalancerInboundNatRules:
              - id: id
              - id: id
              privateIPAllocationMethod: Static
              privateIPAddress: privateIPAddress
              provisioningState: provisioningState
              loadBalancerBackendAddressPools:
              - id: id
              - id: id
              publicIPAddress:
                id: id
          virtualMachine:
            id: id
          macAddress: macAddress
          dnsSettings:
            appliedDnsServers:
            - appliedDnsServers
            - appliedDnsServers
            internalDnsNameLabel: internalDnsNameLabel
            internalFqdn: internalFqdn
            dnsServers:
            - dnsServers
            - dnsServers
          resourceGuid: resourceGuid
          provisioningState: provisioningState
          enableIPForwarding: true
          networkSecurityGroup:
            id: id
          primary: true
      properties:
        etag:
          description: Gets a unique read-only string that changes whenever the resource
            is updated
          type: string
        properties:
          $ref: '#/components/schemas/NetworkInterfacePropertiesFormat'
    NetworkInterfaceDnsSettings:
      description: Dns Settings of a network interface
      example:
        appliedDnsServers:
        - appliedDnsServers
        - appliedDnsServers
        internalDnsNameLabel: internalDnsNameLabel
        internalFqdn: internalFqdn
        dnsServers:
        - dnsServers
        - dnsServers
      properties:
        appliedDnsServers:
          description: Gets or sets list of Applied DNS servers IP addresses
          items:
            type: string
          type: array
        dnsServers:
          description: Gets or sets list of DNS servers IP addresses
          items:
            type: string
          type: array
        internalDnsNameLabel:
          description: Gets or sets the Internal DNS name
          type: string
        internalFqdn:
          description: "Gets or sets full IDNS name in the form, DnsName.VnetId.ZoneId.TopLevelSuffix.\
            \ This is set when the NIC is associated to a VM"
          type: string
      type: object
    NetworkInterfaceIpConfiguration:
      allOf:
      - $ref: '#/components/schemas/SubResource'
      description: IPConfiguration in a NetworkInterface
      example:
        name: name
        etag: etag
        properties:
          subnet:
            id: id
          loadBalancerInboundNatRules:
          - id: id
          - id: id
          privateIPAllocationMethod: Static
          privateIPAddress: privateIPAddress
          provisioningState: provisioningState
          loadBalancerBackendAddressPools:
          - id: id
          - id: id
          publicIPAddress:
            id: id
      properties:
        etag:
          description: A unique read-only string that changes whenever the resource
            is updated
          type: string
        name:
          description: Gets name of the resource that is unique within a resource
            group. This name can be used to access the resource
          type: string
        properties:
          $ref: '#/components/schemas/NetworkInterfaceIpConfigurationPropertiesFormat'
    NetworkInterfaceIpConfigurationPropertiesFormat:
      description: Properties of IPConfiguration
      example:
        subnet:
          id: id
        loadBalancerInboundNatRules:
        - id: id
        - id: id
        privateIPAllocationMethod: Static
        privateIPAddress: privateIPAddress
        provisioningState: provisioningState
        loadBalancerBackendAddressPools:
        - id: id
        - id: id
        publicIPAddress:
          id: id
      properties:
        loadBalancerBackendAddressPools:
          description: Gets or sets the reference of LoadBalancerBackendAddressPool
            resource
          items:
            $ref: '#/components/schemas/SubResource'
          type: array
        loadBalancerInboundNatRules:
          description: Gets or sets list of references of LoadBalancerInboundNatRules
          items:
            $ref: '#/components/schemas/SubResource'
          type: array
        privateIPAddress:
          description: Gets or sets the privateIPAddress of the Network Interface
            IP Configuration
          type: string
        privateIPAllocationMethod:
          description: Gets or sets PrivateIP allocation method (Static/Dynamic)
          enum:
          - Static
          - Dynamic
          type: string
          x-ms-enum:
            modelAsString: true
            name: IpAllocationMethod
        provisioningState:
          description: Gets or sets Provisioning state of the PublicIP resource Updating/Deleting/Failed
          type: string
        publicIPAddress:
          $ref: '#/components/schemas/SubResource'
        subnet:
          $ref: '#/components/schemas/SubResource'
      type: object
    NetworkInterfaceListResult:
      description: Response for ListNetworkInterface Api service call
      example:
        value:
        - etag: etag
          properties:
            ipConfigurations:
            - name: name
              etag: etag
              properties:
                subnet:
                  id: id
                loadBalancerInboundNatRules:
                - id: id
                - id: id
                privateIPAllocationMethod: Static
                privateIPAddress: privateIPAddress
                provisioningState: provisioningState
                loadBalancerBackendAddressPools:
                - id: id
                - id: id
                publicIPAddress:
                  id: id
            - name: name
              etag: etag
              properties:
                subnet:
                  id: id
                loadBalancerInboundNatRules:
                - id: id
                - id: id
                privateIPAllocationMethod: Static
                privateIPAddress: privateIPAddress
                provisioningState: provisioningState
                loadBalancerBackendAddressPools:
                - id: id
                - id: id
                publicIPAddress:
                  id: id
            virtualMachine:
              id: id
            macAddress: macAddress
            dnsSettings:
              appliedDnsServers:
              - appliedDnsServers
              - appliedDnsServers
              internalDnsNameLabel: internalDnsNameLabel
              internalFqdn: internalFqdn
              dnsServers:
              - dnsServers
              - dnsServers
            resourceGuid: resourceGuid
            provisioningState: provisioningState
            enableIPForwarding: true
            networkSecurityGroup:
              id: id
            primary: true
        - etag: etag
          properties:
            ipConfigurations:
            - name: name
              etag: etag
              properties:
                subnet:
                  id: id
                loadBalancerInboundNatRules:
                - id: id
                - id: id
                privateIPAllocationMethod: Static
                privateIPAddress: privateIPAddress
                provisioningState: provisioningState
                loadBalancerBackendAddressPools:
                - id: id
                - id: id
                publicIPAddress:
                  id: id
            - name: name
              etag: etag
              properties:
                subnet:
                  id: id
                loadBalancerInboundNatRules:
                - id: id
                - id: id
                privateIPAllocationMethod: Static
                privateIPAddress: privateIPAddress
                provisioningState: provisioningState
                loadBalancerBackendAddressPools:
                - id: id
                - id: id
                publicIPAddress:
                  id: id
            virtualMachine:
              id: id
            macAddress: macAddress
            dnsSettings:
              appliedDnsServers:
              - appliedDnsServers
              - appliedDnsServers
              internalDnsNameLabel: internalDnsNameLabel
              internalFqdn: internalFqdn
              dnsServers:
              - dnsServers
              - dnsServers
            resourceGuid: resourceGuid
            provisioningState: provisioningState
            enableIPForwarding: true
            networkSecurityGroup:
              id: id
            primary: true
        nextLink: nextLink
      properties:
        nextLink:
          description: Gets the URL to get the next set of results.
          type: string
        value:
          description: Gets or sets list of NetworkInterfaces in a resource group
          items:
            $ref: '#/components/schemas/NetworkInterface'
          type: array
      type: object
    NetworkInterfacePropertiesFormat:
      description: 'NetworkInterface properties. '
      example:
        ipConfigurations:
        - name: name
          etag: etag
          properties:
            subnet:
              id: id
            loadBalancerInboundNatRules:
            - id: id
            - id: id
            privateIPAllocationMethod: Static
            privateIPAddress: privateIPAddress
            provisioningState: provisioningState
            loadBalancerBackendAddressPools:
            - id: id
            - id: id
            publicIPAddress:
              id: id
        - name: name
          etag: etag
          properties:
            subnet:
              id: id
            loadBalancerInboundNatRules:
            - id: id
            - id: id
            privateIPAllocationMethod: Static
            privateIPAddress: privateIPAddress
            provisioningState: provisioningState
            loadBalancerBackendAddressPools:
            - id: id
            - id: id
            publicIPAddress:
              id: id
        virtualMachine:
          id: id
        macAddress: macAddress
        dnsSettings:
          appliedDnsServers:
          - appliedDnsServers
          - appliedDnsServers
          internalDnsNameLabel: internalDnsNameLabel
          internalFqdn: internalFqdn
          dnsServers:
          - dnsServers
          - dnsServers
        resourceGuid: resourceGuid
        provisioningState: provisioningState
        enableIPForwarding: true
        networkSecurityGroup:
          id: id
        primary: true
      properties:
        dnsSettings:
          $ref: '#/components/schemas/NetworkInterfaceDnsSettings'
        enableIPForwarding:
          description: Gets or sets whether IPForwarding is enabled on the NIC
          type: boolean
        ipConfigurations:
          description: Gets or sets list of IPConfigurations of the NetworkInterface
          items:
            $ref: '#/components/schemas/NetworkInterfaceIpConfiguration'
          type: array
        macAddress:
          description: Gets the MAC Address of the network interface
          type: string
        networkSecurityGroup:
          $ref: '#/components/schemas/SubResource'
        primary:
          description: Gets whether this is a primary NIC on a virtual machine
          type: boolean
        provisioningState:
          description: Gets or sets Provisioning state of the PublicIP resource Updating/Deleting/Failed
          type: string
        resourceGuid:
          description: Gets or sets resource guid property of the network interface
            resource
          type: string
        virtualMachine:
          $ref: '#/components/schemas/SubResource'
      type: object
    NetworkSecurityGroup:
      allOf:
      - $ref: '#/components/schemas/Resource'
      description: NetworkSecurityGroup resource
      example:
        etag: etag
        properties:
          defaultSecurityRules:
          - name: name
            etag: etag
            properties:
              destinationAddressPrefix: destinationAddressPrefix
              protocol: Tcp
              access: Allow
              sourcePortRange: sourcePortRange
              sourceAddressPrefix: sourceAddressPrefix
              destinationPortRange: destinationPortRange
              description: description
              provisioningState: provisioningState
              priority: 0
              direction: Inbound
          - name: name
            etag: etag
            properties:
              destinationAddressPrefix: destinationAddressPrefix
              protocol: Tcp
              access: Allow
              sourcePortRange: sourcePortRange
              sourceAddressPrefix: sourceAddressPrefix
              destinationPortRange: destinationPortRange
              description: description
              provisioningState: provisioningState
              priority: 0
              direction: Inbound
          networkInterfaces:
          - id: id
          - id: id
          resourceGuid: resourceGuid
          securityRules:
          - name: name
            etag: etag
            properties:
              destinationAddressPrefix: destinationAddressPrefix
              protocol: Tcp
              access: Allow
              sourcePortRange: sourcePortRange
              sourceAddressPrefix: sourceAddressPrefix
              destinationPortRange: destinationPortRange
              description: description
              provisioningState: provisioningState
              priority: 0
              direction: Inbound
          - name: name
            etag: etag
            properties:
              destinationAddressPrefix: destinationAddressPrefix
              protocol: Tcp
              access: Allow
              sourcePortRange: sourcePortRange
              sourceAddressPrefix: sourceAddressPrefix
              destinationPortRange: destinationPortRange
              description: description
              provisioningState: provisioningState
              priority: 0
              direction: Inbound
          subnets:
          - id: id
          - id: id
          provisioningState: provisioningState
      properties:
        etag:
          description: Gets a unique read-only string that changes whenever the resource
            is updated
          type: string
        properties:
          $ref: '#/components/schemas/NetworkSecurityGroupPropertiesFormat'
    NetworkSecurityGroupListResult:
      description: Response for ListNetworkSecurityGroups Api service call
      example:
        value:
        - etag: etag
          properties:
            defaultSecurityRules:
            - name: name
              etag: etag
              properties:
                destinationAddressPrefix: destinationAddressPrefix
                protocol: Tcp
                access: Allow
                sourcePortRange: sourcePortRange
                sourceAddressPrefix: sourceAddressPrefix
                destinationPortRange: destinationPortRange
                description: description
                provisioningState: provisioningState
                priority: 0
                direction: Inbound
            - name: name
              etag: etag
              properties:
                destinationAddressPrefix: destinationAddressPrefix
                protocol: Tcp
                access: Allow
                sourcePortRange: sourcePortRange
                sourceAddressPrefix: sourceAddressPrefix
                destinationPortRange: destinationPortRange
                description: description
                provisioningState: provisioningState
                priority: 0
                direction: Inbound
            networkInterfaces:
            - id: id
            - id: id
            resourceGuid: resourceGuid
            securityRules:
            - name: name
              etag: etag
              properties:
                destinationAddressPrefix: destinationAddressPrefix
                protocol: Tcp
                access: Allow
                sourcePortRange: sourcePortRange
                sourceAddressPrefix: sourceAddressPrefix
                destinationPortRange: destinationPortRange
                description: description
                provisioningState: provisioningState
                priority: 0
                direction: Inbound
            - name: name
              etag: etag
              properties:
                destinationAddressPrefix: destinationAddressPrefix
                protocol: Tcp
                access: Allow
                sourcePortRange: sourcePortRange
                sourceAddressPrefix: sourceAddressPrefix
                destinationPortRange: destinationPortRange
                description: description
                provisioningState: provisioningState
                priority: 0
                direction: Inbound
            subnets:
            - id: id
            - id: id
            provisioningState: provisioningState
        - etag: etag
          properties:
            defaultSecurityRules:
            - name: name
              etag: etag
              properties:
                destinationAddressPrefix: destinationAddressPrefix
                protocol: Tcp
                access: Allow
                sourcePortRange: sourcePortRange
                sourceAddressPrefix: sourceAddressPrefix
                destinationPortRange: destinationPortRange
                description: description
                provisioningState: provisioningState
                priority: 0
                direction: Inbound
            - name: name
              etag: etag
              properties:
                destinationAddressPrefix: destinationAddressPrefix
                protocol: Tcp
                access: Allow
                sourcePortRange: sourcePortRange
                sourceAddressPrefix: sourceAddressPrefix
                destinationPortRange: destinationPortRange
                description: description
                provisioningState: provisioningState
                priority: 0
                direction: Inbound
            networkInterfaces:
            - id: id
            - id: id
            resourceGuid: resourceGuid
            securityRules:
            - name: name
              etag: etag
              properties:
                destinationAddressPrefix: destinationAddressPrefix
                protocol: Tcp
                access: Allow
                sourcePortRange: sourcePortRange
                sourceAddressPrefix: sourceAddressPrefix
                destinationPortRange: destinationPortRange
                description: description
                provisioningState: provisioningState
                priority: 0
                direction: Inbound
            - name: name
              etag: etag
              properties:
                destinationAddressPrefix: destinationAddressPrefix
                protocol: Tcp
                access: Allow
                sourcePortRange: sourcePortRange
                sourceAddressPrefix: sourceAddressPrefix
                destinationPortRange: destinationPortRange
                description: description
                provisioningState: provisioningState
                priority: 0
                direction: Inbound
            subnets:
            - id: id
            - id: id
            provisioningState: provisioningState
        nextLink: nextLink
      properties:
        nextLink:
          description: Gets the URL to get the next set of results.
          type: string
        value:
          description: Gets List of NetworkSecurityGroups in a resource group
          items:
            $ref: '#/components/schemas/NetworkSecurityGroup'
          type: array
      type: object
    NetworkSecurityGroupPropertiesFormat:
      description: Network Security Group resource
      example:
        defaultSecurityRules:
        - name: name
          etag: etag
          properties:
            destinationAddressPrefix: destinationAddressPrefix
            protocol: Tcp
            access: Allow
            sourcePortRange: sourcePortRange
            sourceAddressPrefix: sourceAddressPrefix
            destinationPortRange: destinationPortRange
            description: description
            provisioningState: provisioningState
            priority: 0
            direction: Inbound
        - name: name
          etag: etag
          properties:
            destinationAddressPrefix: destinationAddressPrefix
            protocol: Tcp
            access: Allow
            sourcePortRange: sourcePortRange
            sourceAddressPrefix: sourceAddressPrefix
            destinationPortRange: destinationPortRange
            description: description
            provisioningState: provisioningState
            priority: 0
            direction: Inbound
        networkInterfaces:
        - id: id
        - id: id
        resourceGuid: resourceGuid
        securityRules:
        - name: name
          etag: etag
          properties:
            destinationAddressPrefix: destinationAddressPrefix
            protocol: Tcp
            access: Allow
            sourcePortRange: sourcePortRange
            sourceAddressPrefix: sourceAddressPrefix
            destinationPortRange: destinationPortRange
            description: description
            provisioningState: provisioningState
            priority: 0
            direction: Inbound
        - name: name
          etag: etag
          properties:
            destinationAddressPrefix: destinationAddressPrefix
            protocol: Tcp
            access: Allow
            sourcePortRange: sourcePortRange
            sourceAddressPrefix: sourceAddressPrefix
            destinationPortRange: destinationPortRange
            description: description
            provisioningState: provisioningState
            priority: 0
            direction: Inbound
        subnets:
        - id: id
        - id: id
        provisioningState: provisioningState
      properties:
        defaultSecurityRules:
          description: Gets or sets Default security rules of network security group
          items:
            $ref: '#/components/schemas/SecurityRule'
          type: array
        networkInterfaces:
          description: Gets collection of references to Network Interfaces
          items:
            $ref: '#/components/schemas/SubResource'
          type: array
        provisioningState:
          description: Gets or sets Provisioning state of the PublicIP resource Updating/Deleting/Failed
          type: string
        resourceGuid:
          description: Gets or sets resource guid property of the network security
            group resource
          type: string
        securityRules:
          description: Gets or sets Security rules of network security group
          items:
            $ref: '#/components/schemas/SecurityRule'
          type: array
        subnets:
          description: Gets collection of references to subnets
          items:
            $ref: '#/components/schemas/SubResource'
          type: array
      type: object
    OutboundNatRule:
      allOf:
      - $ref: '#/components/schemas/SubResource'
      description: Outbound NAT pool of the loadbalancer
      example:
        name: name
        etag: etag
        properties:
          allocatedOutboundPorts: 2
          backendAddressPool:
            id: id
          frontendIPConfigurations:
          - id: id
          - id: id
          provisioningState: provisioningState
      properties:
        etag:
          description: A unique read-only string that changes whenever the resource
            is updated
          type: string
        name:
          description: Gets name of the resource that is unique within a resource
            group. This name can be used to access the resource
          type: string
        properties:
          $ref: '#/components/schemas/OutboundNatRulePropertiesFormat'
    OutboundNatRulePropertiesFormat:
      description: Outbound NAT pool of the loadbalancer
      example:
        allocatedOutboundPorts: 2
        backendAddressPool:
          id: id
        frontendIPConfigurations:
        - id: id
        - id: id
        provisioningState: provisioningState
      properties:
        allocatedOutboundPorts:
          description: Gets or sets the number of outbound ports to be used for SNAT
          format: int32
          type: integer
        backendAddressPool:
          $ref: '#/components/schemas/SubResource'
        frontendIPConfigurations:
          description: Gets or sets Frontend IP addresses of the load balancer
          items:
            $ref: '#/components/schemas/SubResource'
          type: array
        provisioningState:
          description: Gets or sets Provisioning state of the PublicIP resource Updating/Deleting/Failed
          type: string
      required:
      - allocatedOutboundPorts
      - backendAddressPool
      type: object
    Probe:
      allOf:
      - $ref: '#/components/schemas/SubResource'
      description: Load balancer Probe
      example:
        name: name
        etag: etag
        properties:
          loadBalancingRules:
          - id: id
          - id: id
          protocol: Http
          port: 1
          intervalInSeconds: 4
          numberOfProbes: 7
          provisioningState: provisioningState
          requestPath: requestPath
      properties:
        etag:
          description: A unique read-only string that changes whenever the resource
            is updated
          type: string
        name:
          description: Gets name of the resource that is unique within a resource
            group. This name can be used to access the resource
          type: string
        properties:
          $ref: '#/components/schemas/ProbePropertiesFormat'
    ProbePropertiesFormat:
      example:
        loadBalancingRules:
        - id: id
        - id: id
        protocol: Http
        port: 1
        intervalInSeconds: 4
        numberOfProbes: 7
        provisioningState: provisioningState
        requestPath: requestPath
      properties:
        intervalInSeconds:
          description: "Gets or sets the interval, in seconds, for how frequently\
            \ to probe the endpoint for health status. Typically, the interval is\
            \ slightly less than half the allocated timeout period (in seconds) which\
            \ allows two full probes before taking the instance out of rotation. The\
            \ default value is 15, the minimum value is 5"
          format: int32
          type: integer
        loadBalancingRules:
          description: Gets Load balancer rules that use this probe
          items:
            $ref: '#/components/schemas/SubResource'
          type: array
        numberOfProbes:
          description: "Gets or sets the number of probes where if no response, will\
            \ result in stopping further traffic from being delivered to the endpoint.\
            \ This values allows endpoints to be taken out of rotation faster or slower\
            \ than the typical times used in Azure. "
          format: int32
          type: integer
        port:
          description: "Gets or sets Port for communicating the probe. Possible values\
            \ range from 1 to 65535, inclusive."
          format: int32
          type: integer
        protocol:
          description: "Gets or sets the protocol of the end point. Possible values\
            \ are http pr Tcp. If Tcp is specified, a received ACK is required for\
            \ the probe to be successful. If http is specified,a 200 OK response from\
            \ the specifies URI is required for the probe to be successful"
          enum:
          - Http
          - Tcp
          type: string
          x-ms-enum:
            modelAsString: true
            name: ProbeProtocol
        provisioningState:
          description: Gets or sets Provisioning state of the PublicIP resource Updating/Deleting/Failed
          type: string
        requestPath:
          description: "Gets or sets the URI used for requesting health status from\
            \ the VM. Path is required if a protocol is set to http. Otherwise, it\
            \ is not allowed. There is no default value"
          type: string
      required:
      - port
      - protocol
      type: object
    PublicIpAddress:
      allOf:
      - $ref: '#/components/schemas/Resource'
      description: PublicIPAddress resource
      example:
        etag: etag
        properties:
          dnsSettings:
            reverseFqdn: reverseFqdn
            fqdn: fqdn
            domainNameLabel: domainNameLabel
          ipConfiguration:
            id: id
          resourceGuid: resourceGuid
          idleTimeoutInMinutes: 0
          ipAddress: ipAddress
          provisioningState: provisioningState
          publicIPAllocationMethod: Static
      properties:
        etag:
          description: Gets a unique read-only string that changes whenever the resource
            is updated
          type: string
        properties:
          $ref: '#/components/schemas/PublicIpAddressPropertiesFormat'
    PublicIpAddressDnsSettings:
      description: Contains FQDN of the DNS record associated with the public IP address
      example:
        reverseFqdn: reverseFqdn
        fqdn: fqdn
        domainNameLabel: domainNameLabel
      properties:
        domainNameLabel:
          description: "Gets or sets the Domain name label.The concatenation of the\
            \ domain name label and the regionalized DNS zone make up the fully qualified\
            \ domain name associated with the public IP address. If a domain name\
            \ label is specified, an A DNS record is created for the public IP in\
            \ the Microsoft Azure DNS system."
          type: string
        fqdn:
          description: "Gets the FQDN, Fully qualified domain name of the A DNS record\
            \ associated with the public IP. This is the concatenation of the domainNameLabel\
            \ and the regionalized DNS zone."
          type: string
        reverseFqdn:
          description: "Gets or Sets the Reverse FQDN. A user-visible, fully qualified\
            \ domain name that resolves to this public IP address. If the reverseFqdn\
            \ is specified, then a PTR DNS record is created pointing from the IP\
            \ address in the in-addr.arpa domain to the reverse FQDN. "
          type: string
      type: object
    PublicIpAddressListResult:
      description: Response for ListPublicIpAddresses Api service call
      example:
        value:
        - etag: etag
          properties:
            dnsSettings:
              reverseFqdn: reverseFqdn
              fqdn: fqdn
              domainNameLabel: domainNameLabel
            ipConfiguration:
              id: id
            resourceGuid: resourceGuid
            idleTimeoutInMinutes: 0
            ipAddress: ipAddress
            provisioningState: provisioningState
            publicIPAllocationMethod: Static
        - etag: etag
          properties:
            dnsSettings:
              reverseFqdn: reverseFqdn
              fqdn: fqdn
              domainNameLabel: domainNameLabel
            ipConfiguration:
              id: id
            resourceGuid: resourceGuid
            idleTimeoutInMinutes: 0
            ipAddress: ipAddress
            provisioningState: provisioningState
            publicIPAllocationMethod: Static
        nextLink: nextLink
      properties:
        nextLink:
          description: Gets the URL to get the next set of results.
          type: string
        value:
          description: Gets List of publicIP addresses that exists in a resource group
          items:
            $ref: '#/components/schemas/PublicIpAddress'
          type: array
      type: object
    PublicIpAddressPropertiesFormat:
      description: PublicIpAddress properties
      example:
        dnsSettings:
          reverseFqdn: reverseFqdn
          fqdn: fqdn
          domainNameLabel: domainNameLabel
        ipConfiguration:
          id: id
        resourceGuid: resourceGuid
        idleTimeoutInMinutes: 0
        ipAddress: ipAddress
        provisioningState: provisioningState
        publicIPAllocationMethod: Static
      properties:
        dnsSettings:
          $ref: '#/components/schemas/PublicIpAddressDnsSettings'
        idleTimeoutInMinutes:
          description: Gets or sets the idle timeout of the public IP address
          format: int32
          type: integer
        ipAddress:
          description: Gets the assigned public IP address
          type: string
        ipConfiguration:
          $ref: '#/components/schemas/SubResource'
        provisioningState:
          description: Gets or sets Provisioning state of the PublicIP resource Updating/Deleting/Failed
          type: string
        publicIPAllocationMethod:
          description: Gets or sets PublicIP allocation method (Static/Dynamic)
          enum:
          - Static
          - Dynamic
          type: string
          x-ms-enum:
            modelAsString: true
            name: IpAllocationMethod
        resourceGuid:
          description: Gets or sets resource guid property of the PublicIP resource
          type: string
      required:
      - publicIPAllocationMethod
      type: object
    Resource:
      properties:
        id:
          description: Resource Id
          readOnly: true
          type: string
        location:
          description: Resource location
          type: string
        name:
          description: Resource name
          readOnly: true
          type: string
        tags:
          additionalProperties:
            type: string
          description: Resource tags
          type: object
        type:
          description: Resource type
          readOnly: true
          type: string
      required:
      - location
      type: object
      x-ms-azure-resource: true
    Route:
      allOf:
      - $ref: '#/components/schemas/SubResource'
      description: Route resource
      example:
        name: name
        etag: etag
        properties:
          addressPrefix: addressPrefix
          nextHopType: VirtualNetworkGateway
          nextHopIpAddress: nextHopIpAddress
          provisioningState: provisioningState
      properties:
        etag:
          description: A unique read-only string that changes whenever the resource
            is updated
          type: string
        name:
          description: Gets name of the resource that is unique within a resource
            group. This name can be used to access the resource
          type: string
        properties:
          $ref: '#/components/schemas/RoutePropertiesFormat'
    RouteListResult:
      description: Response for ListRoute Api service call
      example:
        value:
        - name: name
          etag: etag
          properties:
            addressPrefix: addressPrefix
            nextHopType: VirtualNetworkGateway
            nextHopIpAddress: nextHopIpAddress
            provisioningState: provisioningState
        - name: name
          etag: etag
          properties:
            addressPrefix: addressPrefix
            nextHopType: VirtualNetworkGateway
            nextHopIpAddress: nextHopIpAddress
            provisioningState: provisioningState
        nextLink: nextLink
      properties:
        nextLink:
          description: Gets the URL to get the next set of results.
          type: string
        value:
          description: Gets List of Routes in a resource group
          items:
            $ref: '#/components/schemas/Route'
          type: array
      type: object
    RoutePropertiesFormat:
      description: Route resource
      example:
        addressPrefix: addressPrefix
        nextHopType: VirtualNetworkGateway
        nextHopIpAddress: nextHopIpAddress
        provisioningState: provisioningState
      properties:
        addressPrefix:
          description: Gets or sets the destination CIDR to which the route applies.
          type: string
        nextHopIpAddress:
          description: Gets or sets the IP address packets should be forwarded to.
            Next hop values are only allowed in routes where the next hop type is
            VirtualAppliance.
          type: string
        nextHopType:
          description: Gets or sets the type of Azure hop the packet should be sent
            to.
          enum:
          - VirtualNetworkGateway
          - VnetLocal
          - Internet
          - VirtualAppliance
          - None
          type: string
          x-ms-enum:
            modelAsString: true
            name: RouteNextHopType
        provisioningState:
          description: Gets or sets Provisioning state of the resource Updating/Deleting/Failed
          type: string
      required:
      - nextHopType
      type: object
    RouteTable:
      allOf:
      - $ref: '#/components/schemas/Resource'
      description: RouteTable resource
      example:
        etag: etag
        properties:
          routes:
          - name: name
            etag: etag
            properties:
              addressPrefix: addressPrefix
              nextHopType: VirtualNetworkGateway
              nextHopIpAddress: nextHopIpAddress
              provisioningState: provisioningState
          - name: name
            etag: etag
            properties:
              addressPrefix: addressPrefix
              nextHopType: VirtualNetworkGateway
              nextHopIpAddress: nextHopIpAddress
              provisioningState: provisioningState
          subnets:
          - id: id
          - id: id
          provisioningState: provisioningState
      properties:
        etag:
          description: Gets a unique read-only string that changes whenever the resource
            is updated
          type: string
        properties:
          $ref: '#/components/schemas/RouteTablePropertiesFormat'
    RouteTableListResult:
      description: Response for ListRouteTable Api service call
      example:
        value:
        - etag: etag
          properties:
            routes:
            - name: name
              etag: etag
              properties:
                addressPrefix: addressPrefix
                nextHopType: VirtualNetworkGateway
                nextHopIpAddress: nextHopIpAddress
                provisioningState: provisioningState
            - name: name
              etag: etag
              properties:
                addressPrefix: addressPrefix
                nextHopType: VirtualNetworkGateway
                nextHopIpAddress: nextHopIpAddress
                provisioningState: provisioningState
            subnets:
            - id: id
            - id: id
            provisioningState: provisioningState
        - etag: etag
          properties:
            routes:
            - name: name
              etag: etag
              properties:
                addressPrefix: addressPrefix
                nextHopType: VirtualNetworkGateway
                nextHopIpAddress: nextHopIpAddress
                provisioningState: provisioningState
            - name: name
              etag: etag
              properties:
                addressPrefix: addressPrefix
                nextHopType: VirtualNetworkGateway
                nextHopIpAddress: nextHopIpAddress
                provisioningState: provisioningState
            subnets:
            - id: id
            - id: id
            provisioningState: provisioningState
        nextLink: nextLink
      properties:
        nextLink:
          description: Gets the URL to get the next set of results.
          type: string
        value:
          description: Gets List of RouteTables in a resource group
          items:
            $ref: '#/components/schemas/RouteTable'
          type: array
      type: object
    RouteTablePropertiesFormat:
      description: Route Table resource
      example:
        routes:
        - name: name
          etag: etag
          properties:
            addressPrefix: addressPrefix
            nextHopType: VirtualNetworkGateway
            nextHopIpAddress: nextHopIpAddress
            provisioningState: provisioningState
        - name: name
          etag: etag
          properties:
            addressPrefix: addressPrefix
            nextHopType: VirtualNetworkGateway
            nextHopIpAddress: nextHopIpAddress
            provisioningState: provisioningState
        subnets:
        - id: id
        - id: id
        provisioningState: provisioningState
      properties:
        provisioningState:
          description: Gets or sets Provisioning state of the resource Updating/Deleting/Failed
          type: string
        routes:
          description: Gets or sets Routes in a Route Table
          items:
            $ref: '#/components/schemas/Route'
          type: array
        subnets:
          description: Gets collection of references to subnets
          items:
            $ref: '#/components/schemas/SubResource'
          type: array
      type: object
    SecurityRule:
      allOf:
      - $ref: '#/components/schemas/SubResource'
      description: Network security rule
      example:
        name: name
        etag: etag
        properties:
          destinationAddressPrefix: destinationAddressPrefix
          protocol: Tcp
          access: Allow
          sourcePortRange: sourcePortRange
          sourceAddressPrefix: sourceAddressPrefix
          destinationPortRange: destinationPortRange
          description: description
          provisioningState: provisioningState
          priority: 0
          direction: Inbound
      properties:
        etag:
          description: A unique read-only string that changes whenever the resource
            is updated
          type: string
        name:
          description: Gets name of the resource that is unique within a resource
            group. This name can be used to access the resource
          type: string
        properties:
          $ref: '#/components/schemas/SecurityRulePropertiesFormat'
    SecurityRuleListResult:
      description: Response for ListSecurityRule Api service callRetrieves all security
        rules that belongs to a network security group
      example:
        value:
        - name: name
          etag: etag
          properties:
            destinationAddressPrefix: destinationAddressPrefix
            protocol: Tcp
            access: Allow
            sourcePortRange: sourcePortRange
            sourceAddressPrefix: sourceAddressPrefix
            destinationPortRange: destinationPortRange
            description: description
            provisioningState: provisioningState
            priority: 0
            direction: Inbound
        - name: name
          etag: etag
          properties:
            destinationAddressPrefix: destinationAddressPrefix
            protocol: Tcp
            access: Allow
            sourcePortRange: sourcePortRange
            sourceAddressPrefix: sourceAddressPrefix
            destinationPortRange: destinationPortRange
            description: description
            provisioningState: provisioningState
            priority: 0
            direction: Inbound
        nextLink: nextLink
      properties:
        nextLink:
          description: Gets the URL to get the next set of results.
          type: string
        value:
          description: Gets security rules in a network security group
          items:
            $ref: '#/components/schemas/SecurityRule'
          type: array
      type: object
    SecurityRulePropertiesFormat:
      example:
        destinationAddressPrefix: destinationAddressPrefix
        protocol: Tcp
        access: Allow
        sourcePortRange: sourcePortRange
        sourceAddressPrefix: sourceAddressPrefix
        destinationPortRange: destinationPortRange
        description: description
        provisioningState: provisioningState
        priority: 0
        direction: Inbound
      properties:
        access:
          description: Gets or sets network traffic is allowed or denied. Possible
            values are 'Allow' and 'Deny'
          enum:
          - Allow
          - Deny
          type: string
          x-ms-enum:
            modelAsString: true
            name: SecurityRuleAccess
        description:
          description: Gets or sets a description for this rule. Restricted to 140
            chars.
          type: string
        destinationAddressPrefix:
          description: "Gets or sets destination address prefix. CIDR or source IP\
            \ range. Asterisk '*' can also be used to match all source IPs. Default\
            \ tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can\
            \ also be used. "
          type: string
        destinationPortRange:
          description: Gets or sets Destination Port or Range. Integer or range between
            0 and 65535. Asterisk '*' can also be used to match all ports.
          type: string
        direction:
          description: Gets or sets the direction of the rule.InBound or Outbound.
            The direction specifies if rule will be evaluated on incoming or outgoing
            traffic.
          enum:
          - Inbound
          - Outbound
          type: string
          x-ms-enum:
            modelAsString: true
            name: SecurityRuleDirection
        priority:
          description: "Gets or sets the priority of the rule. The value can be between\
            \ 100 and 4096. The priority number must be unique for each rule in the\
            \ collection. The lower the priority number, the higher the priority of\
            \ the rule."
          format: int32
          type: integer
        protocol:
          description: "Gets or sets Network protocol this rule applies to. Can be\
            \ Tcp, Udp or All(*)."
          enum:
          - Tcp
          - Udp
          - '*'
          type: string
          x-ms-enum:
            modelAsString: true
            name: SecurityRuleProtocol
        provisioningState:
          description: Gets or sets Provisioning state of the PublicIP resource Updating/Deleting/Failed
          type: string
        sourceAddressPrefix:
          description: "Gets or sets source address prefix. CIDR or source IP range.\
            \ Asterisk '*' can also be used to match all source IPs. Default tags\
            \ such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also\
            \ be used. If this is an ingress rule, specifies where network traffic\
            \ originates from. "
          type: string
        sourcePortRange:
          description: Gets or sets Source Port or Range. Integer or range between
            0 and 65535. Asterisk '*' can also be used to match all ports.
          type: string
      required:
      - access
      - destinationAddressPrefix
      - direction
      - protocol
      - sourceAddressPrefix
      type: object
    SubResource:
      example:
        id: id
      properties:
        id:
          description: Resource Id
          type: string
      type: object
      x-ms-azure-resource: true
    Subnet:
      allOf:
      - $ref: '#/components/schemas/SubResource'
      description: Subnet in a VirtualNetwork resource
      example:
        name: name
        etag: etag
        properties:
          ipConfigurations:
          - id: id
          - id: id
          routeTable:
            id: id
          addressPrefix: addressPrefix
          provisioningState: provisioningState
          networkSecurityGroup:
            id: id
      properties:
        etag:
          description: A unique read-only string that changes whenever the resource
            is updated
          type: string
        name:
          description: Gets name of the resource that is unique within a resource
            group. This name can be used to access the resource
          type: string
        properties:
          $ref: '#/components/schemas/SubnetPropertiesFormat'
    SubnetListResult:
      description: Response for ListSubnets Api service callRetrieves all subnet that
        belongs to a virtual network
      example:
        value:
        - name: name
          etag: etag
          properties:
            ipConfigurations:
            - id: id
            - id: id
            routeTable:
              id: id
            addressPrefix: addressPrefix
            provisioningState: provisioningState
            networkSecurityGroup:
              id: id
        - name: name
          etag: etag
          properties:
            ipConfigurations:
            - id: id
            - id: id
            routeTable:
              id: id
            addressPrefix: addressPrefix
            provisioningState: provisioningState
            networkSecurityGroup:
              id: id
        nextLink: nextLink
      properties:
        nextLink:
          description: Gets the URL to get the next set of results.
          type: string
        value:
          description: Gets the subnets in a virtual network
          items:
            $ref: '#/components/schemas/Subnet'
          type: array
      type: object
    SubnetPropertiesFormat:
      example:
        ipConfigurations:
        - id: id
        - id: id
        routeTable:
          id: id
        addressPrefix: addressPrefix
        provisioningState: provisioningState
        networkSecurityGroup:
          id: id
      properties:
        addressPrefix:
          description: Gets or sets Address prefix for the subnet.
          type: string
        ipConfigurations:
          description: Gets array of references to the network interface IP configurations
            using subnet
          items:
            $ref: '#/components/schemas/SubResource'
          type: array
        networkSecurityGroup:
          $ref: '#/components/schemas/SubResource'
        provisioningState:
          description: Gets or sets Provisioning state of the PublicIP resource Updating/Deleting/Failed
          type: string
        routeTable:
          $ref: '#/components/schemas/SubResource'
      required:
      - addressPrefix
      type: object
    Usage:
      description: Describes Network Resource Usage.
      example:
        unit: Count
        limit: 6
        name:
          localizedValue: localizedValue
          value: value
        currentValue: 0
      properties:
        currentValue:
          description: Gets or sets the current value of the usage.
          format: int32
          type: integer
        limit:
          description: Gets or sets the limit of usage.
          format: int64
          type: integer
        name:
          $ref: '#/components/schemas/UsageName'
        unit:
          description: Gets or sets an enum describing the unit of measurement.
          enum:
          - Count
          type: string
          x-ms-enum:
            modelAsString: true
            name: UsageUnit
      required:
      - currentValue
      - limit
      - name
      - unit
      type: object
    UsageName:
      description: The Usage Names.
      example:
        localizedValue: localizedValue
        value: value
      properties:
        localizedValue:
          description: Gets or sets a localized string describing the resource name.
          type: string
        value:
          description: Gets or sets a string describing the resource name.
          type: string
      type: object
    UsagesListResult:
      description: The List Usages operation response.
      example:
        value:
        - unit: Count
          limit: 6
          name:
            localizedValue: localizedValue
            value: value
          currentValue: 0
        - unit: Count
          limit: 6
          name:
            localizedValue: localizedValue
            value: value
          currentValue: 0
        nextLink: nextLink
      properties:
        nextLink:
          description: URL to get the next set of results.
          type: string
        value:
          description: Gets or sets the list Network Resource Usages.
          items:
            $ref: '#/components/schemas/Usage'
          type: array
      type: object
    VirtualNetwork:
      allOf:
      - $ref: '#/components/schemas/Resource'
      description: Virtual Network resource
      example:
        etag: etag
        properties:
          resourceGuid: resourceGuid
          addressSpace:
            addressPrefixes:
            - addressPrefixes
            - addressPrefixes
          dhcpOptions:
            dnsServers:
            - dnsServers
            - dnsServers
          subnets:
          - name: name
            etag: etag
            properties:
              ipConfigurations:
              - id: id
              - id: id
              routeTable:
                id: id
              addressPrefix: addressPrefix
              provisioningState: provisioningState
              networkSecurityGroup:
                id: id
          - name: name
            etag: etag
            properties:
              ipConfigurations:
              - id: id
              - id: id
              routeTable:
                id: id
              addressPrefix: addressPrefix
              provisioningState: provisioningState
              networkSecurityGroup:
                id: id
          provisioningState: provisioningState
      properties:
        etag:
          description: Gets a unique read-only string that changes whenever the resource
            is updated
          type: string
        properties:
          $ref: '#/components/schemas/VirtualNetworkPropertiesFormat'
    VirtualNetworkGateway:
      allOf:
      - $ref: '#/components/schemas/Resource'
      description: A common class for general resource information
      example:
        etag: etag
        properties:
          ipConfigurations:
          - name: name
            etag: etag
            properties:
              subnet:
                id: id
              privateIPAllocationMethod: Static
              privateIPAddress: privateIPAddress
              provisioningState: provisioningState
              publicIPAddress:
                id: id
          - name: name
            etag: etag
            properties:
              subnet:
                id: id
              privateIPAllocationMethod: Static
              privateIPAddress: privateIPAddress
              provisioningState: provisioningState
              publicIPAddress:
                id: id
          enableBgp: true
          gatewayType: Vpn
          resourceGuid: resourceGuid
          vpnType: PolicyBased
          provisioningState: provisioningState
          gatewayDefaultSite:
            id: id
      properties:
        etag:
          description: Gets a unique read-only string that changes whenever the resource
            is updated
          type: string
        properties:
          $ref: '#/components/schemas/VirtualNetworkGatewayPropertiesFormat'
    VirtualNetworkGatewayConnection:
      allOf:
      - $ref: '#/components/schemas/Resource'
      description: A common class for general resource information
      example:
        etag: etag
        properties:
          sharedKey: sharedKey
          ingressBytesTransferred: 6
          peer:
            id: id
          resourceGuid: resourceGuid
          localNetworkGateway2:
            etag: etag
            properties:
              localNetworkAddressSpace:
                addressPrefixes:
                - addressPrefixes
                - addressPrefixes
              resourceGuid: resourceGuid
              gatewayIpAddress: gatewayIpAddress
              provisioningState: provisioningState
          connectionStatus: Unknown
          virtualNetworkGateway1:
            etag: etag
            properties:
              ipConfigurations:
              - name: name
                etag: etag
                properties:
                  subnet:
                    id: id
                  privateIPAllocationMethod: Static
                  privateIPAddress: privateIPAddress
                  provisioningState: provisioningState
                  publicIPAddress:
                    id: id
              - name: name
                etag: etag
                properties:
                  subnet:
                    id: id
                  privateIPAllocationMethod: Static
                  privateIPAddress: privateIPAddress
                  provisioningState: provisioningState
                  publicIPAddress:
                    id: id
              enableBgp: true
              gatewayType: Vpn
              resourceGuid: resourceGuid
              vpnType: PolicyBased
              provisioningState: provisioningState
              gatewayDefaultSite:
                id: id
          routingWeight: 1
          virtualNetworkGateway2:
            etag: etag
            properties:
              ipConfigurations:
              - name: name
                etag: etag
                properties:
                  subnet:
                    id: id
                  privateIPAllocationMethod: Static
                  privateIPAddress: privateIPAddress
                  provisioningState: provisioningState
                  publicIPAddress:
                    id: id
              - name: name
                etag: etag
                properties:
                  subnet:
                    id: id
                  privateIPAllocationMethod: Static
                  privateIPAddress: privateIPAddress
                  provisioningState: provisioningState
                  publicIPAddress:
                    id: id
              enableBgp: true
              gatewayType: Vpn
              resourceGuid: resourceGuid
              vpnType: PolicyBased
              provisioningState: provisioningState
              gatewayDefaultSite:
                id: id
          egressBytesTransferred: 0
          provisioningState: provisioningState
          connectionType: IPsec
      properties:
        etag:
          description: Gets a unique read-only string that changes whenever the resource
            is updated
          type: string
        properties:
          $ref: '#/components/schemas/VirtualNetworkGatewayConnectionPropertiesFormat'
    VirtualNetworkGatewayConnectionListResult:
      description: Response for ListVirtualNetworkGatewayConnections Api service call
      example:
        value:
        - etag: etag
          properties:
            sharedKey: sharedKey
            ingressBytesTransferred: 6
            peer:
              id: id
            resourceGuid: resourceGuid
            localNetworkGateway2:
              etag: etag
              properties:
                localNetworkAddressSpace:
                  addressPrefixes:
                  - addressPrefixes
                  - addressPrefixes
                resourceGuid: resourceGuid
                gatewayIpAddress: gatewayIpAddress
                provisioningState: provisioningState
            connectionStatus: Unknown
            virtualNetworkGateway1:
              etag: etag
              properties:
                ipConfigurations:
                - name: name
                  etag: etag
                  properties:
                    subnet:
                      id: id
                    privateIPAllocationMethod: Static
                    privateIPAddress: privateIPAddress
                    provisioningState: provisioningState
                    publicIPAddress:
                      id: id
                - name: name
                  etag: etag
                  properties:
                    subnet:
                      id: id
                    privateIPAllocationMethod: Static
                    privateIPAddress: privateIPAddress
                    provisioningState: provisioningState
                    publicIPAddress:
                      id: id
                enableBgp: true
                gatewayType: Vpn
                resourceGuid: resourceGuid
                vpnType: PolicyBased
                provisioningState: provisioningState
                gatewayDefaultSite:
                  id: id
            routingWeight: 1
            virtualNetworkGateway2:
              etag: etag
              properties:
                ipConfigurations:
                - name: name
                  etag: etag
                  properties:
                    subnet:
                      id: id
                    privateIPAllocationMethod: Static
                    privateIPAddress: privateIPAddress
                    provisioningState: provisioningState
                    publicIPAddress:
                      id: id
                - name: name
                  etag: etag
                  properties:
                    subnet:
                      id: id
                    privateIPAllocationMethod: Static
                    privateIPAddress: privateIPAddress
                    provisioningState: provisioningState
                    publicIPAddress:
                      id: id
                enableBgp: true
                gatewayType: Vpn
                resourceGuid: resourceGuid
                vpnType: PolicyBased
                provisioningState: provisioningState
                gatewayDefaultSite:
                  id: id
            egressBytesTransferred: 0
            provisioningState: provisioningState
            connectionType: IPsec
        - etag: etag
          properties:
            sharedKey: sharedKey
            ingressBytesTransferred: 6
            peer:
              id: id
            resourceGuid: resourceGuid
            localNetworkGateway2:
              etag: etag
              properties:
                localNetworkAddressSpace:
                  addressPrefixes:
                  - addressPrefixes
                  - addressPrefixes
                resourceGuid: resourceGuid
                gatewayIpAddress: gatewayIpAddress
                provisioningState: provisioningState
            connectionStatus: Unknown
            virtualNetworkGateway1:
              etag: etag
              properties:
                ipConfigurations:
                - name: name
                  etag: etag
                  properties:
                    subnet:
                      id: id
                    privateIPAllocationMethod: Static
                    privateIPAddress: privateIPAddress
                    provisioningState: provisioningState
                    publicIPAddress:
                      id: id
                - name: name
                  etag: etag
                  properties:
                    subnet:
                      id: id
                    privateIPAllocationMethod: Static
                    privateIPAddress: privateIPAddress
                    provisioningState: provisioningState
                    publicIPAddress:
                      id: id
                enableBgp: true
                gatewayType: Vpn
                resourceGuid: resourceGuid
                vpnType: PolicyBased
                provisioningState: provisioningState
                gatewayDefaultSite:
                  id: id
            routingWeight: 1
            virtualNetworkGateway2:
              etag: etag
              properties:
                ipConfigurations:
                - name: name
                  etag: etag
                  properties:
                    subnet:
                      id: id
                    privateIPAllocationMethod: Static
                    privateIPAddress: privateIPAddress
                    provisioningState: provisioningState
                    publicIPAddress:
                      id: id
                - name: name
                  etag: etag
                  properties:
                    subnet:
                      id: id
                    privateIPAllocationMethod: Static
                    privateIPAddress: privateIPAddress
                    provisioningState: provisioningState
                    publicIPAddress:
                      id: id
                enableBgp: true
                gatewayType: Vpn
                resourceGuid: resourceGuid
                vpnType: PolicyBased
                provisioningState: provisioningState
                gatewayDefaultSite:
                  id: id
            egressBytesTransferred: 0
            provisioningState: provisioningState
            connectionType: IPsec
        nextLink: nextLink
      properties:
        nextLink:
          description: Gets the URL to get the next set of results.
          type: string
        value:
          description: Gets List of VirtualNetworkGatewayConnections that exists in
            a resource group
          items:
            $ref: '#/components/schemas/VirtualNetworkGatewayConnection'
          type: array
      type: object
    VirtualNetworkGatewayConnectionPropertiesFormat:
      description: VirtualNetworkGatewayConnection properties
      example:
        sharedKey: sharedKey
        ingressBytesTransferred: 6
        peer:
          id: id
        resourceGuid: resourceGuid
        localNetworkGateway2:
          etag: etag
          properties:
            localNetworkAddressSpace:
              addressPrefixes:
              - addressPrefixes
              - addressPrefixes
            resourceGuid: resourceGuid
            gatewayIpAddress: gatewayIpAddress
            provisioningState: provisioningState
        connectionStatus: Unknown
        virtualNetworkGateway1:
          etag: etag
          properties:
            ipConfigurations:
            - name: name
              etag: etag
              properties:
                subnet:
                  id: id
                privateIPAllocationMethod: Static
                privateIPAddress: privateIPAddress
                provisioningState: provisioningState
                publicIPAddress:
                  id: id
            - name: name
              etag: etag
              properties:
                subnet:
                  id: id
                privateIPAllocationMethod: Static
                privateIPAddress: privateIPAddress
                provisioningState: provisioningState
                publicIPAddress:
                  id: id
            enableBgp: true
            gatewayType: Vpn
            resourceGuid: resourceGuid
            vpnType: PolicyBased
            provisioningState: provisioningState
            gatewayDefaultSite:
              id: id
        routingWeight: 1
        virtualNetworkGateway2:
          etag: etag
          properties:
            ipConfigurations:
            - name: name
              etag: etag
              properties:
                subnet:
                  id: id
                privateIPAllocationMethod: Static
                privateIPAddress: privateIPAddress
                provisioningState: provisioningState
                publicIPAddress:
                  id: id
            - name: name
              etag: etag
              properties:
                subnet:
                  id: id
                privateIPAllocationMethod: Static
                privateIPAddress: privateIPAddress
                provisioningState: provisioningState
                publicIPAddress:
                  id: id
            enableBgp: true
            gatewayType: Vpn
            resourceGuid: resourceGuid
            vpnType: PolicyBased
            provisioningState: provisioningState
            gatewayDefaultSite:
              id: id
        egressBytesTransferred: 0
        provisioningState: provisioningState
        connectionType: IPsec
      properties:
        connectionStatus:
          description: Virtual network Gateway connection status
          enum:
          - Unknown
          - Connecting
          - Connected
          - NotConnected
          type: string
          x-ms-enum:
            modelAsString: true
            name: VirtualNetworkGatewayConnectionStatus
        connectionType:
          description: Gateway connection type IPsec/Dedicated/VpnClient/Vnet2Vnet
          enum:
          - IPsec
          - Vnet2Vnet
          - ExpressRoute
          - VPNClient
          type: string
          x-ms-enum:
            modelAsString: true
            name: VirtualNetworkGatewayConnectionType
        egressBytesTransferred:
          description: The Egress Bytes Transferred in this connection
          format: int64
          type: integer
        ingressBytesTransferred:
          description: The Ingress Bytes Transferred in this connection
          format: int64
          type: integer
        localNetworkGateway2:
          $ref: '#/components/schemas/LocalNetworkGateway'
        peer:
          $ref: '#/components/schemas/SubResource'
        provisioningState:
          description: Gets or sets Provisioning state of the VirtualNetworkGatewayConnection
            resource Updating/Deleting/Failed
          type: string
        resourceGuid:
          description: Gets or sets resource guid property of the VirtualNetworkGatewayConnection
            resource
          type: string
        routingWeight:
          description: The Routing weight.
          format: int32
          type: integer
        sharedKey:
          description: The IPsec share key.
          type: string
        virtualNetworkGateway1:
          $ref: '#/components/schemas/VirtualNetworkGateway'
        virtualNetworkGateway2:
          $ref: '#/components/schemas/VirtualNetworkGateway'
      type: object
    VirtualNetworkGatewayIpConfiguration:
      allOf:
      - $ref: '#/components/schemas/SubResource'
      description: IpConfiguration for Virtual network gateway
      example:
        name: name
        etag: etag
        properties:
          subnet:
            id: id
          privateIPAllocationMethod: Static
          privateIPAddress: privateIPAddress
          provisioningState: provisioningState
          publicIPAddress:
            id: id
      properties:
        etag:
          description: A unique read-only string that changes whenever the resource
            is updated
          type: string
        name:
          description: Gets name of the resource that is unique within a resource
            group. This name can be used to access the resource
          type: string
        properties:
          $ref: '#/components/schemas/VirtualNetworkGatewayIpConfigurationPropertiesFormat'
    VirtualNetworkGatewayIpConfigurationPropertiesFormat:
      description: Properties of VirtualNetworkGatewayIPConfiguration
      example:
        subnet:
          id: id
        privateIPAllocationMethod: Static
        privateIPAddress: privateIPAddress
        provisioningState: provisioningState
        publicIPAddress:
          id: id
      properties:
        privateIPAddress:
          description: Gets or sets the privateIPAddress of the Network Interface
            IP Configuration
          type: string
        privateIPAllocationMethod:
          description: Gets or sets PrivateIP allocation method (Static/Dynamic)
          enum:
          - Static
          - Dynamic
          type: string
          x-ms-enum:
            modelAsString: true
            name: IpAllocationMethod
        provisioningState:
          description: Gets or sets Provisioning state of the PublicIP resource Updating/Deleting/Failed
          type: string
        publicIPAddress:
          $ref: '#/components/schemas/SubResource'
        subnet:
          $ref: '#/components/schemas/SubResource'
      type: object
    VirtualNetworkGatewayListResult:
      description: Response for ListVirtualNetworkGateways Api service call
      example:
        value:
        - etag: etag
          properties:
            ipConfigurations:
            - name: name
              etag: etag
              properties:
                subnet:
                  id: id
                privateIPAllocationMethod: Static
                privateIPAddress: privateIPAddress
                provisioningState: provisioningState
                publicIPAddress:
                  id: id
            - name: name
              etag: etag
              properties:
                subnet:
                  id: id
                privateIPAllocationMethod: Static
                privateIPAddress: privateIPAddress
                provisioningState: provisioningState
                publicIPAddress:
                  id: id
            enableBgp: true
            gatewayType: Vpn
            resourceGuid: resourceGuid
            vpnType: PolicyBased
            provisioningState: provisioningState
            gatewayDefaultSite:
              id: id
        - etag: etag
          properties:
            ipConfigurations:
            - name: name
              etag: etag
              properties:
                subnet:
                  id: id
                privateIPAllocationMethod: Static
                privateIPAddress: privateIPAddress
                provisioningState: provisioningState
                publicIPAddress:
                  id: id
            - name: name
              etag: etag
              properties:
                subnet:
                  id: id
                privateIPAllocationMethod: Static
                privateIPAddress: privateIPAddress
                provisioningState: provisioningState
                publicIPAddress:
                  id: id
            enableBgp: true
            gatewayType: Vpn
            resourceGuid: resourceGuid
            vpnType: PolicyBased
            provisioningState: provisioningState
            gatewayDefaultSite:
              id: id
        nextLink: nextLink
      properties:
        nextLink:
          description: Gets the URL to get the next set of results.
          type: string
        value:
          description: Gets List of VirtualNetworkGateways that exists in a resource
            group
          items:
            $ref: '#/components/schemas/VirtualNetworkGateway'
          type: array
      type: object
    VirtualNetworkGatewayPropertiesFormat:
      description: VirtualNetworkGateway properties
      example:
        ipConfigurations:
        - name: name
          etag: etag
          properties:
            subnet:
              id: id
            privateIPAllocationMethod: Static
            privateIPAddress: privateIPAddress
            provisioningState: provisioningState
            publicIPAddress:
              id: id
        - name: name
          etag: etag
          properties:
            subnet:
              id: id
            privateIPAllocationMethod: Static
            privateIPAddress: privateIPAddress
            provisioningState: provisioningState
            publicIPAddress:
              id: id
        enableBgp: true
        gatewayType: Vpn
        resourceGuid: resourceGuid
        vpnType: PolicyBased
        provisioningState: provisioningState
        gatewayDefaultSite:
          id: id
      properties:
        enableBgp:
          description: EnableBgp Flag
          type: boolean
        gatewayDefaultSite:
          $ref: '#/components/schemas/SubResource'
        gatewayType:
          description: The type of this virtual network gateway.
          enum:
          - Vpn
          - ExpressRoute
          type: string
          x-ms-enum:
            modelAsString: true
            name: VirtualNetworkGatewayType
        ipConfigurations:
          description: IpConfigurations for Virtual network gateway.
          items:
            $ref: '#/components/schemas/VirtualNetworkGatewayIpConfiguration'
          type: array
        provisioningState:
          description: Gets or sets Provisioning state of the VirtualNetworkGateway
            resource Updating/Deleting/Failed
          type: string
        resourceGuid:
          description: Gets or sets resource guid property of the VirtualNetworkGateway
            resource
          type: string
        vpnType:
          description: The type of this virtual network gateway.
          enum:
          - PolicyBased
          - RouteBased
          type: string
          x-ms-enum:
            modelAsString: true
            name: VpnType
      type: object
    VirtualNetworkListResult:
      description: Response for ListVirtualNetworks Api service call
      example:
        value:
        - etag: etag
          properties:
            resourceGuid: resourceGuid
            addressSpace:
              addressPrefixes:
              - addressPrefixes
              - addressPrefixes
            dhcpOptions:
              dnsServers:
              - dnsServers
              - dnsServers
            subnets:
            - name: name
              etag: etag
              properties:
                ipConfigurations:
                - id: id
                - id: id
                routeTable:
                  id: id
                addressPrefix: addressPrefix
                provisioningState: provisioningState
                networkSecurityGroup:
                  id: id
            - name: name
              etag: etag
              properties:
                ipConfigurations:
                - id: id
                - id: id
                routeTable:
                  id: id
                addressPrefix: addressPrefix
                provisioningState: provisioningState
                networkSecurityGroup:
                  id: id
            provisioningState: provisioningState
        - etag: etag
          properties:
            resourceGuid: resourceGuid
            addressSpace:
              addressPrefixes:
              - addressPrefixes
              - addressPrefixes
            dhcpOptions:
              dnsServers:
              - dnsServers
              - dnsServers
            subnets:
            - name: name
              etag: etag
              properties:
                ipConfigurations:
                - id: id
                - id: id
                routeTable:
                  id: id
                addressPrefix: addressPrefix
                provisioningState: provisioningState
                networkSecurityGroup:
                  id: id
            - name: name
              etag: etag
              properties:
                ipConfigurations:
                - id: id
                - id: id
                routeTable:
                  id: id
                addressPrefix: addressPrefix
                provisioningState: provisioningState
                networkSecurityGroup:
                  id: id
            provisioningState: provisioningState
        nextLink: nextLink
      properties:
        nextLink:
          description: Gets the URL to get the next set of results.
          type: string
        value:
          description: Gets list of VirtualNetworks in a resource group
          items:
            $ref: '#/components/schemas/VirtualNetwork'
          type: array
      type: object
    VirtualNetworkPropertiesFormat:
      example:
        resourceGuid: resourceGuid
        addressSpace:
          addressPrefixes:
          - addressPrefixes
          - addressPrefixes
        dhcpOptions:
          dnsServers:
          - dnsServers
          - dnsServers
        subnets:
        - name: name
          etag: etag
          properties:
            ipConfigurations:
            - id: id
            - id: id
            routeTable:
              id: id
            addressPrefix: addressPrefix
            provisioningState: provisioningState
            networkSecurityGroup:
              id: id
        - name: name
          etag: etag
          properties:
            ipConfigurations:
            - id: id
            - id: id
            routeTable:
              id: id
            addressPrefix: addressPrefix
            provisioningState: provisioningState
            networkSecurityGroup:
              id: id
        provisioningState: provisioningState
      properties:
        addressSpace:
          $ref: '#/components/schemas/AddressSpace'
        dhcpOptions:
          $ref: '#/components/schemas/DhcpOptions'
        provisioningState:
          description: Gets or sets Provisioning state of the PublicIP resource Updating/Deleting/Failed
          type: string
        resourceGuid:
          description: Gets or sets resource guid property of the VirtualNetwork resource
          type: string
        subnets:
          description: Gets or sets List of subnets in a VirtualNetwork
          items:
            $ref: '#/components/schemas/Subnet'
          type: array
      type: object
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
      type: oauth2
x-original-swagger-version: "2.0"

