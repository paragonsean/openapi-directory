/**
 * NetworkResourceProviderClient
 * The Windows Azure Network management API provides a RESTful set of web services that interact with Windows Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Windows Azure Networks service.
 *
 * The version of the OpenAPI document: 2015-05-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import NetworkSecurityGroup from '../model/NetworkSecurityGroup';
import NetworkSecurityGroupListResult from '../model/NetworkSecurityGroupListResult';

/**
* NetworkSecurityGroups service.
* @module api/NetworkSecurityGroupsApi
* @version 2015-05-01-preview
*/
export default class NetworkSecurityGroupsApi {

    /**
    * Constructs a new NetworkSecurityGroupsApi. 
    * @alias module:api/NetworkSecurityGroupsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the networkSecurityGroupsCreateOrUpdate operation.
     * @callback module:api/NetworkSecurityGroupsApi~networkSecurityGroupsCreateOrUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/NetworkSecurityGroup} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * The Put NetworkSecurityGroup operation creates/updates a network security group in the specified resource group.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} networkSecurityGroupName The name of the network security group.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:model/NetworkSecurityGroup} parameters Parameters supplied to the create/update Network Security Group operation
     * @param {module:api/NetworkSecurityGroupsApi~networkSecurityGroupsCreateOrUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/NetworkSecurityGroup}
     */
    networkSecurityGroupsCreateOrUpdate(resourceGroupName, networkSecurityGroupName, apiVersion, subscriptionId, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling networkSecurityGroupsCreateOrUpdate");
      }
      // verify the required parameter 'networkSecurityGroupName' is set
      if (networkSecurityGroupName === undefined || networkSecurityGroupName === null) {
        throw new Error("Missing the required parameter 'networkSecurityGroupName' when calling networkSecurityGroupsCreateOrUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling networkSecurityGroupsCreateOrUpdate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling networkSecurityGroupsCreateOrUpdate");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling networkSecurityGroupsCreateOrUpdate");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'networkSecurityGroupName': networkSecurityGroupName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json', 'text/json'];
      let accepts = ['application/json', 'text/json'];
      let returnType = NetworkSecurityGroup;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityGroups/{networkSecurityGroupName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the networkSecurityGroupsDelete operation.
     * @callback module:api/NetworkSecurityGroupsApi~networkSecurityGroupsDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * The Delete NetworkSecurityGroup operation deletes the specified network security group
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} networkSecurityGroupName The name of the network security group.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/NetworkSecurityGroupsApi~networkSecurityGroupsDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    networkSecurityGroupsDelete(resourceGroupName, networkSecurityGroupName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling networkSecurityGroupsDelete");
      }
      // verify the required parameter 'networkSecurityGroupName' is set
      if (networkSecurityGroupName === undefined || networkSecurityGroupName === null) {
        throw new Error("Missing the required parameter 'networkSecurityGroupName' when calling networkSecurityGroupsDelete");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling networkSecurityGroupsDelete");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling networkSecurityGroupsDelete");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'networkSecurityGroupName': networkSecurityGroupName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityGroups/{networkSecurityGroupName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the networkSecurityGroupsGet operation.
     * @callback module:api/NetworkSecurityGroupsApi~networkSecurityGroupsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/NetworkSecurityGroup} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * The Get NetworkSecurityGroups operation retrieves information about the specified network security group.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} networkSecurityGroupName The name of the network security group.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/NetworkSecurityGroupsApi~networkSecurityGroupsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/NetworkSecurityGroup}
     */
    networkSecurityGroupsGet(resourceGroupName, networkSecurityGroupName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling networkSecurityGroupsGet");
      }
      // verify the required parameter 'networkSecurityGroupName' is set
      if (networkSecurityGroupName === undefined || networkSecurityGroupName === null) {
        throw new Error("Missing the required parameter 'networkSecurityGroupName' when calling networkSecurityGroupsGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling networkSecurityGroupsGet");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling networkSecurityGroupsGet");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'networkSecurityGroupName': networkSecurityGroupName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json'];
      let returnType = NetworkSecurityGroup;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityGroups/{networkSecurityGroupName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the networkSecurityGroupsList operation.
     * @callback module:api/NetworkSecurityGroupsApi~networkSecurityGroupsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/NetworkSecurityGroupListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * The list NetworkSecurityGroups returns all network security groups in a resource group
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/NetworkSecurityGroupsApi~networkSecurityGroupsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/NetworkSecurityGroupListResult}
     */
    networkSecurityGroupsList(resourceGroupName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling networkSecurityGroupsList");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling networkSecurityGroupsList");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling networkSecurityGroupsList");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json'];
      let returnType = NetworkSecurityGroupListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityGroups', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the networkSecurityGroupsListAll operation.
     * @callback module:api/NetworkSecurityGroupsApi~networkSecurityGroupsListAllCallback
     * @param {String} error Error message, if any.
     * @param {module:model/NetworkSecurityGroupListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * The list NetworkSecurityGroups returns all network security groups in a subscription
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/NetworkSecurityGroupsApi~networkSecurityGroupsListAllCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/NetworkSecurityGroupListResult}
     */
    networkSecurityGroupsListAll(apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling networkSecurityGroupsListAll");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling networkSecurityGroupsListAll");
      }

      let pathParams = {
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json'];
      let returnType = NetworkSecurityGroupListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.Network/networkSecurityGroups', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
