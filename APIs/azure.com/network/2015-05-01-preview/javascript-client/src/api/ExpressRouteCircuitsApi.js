/**
 * NetworkResourceProviderClient
 * The Windows Azure Network management API provides a RESTful set of web services that interact with Windows Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Windows Azure Networks service.
 *
 * The version of the OpenAPI document: 2015-05-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ExpressRouteCircuit from '../model/ExpressRouteCircuit';
import ExpressRouteCircuitListResult from '../model/ExpressRouteCircuitListResult';
import ExpressRouteCircuitsArpTableListResult from '../model/ExpressRouteCircuitsArpTableListResult';
import ExpressRouteCircuitsRoutesTableListResult from '../model/ExpressRouteCircuitsRoutesTableListResult';
import ExpressRouteCircuitsStatsListResult from '../model/ExpressRouteCircuitsStatsListResult';

/**
* ExpressRouteCircuits service.
* @module api/ExpressRouteCircuitsApi
* @version 2015-05-01-preview
*/
export default class ExpressRouteCircuitsApi {

    /**
    * Constructs a new ExpressRouteCircuitsApi. 
    * @alias module:api/ExpressRouteCircuitsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the expressRouteCircuitsCreateOrUpdate operation.
     * @callback module:api/ExpressRouteCircuitsApi~expressRouteCircuitsCreateOrUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ExpressRouteCircuit} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * The Put ExpressRouteCircuit operation creates/updates a ExpressRouteCircuit
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} circuitName The name of the circuit.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:model/ExpressRouteCircuit} parameters Parameters supplied to the create/delete ExpressRouteCircuit operation
     * @param {module:api/ExpressRouteCircuitsApi~expressRouteCircuitsCreateOrUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ExpressRouteCircuit}
     */
    expressRouteCircuitsCreateOrUpdate(resourceGroupName, circuitName, apiVersion, subscriptionId, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling expressRouteCircuitsCreateOrUpdate");
      }
      // verify the required parameter 'circuitName' is set
      if (circuitName === undefined || circuitName === null) {
        throw new Error("Missing the required parameter 'circuitName' when calling expressRouteCircuitsCreateOrUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling expressRouteCircuitsCreateOrUpdate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling expressRouteCircuitsCreateOrUpdate");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling expressRouteCircuitsCreateOrUpdate");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'circuitName': circuitName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json', 'text/json'];
      let accepts = ['application/json', 'text/json'];
      let returnType = ExpressRouteCircuit;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the expressRouteCircuitsDelete operation.
     * @callback module:api/ExpressRouteCircuitsApi~expressRouteCircuitsDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * The delete ExpressRouteCircuit operation deletes the specified ExpressRouteCircuit.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} circuitName The name of the express route Circuit.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/ExpressRouteCircuitsApi~expressRouteCircuitsDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    expressRouteCircuitsDelete(resourceGroupName, circuitName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling expressRouteCircuitsDelete");
      }
      // verify the required parameter 'circuitName' is set
      if (circuitName === undefined || circuitName === null) {
        throw new Error("Missing the required parameter 'circuitName' when calling expressRouteCircuitsDelete");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling expressRouteCircuitsDelete");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling expressRouteCircuitsDelete");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'circuitName': circuitName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the expressRouteCircuitsGet operation.
     * @callback module:api/ExpressRouteCircuitsApi~expressRouteCircuitsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ExpressRouteCircuit} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * The Get ExpressRouteCircuit operation retrieves information about the specified ExpressRouteCircuit.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} circuitName The name of the circuit.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/ExpressRouteCircuitsApi~expressRouteCircuitsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ExpressRouteCircuit}
     */
    expressRouteCircuitsGet(resourceGroupName, circuitName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling expressRouteCircuitsGet");
      }
      // verify the required parameter 'circuitName' is set
      if (circuitName === undefined || circuitName === null) {
        throw new Error("Missing the required parameter 'circuitName' when calling expressRouteCircuitsGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling expressRouteCircuitsGet");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling expressRouteCircuitsGet");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'circuitName': circuitName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json'];
      let returnType = ExpressRouteCircuit;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the expressRouteCircuitsList operation.
     * @callback module:api/ExpressRouteCircuitsApi~expressRouteCircuitsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ExpressRouteCircuitListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * The List ExpressRouteCircuit operation retrieves all the ExpressRouteCircuits in a resource group.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/ExpressRouteCircuitsApi~expressRouteCircuitsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ExpressRouteCircuitListResult}
     */
    expressRouteCircuitsList(resourceGroupName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling expressRouteCircuitsList");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling expressRouteCircuitsList");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling expressRouteCircuitsList");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json'];
      let returnType = ExpressRouteCircuitListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the expressRouteCircuitsListAll operation.
     * @callback module:api/ExpressRouteCircuitsApi~expressRouteCircuitsListAllCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ExpressRouteCircuitListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * The List ExpressRouteCircuit operation retrieves all the ExpressRouteCircuits in a subscription.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/ExpressRouteCircuitsApi~expressRouteCircuitsListAllCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ExpressRouteCircuitListResult}
     */
    expressRouteCircuitsListAll(apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling expressRouteCircuitsListAll");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling expressRouteCircuitsListAll");
      }

      let pathParams = {
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json'];
      let returnType = ExpressRouteCircuitListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.Network/expressRouteCircuits', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the expressRouteCircuitsListArpTable operation.
     * @callback module:api/ExpressRouteCircuitsApi~expressRouteCircuitsListArpTableCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ExpressRouteCircuitsArpTableListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * The ListArpTable from ExpressRouteCircuit operation retrieves the currently advertised arp table associated with the ExpressRouteCircuits in a resource group.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} circuitName The name of the circuit.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/ExpressRouteCircuitsApi~expressRouteCircuitsListArpTableCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ExpressRouteCircuitsArpTableListResult}
     */
    expressRouteCircuitsListArpTable(resourceGroupName, circuitName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling expressRouteCircuitsListArpTable");
      }
      // verify the required parameter 'circuitName' is set
      if (circuitName === undefined || circuitName === null) {
        throw new Error("Missing the required parameter 'circuitName' when calling expressRouteCircuitsListArpTable");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling expressRouteCircuitsListArpTable");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling expressRouteCircuitsListArpTable");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'circuitName': circuitName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json'];
      let returnType = ExpressRouteCircuitsArpTableListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}arpTable', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the expressRouteCircuitsListRoutesTable operation.
     * @callback module:api/ExpressRouteCircuitsApi~expressRouteCircuitsListRoutesTableCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ExpressRouteCircuitsRoutesTableListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * The ListRoutesTable from ExpressRouteCircuit operation retrieves the currently advertised routes table associated with the ExpressRouteCircuits in a resource group.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} circuitName The name of the circuit.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/ExpressRouteCircuitsApi~expressRouteCircuitsListRoutesTableCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ExpressRouteCircuitsRoutesTableListResult}
     */
    expressRouteCircuitsListRoutesTable(resourceGroupName, circuitName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling expressRouteCircuitsListRoutesTable");
      }
      // verify the required parameter 'circuitName' is set
      if (circuitName === undefined || circuitName === null) {
        throw new Error("Missing the required parameter 'circuitName' when calling expressRouteCircuitsListRoutesTable");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling expressRouteCircuitsListRoutesTable");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling expressRouteCircuitsListRoutesTable");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'circuitName': circuitName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json'];
      let returnType = ExpressRouteCircuitsRoutesTableListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}routesTable', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the expressRouteCircuitsListStats operation.
     * @callback module:api/ExpressRouteCircuitsApi~expressRouteCircuitsListStatsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ExpressRouteCircuitsStatsListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * The ListStats ExpressRouteCircuit operation retrieves all the stats from a ExpressRouteCircuits in a resource group.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} circuitName The name of the loadBalancer.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/ExpressRouteCircuitsApi~expressRouteCircuitsListStatsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ExpressRouteCircuitsStatsListResult}
     */
    expressRouteCircuitsListStats(resourceGroupName, circuitName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling expressRouteCircuitsListStats");
      }
      // verify the required parameter 'circuitName' is set
      if (circuitName === undefined || circuitName === null) {
        throw new Error("Missing the required parameter 'circuitName' when calling expressRouteCircuitsListStats");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling expressRouteCircuitsListStats");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling expressRouteCircuitsListStats");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'circuitName': circuitName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json'];
      let returnType = ExpressRouteCircuitsStatsListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}stats', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
