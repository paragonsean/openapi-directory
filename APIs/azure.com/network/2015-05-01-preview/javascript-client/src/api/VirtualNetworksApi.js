/**
 * NetworkResourceProviderClient
 * The Windows Azure Network management API provides a RESTful set of web services that interact with Windows Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Windows Azure Networks service.
 *
 * The version of the OpenAPI document: 2015-05-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import VirtualNetwork from '../model/VirtualNetwork';
import VirtualNetworkListResult from '../model/VirtualNetworkListResult';

/**
* VirtualNetworks service.
* @module api/VirtualNetworksApi
* @version 2015-05-01-preview
*/
export default class VirtualNetworksApi {

    /**
    * Constructs a new VirtualNetworksApi. 
    * @alias module:api/VirtualNetworksApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the virtualNetworksCreateOrUpdate operation.
     * @callback module:api/VirtualNetworksApi~virtualNetworksCreateOrUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VirtualNetwork} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * The Put VirtualNetwork operation creates/updates a virtual network in the specified resource group.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} virtualNetworkName The name of the virtual network.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:model/VirtualNetwork} parameters Parameters supplied to the create/update Virtual Network operation
     * @param {module:api/VirtualNetworksApi~virtualNetworksCreateOrUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VirtualNetwork}
     */
    virtualNetworksCreateOrUpdate(resourceGroupName, virtualNetworkName, apiVersion, subscriptionId, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling virtualNetworksCreateOrUpdate");
      }
      // verify the required parameter 'virtualNetworkName' is set
      if (virtualNetworkName === undefined || virtualNetworkName === null) {
        throw new Error("Missing the required parameter 'virtualNetworkName' when calling virtualNetworksCreateOrUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling virtualNetworksCreateOrUpdate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling virtualNetworksCreateOrUpdate");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling virtualNetworksCreateOrUpdate");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'virtualNetworkName': virtualNetworkName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json', 'text/json'];
      let accepts = ['application/json', 'text/json'];
      let returnType = VirtualNetwork;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualnetworks/{virtualNetworkName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the virtualNetworksDelete operation.
     * @callback module:api/VirtualNetworksApi~virtualNetworksDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * The Delete VirtualNetwork operation deletes the specified virtual network
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} virtualNetworkName The name of the virtual network.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/VirtualNetworksApi~virtualNetworksDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    virtualNetworksDelete(resourceGroupName, virtualNetworkName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling virtualNetworksDelete");
      }
      // verify the required parameter 'virtualNetworkName' is set
      if (virtualNetworkName === undefined || virtualNetworkName === null) {
        throw new Error("Missing the required parameter 'virtualNetworkName' when calling virtualNetworksDelete");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling virtualNetworksDelete");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling virtualNetworksDelete");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'virtualNetworkName': virtualNetworkName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualnetworks/{virtualNetworkName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the virtualNetworksGet operation.
     * @callback module:api/VirtualNetworksApi~virtualNetworksGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VirtualNetwork} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * The Get VirtualNetwork operation retrieves information about the specified virtual network.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} virtualNetworkName The name of the virtual network.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/VirtualNetworksApi~virtualNetworksGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VirtualNetwork}
     */
    virtualNetworksGet(resourceGroupName, virtualNetworkName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling virtualNetworksGet");
      }
      // verify the required parameter 'virtualNetworkName' is set
      if (virtualNetworkName === undefined || virtualNetworkName === null) {
        throw new Error("Missing the required parameter 'virtualNetworkName' when calling virtualNetworksGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling virtualNetworksGet");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling virtualNetworksGet");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'virtualNetworkName': virtualNetworkName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json'];
      let returnType = VirtualNetwork;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualnetworks/{virtualNetworkName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the virtualNetworksList operation.
     * @callback module:api/VirtualNetworksApi~virtualNetworksListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VirtualNetworkListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * The list VirtualNetwork returns all Virtual Networks in a resource group
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/VirtualNetworksApi~virtualNetworksListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VirtualNetworkListResult}
     */
    virtualNetworksList(resourceGroupName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling virtualNetworksList");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling virtualNetworksList");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling virtualNetworksList");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json'];
      let returnType = VirtualNetworkListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualnetworks', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the virtualNetworksListAll operation.
     * @callback module:api/VirtualNetworksApi~virtualNetworksListAllCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VirtualNetworkListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * The list VirtualNetwork returns all Virtual Networks in a subscription
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/VirtualNetworksApi~virtualNetworksListAllCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VirtualNetworkListResult}
     */
    virtualNetworksListAll(apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling virtualNetworksListAll");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling virtualNetworksListAll");
      }

      let pathParams = {
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json'];
      let returnType = VirtualNetworkListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.Network/virtualnetworks', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
