/**
 * NetworkResourceProviderClient
 * The Windows Azure Network management API provides a RESTful set of web services that interact with Windows Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Windows Azure Networks service.
 *
 * The version of the OpenAPI document: 2015-05-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ExpressRouteCircuitPeeringConfig from './ExpressRouteCircuitPeeringConfig';
import ExpressRouteCircuitStats from './ExpressRouteCircuitStats';

/**
 * The ExpressRouteCircuitPeeringPropertiesFormat model module.
 * @module model/ExpressRouteCircuitPeeringPropertiesFormat
 * @version 2015-05-01-preview
 */
class ExpressRouteCircuitPeeringPropertiesFormat {
    /**
     * Constructs a new <code>ExpressRouteCircuitPeeringPropertiesFormat</code>.
     * @alias module:model/ExpressRouteCircuitPeeringPropertiesFormat
     */
    constructor() { 
        
        ExpressRouteCircuitPeeringPropertiesFormat.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ExpressRouteCircuitPeeringPropertiesFormat</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ExpressRouteCircuitPeeringPropertiesFormat} obj Optional instance to populate.
     * @return {module:model/ExpressRouteCircuitPeeringPropertiesFormat} The populated <code>ExpressRouteCircuitPeeringPropertiesFormat</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ExpressRouteCircuitPeeringPropertiesFormat();

            if (data.hasOwnProperty('azureASN')) {
                obj['azureASN'] = ApiClient.convertToType(data['azureASN'], 'Number');
            }
            if (data.hasOwnProperty('microsoftPeeringConfig')) {
                obj['microsoftPeeringConfig'] = ExpressRouteCircuitPeeringConfig.constructFromObject(data['microsoftPeeringConfig']);
            }
            if (data.hasOwnProperty('peerASN')) {
                obj['peerASN'] = ApiClient.convertToType(data['peerASN'], 'Number');
            }
            if (data.hasOwnProperty('peeringType')) {
                obj['peeringType'] = ApiClient.convertToType(data['peeringType'], 'String');
            }
            if (data.hasOwnProperty('primaryAzurePort')) {
                obj['primaryAzurePort'] = ApiClient.convertToType(data['primaryAzurePort'], 'String');
            }
            if (data.hasOwnProperty('primaryPeerAddressPrefix')) {
                obj['primaryPeerAddressPrefix'] = ApiClient.convertToType(data['primaryPeerAddressPrefix'], 'String');
            }
            if (data.hasOwnProperty('provisioningState')) {
                obj['provisioningState'] = ApiClient.convertToType(data['provisioningState'], 'String');
            }
            if (data.hasOwnProperty('secondaryAzurePort')) {
                obj['secondaryAzurePort'] = ApiClient.convertToType(data['secondaryAzurePort'], 'String');
            }
            if (data.hasOwnProperty('secondaryPeerAddressPrefix')) {
                obj['secondaryPeerAddressPrefix'] = ApiClient.convertToType(data['secondaryPeerAddressPrefix'], 'String');
            }
            if (data.hasOwnProperty('sharedKey')) {
                obj['sharedKey'] = ApiClient.convertToType(data['sharedKey'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('stats')) {
                obj['stats'] = ExpressRouteCircuitStats.constructFromObject(data['stats']);
            }
            if (data.hasOwnProperty('vlanId')) {
                obj['vlanId'] = ApiClient.convertToType(data['vlanId'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ExpressRouteCircuitPeeringPropertiesFormat</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ExpressRouteCircuitPeeringPropertiesFormat</code>.
     */
    static validateJSON(data) {
        // validate the optional field `microsoftPeeringConfig`
        if (data['microsoftPeeringConfig']) { // data not null
          ExpressRouteCircuitPeeringConfig.validateJSON(data['microsoftPeeringConfig']);
        }
        // ensure the json data is a string
        if (data['peeringType'] && !(typeof data['peeringType'] === 'string' || data['peeringType'] instanceof String)) {
            throw new Error("Expected the field `peeringType` to be a primitive type in the JSON string but got " + data['peeringType']);
        }
        // ensure the json data is a string
        if (data['primaryAzurePort'] && !(typeof data['primaryAzurePort'] === 'string' || data['primaryAzurePort'] instanceof String)) {
            throw new Error("Expected the field `primaryAzurePort` to be a primitive type in the JSON string but got " + data['primaryAzurePort']);
        }
        // ensure the json data is a string
        if (data['primaryPeerAddressPrefix'] && !(typeof data['primaryPeerAddressPrefix'] === 'string' || data['primaryPeerAddressPrefix'] instanceof String)) {
            throw new Error("Expected the field `primaryPeerAddressPrefix` to be a primitive type in the JSON string but got " + data['primaryPeerAddressPrefix']);
        }
        // ensure the json data is a string
        if (data['provisioningState'] && !(typeof data['provisioningState'] === 'string' || data['provisioningState'] instanceof String)) {
            throw new Error("Expected the field `provisioningState` to be a primitive type in the JSON string but got " + data['provisioningState']);
        }
        // ensure the json data is a string
        if (data['secondaryAzurePort'] && !(typeof data['secondaryAzurePort'] === 'string' || data['secondaryAzurePort'] instanceof String)) {
            throw new Error("Expected the field `secondaryAzurePort` to be a primitive type in the JSON string but got " + data['secondaryAzurePort']);
        }
        // ensure the json data is a string
        if (data['secondaryPeerAddressPrefix'] && !(typeof data['secondaryPeerAddressPrefix'] === 'string' || data['secondaryPeerAddressPrefix'] instanceof String)) {
            throw new Error("Expected the field `secondaryPeerAddressPrefix` to be a primitive type in the JSON string but got " + data['secondaryPeerAddressPrefix']);
        }
        // ensure the json data is a string
        if (data['sharedKey'] && !(typeof data['sharedKey'] === 'string' || data['sharedKey'] instanceof String)) {
            throw new Error("Expected the field `sharedKey` to be a primitive type in the JSON string but got " + data['sharedKey']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }
        // validate the optional field `stats`
        if (data['stats']) { // data not null
          ExpressRouteCircuitStats.validateJSON(data['stats']);
        }

        return true;
    }


}



/**
 * Gets or sets the azure ASN
 * @member {Number} azureASN
 */
ExpressRouteCircuitPeeringPropertiesFormat.prototype['azureASN'] = undefined;

/**
 * @member {module:model/ExpressRouteCircuitPeeringConfig} microsoftPeeringConfig
 */
ExpressRouteCircuitPeeringPropertiesFormat.prototype['microsoftPeeringConfig'] = undefined;

/**
 * Gets or sets the peer ASN
 * @member {Number} peerASN
 */
ExpressRouteCircuitPeeringPropertiesFormat.prototype['peerASN'] = undefined;

/**
 * Gets or sets PeeringType
 * @member {module:model/ExpressRouteCircuitPeeringPropertiesFormat.PeeringTypeEnum} peeringType
 */
ExpressRouteCircuitPeeringPropertiesFormat.prototype['peeringType'] = undefined;

/**
 * Gets or sets the primary port
 * @member {String} primaryAzurePort
 */
ExpressRouteCircuitPeeringPropertiesFormat.prototype['primaryAzurePort'] = undefined;

/**
 * Gets or sets the primary address prefix
 * @member {String} primaryPeerAddressPrefix
 */
ExpressRouteCircuitPeeringPropertiesFormat.prototype['primaryPeerAddressPrefix'] = undefined;

/**
 * Gets or sets Provisioning state of the PublicIP resource Updating/Deleting/Failed
 * @member {String} provisioningState
 */
ExpressRouteCircuitPeeringPropertiesFormat.prototype['provisioningState'] = undefined;

/**
 * Gets or sets the secondary port
 * @member {String} secondaryAzurePort
 */
ExpressRouteCircuitPeeringPropertiesFormat.prototype['secondaryAzurePort'] = undefined;

/**
 * Gets or sets the secondary address prefix
 * @member {String} secondaryPeerAddressPrefix
 */
ExpressRouteCircuitPeeringPropertiesFormat.prototype['secondaryPeerAddressPrefix'] = undefined;

/**
 * Gets or sets the shared key
 * @member {String} sharedKey
 */
ExpressRouteCircuitPeeringPropertiesFormat.prototype['sharedKey'] = undefined;

/**
 * Gets or sets state of Peering
 * @member {module:model/ExpressRouteCircuitPeeringPropertiesFormat.StateEnum} state
 */
ExpressRouteCircuitPeeringPropertiesFormat.prototype['state'] = undefined;

/**
 * @member {module:model/ExpressRouteCircuitStats} stats
 */
ExpressRouteCircuitPeeringPropertiesFormat.prototype['stats'] = undefined;

/**
 * Gets or sets the vlan id
 * @member {Number} vlanId
 */
ExpressRouteCircuitPeeringPropertiesFormat.prototype['vlanId'] = undefined;





/**
 * Allowed values for the <code>peeringType</code> property.
 * @enum {String}
 * @readonly
 */
ExpressRouteCircuitPeeringPropertiesFormat['PeeringTypeEnum'] = {

    /**
     * value: "AzurePublicPeering"
     * @const
     */
    "AzurePublicPeering": "AzurePublicPeering",

    /**
     * value: "AzurePrivatePeering"
     * @const
     */
    "AzurePrivatePeering": "AzurePrivatePeering",

    /**
     * value: "MicrosoftPeering"
     * @const
     */
    "MicrosoftPeering": "MicrosoftPeering"
};


/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
ExpressRouteCircuitPeeringPropertiesFormat['StateEnum'] = {

    /**
     * value: "Disabled"
     * @const
     */
    "Disabled": "Disabled",

    /**
     * value: "Enabled"
     * @const
     */
    "Enabled": "Enabled"
};



export default ExpressRouteCircuitPeeringPropertiesFormat;

