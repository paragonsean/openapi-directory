/**
 * NetworkResourceProviderClient
 * The Windows Azure Network management API provides a RESTful set of web services that interact with Windows Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Windows Azure Networks service.
 *
 * The version of the OpenAPI document: 2015-05-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.NetworkResourceProviderClient);
  }
}(this, function(expect, NetworkResourceProviderClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new NetworkResourceProviderClient.ApplicationGatewayPropertiesFormat();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ApplicationGatewayPropertiesFormat', function() {
    it('should create an instance of ApplicationGatewayPropertiesFormat', function() {
      // uncomment below and update the code to test ApplicationGatewayPropertiesFormat
      //var instance = new NetworkResourceProviderClient.ApplicationGatewayPropertiesFormat();
      //expect(instance).to.be.a(NetworkResourceProviderClient.ApplicationGatewayPropertiesFormat);
    });

    it('should have the property backendAddressPools (base name: "backendAddressPools")', function() {
      // uncomment below and update the code to test the property backendAddressPools
      //var instance = new NetworkResourceProviderClient.ApplicationGatewayPropertiesFormat();
      //expect(instance).to.be();
    });

    it('should have the property backendHttpSettingsCollection (base name: "backendHttpSettingsCollection")', function() {
      // uncomment below and update the code to test the property backendHttpSettingsCollection
      //var instance = new NetworkResourceProviderClient.ApplicationGatewayPropertiesFormat();
      //expect(instance).to.be();
    });

    it('should have the property frontendIPConfigurations (base name: "frontendIPConfigurations")', function() {
      // uncomment below and update the code to test the property frontendIPConfigurations
      //var instance = new NetworkResourceProviderClient.ApplicationGatewayPropertiesFormat();
      //expect(instance).to.be();
    });

    it('should have the property frontendPorts (base name: "frontendPorts")', function() {
      // uncomment below and update the code to test the property frontendPorts
      //var instance = new NetworkResourceProviderClient.ApplicationGatewayPropertiesFormat();
      //expect(instance).to.be();
    });

    it('should have the property gatewayIPConfigurations (base name: "gatewayIPConfigurations")', function() {
      // uncomment below and update the code to test the property gatewayIPConfigurations
      //var instance = new NetworkResourceProviderClient.ApplicationGatewayPropertiesFormat();
      //expect(instance).to.be();
    });

    it('should have the property httpListeners (base name: "httpListeners")', function() {
      // uncomment below and update the code to test the property httpListeners
      //var instance = new NetworkResourceProviderClient.ApplicationGatewayPropertiesFormat();
      //expect(instance).to.be();
    });

    it('should have the property operationalState (base name: "operationalState")', function() {
      // uncomment below and update the code to test the property operationalState
      //var instance = new NetworkResourceProviderClient.ApplicationGatewayPropertiesFormat();
      //expect(instance).to.be();
    });

    it('should have the property provisioningState (base name: "provisioningState")', function() {
      // uncomment below and update the code to test the property provisioningState
      //var instance = new NetworkResourceProviderClient.ApplicationGatewayPropertiesFormat();
      //expect(instance).to.be();
    });

    it('should have the property requestRoutingRules (base name: "requestRoutingRules")', function() {
      // uncomment below and update the code to test the property requestRoutingRules
      //var instance = new NetworkResourceProviderClient.ApplicationGatewayPropertiesFormat();
      //expect(instance).to.be();
    });

    it('should have the property resourceGuid (base name: "resourceGuid")', function() {
      // uncomment below and update the code to test the property resourceGuid
      //var instance = new NetworkResourceProviderClient.ApplicationGatewayPropertiesFormat();
      //expect(instance).to.be();
    });

    it('should have the property sku (base name: "sku")', function() {
      // uncomment below and update the code to test the property sku
      //var instance = new NetworkResourceProviderClient.ApplicationGatewayPropertiesFormat();
      //expect(instance).to.be();
    });

    it('should have the property sslCertificates (base name: "sslCertificates")', function() {
      // uncomment below and update the code to test the property sslCertificates
      //var instance = new NetworkResourceProviderClient.ApplicationGatewayPropertiesFormat();
      //expect(instance).to.be();
    });

  });

}));
