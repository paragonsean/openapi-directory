/**
 * NetworkResourceProviderClient
 * The Windows Azure Network management API provides a RESTful set of web services that interact with Windows Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Windows Azure Networks service.
 *
 * The version of the OpenAPI document: 2015-05-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.NetworkResourceProviderClient);
  }
}(this, function(expect, NetworkResourceProviderClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new NetworkResourceProviderClient.ApplicationGatewayHttpListenerPropertiesFormat();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ApplicationGatewayHttpListenerPropertiesFormat', function() {
    it('should create an instance of ApplicationGatewayHttpListenerPropertiesFormat', function() {
      // uncomment below and update the code to test ApplicationGatewayHttpListenerPropertiesFormat
      //var instance = new NetworkResourceProviderClient.ApplicationGatewayHttpListenerPropertiesFormat();
      //expect(instance).to.be.a(NetworkResourceProviderClient.ApplicationGatewayHttpListenerPropertiesFormat);
    });

    it('should have the property frontendIPConfiguration (base name: "frontendIPConfiguration")', function() {
      // uncomment below and update the code to test the property frontendIPConfiguration
      //var instance = new NetworkResourceProviderClient.ApplicationGatewayHttpListenerPropertiesFormat();
      //expect(instance).to.be();
    });

    it('should have the property frontendPort (base name: "frontendPort")', function() {
      // uncomment below and update the code to test the property frontendPort
      //var instance = new NetworkResourceProviderClient.ApplicationGatewayHttpListenerPropertiesFormat();
      //expect(instance).to.be();
    });

    it('should have the property protocol (base name: "protocol")', function() {
      // uncomment below and update the code to test the property protocol
      //var instance = new NetworkResourceProviderClient.ApplicationGatewayHttpListenerPropertiesFormat();
      //expect(instance).to.be();
    });

    it('should have the property provisioningState (base name: "provisioningState")', function() {
      // uncomment below and update the code to test the property provisioningState
      //var instance = new NetworkResourceProviderClient.ApplicationGatewayHttpListenerPropertiesFormat();
      //expect(instance).to.be();
    });

    it('should have the property sslCertificate (base name: "sslCertificate")', function() {
      // uncomment below and update the code to test the property sslCertificate
      //var instance = new NetworkResourceProviderClient.ApplicationGatewayHttpListenerPropertiesFormat();
      //expect(instance).to.be();
    });

  });

}));
