/**
 * NetworkResourceProviderClient
 * The Windows Azure Network management API provides a RESTful set of web services that interact with Windows Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Windows Azure Networks service.
 *
 * The version of the OpenAPI document: 2015-05-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.NetworkResourceProviderClient);
  }
}(this, function(expect, NetworkResourceProviderClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new NetworkResourceProviderClient.NetworkInterfacesApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('NetworkInterfacesApi', function() {
    describe('networkInterfacesCreateOrUpdate', function() {
      it('should call networkInterfacesCreateOrUpdate successfully', function(done) {
        //uncomment below and update the code to test networkInterfacesCreateOrUpdate
        //instance.networkInterfacesCreateOrUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('networkInterfacesDelete', function() {
      it('should call networkInterfacesDelete successfully', function(done) {
        //uncomment below and update the code to test networkInterfacesDelete
        //instance.networkInterfacesDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('networkInterfacesGet', function() {
      it('should call networkInterfacesGet successfully', function(done) {
        //uncomment below and update the code to test networkInterfacesGet
        //instance.networkInterfacesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('networkInterfacesGetVirtualMachineScaleSetNetworkInterface', function() {
      it('should call networkInterfacesGetVirtualMachineScaleSetNetworkInterface successfully', function(done) {
        //uncomment below and update the code to test networkInterfacesGetVirtualMachineScaleSetNetworkInterface
        //instance.networkInterfacesGetVirtualMachineScaleSetNetworkInterface(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('networkInterfacesList', function() {
      it('should call networkInterfacesList successfully', function(done) {
        //uncomment below and update the code to test networkInterfacesList
        //instance.networkInterfacesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('networkInterfacesListAll', function() {
      it('should call networkInterfacesListAll successfully', function(done) {
        //uncomment below and update the code to test networkInterfacesListAll
        //instance.networkInterfacesListAll(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('networkInterfacesListVirtualMachineScaleSetNetworkInterfaces', function() {
      it('should call networkInterfacesListVirtualMachineScaleSetNetworkInterfaces successfully', function(done) {
        //uncomment below and update the code to test networkInterfacesListVirtualMachineScaleSetNetworkInterfaces
        //instance.networkInterfacesListVirtualMachineScaleSetNetworkInterfaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('networkInterfacesListVirtualMachineScaleSetVMNetworkInterfaces', function() {
      it('should call networkInterfacesListVirtualMachineScaleSetVMNetworkInterfaces successfully', function(done) {
        //uncomment below and update the code to test networkInterfacesListVirtualMachineScaleSetVMNetworkInterfaces
        //instance.networkInterfacesListVirtualMachineScaleSetVMNetworkInterfaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
