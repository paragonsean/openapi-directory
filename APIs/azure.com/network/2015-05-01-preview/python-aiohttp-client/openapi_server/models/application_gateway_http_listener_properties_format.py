# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.sub_resource import SubResource
from openapi_server import util


class ApplicationGatewayHttpListenerPropertiesFormat(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, frontend_ip_configuration: SubResource=None, frontend_port: SubResource=None, protocol: str=None, provisioning_state: str=None, ssl_certificate: SubResource=None):
        """ApplicationGatewayHttpListenerPropertiesFormat - a model defined in OpenAPI

        :param frontend_ip_configuration: The frontend_ip_configuration of this ApplicationGatewayHttpListenerPropertiesFormat.
        :param frontend_port: The frontend_port of this ApplicationGatewayHttpListenerPropertiesFormat.
        :param protocol: The protocol of this ApplicationGatewayHttpListenerPropertiesFormat.
        :param provisioning_state: The provisioning_state of this ApplicationGatewayHttpListenerPropertiesFormat.
        :param ssl_certificate: The ssl_certificate of this ApplicationGatewayHttpListenerPropertiesFormat.
        """
        self.openapi_types = {
            'frontend_ip_configuration': SubResource,
            'frontend_port': SubResource,
            'protocol': str,
            'provisioning_state': str,
            'ssl_certificate': SubResource
        }

        self.attribute_map = {
            'frontend_ip_configuration': 'frontendIPConfiguration',
            'frontend_port': 'frontendPort',
            'protocol': 'protocol',
            'provisioning_state': 'provisioningState',
            'ssl_certificate': 'sslCertificate'
        }

        self._frontend_ip_configuration = frontend_ip_configuration
        self._frontend_port = frontend_port
        self._protocol = protocol
        self._provisioning_state = provisioning_state
        self._ssl_certificate = ssl_certificate

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApplicationGatewayHttpListenerPropertiesFormat':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ApplicationGatewayHttpListenerPropertiesFormat of this ApplicationGatewayHttpListenerPropertiesFormat.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def frontend_ip_configuration(self):
        """Gets the frontend_ip_configuration of this ApplicationGatewayHttpListenerPropertiesFormat.


        :return: The frontend_ip_configuration of this ApplicationGatewayHttpListenerPropertiesFormat.
        :rtype: SubResource
        """
        return self._frontend_ip_configuration

    @frontend_ip_configuration.setter
    def frontend_ip_configuration(self, frontend_ip_configuration):
        """Sets the frontend_ip_configuration of this ApplicationGatewayHttpListenerPropertiesFormat.


        :param frontend_ip_configuration: The frontend_ip_configuration of this ApplicationGatewayHttpListenerPropertiesFormat.
        :type frontend_ip_configuration: SubResource
        """

        self._frontend_ip_configuration = frontend_ip_configuration

    @property
    def frontend_port(self):
        """Gets the frontend_port of this ApplicationGatewayHttpListenerPropertiesFormat.


        :return: The frontend_port of this ApplicationGatewayHttpListenerPropertiesFormat.
        :rtype: SubResource
        """
        return self._frontend_port

    @frontend_port.setter
    def frontend_port(self, frontend_port):
        """Sets the frontend_port of this ApplicationGatewayHttpListenerPropertiesFormat.


        :param frontend_port: The frontend_port of this ApplicationGatewayHttpListenerPropertiesFormat.
        :type frontend_port: SubResource
        """

        self._frontend_port = frontend_port

    @property
    def protocol(self):
        """Gets the protocol of this ApplicationGatewayHttpListenerPropertiesFormat.

        Gets or sets the protocol

        :return: The protocol of this ApplicationGatewayHttpListenerPropertiesFormat.
        :rtype: str
        """
        return self._protocol

    @protocol.setter
    def protocol(self, protocol):
        """Sets the protocol of this ApplicationGatewayHttpListenerPropertiesFormat.

        Gets or sets the protocol

        :param protocol: The protocol of this ApplicationGatewayHttpListenerPropertiesFormat.
        :type protocol: str
        """
        allowed_values = ["Http", "Https"]  # noqa: E501
        if protocol not in allowed_values:
            raise ValueError(
                "Invalid value for `protocol` ({0}), must be one of {1}"
                .format(protocol, allowed_values)
            )

        self._protocol = protocol

    @property
    def provisioning_state(self):
        """Gets the provisioning_state of this ApplicationGatewayHttpListenerPropertiesFormat.

        Gets or sets Provisioning state of the http listener resource Updating/Deleting/Failed

        :return: The provisioning_state of this ApplicationGatewayHttpListenerPropertiesFormat.
        :rtype: str
        """
        return self._provisioning_state

    @provisioning_state.setter
    def provisioning_state(self, provisioning_state):
        """Sets the provisioning_state of this ApplicationGatewayHttpListenerPropertiesFormat.

        Gets or sets Provisioning state of the http listener resource Updating/Deleting/Failed

        :param provisioning_state: The provisioning_state of this ApplicationGatewayHttpListenerPropertiesFormat.
        :type provisioning_state: str
        """

        self._provisioning_state = provisioning_state

    @property
    def ssl_certificate(self):
        """Gets the ssl_certificate of this ApplicationGatewayHttpListenerPropertiesFormat.


        :return: The ssl_certificate of this ApplicationGatewayHttpListenerPropertiesFormat.
        :rtype: SubResource
        """
        return self._ssl_certificate

    @ssl_certificate.setter
    def ssl_certificate(self, ssl_certificate):
        """Sets the ssl_certificate of this ApplicationGatewayHttpListenerPropertiesFormat.


        :param ssl_certificate: The ssl_certificate of this ApplicationGatewayHttpListenerPropertiesFormat.
        :type ssl_certificate: SubResource
        """

        self._ssl_certificate = ssl_certificate
