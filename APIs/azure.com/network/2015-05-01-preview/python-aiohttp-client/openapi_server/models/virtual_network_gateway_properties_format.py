# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.sub_resource import SubResource
from openapi_server.models.virtual_network_gateway_ip_configuration import VirtualNetworkGatewayIpConfiguration
from openapi_server import util


class VirtualNetworkGatewayPropertiesFormat(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, enable_bgp: bool=None, gateway_default_site: SubResource=None, gateway_type: str=None, ip_configurations: List[VirtualNetworkGatewayIpConfiguration]=None, provisioning_state: str=None, resource_guid: str=None, vpn_type: str=None):
        """VirtualNetworkGatewayPropertiesFormat - a model defined in OpenAPI

        :param enable_bgp: The enable_bgp of this VirtualNetworkGatewayPropertiesFormat.
        :param gateway_default_site: The gateway_default_site of this VirtualNetworkGatewayPropertiesFormat.
        :param gateway_type: The gateway_type of this VirtualNetworkGatewayPropertiesFormat.
        :param ip_configurations: The ip_configurations of this VirtualNetworkGatewayPropertiesFormat.
        :param provisioning_state: The provisioning_state of this VirtualNetworkGatewayPropertiesFormat.
        :param resource_guid: The resource_guid of this VirtualNetworkGatewayPropertiesFormat.
        :param vpn_type: The vpn_type of this VirtualNetworkGatewayPropertiesFormat.
        """
        self.openapi_types = {
            'enable_bgp': bool,
            'gateway_default_site': SubResource,
            'gateway_type': str,
            'ip_configurations': List[VirtualNetworkGatewayIpConfiguration],
            'provisioning_state': str,
            'resource_guid': str,
            'vpn_type': str
        }

        self.attribute_map = {
            'enable_bgp': 'enableBgp',
            'gateway_default_site': 'gatewayDefaultSite',
            'gateway_type': 'gatewayType',
            'ip_configurations': 'ipConfigurations',
            'provisioning_state': 'provisioningState',
            'resource_guid': 'resourceGuid',
            'vpn_type': 'vpnType'
        }

        self._enable_bgp = enable_bgp
        self._gateway_default_site = gateway_default_site
        self._gateway_type = gateway_type
        self._ip_configurations = ip_configurations
        self._provisioning_state = provisioning_state
        self._resource_guid = resource_guid
        self._vpn_type = vpn_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VirtualNetworkGatewayPropertiesFormat':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VirtualNetworkGatewayPropertiesFormat of this VirtualNetworkGatewayPropertiesFormat.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def enable_bgp(self):
        """Gets the enable_bgp of this VirtualNetworkGatewayPropertiesFormat.

        EnableBgp Flag

        :return: The enable_bgp of this VirtualNetworkGatewayPropertiesFormat.
        :rtype: bool
        """
        return self._enable_bgp

    @enable_bgp.setter
    def enable_bgp(self, enable_bgp):
        """Sets the enable_bgp of this VirtualNetworkGatewayPropertiesFormat.

        EnableBgp Flag

        :param enable_bgp: The enable_bgp of this VirtualNetworkGatewayPropertiesFormat.
        :type enable_bgp: bool
        """

        self._enable_bgp = enable_bgp

    @property
    def gateway_default_site(self):
        """Gets the gateway_default_site of this VirtualNetworkGatewayPropertiesFormat.


        :return: The gateway_default_site of this VirtualNetworkGatewayPropertiesFormat.
        :rtype: SubResource
        """
        return self._gateway_default_site

    @gateway_default_site.setter
    def gateway_default_site(self, gateway_default_site):
        """Sets the gateway_default_site of this VirtualNetworkGatewayPropertiesFormat.


        :param gateway_default_site: The gateway_default_site of this VirtualNetworkGatewayPropertiesFormat.
        :type gateway_default_site: SubResource
        """

        self._gateway_default_site = gateway_default_site

    @property
    def gateway_type(self):
        """Gets the gateway_type of this VirtualNetworkGatewayPropertiesFormat.

        The type of this virtual network gateway.

        :return: The gateway_type of this VirtualNetworkGatewayPropertiesFormat.
        :rtype: str
        """
        return self._gateway_type

    @gateway_type.setter
    def gateway_type(self, gateway_type):
        """Sets the gateway_type of this VirtualNetworkGatewayPropertiesFormat.

        The type of this virtual network gateway.

        :param gateway_type: The gateway_type of this VirtualNetworkGatewayPropertiesFormat.
        :type gateway_type: str
        """
        allowed_values = ["Vpn", "ExpressRoute"]  # noqa: E501
        if gateway_type not in allowed_values:
            raise ValueError(
                "Invalid value for `gateway_type` ({0}), must be one of {1}"
                .format(gateway_type, allowed_values)
            )

        self._gateway_type = gateway_type

    @property
    def ip_configurations(self):
        """Gets the ip_configurations of this VirtualNetworkGatewayPropertiesFormat.

        IpConfigurations for Virtual network gateway.

        :return: The ip_configurations of this VirtualNetworkGatewayPropertiesFormat.
        :rtype: List[VirtualNetworkGatewayIpConfiguration]
        """
        return self._ip_configurations

    @ip_configurations.setter
    def ip_configurations(self, ip_configurations):
        """Sets the ip_configurations of this VirtualNetworkGatewayPropertiesFormat.

        IpConfigurations for Virtual network gateway.

        :param ip_configurations: The ip_configurations of this VirtualNetworkGatewayPropertiesFormat.
        :type ip_configurations: List[VirtualNetworkGatewayIpConfiguration]
        """

        self._ip_configurations = ip_configurations

    @property
    def provisioning_state(self):
        """Gets the provisioning_state of this VirtualNetworkGatewayPropertiesFormat.

        Gets or sets Provisioning state of the VirtualNetworkGateway resource Updating/Deleting/Failed

        :return: The provisioning_state of this VirtualNetworkGatewayPropertiesFormat.
        :rtype: str
        """
        return self._provisioning_state

    @provisioning_state.setter
    def provisioning_state(self, provisioning_state):
        """Sets the provisioning_state of this VirtualNetworkGatewayPropertiesFormat.

        Gets or sets Provisioning state of the VirtualNetworkGateway resource Updating/Deleting/Failed

        :param provisioning_state: The provisioning_state of this VirtualNetworkGatewayPropertiesFormat.
        :type provisioning_state: str
        """

        self._provisioning_state = provisioning_state

    @property
    def resource_guid(self):
        """Gets the resource_guid of this VirtualNetworkGatewayPropertiesFormat.

        Gets or sets resource guid property of the VirtualNetworkGateway resource

        :return: The resource_guid of this VirtualNetworkGatewayPropertiesFormat.
        :rtype: str
        """
        return self._resource_guid

    @resource_guid.setter
    def resource_guid(self, resource_guid):
        """Sets the resource_guid of this VirtualNetworkGatewayPropertiesFormat.

        Gets or sets resource guid property of the VirtualNetworkGateway resource

        :param resource_guid: The resource_guid of this VirtualNetworkGatewayPropertiesFormat.
        :type resource_guid: str
        """

        self._resource_guid = resource_guid

    @property
    def vpn_type(self):
        """Gets the vpn_type of this VirtualNetworkGatewayPropertiesFormat.

        The type of this virtual network gateway.

        :return: The vpn_type of this VirtualNetworkGatewayPropertiesFormat.
        :rtype: str
        """
        return self._vpn_type

    @vpn_type.setter
    def vpn_type(self, vpn_type):
        """Sets the vpn_type of this VirtualNetworkGatewayPropertiesFormat.

        The type of this virtual network gateway.

        :param vpn_type: The vpn_type of this VirtualNetworkGatewayPropertiesFormat.
        :type vpn_type: str
        """
        allowed_values = ["PolicyBased", "RouteBased"]  # noqa: E501
        if vpn_type not in allowed_values:
            raise ValueError(
                "Invalid value for `vpn_type` ({0}), must be one of {1}"
                .format(vpn_type, allowed_values)
            )

        self._vpn_type = vpn_type
