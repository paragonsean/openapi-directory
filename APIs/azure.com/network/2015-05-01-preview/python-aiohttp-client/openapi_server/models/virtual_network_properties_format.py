# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.address_space import AddressSpace
from openapi_server.models.dhcp_options import DhcpOptions
from openapi_server.models.subnet import Subnet
from openapi_server import util


class VirtualNetworkPropertiesFormat(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, address_space: AddressSpace=None, dhcp_options: DhcpOptions=None, provisioning_state: str=None, resource_guid: str=None, subnets: List[Subnet]=None):
        """VirtualNetworkPropertiesFormat - a model defined in OpenAPI

        :param address_space: The address_space of this VirtualNetworkPropertiesFormat.
        :param dhcp_options: The dhcp_options of this VirtualNetworkPropertiesFormat.
        :param provisioning_state: The provisioning_state of this VirtualNetworkPropertiesFormat.
        :param resource_guid: The resource_guid of this VirtualNetworkPropertiesFormat.
        :param subnets: The subnets of this VirtualNetworkPropertiesFormat.
        """
        self.openapi_types = {
            'address_space': AddressSpace,
            'dhcp_options': DhcpOptions,
            'provisioning_state': str,
            'resource_guid': str,
            'subnets': List[Subnet]
        }

        self.attribute_map = {
            'address_space': 'addressSpace',
            'dhcp_options': 'dhcpOptions',
            'provisioning_state': 'provisioningState',
            'resource_guid': 'resourceGuid',
            'subnets': 'subnets'
        }

        self._address_space = address_space
        self._dhcp_options = dhcp_options
        self._provisioning_state = provisioning_state
        self._resource_guid = resource_guid
        self._subnets = subnets

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VirtualNetworkPropertiesFormat':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VirtualNetworkPropertiesFormat of this VirtualNetworkPropertiesFormat.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def address_space(self):
        """Gets the address_space of this VirtualNetworkPropertiesFormat.


        :return: The address_space of this VirtualNetworkPropertiesFormat.
        :rtype: AddressSpace
        """
        return self._address_space

    @address_space.setter
    def address_space(self, address_space):
        """Sets the address_space of this VirtualNetworkPropertiesFormat.


        :param address_space: The address_space of this VirtualNetworkPropertiesFormat.
        :type address_space: AddressSpace
        """

        self._address_space = address_space

    @property
    def dhcp_options(self):
        """Gets the dhcp_options of this VirtualNetworkPropertiesFormat.


        :return: The dhcp_options of this VirtualNetworkPropertiesFormat.
        :rtype: DhcpOptions
        """
        return self._dhcp_options

    @dhcp_options.setter
    def dhcp_options(self, dhcp_options):
        """Sets the dhcp_options of this VirtualNetworkPropertiesFormat.


        :param dhcp_options: The dhcp_options of this VirtualNetworkPropertiesFormat.
        :type dhcp_options: DhcpOptions
        """

        self._dhcp_options = dhcp_options

    @property
    def provisioning_state(self):
        """Gets the provisioning_state of this VirtualNetworkPropertiesFormat.

        Gets or sets Provisioning state of the PublicIP resource Updating/Deleting/Failed

        :return: The provisioning_state of this VirtualNetworkPropertiesFormat.
        :rtype: str
        """
        return self._provisioning_state

    @provisioning_state.setter
    def provisioning_state(self, provisioning_state):
        """Sets the provisioning_state of this VirtualNetworkPropertiesFormat.

        Gets or sets Provisioning state of the PublicIP resource Updating/Deleting/Failed

        :param provisioning_state: The provisioning_state of this VirtualNetworkPropertiesFormat.
        :type provisioning_state: str
        """

        self._provisioning_state = provisioning_state

    @property
    def resource_guid(self):
        """Gets the resource_guid of this VirtualNetworkPropertiesFormat.

        Gets or sets resource guid property of the VirtualNetwork resource

        :return: The resource_guid of this VirtualNetworkPropertiesFormat.
        :rtype: str
        """
        return self._resource_guid

    @resource_guid.setter
    def resource_guid(self, resource_guid):
        """Sets the resource_guid of this VirtualNetworkPropertiesFormat.

        Gets or sets resource guid property of the VirtualNetwork resource

        :param resource_guid: The resource_guid of this VirtualNetworkPropertiesFormat.
        :type resource_guid: str
        """

        self._resource_guid = resource_guid

    @property
    def subnets(self):
        """Gets the subnets of this VirtualNetworkPropertiesFormat.

        Gets or sets List of subnets in a VirtualNetwork

        :return: The subnets of this VirtualNetworkPropertiesFormat.
        :rtype: List[Subnet]
        """
        return self._subnets

    @subnets.setter
    def subnets(self, subnets):
        """Sets the subnets of this VirtualNetworkPropertiesFormat.

        Gets or sets List of subnets in a VirtualNetwork

        :param subnets: The subnets of this VirtualNetworkPropertiesFormat.
        :type subnets: List[Subnet]
        """

        self._subnets = subnets
