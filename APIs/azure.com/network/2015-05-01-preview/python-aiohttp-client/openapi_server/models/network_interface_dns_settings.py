# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class NetworkInterfaceDnsSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, applied_dns_servers: List[str]=None, dns_servers: List[str]=None, internal_dns_name_label: str=None, internal_fqdn: str=None):
        """NetworkInterfaceDnsSettings - a model defined in OpenAPI

        :param applied_dns_servers: The applied_dns_servers of this NetworkInterfaceDnsSettings.
        :param dns_servers: The dns_servers of this NetworkInterfaceDnsSettings.
        :param internal_dns_name_label: The internal_dns_name_label of this NetworkInterfaceDnsSettings.
        :param internal_fqdn: The internal_fqdn of this NetworkInterfaceDnsSettings.
        """
        self.openapi_types = {
            'applied_dns_servers': List[str],
            'dns_servers': List[str],
            'internal_dns_name_label': str,
            'internal_fqdn': str
        }

        self.attribute_map = {
            'applied_dns_servers': 'appliedDnsServers',
            'dns_servers': 'dnsServers',
            'internal_dns_name_label': 'internalDnsNameLabel',
            'internal_fqdn': 'internalFqdn'
        }

        self._applied_dns_servers = applied_dns_servers
        self._dns_servers = dns_servers
        self._internal_dns_name_label = internal_dns_name_label
        self._internal_fqdn = internal_fqdn

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NetworkInterfaceDnsSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NetworkInterfaceDnsSettings of this NetworkInterfaceDnsSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def applied_dns_servers(self):
        """Gets the applied_dns_servers of this NetworkInterfaceDnsSettings.

        Gets or sets list of Applied DNS servers IP addresses

        :return: The applied_dns_servers of this NetworkInterfaceDnsSettings.
        :rtype: List[str]
        """
        return self._applied_dns_servers

    @applied_dns_servers.setter
    def applied_dns_servers(self, applied_dns_servers):
        """Sets the applied_dns_servers of this NetworkInterfaceDnsSettings.

        Gets or sets list of Applied DNS servers IP addresses

        :param applied_dns_servers: The applied_dns_servers of this NetworkInterfaceDnsSettings.
        :type applied_dns_servers: List[str]
        """

        self._applied_dns_servers = applied_dns_servers

    @property
    def dns_servers(self):
        """Gets the dns_servers of this NetworkInterfaceDnsSettings.

        Gets or sets list of DNS servers IP addresses

        :return: The dns_servers of this NetworkInterfaceDnsSettings.
        :rtype: List[str]
        """
        return self._dns_servers

    @dns_servers.setter
    def dns_servers(self, dns_servers):
        """Sets the dns_servers of this NetworkInterfaceDnsSettings.

        Gets or sets list of DNS servers IP addresses

        :param dns_servers: The dns_servers of this NetworkInterfaceDnsSettings.
        :type dns_servers: List[str]
        """

        self._dns_servers = dns_servers

    @property
    def internal_dns_name_label(self):
        """Gets the internal_dns_name_label of this NetworkInterfaceDnsSettings.

        Gets or sets the Internal DNS name

        :return: The internal_dns_name_label of this NetworkInterfaceDnsSettings.
        :rtype: str
        """
        return self._internal_dns_name_label

    @internal_dns_name_label.setter
    def internal_dns_name_label(self, internal_dns_name_label):
        """Sets the internal_dns_name_label of this NetworkInterfaceDnsSettings.

        Gets or sets the Internal DNS name

        :param internal_dns_name_label: The internal_dns_name_label of this NetworkInterfaceDnsSettings.
        :type internal_dns_name_label: str
        """

        self._internal_dns_name_label = internal_dns_name_label

    @property
    def internal_fqdn(self):
        """Gets the internal_fqdn of this NetworkInterfaceDnsSettings.

        Gets or sets full IDNS name in the form, DnsName.VnetId.ZoneId.TopLevelSuffix. This is set when the NIC is associated to a VM

        :return: The internal_fqdn of this NetworkInterfaceDnsSettings.
        :rtype: str
        """
        return self._internal_fqdn

    @internal_fqdn.setter
    def internal_fqdn(self, internal_fqdn):
        """Sets the internal_fqdn of this NetworkInterfaceDnsSettings.

        Gets or sets full IDNS name in the form, DnsName.VnetId.ZoneId.TopLevelSuffix. This is set when the NIC is associated to a VM

        :param internal_fqdn: The internal_fqdn of this NetworkInterfaceDnsSettings.
        :type internal_fqdn: str
        """

        self._internal_fqdn = internal_fqdn
