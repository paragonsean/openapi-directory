/**
 * NetworkResourceProviderClient
 * The Windows Azure Network management API provides a RESTful set of web services that interact with Windows Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Windows Azure Networks service.
 *
 * The version of the OpenAPI document: 2015-05-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINetworkInterfaceIpConfigurationPropertiesFormat.h
 *
 * Properties of IPConfiguration
 */

#ifndef OAINetworkInterfaceIpConfigurationPropertiesFormat_H
#define OAINetworkInterfaceIpConfigurationPropertiesFormat_H

#include <QJsonObject>

#include "OAISubResource.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISubResource;

class OAINetworkInterfaceIpConfigurationPropertiesFormat : public OAIObject {
public:
    OAINetworkInterfaceIpConfigurationPropertiesFormat();
    OAINetworkInterfaceIpConfigurationPropertiesFormat(QString json);
    ~OAINetworkInterfaceIpConfigurationPropertiesFormat() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAISubResource> getLoadBalancerBackendAddressPools() const;
    void setLoadBalancerBackendAddressPools(const QList<OAISubResource> &load_balancer_backend_address_pools);
    bool is_load_balancer_backend_address_pools_Set() const;
    bool is_load_balancer_backend_address_pools_Valid() const;

    QList<OAISubResource> getLoadBalancerInboundNatRules() const;
    void setLoadBalancerInboundNatRules(const QList<OAISubResource> &load_balancer_inbound_nat_rules);
    bool is_load_balancer_inbound_nat_rules_Set() const;
    bool is_load_balancer_inbound_nat_rules_Valid() const;

    QString getPrivateIpAddress() const;
    void setPrivateIpAddress(const QString &private_ip_address);
    bool is_private_ip_address_Set() const;
    bool is_private_ip_address_Valid() const;

    QString getPrivateIpAllocationMethod() const;
    void setPrivateIpAllocationMethod(const QString &private_ip_allocation_method);
    bool is_private_ip_allocation_method_Set() const;
    bool is_private_ip_allocation_method_Valid() const;

    QString getProvisioningState() const;
    void setProvisioningState(const QString &provisioning_state);
    bool is_provisioning_state_Set() const;
    bool is_provisioning_state_Valid() const;

    OAISubResource getPublicIpAddress() const;
    void setPublicIpAddress(const OAISubResource &public_ip_address);
    bool is_public_ip_address_Set() const;
    bool is_public_ip_address_Valid() const;

    OAISubResource getSubnet() const;
    void setSubnet(const OAISubResource &subnet);
    bool is_subnet_Set() const;
    bool is_subnet_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAISubResource> m_load_balancer_backend_address_pools;
    bool m_load_balancer_backend_address_pools_isSet;
    bool m_load_balancer_backend_address_pools_isValid;

    QList<OAISubResource> m_load_balancer_inbound_nat_rules;
    bool m_load_balancer_inbound_nat_rules_isSet;
    bool m_load_balancer_inbound_nat_rules_isValid;

    QString m_private_ip_address;
    bool m_private_ip_address_isSet;
    bool m_private_ip_address_isValid;

    QString m_private_ip_allocation_method;
    bool m_private_ip_allocation_method_isSet;
    bool m_private_ip_allocation_method_isValid;

    QString m_provisioning_state;
    bool m_provisioning_state_isSet;
    bool m_provisioning_state_isValid;

    OAISubResource m_public_ip_address;
    bool m_public_ip_address_isSet;
    bool m_public_ip_address_isValid;

    OAISubResource m_subnet;
    bool m_subnet_isSet;
    bool m_subnet_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINetworkInterfaceIpConfigurationPropertiesFormat)

#endif // OAINetworkInterfaceIpConfigurationPropertiesFormat_H
