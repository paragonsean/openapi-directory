/**
 * NetworkResourceProviderClient
 * The Windows Azure Network management API provides a RESTful set of web services that interact with Windows Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Windows Azure Networks service.
 *
 * The version of the OpenAPI document: 2015-05-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPublicIpAddressListResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPublicIpAddressListResult::OAIPublicIpAddressListResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPublicIpAddressListResult::OAIPublicIpAddressListResult() {
    this->initializeModel();
}

OAIPublicIpAddressListResult::~OAIPublicIpAddressListResult() {}

void OAIPublicIpAddressListResult::initializeModel() {

    m_next_link_isSet = false;
    m_next_link_isValid = false;

    m_value_isSet = false;
    m_value_isValid = false;
}

void OAIPublicIpAddressListResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPublicIpAddressListResult::fromJsonObject(QJsonObject json) {

    m_next_link_isValid = ::OpenAPI::fromJsonValue(m_next_link, json[QString("nextLink")]);
    m_next_link_isSet = !json[QString("nextLink")].isNull() && m_next_link_isValid;

    m_value_isValid = ::OpenAPI::fromJsonValue(m_value, json[QString("value")]);
    m_value_isSet = !json[QString("value")].isNull() && m_value_isValid;
}

QString OAIPublicIpAddressListResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPublicIpAddressListResult::asJsonObject() const {
    QJsonObject obj;
    if (m_next_link_isSet) {
        obj.insert(QString("nextLink"), ::OpenAPI::toJsonValue(m_next_link));
    }
    if (m_value.size() > 0) {
        obj.insert(QString("value"), ::OpenAPI::toJsonValue(m_value));
    }
    return obj;
}

QString OAIPublicIpAddressListResult::getNextLink() const {
    return m_next_link;
}
void OAIPublicIpAddressListResult::setNextLink(const QString &next_link) {
    m_next_link = next_link;
    m_next_link_isSet = true;
}

bool OAIPublicIpAddressListResult::is_next_link_Set() const{
    return m_next_link_isSet;
}

bool OAIPublicIpAddressListResult::is_next_link_Valid() const{
    return m_next_link_isValid;
}

QList<OAIPublicIpAddress> OAIPublicIpAddressListResult::getValue() const {
    return m_value;
}
void OAIPublicIpAddressListResult::setValue(const QList<OAIPublicIpAddress> &value) {
    m_value = value;
    m_value_isSet = true;
}

bool OAIPublicIpAddressListResult::is_value_Set() const{
    return m_value_isSet;
}

bool OAIPublicIpAddressListResult::is_value_Valid() const{
    return m_value_isValid;
}

bool OAIPublicIpAddressListResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_next_link_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_value.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPublicIpAddressListResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
