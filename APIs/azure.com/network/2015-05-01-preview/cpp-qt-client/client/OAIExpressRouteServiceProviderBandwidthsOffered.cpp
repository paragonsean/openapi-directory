/**
 * NetworkResourceProviderClient
 * The Windows Azure Network management API provides a RESTful set of web services that interact with Windows Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Windows Azure Networks service.
 *
 * The version of the OpenAPI document: 2015-05-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIExpressRouteServiceProviderBandwidthsOffered.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIExpressRouteServiceProviderBandwidthsOffered::OAIExpressRouteServiceProviderBandwidthsOffered(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIExpressRouteServiceProviderBandwidthsOffered::OAIExpressRouteServiceProviderBandwidthsOffered() {
    this->initializeModel();
}

OAIExpressRouteServiceProviderBandwidthsOffered::~OAIExpressRouteServiceProviderBandwidthsOffered() {}

void OAIExpressRouteServiceProviderBandwidthsOffered::initializeModel() {

    m_offer_name_isSet = false;
    m_offer_name_isValid = false;

    m_value_in_mbps_isSet = false;
    m_value_in_mbps_isValid = false;
}

void OAIExpressRouteServiceProviderBandwidthsOffered::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIExpressRouteServiceProviderBandwidthsOffered::fromJsonObject(QJsonObject json) {

    m_offer_name_isValid = ::OpenAPI::fromJsonValue(m_offer_name, json[QString("offerName")]);
    m_offer_name_isSet = !json[QString("offerName")].isNull() && m_offer_name_isValid;

    m_value_in_mbps_isValid = ::OpenAPI::fromJsonValue(m_value_in_mbps, json[QString("valueInMbps")]);
    m_value_in_mbps_isSet = !json[QString("valueInMbps")].isNull() && m_value_in_mbps_isValid;
}

QString OAIExpressRouteServiceProviderBandwidthsOffered::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIExpressRouteServiceProviderBandwidthsOffered::asJsonObject() const {
    QJsonObject obj;
    if (m_offer_name_isSet) {
        obj.insert(QString("offerName"), ::OpenAPI::toJsonValue(m_offer_name));
    }
    if (m_value_in_mbps_isSet) {
        obj.insert(QString("valueInMbps"), ::OpenAPI::toJsonValue(m_value_in_mbps));
    }
    return obj;
}

QString OAIExpressRouteServiceProviderBandwidthsOffered::getOfferName() const {
    return m_offer_name;
}
void OAIExpressRouteServiceProviderBandwidthsOffered::setOfferName(const QString &offer_name) {
    m_offer_name = offer_name;
    m_offer_name_isSet = true;
}

bool OAIExpressRouteServiceProviderBandwidthsOffered::is_offer_name_Set() const{
    return m_offer_name_isSet;
}

bool OAIExpressRouteServiceProviderBandwidthsOffered::is_offer_name_Valid() const{
    return m_offer_name_isValid;
}

qint32 OAIExpressRouteServiceProviderBandwidthsOffered::getValueInMbps() const {
    return m_value_in_mbps;
}
void OAIExpressRouteServiceProviderBandwidthsOffered::setValueInMbps(const qint32 &value_in_mbps) {
    m_value_in_mbps = value_in_mbps;
    m_value_in_mbps_isSet = true;
}

bool OAIExpressRouteServiceProviderBandwidthsOffered::is_value_in_mbps_Set() const{
    return m_value_in_mbps_isSet;
}

bool OAIExpressRouteServiceProviderBandwidthsOffered::is_value_in_mbps_Valid() const{
    return m_value_in_mbps_isValid;
}

bool OAIExpressRouteServiceProviderBandwidthsOffered::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_offer_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_value_in_mbps_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIExpressRouteServiceProviderBandwidthsOffered::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
