/**
 * NetworkResourceProviderClient
 * The Windows Azure Network management API provides a RESTful set of web services that interact with Windows Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Windows Azure Networks service.
 *
 * The version of the OpenAPI document: 2015-05-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINetworkSecurityGroupPropertiesFormat.h
 *
 * Network Security Group resource
 */

#ifndef OAINetworkSecurityGroupPropertiesFormat_H
#define OAINetworkSecurityGroupPropertiesFormat_H

#include <QJsonObject>

#include "OAISecurityRule.h"
#include "OAISubResource.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISecurityRule;
class OAISubResource;

class OAINetworkSecurityGroupPropertiesFormat : public OAIObject {
public:
    OAINetworkSecurityGroupPropertiesFormat();
    OAINetworkSecurityGroupPropertiesFormat(QString json);
    ~OAINetworkSecurityGroupPropertiesFormat() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAISecurityRule> getDefaultSecurityRules() const;
    void setDefaultSecurityRules(const QList<OAISecurityRule> &default_security_rules);
    bool is_default_security_rules_Set() const;
    bool is_default_security_rules_Valid() const;

    QList<OAISubResource> getNetworkInterfaces() const;
    void setNetworkInterfaces(const QList<OAISubResource> &network_interfaces);
    bool is_network_interfaces_Set() const;
    bool is_network_interfaces_Valid() const;

    QString getProvisioningState() const;
    void setProvisioningState(const QString &provisioning_state);
    bool is_provisioning_state_Set() const;
    bool is_provisioning_state_Valid() const;

    QString getResourceGuid() const;
    void setResourceGuid(const QString &resource_guid);
    bool is_resource_guid_Set() const;
    bool is_resource_guid_Valid() const;

    QList<OAISecurityRule> getSecurityRules() const;
    void setSecurityRules(const QList<OAISecurityRule> &security_rules);
    bool is_security_rules_Set() const;
    bool is_security_rules_Valid() const;

    QList<OAISubResource> getSubnets() const;
    void setSubnets(const QList<OAISubResource> &subnets);
    bool is_subnets_Set() const;
    bool is_subnets_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAISecurityRule> m_default_security_rules;
    bool m_default_security_rules_isSet;
    bool m_default_security_rules_isValid;

    QList<OAISubResource> m_network_interfaces;
    bool m_network_interfaces_isSet;
    bool m_network_interfaces_isValid;

    QString m_provisioning_state;
    bool m_provisioning_state_isSet;
    bool m_provisioning_state_isValid;

    QString m_resource_guid;
    bool m_resource_guid_isSet;
    bool m_resource_guid_isValid;

    QList<OAISecurityRule> m_security_rules;
    bool m_security_rules_isSet;
    bool m_security_rules_isValid;

    QList<OAISubResource> m_subnets;
    bool m_subnets_isSet;
    bool m_subnets_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINetworkSecurityGroupPropertiesFormat)

#endif // OAINetworkSecurityGroupPropertiesFormat_H
