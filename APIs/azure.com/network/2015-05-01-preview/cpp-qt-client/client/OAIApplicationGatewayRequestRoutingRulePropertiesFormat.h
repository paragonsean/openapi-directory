/**
 * NetworkResourceProviderClient
 * The Windows Azure Network management API provides a RESTful set of web services that interact with Windows Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Windows Azure Networks service.
 *
 * The version of the OpenAPI document: 2015-05-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIApplicationGatewayRequestRoutingRulePropertiesFormat.h
 *
 * Properties of Request routing rule of application gateway
 */

#ifndef OAIApplicationGatewayRequestRoutingRulePropertiesFormat_H
#define OAIApplicationGatewayRequestRoutingRulePropertiesFormat_H

#include <QJsonObject>

#include "OAISubResource.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISubResource;

class OAIApplicationGatewayRequestRoutingRulePropertiesFormat : public OAIObject {
public:
    OAIApplicationGatewayRequestRoutingRulePropertiesFormat();
    OAIApplicationGatewayRequestRoutingRulePropertiesFormat(QString json);
    ~OAIApplicationGatewayRequestRoutingRulePropertiesFormat() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAISubResource getBackendAddressPool() const;
    void setBackendAddressPool(const OAISubResource &backend_address_pool);
    bool is_backend_address_pool_Set() const;
    bool is_backend_address_pool_Valid() const;

    OAISubResource getBackendHttpSettings() const;
    void setBackendHttpSettings(const OAISubResource &backend_http_settings);
    bool is_backend_http_settings_Set() const;
    bool is_backend_http_settings_Valid() const;

    OAISubResource getHttpListener() const;
    void setHttpListener(const OAISubResource &http_listener);
    bool is_http_listener_Set() const;
    bool is_http_listener_Valid() const;

    QString getProvisioningState() const;
    void setProvisioningState(const QString &provisioning_state);
    bool is_provisioning_state_Set() const;
    bool is_provisioning_state_Valid() const;

    QString getRuleType() const;
    void setRuleType(const QString &rule_type);
    bool is_rule_type_Set() const;
    bool is_rule_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAISubResource m_backend_address_pool;
    bool m_backend_address_pool_isSet;
    bool m_backend_address_pool_isValid;

    OAISubResource m_backend_http_settings;
    bool m_backend_http_settings_isSet;
    bool m_backend_http_settings_isValid;

    OAISubResource m_http_listener;
    bool m_http_listener_isSet;
    bool m_http_listener_isValid;

    QString m_provisioning_state;
    bool m_provisioning_state_isSet;
    bool m_provisioning_state_isValid;

    QString m_rule_type;
    bool m_rule_type_isSet;
    bool m_rule_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIApplicationGatewayRequestRoutingRulePropertiesFormat)

#endif // OAIApplicationGatewayRequestRoutingRulePropertiesFormat_H
