/**
 * NetworkResourceProviderClient
 * The Windows Azure Network management API provides a RESTful set of web services that interact with Windows Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Windows Azure Networks service.
 *
 * The version of the OpenAPI document: 2015-05-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOutboundNatRulePropertiesFormat.h
 *
 * Outbound NAT pool of the loadbalancer
 */

#ifndef OAIOutboundNatRulePropertiesFormat_H
#define OAIOutboundNatRulePropertiesFormat_H

#include <QJsonObject>

#include "OAISubResource.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISubResource;

class OAIOutboundNatRulePropertiesFormat : public OAIObject {
public:
    OAIOutboundNatRulePropertiesFormat();
    OAIOutboundNatRulePropertiesFormat(QString json);
    ~OAIOutboundNatRulePropertiesFormat() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getAllocatedOutboundPorts() const;
    void setAllocatedOutboundPorts(const qint32 &allocated_outbound_ports);
    bool is_allocated_outbound_ports_Set() const;
    bool is_allocated_outbound_ports_Valid() const;

    OAISubResource getBackendAddressPool() const;
    void setBackendAddressPool(const OAISubResource &backend_address_pool);
    bool is_backend_address_pool_Set() const;
    bool is_backend_address_pool_Valid() const;

    QList<OAISubResource> getFrontendIpConfigurations() const;
    void setFrontendIpConfigurations(const QList<OAISubResource> &frontend_ip_configurations);
    bool is_frontend_ip_configurations_Set() const;
    bool is_frontend_ip_configurations_Valid() const;

    QString getProvisioningState() const;
    void setProvisioningState(const QString &provisioning_state);
    bool is_provisioning_state_Set() const;
    bool is_provisioning_state_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_allocated_outbound_ports;
    bool m_allocated_outbound_ports_isSet;
    bool m_allocated_outbound_ports_isValid;

    OAISubResource m_backend_address_pool;
    bool m_backend_address_pool_isSet;
    bool m_backend_address_pool_isValid;

    QList<OAISubResource> m_frontend_ip_configurations;
    bool m_frontend_ip_configurations_isSet;
    bool m_frontend_ip_configurations_isValid;

    QString m_provisioning_state;
    bool m_provisioning_state_isSet;
    bool m_provisioning_state_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIOutboundNatRulePropertiesFormat)

#endif // OAIOutboundNatRulePropertiesFormat_H
