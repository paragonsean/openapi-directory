/**
 * NetworkResourceProviderClient
 * The Windows Azure Network management API provides a RESTful set of web services that interact with Windows Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Windows Azure Networks service.
 *
 * The version of the OpenAPI document: 2015-05-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVirtualNetworkGatewayPropertiesFormat.h
 *
 * VirtualNetworkGateway properties
 */

#ifndef OAIVirtualNetworkGatewayPropertiesFormat_H
#define OAIVirtualNetworkGatewayPropertiesFormat_H

#include <QJsonObject>

#include "OAISubResource.h"
#include "OAIVirtualNetworkGatewayIpConfiguration.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISubResource;
class OAIVirtualNetworkGatewayIpConfiguration;

class OAIVirtualNetworkGatewayPropertiesFormat : public OAIObject {
public:
    OAIVirtualNetworkGatewayPropertiesFormat();
    OAIVirtualNetworkGatewayPropertiesFormat(QString json);
    ~OAIVirtualNetworkGatewayPropertiesFormat() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isEnableBgp() const;
    void setEnableBgp(const bool &enable_bgp);
    bool is_enable_bgp_Set() const;
    bool is_enable_bgp_Valid() const;

    OAISubResource getGatewayDefaultSite() const;
    void setGatewayDefaultSite(const OAISubResource &gateway_default_site);
    bool is_gateway_default_site_Set() const;
    bool is_gateway_default_site_Valid() const;

    QString getGatewayType() const;
    void setGatewayType(const QString &gateway_type);
    bool is_gateway_type_Set() const;
    bool is_gateway_type_Valid() const;

    QList<OAIVirtualNetworkGatewayIpConfiguration> getIpConfigurations() const;
    void setIpConfigurations(const QList<OAIVirtualNetworkGatewayIpConfiguration> &ip_configurations);
    bool is_ip_configurations_Set() const;
    bool is_ip_configurations_Valid() const;

    QString getProvisioningState() const;
    void setProvisioningState(const QString &provisioning_state);
    bool is_provisioning_state_Set() const;
    bool is_provisioning_state_Valid() const;

    QString getResourceGuid() const;
    void setResourceGuid(const QString &resource_guid);
    bool is_resource_guid_Set() const;
    bool is_resource_guid_Valid() const;

    QString getVpnType() const;
    void setVpnType(const QString &vpn_type);
    bool is_vpn_type_Set() const;
    bool is_vpn_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_enable_bgp;
    bool m_enable_bgp_isSet;
    bool m_enable_bgp_isValid;

    OAISubResource m_gateway_default_site;
    bool m_gateway_default_site_isSet;
    bool m_gateway_default_site_isValid;

    QString m_gateway_type;
    bool m_gateway_type_isSet;
    bool m_gateway_type_isValid;

    QList<OAIVirtualNetworkGatewayIpConfiguration> m_ip_configurations;
    bool m_ip_configurations_isSet;
    bool m_ip_configurations_isValid;

    QString m_provisioning_state;
    bool m_provisioning_state_isSet;
    bool m_provisioning_state_isValid;

    QString m_resource_guid;
    bool m_resource_guid_isSet;
    bool m_resource_guid_isValid;

    QString m_vpn_type;
    bool m_vpn_type_isSet;
    bool m_vpn_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVirtualNetworkGatewayPropertiesFormat)

#endif // OAIVirtualNetworkGatewayPropertiesFormat_H
