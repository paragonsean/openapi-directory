/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2016-03-30
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApplicationGatewayBackendAddress.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApplicationGatewayBackendAddress::OAIApplicationGatewayBackendAddress(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApplicationGatewayBackendAddress::OAIApplicationGatewayBackendAddress() {
    this->initializeModel();
}

OAIApplicationGatewayBackendAddress::~OAIApplicationGatewayBackendAddress() {}

void OAIApplicationGatewayBackendAddress::initializeModel() {

    m_fqdn_isSet = false;
    m_fqdn_isValid = false;

    m_ip_address_isSet = false;
    m_ip_address_isValid = false;
}

void OAIApplicationGatewayBackendAddress::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIApplicationGatewayBackendAddress::fromJsonObject(QJsonObject json) {

    m_fqdn_isValid = ::OpenAPI::fromJsonValue(m_fqdn, json[QString("fqdn")]);
    m_fqdn_isSet = !json[QString("fqdn")].isNull() && m_fqdn_isValid;

    m_ip_address_isValid = ::OpenAPI::fromJsonValue(m_ip_address, json[QString("ipAddress")]);
    m_ip_address_isSet = !json[QString("ipAddress")].isNull() && m_ip_address_isValid;
}

QString OAIApplicationGatewayBackendAddress::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIApplicationGatewayBackendAddress::asJsonObject() const {
    QJsonObject obj;
    if (m_fqdn_isSet) {
        obj.insert(QString("fqdn"), ::OpenAPI::toJsonValue(m_fqdn));
    }
    if (m_ip_address_isSet) {
        obj.insert(QString("ipAddress"), ::OpenAPI::toJsonValue(m_ip_address));
    }
    return obj;
}

QString OAIApplicationGatewayBackendAddress::getFqdn() const {
    return m_fqdn;
}
void OAIApplicationGatewayBackendAddress::setFqdn(const QString &fqdn) {
    m_fqdn = fqdn;
    m_fqdn_isSet = true;
}

bool OAIApplicationGatewayBackendAddress::is_fqdn_Set() const{
    return m_fqdn_isSet;
}

bool OAIApplicationGatewayBackendAddress::is_fqdn_Valid() const{
    return m_fqdn_isValid;
}

QString OAIApplicationGatewayBackendAddress::getIpAddress() const {
    return m_ip_address;
}
void OAIApplicationGatewayBackendAddress::setIpAddress(const QString &ip_address) {
    m_ip_address = ip_address;
    m_ip_address_isSet = true;
}

bool OAIApplicationGatewayBackendAddress::is_ip_address_Set() const{
    return m_ip_address_isSet;
}

bool OAIApplicationGatewayBackendAddress::is_ip_address_Valid() const{
    return m_ip_address_isValid;
}

bool OAIApplicationGatewayBackendAddress::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_fqdn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ip_address_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIApplicationGatewayBackendAddress::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
