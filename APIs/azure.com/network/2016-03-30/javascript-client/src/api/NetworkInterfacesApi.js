/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2016-03-30
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import NetworkInterface from '../model/NetworkInterface';
import NetworkInterfaceListResult from '../model/NetworkInterfaceListResult';

/**
* NetworkInterfaces service.
* @module api/NetworkInterfacesApi
* @version 2016-03-30
*/
export default class NetworkInterfacesApi {

    /**
    * Constructs a new NetworkInterfacesApi. 
    * @alias module:api/NetworkInterfacesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the networkInterfacesCreateOrUpdate operation.
     * @callback module:api/NetworkInterfacesApi~networkInterfacesCreateOrUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/NetworkInterface} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * The Put NetworkInterface operation creates/updates a networkInterface
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} networkInterfaceName The name of the network interface.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:model/NetworkInterface} parameters Parameters supplied to the create/update NetworkInterface operation
     * @param {module:api/NetworkInterfacesApi~networkInterfacesCreateOrUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/NetworkInterface}
     */
    networkInterfacesCreateOrUpdate(resourceGroupName, networkInterfaceName, apiVersion, subscriptionId, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling networkInterfacesCreateOrUpdate");
      }
      // verify the required parameter 'networkInterfaceName' is set
      if (networkInterfaceName === undefined || networkInterfaceName === null) {
        throw new Error("Missing the required parameter 'networkInterfaceName' when calling networkInterfacesCreateOrUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling networkInterfacesCreateOrUpdate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling networkInterfacesCreateOrUpdate");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling networkInterfacesCreateOrUpdate");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'networkInterfaceName': networkInterfaceName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json', 'text/json'];
      let accepts = ['application/json', 'text/json'];
      let returnType = NetworkInterface;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the networkInterfacesDelete operation.
     * @callback module:api/NetworkInterfacesApi~networkInterfacesDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * The delete networkInterface operation deletes the specified networkInterface.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} networkInterfaceName The name of the network interface.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/NetworkInterfacesApi~networkInterfacesDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    networkInterfacesDelete(resourceGroupName, networkInterfaceName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling networkInterfacesDelete");
      }
      // verify the required parameter 'networkInterfaceName' is set
      if (networkInterfaceName === undefined || networkInterfaceName === null) {
        throw new Error("Missing the required parameter 'networkInterfaceName' when calling networkInterfacesDelete");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling networkInterfacesDelete");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling networkInterfacesDelete");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'networkInterfaceName': networkInterfaceName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the networkInterfacesGet operation.
     * @callback module:api/NetworkInterfacesApi~networkInterfacesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/NetworkInterface} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * The Get network interface operation retrieves information about the specified network interface.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} networkInterfaceName The name of the network interface.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {Object} opts Optional parameters
     * @param {String} [expand] expand references resources.
     * @param {module:api/NetworkInterfacesApi~networkInterfacesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/NetworkInterface}
     */
    networkInterfacesGet(resourceGroupName, networkInterfaceName, apiVersion, subscriptionId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling networkInterfacesGet");
      }
      // verify the required parameter 'networkInterfaceName' is set
      if (networkInterfaceName === undefined || networkInterfaceName === null) {
        throw new Error("Missing the required parameter 'networkInterfaceName' when calling networkInterfacesGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling networkInterfacesGet");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling networkInterfacesGet");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'networkInterfaceName': networkInterfaceName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion,
        '$expand': opts['expand']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json'];
      let returnType = NetworkInterface;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the networkInterfacesGetVirtualMachineScaleSetNetworkInterface operation.
     * @callback module:api/NetworkInterfacesApi~networkInterfacesGetVirtualMachineScaleSetNetworkInterfaceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/NetworkInterface} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * The Get network interface operation retrieves information about the specified network interface in a virtual machine scale set.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} virtualMachineScaleSetName The name of the virtual machine scale set.
     * @param {String} virtualmachineIndex The virtual machine index.
     * @param {String} networkInterfaceName The name of the network interface.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {Object} opts Optional parameters
     * @param {String} [expand] expand references resources.
     * @param {module:api/NetworkInterfacesApi~networkInterfacesGetVirtualMachineScaleSetNetworkInterfaceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/NetworkInterface}
     */
    networkInterfacesGetVirtualMachineScaleSetNetworkInterface(resourceGroupName, virtualMachineScaleSetName, virtualmachineIndex, networkInterfaceName, apiVersion, subscriptionId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling networkInterfacesGetVirtualMachineScaleSetNetworkInterface");
      }
      // verify the required parameter 'virtualMachineScaleSetName' is set
      if (virtualMachineScaleSetName === undefined || virtualMachineScaleSetName === null) {
        throw new Error("Missing the required parameter 'virtualMachineScaleSetName' when calling networkInterfacesGetVirtualMachineScaleSetNetworkInterface");
      }
      // verify the required parameter 'virtualmachineIndex' is set
      if (virtualmachineIndex === undefined || virtualmachineIndex === null) {
        throw new Error("Missing the required parameter 'virtualmachineIndex' when calling networkInterfacesGetVirtualMachineScaleSetNetworkInterface");
      }
      // verify the required parameter 'networkInterfaceName' is set
      if (networkInterfaceName === undefined || networkInterfaceName === null) {
        throw new Error("Missing the required parameter 'networkInterfaceName' when calling networkInterfacesGetVirtualMachineScaleSetNetworkInterface");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling networkInterfacesGetVirtualMachineScaleSetNetworkInterface");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling networkInterfacesGetVirtualMachineScaleSetNetworkInterface");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'virtualMachineScaleSetName': virtualMachineScaleSetName,
        'virtualmachineIndex': virtualmachineIndex,
        'networkInterfaceName': networkInterfaceName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion,
        '$expand': opts['expand']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json'];
      let returnType = NetworkInterface;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.Compute/virtualMachineScaleSets/{virtualMachineScaleSetName}/virtualMachines/{virtualmachineIndex}/networkInterfaces/{networkInterfaceName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the networkInterfacesList operation.
     * @callback module:api/NetworkInterfacesApi~networkInterfacesListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/NetworkInterfaceListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * The List networkInterfaces operation retrieves all the networkInterfaces in a resource group.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/NetworkInterfacesApi~networkInterfacesListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/NetworkInterfaceListResult}
     */
    networkInterfacesList(resourceGroupName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling networkInterfacesList");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling networkInterfacesList");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling networkInterfacesList");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json'];
      let returnType = NetworkInterfaceListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the networkInterfacesListAll operation.
     * @callback module:api/NetworkInterfacesApi~networkInterfacesListAllCallback
     * @param {String} error Error message, if any.
     * @param {module:model/NetworkInterfaceListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * The List networkInterfaces operation retrieves all the networkInterfaces in a subscription.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/NetworkInterfacesApi~networkInterfacesListAllCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/NetworkInterfaceListResult}
     */
    networkInterfacesListAll(apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling networkInterfacesListAll");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling networkInterfacesListAll");
      }

      let pathParams = {
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json'];
      let returnType = NetworkInterfaceListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.Network/networkInterfaces', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the networkInterfacesListVirtualMachineScaleSetNetworkInterfaces operation.
     * @callback module:api/NetworkInterfacesApi~networkInterfacesListVirtualMachineScaleSetNetworkInterfacesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/NetworkInterfaceListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * The list network interface operation retrieves information about all network interfaces in a virtual machine scale set.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} virtualMachineScaleSetName The name of the virtual machine scale set.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/NetworkInterfacesApi~networkInterfacesListVirtualMachineScaleSetNetworkInterfacesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/NetworkInterfaceListResult}
     */
    networkInterfacesListVirtualMachineScaleSetNetworkInterfaces(resourceGroupName, virtualMachineScaleSetName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling networkInterfacesListVirtualMachineScaleSetNetworkInterfaces");
      }
      // verify the required parameter 'virtualMachineScaleSetName' is set
      if (virtualMachineScaleSetName === undefined || virtualMachineScaleSetName === null) {
        throw new Error("Missing the required parameter 'virtualMachineScaleSetName' when calling networkInterfacesListVirtualMachineScaleSetNetworkInterfaces");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling networkInterfacesListVirtualMachineScaleSetNetworkInterfaces");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling networkInterfacesListVirtualMachineScaleSetNetworkInterfaces");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'virtualMachineScaleSetName': virtualMachineScaleSetName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json'];
      let returnType = NetworkInterfaceListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.Compute/virtualMachineScaleSets/{virtualMachineScaleSetName}/networkInterfaces', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the networkInterfacesListVirtualMachineScaleSetVMNetworkInterfaces operation.
     * @callback module:api/NetworkInterfacesApi~networkInterfacesListVirtualMachineScaleSetVMNetworkInterfacesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/NetworkInterfaceListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * The list network interface operation retrieves information about all network interfaces in a virtual machine from a virtual machine scale set.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} virtualMachineScaleSetName The name of the virtual machine scale set.
     * @param {String} virtualmachineIndex The virtual machine index.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/NetworkInterfacesApi~networkInterfacesListVirtualMachineScaleSetVMNetworkInterfacesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/NetworkInterfaceListResult}
     */
    networkInterfacesListVirtualMachineScaleSetVMNetworkInterfaces(resourceGroupName, virtualMachineScaleSetName, virtualmachineIndex, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling networkInterfacesListVirtualMachineScaleSetVMNetworkInterfaces");
      }
      // verify the required parameter 'virtualMachineScaleSetName' is set
      if (virtualMachineScaleSetName === undefined || virtualMachineScaleSetName === null) {
        throw new Error("Missing the required parameter 'virtualMachineScaleSetName' when calling networkInterfacesListVirtualMachineScaleSetVMNetworkInterfaces");
      }
      // verify the required parameter 'virtualmachineIndex' is set
      if (virtualmachineIndex === undefined || virtualmachineIndex === null) {
        throw new Error("Missing the required parameter 'virtualmachineIndex' when calling networkInterfacesListVirtualMachineScaleSetVMNetworkInterfaces");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling networkInterfacesListVirtualMachineScaleSetVMNetworkInterfaces");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling networkInterfacesListVirtualMachineScaleSetVMNetworkInterfaces");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'virtualMachineScaleSetName': virtualMachineScaleSetName,
        'virtualmachineIndex': virtualmachineIndex,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json'];
      let returnType = NetworkInterfaceListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.Compute/virtualMachineScaleSets/{virtualMachineScaleSetName}/virtualMachines/{virtualmachineIndex}/networkInterfaces', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
