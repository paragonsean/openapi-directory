/*
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2016-03-30
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.NetworkInterface;
import org.openapitools.client.model.SecurityRule;
import org.openapitools.client.model.Subnet;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Network Security Group resource
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:26:21.906013-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class NetworkSecurityGroupPropertiesFormat {
  public static final String SERIALIZED_NAME_DEFAULT_SECURITY_RULES = "defaultSecurityRules";
  @SerializedName(SERIALIZED_NAME_DEFAULT_SECURITY_RULES)
  private List<SecurityRule> defaultSecurityRules = new ArrayList<>();

  public static final String SERIALIZED_NAME_NETWORK_INTERFACES = "networkInterfaces";
  @SerializedName(SERIALIZED_NAME_NETWORK_INTERFACES)
  private List<NetworkInterface> networkInterfaces = new ArrayList<>();

  public static final String SERIALIZED_NAME_PROVISIONING_STATE = "provisioningState";
  @SerializedName(SERIALIZED_NAME_PROVISIONING_STATE)
  private String provisioningState;

  public static final String SERIALIZED_NAME_RESOURCE_GUID = "resourceGuid";
  @SerializedName(SERIALIZED_NAME_RESOURCE_GUID)
  private String resourceGuid;

  public static final String SERIALIZED_NAME_SECURITY_RULES = "securityRules";
  @SerializedName(SERIALIZED_NAME_SECURITY_RULES)
  private List<SecurityRule> securityRules = new ArrayList<>();

  public static final String SERIALIZED_NAME_SUBNETS = "subnets";
  @SerializedName(SERIALIZED_NAME_SUBNETS)
  private List<Subnet> subnets = new ArrayList<>();

  public NetworkSecurityGroupPropertiesFormat() {
  }

  public NetworkSecurityGroupPropertiesFormat defaultSecurityRules(List<SecurityRule> defaultSecurityRules) {
    this.defaultSecurityRules = defaultSecurityRules;
    return this;
  }

  public NetworkSecurityGroupPropertiesFormat addDefaultSecurityRulesItem(SecurityRule defaultSecurityRulesItem) {
    if (this.defaultSecurityRules == null) {
      this.defaultSecurityRules = new ArrayList<>();
    }
    this.defaultSecurityRules.add(defaultSecurityRulesItem);
    return this;
  }

  /**
   * Gets or sets Default security rules of network security group
   * @return defaultSecurityRules
   */
  @javax.annotation.Nullable
  public List<SecurityRule> getDefaultSecurityRules() {
    return defaultSecurityRules;
  }

  public void setDefaultSecurityRules(List<SecurityRule> defaultSecurityRules) {
    this.defaultSecurityRules = defaultSecurityRules;
  }


  public NetworkSecurityGroupPropertiesFormat networkInterfaces(List<NetworkInterface> networkInterfaces) {
    this.networkInterfaces = networkInterfaces;
    return this;
  }

  public NetworkSecurityGroupPropertiesFormat addNetworkInterfacesItem(NetworkInterface networkInterfacesItem) {
    if (this.networkInterfaces == null) {
      this.networkInterfaces = new ArrayList<>();
    }
    this.networkInterfaces.add(networkInterfacesItem);
    return this;
  }

  /**
   * Gets collection of references to Network Interfaces
   * @return networkInterfaces
   */
  @javax.annotation.Nullable
  public List<NetworkInterface> getNetworkInterfaces() {
    return networkInterfaces;
  }

  public void setNetworkInterfaces(List<NetworkInterface> networkInterfaces) {
    this.networkInterfaces = networkInterfaces;
  }


  public NetworkSecurityGroupPropertiesFormat provisioningState(String provisioningState) {
    this.provisioningState = provisioningState;
    return this;
  }

  /**
   * Gets or sets Provisioning state of the PublicIP resource Updating/Deleting/Failed
   * @return provisioningState
   */
  @javax.annotation.Nullable
  public String getProvisioningState() {
    return provisioningState;
  }

  public void setProvisioningState(String provisioningState) {
    this.provisioningState = provisioningState;
  }


  public NetworkSecurityGroupPropertiesFormat resourceGuid(String resourceGuid) {
    this.resourceGuid = resourceGuid;
    return this;
  }

  /**
   * Gets or sets resource GUID property of the network security group resource
   * @return resourceGuid
   */
  @javax.annotation.Nullable
  public String getResourceGuid() {
    return resourceGuid;
  }

  public void setResourceGuid(String resourceGuid) {
    this.resourceGuid = resourceGuid;
  }


  public NetworkSecurityGroupPropertiesFormat securityRules(List<SecurityRule> securityRules) {
    this.securityRules = securityRules;
    return this;
  }

  public NetworkSecurityGroupPropertiesFormat addSecurityRulesItem(SecurityRule securityRulesItem) {
    if (this.securityRules == null) {
      this.securityRules = new ArrayList<>();
    }
    this.securityRules.add(securityRulesItem);
    return this;
  }

  /**
   * Gets or sets Security rules of network security group
   * @return securityRules
   */
  @javax.annotation.Nullable
  public List<SecurityRule> getSecurityRules() {
    return securityRules;
  }

  public void setSecurityRules(List<SecurityRule> securityRules) {
    this.securityRules = securityRules;
  }


  public NetworkSecurityGroupPropertiesFormat subnets(List<Subnet> subnets) {
    this.subnets = subnets;
    return this;
  }

  public NetworkSecurityGroupPropertiesFormat addSubnetsItem(Subnet subnetsItem) {
    if (this.subnets == null) {
      this.subnets = new ArrayList<>();
    }
    this.subnets.add(subnetsItem);
    return this;
  }

  /**
   * Gets collection of references to subnets
   * @return subnets
   */
  @javax.annotation.Nullable
  public List<Subnet> getSubnets() {
    return subnets;
  }

  public void setSubnets(List<Subnet> subnets) {
    this.subnets = subnets;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NetworkSecurityGroupPropertiesFormat networkSecurityGroupPropertiesFormat = (NetworkSecurityGroupPropertiesFormat) o;
    return Objects.equals(this.defaultSecurityRules, networkSecurityGroupPropertiesFormat.defaultSecurityRules) &&
        Objects.equals(this.networkInterfaces, networkSecurityGroupPropertiesFormat.networkInterfaces) &&
        Objects.equals(this.provisioningState, networkSecurityGroupPropertiesFormat.provisioningState) &&
        Objects.equals(this.resourceGuid, networkSecurityGroupPropertiesFormat.resourceGuid) &&
        Objects.equals(this.securityRules, networkSecurityGroupPropertiesFormat.securityRules) &&
        Objects.equals(this.subnets, networkSecurityGroupPropertiesFormat.subnets);
  }

  @Override
  public int hashCode() {
    return Objects.hash(defaultSecurityRules, networkInterfaces, provisioningState, resourceGuid, securityRules, subnets);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NetworkSecurityGroupPropertiesFormat {\n");
    sb.append("    defaultSecurityRules: ").append(toIndentedString(defaultSecurityRules)).append("\n");
    sb.append("    networkInterfaces: ").append(toIndentedString(networkInterfaces)).append("\n");
    sb.append("    provisioningState: ").append(toIndentedString(provisioningState)).append("\n");
    sb.append("    resourceGuid: ").append(toIndentedString(resourceGuid)).append("\n");
    sb.append("    securityRules: ").append(toIndentedString(securityRules)).append("\n");
    sb.append("    subnets: ").append(toIndentedString(subnets)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("defaultSecurityRules");
    openapiFields.add("networkInterfaces");
    openapiFields.add("provisioningState");
    openapiFields.add("resourceGuid");
    openapiFields.add("securityRules");
    openapiFields.add("subnets");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to NetworkSecurityGroupPropertiesFormat
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!NetworkSecurityGroupPropertiesFormat.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in NetworkSecurityGroupPropertiesFormat is not found in the empty JSON string", NetworkSecurityGroupPropertiesFormat.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!NetworkSecurityGroupPropertiesFormat.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `NetworkSecurityGroupPropertiesFormat` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("defaultSecurityRules") != null && !jsonObj.get("defaultSecurityRules").isJsonNull()) {
        JsonArray jsonArraydefaultSecurityRules = jsonObj.getAsJsonArray("defaultSecurityRules");
        if (jsonArraydefaultSecurityRules != null) {
          // ensure the json data is an array
          if (!jsonObj.get("defaultSecurityRules").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `defaultSecurityRules` to be an array in the JSON string but got `%s`", jsonObj.get("defaultSecurityRules").toString()));
          }

          // validate the optional field `defaultSecurityRules` (array)
          for (int i = 0; i < jsonArraydefaultSecurityRules.size(); i++) {
            SecurityRule.validateJsonElement(jsonArraydefaultSecurityRules.get(i));
          };
        }
      }
      if (jsonObj.get("networkInterfaces") != null && !jsonObj.get("networkInterfaces").isJsonNull()) {
        JsonArray jsonArraynetworkInterfaces = jsonObj.getAsJsonArray("networkInterfaces");
        if (jsonArraynetworkInterfaces != null) {
          // ensure the json data is an array
          if (!jsonObj.get("networkInterfaces").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `networkInterfaces` to be an array in the JSON string but got `%s`", jsonObj.get("networkInterfaces").toString()));
          }

          // validate the optional field `networkInterfaces` (array)
          for (int i = 0; i < jsonArraynetworkInterfaces.size(); i++) {
            NetworkInterface.validateJsonElement(jsonArraynetworkInterfaces.get(i));
          };
        }
      }
      if ((jsonObj.get("provisioningState") != null && !jsonObj.get("provisioningState").isJsonNull()) && !jsonObj.get("provisioningState").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `provisioningState` to be a primitive type in the JSON string but got `%s`", jsonObj.get("provisioningState").toString()));
      }
      if ((jsonObj.get("resourceGuid") != null && !jsonObj.get("resourceGuid").isJsonNull()) && !jsonObj.get("resourceGuid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `resourceGuid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("resourceGuid").toString()));
      }
      if (jsonObj.get("securityRules") != null && !jsonObj.get("securityRules").isJsonNull()) {
        JsonArray jsonArraysecurityRules = jsonObj.getAsJsonArray("securityRules");
        if (jsonArraysecurityRules != null) {
          // ensure the json data is an array
          if (!jsonObj.get("securityRules").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `securityRules` to be an array in the JSON string but got `%s`", jsonObj.get("securityRules").toString()));
          }

          // validate the optional field `securityRules` (array)
          for (int i = 0; i < jsonArraysecurityRules.size(); i++) {
            SecurityRule.validateJsonElement(jsonArraysecurityRules.get(i));
          };
        }
      }
      if (jsonObj.get("subnets") != null && !jsonObj.get("subnets").isJsonNull()) {
        JsonArray jsonArraysubnets = jsonObj.getAsJsonArray("subnets");
        if (jsonArraysubnets != null) {
          // ensure the json data is an array
          if (!jsonObj.get("subnets").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `subnets` to be an array in the JSON string but got `%s`", jsonObj.get("subnets").toString()));
          }

          // validate the optional field `subnets` (array)
          for (int i = 0; i < jsonArraysubnets.size(); i++) {
            Subnet.validateJsonElement(jsonArraysubnets.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!NetworkSecurityGroupPropertiesFormat.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'NetworkSecurityGroupPropertiesFormat' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<NetworkSecurityGroupPropertiesFormat> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(NetworkSecurityGroupPropertiesFormat.class));

       return (TypeAdapter<T>) new TypeAdapter<NetworkSecurityGroupPropertiesFormat>() {
           @Override
           public void write(JsonWriter out, NetworkSecurityGroupPropertiesFormat value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public NetworkSecurityGroupPropertiesFormat read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of NetworkSecurityGroupPropertiesFormat given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of NetworkSecurityGroupPropertiesFormat
   * @throws IOException if the JSON string is invalid with respect to NetworkSecurityGroupPropertiesFormat
   */
  public static NetworkSecurityGroupPropertiesFormat fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, NetworkSecurityGroupPropertiesFormat.class);
  }

  /**
   * Convert an instance of NetworkSecurityGroupPropertiesFormat to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

