/*
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2016-03-30
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ExpressRouteCircuit;
import org.openapitools.client.model.ExpressRouteCircuitListResult;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ExpressRouteCircuitsApi
 */
@Disabled
public class ExpressRouteCircuitsApiTest {

    private final ExpressRouteCircuitsApi api = new ExpressRouteCircuitsApi();

    /**
     * The Put ExpressRouteCircuit operation creates/updates a ExpressRouteCircuit
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void expressRouteCircuitsCreateOrUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String circuitName = null;
        String apiVersion = null;
        String subscriptionId = null;
        ExpressRouteCircuit parameters = null;
        ExpressRouteCircuit response = api.expressRouteCircuitsCreateOrUpdate(resourceGroupName, circuitName, apiVersion, subscriptionId, parameters);
        // TODO: test validations
    }

    /**
     * The delete ExpressRouteCircuit operation deletes the specified ExpressRouteCircuit.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void expressRouteCircuitsDeleteTest() throws ApiException {
        String resourceGroupName = null;
        String circuitName = null;
        String apiVersion = null;
        String subscriptionId = null;
        api.expressRouteCircuitsDelete(resourceGroupName, circuitName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * The Get ExpressRouteCircuit operation retrieves information about the specified ExpressRouteCircuit.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void expressRouteCircuitsGetTest() throws ApiException {
        String resourceGroupName = null;
        String circuitName = null;
        String apiVersion = null;
        String subscriptionId = null;
        ExpressRouteCircuit response = api.expressRouteCircuitsGet(resourceGroupName, circuitName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * The List ExpressRouteCircuit operation retrieves all the ExpressRouteCircuits in a resource group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void expressRouteCircuitsListTest() throws ApiException {
        String resourceGroupName = null;
        String apiVersion = null;
        String subscriptionId = null;
        ExpressRouteCircuitListResult response = api.expressRouteCircuitsList(resourceGroupName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * The List ExpressRouteCircuit operation retrieves all the ExpressRouteCircuits in a subscription.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void expressRouteCircuitsListAllTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        ExpressRouteCircuitListResult response = api.expressRouteCircuitsListAll(apiVersion, subscriptionId);
        // TODO: test validations
    }

}
