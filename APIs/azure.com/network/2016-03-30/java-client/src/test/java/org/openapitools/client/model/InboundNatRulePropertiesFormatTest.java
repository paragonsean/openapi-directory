/*
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2016-03-30
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.NetworkInterfaceIPConfiguration;
import org.openapitools.client.model.SubResource;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for InboundNatRulePropertiesFormat
 */
public class InboundNatRulePropertiesFormatTest {
    private final InboundNatRulePropertiesFormat model = new InboundNatRulePropertiesFormat();

    /**
     * Model tests for InboundNatRulePropertiesFormat
     */
    @Test
    public void testInboundNatRulePropertiesFormat() {
        // TODO: test InboundNatRulePropertiesFormat
    }

    /**
     * Test the property 'backendIPConfiguration'
     */
    @Test
    public void backendIPConfigurationTest() {
        // TODO: test backendIPConfiguration
    }

    /**
     * Test the property 'backendPort'
     */
    @Test
    public void backendPortTest() {
        // TODO: test backendPort
    }

    /**
     * Test the property 'enableFloatingIP'
     */
    @Test
    public void enableFloatingIPTest() {
        // TODO: test enableFloatingIP
    }

    /**
     * Test the property 'frontendIPConfiguration'
     */
    @Test
    public void frontendIPConfigurationTest() {
        // TODO: test frontendIPConfiguration
    }

    /**
     * Test the property 'frontendPort'
     */
    @Test
    public void frontendPortTest() {
        // TODO: test frontendPort
    }

    /**
     * Test the property 'idleTimeoutInMinutes'
     */
    @Test
    public void idleTimeoutInMinutesTest() {
        // TODO: test idleTimeoutInMinutes
    }

    /**
     * Test the property 'protocol'
     */
    @Test
    public void protocolTest() {
        // TODO: test protocol
    }

    /**
     * Test the property 'provisioningState'
     */
    @Test
    public void provisioningStateTest() {
        // TODO: test provisioningState
    }

}
