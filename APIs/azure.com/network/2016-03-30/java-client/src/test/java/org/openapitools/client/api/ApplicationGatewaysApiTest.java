/*
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2016-03-30
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ApplicationGateway;
import org.openapitools.client.model.ApplicationGatewayListResult;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ApplicationGatewaysApi
 */
@Disabled
public class ApplicationGatewaysApiTest {

    private final ApplicationGatewaysApi api = new ApplicationGatewaysApi();

    /**
     * The Put ApplicationGateway operation creates/updates a ApplicationGateway
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void applicationGatewaysCreateOrUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String applicationGatewayName = null;
        String apiVersion = null;
        String subscriptionId = null;
        ApplicationGateway parameters = null;
        ApplicationGateway response = api.applicationGatewaysCreateOrUpdate(resourceGroupName, applicationGatewayName, apiVersion, subscriptionId, parameters);
        // TODO: test validations
    }

    /**
     * The delete application gateway operation deletes the specified application gateway.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void applicationGatewaysDeleteTest() throws ApiException {
        String resourceGroupName = null;
        String applicationGatewayName = null;
        String apiVersion = null;
        String subscriptionId = null;
        api.applicationGatewaysDelete(resourceGroupName, applicationGatewayName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * The Get application gateway operation retrieves information about the specified application gateway.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void applicationGatewaysGetTest() throws ApiException {
        String resourceGroupName = null;
        String applicationGatewayName = null;
        String apiVersion = null;
        String subscriptionId = null;
        ApplicationGateway response = api.applicationGatewaysGet(resourceGroupName, applicationGatewayName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * The List ApplicationGateway operation retrieves all the application gateways in a resource group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void applicationGatewaysListTest() throws ApiException {
        String resourceGroupName = null;
        String apiVersion = null;
        String subscriptionId = null;
        ApplicationGatewayListResult response = api.applicationGatewaysList(resourceGroupName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * The List application gateway operation retrieves all the application gateways in a subscription.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void applicationGatewaysListAllTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        ApplicationGatewayListResult response = api.applicationGatewaysListAll(apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * The Start ApplicationGateway operation starts application gateway in the specified resource group through Network resource provider.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void applicationGatewaysStartTest() throws ApiException {
        String resourceGroupName = null;
        String applicationGatewayName = null;
        String apiVersion = null;
        String subscriptionId = null;
        api.applicationGatewaysStart(resourceGroupName, applicationGatewayName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * The STOP ApplicationGateway operation stops application gateway in the specified resource group through Network resource provider.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void applicationGatewaysStopTest() throws ApiException {
        String resourceGroupName = null;
        String applicationGatewayName = null;
        String apiVersion = null;
        String subscriptionId = null;
        api.applicationGatewaysStop(resourceGroupName, applicationGatewayName, apiVersion, subscriptionId);
        // TODO: test validations
    }

}
