/*
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2016-03-30
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.RouteTable;
import org.openapitools.client.model.RouteTableListResult;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for RouteTablesApi
 */
@Disabled
public class RouteTablesApiTest {

    private final RouteTablesApi api = new RouteTablesApi();

    /**
     * The Put RouteTable operation creates/updates a route table in the specified resource group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void routeTablesCreateOrUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String routeTableName = null;
        String apiVersion = null;
        String subscriptionId = null;
        RouteTable parameters = null;
        RouteTable response = api.routeTablesCreateOrUpdate(resourceGroupName, routeTableName, apiVersion, subscriptionId, parameters);
        // TODO: test validations
    }

    /**
     * The Delete RouteTable operation deletes the specified Route Table
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void routeTablesDeleteTest() throws ApiException {
        String resourceGroupName = null;
        String routeTableName = null;
        String apiVersion = null;
        String subscriptionId = null;
        api.routeTablesDelete(resourceGroupName, routeTableName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * The Get RouteTables operation retrieves information about the specified route table.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void routeTablesGetTest() throws ApiException {
        String resourceGroupName = null;
        String routeTableName = null;
        String apiVersion = null;
        String subscriptionId = null;
        String $expand = null;
        RouteTable response = api.routeTablesGet(resourceGroupName, routeTableName, apiVersion, subscriptionId, $expand);
        // TODO: test validations
    }

    /**
     * The list RouteTables returns all route tables in a resource group
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void routeTablesListTest() throws ApiException {
        String resourceGroupName = null;
        String apiVersion = null;
        String subscriptionId = null;
        RouteTableListResult response = api.routeTablesList(resourceGroupName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * The list RouteTables returns all route tables in a subscription
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void routeTablesListAllTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        RouteTableListResult response = api.routeTablesListAll(apiVersion, subscriptionId);
        // TODO: test validations
    }

}
