# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.local_network_gateway import LocalNetworkGateway
from openapi_server.models.sub_resource import SubResource
from openapi_server.models.virtual_network_gateway import VirtualNetworkGateway
from openapi_server import util


class VirtualNetworkGatewayConnectionPropertiesFormat(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, authorization_key: str=None, connection_status: str=None, connection_type: str=None, egress_bytes_transferred: int=None, enable_bgp: bool=None, ingress_bytes_transferred: int=None, local_network_gateway2: LocalNetworkGateway=None, peer: SubResource=None, provisioning_state: str=None, resource_guid: str=None, routing_weight: int=None, shared_key: str=None, virtual_network_gateway1: VirtualNetworkGateway=None, virtual_network_gateway2: VirtualNetworkGateway=None):
        """VirtualNetworkGatewayConnectionPropertiesFormat - a model defined in OpenAPI

        :param authorization_key: The authorization_key of this VirtualNetworkGatewayConnectionPropertiesFormat.
        :param connection_status: The connection_status of this VirtualNetworkGatewayConnectionPropertiesFormat.
        :param connection_type: The connection_type of this VirtualNetworkGatewayConnectionPropertiesFormat.
        :param egress_bytes_transferred: The egress_bytes_transferred of this VirtualNetworkGatewayConnectionPropertiesFormat.
        :param enable_bgp: The enable_bgp of this VirtualNetworkGatewayConnectionPropertiesFormat.
        :param ingress_bytes_transferred: The ingress_bytes_transferred of this VirtualNetworkGatewayConnectionPropertiesFormat.
        :param local_network_gateway2: The local_network_gateway2 of this VirtualNetworkGatewayConnectionPropertiesFormat.
        :param peer: The peer of this VirtualNetworkGatewayConnectionPropertiesFormat.
        :param provisioning_state: The provisioning_state of this VirtualNetworkGatewayConnectionPropertiesFormat.
        :param resource_guid: The resource_guid of this VirtualNetworkGatewayConnectionPropertiesFormat.
        :param routing_weight: The routing_weight of this VirtualNetworkGatewayConnectionPropertiesFormat.
        :param shared_key: The shared_key of this VirtualNetworkGatewayConnectionPropertiesFormat.
        :param virtual_network_gateway1: The virtual_network_gateway1 of this VirtualNetworkGatewayConnectionPropertiesFormat.
        :param virtual_network_gateway2: The virtual_network_gateway2 of this VirtualNetworkGatewayConnectionPropertiesFormat.
        """
        self.openapi_types = {
            'authorization_key': str,
            'connection_status': str,
            'connection_type': str,
            'egress_bytes_transferred': int,
            'enable_bgp': bool,
            'ingress_bytes_transferred': int,
            'local_network_gateway2': LocalNetworkGateway,
            'peer': SubResource,
            'provisioning_state': str,
            'resource_guid': str,
            'routing_weight': int,
            'shared_key': str,
            'virtual_network_gateway1': VirtualNetworkGateway,
            'virtual_network_gateway2': VirtualNetworkGateway
        }

        self.attribute_map = {
            'authorization_key': 'authorizationKey',
            'connection_status': 'connectionStatus',
            'connection_type': 'connectionType',
            'egress_bytes_transferred': 'egressBytesTransferred',
            'enable_bgp': 'enableBgp',
            'ingress_bytes_transferred': 'ingressBytesTransferred',
            'local_network_gateway2': 'localNetworkGateway2',
            'peer': 'peer',
            'provisioning_state': 'provisioningState',
            'resource_guid': 'resourceGuid',
            'routing_weight': 'routingWeight',
            'shared_key': 'sharedKey',
            'virtual_network_gateway1': 'virtualNetworkGateway1',
            'virtual_network_gateway2': 'virtualNetworkGateway2'
        }

        self._authorization_key = authorization_key
        self._connection_status = connection_status
        self._connection_type = connection_type
        self._egress_bytes_transferred = egress_bytes_transferred
        self._enable_bgp = enable_bgp
        self._ingress_bytes_transferred = ingress_bytes_transferred
        self._local_network_gateway2 = local_network_gateway2
        self._peer = peer
        self._provisioning_state = provisioning_state
        self._resource_guid = resource_guid
        self._routing_weight = routing_weight
        self._shared_key = shared_key
        self._virtual_network_gateway1 = virtual_network_gateway1
        self._virtual_network_gateway2 = virtual_network_gateway2

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VirtualNetworkGatewayConnectionPropertiesFormat':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VirtualNetworkGatewayConnectionPropertiesFormat of this VirtualNetworkGatewayConnectionPropertiesFormat.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def authorization_key(self):
        """Gets the authorization_key of this VirtualNetworkGatewayConnectionPropertiesFormat.

        The authorizationKey.

        :return: The authorization_key of this VirtualNetworkGatewayConnectionPropertiesFormat.
        :rtype: str
        """
        return self._authorization_key

    @authorization_key.setter
    def authorization_key(self, authorization_key):
        """Sets the authorization_key of this VirtualNetworkGatewayConnectionPropertiesFormat.

        The authorizationKey.

        :param authorization_key: The authorization_key of this VirtualNetworkGatewayConnectionPropertiesFormat.
        :type authorization_key: str
        """

        self._authorization_key = authorization_key

    @property
    def connection_status(self):
        """Gets the connection_status of this VirtualNetworkGatewayConnectionPropertiesFormat.

        Virtual network Gateway connection status

        :return: The connection_status of this VirtualNetworkGatewayConnectionPropertiesFormat.
        :rtype: str
        """
        return self._connection_status

    @connection_status.setter
    def connection_status(self, connection_status):
        """Sets the connection_status of this VirtualNetworkGatewayConnectionPropertiesFormat.

        Virtual network Gateway connection status

        :param connection_status: The connection_status of this VirtualNetworkGatewayConnectionPropertiesFormat.
        :type connection_status: str
        """
        allowed_values = ["Unknown", "Connecting", "Connected", "NotConnected"]  # noqa: E501
        if connection_status not in allowed_values:
            raise ValueError(
                "Invalid value for `connection_status` ({0}), must be one of {1}"
                .format(connection_status, allowed_values)
            )

        self._connection_status = connection_status

    @property
    def connection_type(self):
        """Gets the connection_type of this VirtualNetworkGatewayConnectionPropertiesFormat.

        Gateway connection type IPsec/Dedicated/VpnClient/Vnet2Vnet

        :return: The connection_type of this VirtualNetworkGatewayConnectionPropertiesFormat.
        :rtype: str
        """
        return self._connection_type

    @connection_type.setter
    def connection_type(self, connection_type):
        """Sets the connection_type of this VirtualNetworkGatewayConnectionPropertiesFormat.

        Gateway connection type IPsec/Dedicated/VpnClient/Vnet2Vnet

        :param connection_type: The connection_type of this VirtualNetworkGatewayConnectionPropertiesFormat.
        :type connection_type: str
        """
        allowed_values = ["IPsec", "Vnet2Vnet", "ExpressRoute", "VPNClient"]  # noqa: E501
        if connection_type not in allowed_values:
            raise ValueError(
                "Invalid value for `connection_type` ({0}), must be one of {1}"
                .format(connection_type, allowed_values)
            )

        self._connection_type = connection_type

    @property
    def egress_bytes_transferred(self):
        """Gets the egress_bytes_transferred of this VirtualNetworkGatewayConnectionPropertiesFormat.

        The Egress Bytes Transferred in this connection

        :return: The egress_bytes_transferred of this VirtualNetworkGatewayConnectionPropertiesFormat.
        :rtype: int
        """
        return self._egress_bytes_transferred

    @egress_bytes_transferred.setter
    def egress_bytes_transferred(self, egress_bytes_transferred):
        """Sets the egress_bytes_transferred of this VirtualNetworkGatewayConnectionPropertiesFormat.

        The Egress Bytes Transferred in this connection

        :param egress_bytes_transferred: The egress_bytes_transferred of this VirtualNetworkGatewayConnectionPropertiesFormat.
        :type egress_bytes_transferred: int
        """

        self._egress_bytes_transferred = egress_bytes_transferred

    @property
    def enable_bgp(self):
        """Gets the enable_bgp of this VirtualNetworkGatewayConnectionPropertiesFormat.

        EnableBgp Flag

        :return: The enable_bgp of this VirtualNetworkGatewayConnectionPropertiesFormat.
        :rtype: bool
        """
        return self._enable_bgp

    @enable_bgp.setter
    def enable_bgp(self, enable_bgp):
        """Sets the enable_bgp of this VirtualNetworkGatewayConnectionPropertiesFormat.

        EnableBgp Flag

        :param enable_bgp: The enable_bgp of this VirtualNetworkGatewayConnectionPropertiesFormat.
        :type enable_bgp: bool
        """

        self._enable_bgp = enable_bgp

    @property
    def ingress_bytes_transferred(self):
        """Gets the ingress_bytes_transferred of this VirtualNetworkGatewayConnectionPropertiesFormat.

        The Ingress Bytes Transferred in this connection

        :return: The ingress_bytes_transferred of this VirtualNetworkGatewayConnectionPropertiesFormat.
        :rtype: int
        """
        return self._ingress_bytes_transferred

    @ingress_bytes_transferred.setter
    def ingress_bytes_transferred(self, ingress_bytes_transferred):
        """Sets the ingress_bytes_transferred of this VirtualNetworkGatewayConnectionPropertiesFormat.

        The Ingress Bytes Transferred in this connection

        :param ingress_bytes_transferred: The ingress_bytes_transferred of this VirtualNetworkGatewayConnectionPropertiesFormat.
        :type ingress_bytes_transferred: int
        """

        self._ingress_bytes_transferred = ingress_bytes_transferred

    @property
    def local_network_gateway2(self):
        """Gets the local_network_gateway2 of this VirtualNetworkGatewayConnectionPropertiesFormat.


        :return: The local_network_gateway2 of this VirtualNetworkGatewayConnectionPropertiesFormat.
        :rtype: LocalNetworkGateway
        """
        return self._local_network_gateway2

    @local_network_gateway2.setter
    def local_network_gateway2(self, local_network_gateway2):
        """Sets the local_network_gateway2 of this VirtualNetworkGatewayConnectionPropertiesFormat.


        :param local_network_gateway2: The local_network_gateway2 of this VirtualNetworkGatewayConnectionPropertiesFormat.
        :type local_network_gateway2: LocalNetworkGateway
        """

        self._local_network_gateway2 = local_network_gateway2

    @property
    def peer(self):
        """Gets the peer of this VirtualNetworkGatewayConnectionPropertiesFormat.


        :return: The peer of this VirtualNetworkGatewayConnectionPropertiesFormat.
        :rtype: SubResource
        """
        return self._peer

    @peer.setter
    def peer(self, peer):
        """Sets the peer of this VirtualNetworkGatewayConnectionPropertiesFormat.


        :param peer: The peer of this VirtualNetworkGatewayConnectionPropertiesFormat.
        :type peer: SubResource
        """

        self._peer = peer

    @property
    def provisioning_state(self):
        """Gets the provisioning_state of this VirtualNetworkGatewayConnectionPropertiesFormat.

        Gets or sets Provisioning state of the VirtualNetworkGatewayConnection resource Updating/Deleting/Failed

        :return: The provisioning_state of this VirtualNetworkGatewayConnectionPropertiesFormat.
        :rtype: str
        """
        return self._provisioning_state

    @provisioning_state.setter
    def provisioning_state(self, provisioning_state):
        """Sets the provisioning_state of this VirtualNetworkGatewayConnectionPropertiesFormat.

        Gets or sets Provisioning state of the VirtualNetworkGatewayConnection resource Updating/Deleting/Failed

        :param provisioning_state: The provisioning_state of this VirtualNetworkGatewayConnectionPropertiesFormat.
        :type provisioning_state: str
        """

        self._provisioning_state = provisioning_state

    @property
    def resource_guid(self):
        """Gets the resource_guid of this VirtualNetworkGatewayConnectionPropertiesFormat.

        Gets or sets resource GUID property of the VirtualNetworkGatewayConnection resource

        :return: The resource_guid of this VirtualNetworkGatewayConnectionPropertiesFormat.
        :rtype: str
        """
        return self._resource_guid

    @resource_guid.setter
    def resource_guid(self, resource_guid):
        """Sets the resource_guid of this VirtualNetworkGatewayConnectionPropertiesFormat.

        Gets or sets resource GUID property of the VirtualNetworkGatewayConnection resource

        :param resource_guid: The resource_guid of this VirtualNetworkGatewayConnectionPropertiesFormat.
        :type resource_guid: str
        """

        self._resource_guid = resource_guid

    @property
    def routing_weight(self):
        """Gets the routing_weight of this VirtualNetworkGatewayConnectionPropertiesFormat.

        The Routing weight.

        :return: The routing_weight of this VirtualNetworkGatewayConnectionPropertiesFormat.
        :rtype: int
        """
        return self._routing_weight

    @routing_weight.setter
    def routing_weight(self, routing_weight):
        """Sets the routing_weight of this VirtualNetworkGatewayConnectionPropertiesFormat.

        The Routing weight.

        :param routing_weight: The routing_weight of this VirtualNetworkGatewayConnectionPropertiesFormat.
        :type routing_weight: int
        """

        self._routing_weight = routing_weight

    @property
    def shared_key(self):
        """Gets the shared_key of this VirtualNetworkGatewayConnectionPropertiesFormat.

        The IPsec share key.

        :return: The shared_key of this VirtualNetworkGatewayConnectionPropertiesFormat.
        :rtype: str
        """
        return self._shared_key

    @shared_key.setter
    def shared_key(self, shared_key):
        """Sets the shared_key of this VirtualNetworkGatewayConnectionPropertiesFormat.

        The IPsec share key.

        :param shared_key: The shared_key of this VirtualNetworkGatewayConnectionPropertiesFormat.
        :type shared_key: str
        """

        self._shared_key = shared_key

    @property
    def virtual_network_gateway1(self):
        """Gets the virtual_network_gateway1 of this VirtualNetworkGatewayConnectionPropertiesFormat.


        :return: The virtual_network_gateway1 of this VirtualNetworkGatewayConnectionPropertiesFormat.
        :rtype: VirtualNetworkGateway
        """
        return self._virtual_network_gateway1

    @virtual_network_gateway1.setter
    def virtual_network_gateway1(self, virtual_network_gateway1):
        """Sets the virtual_network_gateway1 of this VirtualNetworkGatewayConnectionPropertiesFormat.


        :param virtual_network_gateway1: The virtual_network_gateway1 of this VirtualNetworkGatewayConnectionPropertiesFormat.
        :type virtual_network_gateway1: VirtualNetworkGateway
        """

        self._virtual_network_gateway1 = virtual_network_gateway1

    @property
    def virtual_network_gateway2(self):
        """Gets the virtual_network_gateway2 of this VirtualNetworkGatewayConnectionPropertiesFormat.


        :return: The virtual_network_gateway2 of this VirtualNetworkGatewayConnectionPropertiesFormat.
        :rtype: VirtualNetworkGateway
        """
        return self._virtual_network_gateway2

    @virtual_network_gateway2.setter
    def virtual_network_gateway2(self, virtual_network_gateway2):
        """Sets the virtual_network_gateway2 of this VirtualNetworkGatewayConnectionPropertiesFormat.


        :param virtual_network_gateway2: The virtual_network_gateway2 of this VirtualNetworkGatewayConnectionPropertiesFormat.
        :type virtual_network_gateway2: VirtualNetworkGateway
        """

        self._virtual_network_gateway2 = virtual_network_gateway2
