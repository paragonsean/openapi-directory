/*
 * iotHubClient
 * Use this API to manage the IoT hubs in your Azure subscription.
 *
 * The version of the OpenAPI document: 2019-11-04
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.RoutingEventHubProperties;
import org.openapitools.client.model.RoutingServiceBusQueueEndpointProperties;
import org.openapitools.client.model.RoutingServiceBusTopicEndpointProperties;
import org.openapitools.client.model.RoutingStorageContainerProperties;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The properties related to the custom endpoints to which your IoT hub routes messages based on the routing rules. A maximum of 10 custom endpoints are allowed across all endpoint types for paid hubs and only 1 custom endpoint is allowed across all endpoint types for free hubs.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:05:01.184573-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class RoutingEndpoints {
  public static final String SERIALIZED_NAME_EVENT_HUBS = "eventHubs";
  @SerializedName(SERIALIZED_NAME_EVENT_HUBS)
  private List<RoutingEventHubProperties> eventHubs = new ArrayList<>();

  public static final String SERIALIZED_NAME_SERVICE_BUS_QUEUES = "serviceBusQueues";
  @SerializedName(SERIALIZED_NAME_SERVICE_BUS_QUEUES)
  private List<RoutingServiceBusQueueEndpointProperties> serviceBusQueues = new ArrayList<>();

  public static final String SERIALIZED_NAME_SERVICE_BUS_TOPICS = "serviceBusTopics";
  @SerializedName(SERIALIZED_NAME_SERVICE_BUS_TOPICS)
  private List<RoutingServiceBusTopicEndpointProperties> serviceBusTopics = new ArrayList<>();

  public static final String SERIALIZED_NAME_STORAGE_CONTAINERS = "storageContainers";
  @SerializedName(SERIALIZED_NAME_STORAGE_CONTAINERS)
  private List<RoutingStorageContainerProperties> storageContainers = new ArrayList<>();

  public RoutingEndpoints() {
  }

  public RoutingEndpoints eventHubs(List<RoutingEventHubProperties> eventHubs) {
    this.eventHubs = eventHubs;
    return this;
  }

  public RoutingEndpoints addEventHubsItem(RoutingEventHubProperties eventHubsItem) {
    if (this.eventHubs == null) {
      this.eventHubs = new ArrayList<>();
    }
    this.eventHubs.add(eventHubsItem);
    return this;
  }

  /**
   * The list of Event Hubs endpoints that IoT hub routes messages to, based on the routing rules. This list does not include the built-in Event Hubs endpoint.
   * @return eventHubs
   */
  @javax.annotation.Nullable
  public List<RoutingEventHubProperties> getEventHubs() {
    return eventHubs;
  }

  public void setEventHubs(List<RoutingEventHubProperties> eventHubs) {
    this.eventHubs = eventHubs;
  }


  public RoutingEndpoints serviceBusQueues(List<RoutingServiceBusQueueEndpointProperties> serviceBusQueues) {
    this.serviceBusQueues = serviceBusQueues;
    return this;
  }

  public RoutingEndpoints addServiceBusQueuesItem(RoutingServiceBusQueueEndpointProperties serviceBusQueuesItem) {
    if (this.serviceBusQueues == null) {
      this.serviceBusQueues = new ArrayList<>();
    }
    this.serviceBusQueues.add(serviceBusQueuesItem);
    return this;
  }

  /**
   * The list of Service Bus queue endpoints that IoT hub routes the messages to, based on the routing rules.
   * @return serviceBusQueues
   */
  @javax.annotation.Nullable
  public List<RoutingServiceBusQueueEndpointProperties> getServiceBusQueues() {
    return serviceBusQueues;
  }

  public void setServiceBusQueues(List<RoutingServiceBusQueueEndpointProperties> serviceBusQueues) {
    this.serviceBusQueues = serviceBusQueues;
  }


  public RoutingEndpoints serviceBusTopics(List<RoutingServiceBusTopicEndpointProperties> serviceBusTopics) {
    this.serviceBusTopics = serviceBusTopics;
    return this;
  }

  public RoutingEndpoints addServiceBusTopicsItem(RoutingServiceBusTopicEndpointProperties serviceBusTopicsItem) {
    if (this.serviceBusTopics == null) {
      this.serviceBusTopics = new ArrayList<>();
    }
    this.serviceBusTopics.add(serviceBusTopicsItem);
    return this;
  }

  /**
   * The list of Service Bus topic endpoints that the IoT hub routes the messages to, based on the routing rules.
   * @return serviceBusTopics
   */
  @javax.annotation.Nullable
  public List<RoutingServiceBusTopicEndpointProperties> getServiceBusTopics() {
    return serviceBusTopics;
  }

  public void setServiceBusTopics(List<RoutingServiceBusTopicEndpointProperties> serviceBusTopics) {
    this.serviceBusTopics = serviceBusTopics;
  }


  public RoutingEndpoints storageContainers(List<RoutingStorageContainerProperties> storageContainers) {
    this.storageContainers = storageContainers;
    return this;
  }

  public RoutingEndpoints addStorageContainersItem(RoutingStorageContainerProperties storageContainersItem) {
    if (this.storageContainers == null) {
      this.storageContainers = new ArrayList<>();
    }
    this.storageContainers.add(storageContainersItem);
    return this;
  }

  /**
   * The list of storage container endpoints that IoT hub routes messages to, based on the routing rules.
   * @return storageContainers
   */
  @javax.annotation.Nullable
  public List<RoutingStorageContainerProperties> getStorageContainers() {
    return storageContainers;
  }

  public void setStorageContainers(List<RoutingStorageContainerProperties> storageContainers) {
    this.storageContainers = storageContainers;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RoutingEndpoints routingEndpoints = (RoutingEndpoints) o;
    return Objects.equals(this.eventHubs, routingEndpoints.eventHubs) &&
        Objects.equals(this.serviceBusQueues, routingEndpoints.serviceBusQueues) &&
        Objects.equals(this.serviceBusTopics, routingEndpoints.serviceBusTopics) &&
        Objects.equals(this.storageContainers, routingEndpoints.storageContainers);
  }

  @Override
  public int hashCode() {
    return Objects.hash(eventHubs, serviceBusQueues, serviceBusTopics, storageContainers);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RoutingEndpoints {\n");
    sb.append("    eventHubs: ").append(toIndentedString(eventHubs)).append("\n");
    sb.append("    serviceBusQueues: ").append(toIndentedString(serviceBusQueues)).append("\n");
    sb.append("    serviceBusTopics: ").append(toIndentedString(serviceBusTopics)).append("\n");
    sb.append("    storageContainers: ").append(toIndentedString(storageContainers)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("eventHubs");
    openapiFields.add("serviceBusQueues");
    openapiFields.add("serviceBusTopics");
    openapiFields.add("storageContainers");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to RoutingEndpoints
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!RoutingEndpoints.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in RoutingEndpoints is not found in the empty JSON string", RoutingEndpoints.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!RoutingEndpoints.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `RoutingEndpoints` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("eventHubs") != null && !jsonObj.get("eventHubs").isJsonNull()) {
        JsonArray jsonArrayeventHubs = jsonObj.getAsJsonArray("eventHubs");
        if (jsonArrayeventHubs != null) {
          // ensure the json data is an array
          if (!jsonObj.get("eventHubs").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `eventHubs` to be an array in the JSON string but got `%s`", jsonObj.get("eventHubs").toString()));
          }

          // validate the optional field `eventHubs` (array)
          for (int i = 0; i < jsonArrayeventHubs.size(); i++) {
            RoutingEventHubProperties.validateJsonElement(jsonArrayeventHubs.get(i));
          };
        }
      }
      if (jsonObj.get("serviceBusQueues") != null && !jsonObj.get("serviceBusQueues").isJsonNull()) {
        JsonArray jsonArrayserviceBusQueues = jsonObj.getAsJsonArray("serviceBusQueues");
        if (jsonArrayserviceBusQueues != null) {
          // ensure the json data is an array
          if (!jsonObj.get("serviceBusQueues").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `serviceBusQueues` to be an array in the JSON string but got `%s`", jsonObj.get("serviceBusQueues").toString()));
          }

          // validate the optional field `serviceBusQueues` (array)
          for (int i = 0; i < jsonArrayserviceBusQueues.size(); i++) {
            RoutingServiceBusQueueEndpointProperties.validateJsonElement(jsonArrayserviceBusQueues.get(i));
          };
        }
      }
      if (jsonObj.get("serviceBusTopics") != null && !jsonObj.get("serviceBusTopics").isJsonNull()) {
        JsonArray jsonArrayserviceBusTopics = jsonObj.getAsJsonArray("serviceBusTopics");
        if (jsonArrayserviceBusTopics != null) {
          // ensure the json data is an array
          if (!jsonObj.get("serviceBusTopics").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `serviceBusTopics` to be an array in the JSON string but got `%s`", jsonObj.get("serviceBusTopics").toString()));
          }

          // validate the optional field `serviceBusTopics` (array)
          for (int i = 0; i < jsonArrayserviceBusTopics.size(); i++) {
            RoutingServiceBusTopicEndpointProperties.validateJsonElement(jsonArrayserviceBusTopics.get(i));
          };
        }
      }
      if (jsonObj.get("storageContainers") != null && !jsonObj.get("storageContainers").isJsonNull()) {
        JsonArray jsonArraystorageContainers = jsonObj.getAsJsonArray("storageContainers");
        if (jsonArraystorageContainers != null) {
          // ensure the json data is an array
          if (!jsonObj.get("storageContainers").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `storageContainers` to be an array in the JSON string but got `%s`", jsonObj.get("storageContainers").toString()));
          }

          // validate the optional field `storageContainers` (array)
          for (int i = 0; i < jsonArraystorageContainers.size(); i++) {
            RoutingStorageContainerProperties.validateJsonElement(jsonArraystorageContainers.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!RoutingEndpoints.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'RoutingEndpoints' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<RoutingEndpoints> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(RoutingEndpoints.class));

       return (TypeAdapter<T>) new TypeAdapter<RoutingEndpoints>() {
           @Override
           public void write(JsonWriter out, RoutingEndpoints value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public RoutingEndpoints read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of RoutingEndpoints given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of RoutingEndpoints
   * @throws IOException if the JSON string is invalid with respect to RoutingEndpoints
   */
  public static RoutingEndpoints fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, RoutingEndpoints.class);
  }

  /**
   * Convert an instance of RoutingEndpoints to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

