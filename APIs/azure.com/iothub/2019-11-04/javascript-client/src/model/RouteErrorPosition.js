/**
 * iotHubClient
 * Use this API to manage the IoT hubs in your Azure subscription.
 *
 * The version of the OpenAPI document: 2019-11-04
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RouteErrorPosition model module.
 * @module model/RouteErrorPosition
 * @version 2019-11-04
 */
class RouteErrorPosition {
    /**
     * Constructs a new <code>RouteErrorPosition</code>.
     * Position where the route error happened
     * @alias module:model/RouteErrorPosition
     */
    constructor() { 
        
        RouteErrorPosition.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RouteErrorPosition</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RouteErrorPosition} obj Optional instance to populate.
     * @return {module:model/RouteErrorPosition} The populated <code>RouteErrorPosition</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RouteErrorPosition();

            if (data.hasOwnProperty('column')) {
                obj['column'] = ApiClient.convertToType(data['column'], 'Number');
            }
            if (data.hasOwnProperty('line')) {
                obj['line'] = ApiClient.convertToType(data['line'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RouteErrorPosition</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RouteErrorPosition</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * Column where the route error happened
 * @member {Number} column
 */
RouteErrorPosition.prototype['column'] = undefined;

/**
 * Line where the route error happened
 * @member {Number} line
 */
RouteErrorPosition.prototype['line'] = undefined;






export default RouteErrorPosition;

