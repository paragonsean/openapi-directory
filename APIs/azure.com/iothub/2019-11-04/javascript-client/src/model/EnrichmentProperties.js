/**
 * iotHubClient
 * Use this API to manage the IoT hubs in your Azure subscription.
 *
 * The version of the OpenAPI document: 2019-11-04
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The EnrichmentProperties model module.
 * @module model/EnrichmentProperties
 * @version 2019-11-04
 */
class EnrichmentProperties {
    /**
     * Constructs a new <code>EnrichmentProperties</code>.
     * The properties of an enrichment that your IoT hub applies to messages delivered to endpoints.
     * @alias module:model/EnrichmentProperties
     * @param endpointNames {Array.<String>} The list of endpoints for which the enrichment is applied to the message.
     * @param key {String} The key or name for the enrichment property.
     * @param value {String} The value for the enrichment property.
     */
    constructor(endpointNames, key, value) { 
        
        EnrichmentProperties.initialize(this, endpointNames, key, value);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, endpointNames, key, value) { 
        obj['endpointNames'] = endpointNames;
        obj['key'] = key;
        obj['value'] = value;
    }

    /**
     * Constructs a <code>EnrichmentProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EnrichmentProperties} obj Optional instance to populate.
     * @return {module:model/EnrichmentProperties} The populated <code>EnrichmentProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EnrichmentProperties();

            if (data.hasOwnProperty('endpointNames')) {
                obj['endpointNames'] = ApiClient.convertToType(data['endpointNames'], ['String']);
            }
            if (data.hasOwnProperty('key')) {
                obj['key'] = ApiClient.convertToType(data['key'], 'String');
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EnrichmentProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EnrichmentProperties</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of EnrichmentProperties.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is an array
        if (!Array.isArray(data['endpointNames'])) {
            throw new Error("Expected the field `endpointNames` to be an array in the JSON data but got " + data['endpointNames']);
        }
        // ensure the json data is a string
        if (data['key'] && !(typeof data['key'] === 'string' || data['key'] instanceof String)) {
            throw new Error("Expected the field `key` to be a primitive type in the JSON string but got " + data['key']);
        }
        // ensure the json data is a string
        if (data['value'] && !(typeof data['value'] === 'string' || data['value'] instanceof String)) {
            throw new Error("Expected the field `value` to be a primitive type in the JSON string but got " + data['value']);
        }

        return true;
    }


}

EnrichmentProperties.RequiredProperties = ["endpointNames", "key", "value"];

/**
 * The list of endpoints for which the enrichment is applied to the message.
 * @member {Array.<String>} endpointNames
 */
EnrichmentProperties.prototype['endpointNames'] = undefined;

/**
 * The key or name for the enrichment property.
 * @member {String} key
 */
EnrichmentProperties.prototype['key'] = undefined;

/**
 * The value for the enrichment property.
 * @member {String} value
 */
EnrichmentProperties.prototype['value'] = undefined;






export default EnrichmentProperties;

