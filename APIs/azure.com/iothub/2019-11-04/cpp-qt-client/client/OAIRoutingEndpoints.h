/**
 * iotHubClient
 * Use this API to manage the IoT hubs in your Azure subscription.
 *
 * The version of the OpenAPI document: 2019-11-04
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRoutingEndpoints.h
 *
 * The properties related to the custom endpoints to which your IoT hub routes messages based on the routing rules. A maximum of 10 custom endpoints are allowed across all endpoint types for paid hubs and only 1 custom endpoint is allowed across all endpoint types for free hubs.
 */

#ifndef OAIRoutingEndpoints_H
#define OAIRoutingEndpoints_H

#include <QJsonObject>

#include "OAIRoutingEventHubProperties.h"
#include "OAIRoutingServiceBusQueueEndpointProperties.h"
#include "OAIRoutingServiceBusTopicEndpointProperties.h"
#include "OAIRoutingStorageContainerProperties.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIRoutingEventHubProperties;
class OAIRoutingServiceBusQueueEndpointProperties;
class OAIRoutingServiceBusTopicEndpointProperties;
class OAIRoutingStorageContainerProperties;

class OAIRoutingEndpoints : public OAIObject {
public:
    OAIRoutingEndpoints();
    OAIRoutingEndpoints(QString json);
    ~OAIRoutingEndpoints() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIRoutingEventHubProperties> getEventHubs() const;
    void setEventHubs(const QList<OAIRoutingEventHubProperties> &event_hubs);
    bool is_event_hubs_Set() const;
    bool is_event_hubs_Valid() const;

    QList<OAIRoutingServiceBusQueueEndpointProperties> getServiceBusQueues() const;
    void setServiceBusQueues(const QList<OAIRoutingServiceBusQueueEndpointProperties> &service_bus_queues);
    bool is_service_bus_queues_Set() const;
    bool is_service_bus_queues_Valid() const;

    QList<OAIRoutingServiceBusTopicEndpointProperties> getServiceBusTopics() const;
    void setServiceBusTopics(const QList<OAIRoutingServiceBusTopicEndpointProperties> &service_bus_topics);
    bool is_service_bus_topics_Set() const;
    bool is_service_bus_topics_Valid() const;

    QList<OAIRoutingStorageContainerProperties> getStorageContainers() const;
    void setStorageContainers(const QList<OAIRoutingStorageContainerProperties> &storage_containers);
    bool is_storage_containers_Set() const;
    bool is_storage_containers_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIRoutingEventHubProperties> m_event_hubs;
    bool m_event_hubs_isSet;
    bool m_event_hubs_isValid;

    QList<OAIRoutingServiceBusQueueEndpointProperties> m_service_bus_queues;
    bool m_service_bus_queues_isSet;
    bool m_service_bus_queues_isValid;

    QList<OAIRoutingServiceBusTopicEndpointProperties> m_service_bus_topics;
    bool m_service_bus_topics_isSet;
    bool m_service_bus_topics_isValid;

    QList<OAIRoutingStorageContainerProperties> m_storage_containers;
    bool m_storage_containers_isSet;
    bool m_storage_containers_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRoutingEndpoints)

#endif // OAIRoutingEndpoints_H
