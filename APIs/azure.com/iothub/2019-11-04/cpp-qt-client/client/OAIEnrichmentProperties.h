/**
 * iotHubClient
 * Use this API to manage the IoT hubs in your Azure subscription.
 *
 * The version of the OpenAPI document: 2019-11-04
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEnrichmentProperties.h
 *
 * The properties of an enrichment that your IoT hub applies to messages delivered to endpoints.
 */

#ifndef OAIEnrichmentProperties_H
#define OAIEnrichmentProperties_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIEnrichmentProperties : public OAIObject {
public:
    OAIEnrichmentProperties();
    OAIEnrichmentProperties(QString json);
    ~OAIEnrichmentProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getEndpointNames() const;
    void setEndpointNames(const QList<QString> &endpoint_names);
    bool is_endpoint_names_Set() const;
    bool is_endpoint_names_Valid() const;

    QString getKey() const;
    void setKey(const QString &key);
    bool is_key_Set() const;
    bool is_key_Valid() const;

    QString getValue() const;
    void setValue(const QString &value);
    bool is_value_Set() const;
    bool is_value_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_endpoint_names;
    bool m_endpoint_names_isSet;
    bool m_endpoint_names_isValid;

    QString m_key;
    bool m_key_isSet;
    bool m_key_isValid;

    QString m_value;
    bool m_value_isSet;
    bool m_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEnrichmentProperties)

#endif // OAIEnrichmentProperties_H
