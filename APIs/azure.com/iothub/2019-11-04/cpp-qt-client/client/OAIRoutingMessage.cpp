/**
 * iotHubClient
 * Use this API to manage the IoT hubs in your Azure subscription.
 *
 * The version of the OpenAPI document: 2019-11-04
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRoutingMessage.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRoutingMessage::OAIRoutingMessage(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRoutingMessage::OAIRoutingMessage() {
    this->initializeModel();
}

OAIRoutingMessage::~OAIRoutingMessage() {}

void OAIRoutingMessage::initializeModel() {

    m_app_properties_isSet = false;
    m_app_properties_isValid = false;

    m_body_isSet = false;
    m_body_isValid = false;

    m_system_properties_isSet = false;
    m_system_properties_isValid = false;
}

void OAIRoutingMessage::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRoutingMessage::fromJsonObject(QJsonObject json) {

    m_app_properties_isValid = ::OpenAPI::fromJsonValue(m_app_properties, json[QString("appProperties")]);
    m_app_properties_isSet = !json[QString("appProperties")].isNull() && m_app_properties_isValid;

    m_body_isValid = ::OpenAPI::fromJsonValue(m_body, json[QString("body")]);
    m_body_isSet = !json[QString("body")].isNull() && m_body_isValid;

    m_system_properties_isValid = ::OpenAPI::fromJsonValue(m_system_properties, json[QString("systemProperties")]);
    m_system_properties_isSet = !json[QString("systemProperties")].isNull() && m_system_properties_isValid;
}

QString OAIRoutingMessage::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRoutingMessage::asJsonObject() const {
    QJsonObject obj;
    if (m_app_properties.size() > 0) {
        obj.insert(QString("appProperties"), ::OpenAPI::toJsonValue(m_app_properties));
    }
    if (m_body_isSet) {
        obj.insert(QString("body"), ::OpenAPI::toJsonValue(m_body));
    }
    if (m_system_properties.size() > 0) {
        obj.insert(QString("systemProperties"), ::OpenAPI::toJsonValue(m_system_properties));
    }
    return obj;
}

QMap<QString, QString> OAIRoutingMessage::getAppProperties() const {
    return m_app_properties;
}
void OAIRoutingMessage::setAppProperties(const QMap<QString, QString> &app_properties) {
    m_app_properties = app_properties;
    m_app_properties_isSet = true;
}

bool OAIRoutingMessage::is_app_properties_Set() const{
    return m_app_properties_isSet;
}

bool OAIRoutingMessage::is_app_properties_Valid() const{
    return m_app_properties_isValid;
}

QString OAIRoutingMessage::getBody() const {
    return m_body;
}
void OAIRoutingMessage::setBody(const QString &body) {
    m_body = body;
    m_body_isSet = true;
}

bool OAIRoutingMessage::is_body_Set() const{
    return m_body_isSet;
}

bool OAIRoutingMessage::is_body_Valid() const{
    return m_body_isValid;
}

QMap<QString, QString> OAIRoutingMessage::getSystemProperties() const {
    return m_system_properties;
}
void OAIRoutingMessage::setSystemProperties(const QMap<QString, QString> &system_properties) {
    m_system_properties = system_properties;
    m_system_properties_isSet = true;
}

bool OAIRoutingMessage::is_system_properties_Set() const{
    return m_system_properties_isSet;
}

bool OAIRoutingMessage::is_system_properties_Valid() const{
    return m_system_properties_isValid;
}

bool OAIRoutingMessage::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_app_properties.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_body_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_system_properties.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRoutingMessage::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
