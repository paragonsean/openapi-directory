/**
 * iotHubClient
 * Use this API to manage the IoT hubs in your Azure subscription.
 *
 * The version of the OpenAPI document: 2019-11-04
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRoutingTwin.h
 *
 * Twin reference input parameter. This is an optional parameter
 */

#ifndef OAIRoutingTwin_H
#define OAIRoutingTwin_H

#include <QJsonObject>

#include "OAIObject.h"
#include "OAIRoutingTwin_properties.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIRoutingTwin_properties;

class OAIRoutingTwin : public OAIObject {
public:
    OAIRoutingTwin();
    OAIRoutingTwin(QString json);
    ~OAIRoutingTwin() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIRoutingTwin_properties getProperties() const;
    void setProperties(const OAIRoutingTwin_properties &properties);
    bool is_properties_Set() const;
    bool is_properties_Valid() const;

    OAIObject getTags() const;
    void setTags(const OAIObject &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIRoutingTwin_properties m_properties;
    bool m_properties_isSet;
    bool m_properties_isValid;

    OAIObject m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRoutingTwin)

#endif // OAIRoutingTwin_H
