/**
 * iotHubClient
 * Use this API to manage the IoT hubs in your Azure subscription.
 *
 * The version of the OpenAPI document: 2019-11-04
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRouteErrorRange.h
 *
 * Range of route errors
 */

#ifndef OAIRouteErrorRange_H
#define OAIRouteErrorRange_H

#include <QJsonObject>

#include "OAIRouteErrorPosition.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIRouteErrorPosition;

class OAIRouteErrorRange : public OAIObject {
public:
    OAIRouteErrorRange();
    OAIRouteErrorRange(QString json);
    ~OAIRouteErrorRange() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIRouteErrorPosition getEnd() const;
    void setEnd(const OAIRouteErrorPosition &end);
    bool is_end_Set() const;
    bool is_end_Valid() const;

    OAIRouteErrorPosition getStart() const;
    void setStart(const OAIRouteErrorPosition &start);
    bool is_start_Set() const;
    bool is_start_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIRouteErrorPosition m_end;
    bool m_end_isSet;
    bool m_end_isValid;

    OAIRouteErrorPosition m_start;
    bool m_start_isSet;
    bool m_start_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRouteErrorRange)

#endif // OAIRouteErrorRange_H
