/**
 * iotHubClient
 * Use this API to manage the IoT hubs in your Azure subscription.
 *
 * The version of the OpenAPI document: 2019-07-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEventHubProperties.h
 *
 * The properties of the provisioned Event Hub-compatible endpoint used by the IoT hub.
 */

#ifndef OAIEventHubProperties_H
#define OAIEventHubProperties_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIEventHubProperties : public OAIObject {
public:
    OAIEventHubProperties();
    OAIEventHubProperties(QString json);
    ~OAIEventHubProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getEndpoint() const;
    void setEndpoint(const QString &endpoint);
    bool is_endpoint_Set() const;
    bool is_endpoint_Valid() const;

    qint32 getPartitionCount() const;
    void setPartitionCount(const qint32 &partition_count);
    bool is_partition_count_Set() const;
    bool is_partition_count_Valid() const;

    QList<QString> getPartitionIds() const;
    void setPartitionIds(const QList<QString> &partition_ids);
    bool is_partition_ids_Set() const;
    bool is_partition_ids_Valid() const;

    QString getPath() const;
    void setPath(const QString &path);
    bool is_path_Set() const;
    bool is_path_Valid() const;

    qint64 getRetentionTimeInDays() const;
    void setRetentionTimeInDays(const qint64 &retention_time_in_days);
    bool is_retention_time_in_days_Set() const;
    bool is_retention_time_in_days_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_endpoint;
    bool m_endpoint_isSet;
    bool m_endpoint_isValid;

    qint32 m_partition_count;
    bool m_partition_count_isSet;
    bool m_partition_count_isValid;

    QList<QString> m_partition_ids;
    bool m_partition_ids_isSet;
    bool m_partition_ids_isValid;

    QString m_path;
    bool m_path_isSet;
    bool m_path_isValid;

    qint64 m_retention_time_in_days;
    bool m_retention_time_in_days_isSet;
    bool m_retention_time_in_days_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEventHubProperties)

#endif // OAIEventHubProperties_H
