/**
 * iotHubClient
 * Use this API to manage the IoT hubs in your Azure subscription.
 *
 * The version of the OpenAPI document: 2019-07-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.IotHubClient);
  }
}(this, function(expect, IotHubClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new IotHubClient.POSTApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('POSTApi', function() {
    describe('iotHubManualFailover', function() {
      it('should call iotHubManualFailover successfully', function(done) {
        //uncomment below and update the code to test iotHubManualFailover
        //instance.iotHubManualFailover(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('iotHubResourceCheckNameAvailability', function() {
      it('should call iotHubResourceCheckNameAvailability successfully', function(done) {
        //uncomment below and update the code to test iotHubResourceCheckNameAvailability
        //instance.iotHubResourceCheckNameAvailability(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('iotHubResourceExportDevices', function() {
      it('should call iotHubResourceExportDevices successfully', function(done) {
        //uncomment below and update the code to test iotHubResourceExportDevices
        //instance.iotHubResourceExportDevices(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('iotHubResourceGetKeysForKeyName', function() {
      it('should call iotHubResourceGetKeysForKeyName successfully', function(done) {
        //uncomment below and update the code to test iotHubResourceGetKeysForKeyName
        //instance.iotHubResourceGetKeysForKeyName(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('iotHubResourceImportDevices', function() {
      it('should call iotHubResourceImportDevices successfully', function(done) {
        //uncomment below and update the code to test iotHubResourceImportDevices
        //instance.iotHubResourceImportDevices(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('iotHubResourceListKeys', function() {
      it('should call iotHubResourceListKeys successfully', function(done) {
        //uncomment below and update the code to test iotHubResourceListKeys
        //instance.iotHubResourceListKeys(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('iotHubResourceTestAllRoutes', function() {
      it('should call iotHubResourceTestAllRoutes successfully', function(done) {
        //uncomment below and update the code to test iotHubResourceTestAllRoutes
        //instance.iotHubResourceTestAllRoutes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('iotHubResourceTestRoute', function() {
      it('should call iotHubResourceTestRoute successfully', function(done) {
        //uncomment below and update the code to test iotHubResourceTestRoute
        //instance.iotHubResourceTestRoute(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
