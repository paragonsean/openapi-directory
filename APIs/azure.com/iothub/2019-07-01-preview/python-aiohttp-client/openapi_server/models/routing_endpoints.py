# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.routing_event_hub_properties import RoutingEventHubProperties
from openapi_server.models.routing_service_bus_queue_endpoint_properties import RoutingServiceBusQueueEndpointProperties
from openapi_server.models.routing_service_bus_topic_endpoint_properties import RoutingServiceBusTopicEndpointProperties
from openapi_server.models.routing_storage_container_properties import RoutingStorageContainerProperties
from openapi_server import util


class RoutingEndpoints(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, event_hubs: List[RoutingEventHubProperties]=None, service_bus_queues: List[RoutingServiceBusQueueEndpointProperties]=None, service_bus_topics: List[RoutingServiceBusTopicEndpointProperties]=None, storage_containers: List[RoutingStorageContainerProperties]=None):
        """RoutingEndpoints - a model defined in OpenAPI

        :param event_hubs: The event_hubs of this RoutingEndpoints.
        :param service_bus_queues: The service_bus_queues of this RoutingEndpoints.
        :param service_bus_topics: The service_bus_topics of this RoutingEndpoints.
        :param storage_containers: The storage_containers of this RoutingEndpoints.
        """
        self.openapi_types = {
            'event_hubs': List[RoutingEventHubProperties],
            'service_bus_queues': List[RoutingServiceBusQueueEndpointProperties],
            'service_bus_topics': List[RoutingServiceBusTopicEndpointProperties],
            'storage_containers': List[RoutingStorageContainerProperties]
        }

        self.attribute_map = {
            'event_hubs': 'eventHubs',
            'service_bus_queues': 'serviceBusQueues',
            'service_bus_topics': 'serviceBusTopics',
            'storage_containers': 'storageContainers'
        }

        self._event_hubs = event_hubs
        self._service_bus_queues = service_bus_queues
        self._service_bus_topics = service_bus_topics
        self._storage_containers = storage_containers

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RoutingEndpoints':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RoutingEndpoints of this RoutingEndpoints.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def event_hubs(self):
        """Gets the event_hubs of this RoutingEndpoints.

        The list of Event Hubs endpoints that IoT hub routes messages to, based on the routing rules. This list does not include the built-in Event Hubs endpoint.

        :return: The event_hubs of this RoutingEndpoints.
        :rtype: List[RoutingEventHubProperties]
        """
        return self._event_hubs

    @event_hubs.setter
    def event_hubs(self, event_hubs):
        """Sets the event_hubs of this RoutingEndpoints.

        The list of Event Hubs endpoints that IoT hub routes messages to, based on the routing rules. This list does not include the built-in Event Hubs endpoint.

        :param event_hubs: The event_hubs of this RoutingEndpoints.
        :type event_hubs: List[RoutingEventHubProperties]
        """

        self._event_hubs = event_hubs

    @property
    def service_bus_queues(self):
        """Gets the service_bus_queues of this RoutingEndpoints.

        The list of Service Bus queue endpoints that IoT hub routes the messages to, based on the routing rules.

        :return: The service_bus_queues of this RoutingEndpoints.
        :rtype: List[RoutingServiceBusQueueEndpointProperties]
        """
        return self._service_bus_queues

    @service_bus_queues.setter
    def service_bus_queues(self, service_bus_queues):
        """Sets the service_bus_queues of this RoutingEndpoints.

        The list of Service Bus queue endpoints that IoT hub routes the messages to, based on the routing rules.

        :param service_bus_queues: The service_bus_queues of this RoutingEndpoints.
        :type service_bus_queues: List[RoutingServiceBusQueueEndpointProperties]
        """

        self._service_bus_queues = service_bus_queues

    @property
    def service_bus_topics(self):
        """Gets the service_bus_topics of this RoutingEndpoints.

        The list of Service Bus topic endpoints that the IoT hub routes the messages to, based on the routing rules.

        :return: The service_bus_topics of this RoutingEndpoints.
        :rtype: List[RoutingServiceBusTopicEndpointProperties]
        """
        return self._service_bus_topics

    @service_bus_topics.setter
    def service_bus_topics(self, service_bus_topics):
        """Sets the service_bus_topics of this RoutingEndpoints.

        The list of Service Bus topic endpoints that the IoT hub routes the messages to, based on the routing rules.

        :param service_bus_topics: The service_bus_topics of this RoutingEndpoints.
        :type service_bus_topics: List[RoutingServiceBusTopicEndpointProperties]
        """

        self._service_bus_topics = service_bus_topics

    @property
    def storage_containers(self):
        """Gets the storage_containers of this RoutingEndpoints.

        The list of storage container endpoints that IoT hub routes messages to, based on the routing rules.

        :return: The storage_containers of this RoutingEndpoints.
        :rtype: List[RoutingStorageContainerProperties]
        """
        return self._storage_containers

    @storage_containers.setter
    def storage_containers(self, storage_containers):
        """Sets the storage_containers of this RoutingEndpoints.

        The list of storage container endpoints that IoT hub routes messages to, based on the routing rules.

        :param storage_containers: The storage_containers of this RoutingEndpoints.
        :type storage_containers: List[RoutingStorageContainerProperties]
        """

        self._storage_containers = storage_containers
