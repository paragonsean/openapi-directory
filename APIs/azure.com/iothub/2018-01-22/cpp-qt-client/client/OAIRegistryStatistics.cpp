/**
 * iotHubClient
 * Use this API to manage the IoT hubs in your Azure subscription.
 *
 * The version of the OpenAPI document: 2018-01-22
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRegistryStatistics.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRegistryStatistics::OAIRegistryStatistics(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRegistryStatistics::OAIRegistryStatistics() {
    this->initializeModel();
}

OAIRegistryStatistics::~OAIRegistryStatistics() {}

void OAIRegistryStatistics::initializeModel() {

    m_disabled_device_count_isSet = false;
    m_disabled_device_count_isValid = false;

    m_enabled_device_count_isSet = false;
    m_enabled_device_count_isValid = false;

    m_total_device_count_isSet = false;
    m_total_device_count_isValid = false;
}

void OAIRegistryStatistics::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRegistryStatistics::fromJsonObject(QJsonObject json) {

    m_disabled_device_count_isValid = ::OpenAPI::fromJsonValue(m_disabled_device_count, json[QString("disabledDeviceCount")]);
    m_disabled_device_count_isSet = !json[QString("disabledDeviceCount")].isNull() && m_disabled_device_count_isValid;

    m_enabled_device_count_isValid = ::OpenAPI::fromJsonValue(m_enabled_device_count, json[QString("enabledDeviceCount")]);
    m_enabled_device_count_isSet = !json[QString("enabledDeviceCount")].isNull() && m_enabled_device_count_isValid;

    m_total_device_count_isValid = ::OpenAPI::fromJsonValue(m_total_device_count, json[QString("totalDeviceCount")]);
    m_total_device_count_isSet = !json[QString("totalDeviceCount")].isNull() && m_total_device_count_isValid;
}

QString OAIRegistryStatistics::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRegistryStatistics::asJsonObject() const {
    QJsonObject obj;
    if (m_disabled_device_count_isSet) {
        obj.insert(QString("disabledDeviceCount"), ::OpenAPI::toJsonValue(m_disabled_device_count));
    }
    if (m_enabled_device_count_isSet) {
        obj.insert(QString("enabledDeviceCount"), ::OpenAPI::toJsonValue(m_enabled_device_count));
    }
    if (m_total_device_count_isSet) {
        obj.insert(QString("totalDeviceCount"), ::OpenAPI::toJsonValue(m_total_device_count));
    }
    return obj;
}

qint64 OAIRegistryStatistics::getDisabledDeviceCount() const {
    return m_disabled_device_count;
}
void OAIRegistryStatistics::setDisabledDeviceCount(const qint64 &disabled_device_count) {
    m_disabled_device_count = disabled_device_count;
    m_disabled_device_count_isSet = true;
}

bool OAIRegistryStatistics::is_disabled_device_count_Set() const{
    return m_disabled_device_count_isSet;
}

bool OAIRegistryStatistics::is_disabled_device_count_Valid() const{
    return m_disabled_device_count_isValid;
}

qint64 OAIRegistryStatistics::getEnabledDeviceCount() const {
    return m_enabled_device_count;
}
void OAIRegistryStatistics::setEnabledDeviceCount(const qint64 &enabled_device_count) {
    m_enabled_device_count = enabled_device_count;
    m_enabled_device_count_isSet = true;
}

bool OAIRegistryStatistics::is_enabled_device_count_Set() const{
    return m_enabled_device_count_isSet;
}

bool OAIRegistryStatistics::is_enabled_device_count_Valid() const{
    return m_enabled_device_count_isValid;
}

qint64 OAIRegistryStatistics::getTotalDeviceCount() const {
    return m_total_device_count;
}
void OAIRegistryStatistics::setTotalDeviceCount(const qint64 &total_device_count) {
    m_total_device_count = total_device_count;
    m_total_device_count_isSet = true;
}

bool OAIRegistryStatistics::is_total_device_count_Set() const{
    return m_total_device_count_isSet;
}

bool OAIRegistryStatistics::is_total_device_count_Valid() const{
    return m_total_device_count_isValid;
}

bool OAIRegistryStatistics::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_disabled_device_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enabled_device_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_device_count_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRegistryStatistics::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
