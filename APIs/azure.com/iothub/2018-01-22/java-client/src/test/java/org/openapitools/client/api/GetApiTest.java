/*
 * iotHubClient
 * Use this API to manage the IoT hubs in your Azure subscription.
 *
 * The version of the OpenAPI document: 2018-01-22
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ErrorDetails;
import org.openapitools.client.model.EventHubConsumerGroupInfo;
import org.openapitools.client.model.EventHubConsumerGroupsListResult;
import org.openapitools.client.model.IotHubDescription;
import org.openapitools.client.model.IotHubDescriptionListResult;
import org.openapitools.client.model.IotHubQuotaMetricInfoListResult;
import org.openapitools.client.model.IotHubSkuDescriptionListResult;
import org.openapitools.client.model.JobResponse;
import org.openapitools.client.model.JobResponseListResult;
import org.openapitools.client.model.RegistryStatistics;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for GetApi
 */
@Disabled
public class GetApiTest {

    private final GetApi api = new GetApi();

    /**
     * Get the non-security related metadata of an IoT hub.
     *
     * Get the non-security related metadata of an IoT hub.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void iotHubResourceGetTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String resourceName = null;
        IotHubDescription response = api.iotHubResourceGet(apiVersion, subscriptionId, resourceGroupName, resourceName);
        // TODO: test validations
    }

    /**
     * Get a consumer group from the Event Hub-compatible device-to-cloud endpoint for an IoT hub.
     *
     * Get a consumer group from the Event Hub-compatible device-to-cloud endpoint for an IoT hub.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void iotHubResourceGetEventHubConsumerGroupTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String resourceName = null;
        String eventHubEndpointName = null;
        String name = null;
        EventHubConsumerGroupInfo response = api.iotHubResourceGetEventHubConsumerGroup(apiVersion, subscriptionId, resourceGroupName, resourceName, eventHubEndpointName, name);
        // TODO: test validations
    }

    /**
     * Get the details of a job from an IoT hub. For more information, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-identity-registry.
     *
     * Get the details of a job from an IoT hub. For more information, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-identity-registry.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void iotHubResourceGetJobTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String resourceName = null;
        String jobId = null;
        JobResponse response = api.iotHubResourceGetJob(apiVersion, subscriptionId, resourceGroupName, resourceName, jobId);
        // TODO: test validations
    }

    /**
     * Get the quota metrics for an IoT hub.
     *
     * Get the quota metrics for an IoT hub.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void iotHubResourceGetQuotaMetricsTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String resourceName = null;
        IotHubQuotaMetricInfoListResult response = api.iotHubResourceGetQuotaMetrics(apiVersion, subscriptionId, resourceGroupName, resourceName);
        // TODO: test validations
    }

    /**
     * Get the statistics from an IoT hub.
     *
     * Get the statistics from an IoT hub.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void iotHubResourceGetStatsTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String resourceName = null;
        RegistryStatistics response = api.iotHubResourceGetStats(apiVersion, subscriptionId, resourceGroupName, resourceName);
        // TODO: test validations
    }

    /**
     * Get the list of valid SKUs for an IoT hub.
     *
     * Get the list of valid SKUs for an IoT hub.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void iotHubResourceGetValidSkusTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String resourceName = null;
        IotHubSkuDescriptionListResult response = api.iotHubResourceGetValidSkus(apiVersion, subscriptionId, resourceGroupName, resourceName);
        // TODO: test validations
    }

    /**
     * Get all the IoT hubs in a resource group.
     *
     * Get all the IoT hubs in a resource group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void iotHubResourceListByResourceGroupTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        IotHubDescriptionListResult response = api.iotHubResourceListByResourceGroup(apiVersion, subscriptionId, resourceGroupName);
        // TODO: test validations
    }

    /**
     * Get all the IoT hubs in a subscription.
     *
     * Get all the IoT hubs in a subscription.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void iotHubResourceListBySubscriptionTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        IotHubDescriptionListResult response = api.iotHubResourceListBySubscription(apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Get a list of the consumer groups in the Event Hub-compatible device-to-cloud endpoint in an IoT hub.
     *
     * Get a list of the consumer groups in the Event Hub-compatible device-to-cloud endpoint in an IoT hub.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void iotHubResourceListEventHubConsumerGroupsTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String resourceName = null;
        String eventHubEndpointName = null;
        EventHubConsumerGroupsListResult response = api.iotHubResourceListEventHubConsumerGroups(apiVersion, subscriptionId, resourceGroupName, resourceName, eventHubEndpointName);
        // TODO: test validations
    }

    /**
     * Get a list of all the jobs in an IoT hub. For more information, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-identity-registry.
     *
     * Get a list of all the jobs in an IoT hub. For more information, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-identity-registry.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void iotHubResourceListJobsTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String resourceName = null;
        JobResponseListResult response = api.iotHubResourceListJobs(apiVersion, subscriptionId, resourceGroupName, resourceName);
        // TODO: test validations
    }

}
