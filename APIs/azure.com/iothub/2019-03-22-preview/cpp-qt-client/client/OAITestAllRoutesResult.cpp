/**
 * iotHubClient
 * Use this API to manage the IoT hubs in your Azure subscription.
 *
 * The version of the OpenAPI document: 2019-03-22-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITestAllRoutesResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITestAllRoutesResult::OAITestAllRoutesResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITestAllRoutesResult::OAITestAllRoutesResult() {
    this->initializeModel();
}

OAITestAllRoutesResult::~OAITestAllRoutesResult() {}

void OAITestAllRoutesResult::initializeModel() {

    m_routes_isSet = false;
    m_routes_isValid = false;
}

void OAITestAllRoutesResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITestAllRoutesResult::fromJsonObject(QJsonObject json) {

    m_routes_isValid = ::OpenAPI::fromJsonValue(m_routes, json[QString("routes")]);
    m_routes_isSet = !json[QString("routes")].isNull() && m_routes_isValid;
}

QString OAITestAllRoutesResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITestAllRoutesResult::asJsonObject() const {
    QJsonObject obj;
    if (m_routes.size() > 0) {
        obj.insert(QString("routes"), ::OpenAPI::toJsonValue(m_routes));
    }
    return obj;
}

QList<OAIMatchedRoute> OAITestAllRoutesResult::getRoutes() const {
    return m_routes;
}
void OAITestAllRoutesResult::setRoutes(const QList<OAIMatchedRoute> &routes) {
    m_routes = routes;
    m_routes_isSet = true;
}

bool OAITestAllRoutesResult::is_routes_Set() const{
    return m_routes_isSet;
}

bool OAITestAllRoutesResult::is_routes_Valid() const{
    return m_routes_isValid;
}

bool OAITestAllRoutesResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_routes.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITestAllRoutesResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
