# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EventHubProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, endpoint: str=None, partition_count: int=None, partition_ids: List[str]=None, path: str=None, retention_time_in_days: int=None):
        """EventHubProperties - a model defined in OpenAPI

        :param endpoint: The endpoint of this EventHubProperties.
        :param partition_count: The partition_count of this EventHubProperties.
        :param partition_ids: The partition_ids of this EventHubProperties.
        :param path: The path of this EventHubProperties.
        :param retention_time_in_days: The retention_time_in_days of this EventHubProperties.
        """
        self.openapi_types = {
            'endpoint': str,
            'partition_count': int,
            'partition_ids': List[str],
            'path': str,
            'retention_time_in_days': int
        }

        self.attribute_map = {
            'endpoint': 'endpoint',
            'partition_count': 'partitionCount',
            'partition_ids': 'partitionIds',
            'path': 'path',
            'retention_time_in_days': 'retentionTimeInDays'
        }

        self._endpoint = endpoint
        self._partition_count = partition_count
        self._partition_ids = partition_ids
        self._path = path
        self._retention_time_in_days = retention_time_in_days

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EventHubProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EventHubProperties of this EventHubProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def endpoint(self):
        """Gets the endpoint of this EventHubProperties.

        The Event Hub-compatible endpoint.

        :return: The endpoint of this EventHubProperties.
        :rtype: str
        """
        return self._endpoint

    @endpoint.setter
    def endpoint(self, endpoint):
        """Sets the endpoint of this EventHubProperties.

        The Event Hub-compatible endpoint.

        :param endpoint: The endpoint of this EventHubProperties.
        :type endpoint: str
        """

        self._endpoint = endpoint

    @property
    def partition_count(self):
        """Gets the partition_count of this EventHubProperties.

        The number of partitions for receiving device-to-cloud messages in the Event Hub-compatible endpoint. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#device-to-cloud-messages.

        :return: The partition_count of this EventHubProperties.
        :rtype: int
        """
        return self._partition_count

    @partition_count.setter
    def partition_count(self, partition_count):
        """Sets the partition_count of this EventHubProperties.

        The number of partitions for receiving device-to-cloud messages in the Event Hub-compatible endpoint. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#device-to-cloud-messages.

        :param partition_count: The partition_count of this EventHubProperties.
        :type partition_count: int
        """

        self._partition_count = partition_count

    @property
    def partition_ids(self):
        """Gets the partition_ids of this EventHubProperties.

        The partition ids in the Event Hub-compatible endpoint.

        :return: The partition_ids of this EventHubProperties.
        :rtype: List[str]
        """
        return self._partition_ids

    @partition_ids.setter
    def partition_ids(self, partition_ids):
        """Sets the partition_ids of this EventHubProperties.

        The partition ids in the Event Hub-compatible endpoint.

        :param partition_ids: The partition_ids of this EventHubProperties.
        :type partition_ids: List[str]
        """

        self._partition_ids = partition_ids

    @property
    def path(self):
        """Gets the path of this EventHubProperties.

        The Event Hub-compatible name.

        :return: The path of this EventHubProperties.
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path):
        """Sets the path of this EventHubProperties.

        The Event Hub-compatible name.

        :param path: The path of this EventHubProperties.
        :type path: str
        """

        self._path = path

    @property
    def retention_time_in_days(self):
        """Gets the retention_time_in_days of this EventHubProperties.

        The retention time for device-to-cloud messages in days. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#device-to-cloud-messages

        :return: The retention_time_in_days of this EventHubProperties.
        :rtype: int
        """
        return self._retention_time_in_days

    @retention_time_in_days.setter
    def retention_time_in_days(self, retention_time_in_days):
        """Sets the retention_time_in_days of this EventHubProperties.

        The retention time for device-to-cloud messages in days. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#device-to-cloud-messages

        :param retention_time_in_days: The retention_time_in_days of this EventHubProperties.
        :type retention_time_in_days: int
        """

        self._retention_time_in_days = retention_time_in_days
