/**
 * iotHubClient
 * Use this API to manage the IoT hubs in your Azure subscription.
 *
 * The version of the OpenAPI document: 2016-02-03
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISharedAccessSignatureAuthorizationRule.h
 *
 * The properties of an IoT hub shared access policy.
 */

#ifndef OAISharedAccessSignatureAuthorizationRule_H
#define OAISharedAccessSignatureAuthorizationRule_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISharedAccessSignatureAuthorizationRule : public OAIObject {
public:
    OAISharedAccessSignatureAuthorizationRule();
    OAISharedAccessSignatureAuthorizationRule(QString json);
    ~OAISharedAccessSignatureAuthorizationRule() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getKeyName() const;
    void setKeyName(const QString &key_name);
    bool is_key_name_Set() const;
    bool is_key_name_Valid() const;

    QString getPrimaryKey() const;
    void setPrimaryKey(const QString &primary_key);
    bool is_primary_key_Set() const;
    bool is_primary_key_Valid() const;

    QString getRights() const;
    void setRights(const QString &rights);
    bool is_rights_Set() const;
    bool is_rights_Valid() const;

    QString getSecondaryKey() const;
    void setSecondaryKey(const QString &secondary_key);
    bool is_secondary_key_Set() const;
    bool is_secondary_key_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_key_name;
    bool m_key_name_isSet;
    bool m_key_name_isValid;

    QString m_primary_key;
    bool m_primary_key_isSet;
    bool m_primary_key_isValid;

    QString m_rights;
    bool m_rights_isSet;
    bool m_rights_isValid;

    QString m_secondary_key;
    bool m_secondary_key_isSet;
    bool m_secondary_key_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISharedAccessSignatureAuthorizationRule)

#endif // OAISharedAccessSignatureAuthorizationRule_H
