/**
 * iotHubClient
 * Use this API to manage the IoT hubs in your Azure subscription.
 *
 * The version of the OpenAPI document: 2018-04-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICertificatePropertiesWithNonce.h
 *
 * The description of an X509 CA Certificate including the challenge nonce issued for the Proof-Of-Possession flow.
 */

#ifndef OAICertificatePropertiesWithNonce_H
#define OAICertificatePropertiesWithNonce_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICertificatePropertiesWithNonce : public OAIObject {
public:
    OAICertificatePropertiesWithNonce();
    OAICertificatePropertiesWithNonce(QString json);
    ~OAICertificatePropertiesWithNonce() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCertificate() const;
    void setCertificate(const QString &certificate);
    bool is_certificate_Set() const;
    bool is_certificate_Valid() const;

    QString getCreated() const;
    void setCreated(const QString &created);
    bool is_created_Set() const;
    bool is_created_Valid() const;

    QString getExpiry() const;
    void setExpiry(const QString &expiry);
    bool is_expiry_Set() const;
    bool is_expiry_Valid() const;

    bool isIsVerified() const;
    void setIsVerified(const bool &is_verified);
    bool is_is_verified_Set() const;
    bool is_is_verified_Valid() const;

    QString getSubject() const;
    void setSubject(const QString &subject);
    bool is_subject_Set() const;
    bool is_subject_Valid() const;

    QString getThumbprint() const;
    void setThumbprint(const QString &thumbprint);
    bool is_thumbprint_Set() const;
    bool is_thumbprint_Valid() const;

    QString getUpdated() const;
    void setUpdated(const QString &updated);
    bool is_updated_Set() const;
    bool is_updated_Valid() const;

    QString getVerificationCode() const;
    void setVerificationCode(const QString &verification_code);
    bool is_verification_code_Set() const;
    bool is_verification_code_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_certificate;
    bool m_certificate_isSet;
    bool m_certificate_isValid;

    QString m_created;
    bool m_created_isSet;
    bool m_created_isValid;

    QString m_expiry;
    bool m_expiry_isSet;
    bool m_expiry_isValid;

    bool m_is_verified;
    bool m_is_verified_isSet;
    bool m_is_verified_isValid;

    QString m_subject;
    bool m_subject_isSet;
    bool m_subject_isValid;

    QString m_thumbprint;
    bool m_thumbprint_isSet;
    bool m_thumbprint_isValid;

    QString m_updated;
    bool m_updated_isSet;
    bool m_updated_isValid;

    QString m_verification_code;
    bool m_verification_code_isSet;
    bool m_verification_code_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICertificatePropertiesWithNonce)

#endif // OAICertificatePropertiesWithNonce_H
