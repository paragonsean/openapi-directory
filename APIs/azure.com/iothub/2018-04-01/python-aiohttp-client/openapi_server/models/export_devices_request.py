# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ExportDevicesRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, exclude_keys: bool=None, export_blob_container_uri: str=None):
        """ExportDevicesRequest - a model defined in OpenAPI

        :param exclude_keys: The exclude_keys of this ExportDevicesRequest.
        :param export_blob_container_uri: The export_blob_container_uri of this ExportDevicesRequest.
        """
        self.openapi_types = {
            'exclude_keys': bool,
            'export_blob_container_uri': str
        }

        self.attribute_map = {
            'exclude_keys': 'excludeKeys',
            'export_blob_container_uri': 'exportBlobContainerUri'
        }

        self._exclude_keys = exclude_keys
        self._export_blob_container_uri = export_blob_container_uri

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ExportDevicesRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ExportDevicesRequest of this ExportDevicesRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def exclude_keys(self):
        """Gets the exclude_keys of this ExportDevicesRequest.

        The value indicating whether keys should be excluded during export.

        :return: The exclude_keys of this ExportDevicesRequest.
        :rtype: bool
        """
        return self._exclude_keys

    @exclude_keys.setter
    def exclude_keys(self, exclude_keys):
        """Sets the exclude_keys of this ExportDevicesRequest.

        The value indicating whether keys should be excluded during export.

        :param exclude_keys: The exclude_keys of this ExportDevicesRequest.
        :type exclude_keys: bool
        """
        if exclude_keys is None:
            raise ValueError("Invalid value for `exclude_keys`, must not be `None`")

        self._exclude_keys = exclude_keys

    @property
    def export_blob_container_uri(self):
        """Gets the export_blob_container_uri of this ExportDevicesRequest.

        The export blob container URI.

        :return: The export_blob_container_uri of this ExportDevicesRequest.
        :rtype: str
        """
        return self._export_blob_container_uri

    @export_blob_container_uri.setter
    def export_blob_container_uri(self, export_blob_container_uri):
        """Sets the export_blob_container_uri of this ExportDevicesRequest.

        The export blob container URI.

        :param export_blob_container_uri: The export_blob_container_uri of this ExportDevicesRequest.
        :type export_blob_container_uri: str
        """
        if export_blob_container_uri is None:
            raise ValueError("Invalid value for `export_blob_container_uri`, must not be `None`")

        self._export_blob_container_uri = export_blob_container_uri
