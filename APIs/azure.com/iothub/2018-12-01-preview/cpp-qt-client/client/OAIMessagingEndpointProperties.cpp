/**
 * iotHubClient
 * Use this API to manage the IoT hubs in your Azure subscription.
 *
 * The version of the OpenAPI document: 2018-12-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMessagingEndpointProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMessagingEndpointProperties::OAIMessagingEndpointProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMessagingEndpointProperties::OAIMessagingEndpointProperties() {
    this->initializeModel();
}

OAIMessagingEndpointProperties::~OAIMessagingEndpointProperties() {}

void OAIMessagingEndpointProperties::initializeModel() {

    m_lock_duration_as_iso8601_isSet = false;
    m_lock_duration_as_iso8601_isValid = false;

    m_max_delivery_count_isSet = false;
    m_max_delivery_count_isValid = false;

    m_ttl_as_iso8601_isSet = false;
    m_ttl_as_iso8601_isValid = false;
}

void OAIMessagingEndpointProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMessagingEndpointProperties::fromJsonObject(QJsonObject json) {

    m_lock_duration_as_iso8601_isValid = ::OpenAPI::fromJsonValue(m_lock_duration_as_iso8601, json[QString("lockDurationAsIso8601")]);
    m_lock_duration_as_iso8601_isSet = !json[QString("lockDurationAsIso8601")].isNull() && m_lock_duration_as_iso8601_isValid;

    m_max_delivery_count_isValid = ::OpenAPI::fromJsonValue(m_max_delivery_count, json[QString("maxDeliveryCount")]);
    m_max_delivery_count_isSet = !json[QString("maxDeliveryCount")].isNull() && m_max_delivery_count_isValid;

    m_ttl_as_iso8601_isValid = ::OpenAPI::fromJsonValue(m_ttl_as_iso8601, json[QString("ttlAsIso8601")]);
    m_ttl_as_iso8601_isSet = !json[QString("ttlAsIso8601")].isNull() && m_ttl_as_iso8601_isValid;
}

QString OAIMessagingEndpointProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMessagingEndpointProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_lock_duration_as_iso8601_isSet) {
        obj.insert(QString("lockDurationAsIso8601"), ::OpenAPI::toJsonValue(m_lock_duration_as_iso8601));
    }
    if (m_max_delivery_count_isSet) {
        obj.insert(QString("maxDeliveryCount"), ::OpenAPI::toJsonValue(m_max_delivery_count));
    }
    if (m_ttl_as_iso8601_isSet) {
        obj.insert(QString("ttlAsIso8601"), ::OpenAPI::toJsonValue(m_ttl_as_iso8601));
    }
    return obj;
}

QString OAIMessagingEndpointProperties::getLockDurationAsIso8601() const {
    return m_lock_duration_as_iso8601;
}
void OAIMessagingEndpointProperties::setLockDurationAsIso8601(const QString &lock_duration_as_iso8601) {
    m_lock_duration_as_iso8601 = lock_duration_as_iso8601;
    m_lock_duration_as_iso8601_isSet = true;
}

bool OAIMessagingEndpointProperties::is_lock_duration_as_iso8601_Set() const{
    return m_lock_duration_as_iso8601_isSet;
}

bool OAIMessagingEndpointProperties::is_lock_duration_as_iso8601_Valid() const{
    return m_lock_duration_as_iso8601_isValid;
}

qint32 OAIMessagingEndpointProperties::getMaxDeliveryCount() const {
    return m_max_delivery_count;
}
void OAIMessagingEndpointProperties::setMaxDeliveryCount(const qint32 &max_delivery_count) {
    m_max_delivery_count = max_delivery_count;
    m_max_delivery_count_isSet = true;
}

bool OAIMessagingEndpointProperties::is_max_delivery_count_Set() const{
    return m_max_delivery_count_isSet;
}

bool OAIMessagingEndpointProperties::is_max_delivery_count_Valid() const{
    return m_max_delivery_count_isValid;
}

QString OAIMessagingEndpointProperties::getTtlAsIso8601() const {
    return m_ttl_as_iso8601;
}
void OAIMessagingEndpointProperties::setTtlAsIso8601(const QString &ttl_as_iso8601) {
    m_ttl_as_iso8601 = ttl_as_iso8601;
    m_ttl_as_iso8601_isSet = true;
}

bool OAIMessagingEndpointProperties::is_ttl_as_iso8601_Set() const{
    return m_ttl_as_iso8601_isSet;
}

bool OAIMessagingEndpointProperties::is_ttl_as_iso8601_Valid() const{
    return m_ttl_as_iso8601_isValid;
}

bool OAIMessagingEndpointProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_lock_duration_as_iso8601_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_max_delivery_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ttl_as_iso8601_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMessagingEndpointProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
