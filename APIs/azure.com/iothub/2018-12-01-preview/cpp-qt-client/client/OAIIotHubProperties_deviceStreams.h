/**
 * iotHubClient
 * Use this API to manage the IoT hubs in your Azure subscription.
 *
 * The version of the OpenAPI document: 2018-12-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIIotHubProperties_deviceStreams.h
 *
 * The device streams properties of iothub.
 */

#ifndef OAIIotHubProperties_deviceStreams_H
#define OAIIotHubProperties_deviceStreams_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIIotHubProperties_deviceStreams : public OAIObject {
public:
    OAIIotHubProperties_deviceStreams();
    OAIIotHubProperties_deviceStreams(QString json);
    ~OAIIotHubProperties_deviceStreams() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getStreamingEndpoints() const;
    void setStreamingEndpoints(const QList<QString> &streaming_endpoints);
    bool is_streaming_endpoints_Set() const;
    bool is_streaming_endpoints_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_streaming_endpoints;
    bool m_streaming_endpoints_isSet;
    bool m_streaming_endpoints_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIIotHubProperties_deviceStreams)

#endif // OAIIotHubProperties_deviceStreams_H
