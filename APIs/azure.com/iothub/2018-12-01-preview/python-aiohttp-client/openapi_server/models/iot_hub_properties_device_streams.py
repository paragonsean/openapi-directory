# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class IotHubPropertiesDeviceStreams(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, streaming_endpoints: List[str]=None):
        """IotHubPropertiesDeviceStreams - a model defined in OpenAPI

        :param streaming_endpoints: The streaming_endpoints of this IotHubPropertiesDeviceStreams.
        """
        self.openapi_types = {
            'streaming_endpoints': List[str]
        }

        self.attribute_map = {
            'streaming_endpoints': 'streamingEndpoints'
        }

        self._streaming_endpoints = streaming_endpoints

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IotHubPropertiesDeviceStreams':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IotHubProperties_deviceStreams of this IotHubPropertiesDeviceStreams.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def streaming_endpoints(self):
        """Gets the streaming_endpoints of this IotHubPropertiesDeviceStreams.

        List of Device Streams Endpoints.

        :return: The streaming_endpoints of this IotHubPropertiesDeviceStreams.
        :rtype: List[str]
        """
        return self._streaming_endpoints

    @streaming_endpoints.setter
    def streaming_endpoints(self, streaming_endpoints):
        """Sets the streaming_endpoints of this IotHubPropertiesDeviceStreams.

        List of Device Streams Endpoints.

        :param streaming_endpoints: The streaming_endpoints of this IotHubPropertiesDeviceStreams.
        :type streaming_endpoints: List[str]
        """

        self._streaming_endpoints = streaming_endpoints
