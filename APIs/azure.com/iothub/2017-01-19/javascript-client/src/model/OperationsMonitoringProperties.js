/**
 * iotHubClient
 * Use this API to manage the IoT hubs in your Azure subscription.
 *
 * The version of the OpenAPI document: 2017-01-19
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The OperationsMonitoringProperties model module.
 * @module model/OperationsMonitoringProperties
 * @version 2017-01-19
 */
class OperationsMonitoringProperties {
    /**
     * Constructs a new <code>OperationsMonitoringProperties</code>.
     * The operations monitoring properties for the IoT hub. The possible keys to the dictionary are Connections, DeviceTelemetry, C2DCommands, DeviceIdentityOperations, FileUploadOperations, Routes, D2CTwinOperations, C2DTwinOperations, TwinQueries, JobsOperations, DirectMethods.
     * @alias module:model/OperationsMonitoringProperties
     */
    constructor() { 
        
        OperationsMonitoringProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OperationsMonitoringProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OperationsMonitoringProperties} obj Optional instance to populate.
     * @return {module:model/OperationsMonitoringProperties} The populated <code>OperationsMonitoringProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OperationsMonitoringProperties();

            if (data.hasOwnProperty('events')) {
                obj['events'] = ApiClient.convertToType(data['events'], {'String': 'String'});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OperationsMonitoringProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OperationsMonitoringProperties</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * @member {Object.<String, module:model/OperationsMonitoringProperties.InnerEnum>} events
 */
OperationsMonitoringProperties.prototype['events'] = undefined;





/**
 * Allowed values for the <code>inner</code> property.
 * @enum {String}
 * @readonly
 */
OperationsMonitoringProperties['InnerEnum'] = {

    /**
     * value: "None"
     * @const
     */
    "None": "None",

    /**
     * value: "Error"
     * @const
     */
    "Error": "Error",

    /**
     * value: "Information"
     * @const
     */
    "Information": "Information",

    /**
     * value: "Error, Information"
     * @const
     */
    "Error, Information": "Error, Information"
};



export default OperationsMonitoringProperties;

