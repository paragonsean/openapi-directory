/*
 * iotHubClient
 * Use this API to manage the IoT hubs in your Azure subscription.
 *
 * The version of the OpenAPI document: 2017-01-19
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The properties of the provisioned Event Hub-compatible endpoint used by the IoT hub.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:04:57.491031-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class EventHubProperties {
  public static final String SERIALIZED_NAME_ENDPOINT = "endpoint";
  @SerializedName(SERIALIZED_NAME_ENDPOINT)
  private String endpoint;

  public static final String SERIALIZED_NAME_PARTITION_COUNT = "partitionCount";
  @SerializedName(SERIALIZED_NAME_PARTITION_COUNT)
  private Integer partitionCount;

  public static final String SERIALIZED_NAME_PARTITION_IDS = "partitionIds";
  @SerializedName(SERIALIZED_NAME_PARTITION_IDS)
  private List<String> partitionIds = new ArrayList<>();

  public static final String SERIALIZED_NAME_PATH = "path";
  @SerializedName(SERIALIZED_NAME_PATH)
  private String path;

  public static final String SERIALIZED_NAME_RETENTION_TIME_IN_DAYS = "retentionTimeInDays";
  @SerializedName(SERIALIZED_NAME_RETENTION_TIME_IN_DAYS)
  private Long retentionTimeInDays;

  public EventHubProperties() {
  }

  public EventHubProperties(
     String endpoint, 
     List<String> partitionIds, 
     String path
  ) {
    this();
    this.endpoint = endpoint;
    this.partitionIds = partitionIds;
    this.path = path;
  }

  /**
   * The Event Hub-compatible endpoint.
   * @return endpoint
   */
  @javax.annotation.Nullable
  public String getEndpoint() {
    return endpoint;
  }



  public EventHubProperties partitionCount(Integer partitionCount) {
    this.partitionCount = partitionCount;
    return this;
  }

  /**
   * The number of partitions for receiving device-to-cloud messages in the Event Hub-compatible endpoint. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#device-to-cloud-messages.
   * @return partitionCount
   */
  @javax.annotation.Nullable
  public Integer getPartitionCount() {
    return partitionCount;
  }

  public void setPartitionCount(Integer partitionCount) {
    this.partitionCount = partitionCount;
  }


  /**
   * The partition ids in the Event Hub-compatible endpoint.
   * @return partitionIds
   */
  @javax.annotation.Nullable
  public List<String> getPartitionIds() {
    return partitionIds;
  }



  /**
   * The Event Hub-compatible name.
   * @return path
   */
  @javax.annotation.Nullable
  public String getPath() {
    return path;
  }



  public EventHubProperties retentionTimeInDays(Long retentionTimeInDays) {
    this.retentionTimeInDays = retentionTimeInDays;
    return this;
  }

  /**
   * The retention time for device-to-cloud messages in days. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#device-to-cloud-messages
   * @return retentionTimeInDays
   */
  @javax.annotation.Nullable
  public Long getRetentionTimeInDays() {
    return retentionTimeInDays;
  }

  public void setRetentionTimeInDays(Long retentionTimeInDays) {
    this.retentionTimeInDays = retentionTimeInDays;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EventHubProperties eventHubProperties = (EventHubProperties) o;
    return Objects.equals(this.endpoint, eventHubProperties.endpoint) &&
        Objects.equals(this.partitionCount, eventHubProperties.partitionCount) &&
        Objects.equals(this.partitionIds, eventHubProperties.partitionIds) &&
        Objects.equals(this.path, eventHubProperties.path) &&
        Objects.equals(this.retentionTimeInDays, eventHubProperties.retentionTimeInDays);
  }

  @Override
  public int hashCode() {
    return Objects.hash(endpoint, partitionCount, partitionIds, path, retentionTimeInDays);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EventHubProperties {\n");
    sb.append("    endpoint: ").append(toIndentedString(endpoint)).append("\n");
    sb.append("    partitionCount: ").append(toIndentedString(partitionCount)).append("\n");
    sb.append("    partitionIds: ").append(toIndentedString(partitionIds)).append("\n");
    sb.append("    path: ").append(toIndentedString(path)).append("\n");
    sb.append("    retentionTimeInDays: ").append(toIndentedString(retentionTimeInDays)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("endpoint");
    openapiFields.add("partitionCount");
    openapiFields.add("partitionIds");
    openapiFields.add("path");
    openapiFields.add("retentionTimeInDays");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to EventHubProperties
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!EventHubProperties.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in EventHubProperties is not found in the empty JSON string", EventHubProperties.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!EventHubProperties.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `EventHubProperties` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("endpoint") != null && !jsonObj.get("endpoint").isJsonNull()) && !jsonObj.get("endpoint").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `endpoint` to be a primitive type in the JSON string but got `%s`", jsonObj.get("endpoint").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("partitionIds") != null && !jsonObj.get("partitionIds").isJsonNull() && !jsonObj.get("partitionIds").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `partitionIds` to be an array in the JSON string but got `%s`", jsonObj.get("partitionIds").toString()));
      }
      if ((jsonObj.get("path") != null && !jsonObj.get("path").isJsonNull()) && !jsonObj.get("path").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `path` to be a primitive type in the JSON string but got `%s`", jsonObj.get("path").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EventHubProperties.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EventHubProperties' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EventHubProperties> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EventHubProperties.class));

       return (TypeAdapter<T>) new TypeAdapter<EventHubProperties>() {
           @Override
           public void write(JsonWriter out, EventHubProperties value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public EventHubProperties read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of EventHubProperties given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of EventHubProperties
   * @throws IOException if the JSON string is invalid with respect to EventHubProperties
   */
  public static EventHubProperties fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EventHubProperties.class);
  }

  /**
   * Convert an instance of EventHubProperties to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

