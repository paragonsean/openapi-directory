/**
 * iotHubClient
 * Use this API to manage the IoT hubs in your Azure subscription.
 *
 * The version of the OpenAPI document: 2019-03-22
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FallbackRouteProperties from './FallbackRouteProperties';
import RouteProperties from './RouteProperties';
import RoutingEndpoints from './RoutingEndpoints';

/**
 * The RoutingProperties model module.
 * @module model/RoutingProperties
 * @version 2019-03-22
 */
class RoutingProperties {
    /**
     * Constructs a new <code>RoutingProperties</code>.
     * The routing related properties of the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging
     * @alias module:model/RoutingProperties
     */
    constructor() { 
        
        RoutingProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RoutingProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RoutingProperties} obj Optional instance to populate.
     * @return {module:model/RoutingProperties} The populated <code>RoutingProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RoutingProperties();

            if (data.hasOwnProperty('endpoints')) {
                obj['endpoints'] = RoutingEndpoints.constructFromObject(data['endpoints']);
            }
            if (data.hasOwnProperty('fallbackRoute')) {
                obj['fallbackRoute'] = FallbackRouteProperties.constructFromObject(data['fallbackRoute']);
            }
            if (data.hasOwnProperty('routes')) {
                obj['routes'] = ApiClient.convertToType(data['routes'], [RouteProperties]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RoutingProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RoutingProperties</code>.
     */
    static validateJSON(data) {
        // validate the optional field `endpoints`
        if (data['endpoints']) { // data not null
          RoutingEndpoints.validateJSON(data['endpoints']);
        }
        // validate the optional field `fallbackRoute`
        if (data['fallbackRoute']) { // data not null
          FallbackRouteProperties.validateJSON(data['fallbackRoute']);
        }
        if (data['routes']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['routes'])) {
                throw new Error("Expected the field `routes` to be an array in the JSON data but got " + data['routes']);
            }
            // validate the optional field `routes` (array)
            for (const item of data['routes']) {
                RouteProperties.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {module:model/RoutingEndpoints} endpoints
 */
RoutingProperties.prototype['endpoints'] = undefined;

/**
 * @member {module:model/FallbackRouteProperties} fallbackRoute
 */
RoutingProperties.prototype['fallbackRoute'] = undefined;

/**
 * The list of user-provided routing rules that the IoT hub uses to route messages to built-in and custom endpoints. A maximum of 100 routing rules are allowed for paid hubs and a maximum of 5 routing rules are allowed for free hubs.
 * @member {Array.<module:model/RouteProperties>} routes
 */
RoutingProperties.prototype['routes'] = undefined;






export default RoutingProperties;

