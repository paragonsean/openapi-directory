# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.route_compilation_error import RouteCompilationError
from openapi_server import util


class TestRouteResultDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, compilation_errors: List[RouteCompilationError]=None):
        """TestRouteResultDetails - a model defined in OpenAPI

        :param compilation_errors: The compilation_errors of this TestRouteResultDetails.
        """
        self.openapi_types = {
            'compilation_errors': List[RouteCompilationError]
        }

        self.attribute_map = {
            'compilation_errors': 'compilationErrors'
        }

        self._compilation_errors = compilation_errors

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TestRouteResultDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TestRouteResultDetails of this TestRouteResultDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def compilation_errors(self):
        """Gets the compilation_errors of this TestRouteResultDetails.

        JSON-serialized list of route compilation errors

        :return: The compilation_errors of this TestRouteResultDetails.
        :rtype: List[RouteCompilationError]
        """
        return self._compilation_errors

    @compilation_errors.setter
    def compilation_errors(self, compilation_errors):
        """Sets the compilation_errors of this TestRouteResultDetails.

        JSON-serialized list of route compilation errors

        :param compilation_errors: The compilation_errors of this TestRouteResultDetails.
        :type compilation_errors: List[RouteCompilationError]
        """

        self._compilation_errors = compilation_errors
