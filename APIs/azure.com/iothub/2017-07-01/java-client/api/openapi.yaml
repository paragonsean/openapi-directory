openapi: 3.0.1
info:
  description: Use this API to manage the IoT hubs in your Azure subscription.
  title: iotHubClient
  version: 2017-07-01
  x-apisguru-categories:
  - cloud
  x-logo:
    url: https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png
  x-ms-code-generation-settings:
    header: MICROSOFT_MIT_NO_VERSION
  x-origin:
  - format: swagger
    url: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/iothub/resource-manager/Microsoft.Devices/stable/2017-07-01/iothub.json
    version: "2.0"
  x-preferred: false
  x-providerName: azure.com
  x-serviceName: iothub
  x-tags:
  - Azure
  - Microsoft
servers:
- url: https://management.azure.com/
security:
- azure_auth:
  - user_impersonation
paths:
  /providers/Microsoft.Devices/operations:
    get:
      description: Lists all of the available IoT Hub REST API operations.
      operationId: Operations_List
      parameters:
      - description: The version of the API.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
          description: OK. The request has succeeded.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
          description: DefaultErrorResponse
      tags:
      - Operations
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
  /subscriptions/{subscriptionId}/providers/Microsoft.Devices/IotHubs:
    get:
      deprecated: false
      description: Get all the IoT hubs in a subscription.
      operationId: IotHubResource_ListBySubscription
      parameters:
      - description: The version of the API.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The subscription identifier.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IotHubDescriptionListResult'
          description: This is a synchronous operation. The body contains a JSON-serialized
            array of the metadata from all the IoT hubs in the subscription.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
          description: DefaultErrorResponse
      summary: Get all the IoT hubs in a subscription.
      tags:
      - GET
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
  /subscriptions/{subscriptionId}/providers/Microsoft.Devices/checkNameAvailability:
    post:
      deprecated: false
      description: Check if an IoT hub name is available.
      operationId: IotHubResource_CheckNameAvailability
      parameters:
      - description: The version of the API.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The subscription identifier.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperationInputs'
        description: Set the name parameter in the OperationInputs structure to the
          name of the IoT hub to check.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IotHubNameAvailabilityInfo'
          description: "This is a synchronous operation. The body contains a JSON-serialized\
            \ response that specifies whether the IoT hub name is available. If the\
            \ name is not available, the body contains the reason."
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
          description: DefaultErrorResponse
      summary: Check if an IoT hub name is available.
      tags:
      - POST
      x-codegen-request-body-name: operationInputs
      x-content-type: application/json
      x-accepts:
      - application/json
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs:
    get:
      deprecated: false
      description: Get all the IoT hubs in a resource group.
      operationId: IotHubResource_ListByResourceGroup
      parameters:
      - description: The version of the API.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The subscription identifier.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: The name of the resource group that contains the IoT hub.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IotHubDescriptionListResult'
          description: This is a synchronous operation. The body contains a JSON-serialized
            array of the metadata from all the IoT hubs in the resource group.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
          description: DefaultErrorResponse
      summary: Get all the IoT hubs in a resource group.
      tags:
      - GET
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}:
    delete:
      deprecated: false
      description: Delete an IoT hub.
      operationId: IotHubResource_Delete
      parameters:
      - description: The version of the API.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The subscription identifier.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: The name of the resource group that contains the IoT hub.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the IoT hub.
        in: path
        name: resourceName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IotHubDescription'
          description: This is returned as a response to the status polling request
            for the delete operation. The body contains the resource representation
            that indicates a transitional provisioning state.
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IotHubDescription'
          description: "The Iot Hub resource provider always returns a 202 Accepted\
            \ status code with valid Location and Retry-After headers. The resource\
            \ provider also sets the Azure-AsyncOperation header with a URL that points\
            \ to the operation resource for this operation. Subsequent GET attempts\
            \ on the resource after a DELETE operation return a resource representation\
            \ that indicates a transitional provisioning state (such as Terminating).\
            \ To retrieve the status of the operation, a client can either poll the\
            \ URL returned in the Location header after the Retry-After interval,\
            \ get the IoT Hub service status directly, or query the operation resource."
        "204":
          content: {}
          description: "Once the long running delete operation completes successfully,\
            \ a 204 No Content status code is returned when the status polling request\
            \ finds the Iot hub metadata in the service and the status of the delete\
            \ operation is set to a completed state."
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
          description: "After the long running delete operation completes successfully,\
            \ a 404 Not Found is returned when the status polling request no longer\
            \ finds the Iot hub metadata in the service."
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
          description: DefaultErrorResponse
      summary: Delete an IoT hub.
      tags:
      - DELETE
      x-ms-long-running-operation: true
      x-accepts:
      - application/json
    get:
      deprecated: false
      description: Get the non-security related metadata of an IoT hub.
      operationId: IotHubResource_Get
      parameters:
      - description: The version of the API.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The subscription identifier.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: The name of the resource group that contains the IoT hub.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the IoT hub.
        in: path
        name: resourceName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IotHubDescription'
          description: The body contains all the non-security properties of the IoT
            hub. Security-related properties are set to null.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
          description: DefaultErrorResponse
      summary: Get the non-security related metadata of an IoT hub.
      tags:
      - GET
      x-accepts:
      - application/json
    put:
      deprecated: false
      description: "Create or update the metadata of an Iot hub. The usual pattern\
        \ to modify a property is to retrieve the IoT hub metadata and security metadata,\
        \ and then combine them with the modified values in a new body to update the\
        \ IoT hub."
      operationId: IotHubResource_CreateOrUpdate
      parameters:
      - description: The version of the API.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The subscription identifier.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: The name of the resource group that contains the IoT hub.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the IoT hub.
        in: path
        name: resourceName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: ETag of the IoT Hub. Do not specify for creating a brand new
          IoT Hub. Required to update an existing IoT Hub.
        in: header
        name: If-Match
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IotHubDescription'
        description: The IoT hub metadata and security metadata.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IotHubDescription'
          description: This is returned as a response to the status polling request
            for the create or update operation. The body contains the resource representation
            that indicates a transitional provisioning state.
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IotHubDescription'
          description: "This is a long running operation. The operation returns a\
            \ 201 if the validation is complete. The response includes an Azure-AsyncOperation\
            \ header that contains a status URL. Clients are expected to poll the\
            \ status URL for the status of the operation. If successful, the operation\
            \ returns HTTP status code of 201 (OK)."
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
          description: DefaultErrorResponse
      summary: Create or update the metadata of an IoT hub.
      tags:
      - PUT
      x-ms-long-running-operation: true
      x-codegen-request-body-name: iotHubDescription
      x-content-type: application/json
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/IotHubKeys/{keyName}/listkeys
  : post:
      deprecated: false
      description: "Get a shared access policy by name from an IoT hub. For more information,\
        \ see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-security."
      operationId: IotHubResource_GetKeysForKeyName
      parameters:
      - description: The version of the API.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The subscription identifier.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: The name of the resource group that contains the IoT hub.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the IoT hub.
        in: path
        name: resourceName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the shared access policy.
        in: path
        name: keyName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedAccessSignatureAuthorizationRule'
          description: "This is a synchronous operation. The body contains a JSON-serialized\
            \ shared access policy, including keys, that you can use to access one\
            \ or more IoT hub endpoints."
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
          description: DefaultErrorResponse
      summary: "Get a shared access policy by name from an IoT hub. For more information,\
        \ see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-security."
      tags:
      - POST
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/IotHubStats
  : get:
      deprecated: false
      description: Get the statistics from an IoT hub.
      operationId: IotHubResource_GetStats
      parameters:
      - description: The version of the API.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The subscription identifier.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: The name of the resource group that contains the IoT hub.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the IoT hub.
        in: path
        name: resourceName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistryStatistics'
          description: This is a synchronous operation. The body contains JSON-serialized
            statistics from the identity registry in the IoT hub.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
          description: DefaultErrorResponse
      summary: Get the statistics from an IoT hub.
      tags:
      - GET
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/certificates
  : get:
      deprecated: false
      description: Returns the list of certificates.
      operationId: Certificates_ListByIotHub
      parameters:
      - description: The version of the API.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The subscription identifier.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: The name of the resource group that contains the IoT hub.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the IoT hub.
        in: path
        name: resourceName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateListDescription'
          description: The body contains all the certificate list.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
          description: DefaultErrorResponse
      summary: Get the certificate list.
      tags:
      - Certificates
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/certificates/{certificateName}
  : delete:
      deprecated: false
      description: Deletes an existing X509 certificate or does nothing if it does
        not exist.
      operationId: Certificates_Delete
      parameters:
      - description: The version of the API.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The subscription identifier.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: The name of the resource group that contains the IoT hub.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the IoT hub.
        in: path
        name: resourceName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the certificate
        in: path
        name: certificateName
        required: true
        schema:
          pattern: "^[A-Za-z0-9-._]{1,64}$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: ETag of the Certificate.
        in: header
        name: If-Match
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Certificate has been deleted.
        "204":
          content: {}
          description: Certificate does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
          description: DefaultErrorResponse
      summary: Delete an X509 certificate.
      tags:
      - Certificates
      x-accepts:
      - application/json
    get:
      deprecated: false
      description: Returns the certificate.
      operationId: Certificates_Get
      parameters:
      - description: The version of the API.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The subscription identifier.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: The name of the resource group that contains the IoT hub.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the IoT hub.
        in: path
        name: resourceName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the certificate
        in: path
        name: certificateName
        required: true
        schema:
          pattern: "^[A-Za-z0-9-._]{1,64}$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateDescription'
          description: The body contains the certificate.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
          description: DefaultErrorResponse
      summary: Get the certificate.
      tags:
      - Certificates
      x-accepts:
      - application/json
    put:
      deprecated: false
      description: Adds new or replaces existing certificate.
      operationId: Certificates_CreateOrUpdate
      parameters:
      - description: The version of the API.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The subscription identifier.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: The name of the resource group that contains the IoT hub.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the IoT hub.
        in: path
        name: resourceName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the certificate
        in: path
        name: certificateName
        required: true
        schema:
          pattern: "^[A-Za-z0-9-._]{1,64}$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: ETag of the Certificate. Do not specify for creating a brand
          new certificate. Required to update an existing certificate.
        in: header
        name: If-Match
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertificateBodyDescription'
        description: The certificate body.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateDescription'
          description: "If certificate already exist and update was successful, the\
            \ operation returns HTTP status code of 201 (OK)."
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateDescription'
          description: "If certificate didn't exist creation was successful, the operation\
            \ returns HTTP status code of 201 (OK)."
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
          description: DefaultErrorResponse
      summary: Upload the certificate to the IoT hub.
      tags:
      - Certificates
      x-codegen-request-body-name: certificateDescription
      x-content-type: application/json
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/certificates/{certificateName}/generateVerificationCode
  : post:
      deprecated: false
      description: Generates verification code for proof of possession flow. The verification
        code will be used to generate a leaf certificate.
      operationId: Certificates_GenerateVerificationCode
      parameters:
      - description: The version of the API.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The subscription identifier.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: The name of the resource group that contains the IoT hub.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the IoT hub.
        in: path
        name: resourceName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the certificate
        in: path
        name: certificateName
        required: true
        schema:
          pattern: "^[A-Za-z0-9-._]{1,64}$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: ETag of the Certificate.
        in: header
        name: If-Match
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateWithNonceDescription'
          description: The body contains the certificate.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
          description: DefaultErrorResponse
      summary: Generate verification code for proof of possession flow.
      tags:
      - Certificates
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/certificates/{certificateName}/verify
  : post:
      deprecated: false
      description: Verifies the certificate's private key possession by providing
        the leaf cert issued by the verifying pre uploaded certificate.
      operationId: Certificates_Verify
      parameters:
      - description: The version of the API.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The subscription identifier.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: The name of the resource group that contains the IoT hub.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the IoT hub.
        in: path
        name: resourceName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the certificate
        in: path
        name: certificateName
        required: true
        schema:
          pattern: "^[A-Za-z0-9-._]{1,64}$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: ETag of the Certificate.
        in: header
        name: If-Match
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertificateVerificationDescription'
        description: The name of the certificate
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateDescription'
          description: The body contains the certificate.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
          description: DefaultErrorResponse
      summary: Verify certificate's private key possession.
      tags:
      - Certificates
      x-codegen-request-body-name: certificateVerificationBody
      x-content-type: application/json
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/eventHubEndpoints/{eventHubEndpointName}/ConsumerGroups
  : get:
      deprecated: false
      description: Get a list of the consumer groups in the Event Hub-compatible device-to-cloud
        endpoint in an IoT hub.
      operationId: IotHubResource_ListEventHubConsumerGroups
      parameters:
      - description: The version of the API.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The subscription identifier.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: The name of the resource group that contains the IoT hub.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the IoT hub.
        in: path
        name: resourceName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the Event Hub-compatible endpoint.
        in: path
        name: eventHubEndpointName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventHubConsumerGroupsListResult'
          description: This is a synchronous operation. The body contains a JSON-serialized
            list of the consumer groups in the Event Hub-compatible endpoint in this
            IoT hub
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
          description: DefaultErrorResponse
      summary: Get a list of the consumer groups in the Event Hub-compatible device-to-cloud
        endpoint in an IoT hub.
      tags:
      - GET
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/eventHubEndpoints/{eventHubEndpointName}/ConsumerGroups/{name}
  : delete:
      deprecated: false
      description: Delete a consumer group from an Event Hub-compatible endpoint in
        an IoT hub.
      operationId: IotHubResource_DeleteEventHubConsumerGroup
      parameters:
      - description: The version of the API.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The subscription identifier.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: The name of the resource group that contains the IoT hub.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the IoT hub.
        in: path
        name: resourceName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the Event Hub-compatible endpoint in the IoT hub.
        in: path
        name: eventHubEndpointName
        required: true
        schema:
          type: string
      - description: The name of the consumer group to delete.
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: This is a synchronous operation.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
          description: DefaultErrorResponse
      summary: Delete a consumer group from an Event Hub-compatible endpoint in an
        IoT hub.
      tags:
      - DELETE
      x-accepts:
      - application/json
    get:
      deprecated: false
      description: Get a consumer group from the Event Hub-compatible device-to-cloud
        endpoint for an IoT hub.
      operationId: IotHubResource_GetEventHubConsumerGroup
      parameters:
      - description: The version of the API.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The subscription identifier.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: The name of the resource group that contains the IoT hub.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the IoT hub.
        in: path
        name: resourceName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the Event Hub-compatible endpoint in the IoT hub.
        in: path
        name: eventHubEndpointName
        required: true
        schema:
          type: string
      - description: The name of the consumer group to retrieve.
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventHubConsumerGroupInfo'
          description: This is a synchronous operation. The body contains a JSON-serialized
            consumer group.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
          description: DefaultErrorResponse
      summary: Get a consumer group from the Event Hub-compatible device-to-cloud
        endpoint for an IoT hub.
      tags:
      - GET
      x-accepts:
      - application/json
    put:
      deprecated: false
      description: Add a consumer group to an Event Hub-compatible endpoint in an
        IoT hub.
      operationId: IotHubResource_CreateEventHubConsumerGroup
      parameters:
      - description: The version of the API.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The subscription identifier.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: The name of the resource group that contains the IoT hub.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the IoT hub.
        in: path
        name: resourceName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the Event Hub-compatible endpoint in the IoT hub.
        in: path
        name: eventHubEndpointName
        required: true
        schema:
          type: string
      - description: The name of the consumer group to add.
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventHubConsumerGroupInfo'
          description: This is a synchronous operation.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
          description: DefaultErrorResponse
      summary: Add a consumer group to an Event Hub-compatible endpoint in an IoT
        hub.
      tags:
      - PUT
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/exportDevices
  : post:
      deprecated: false
      description: "Exports all the device identities in the IoT hub identity registry\
        \ to an Azure Storage blob container. For more information, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-identity-registry#import-and-export-device-identities."
      operationId: IotHubResource_ExportDevices
      parameters:
      - description: The version of the API.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The subscription identifier.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: The name of the resource group that contains the IoT hub.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the IoT hub.
        in: path
        name: resourceName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportDevicesRequest'
        description: The parameters that specify the export devices operation.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobResponse'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
          description: DefaultErrorResponse
      summary: "Exports all the device identities in the IoT hub identity registry\
        \ to an Azure Storage blob container. For more information, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-identity-registry#import-and-export-device-identities."
      tags:
      - POST
      x-codegen-request-body-name: exportDevicesParameters
      x-content-type: application/json
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/importDevices
  : post:
      deprecated: false
      description: "Import, update, or delete device identities in the IoT hub identity\
        \ registry from a blob. For more information, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-identity-registry#import-and-export-device-identities."
      operationId: IotHubResource_ImportDevices
      parameters:
      - description: The version of the API.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The subscription identifier.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: The name of the resource group that contains the IoT hub.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the IoT hub.
        in: path
        name: resourceName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportDevicesRequest'
        description: The parameters that specify the import devices operation.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobResponse'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
          description: DefaultErrorResponse
      summary: "Import, update, or delete device identities in the IoT hub identity\
        \ registry from a blob. For more information, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-identity-registry#import-and-export-device-identities."
      tags:
      - POST
      x-codegen-request-body-name: importDevicesParameters
      x-content-type: application/json
      x-accepts:
      - application/json
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/jobs:
    get:
      deprecated: false
      description: "Get a list of all the jobs in an IoT hub. For more information,\
        \ see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-identity-registry."
      operationId: IotHubResource_ListJobs
      parameters:
      - description: The version of the API.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The subscription identifier.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: The name of the resource group that contains the IoT hub.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the IoT hub.
        in: path
        name: resourceName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobResponseListResult'
          description: This is a synchronous operation. The response contains a JSON-serialized
            array of all the jobs in the IoT hub.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
          description: DefaultErrorResponse
      summary: "Get a list of all the jobs in an IoT hub. For more information, see:\
        \ https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-identity-registry."
      tags:
      - GET
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/jobs/{jobId}
  : get:
      deprecated: false
      description: "Get the details of a job from an IoT hub. For more information,\
        \ see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-identity-registry."
      operationId: IotHubResource_GetJob
      parameters:
      - description: The version of the API.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The subscription identifier.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: The name of the resource group that contains the IoT hub.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the IoT hub.
        in: path
        name: resourceName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The job identifier.
        in: path
        name: jobId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobResponse'
          description: This is a synchronous operation. The response contains a JSON-serialized
            description of the job in the IoT hub.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
          description: DefaultErrorResponse
      summary: "Get the details of a job from an IoT hub. For more information, see:\
        \ https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-identity-registry."
      tags:
      - GET
      x-accepts:
      - application/json
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/listkeys:
    post:
      deprecated: false
      description: "Get the security metadata for an IoT hub. For more information,\
        \ see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-security."
      operationId: IotHubResource_ListKeys
      parameters:
      - description: The version of the API.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The subscription identifier.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: The name of the resource group that contains the IoT hub.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the IoT hub.
        in: path
        name: resourceName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedAccessSignatureAuthorizationRuleListResult'
          description: "This is a synchronous operation. The body contains a JSON-serialized\
            \ array of shared access policies, including keys, that you can use to\
            \ access the IoT hub endpoints."
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
          description: DefaultErrorResponse
      summary: "Get the security metadata for an IoT hub. For more information, see:\
        \ https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-security."
      tags:
      - POST
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/quotaMetrics
  : get:
      deprecated: false
      description: Get the quota metrics for an IoT hub.
      operationId: IotHubResource_GetQuotaMetrics
      parameters:
      - description: The version of the API.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The subscription identifier.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: The name of the resource group that contains the IoT hub.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the IoT hub.
        in: path
        name: resourceName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IotHubQuotaMetricInfoListResult'
          description: This is a synchronous operation. The response contains a JSON-serialized
            array of the quota metrics for the IoT hub.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
          description: DefaultErrorResponse
      summary: Get the quota metrics for an IoT hub.
      tags:
      - GET
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/skus:
    get:
      deprecated: false
      description: Get the list of valid SKUs for an IoT hub.
      operationId: IotHubResource_GetValidSkus
      parameters:
      - description: The version of the API.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The subscription identifier.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: The name of the resource group that contains the IoT hub.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the IoT hub.
        in: path
        name: resourceName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IotHubSkuDescriptionListResult'
          description: This is a synchronous operation. The body contains a JSON-serialized
            array of the valid SKUs for this IoT hub.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
          description: DefaultErrorResponse
      summary: Get the list of valid SKUs for an IoT hub.
      tags:
      - GET
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
components:
  parameters:
    api-version:
      description: The version of the API.
      in: query
      name: api-version
      required: true
      schema:
        type: string
    certificateName:
      description: The name of the certificate
      in: path
      name: certificateName
      required: true
      schema:
        pattern: "^[A-Za-z0-9-._]{1,64}$"
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    resourceGroupName:
      description: The name of the resource group that contains the IoT hub.
      in: path
      name: resourceGroupName
      required: true
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    resourceName:
      description: The name of the IoT hub.
      in: path
      name: resourceName
      required: true
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    subscriptionId:
      description: The subscription identifier.
      in: path
      name: subscriptionId
      required: true
      schema:
        type: string
  schemas:
    CertificateBodyDescription:
      description: The JSON-serialized X509 Certificate.
      example:
        certificate: certificate
      properties:
        certificate:
          description: base-64 representation of the X509 leaf certificate .cer file
            or just .pem file content.
          type: string
      type: object
    CertificateDescription:
      description: The X509 Certificate.
      example:
        name: name
        etag: etag
        id: id
        type: type
        properties:
          isVerified: true
          created: created
          subject: subject
          thumbprint: thumbprint
          expiry: expiry
          updated: updated
      properties:
        etag:
          description: The entity tag.
          readOnly: true
          type: string
        id:
          description: The resource identifier.
          readOnly: true
          type: string
        name:
          description: The name of the certificate.
          readOnly: true
          type: string
        properties:
          $ref: '#/components/schemas/CertificateProperties'
        type:
          description: The resource type.
          readOnly: true
          type: string
      type: object
      x-ms-azure-resource: true
    CertificateListDescription:
      description: The JSON-serialized array of Certificate objects.
      example:
        value:
        - name: name
          etag: etag
          id: id
          type: type
          properties:
            isVerified: true
            created: created
            subject: subject
            thumbprint: thumbprint
            expiry: expiry
            updated: updated
        - name: name
          etag: etag
          id: id
          type: type
          properties:
            isVerified: true
            created: created
            subject: subject
            thumbprint: thumbprint
            expiry: expiry
            updated: updated
      properties:
        value:
          description: The array of Certificate objects.
          items:
            $ref: '#/components/schemas/CertificateDescription'
          type: array
      type: object
    CertificateProperties:
      description: The description of an X509 CA Certificate.
      example:
        isVerified: true
        created: created
        subject: subject
        thumbprint: thumbprint
        expiry: expiry
        updated: updated
      properties:
        created:
          description: The certificate's create date and time.
          format: date-time-rfc1123
          readOnly: true
          type: string
        expiry:
          description: The certificate's expiration date and time.
          format: date-time-rfc1123
          readOnly: true
          type: string
        isVerified:
          description: Determines whether certificate has been verified.
          readOnly: true
          type: boolean
        subject:
          description: The certificate's subject name.
          readOnly: true
          type: string
        thumbprint:
          description: The certificate's thumbprint.
          readOnly: true
          type: string
        updated:
          description: The certificate's last update date and time.
          format: date-time-rfc1123
          readOnly: true
          type: string
      type: object
    CertificatePropertiesWithNonce:
      description: The description of an X509 CA Certificate including the challenge
        nonce issued for the Proof-Of-Possession flow.
      example:
        isVerified: true
        created: created
        subject: subject
        thumbprint: thumbprint
        expiry: expiry
        updated: updated
        verificationCode: verificationCode
      properties:
        created:
          description: The certificate's create date and time.
          format: date-time-rfc1123
          readOnly: true
          type: string
        expiry:
          description: The certificate's expiration date and time.
          format: date-time-rfc1123
          readOnly: true
          type: string
        isVerified:
          description: Determines whether certificate has been verified.
          readOnly: true
          type: boolean
        subject:
          description: The certificate's subject name.
          readOnly: true
          type: string
        thumbprint:
          description: The certificate's thumbprint.
          readOnly: true
          type: string
        updated:
          description: The certificate's last update date and time.
          format: date-time-rfc1123
          readOnly: true
          type: string
        verificationCode:
          description: The certificate's verification code that will be used for proof
            of possession.
          readOnly: true
          type: string
      type: object
    CertificateVerificationDescription:
      description: The JSON-serialized leaf certificate
      example:
        certificate: certificate
      properties:
        certificate:
          description: base-64 representation of X509 certificate .cer file or just
            .pem file content.
          type: string
      type: object
    CertificateWithNonceDescription:
      description: The X509 Certificate.
      example:
        name: name
        etag: etag
        id: id
        type: type
        properties:
          isVerified: true
          created: created
          subject: subject
          thumbprint: thumbprint
          expiry: expiry
          updated: updated
          verificationCode: verificationCode
      properties:
        etag:
          description: The entity tag.
          readOnly: true
          type: string
        id:
          description: The resource identifier.
          readOnly: true
          type: string
        name:
          description: The name of the certificate.
          readOnly: true
          type: string
        properties:
          $ref: '#/components/schemas/CertificatePropertiesWithNonce'
        type:
          description: The resource type.
          readOnly: true
          type: string
      type: object
      x-ms-azure-resource: true
    CloudToDeviceProperties:
      description: The IoT hub cloud-to-device messaging properties.
      example:
        feedback:
          ttlAsIso8601: ttlAsIso8601
          maxDeliveryCount: 8
          lockDurationAsIso8601: lockDurationAsIso8601
        defaultTtlAsIso8601: defaultTtlAsIso8601
        maxDeliveryCount: 60
      properties:
        defaultTtlAsIso8601:
          description: "The default time to live for cloud-to-device messages in the\
            \ device queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages."
          format: duration
          type: string
        feedback:
          $ref: '#/components/schemas/FeedbackProperties'
        maxDeliveryCount:
          description: "The max delivery count for cloud-to-device messages in the\
            \ device queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages."
          format: int32
          maximum: 100
          minimum: 1
          type: integer
      type: object
    ErrorDetails:
      description: Error details.
      example:
        Details: Details
        Message: Message
        HttpStatusCode: HttpStatusCode
        Code: Code
      properties:
        Code:
          description: The error code.
          readOnly: true
          type: string
        Details:
          description: The error details.
          readOnly: true
          type: string
        HttpStatusCode:
          description: The HTTP status code.
          readOnly: true
          type: string
        Message:
          description: The error message.
          readOnly: true
          type: string
      type: object
    EventHubConsumerGroupInfo:
      description: The properties of the EventHubConsumerGroupInfo object.
      example:
        name: name
        id: id
        tags:
          key: tags
      properties:
        id:
          description: The Event Hub-compatible consumer group identifier.
          type: string
        name:
          description: The Event Hub-compatible consumer group name.
          type: string
        tags:
          additionalProperties:
            type: string
          description: The tags.
          type: object
      type: object
    EventHubConsumerGroupsListResult:
      description: The JSON-serialized array of Event Hub-compatible consumer group
        names with a next link.
      example:
        value:
        - value
        - value
        nextLink: nextLink
      properties:
        nextLink:
          description: The next link.
          readOnly: true
          type: string
        value:
          description: The array of Event Hub-compatible consumer group names.
          items:
            type: string
          type: array
      type: object
    EventHubProperties:
      description: The properties of the provisioned Event Hub-compatible endpoint
        used by the IoT hub.
      example:
        partitionCount: 1
        path: path
        endpoint: endpoint
        retentionTimeInDays: 5
        partitionIds:
        - partitionIds
        - partitionIds
      properties:
        endpoint:
          description: The Event Hub-compatible endpoint.
          readOnly: true
          type: string
        partitionCount:
          description: "The number of partitions for receiving device-to-cloud messages\
            \ in the Event Hub-compatible endpoint. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#device-to-cloud-messages."
          format: int32
          type: integer
        partitionIds:
          description: The partition ids in the Event Hub-compatible endpoint.
          items:
            type: string
          readOnly: true
          type: array
        path:
          description: The Event Hub-compatible name.
          readOnly: true
          type: string
        retentionTimeInDays:
          description: "The retention time for device-to-cloud messages in days. See:\
            \ https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#device-to-cloud-messages"
          format: int64
          type: integer
      type: object
    ExportDevicesRequest:
      description: Use to provide parameters when requesting an export of all devices
        in the IoT hub.
      example:
        ExportBlobContainerUri: ExportBlobContainerUri
        ExcludeKeys: true
      properties:
        ExcludeKeys:
          description: The value indicating whether keys should be excluded during
            export.
          type: boolean
        ExportBlobContainerUri:
          description: The export blob container URI.
          type: string
      required:
      - ExcludeKeys
      - ExportBlobContainerUri
      type: object
    FallbackRouteProperties:
      description: The properties of the fallback route. IoT Hub uses these properties
        when it routes messages to the fallback endpoint.
      example:
        condition: condition
        isEnabled: true
        source: DeviceMessages
        endpointNames:
        - endpointNames
      properties:
        condition:
          description: "The condition which is evaluated in order to apply the fallback\
            \ route. If the condition is not provided it will evaluate to true by\
            \ default. For grammar, See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language"
          type: string
        endpointNames:
          description: The list of endpoints to which the messages that satisfy the
            condition are routed to. Currently only 1 endpoint is allowed.
          items:
            type: string
          maxItems: 1
          minItems: 1
          type: array
        isEnabled:
          description: Used to specify whether the fallback route is enabled.
          type: boolean
        source:
          description: "The source to which the routing rule is to be applied to.\
            \ For example, DeviceMessages"
          enum:
          - DeviceMessages
          type: string
          x-ms-enum:
            modelAsString: true
            name: RoutingSource
      required:
      - endpointNames
      - isEnabled
      - source
      type: object
    FeedbackProperties:
      description: The properties of the feedback queue for cloud-to-device messages.
      example:
        ttlAsIso8601: ttlAsIso8601
        maxDeliveryCount: 8
        lockDurationAsIso8601: lockDurationAsIso8601
      properties:
        lockDurationAsIso8601:
          description: "The lock duration for the feedback queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages."
          format: duration
          type: string
        maxDeliveryCount:
          description: "The number of times the IoT hub attempts to deliver a message\
            \ on the feedback queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages."
          format: int32
          maximum: 100
          minimum: 1
          type: integer
        ttlAsIso8601:
          description: "The period of time for which a message is available to consume\
            \ before it is expired by the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages."
          format: duration
          type: string
      type: object
    ImportDevicesRequest:
      description: Use to provide parameters when requesting an import of all devices
        in the hub.
      example:
        OutputBlobContainerUri: OutputBlobContainerUri
        InputBlobContainerUri: InputBlobContainerUri
      properties:
        InputBlobContainerUri:
          description: The input blob container URI.
          type: string
        OutputBlobContainerUri:
          description: The output blob container URI.
          type: string
      required:
      - InputBlobContainerUri
      - OutputBlobContainerUri
      type: object
    IotHubCapacity:
      description: IoT Hub capacity information.
      example:
        default: 0
        scaleType: Automatic
        maximum: 6
        minimum: 1
      properties:
        default:
          description: The default number of units.
          format: int64
          readOnly: true
          type: integer
        maximum:
          description: The maximum number of units.
          format: int64
          readOnly: true
          type: integer
        minimum:
          description: The minimum number of units.
          format: int64
          maximum: 1
          minimum: 1
          readOnly: true
          type: integer
        scaleType:
          description: The type of the scaling enabled.
          enum:
          - Automatic
          - Manual
          - None
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: false
            name: IotHubScaleType
      type: object
    IotHubDescription:
      allOf:
      - $ref: '#/components/schemas/Resource'
      description: The description of the IoT hub.
      example:
        resourcegroup: resourcegroup
        etag: etag
        sku:
          tier: Free
          name: F1
          capacity: 9
        subscriptionid: subscriptionid
        properties:
          hostName: hostName
          comments: comments
          ipFilterRules:
          - filterName: filterName
            ipMask: ipMask
            action: Accept
          - filterName: filterName
            ipMask: ipMask
            action: Accept
          eventHubEndpoints:
            key:
              partitionCount: 1
              path: path
              endpoint: endpoint
              retentionTimeInDays: 5
              partitionIds:
              - partitionIds
              - partitionIds
          operationsMonitoringProperties:
            events:
              key: None
          provisioningState: provisioningState
          messagingEndpoints:
            key:
              ttlAsIso8601: ttlAsIso8601
              maxDeliveryCount: 56
              lockDurationAsIso8601: lockDurationAsIso8601
          features: None
          routing:
            fallbackRoute:
              condition: condition
              isEnabled: true
              source: DeviceMessages
              endpointNames:
              - endpointNames
            routes:
            - condition: condition
              isEnabled: true
              name: name
              source: DeviceMessages
              endpointNames:
              - endpointNames
            - condition: condition
              isEnabled: true
              name: name
              source: DeviceMessages
              endpointNames:
              - endpointNames
            endpoints:
              eventHubs:
              - connectionString: connectionString
                resourceGroup: resourceGroup
                name: name
                subscriptionId: subscriptionId
              - connectionString: connectionString
                resourceGroup: resourceGroup
                name: name
                subscriptionId: subscriptionId
              serviceBusTopics:
              - connectionString: connectionString
                resourceGroup: resourceGroup
                name: name
                subscriptionId: subscriptionId
              - connectionString: connectionString
                resourceGroup: resourceGroup
                name: name
                subscriptionId: subscriptionId
              serviceBusQueues:
              - connectionString: connectionString
                resourceGroup: resourceGroup
                name: name
                subscriptionId: subscriptionId
              - connectionString: connectionString
                resourceGroup: resourceGroup
                name: name
                subscriptionId: subscriptionId
              storageContainers:
              - connectionString: connectionString
                maxChunkSizeInBytes: 373302137
                resourceGroup: resourceGroup
                batchFrequencyInSeconds: 211
                containerName: containerName
                name: name
                encoding: encoding
                subscriptionId: subscriptionId
                fileNameFormat: fileNameFormat
              - connectionString: connectionString
                maxChunkSizeInBytes: 373302137
                resourceGroup: resourceGroup
                batchFrequencyInSeconds: 211
                containerName: containerName
                name: name
                encoding: encoding
                subscriptionId: subscriptionId
                fileNameFormat: fileNameFormat
          storageEndpoints:
            key:
              connectionString: connectionString
              sasTtlAsIso8601: sasTtlAsIso8601
              containerName: containerName
          enableFileUploadNotifications: true
          authorizationPolicies:
          - secondaryKey: secondaryKey
            rights: RegistryRead
            keyName: keyName
            primaryKey: primaryKey
          - secondaryKey: secondaryKey
            rights: RegistryRead
            keyName: keyName
            primaryKey: primaryKey
          cloudToDevice:
            feedback:
              ttlAsIso8601: ttlAsIso8601
              maxDeliveryCount: 8
              lockDurationAsIso8601: lockDurationAsIso8601
            defaultTtlAsIso8601: defaultTtlAsIso8601
            maxDeliveryCount: 60
      properties:
        etag:
          description: "The Etag field is *not* required. If it is provided in the\
            \ response body, it must also be provided as a header per the normal ETag\
            \ convention."
          type: string
        properties:
          $ref: '#/components/schemas/IotHubProperties'
        resourcegroup:
          description: The name of the resource group that contains the IoT hub. A
            resource group name uniquely identifies the resource group within the
            subscription.
          type: string
        sku:
          $ref: '#/components/schemas/IotHubSkuInfo'
        subscriptionid:
          description: The subscription identifier.
          type: string
      required:
      - resourcegroup
      - sku
      - subscriptionid
    IotHubDescriptionListResult:
      description: The JSON-serialized array of IotHubDescription objects with a next
        link.
      example:
        value:
        - resourcegroup: resourcegroup
          etag: etag
          sku:
            tier: Free
            name: F1
            capacity: 9
          subscriptionid: subscriptionid
          properties:
            hostName: hostName
            comments: comments
            ipFilterRules:
            - filterName: filterName
              ipMask: ipMask
              action: Accept
            - filterName: filterName
              ipMask: ipMask
              action: Accept
            eventHubEndpoints:
              key:
                partitionCount: 1
                path: path
                endpoint: endpoint
                retentionTimeInDays: 5
                partitionIds:
                - partitionIds
                - partitionIds
            operationsMonitoringProperties:
              events:
                key: None
            provisioningState: provisioningState
            messagingEndpoints:
              key:
                ttlAsIso8601: ttlAsIso8601
                maxDeliveryCount: 56
                lockDurationAsIso8601: lockDurationAsIso8601
            features: None
            routing:
              fallbackRoute:
                condition: condition
                isEnabled: true
                source: DeviceMessages
                endpointNames:
                - endpointNames
              routes:
              - condition: condition
                isEnabled: true
                name: name
                source: DeviceMessages
                endpointNames:
                - endpointNames
              - condition: condition
                isEnabled: true
                name: name
                source: DeviceMessages
                endpointNames:
                - endpointNames
              endpoints:
                eventHubs:
                - connectionString: connectionString
                  resourceGroup: resourceGroup
                  name: name
                  subscriptionId: subscriptionId
                - connectionString: connectionString
                  resourceGroup: resourceGroup
                  name: name
                  subscriptionId: subscriptionId
                serviceBusTopics:
                - connectionString: connectionString
                  resourceGroup: resourceGroup
                  name: name
                  subscriptionId: subscriptionId
                - connectionString: connectionString
                  resourceGroup: resourceGroup
                  name: name
                  subscriptionId: subscriptionId
                serviceBusQueues:
                - connectionString: connectionString
                  resourceGroup: resourceGroup
                  name: name
                  subscriptionId: subscriptionId
                - connectionString: connectionString
                  resourceGroup: resourceGroup
                  name: name
                  subscriptionId: subscriptionId
                storageContainers:
                - connectionString: connectionString
                  maxChunkSizeInBytes: 373302137
                  resourceGroup: resourceGroup
                  batchFrequencyInSeconds: 211
                  containerName: containerName
                  name: name
                  encoding: encoding
                  subscriptionId: subscriptionId
                  fileNameFormat: fileNameFormat
                - connectionString: connectionString
                  maxChunkSizeInBytes: 373302137
                  resourceGroup: resourceGroup
                  batchFrequencyInSeconds: 211
                  containerName: containerName
                  name: name
                  encoding: encoding
                  subscriptionId: subscriptionId
                  fileNameFormat: fileNameFormat
            storageEndpoints:
              key:
                connectionString: connectionString
                sasTtlAsIso8601: sasTtlAsIso8601
                containerName: containerName
            enableFileUploadNotifications: true
            authorizationPolicies:
            - secondaryKey: secondaryKey
              rights: RegistryRead
              keyName: keyName
              primaryKey: primaryKey
            - secondaryKey: secondaryKey
              rights: RegistryRead
              keyName: keyName
              primaryKey: primaryKey
            cloudToDevice:
              feedback:
                ttlAsIso8601: ttlAsIso8601
                maxDeliveryCount: 8
                lockDurationAsIso8601: lockDurationAsIso8601
              defaultTtlAsIso8601: defaultTtlAsIso8601
              maxDeliveryCount: 60
        - resourcegroup: resourcegroup
          etag: etag
          sku:
            tier: Free
            name: F1
            capacity: 9
          subscriptionid: subscriptionid
          properties:
            hostName: hostName
            comments: comments
            ipFilterRules:
            - filterName: filterName
              ipMask: ipMask
              action: Accept
            - filterName: filterName
              ipMask: ipMask
              action: Accept
            eventHubEndpoints:
              key:
                partitionCount: 1
                path: path
                endpoint: endpoint
                retentionTimeInDays: 5
                partitionIds:
                - partitionIds
                - partitionIds
            operationsMonitoringProperties:
              events:
                key: None
            provisioningState: provisioningState
            messagingEndpoints:
              key:
                ttlAsIso8601: ttlAsIso8601
                maxDeliveryCount: 56
                lockDurationAsIso8601: lockDurationAsIso8601
            features: None
            routing:
              fallbackRoute:
                condition: condition
                isEnabled: true
                source: DeviceMessages
                endpointNames:
                - endpointNames
              routes:
              - condition: condition
                isEnabled: true
                name: name
                source: DeviceMessages
                endpointNames:
                - endpointNames
              - condition: condition
                isEnabled: true
                name: name
                source: DeviceMessages
                endpointNames:
                - endpointNames
              endpoints:
                eventHubs:
                - connectionString: connectionString
                  resourceGroup: resourceGroup
                  name: name
                  subscriptionId: subscriptionId
                - connectionString: connectionString
                  resourceGroup: resourceGroup
                  name: name
                  subscriptionId: subscriptionId
                serviceBusTopics:
                - connectionString: connectionString
                  resourceGroup: resourceGroup
                  name: name
                  subscriptionId: subscriptionId
                - connectionString: connectionString
                  resourceGroup: resourceGroup
                  name: name
                  subscriptionId: subscriptionId
                serviceBusQueues:
                - connectionString: connectionString
                  resourceGroup: resourceGroup
                  name: name
                  subscriptionId: subscriptionId
                - connectionString: connectionString
                  resourceGroup: resourceGroup
                  name: name
                  subscriptionId: subscriptionId
                storageContainers:
                - connectionString: connectionString
                  maxChunkSizeInBytes: 373302137
                  resourceGroup: resourceGroup
                  batchFrequencyInSeconds: 211
                  containerName: containerName
                  name: name
                  encoding: encoding
                  subscriptionId: subscriptionId
                  fileNameFormat: fileNameFormat
                - connectionString: connectionString
                  maxChunkSizeInBytes: 373302137
                  resourceGroup: resourceGroup
                  batchFrequencyInSeconds: 211
                  containerName: containerName
                  name: name
                  encoding: encoding
                  subscriptionId: subscriptionId
                  fileNameFormat: fileNameFormat
            storageEndpoints:
              key:
                connectionString: connectionString
                sasTtlAsIso8601: sasTtlAsIso8601
                containerName: containerName
            enableFileUploadNotifications: true
            authorizationPolicies:
            - secondaryKey: secondaryKey
              rights: RegistryRead
              keyName: keyName
              primaryKey: primaryKey
            - secondaryKey: secondaryKey
              rights: RegistryRead
              keyName: keyName
              primaryKey: primaryKey
            cloudToDevice:
              feedback:
                ttlAsIso8601: ttlAsIso8601
                maxDeliveryCount: 8
                lockDurationAsIso8601: lockDurationAsIso8601
              defaultTtlAsIso8601: defaultTtlAsIso8601
              maxDeliveryCount: 60
        nextLink: nextLink
      properties:
        nextLink:
          description: The next link.
          readOnly: true
          type: string
        value:
          description: The array of IotHubDescription objects.
          items:
            $ref: '#/components/schemas/IotHubDescription'
          type: array
      type: object
    IotHubNameAvailabilityInfo:
      description: The properties indicating whether a given IoT hub name is available.
      example:
        reason: Invalid
        nameAvailable: true
        message: message
      properties:
        message:
          description: The detailed reason message.
          type: string
        nameAvailable:
          description: The value which indicates whether the provided name is available.
          readOnly: true
          type: boolean
        reason:
          description: The reason for unavailability.
          enum:
          - Invalid
          - AlreadyExists
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: false
            name: IotHubNameUnavailabilityReason
      type: object
    IotHubProperties:
      description: The properties of an IoT hub.
      example:
        hostName: hostName
        comments: comments
        ipFilterRules:
        - filterName: filterName
          ipMask: ipMask
          action: Accept
        - filterName: filterName
          ipMask: ipMask
          action: Accept
        eventHubEndpoints:
          key:
            partitionCount: 1
            path: path
            endpoint: endpoint
            retentionTimeInDays: 5
            partitionIds:
            - partitionIds
            - partitionIds
        operationsMonitoringProperties:
          events:
            key: None
        provisioningState: provisioningState
        messagingEndpoints:
          key:
            ttlAsIso8601: ttlAsIso8601
            maxDeliveryCount: 56
            lockDurationAsIso8601: lockDurationAsIso8601
        features: None
        routing:
          fallbackRoute:
            condition: condition
            isEnabled: true
            source: DeviceMessages
            endpointNames:
            - endpointNames
          routes:
          - condition: condition
            isEnabled: true
            name: name
            source: DeviceMessages
            endpointNames:
            - endpointNames
          - condition: condition
            isEnabled: true
            name: name
            source: DeviceMessages
            endpointNames:
            - endpointNames
          endpoints:
            eventHubs:
            - connectionString: connectionString
              resourceGroup: resourceGroup
              name: name
              subscriptionId: subscriptionId
            - connectionString: connectionString
              resourceGroup: resourceGroup
              name: name
              subscriptionId: subscriptionId
            serviceBusTopics:
            - connectionString: connectionString
              resourceGroup: resourceGroup
              name: name
              subscriptionId: subscriptionId
            - connectionString: connectionString
              resourceGroup: resourceGroup
              name: name
              subscriptionId: subscriptionId
            serviceBusQueues:
            - connectionString: connectionString
              resourceGroup: resourceGroup
              name: name
              subscriptionId: subscriptionId
            - connectionString: connectionString
              resourceGroup: resourceGroup
              name: name
              subscriptionId: subscriptionId
            storageContainers:
            - connectionString: connectionString
              maxChunkSizeInBytes: 373302137
              resourceGroup: resourceGroup
              batchFrequencyInSeconds: 211
              containerName: containerName
              name: name
              encoding: encoding
              subscriptionId: subscriptionId
              fileNameFormat: fileNameFormat
            - connectionString: connectionString
              maxChunkSizeInBytes: 373302137
              resourceGroup: resourceGroup
              batchFrequencyInSeconds: 211
              containerName: containerName
              name: name
              encoding: encoding
              subscriptionId: subscriptionId
              fileNameFormat: fileNameFormat
        storageEndpoints:
          key:
            connectionString: connectionString
            sasTtlAsIso8601: sasTtlAsIso8601
            containerName: containerName
        enableFileUploadNotifications: true
        authorizationPolicies:
        - secondaryKey: secondaryKey
          rights: RegistryRead
          keyName: keyName
          primaryKey: primaryKey
        - secondaryKey: secondaryKey
          rights: RegistryRead
          keyName: keyName
          primaryKey: primaryKey
        cloudToDevice:
          feedback:
            ttlAsIso8601: ttlAsIso8601
            maxDeliveryCount: 8
            lockDurationAsIso8601: lockDurationAsIso8601
          defaultTtlAsIso8601: defaultTtlAsIso8601
          maxDeliveryCount: 60
      properties:
        authorizationPolicies:
          description: The shared access policies you can use to secure a connection
            to the IoT hub.
          items:
            $ref: '#/components/schemas/SharedAccessSignatureAuthorizationRule'
          type: array
        cloudToDevice:
          $ref: '#/components/schemas/CloudToDeviceProperties'
        comments:
          description: IoT hub comments.
          type: string
        enableFileUploadNotifications:
          description: "If True, file upload notifications are enabled."
          type: boolean
        eventHubEndpoints:
          additionalProperties:
            $ref: '#/components/schemas/EventHubProperties'
          description: The Event Hub-compatible endpoint properties. The possible
            keys to this dictionary are events and operationsMonitoringEvents. Both
            of these keys have to be present in the dictionary while making create
            or update calls for the IoT hub.
          type: object
        features:
          description: The capabilities and features enabled for the IoT hub.
          enum:
          - None
          - DeviceManagement
          type: string
          x-ms-enum:
            modelAsString: true
            name: Capabilities
        hostName:
          description: The name of the host.
          readOnly: true
          type: string
        ipFilterRules:
          description: The IP filter rules.
          items:
            $ref: '#/components/schemas/IpFilterRule'
          type: array
        messagingEndpoints:
          additionalProperties:
            $ref: '#/components/schemas/MessagingEndpointProperties'
          description: The messaging endpoint properties for the file upload notification
            queue.
          type: object
        operationsMonitoringProperties:
          $ref: '#/components/schemas/OperationsMonitoringProperties'
        provisioningState:
          description: The provisioning state.
          readOnly: true
          type: string
        routing:
          $ref: '#/components/schemas/RoutingProperties'
        storageEndpoints:
          additionalProperties:
            $ref: '#/components/schemas/StorageEndpointProperties'
          description: "The list of Azure Storage endpoints where you can upload files.\
            \ Currently you can configure only one Azure Storage account and that\
            \ MUST have its key as $default. Specifying more than one storage account\
            \ causes an error to be thrown. Not specifying a value for this property\
            \ when the enableFileUploadNotifications property is set to True, causes\
            \ an error to be thrown."
          type: object
      type: object
    IotHubQuotaMetricInfo:
      description: Quota metrics properties.
      example:
        CurrentValue: 0
        MaxValue: 6
        Name: Name
      properties:
        CurrentValue:
          description: The current value for the quota metric.
          format: int64
          readOnly: true
          type: integer
        MaxValue:
          description: The maximum value of the quota metric.
          format: int64
          readOnly: true
          type: integer
        Name:
          description: The name of the quota metric.
          readOnly: true
          type: string
      type: object
    IotHubQuotaMetricInfoListResult:
      description: The JSON-serialized array of IotHubQuotaMetricInfo objects with
        a next link.
      example:
        value:
        - CurrentValue: 0
          MaxValue: 6
          Name: Name
        - CurrentValue: 0
          MaxValue: 6
          Name: Name
        nextLink: nextLink
      properties:
        nextLink:
          description: The next link.
          readOnly: true
          type: string
        value:
          description: The array of quota metrics objects.
          items:
            $ref: '#/components/schemas/IotHubQuotaMetricInfo'
          type: array
      type: object
    IotHubSkuDescription:
      description: SKU properties.
      example:
        sku:
          tier: Free
          name: F1
          capacity: 9
        capacity:
          default: 0
          scaleType: Automatic
          maximum: 6
          minimum: 1
        resourceType: resourceType
      properties:
        capacity:
          $ref: '#/components/schemas/IotHubCapacity'
        resourceType:
          description: The type of the resource.
          readOnly: true
          type: string
        sku:
          $ref: '#/components/schemas/IotHubSkuInfo'
      required:
      - capacity
      - sku
      type: object
    IotHubSkuDescriptionListResult:
      description: The JSON-serialized array of IotHubSkuDescription objects with
        a next link.
      example:
        value:
        - sku:
            tier: Free
            name: F1
            capacity: 9
          capacity:
            default: 0
            scaleType: Automatic
            maximum: 6
            minimum: 1
          resourceType: resourceType
        - sku:
            tier: Free
            name: F1
            capacity: 9
          capacity:
            default: 0
            scaleType: Automatic
            maximum: 6
            minimum: 1
          resourceType: resourceType
        nextLink: nextLink
      properties:
        nextLink:
          description: The next link.
          readOnly: true
          type: string
        value:
          description: The array of IotHubSkuDescription.
          items:
            $ref: '#/components/schemas/IotHubSkuDescription'
          type: array
      type: object
    IotHubSkuInfo:
      description: Information about the SKU of the IoT hub.
      example:
        tier: Free
        name: F1
        capacity: 9
      properties:
        capacity:
          description: "The number of provisioned IoT Hub units. See: https://docs.microsoft.com/azure/azure-subscription-service-limits#iot-hub-limits."
          format: int64
          type: integer
        name:
          description: The name of the SKU.
          enum:
          - F1
          - S1
          - S2
          - S3
          type: string
          x-ms-enum:
            modelAsString: true
            name: IotHubSku
        tier:
          description: The billing tier for the IoT hub.
          enum:
          - Free
          - Standard
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: false
            name: IotHubSkuTier
      required:
      - capacity
      - name
      type: object
    IpFilterRule:
      description: The IP filter rules for the IoT hub.
      example:
        filterName: filterName
        ipMask: ipMask
        action: Accept
      properties:
        action:
          description: The desired action for requests captured by this rule.
          enum:
          - Accept
          - Reject
          type: string
          x-ms-enum:
            modelAsString: false
            name: IpFilterActionType
        filterName:
          description: The name of the IP filter rule.
          type: string
        ipMask:
          description: A string that contains the IP address range in CIDR notation
            for the rule.
          type: string
      required:
      - action
      - filterName
      - ipMask
      type: object
    JobResponse:
      description: The properties of the Job Response object.
      example:
        jobId: jobId
        endTimeUtc: endTimeUtc
        parentJobId: parentJobId
        failureReason: failureReason
        type: unknown
        startTimeUtc: startTimeUtc
        statusMessage: statusMessage
        status: unknown
      properties:
        endTimeUtc:
          description: The time the job stopped processing.
          format: date-time-rfc1123
          readOnly: true
          type: string
        failureReason:
          description: "If status == failed, this string containing the reason for\
            \ the failure."
          readOnly: true
          type: string
        jobId:
          description: The job identifier.
          readOnly: true
          type: string
        parentJobId:
          description: "The job identifier of the parent job, if any."
          readOnly: true
          type: string
        startTimeUtc:
          description: The start time of the job.
          format: date-time-rfc1123
          readOnly: true
          type: string
        status:
          description: The status of the job.
          enum:
          - unknown
          - enqueued
          - running
          - completed
          - failed
          - cancelled
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: false
            name: JobStatus
        statusMessage:
          description: The status message for the job.
          readOnly: true
          type: string
        type:
          description: The type of the job.
          enum:
          - unknown
          - export
          - import
          - backup
          - readDeviceProperties
          - writeDeviceProperties
          - updateDeviceConfiguration
          - rebootDevice
          - factoryResetDevice
          - firmwareUpdate
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: JobType
      type: object
    JobResponseListResult:
      description: The JSON-serialized array of JobResponse objects with a next link.
      example:
        value:
        - jobId: jobId
          endTimeUtc: endTimeUtc
          parentJobId: parentJobId
          failureReason: failureReason
          type: unknown
          startTimeUtc: startTimeUtc
          statusMessage: statusMessage
          status: unknown
        - jobId: jobId
          endTimeUtc: endTimeUtc
          parentJobId: parentJobId
          failureReason: failureReason
          type: unknown
          startTimeUtc: startTimeUtc
          statusMessage: statusMessage
          status: unknown
        nextLink: nextLink
      properties:
        nextLink:
          description: The next link.
          readOnly: true
          type: string
        value:
          description: The array of JobResponse objects.
          items:
            $ref: '#/components/schemas/JobResponse'
          type: array
      type: object
    MessagingEndpointProperties:
      description: The properties of the messaging endpoints used by this IoT hub.
      example:
        ttlAsIso8601: ttlAsIso8601
        maxDeliveryCount: 56
        lockDurationAsIso8601: lockDurationAsIso8601
      properties:
        lockDurationAsIso8601:
          description: "The lock duration. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload."
          format: duration
          type: string
        maxDeliveryCount:
          description: "The number of times the IoT hub attempts to deliver a message.\
            \ See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload."
          format: int32
          maximum: 100
          minimum: 1
          type: integer
        ttlAsIso8601:
          description: "The period of time for which a message is available to consume\
            \ before it is expired by the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload."
          format: duration
          type: string
      type: object
    Operation:
      description: IoT Hub REST API operation
      example:
        display:
          provider: provider
          resource: resource
          operation: operation
        name: name
      properties:
        display:
          $ref: '#/components/schemas/Operation_display'
        name:
          description: "Operation name: {provider}/{resource}/{read | write | action\
            \ | delete}"
          readOnly: true
          type: string
      type: object
    OperationInputs:
      description: Input values.
      example:
        Name: Name
      properties:
        Name:
          description: The name of the IoT hub to check.
          type: string
      required:
      - Name
      type: object
    OperationListResult:
      description: Result of the request to list IoT Hub operations. It contains a
        list of operations and a URL link to get the next set of results.
      example:
        value:
        - display:
            provider: provider
            resource: resource
            operation: operation
          name: name
        - display:
            provider: provider
            resource: resource
            operation: operation
          name: name
        nextLink: nextLink
      properties:
        nextLink:
          description: URL to get the next set of operation list results if there
            are any.
          readOnly: true
          type: string
        value:
          description: List of IoT Hub operations supported by the Microsoft.Devices
            resource provider.
          items:
            $ref: '#/components/schemas/Operation'
          readOnly: true
          type: array
      type: object
    OperationsMonitoringProperties:
      description: "The operations monitoring properties for the IoT hub. The possible\
        \ keys to the dictionary are Connections, DeviceTelemetry, C2DCommands, DeviceIdentityOperations,\
        \ FileUploadOperations, Routes, D2CTwinOperations, C2DTwinOperations, TwinQueries,\
        \ JobsOperations, DirectMethods."
      example:
        events:
          key: None
      properties:
        events:
          additionalProperties:
            description: The operations monitoring level.
            enum:
            - None
            - Error
            - Information
            - "Error, Information"
            type: string
            x-ms-enum:
              modelAsString: true
              name: OperationMonitoringLevel
          type: object
      type: object
    RegistryStatistics:
      description: Identity registry statistics.
      example:
        enabledDeviceCount: 6
        disabledDeviceCount: 0
        totalDeviceCount: 1
      properties:
        disabledDeviceCount:
          description: The count of disabled devices in the identity registry.
          format: int64
          readOnly: true
          type: integer
        enabledDeviceCount:
          description: The count of enabled devices in the identity registry.
          format: int64
          readOnly: true
          type: integer
        totalDeviceCount:
          description: The total count of devices in the identity registry.
          format: int64
          readOnly: true
          type: integer
      type: object
    Resource:
      description: The common properties of an Azure resource.
      properties:
        id:
          description: The resource identifier.
          readOnly: true
          type: string
        location:
          description: The resource location.
          type: string
        name:
          description: The resource name.
          pattern: "^(?![0-9]+$)(?!-)[a-zA-Z0-9-]{2,49}[a-zA-Z0-9]$"
          readOnly: true
          type: string
        tags:
          additionalProperties:
            type: string
          description: The resource tags.
          type: object
        type:
          description: The resource type.
          readOnly: true
          type: string
      required:
      - location
      type: object
      x-ms-azure-resource: true
    RouteProperties:
      description: The properties of a routing rule that your IoT hub uses to route
        messages to endpoints.
      example:
        condition: condition
        isEnabled: true
        name: name
        source: DeviceMessages
        endpointNames:
        - endpointNames
      properties:
        condition:
          description: "The condition that is evaluated to apply the routing rule.\
            \ If no condition is provided, it evaluates to true by default. For grammar,\
            \ see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language"
          type: string
        endpointNames:
          description: The list of endpoints to which messages that satisfy the condition
            are routed. Currently only one endpoint is allowed.
          items:
            type: string
          maxItems: 1
          minItems: 1
          type: array
        isEnabled:
          description: Used to specify whether a route is enabled.
          type: boolean
        name:
          description: "The name of the route. The name can only include alphanumeric\
            \ characters, periods, underscores, hyphens, has a maximum length of 64\
            \ characters, and must be unique."
          pattern: "^[A-Za-z0-9-._]{1,64}$"
          type: string
        source:
          description: "The source that the routing rule is to be applied to, such\
            \ as DeviceMessages."
          enum:
          - DeviceMessages
          - TwinChangeEvents
          - DeviceLifecycleEvents
          - DeviceJobLifecycleEvents
          type: string
          x-ms-enum:
            modelAsString: true
            name: RoutingSource
      required:
      - endpointNames
      - isEnabled
      - name
      - source
      type: object
    RoutingEndpoints:
      description: The properties related to the custom endpoints to which your IoT
        hub routes messages based on the routing rules. A maximum of 10 custom endpoints
        are allowed across all endpoint types for paid hubs and only 1 custom endpoint
        is allowed across all endpoint types for free hubs.
      example:
        eventHubs:
        - connectionString: connectionString
          resourceGroup: resourceGroup
          name: name
          subscriptionId: subscriptionId
        - connectionString: connectionString
          resourceGroup: resourceGroup
          name: name
          subscriptionId: subscriptionId
        serviceBusTopics:
        - connectionString: connectionString
          resourceGroup: resourceGroup
          name: name
          subscriptionId: subscriptionId
        - connectionString: connectionString
          resourceGroup: resourceGroup
          name: name
          subscriptionId: subscriptionId
        serviceBusQueues:
        - connectionString: connectionString
          resourceGroup: resourceGroup
          name: name
          subscriptionId: subscriptionId
        - connectionString: connectionString
          resourceGroup: resourceGroup
          name: name
          subscriptionId: subscriptionId
        storageContainers:
        - connectionString: connectionString
          maxChunkSizeInBytes: 373302137
          resourceGroup: resourceGroup
          batchFrequencyInSeconds: 211
          containerName: containerName
          name: name
          encoding: encoding
          subscriptionId: subscriptionId
          fileNameFormat: fileNameFormat
        - connectionString: connectionString
          maxChunkSizeInBytes: 373302137
          resourceGroup: resourceGroup
          batchFrequencyInSeconds: 211
          containerName: containerName
          name: name
          encoding: encoding
          subscriptionId: subscriptionId
          fileNameFormat: fileNameFormat
      properties:
        eventHubs:
          description: "The list of Event Hubs endpoints that IoT hub routes messages\
            \ to, based on the routing rules. This list does not include the built-in\
            \ Event Hubs endpoint."
          items:
            $ref: '#/components/schemas/RoutingEventHubProperties'
          type: array
        serviceBusQueues:
          description: "The list of Service Bus queue endpoints that IoT hub routes\
            \ the messages to, based on the routing rules."
          items:
            $ref: '#/components/schemas/RoutingServiceBusQueueEndpointProperties'
          type: array
        serviceBusTopics:
          description: "The list of Service Bus topic endpoints that the IoT hub routes\
            \ the messages to, based on the routing rules."
          items:
            $ref: '#/components/schemas/RoutingServiceBusTopicEndpointProperties'
          type: array
        storageContainers:
          description: "The list of storage container endpoints that IoT hub routes\
            \ messages to, based on the routing rules."
          items:
            $ref: '#/components/schemas/RoutingStorageContainerProperties'
          type: array
      type: object
    RoutingEventHubProperties:
      description: The properties related to an event hub endpoint.
      example:
        connectionString: connectionString
        resourceGroup: resourceGroup
        name: name
        subscriptionId: subscriptionId
      properties:
        connectionString:
          description: 'The connection string of the event hub endpoint. '
          type: string
        name:
          description: "The name that identifies this endpoint. The name can only\
            \ include alphanumeric characters, periods, underscores, hyphens and has\
            \ a maximum length of 64 characters. The following names are reserved:\
            \  events, operationsMonitoringEvents, fileNotifications, $default. Endpoint\
            \ names must be unique across endpoint types."
          pattern: "^[A-Za-z0-9-._]{1,64}$"
          type: string
        resourceGroup:
          description: The name of the resource group of the event hub endpoint.
          type: string
        subscriptionId:
          description: The subscription identifier of the event hub endpoint.
          type: string
      required:
      - connectionString
      - name
      type: object
    RoutingProperties:
      description: "The routing related properties of the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging"
      example:
        fallbackRoute:
          condition: condition
          isEnabled: true
          source: DeviceMessages
          endpointNames:
          - endpointNames
        routes:
        - condition: condition
          isEnabled: true
          name: name
          source: DeviceMessages
          endpointNames:
          - endpointNames
        - condition: condition
          isEnabled: true
          name: name
          source: DeviceMessages
          endpointNames:
          - endpointNames
        endpoints:
          eventHubs:
          - connectionString: connectionString
            resourceGroup: resourceGroup
            name: name
            subscriptionId: subscriptionId
          - connectionString: connectionString
            resourceGroup: resourceGroup
            name: name
            subscriptionId: subscriptionId
          serviceBusTopics:
          - connectionString: connectionString
            resourceGroup: resourceGroup
            name: name
            subscriptionId: subscriptionId
          - connectionString: connectionString
            resourceGroup: resourceGroup
            name: name
            subscriptionId: subscriptionId
          serviceBusQueues:
          - connectionString: connectionString
            resourceGroup: resourceGroup
            name: name
            subscriptionId: subscriptionId
          - connectionString: connectionString
            resourceGroup: resourceGroup
            name: name
            subscriptionId: subscriptionId
          storageContainers:
          - connectionString: connectionString
            maxChunkSizeInBytes: 373302137
            resourceGroup: resourceGroup
            batchFrequencyInSeconds: 211
            containerName: containerName
            name: name
            encoding: encoding
            subscriptionId: subscriptionId
            fileNameFormat: fileNameFormat
          - connectionString: connectionString
            maxChunkSizeInBytes: 373302137
            resourceGroup: resourceGroup
            batchFrequencyInSeconds: 211
            containerName: containerName
            name: name
            encoding: encoding
            subscriptionId: subscriptionId
            fileNameFormat: fileNameFormat
      properties:
        endpoints:
          $ref: '#/components/schemas/RoutingEndpoints'
        fallbackRoute:
          $ref: '#/components/schemas/FallbackRouteProperties'
        routes:
          description: The list of user-provided routing rules that the IoT hub uses
            to route messages to built-in and custom endpoints. A maximum of 100 routing
            rules are allowed for paid hubs and a maximum of 5 routing rules are allowed
            for free hubs.
          items:
            $ref: '#/components/schemas/RouteProperties'
          type: array
      type: object
    RoutingServiceBusQueueEndpointProperties:
      description: The properties related to service bus queue endpoint types.
      example:
        connectionString: connectionString
        resourceGroup: resourceGroup
        name: name
        subscriptionId: subscriptionId
      properties:
        connectionString:
          description: The connection string of the service bus queue endpoint.
          type: string
        name:
          description: "The name that identifies this endpoint. The name can only\
            \ include alphanumeric characters, periods, underscores, hyphens and has\
            \ a maximum length of 64 characters. The following names are reserved:\
            \  events, operationsMonitoringEvents, fileNotifications, $default. Endpoint\
            \ names must be unique across endpoint types. The name need not be the\
            \ same as the actual queue name."
          pattern: "^[A-Za-z0-9-._]{1,64}$"
          type: string
        resourceGroup:
          description: The name of the resource group of the service bus queue endpoint.
          type: string
        subscriptionId:
          description: The subscription identifier of the service bus queue endpoint.
          type: string
      required:
      - connectionString
      - name
      type: object
    RoutingServiceBusTopicEndpointProperties:
      description: The properties related to service bus topic endpoint types.
      example:
        connectionString: connectionString
        resourceGroup: resourceGroup
        name: name
        subscriptionId: subscriptionId
      properties:
        connectionString:
          description: The connection string of the service bus topic endpoint.
          type: string
        name:
          description: "The name that identifies this endpoint. The name can only\
            \ include alphanumeric characters, periods, underscores, hyphens and has\
            \ a maximum length of 64 characters. The following names are reserved:\
            \  events, operationsMonitoringEvents, fileNotifications, $default. Endpoint\
            \ names must be unique across endpoint types.  The name need not be the\
            \ same as the actual topic name."
          pattern: "^[A-Za-z0-9-._]{1,64}$"
          type: string
        resourceGroup:
          description: The name of the resource group of the service bus topic endpoint.
          type: string
        subscriptionId:
          description: The subscription identifier of the service bus topic endpoint.
          type: string
      required:
      - connectionString
      - name
      type: object
    RoutingStorageContainerProperties:
      description: The properties related to a storage container endpoint.
      example:
        connectionString: connectionString
        maxChunkSizeInBytes: 373302137
        resourceGroup: resourceGroup
        batchFrequencyInSeconds: 211
        containerName: containerName
        name: name
        encoding: encoding
        subscriptionId: subscriptionId
        fileNameFormat: fileNameFormat
      properties:
        batchFrequencyInSeconds:
          description: Time interval at which blobs are written to storage. Value
            should be between 60 and 720 seconds. Default value is 300 seconds.
          format: int32
          maximum: 720
          minimum: 60
          type: integer
        connectionString:
          description: The connection string of the storage account.
          type: string
        containerName:
          description: The name of storage container in the storage account.
          type: string
        encoding:
          description: Encoding that is used to serialize messages to blobs. Supported
            values are 'avro' and 'avroDeflate'. Default value is 'avro'.
          type: string
        fileNameFormat:
          description: "File name format for the blob. Default format is {iothub}/{partition}/{YYYY}/{MM}/{DD}/{HH}/{mm}.\
            \ All parameters are mandatory but can be reordered."
          type: string
        maxChunkSizeInBytes:
          description: Maximum number of bytes for each blob written to storage. Value
            should be between 10485760(10MB) and 524288000(500MB). Default value is
            314572800(300MB).
          format: int32
          maximum: 524288000
          minimum: 10485760
          type: integer
        name:
          description: "The name that identifies this endpoint. The name can only\
            \ include alphanumeric characters, periods, underscores, hyphens and has\
            \ a maximum length of 64 characters. The following names are reserved:\
            \  events, operationsMonitoringEvents, fileNotifications, $default. Endpoint\
            \ names must be unique across endpoint types."
          pattern: "^[A-Za-z0-9-._]{1,64}$"
          type: string
        resourceGroup:
          description: The name of the resource group of the storage account.
          type: string
        subscriptionId:
          description: The subscription identifier of the storage account.
          type: string
      required:
      - connectionString
      - containerName
      - name
      type: object
    SharedAccessSignatureAuthorizationRule:
      description: The properties of an IoT hub shared access policy.
      example:
        secondaryKey: secondaryKey
        rights: RegistryRead
        keyName: keyName
        primaryKey: primaryKey
      properties:
        keyName:
          description: The name of the shared access policy.
          type: string
        primaryKey:
          description: The primary key.
          type: string
        rights:
          description: The permissions assigned to the shared access policy.
          enum:
          - RegistryRead
          - RegistryWrite
          - ServiceConnect
          - DeviceConnect
          - "RegistryRead, RegistryWrite"
          - "RegistryRead, ServiceConnect"
          - "RegistryRead, DeviceConnect"
          - "RegistryWrite, ServiceConnect"
          - "RegistryWrite, DeviceConnect"
          - "ServiceConnect, DeviceConnect"
          - "RegistryRead, RegistryWrite, ServiceConnect"
          - "RegistryRead, RegistryWrite, DeviceConnect"
          - "RegistryRead, ServiceConnect, DeviceConnect"
          - "RegistryWrite, ServiceConnect, DeviceConnect"
          - "RegistryRead, RegistryWrite, ServiceConnect, DeviceConnect"
          type: string
          x-ms-enum:
            modelAsString: false
            name: AccessRights
        secondaryKey:
          description: The secondary key.
          type: string
      required:
      - keyName
      - rights
      type: object
    SharedAccessSignatureAuthorizationRuleListResult:
      description: The list of shared access policies with a next link.
      example:
        value:
        - secondaryKey: secondaryKey
          rights: RegistryRead
          keyName: keyName
          primaryKey: primaryKey
        - secondaryKey: secondaryKey
          rights: RegistryRead
          keyName: keyName
          primaryKey: primaryKey
        nextLink: nextLink
      properties:
        nextLink:
          description: The next link.
          readOnly: true
          type: string
        value:
          description: The list of shared access policies.
          items:
            $ref: '#/components/schemas/SharedAccessSignatureAuthorizationRule'
          type: array
      type: object
    StorageEndpointProperties:
      description: The properties of the Azure Storage endpoint for file upload.
      example:
        connectionString: connectionString
        sasTtlAsIso8601: sasTtlAsIso8601
        containerName: containerName
      properties:
        connectionString:
          description: The connection string for the Azure Storage account to which
            files are uploaded.
          type: string
        containerName:
          description: The name of the root container where you upload files. The
            container need not exist but should be creatable using the connectionString
            specified.
          type: string
        sasTtlAsIso8601:
          description: "The period of time for which the SAS URI generated by IoT\
            \ Hub for file upload is valid. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload#file-upload-notification-configuration-options."
          format: duration
          type: string
      required:
      - connectionString
      - containerName
      type: object
    Operation_display:
      description: The object that represents the operation.
      example:
        provider: provider
        resource: resource
        operation: operation
      properties:
        operation:
          description: Name of the operation
          readOnly: true
          type: string
        provider:
          description: "Service provider: Microsoft Devices"
          readOnly: true
          type: string
        resource:
          description: "Resource Type: IotHubs"
          readOnly: true
          type: string
      type: object
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
      type: oauth2
x-original-swagger-version: "2.0"

