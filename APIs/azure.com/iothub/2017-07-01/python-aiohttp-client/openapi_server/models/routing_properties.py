# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.fallback_route_properties import FallbackRouteProperties
from openapi_server.models.route_properties import RouteProperties
from openapi_server.models.routing_endpoints import RoutingEndpoints
from openapi_server import util


class RoutingProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, endpoints: RoutingEndpoints=None, fallback_route: FallbackRouteProperties=None, routes: List[RouteProperties]=None):
        """RoutingProperties - a model defined in OpenAPI

        :param endpoints: The endpoints of this RoutingProperties.
        :param fallback_route: The fallback_route of this RoutingProperties.
        :param routes: The routes of this RoutingProperties.
        """
        self.openapi_types = {
            'endpoints': RoutingEndpoints,
            'fallback_route': FallbackRouteProperties,
            'routes': List[RouteProperties]
        }

        self.attribute_map = {
            'endpoints': 'endpoints',
            'fallback_route': 'fallbackRoute',
            'routes': 'routes'
        }

        self._endpoints = endpoints
        self._fallback_route = fallback_route
        self._routes = routes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RoutingProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RoutingProperties of this RoutingProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def endpoints(self):
        """Gets the endpoints of this RoutingProperties.


        :return: The endpoints of this RoutingProperties.
        :rtype: RoutingEndpoints
        """
        return self._endpoints

    @endpoints.setter
    def endpoints(self, endpoints):
        """Sets the endpoints of this RoutingProperties.


        :param endpoints: The endpoints of this RoutingProperties.
        :type endpoints: RoutingEndpoints
        """

        self._endpoints = endpoints

    @property
    def fallback_route(self):
        """Gets the fallback_route of this RoutingProperties.


        :return: The fallback_route of this RoutingProperties.
        :rtype: FallbackRouteProperties
        """
        return self._fallback_route

    @fallback_route.setter
    def fallback_route(self, fallback_route):
        """Sets the fallback_route of this RoutingProperties.


        :param fallback_route: The fallback_route of this RoutingProperties.
        :type fallback_route: FallbackRouteProperties
        """

        self._fallback_route = fallback_route

    @property
    def routes(self):
        """Gets the routes of this RoutingProperties.

        The list of user-provided routing rules that the IoT hub uses to route messages to built-in and custom endpoints. A maximum of 100 routing rules are allowed for paid hubs and a maximum of 5 routing rules are allowed for free hubs.

        :return: The routes of this RoutingProperties.
        :rtype: List[RouteProperties]
        """
        return self._routes

    @routes.setter
    def routes(self, routes):
        """Sets the routes of this RoutingProperties.

        The list of user-provided routing rules that the IoT hub uses to route messages to built-in and custom endpoints. A maximum of 100 routing rules are allowed for paid hubs and a maximum of 5 routing rules are allowed for free hubs.

        :param routes: The routes of this RoutingProperties.
        :type routes: List[RouteProperties]
        """

        self._routes = routes
