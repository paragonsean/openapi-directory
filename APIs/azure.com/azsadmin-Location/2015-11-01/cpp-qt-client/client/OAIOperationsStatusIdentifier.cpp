/**
 * SubscriptionsManagementClient
 * The Admin Subscriptions Management Client.
 *
 * The version of the OpenAPI document: 2015-11-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOperationsStatusIdentifier.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOperationsStatusIdentifier::OAIOperationsStatusIdentifier(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOperationsStatusIdentifier::OAIOperationsStatusIdentifier() {
    this->initializeModel();
}

OAIOperationsStatusIdentifier::~OAIOperationsStatusIdentifier() {}

void OAIOperationsStatusIdentifier::initializeModel() {

    m_location_isSet = false;
    m_location_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_subscription_id_isSet = false;
    m_subscription_id_isValid = false;
}

void OAIOperationsStatusIdentifier::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOperationsStatusIdentifier::fromJsonObject(QJsonObject json) {

    m_location_isValid = ::OpenAPI::fromJsonValue(m_location, json[QString("location")]);
    m_location_isSet = !json[QString("location")].isNull() && m_location_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_subscription_id_isValid = ::OpenAPI::fromJsonValue(m_subscription_id, json[QString("subscriptionId")]);
    m_subscription_id_isSet = !json[QString("subscriptionId")].isNull() && m_subscription_id_isValid;
}

QString OAIOperationsStatusIdentifier::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOperationsStatusIdentifier::asJsonObject() const {
    QJsonObject obj;
    if (m_location_isSet) {
        obj.insert(QString("location"), ::OpenAPI::toJsonValue(m_location));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_subscription_id_isSet) {
        obj.insert(QString("subscriptionId"), ::OpenAPI::toJsonValue(m_subscription_id));
    }
    return obj;
}

QString OAIOperationsStatusIdentifier::getLocation() const {
    return m_location;
}
void OAIOperationsStatusIdentifier::setLocation(const QString &location) {
    m_location = location;
    m_location_isSet = true;
}

bool OAIOperationsStatusIdentifier::is_location_Set() const{
    return m_location_isSet;
}

bool OAIOperationsStatusIdentifier::is_location_Valid() const{
    return m_location_isValid;
}

QString OAIOperationsStatusIdentifier::getName() const {
    return m_name;
}
void OAIOperationsStatusIdentifier::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIOperationsStatusIdentifier::is_name_Set() const{
    return m_name_isSet;
}

bool OAIOperationsStatusIdentifier::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIOperationsStatusIdentifier::getSubscriptionId() const {
    return m_subscription_id;
}
void OAIOperationsStatusIdentifier::setSubscriptionId(const QString &subscription_id) {
    m_subscription_id = subscription_id;
    m_subscription_id_isSet = true;
}

bool OAIOperationsStatusIdentifier::is_subscription_id_Set() const{
    return m_subscription_id_isSet;
}

bool OAIOperationsStatusIdentifier::is_subscription_id_Valid() const{
    return m_subscription_id_isValid;
}

bool OAIOperationsStatusIdentifier::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_location_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_subscription_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOperationsStatusIdentifier::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
