# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.extended_error_info import ExtendedErrorInfo
from openapi_server.models.operations_status_identifier import OperationsStatusIdentifier
from openapi_server import util


class OperationsStatus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, end_time: datetime=None, error: ExtendedErrorInfo=None, id: OperationsStatusIdentifier=None, percent_complete: float=None, properties: object=None, response_content: object=None, retry_after: str=None, start_time: datetime=None, status: str=None, terminal_http_status_code: str=None):
        """OperationsStatus - a model defined in OpenAPI

        :param end_time: The end_time of this OperationsStatus.
        :param error: The error of this OperationsStatus.
        :param id: The id of this OperationsStatus.
        :param percent_complete: The percent_complete of this OperationsStatus.
        :param properties: The properties of this OperationsStatus.
        :param response_content: The response_content of this OperationsStatus.
        :param retry_after: The retry_after of this OperationsStatus.
        :param start_time: The start_time of this OperationsStatus.
        :param status: The status of this OperationsStatus.
        :param terminal_http_status_code: The terminal_http_status_code of this OperationsStatus.
        """
        self.openapi_types = {
            'end_time': datetime,
            'error': ExtendedErrorInfo,
            'id': OperationsStatusIdentifier,
            'percent_complete': float,
            'properties': object,
            'response_content': object,
            'retry_after': str,
            'start_time': datetime,
            'status': str,
            'terminal_http_status_code': str
        }

        self.attribute_map = {
            'end_time': 'endTime',
            'error': 'error',
            'id': 'id',
            'percent_complete': 'percentComplete',
            'properties': 'properties',
            'response_content': 'responseContent',
            'retry_after': 'retryAfter',
            'start_time': 'startTime',
            'status': 'status',
            'terminal_http_status_code': 'terminalHttpStatusCode'
        }

        self._end_time = end_time
        self._error = error
        self._id = id
        self._percent_complete = percent_complete
        self._properties = properties
        self._response_content = response_content
        self._retry_after = retry_after
        self._start_time = start_time
        self._status = status
        self._terminal_http_status_code = terminal_http_status_code

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OperationsStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OperationsStatus of this OperationsStatus.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def end_time(self):
        """Gets the end_time of this OperationsStatus.

        The end time of the operation.

        :return: The end_time of this OperationsStatus.
        :rtype: datetime
        """
        return self._end_time

    @end_time.setter
    def end_time(self, end_time):
        """Sets the end_time of this OperationsStatus.

        The end time of the operation.

        :param end_time: The end_time of this OperationsStatus.
        :type end_time: datetime
        """

        self._end_time = end_time

    @property
    def error(self):
        """Gets the error of this OperationsStatus.


        :return: The error of this OperationsStatus.
        :rtype: ExtendedErrorInfo
        """
        return self._error

    @error.setter
    def error(self, error):
        """Sets the error of this OperationsStatus.


        :param error: The error of this OperationsStatus.
        :type error: ExtendedErrorInfo
        """

        self._error = error

    @property
    def id(self):
        """Gets the id of this OperationsStatus.


        :return: The id of this OperationsStatus.
        :rtype: OperationsStatusIdentifier
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this OperationsStatus.


        :param id: The id of this OperationsStatus.
        :type id: OperationsStatusIdentifier
        """

        self._id = id

    @property
    def percent_complete(self):
        """Gets the percent_complete of this OperationsStatus.

        The completion percentage of the operation.

        :return: The percent_complete of this OperationsStatus.
        :rtype: float
        """
        return self._percent_complete

    @percent_complete.setter
    def percent_complete(self, percent_complete):
        """Sets the percent_complete of this OperationsStatus.

        The completion percentage of the operation.

        :param percent_complete: The percent_complete of this OperationsStatus.
        :type percent_complete: float
        """

        self._percent_complete = percent_complete

    @property
    def properties(self):
        """Gets the properties of this OperationsStatus.

        The internal operation properties.

        :return: The properties of this OperationsStatus.
        :rtype: object
        """
        return self._properties

    @properties.setter
    def properties(self, properties):
        """Sets the properties of this OperationsStatus.

        The internal operation properties.

        :param properties: The properties of this OperationsStatus.
        :type properties: object
        """

        self._properties = properties

    @property
    def response_content(self):
        """Gets the response_content of this OperationsStatus.

        The content of the response.

        :return: The response_content of this OperationsStatus.
        :rtype: object
        """
        return self._response_content

    @response_content.setter
    def response_content(self, response_content):
        """Sets the response_content of this OperationsStatus.

        The content of the response.

        :param response_content: The response_content of this OperationsStatus.
        :type response_content: object
        """

        self._response_content = response_content

    @property
    def retry_after(self):
        """Gets the retry_after of this OperationsStatus.

        The amount of time clients should wait..

        :return: The retry_after of this OperationsStatus.
        :rtype: str
        """
        return self._retry_after

    @retry_after.setter
    def retry_after(self, retry_after):
        """Sets the retry_after of this OperationsStatus.

        The amount of time clients should wait..

        :param retry_after: The retry_after of this OperationsStatus.
        :type retry_after: str
        """

        self._retry_after = retry_after

    @property
    def start_time(self):
        """Gets the start_time of this OperationsStatus.

        The start time of the operation.

        :return: The start_time of this OperationsStatus.
        :rtype: datetime
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this OperationsStatus.

        The start time of the operation.

        :param start_time: The start_time of this OperationsStatus.
        :type start_time: datetime
        """

        self._start_time = start_time

    @property
    def status(self):
        """Gets the status of this OperationsStatus.

        The status of the operation.

        :return: The status of this OperationsStatus.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this OperationsStatus.

        The status of the operation.

        :param status: The status of this OperationsStatus.
        :type status: str
        """

        self._status = status

    @property
    def terminal_http_status_code(self):
        """Gets the terminal_http_status_code of this OperationsStatus.

        The terminal http status code for the operation.

        :return: The terminal_http_status_code of this OperationsStatus.
        :rtype: str
        """
        return self._terminal_http_status_code

    @terminal_http_status_code.setter
    def terminal_http_status_code(self, terminal_http_status_code):
        """Sets the terminal_http_status_code of this OperationsStatus.

        The terminal http status code for the operation.

        :param terminal_http_status_code: The terminal_http_status_code of this OperationsStatus.
        :type terminal_http_status_code: str
        """

        self._terminal_http_status_code = terminal_http_status_code
