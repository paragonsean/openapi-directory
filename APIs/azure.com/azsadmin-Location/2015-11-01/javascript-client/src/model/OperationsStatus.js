/**
 * SubscriptionsManagementClient
 * The Admin Subscriptions Management Client.
 *
 * The version of the OpenAPI document: 2015-11-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ExtendedErrorInfo from './ExtendedErrorInfo';
import OperationsStatusIdentifier from './OperationsStatusIdentifier';

/**
 * The OperationsStatus model module.
 * @module model/OperationsStatus
 * @version 2015-11-01
 */
class OperationsStatus {
    /**
     * Constructs a new <code>OperationsStatus</code>.
     * A long running operation status.
     * @alias module:model/OperationsStatus
     */
    constructor() { 
        
        OperationsStatus.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OperationsStatus</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OperationsStatus} obj Optional instance to populate.
     * @return {module:model/OperationsStatus} The populated <code>OperationsStatus</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OperationsStatus();

            if (data.hasOwnProperty('endTime')) {
                obj['endTime'] = ApiClient.convertToType(data['endTime'], 'Date');
            }
            if (data.hasOwnProperty('error')) {
                obj['error'] = ExtendedErrorInfo.constructFromObject(data['error']);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = OperationsStatusIdentifier.constructFromObject(data['id']);
            }
            if (data.hasOwnProperty('percentComplete')) {
                obj['percentComplete'] = ApiClient.convertToType(data['percentComplete'], 'Number');
            }
            if (data.hasOwnProperty('properties')) {
                obj['properties'] = ApiClient.convertToType(data['properties'], Object);
            }
            if (data.hasOwnProperty('responseContent')) {
                obj['responseContent'] = ApiClient.convertToType(data['responseContent'], Object);
            }
            if (data.hasOwnProperty('retryAfter')) {
                obj['retryAfter'] = ApiClient.convertToType(data['retryAfter'], 'String');
            }
            if (data.hasOwnProperty('startTime')) {
                obj['startTime'] = ApiClient.convertToType(data['startTime'], 'Date');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('terminalHttpStatusCode')) {
                obj['terminalHttpStatusCode'] = ApiClient.convertToType(data['terminalHttpStatusCode'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OperationsStatus</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OperationsStatus</code>.
     */
    static validateJSON(data) {
        // validate the optional field `error`
        if (data['error']) { // data not null
          ExtendedErrorInfo.validateJSON(data['error']);
        }
        // validate the optional field `id`
        if (data['id']) { // data not null
          OperationsStatusIdentifier.validateJSON(data['id']);
        }
        // ensure the json data is a string
        if (data['retryAfter'] && !(typeof data['retryAfter'] === 'string' || data['retryAfter'] instanceof String)) {
            throw new Error("Expected the field `retryAfter` to be a primitive type in the JSON string but got " + data['retryAfter']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is a string
        if (data['terminalHttpStatusCode'] && !(typeof data['terminalHttpStatusCode'] === 'string' || data['terminalHttpStatusCode'] instanceof String)) {
            throw new Error("Expected the field `terminalHttpStatusCode` to be a primitive type in the JSON string but got " + data['terminalHttpStatusCode']);
        }

        return true;
    }


}



/**
 * The end time of the operation.
 * @member {Date} endTime
 */
OperationsStatus.prototype['endTime'] = undefined;

/**
 * @member {module:model/ExtendedErrorInfo} error
 */
OperationsStatus.prototype['error'] = undefined;

/**
 * @member {module:model/OperationsStatusIdentifier} id
 */
OperationsStatus.prototype['id'] = undefined;

/**
 * The completion percentage of the operation.
 * @member {Number} percentComplete
 */
OperationsStatus.prototype['percentComplete'] = undefined;

/**
 * The internal operation properties.
 * @member {Object} properties
 */
OperationsStatus.prototype['properties'] = undefined;

/**
 * The content of the response.
 * @member {Object} responseContent
 */
OperationsStatus.prototype['responseContent'] = undefined;

/**
 * The amount of time clients should wait..
 * @member {String} retryAfter
 */
OperationsStatus.prototype['retryAfter'] = undefined;

/**
 * The start time of the operation.
 * @member {Date} startTime
 */
OperationsStatus.prototype['startTime'] = undefined;

/**
 * The status of the operation.
 * @member {String} status
 */
OperationsStatus.prototype['status'] = undefined;

/**
 * The terminal http status code for the operation.
 * @member {String} terminalHttpStatusCode
 */
OperationsStatus.prototype['terminalHttpStatusCode'] = undefined;






export default OperationsStatus;

