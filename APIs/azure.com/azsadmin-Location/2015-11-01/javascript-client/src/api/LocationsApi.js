/**
 * SubscriptionsManagementClient
 * The Admin Subscriptions Management Client.
 *
 * The version of the OpenAPI document: 2015-11-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Location from '../model/Location';
import LocationList from '../model/LocationList';
import OperationsStatus from '../model/OperationsStatus';

/**
* Locations service.
* @module api/LocationsApi
* @version 2015-11-01
*/
export default class LocationsApi {

    /**
    * Constructs a new LocationsApi. 
    * @alias module:api/LocationsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the locationsCreateOrUpdate operation.
     * @callback module:api/LocationsApi~locationsCreateOrUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Location} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates the specified location.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription.The subscription ID forms part of the URI for every service call.
     * @param {String} location The AzureStack location.
     * @param {String} apiVersion Client Api Version.
     * @param {module:model/Location} newLocation The new location
     * @param {module:api/LocationsApi~locationsCreateOrUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Location}
     */
    locationsCreateOrUpdate(subscriptionId, location, apiVersion, newLocation, callback) {
      let postBody = newLocation;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling locationsCreateOrUpdate");
      }
      // verify the required parameter 'location' is set
      if (location === undefined || location === null) {
        throw new Error("Missing the required parameter 'location' when calling locationsCreateOrUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling locationsCreateOrUpdate");
      }
      // verify the required parameter 'newLocation' is set
      if (newLocation === undefined || newLocation === null) {
        throw new Error("Missing the required parameter 'newLocation' when calling locationsCreateOrUpdate");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'location': location
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Location;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.Subscriptions.Admin/locations/{location}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the locationsGet operation.
     * @callback module:api/LocationsApi~locationsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Location} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the specified location.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription.The subscription ID forms part of the URI for every service call.
     * @param {String} location The AzureStack location.
     * @param {String} apiVersion Client Api Version.
     * @param {module:api/LocationsApi~locationsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Location}
     */
    locationsGet(subscriptionId, location, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling locationsGet");
      }
      // verify the required parameter 'location' is set
      if (location === undefined || location === null) {
        throw new Error("Missing the required parameter 'location' when calling locationsGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling locationsGet");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'location': location
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Location;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.Subscriptions.Admin/locations/{location}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the locationsGetOperationsStatus operation.
     * @callback module:api/LocationsApi~locationsGetOperationsStatusCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OperationsStatus} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the operation status.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription.The subscription ID forms part of the URI for every service call.
     * @param {String} location The AzureStack location.
     * @param {String} operationsStatusName The operation status name.
     * @param {String} apiVersion Client Api Version.
     * @param {module:api/LocationsApi~locationsGetOperationsStatusCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OperationsStatus}
     */
    locationsGetOperationsStatus(subscriptionId, location, operationsStatusName, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling locationsGetOperationsStatus");
      }
      // verify the required parameter 'location' is set
      if (location === undefined || location === null) {
        throw new Error("Missing the required parameter 'location' when calling locationsGetOperationsStatus");
      }
      // verify the required parameter 'operationsStatusName' is set
      if (operationsStatusName === undefined || operationsStatusName === null) {
        throw new Error("Missing the required parameter 'operationsStatusName' when calling locationsGetOperationsStatus");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling locationsGetOperationsStatus");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'location': location,
        'operationsStatusName': operationsStatusName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = OperationsStatus;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.Subscriptions.Admin/locations/{location}/operationsStatus/{operationsStatusName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the locationsList operation.
     * @callback module:api/LocationsApi~locationsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/LocationList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a list of all AzureStack location.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription.The subscription ID forms part of the URI for every service call.
     * @param {String} apiVersion Client Api Version.
     * @param {module:api/LocationsApi~locationsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/LocationList}
     */
    locationsList(subscriptionId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling locationsList");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling locationsList");
      }

      let pathParams = {
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = LocationList;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.Subscriptions.Admin/locations', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
