/**
 * DeletedWebApps API Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-02-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDeletedWebApps_GetDeletedWebAppByLocation_200_response_properties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDeletedWebApps_GetDeletedWebAppByLocation_200_response_properties::OAIDeletedWebApps_GetDeletedWebAppByLocation_200_response_properties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDeletedWebApps_GetDeletedWebAppByLocation_200_response_properties::OAIDeletedWebApps_GetDeletedWebAppByLocation_200_response_properties() {
    this->initializeModel();
}

OAIDeletedWebApps_GetDeletedWebAppByLocation_200_response_properties::~OAIDeletedWebApps_GetDeletedWebAppByLocation_200_response_properties() {}

void OAIDeletedWebApps_GetDeletedWebAppByLocation_200_response_properties::initializeModel() {

    m_deleted_site_id_isSet = false;
    m_deleted_site_id_isValid = false;

    m_deleted_site_name_isSet = false;
    m_deleted_site_name_isValid = false;

    m_deleted_timestamp_isSet = false;
    m_deleted_timestamp_isValid = false;

    m_geo_region_name_isSet = false;
    m_geo_region_name_isValid = false;

    m_kind_isSet = false;
    m_kind_isValid = false;

    m_resource_group_isSet = false;
    m_resource_group_isValid = false;

    m_slot_isSet = false;
    m_slot_isValid = false;

    m_subscription_isSet = false;
    m_subscription_isValid = false;
}

void OAIDeletedWebApps_GetDeletedWebAppByLocation_200_response_properties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDeletedWebApps_GetDeletedWebAppByLocation_200_response_properties::fromJsonObject(QJsonObject json) {

    m_deleted_site_id_isValid = ::OpenAPI::fromJsonValue(m_deleted_site_id, json[QString("deletedSiteId")]);
    m_deleted_site_id_isSet = !json[QString("deletedSiteId")].isNull() && m_deleted_site_id_isValid;

    m_deleted_site_name_isValid = ::OpenAPI::fromJsonValue(m_deleted_site_name, json[QString("deletedSiteName")]);
    m_deleted_site_name_isSet = !json[QString("deletedSiteName")].isNull() && m_deleted_site_name_isValid;

    m_deleted_timestamp_isValid = ::OpenAPI::fromJsonValue(m_deleted_timestamp, json[QString("deletedTimestamp")]);
    m_deleted_timestamp_isSet = !json[QString("deletedTimestamp")].isNull() && m_deleted_timestamp_isValid;

    m_geo_region_name_isValid = ::OpenAPI::fromJsonValue(m_geo_region_name, json[QString("geoRegionName")]);
    m_geo_region_name_isSet = !json[QString("geoRegionName")].isNull() && m_geo_region_name_isValid;

    m_kind_isValid = ::OpenAPI::fromJsonValue(m_kind, json[QString("kind")]);
    m_kind_isSet = !json[QString("kind")].isNull() && m_kind_isValid;

    m_resource_group_isValid = ::OpenAPI::fromJsonValue(m_resource_group, json[QString("resourceGroup")]);
    m_resource_group_isSet = !json[QString("resourceGroup")].isNull() && m_resource_group_isValid;

    m_slot_isValid = ::OpenAPI::fromJsonValue(m_slot, json[QString("slot")]);
    m_slot_isSet = !json[QString("slot")].isNull() && m_slot_isValid;

    m_subscription_isValid = ::OpenAPI::fromJsonValue(m_subscription, json[QString("subscription")]);
    m_subscription_isSet = !json[QString("subscription")].isNull() && m_subscription_isValid;
}

QString OAIDeletedWebApps_GetDeletedWebAppByLocation_200_response_properties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDeletedWebApps_GetDeletedWebAppByLocation_200_response_properties::asJsonObject() const {
    QJsonObject obj;
    if (m_deleted_site_id_isSet) {
        obj.insert(QString("deletedSiteId"), ::OpenAPI::toJsonValue(m_deleted_site_id));
    }
    if (m_deleted_site_name_isSet) {
        obj.insert(QString("deletedSiteName"), ::OpenAPI::toJsonValue(m_deleted_site_name));
    }
    if (m_deleted_timestamp_isSet) {
        obj.insert(QString("deletedTimestamp"), ::OpenAPI::toJsonValue(m_deleted_timestamp));
    }
    if (m_geo_region_name_isSet) {
        obj.insert(QString("geoRegionName"), ::OpenAPI::toJsonValue(m_geo_region_name));
    }
    if (m_kind_isSet) {
        obj.insert(QString("kind"), ::OpenAPI::toJsonValue(m_kind));
    }
    if (m_resource_group_isSet) {
        obj.insert(QString("resourceGroup"), ::OpenAPI::toJsonValue(m_resource_group));
    }
    if (m_slot_isSet) {
        obj.insert(QString("slot"), ::OpenAPI::toJsonValue(m_slot));
    }
    if (m_subscription_isSet) {
        obj.insert(QString("subscription"), ::OpenAPI::toJsonValue(m_subscription));
    }
    return obj;
}

qint32 OAIDeletedWebApps_GetDeletedWebAppByLocation_200_response_properties::getDeletedSiteId() const {
    return m_deleted_site_id;
}
void OAIDeletedWebApps_GetDeletedWebAppByLocation_200_response_properties::setDeletedSiteId(const qint32 &deleted_site_id) {
    m_deleted_site_id = deleted_site_id;
    m_deleted_site_id_isSet = true;
}

bool OAIDeletedWebApps_GetDeletedWebAppByLocation_200_response_properties::is_deleted_site_id_Set() const{
    return m_deleted_site_id_isSet;
}

bool OAIDeletedWebApps_GetDeletedWebAppByLocation_200_response_properties::is_deleted_site_id_Valid() const{
    return m_deleted_site_id_isValid;
}

QString OAIDeletedWebApps_GetDeletedWebAppByLocation_200_response_properties::getDeletedSiteName() const {
    return m_deleted_site_name;
}
void OAIDeletedWebApps_GetDeletedWebAppByLocation_200_response_properties::setDeletedSiteName(const QString &deleted_site_name) {
    m_deleted_site_name = deleted_site_name;
    m_deleted_site_name_isSet = true;
}

bool OAIDeletedWebApps_GetDeletedWebAppByLocation_200_response_properties::is_deleted_site_name_Set() const{
    return m_deleted_site_name_isSet;
}

bool OAIDeletedWebApps_GetDeletedWebAppByLocation_200_response_properties::is_deleted_site_name_Valid() const{
    return m_deleted_site_name_isValid;
}

QString OAIDeletedWebApps_GetDeletedWebAppByLocation_200_response_properties::getDeletedTimestamp() const {
    return m_deleted_timestamp;
}
void OAIDeletedWebApps_GetDeletedWebAppByLocation_200_response_properties::setDeletedTimestamp(const QString &deleted_timestamp) {
    m_deleted_timestamp = deleted_timestamp;
    m_deleted_timestamp_isSet = true;
}

bool OAIDeletedWebApps_GetDeletedWebAppByLocation_200_response_properties::is_deleted_timestamp_Set() const{
    return m_deleted_timestamp_isSet;
}

bool OAIDeletedWebApps_GetDeletedWebAppByLocation_200_response_properties::is_deleted_timestamp_Valid() const{
    return m_deleted_timestamp_isValid;
}

QString OAIDeletedWebApps_GetDeletedWebAppByLocation_200_response_properties::getGeoRegionName() const {
    return m_geo_region_name;
}
void OAIDeletedWebApps_GetDeletedWebAppByLocation_200_response_properties::setGeoRegionName(const QString &geo_region_name) {
    m_geo_region_name = geo_region_name;
    m_geo_region_name_isSet = true;
}

bool OAIDeletedWebApps_GetDeletedWebAppByLocation_200_response_properties::is_geo_region_name_Set() const{
    return m_geo_region_name_isSet;
}

bool OAIDeletedWebApps_GetDeletedWebAppByLocation_200_response_properties::is_geo_region_name_Valid() const{
    return m_geo_region_name_isValid;
}

QString OAIDeletedWebApps_GetDeletedWebAppByLocation_200_response_properties::getKind() const {
    return m_kind;
}
void OAIDeletedWebApps_GetDeletedWebAppByLocation_200_response_properties::setKind(const QString &kind) {
    m_kind = kind;
    m_kind_isSet = true;
}

bool OAIDeletedWebApps_GetDeletedWebAppByLocation_200_response_properties::is_kind_Set() const{
    return m_kind_isSet;
}

bool OAIDeletedWebApps_GetDeletedWebAppByLocation_200_response_properties::is_kind_Valid() const{
    return m_kind_isValid;
}

QString OAIDeletedWebApps_GetDeletedWebAppByLocation_200_response_properties::getResourceGroup() const {
    return m_resource_group;
}
void OAIDeletedWebApps_GetDeletedWebAppByLocation_200_response_properties::setResourceGroup(const QString &resource_group) {
    m_resource_group = resource_group;
    m_resource_group_isSet = true;
}

bool OAIDeletedWebApps_GetDeletedWebAppByLocation_200_response_properties::is_resource_group_Set() const{
    return m_resource_group_isSet;
}

bool OAIDeletedWebApps_GetDeletedWebAppByLocation_200_response_properties::is_resource_group_Valid() const{
    return m_resource_group_isValid;
}

QString OAIDeletedWebApps_GetDeletedWebAppByLocation_200_response_properties::getSlot() const {
    return m_slot;
}
void OAIDeletedWebApps_GetDeletedWebAppByLocation_200_response_properties::setSlot(const QString &slot) {
    m_slot = slot;
    m_slot_isSet = true;
}

bool OAIDeletedWebApps_GetDeletedWebAppByLocation_200_response_properties::is_slot_Set() const{
    return m_slot_isSet;
}

bool OAIDeletedWebApps_GetDeletedWebAppByLocation_200_response_properties::is_slot_Valid() const{
    return m_slot_isValid;
}

QString OAIDeletedWebApps_GetDeletedWebAppByLocation_200_response_properties::getSubscription() const {
    return m_subscription;
}
void OAIDeletedWebApps_GetDeletedWebAppByLocation_200_response_properties::setSubscription(const QString &subscription) {
    m_subscription = subscription;
    m_subscription_isSet = true;
}

bool OAIDeletedWebApps_GetDeletedWebAppByLocation_200_response_properties::is_subscription_Set() const{
    return m_subscription_isSet;
}

bool OAIDeletedWebApps_GetDeletedWebAppByLocation_200_response_properties::is_subscription_Valid() const{
    return m_subscription_isValid;
}

bool OAIDeletedWebApps_GetDeletedWebAppByLocation_200_response_properties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_deleted_site_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_deleted_site_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_deleted_timestamp_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_geo_region_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_kind_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_group_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_slot_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_subscription_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDeletedWebApps_GetDeletedWebAppByLocation_200_response_properties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
