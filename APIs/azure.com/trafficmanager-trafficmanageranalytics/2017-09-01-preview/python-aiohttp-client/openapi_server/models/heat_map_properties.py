# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.heat_map_endpoint import HeatMapEndpoint
from openapi_server.models.traffic_flow import TrafficFlow
from openapi_server import util


class HeatMapProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, end_time: datetime=None, endpoints: List[HeatMapEndpoint]=None, start_time: datetime=None, traffic_flows: List[TrafficFlow]=None):
        """HeatMapProperties - a model defined in OpenAPI

        :param end_time: The end_time of this HeatMapProperties.
        :param endpoints: The endpoints of this HeatMapProperties.
        :param start_time: The start_time of this HeatMapProperties.
        :param traffic_flows: The traffic_flows of this HeatMapProperties.
        """
        self.openapi_types = {
            'end_time': datetime,
            'endpoints': List[HeatMapEndpoint],
            'start_time': datetime,
            'traffic_flows': List[TrafficFlow]
        }

        self.attribute_map = {
            'end_time': 'endTime',
            'endpoints': 'endpoints',
            'start_time': 'startTime',
            'traffic_flows': 'trafficFlows'
        }

        self._end_time = end_time
        self._endpoints = endpoints
        self._start_time = start_time
        self._traffic_flows = traffic_flows

    @classmethod
    def from_dict(cls, dikt: dict) -> 'HeatMapProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The HeatMapProperties of this HeatMapProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def end_time(self):
        """Gets the end_time of this HeatMapProperties.

        The ending of the time window for this HeatMap, exclusive.

        :return: The end_time of this HeatMapProperties.
        :rtype: datetime
        """
        return self._end_time

    @end_time.setter
    def end_time(self, end_time):
        """Sets the end_time of this HeatMapProperties.

        The ending of the time window for this HeatMap, exclusive.

        :param end_time: The end_time of this HeatMapProperties.
        :type end_time: datetime
        """

        self._end_time = end_time

    @property
    def endpoints(self):
        """Gets the endpoints of this HeatMapProperties.

        The endpoints used in this HeatMap calculation.

        :return: The endpoints of this HeatMapProperties.
        :rtype: List[HeatMapEndpoint]
        """
        return self._endpoints

    @endpoints.setter
    def endpoints(self, endpoints):
        """Sets the endpoints of this HeatMapProperties.

        The endpoints used in this HeatMap calculation.

        :param endpoints: The endpoints of this HeatMapProperties.
        :type endpoints: List[HeatMapEndpoint]
        """

        self._endpoints = endpoints

    @property
    def start_time(self):
        """Gets the start_time of this HeatMapProperties.

        The beginning of the time window for this HeatMap, inclusive.

        :return: The start_time of this HeatMapProperties.
        :rtype: datetime
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this HeatMapProperties.

        The beginning of the time window for this HeatMap, inclusive.

        :param start_time: The start_time of this HeatMapProperties.
        :type start_time: datetime
        """

        self._start_time = start_time

    @property
    def traffic_flows(self):
        """Gets the traffic_flows of this HeatMapProperties.

        The traffic flows produced in this HeatMap calculation.

        :return: The traffic_flows of this HeatMapProperties.
        :rtype: List[TrafficFlow]
        """
        return self._traffic_flows

    @traffic_flows.setter
    def traffic_flows(self, traffic_flows):
        """Sets the traffic_flows of this HeatMapProperties.

        The traffic flows produced in this HeatMap calculation.

        :param traffic_flows: The traffic_flows of this HeatMapProperties.
        :type traffic_flows: List[TrafficFlow]
        """

        self._traffic_flows = traffic_flows
