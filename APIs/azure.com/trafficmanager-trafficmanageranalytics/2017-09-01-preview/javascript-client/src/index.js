/**
 * TrafficManagerManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-09-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import CloudError from './model/CloudError';
import CloudErrorBody from './model/CloudErrorBody';
import DeleteOperationResult from './model/DeleteOperationResult';
import HeatMapEndpoint from './model/HeatMapEndpoint';
import HeatMapModel from './model/HeatMapModel';
import HeatMapProperties from './model/HeatMapProperties';
import ProxyResource from './model/ProxyResource';
import QueryExperience from './model/QueryExperience';
import Resource from './model/Resource';
import TrackedResource from './model/TrackedResource';
import TrafficFlow from './model/TrafficFlow';
import TrafficManagerUserMetricsKeyModel from './model/TrafficManagerUserMetricsKeyModel';
import HeatMapsApi from './api/HeatMapsApi';
import RealUserMetricsApi from './api/RealUserMetricsApi';


/**
* JS API client generated by OpenAPI Generator.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var TrafficManagerManagementClient = require('index'); // See note below*.
* var xxxSvc = new TrafficManagerManagementClient.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new TrafficManagerManagementClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new TrafficManagerManagementClient.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new TrafficManagerManagementClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2017-09-01-preview
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The CloudError model constructor.
     * @property {module:model/CloudError}
     */
    CloudError,

    /**
     * The CloudErrorBody model constructor.
     * @property {module:model/CloudErrorBody}
     */
    CloudErrorBody,

    /**
     * The DeleteOperationResult model constructor.
     * @property {module:model/DeleteOperationResult}
     */
    DeleteOperationResult,

    /**
     * The HeatMapEndpoint model constructor.
     * @property {module:model/HeatMapEndpoint}
     */
    HeatMapEndpoint,

    /**
     * The HeatMapModel model constructor.
     * @property {module:model/HeatMapModel}
     */
    HeatMapModel,

    /**
     * The HeatMapProperties model constructor.
     * @property {module:model/HeatMapProperties}
     */
    HeatMapProperties,

    /**
     * The ProxyResource model constructor.
     * @property {module:model/ProxyResource}
     */
    ProxyResource,

    /**
     * The QueryExperience model constructor.
     * @property {module:model/QueryExperience}
     */
    QueryExperience,

    /**
     * The Resource model constructor.
     * @property {module:model/Resource}
     */
    Resource,

    /**
     * The TrackedResource model constructor.
     * @property {module:model/TrackedResource}
     */
    TrackedResource,

    /**
     * The TrafficFlow model constructor.
     * @property {module:model/TrafficFlow}
     */
    TrafficFlow,

    /**
     * The TrafficManagerUserMetricsKeyModel model constructor.
     * @property {module:model/TrafficManagerUserMetricsKeyModel}
     */
    TrafficManagerUserMetricsKeyModel,

    /**
    * The HeatMapsApi service constructor.
    * @property {module:api/HeatMapsApi}
    */
    HeatMapsApi,

    /**
    * The RealUserMetricsApi service constructor.
    * @property {module:api/RealUserMetricsApi}
    */
    RealUserMetricsApi
};
