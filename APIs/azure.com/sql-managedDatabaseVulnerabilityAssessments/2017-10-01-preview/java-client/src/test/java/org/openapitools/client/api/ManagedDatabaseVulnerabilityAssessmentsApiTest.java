/*
 * SqlManagementClient
 * The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.
 *
 * The version of the OpenAPI document: 2017-10-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.DatabaseVulnerabilityAssessment;
import org.openapitools.client.model.DatabaseVulnerabilityAssessmentListResult;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ManagedDatabaseVulnerabilityAssessmentsApi
 */
@Disabled
public class ManagedDatabaseVulnerabilityAssessmentsApiTest {

    private final ManagedDatabaseVulnerabilityAssessmentsApi api = new ManagedDatabaseVulnerabilityAssessmentsApi();

    /**
     * Creates or updates the database&#39;s vulnerability assessment.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void managedDatabaseVulnerabilityAssessmentsCreateOrUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String managedInstanceName = null;
        String databaseName = null;
        String vulnerabilityAssessmentName = null;
        String subscriptionId = null;
        String apiVersion = null;
        DatabaseVulnerabilityAssessment parameters = null;
        DatabaseVulnerabilityAssessment response = api.managedDatabaseVulnerabilityAssessmentsCreateOrUpdate(resourceGroupName, managedInstanceName, databaseName, vulnerabilityAssessmentName, subscriptionId, apiVersion, parameters);
        // TODO: test validations
    }

    /**
     * Removes the database&#39;s vulnerability assessment.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void managedDatabaseVulnerabilityAssessmentsDeleteTest() throws ApiException {
        String resourceGroupName = null;
        String managedInstanceName = null;
        String databaseName = null;
        String vulnerabilityAssessmentName = null;
        String subscriptionId = null;
        String apiVersion = null;
        api.managedDatabaseVulnerabilityAssessmentsDelete(resourceGroupName, managedInstanceName, databaseName, vulnerabilityAssessmentName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets the database&#39;s vulnerability assessment.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void managedDatabaseVulnerabilityAssessmentsGetTest() throws ApiException {
        String resourceGroupName = null;
        String managedInstanceName = null;
        String databaseName = null;
        String vulnerabilityAssessmentName = null;
        String subscriptionId = null;
        String apiVersion = null;
        DatabaseVulnerabilityAssessment response = api.managedDatabaseVulnerabilityAssessmentsGet(resourceGroupName, managedInstanceName, databaseName, vulnerabilityAssessmentName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Lists the vulnerability assessments of a managed database.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void managedDatabaseVulnerabilityAssessmentsListByDatabaseTest() throws ApiException {
        String resourceGroupName = null;
        String managedInstanceName = null;
        String databaseName = null;
        String subscriptionId = null;
        String apiVersion = null;
        DatabaseVulnerabilityAssessmentListResult response = api.managedDatabaseVulnerabilityAssessmentsListByDatabase(resourceGroupName, managedInstanceName, databaseName, subscriptionId, apiVersion);
        // TODO: test validations
    }

}
