/**
 * SqlManagementClient
 * The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.
 *
 * The version of the OpenAPI document: 2017-10-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDatabaseVulnerabilityAssessmentProperties.h
 *
 * Properties of a database Vulnerability Assessment.
 */

#ifndef OAIDatabaseVulnerabilityAssessmentProperties_H
#define OAIDatabaseVulnerabilityAssessmentProperties_H

#include <QJsonObject>

#include "OAIVulnerabilityAssessmentRecurringScansProperties.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIVulnerabilityAssessmentRecurringScansProperties;

class OAIDatabaseVulnerabilityAssessmentProperties : public OAIObject {
public:
    OAIDatabaseVulnerabilityAssessmentProperties();
    OAIDatabaseVulnerabilityAssessmentProperties(QString json);
    ~OAIDatabaseVulnerabilityAssessmentProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIVulnerabilityAssessmentRecurringScansProperties getRecurringScans() const;
    void setRecurringScans(const OAIVulnerabilityAssessmentRecurringScansProperties &recurring_scans);
    bool is_recurring_scans_Set() const;
    bool is_recurring_scans_Valid() const;

    QString getStorageAccountAccessKey() const;
    void setStorageAccountAccessKey(const QString &storage_account_access_key);
    bool is_storage_account_access_key_Set() const;
    bool is_storage_account_access_key_Valid() const;

    QString getStorageContainerPath() const;
    void setStorageContainerPath(const QString &storage_container_path);
    bool is_storage_container_path_Set() const;
    bool is_storage_container_path_Valid() const;

    QString getStorageContainerSasKey() const;
    void setStorageContainerSasKey(const QString &storage_container_sas_key);
    bool is_storage_container_sas_key_Set() const;
    bool is_storage_container_sas_key_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIVulnerabilityAssessmentRecurringScansProperties m_recurring_scans;
    bool m_recurring_scans_isSet;
    bool m_recurring_scans_isValid;

    QString m_storage_account_access_key;
    bool m_storage_account_access_key_isSet;
    bool m_storage_account_access_key_isValid;

    QString m_storage_container_path;
    bool m_storage_container_path_isSet;
    bool m_storage_container_path_isValid;

    QString m_storage_container_sas_key;
    bool m_storage_container_sas_key_isSet;
    bool m_storage_container_sas_key_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDatabaseVulnerabilityAssessmentProperties)

#endif // OAIDatabaseVulnerabilityAssessmentProperties_H
