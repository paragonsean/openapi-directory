/**
 * AutomationManagement
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-05-15-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISourceControlSyncJobProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISourceControlSyncJobProperties::OAISourceControlSyncJobProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISourceControlSyncJobProperties::OAISourceControlSyncJobProperties() {
    this->initializeModel();
}

OAISourceControlSyncJobProperties::~OAISourceControlSyncJobProperties() {}

void OAISourceControlSyncJobProperties::initializeModel() {

    m_creation_time_isSet = false;
    m_creation_time_isValid = false;

    m_end_time_isSet = false;
    m_end_time_isValid = false;

    m_provisioning_state_isSet = false;
    m_provisioning_state_isValid = false;

    m_source_control_sync_job_id_isSet = false;
    m_source_control_sync_job_id_isValid = false;

    m_start_time_isSet = false;
    m_start_time_isValid = false;

    m_sync_type_isSet = false;
    m_sync_type_isValid = false;
}

void OAISourceControlSyncJobProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISourceControlSyncJobProperties::fromJsonObject(QJsonObject json) {

    m_creation_time_isValid = ::OpenAPI::fromJsonValue(m_creation_time, json[QString("creationTime")]);
    m_creation_time_isSet = !json[QString("creationTime")].isNull() && m_creation_time_isValid;

    m_end_time_isValid = ::OpenAPI::fromJsonValue(m_end_time, json[QString("endTime")]);
    m_end_time_isSet = !json[QString("endTime")].isNull() && m_end_time_isValid;

    m_provisioning_state_isValid = ::OpenAPI::fromJsonValue(m_provisioning_state, json[QString("provisioningState")]);
    m_provisioning_state_isSet = !json[QString("provisioningState")].isNull() && m_provisioning_state_isValid;

    m_source_control_sync_job_id_isValid = ::OpenAPI::fromJsonValue(m_source_control_sync_job_id, json[QString("sourceControlSyncJobId")]);
    m_source_control_sync_job_id_isSet = !json[QString("sourceControlSyncJobId")].isNull() && m_source_control_sync_job_id_isValid;

    m_start_time_isValid = ::OpenAPI::fromJsonValue(m_start_time, json[QString("startTime")]);
    m_start_time_isSet = !json[QString("startTime")].isNull() && m_start_time_isValid;

    m_sync_type_isValid = ::OpenAPI::fromJsonValue(m_sync_type, json[QString("syncType")]);
    m_sync_type_isSet = !json[QString("syncType")].isNull() && m_sync_type_isValid;
}

QString OAISourceControlSyncJobProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISourceControlSyncJobProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_creation_time_isSet) {
        obj.insert(QString("creationTime"), ::OpenAPI::toJsonValue(m_creation_time));
    }
    if (m_end_time_isSet) {
        obj.insert(QString("endTime"), ::OpenAPI::toJsonValue(m_end_time));
    }
    if (m_provisioning_state_isSet) {
        obj.insert(QString("provisioningState"), ::OpenAPI::toJsonValue(m_provisioning_state));
    }
    if (m_source_control_sync_job_id_isSet) {
        obj.insert(QString("sourceControlSyncJobId"), ::OpenAPI::toJsonValue(m_source_control_sync_job_id));
    }
    if (m_start_time_isSet) {
        obj.insert(QString("startTime"), ::OpenAPI::toJsonValue(m_start_time));
    }
    if (m_sync_type_isSet) {
        obj.insert(QString("syncType"), ::OpenAPI::toJsonValue(m_sync_type));
    }
    return obj;
}

QDateTime OAISourceControlSyncJobProperties::getCreationTime() const {
    return m_creation_time;
}
void OAISourceControlSyncJobProperties::setCreationTime(const QDateTime &creation_time) {
    m_creation_time = creation_time;
    m_creation_time_isSet = true;
}

bool OAISourceControlSyncJobProperties::is_creation_time_Set() const{
    return m_creation_time_isSet;
}

bool OAISourceControlSyncJobProperties::is_creation_time_Valid() const{
    return m_creation_time_isValid;
}

QDateTime OAISourceControlSyncJobProperties::getEndTime() const {
    return m_end_time;
}
void OAISourceControlSyncJobProperties::setEndTime(const QDateTime &end_time) {
    m_end_time = end_time;
    m_end_time_isSet = true;
}

bool OAISourceControlSyncJobProperties::is_end_time_Set() const{
    return m_end_time_isSet;
}

bool OAISourceControlSyncJobProperties::is_end_time_Valid() const{
    return m_end_time_isValid;
}

QString OAISourceControlSyncJobProperties::getProvisioningState() const {
    return m_provisioning_state;
}
void OAISourceControlSyncJobProperties::setProvisioningState(const QString &provisioning_state) {
    m_provisioning_state = provisioning_state;
    m_provisioning_state_isSet = true;
}

bool OAISourceControlSyncJobProperties::is_provisioning_state_Set() const{
    return m_provisioning_state_isSet;
}

bool OAISourceControlSyncJobProperties::is_provisioning_state_Valid() const{
    return m_provisioning_state_isValid;
}

QString OAISourceControlSyncJobProperties::getSourceControlSyncJobId() const {
    return m_source_control_sync_job_id;
}
void OAISourceControlSyncJobProperties::setSourceControlSyncJobId(const QString &source_control_sync_job_id) {
    m_source_control_sync_job_id = source_control_sync_job_id;
    m_source_control_sync_job_id_isSet = true;
}

bool OAISourceControlSyncJobProperties::is_source_control_sync_job_id_Set() const{
    return m_source_control_sync_job_id_isSet;
}

bool OAISourceControlSyncJobProperties::is_source_control_sync_job_id_Valid() const{
    return m_source_control_sync_job_id_isValid;
}

QDateTime OAISourceControlSyncJobProperties::getStartTime() const {
    return m_start_time;
}
void OAISourceControlSyncJobProperties::setStartTime(const QDateTime &start_time) {
    m_start_time = start_time;
    m_start_time_isSet = true;
}

bool OAISourceControlSyncJobProperties::is_start_time_Set() const{
    return m_start_time_isSet;
}

bool OAISourceControlSyncJobProperties::is_start_time_Valid() const{
    return m_start_time_isValid;
}

QString OAISourceControlSyncJobProperties::getSyncType() const {
    return m_sync_type;
}
void OAISourceControlSyncJobProperties::setSyncType(const QString &sync_type) {
    m_sync_type = sync_type;
    m_sync_type_isSet = true;
}

bool OAISourceControlSyncJobProperties::is_sync_type_Set() const{
    return m_sync_type_isSet;
}

bool OAISourceControlSyncJobProperties::is_sync_type_Valid() const{
    return m_sync_type_isValid;
}

bool OAISourceControlSyncJobProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_creation_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_end_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_provisioning_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_source_control_sync_job_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sync_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISourceControlSyncJobProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
