# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SourceControlSyncJobProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, creation_time: datetime=None, end_time: datetime=None, provisioning_state: str=None, source_control_sync_job_id: str=None, start_time: datetime=None, sync_type: str=None):
        """SourceControlSyncJobProperties - a model defined in OpenAPI

        :param creation_time: The creation_time of this SourceControlSyncJobProperties.
        :param end_time: The end_time of this SourceControlSyncJobProperties.
        :param provisioning_state: The provisioning_state of this SourceControlSyncJobProperties.
        :param source_control_sync_job_id: The source_control_sync_job_id of this SourceControlSyncJobProperties.
        :param start_time: The start_time of this SourceControlSyncJobProperties.
        :param sync_type: The sync_type of this SourceControlSyncJobProperties.
        """
        self.openapi_types = {
            'creation_time': datetime,
            'end_time': datetime,
            'provisioning_state': str,
            'source_control_sync_job_id': str,
            'start_time': datetime,
            'sync_type': str
        }

        self.attribute_map = {
            'creation_time': 'creationTime',
            'end_time': 'endTime',
            'provisioning_state': 'provisioningState',
            'source_control_sync_job_id': 'sourceControlSyncJobId',
            'start_time': 'startTime',
            'sync_type': 'syncType'
        }

        self._creation_time = creation_time
        self._end_time = end_time
        self._provisioning_state = provisioning_state
        self._source_control_sync_job_id = source_control_sync_job_id
        self._start_time = start_time
        self._sync_type = sync_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SourceControlSyncJobProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SourceControlSyncJobProperties of this SourceControlSyncJobProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def creation_time(self):
        """Gets the creation_time of this SourceControlSyncJobProperties.

        The creation time of the job.

        :return: The creation_time of this SourceControlSyncJobProperties.
        :rtype: datetime
        """
        return self._creation_time

    @creation_time.setter
    def creation_time(self, creation_time):
        """Sets the creation_time of this SourceControlSyncJobProperties.

        The creation time of the job.

        :param creation_time: The creation_time of this SourceControlSyncJobProperties.
        :type creation_time: datetime
        """

        self._creation_time = creation_time

    @property
    def end_time(self):
        """Gets the end_time of this SourceControlSyncJobProperties.

        The end time of the job.

        :return: The end_time of this SourceControlSyncJobProperties.
        :rtype: datetime
        """
        return self._end_time

    @end_time.setter
    def end_time(self, end_time):
        """Sets the end_time of this SourceControlSyncJobProperties.

        The end time of the job.

        :param end_time: The end_time of this SourceControlSyncJobProperties.
        :type end_time: datetime
        """

        self._end_time = end_time

    @property
    def provisioning_state(self):
        """Gets the provisioning_state of this SourceControlSyncJobProperties.

        The provisioning state of the job.

        :return: The provisioning_state of this SourceControlSyncJobProperties.
        :rtype: str
        """
        return self._provisioning_state

    @provisioning_state.setter
    def provisioning_state(self, provisioning_state):
        """Sets the provisioning_state of this SourceControlSyncJobProperties.

        The provisioning state of the job.

        :param provisioning_state: The provisioning_state of this SourceControlSyncJobProperties.
        :type provisioning_state: str
        """
        allowed_values = ["Completed", "Failed", "Running"]  # noqa: E501
        if provisioning_state not in allowed_values:
            raise ValueError(
                "Invalid value for `provisioning_state` ({0}), must be one of {1}"
                .format(provisioning_state, allowed_values)
            )

        self._provisioning_state = provisioning_state

    @property
    def source_control_sync_job_id(self):
        """Gets the source_control_sync_job_id of this SourceControlSyncJobProperties.

        The source control sync job id.

        :return: The source_control_sync_job_id of this SourceControlSyncJobProperties.
        :rtype: str
        """
        return self._source_control_sync_job_id

    @source_control_sync_job_id.setter
    def source_control_sync_job_id(self, source_control_sync_job_id):
        """Sets the source_control_sync_job_id of this SourceControlSyncJobProperties.

        The source control sync job id.

        :param source_control_sync_job_id: The source_control_sync_job_id of this SourceControlSyncJobProperties.
        :type source_control_sync_job_id: str
        """

        self._source_control_sync_job_id = source_control_sync_job_id

    @property
    def start_time(self):
        """Gets the start_time of this SourceControlSyncJobProperties.

        The start time of the job.

        :return: The start_time of this SourceControlSyncJobProperties.
        :rtype: datetime
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this SourceControlSyncJobProperties.

        The start time of the job.

        :param start_time: The start_time of this SourceControlSyncJobProperties.
        :type start_time: datetime
        """

        self._start_time = start_time

    @property
    def sync_type(self):
        """Gets the sync_type of this SourceControlSyncJobProperties.

        The sync type.

        :return: The sync_type of this SourceControlSyncJobProperties.
        :rtype: str
        """
        return self._sync_type

    @sync_type.setter
    def sync_type(self, sync_type):
        """Sets the sync_type of this SourceControlSyncJobProperties.

        The sync type.

        :param sync_type: The sync_type of this SourceControlSyncJobProperties.
        :type sync_type: str
        """
        allowed_values = ["PartialSync", "FullSync"]  # noqa: E501
        if sync_type not in allowed_values:
            raise ValueError(
                "Invalid value for `sync_type` ({0}), must be one of {1}"
                .format(sync_type, allowed_values)
            )

        self._sync_type = sync_type
