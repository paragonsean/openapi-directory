/**
 * AutomationManagement
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-05-15-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import SourceControlSyncJob from '../model/SourceControlSyncJob';
import SourceControlSyncJobById from '../model/SourceControlSyncJobById';
import SourceControlSyncJobCreateParameters from '../model/SourceControlSyncJobCreateParameters';
import SourceControlSyncJobListByAutomationAccountDefaultResponse from '../model/SourceControlSyncJobListByAutomationAccountDefaultResponse';
import SourceControlSyncJobListResult from '../model/SourceControlSyncJobListResult';

/**
* SourceControlSyncJob service.
* @module api/SourceControlSyncJobApi
* @version 2017-05-15-preview
*/
export default class SourceControlSyncJobApi {

    /**
    * Constructs a new SourceControlSyncJobApi. 
    * @alias module:api/SourceControlSyncJobApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the sourceControlSyncJobCreate operation.
     * @callback module:api/SourceControlSyncJobApi~sourceControlSyncJobCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SourceControlSyncJob} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates the sync job for a source control.
     * @param {String} resourceGroupName Name of an Azure Resource group.
     * @param {String} automationAccountName The name of the automation account.
     * @param {String} sourceControlName The source control name.
     * @param {String} sourceControlSyncJobId The source control sync job id.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} apiVersion Client Api Version.
     * @param {module:model/SourceControlSyncJobCreateParameters} parameters The parameters supplied to the create source control sync job operation.
     * @param {module:api/SourceControlSyncJobApi~sourceControlSyncJobCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SourceControlSyncJob}
     */
    sourceControlSyncJobCreate(resourceGroupName, automationAccountName, sourceControlName, sourceControlSyncJobId, subscriptionId, apiVersion, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling sourceControlSyncJobCreate");
      }
      // verify the required parameter 'automationAccountName' is set
      if (automationAccountName === undefined || automationAccountName === null) {
        throw new Error("Missing the required parameter 'automationAccountName' when calling sourceControlSyncJobCreate");
      }
      // verify the required parameter 'sourceControlName' is set
      if (sourceControlName === undefined || sourceControlName === null) {
        throw new Error("Missing the required parameter 'sourceControlName' when calling sourceControlSyncJobCreate");
      }
      // verify the required parameter 'sourceControlSyncJobId' is set
      if (sourceControlSyncJobId === undefined || sourceControlSyncJobId === null) {
        throw new Error("Missing the required parameter 'sourceControlSyncJobId' when calling sourceControlSyncJobCreate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling sourceControlSyncJobCreate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling sourceControlSyncJobCreate");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling sourceControlSyncJobCreate");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'automationAccountName': automationAccountName,
        'sourceControlName': sourceControlName,
        'sourceControlSyncJobId': sourceControlSyncJobId,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = SourceControlSyncJob;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/sourceControls/{sourceControlName}/sourceControlSyncJobs/{sourceControlSyncJobId}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the sourceControlSyncJobGet operation.
     * @callback module:api/SourceControlSyncJobApi~sourceControlSyncJobGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SourceControlSyncJobById} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve the source control sync job identified by job id.
     * @param {String} resourceGroupName Name of an Azure Resource group.
     * @param {String} automationAccountName The name of the automation account.
     * @param {String} sourceControlName The source control name.
     * @param {String} sourceControlSyncJobId The source control sync job id.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} apiVersion Client Api Version.
     * @param {module:api/SourceControlSyncJobApi~sourceControlSyncJobGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SourceControlSyncJobById}
     */
    sourceControlSyncJobGet(resourceGroupName, automationAccountName, sourceControlName, sourceControlSyncJobId, subscriptionId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling sourceControlSyncJobGet");
      }
      // verify the required parameter 'automationAccountName' is set
      if (automationAccountName === undefined || automationAccountName === null) {
        throw new Error("Missing the required parameter 'automationAccountName' when calling sourceControlSyncJobGet");
      }
      // verify the required parameter 'sourceControlName' is set
      if (sourceControlName === undefined || sourceControlName === null) {
        throw new Error("Missing the required parameter 'sourceControlName' when calling sourceControlSyncJobGet");
      }
      // verify the required parameter 'sourceControlSyncJobId' is set
      if (sourceControlSyncJobId === undefined || sourceControlSyncJobId === null) {
        throw new Error("Missing the required parameter 'sourceControlSyncJobId' when calling sourceControlSyncJobGet");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling sourceControlSyncJobGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling sourceControlSyncJobGet");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'automationAccountName': automationAccountName,
        'sourceControlName': sourceControlName,
        'sourceControlSyncJobId': sourceControlSyncJobId,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = SourceControlSyncJobById;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/sourceControls/{sourceControlName}/sourceControlSyncJobs/{sourceControlSyncJobId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the sourceControlSyncJobListByAutomationAccount operation.
     * @callback module:api/SourceControlSyncJobApi~sourceControlSyncJobListByAutomationAccountCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SourceControlSyncJobListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve a list of source control sync jobs.
     * @param {String} resourceGroupName Name of an Azure Resource group.
     * @param {String} automationAccountName The name of the automation account.
     * @param {String} sourceControlName The source control name.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} apiVersion Client Api Version.
     * @param {Object} opts Optional parameters
     * @param {String} [filter] The filter to apply on the operation.
     * @param {module:api/SourceControlSyncJobApi~sourceControlSyncJobListByAutomationAccountCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SourceControlSyncJobListResult}
     */
    sourceControlSyncJobListByAutomationAccount(resourceGroupName, automationAccountName, sourceControlName, subscriptionId, apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling sourceControlSyncJobListByAutomationAccount");
      }
      // verify the required parameter 'automationAccountName' is set
      if (automationAccountName === undefined || automationAccountName === null) {
        throw new Error("Missing the required parameter 'automationAccountName' when calling sourceControlSyncJobListByAutomationAccount");
      }
      // verify the required parameter 'sourceControlName' is set
      if (sourceControlName === undefined || sourceControlName === null) {
        throw new Error("Missing the required parameter 'sourceControlName' when calling sourceControlSyncJobListByAutomationAccount");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling sourceControlSyncJobListByAutomationAccount");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling sourceControlSyncJobListByAutomationAccount");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'automationAccountName': automationAccountName,
        'sourceControlName': sourceControlName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        '$filter': opts['filter'],
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = SourceControlSyncJobListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/sourceControls/{sourceControlName}/sourceControlSyncJobs', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
