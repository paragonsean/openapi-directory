/**
 * AutomationManagement
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-05-15-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SourceControlSyncJobProperties model module.
 * @module model/SourceControlSyncJobProperties
 * @version 2017-05-15-preview
 */
class SourceControlSyncJobProperties {
    /**
     * Constructs a new <code>SourceControlSyncJobProperties</code>.
     * Definition of source control sync job properties.
     * @alias module:model/SourceControlSyncJobProperties
     */
    constructor() { 
        
        SourceControlSyncJobProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SourceControlSyncJobProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SourceControlSyncJobProperties} obj Optional instance to populate.
     * @return {module:model/SourceControlSyncJobProperties} The populated <code>SourceControlSyncJobProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SourceControlSyncJobProperties();

            if (data.hasOwnProperty('creationTime')) {
                obj['creationTime'] = ApiClient.convertToType(data['creationTime'], 'Date');
            }
            if (data.hasOwnProperty('endTime')) {
                obj['endTime'] = ApiClient.convertToType(data['endTime'], 'Date');
            }
            if (data.hasOwnProperty('provisioningState')) {
                obj['provisioningState'] = ApiClient.convertToType(data['provisioningState'], 'String');
            }
            if (data.hasOwnProperty('sourceControlSyncJobId')) {
                obj['sourceControlSyncJobId'] = ApiClient.convertToType(data['sourceControlSyncJobId'], 'String');
            }
            if (data.hasOwnProperty('startTime')) {
                obj['startTime'] = ApiClient.convertToType(data['startTime'], 'Date');
            }
            if (data.hasOwnProperty('syncType')) {
                obj['syncType'] = ApiClient.convertToType(data['syncType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SourceControlSyncJobProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SourceControlSyncJobProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['provisioningState'] && !(typeof data['provisioningState'] === 'string' || data['provisioningState'] instanceof String)) {
            throw new Error("Expected the field `provisioningState` to be a primitive type in the JSON string but got " + data['provisioningState']);
        }
        // ensure the json data is a string
        if (data['sourceControlSyncJobId'] && !(typeof data['sourceControlSyncJobId'] === 'string' || data['sourceControlSyncJobId'] instanceof String)) {
            throw new Error("Expected the field `sourceControlSyncJobId` to be a primitive type in the JSON string but got " + data['sourceControlSyncJobId']);
        }
        // ensure the json data is a string
        if (data['syncType'] && !(typeof data['syncType'] === 'string' || data['syncType'] instanceof String)) {
            throw new Error("Expected the field `syncType` to be a primitive type in the JSON string but got " + data['syncType']);
        }

        return true;
    }


}



/**
 * The creation time of the job.
 * @member {Date} creationTime
 */
SourceControlSyncJobProperties.prototype['creationTime'] = undefined;

/**
 * The end time of the job.
 * @member {Date} endTime
 */
SourceControlSyncJobProperties.prototype['endTime'] = undefined;

/**
 * The provisioning state of the job.
 * @member {module:model/SourceControlSyncJobProperties.ProvisioningStateEnum} provisioningState
 */
SourceControlSyncJobProperties.prototype['provisioningState'] = undefined;

/**
 * The source control sync job id.
 * @member {String} sourceControlSyncJobId
 */
SourceControlSyncJobProperties.prototype['sourceControlSyncJobId'] = undefined;

/**
 * The start time of the job.
 * @member {Date} startTime
 */
SourceControlSyncJobProperties.prototype['startTime'] = undefined;

/**
 * The sync type.
 * @member {module:model/SourceControlSyncJobProperties.SyncTypeEnum} syncType
 */
SourceControlSyncJobProperties.prototype['syncType'] = undefined;





/**
 * Allowed values for the <code>provisioningState</code> property.
 * @enum {String}
 * @readonly
 */
SourceControlSyncJobProperties['ProvisioningStateEnum'] = {

    /**
     * value: "Completed"
     * @const
     */
    "Completed": "Completed",

    /**
     * value: "Failed"
     * @const
     */
    "Failed": "Failed",

    /**
     * value: "Running"
     * @const
     */
    "Running": "Running"
};


/**
 * Allowed values for the <code>syncType</code> property.
 * @enum {String}
 * @readonly
 */
SourceControlSyncJobProperties['SyncTypeEnum'] = {

    /**
     * value: "PartialSync"
     * @const
     */
    "PartialSync": "PartialSync",

    /**
     * value: "FullSync"
     * @const
     */
    "FullSync": "FullSync"
};



export default SourceControlSyncJobProperties;

