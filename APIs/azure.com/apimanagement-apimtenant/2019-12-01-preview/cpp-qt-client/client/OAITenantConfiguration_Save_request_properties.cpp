/**
 * ApiManagementClient
 * Use these REST APIs for performing operations on tenant entity associated with your Azure API Management deployment. Using this entity you can manage properties and configuration that apply to the entire API Management service instance.
 *
 * The version of the OpenAPI document: 2019-12-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITenantConfiguration_Save_request_properties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITenantConfiguration_Save_request_properties::OAITenantConfiguration_Save_request_properties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITenantConfiguration_Save_request_properties::OAITenantConfiguration_Save_request_properties() {
    this->initializeModel();
}

OAITenantConfiguration_Save_request_properties::~OAITenantConfiguration_Save_request_properties() {}

void OAITenantConfiguration_Save_request_properties::initializeModel() {

    m_branch_isSet = false;
    m_branch_isValid = false;

    m_force_isSet = false;
    m_force_isValid = false;
}

void OAITenantConfiguration_Save_request_properties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITenantConfiguration_Save_request_properties::fromJsonObject(QJsonObject json) {

    m_branch_isValid = ::OpenAPI::fromJsonValue(m_branch, json[QString("branch")]);
    m_branch_isSet = !json[QString("branch")].isNull() && m_branch_isValid;

    m_force_isValid = ::OpenAPI::fromJsonValue(m_force, json[QString("force")]);
    m_force_isSet = !json[QString("force")].isNull() && m_force_isValid;
}

QString OAITenantConfiguration_Save_request_properties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITenantConfiguration_Save_request_properties::asJsonObject() const {
    QJsonObject obj;
    if (m_branch_isSet) {
        obj.insert(QString("branch"), ::OpenAPI::toJsonValue(m_branch));
    }
    if (m_force_isSet) {
        obj.insert(QString("force"), ::OpenAPI::toJsonValue(m_force));
    }
    return obj;
}

QString OAITenantConfiguration_Save_request_properties::getBranch() const {
    return m_branch;
}
void OAITenantConfiguration_Save_request_properties::setBranch(const QString &branch) {
    m_branch = branch;
    m_branch_isSet = true;
}

bool OAITenantConfiguration_Save_request_properties::is_branch_Set() const{
    return m_branch_isSet;
}

bool OAITenantConfiguration_Save_request_properties::is_branch_Valid() const{
    return m_branch_isValid;
}

bool OAITenantConfiguration_Save_request_properties::isForce() const {
    return m_force;
}
void OAITenantConfiguration_Save_request_properties::setForce(const bool &force) {
    m_force = force;
    m_force_isSet = true;
}

bool OAITenantConfiguration_Save_request_properties::is_force_Set() const{
    return m_force_isSet;
}

bool OAITenantConfiguration_Save_request_properties::is_force_Valid() const{
    return m_force_isValid;
}

bool OAITenantConfiguration_Save_request_properties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_branch_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_force_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITenantConfiguration_Save_request_properties::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_branch_isValid && true;
}

} // namespace OpenAPI
