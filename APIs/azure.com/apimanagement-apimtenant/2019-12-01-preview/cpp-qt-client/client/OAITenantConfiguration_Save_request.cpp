/**
 * ApiManagementClient
 * Use these REST APIs for performing operations on tenant entity associated with your Azure API Management deployment. Using this entity you can manage properties and configuration that apply to the entire API Management service instance.
 *
 * The version of the OpenAPI document: 2019-12-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITenantConfiguration_Save_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITenantConfiguration_Save_request::OAITenantConfiguration_Save_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITenantConfiguration_Save_request::OAITenantConfiguration_Save_request() {
    this->initializeModel();
}

OAITenantConfiguration_Save_request::~OAITenantConfiguration_Save_request() {}

void OAITenantConfiguration_Save_request::initializeModel() {

    m_properties_isSet = false;
    m_properties_isValid = false;
}

void OAITenantConfiguration_Save_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITenantConfiguration_Save_request::fromJsonObject(QJsonObject json) {

    m_properties_isValid = ::OpenAPI::fromJsonValue(m_properties, json[QString("properties")]);
    m_properties_isSet = !json[QString("properties")].isNull() && m_properties_isValid;
}

QString OAITenantConfiguration_Save_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITenantConfiguration_Save_request::asJsonObject() const {
    QJsonObject obj;
    if (m_properties.isSet()) {
        obj.insert(QString("properties"), ::OpenAPI::toJsonValue(m_properties));
    }
    return obj;
}

OAITenantConfiguration_Save_request_properties OAITenantConfiguration_Save_request::getProperties() const {
    return m_properties;
}
void OAITenantConfiguration_Save_request::setProperties(const OAITenantConfiguration_Save_request_properties &properties) {
    m_properties = properties;
    m_properties_isSet = true;
}

bool OAITenantConfiguration_Save_request::is_properties_Set() const{
    return m_properties_isSet;
}

bool OAITenantConfiguration_Save_request::is_properties_Valid() const{
    return m_properties_isValid;
}

bool OAITenantConfiguration_Save_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_properties.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITenantConfiguration_Save_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
