/**
 * ApiManagementClient
 * Use these REST APIs for performing operations on tenant entity associated with your Azure API Management deployment. Using this entity you can manage properties and configuration that apply to the entire API Management service instance.
 *
 * The version of the OpenAPI document: 2019-12-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITenantAccess_Update_request_properties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITenantAccess_Update_request_properties::OAITenantAccess_Update_request_properties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITenantAccess_Update_request_properties::OAITenantAccess_Update_request_properties() {
    this->initializeModel();
}

OAITenantAccess_Update_request_properties::~OAITenantAccess_Update_request_properties() {}

void OAITenantAccess_Update_request_properties::initializeModel() {

    m_enabled_isSet = false;
    m_enabled_isValid = false;
}

void OAITenantAccess_Update_request_properties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITenantAccess_Update_request_properties::fromJsonObject(QJsonObject json) {

    m_enabled_isValid = ::OpenAPI::fromJsonValue(m_enabled, json[QString("enabled")]);
    m_enabled_isSet = !json[QString("enabled")].isNull() && m_enabled_isValid;
}

QString OAITenantAccess_Update_request_properties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITenantAccess_Update_request_properties::asJsonObject() const {
    QJsonObject obj;
    if (m_enabled_isSet) {
        obj.insert(QString("enabled"), ::OpenAPI::toJsonValue(m_enabled));
    }
    return obj;
}

bool OAITenantAccess_Update_request_properties::isEnabled() const {
    return m_enabled;
}
void OAITenantAccess_Update_request_properties::setEnabled(const bool &enabled) {
    m_enabled = enabled;
    m_enabled_isSet = true;
}

bool OAITenantAccess_Update_request_properties::is_enabled_Set() const{
    return m_enabled_isSet;
}

bool OAITenantAccess_Update_request_properties::is_enabled_Valid() const{
    return m_enabled_isValid;
}

bool OAITenantAccess_Update_request_properties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITenantAccess_Update_request_properties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
