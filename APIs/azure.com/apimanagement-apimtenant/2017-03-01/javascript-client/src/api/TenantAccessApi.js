/**
 * ApiManagementClient
 * Use these REST APIs for performing operations on tenant entity associated with your Azure API Management deployment. Using this entity you can manage properties and configuration that apply to the entire API Management service instance.
 *
 * The version of the OpenAPI document: 2017-03-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AccessInformationContract from '../model/AccessInformationContract';
import AccessInformationUpdateParameters from '../model/AccessInformationUpdateParameters';
import TenantAccessUpdateDefaultResponse from '../model/TenantAccessUpdateDefaultResponse';

/**
* TenantAccess service.
* @module api/TenantAccessApi
* @version 2017-03-01
*/
export default class TenantAccessApi {

    /**
    * Constructs a new TenantAccessApi. 
    * @alias module:api/TenantAccessApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the tenantAccessGet operation.
     * @callback module:api/TenantAccessApi~tenantAccessGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AccessInformationContract} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get tenant access information details.
     * @param {String} apiVersion Version of the API to be used with the client request.
     * @param {module:model/String} accessName The identifier of the Access configuration.
     * @param {module:api/TenantAccessApi~tenantAccessGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AccessInformationContract}
     */
    tenantAccessGet(apiVersion, accessName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling tenantAccessGet");
      }
      // verify the required parameter 'accessName' is set
      if (accessName === undefined || accessName === null) {
        throw new Error("Missing the required parameter 'accessName' when calling tenantAccessGet");
      }

      let pathParams = {
        'accessName': accessName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apim_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AccessInformationContract;
      return this.apiClient.callApi(
        '/tenant/{accessName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the tenantAccessRegeneratePrimaryKey operation.
     * @callback module:api/TenantAccessApi~tenantAccessRegeneratePrimaryKeyCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Regenerate primary access key.
     * @param {String} apiVersion Version of the API to be used with the client request.
     * @param {module:model/String} accessName The identifier of the Access configuration.
     * @param {module:api/TenantAccessApi~tenantAccessRegeneratePrimaryKeyCallback} callback The callback function, accepting three arguments: error, data, response
     */
    tenantAccessRegeneratePrimaryKey(apiVersion, accessName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling tenantAccessRegeneratePrimaryKey");
      }
      // verify the required parameter 'accessName' is set
      if (accessName === undefined || accessName === null) {
        throw new Error("Missing the required parameter 'accessName' when calling tenantAccessRegeneratePrimaryKey");
      }

      let pathParams = {
        'accessName': accessName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apim_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/tenant/{accessName}/regeneratePrimaryKey', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the tenantAccessRegenerateSecondaryKey operation.
     * @callback module:api/TenantAccessApi~tenantAccessRegenerateSecondaryKeyCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Regenerate secondary access key.
     * @param {String} apiVersion Version of the API to be used with the client request.
     * @param {module:model/String} accessName The identifier of the Access configuration.
     * @param {module:api/TenantAccessApi~tenantAccessRegenerateSecondaryKeyCallback} callback The callback function, accepting three arguments: error, data, response
     */
    tenantAccessRegenerateSecondaryKey(apiVersion, accessName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling tenantAccessRegenerateSecondaryKey");
      }
      // verify the required parameter 'accessName' is set
      if (accessName === undefined || accessName === null) {
        throw new Error("Missing the required parameter 'accessName' when calling tenantAccessRegenerateSecondaryKey");
      }

      let pathParams = {
        'accessName': accessName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apim_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/tenant/{accessName}/regenerateSecondaryKey', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the tenantAccessUpdate operation.
     * @callback module:api/TenantAccessApi~tenantAccessUpdateCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update tenant access information details.
     * @param {module:model/String} accessName The identifier of the Access configuration.
     * @param {String} ifMatch The entity state (Etag) version of the property to update. A value of \"*\" can be used for If-Match to unconditionally apply the operation.
     * @param {String} apiVersion Version of the API to be used with the client request.
     * @param {module:model/AccessInformationUpdateParameters} parameters Parameters supplied to retrieve the Tenant Access Information.
     * @param {module:api/TenantAccessApi~tenantAccessUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     */
    tenantAccessUpdate(accessName, ifMatch, apiVersion, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'accessName' is set
      if (accessName === undefined || accessName === null) {
        throw new Error("Missing the required parameter 'accessName' when calling tenantAccessUpdate");
      }
      // verify the required parameter 'ifMatch' is set
      if (ifMatch === undefined || ifMatch === null) {
        throw new Error("Missing the required parameter 'ifMatch' when calling tenantAccessUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling tenantAccessUpdate");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling tenantAccessUpdate");
      }

      let pathParams = {
        'accessName': accessName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
        'If-Match': ifMatch
      };
      let formParams = {
      };

      let authNames = ['apim_key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/tenant/{accessName}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
