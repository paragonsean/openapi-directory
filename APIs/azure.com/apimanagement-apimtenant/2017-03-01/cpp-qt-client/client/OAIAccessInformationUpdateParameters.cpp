/**
 * ApiManagementClient
 * Use these REST APIs for performing operations on tenant entity associated with your Azure API Management deployment. Using this entity you can manage properties and configuration that apply to the entire API Management service instance.
 *
 * The version of the OpenAPI document: 2017-03-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAccessInformationUpdateParameters.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAccessInformationUpdateParameters::OAIAccessInformationUpdateParameters(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAccessInformationUpdateParameters::OAIAccessInformationUpdateParameters() {
    this->initializeModel();
}

OAIAccessInformationUpdateParameters::~OAIAccessInformationUpdateParameters() {}

void OAIAccessInformationUpdateParameters::initializeModel() {

    m_enabled_isSet = false;
    m_enabled_isValid = false;
}

void OAIAccessInformationUpdateParameters::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAccessInformationUpdateParameters::fromJsonObject(QJsonObject json) {

    m_enabled_isValid = ::OpenAPI::fromJsonValue(m_enabled, json[QString("enabled")]);
    m_enabled_isSet = !json[QString("enabled")].isNull() && m_enabled_isValid;
}

QString OAIAccessInformationUpdateParameters::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAccessInformationUpdateParameters::asJsonObject() const {
    QJsonObject obj;
    if (m_enabled_isSet) {
        obj.insert(QString("enabled"), ::OpenAPI::toJsonValue(m_enabled));
    }
    return obj;
}

bool OAIAccessInformationUpdateParameters::isEnabled() const {
    return m_enabled;
}
void OAIAccessInformationUpdateParameters::setEnabled(const bool &enabled) {
    m_enabled = enabled;
    m_enabled_isSet = true;
}

bool OAIAccessInformationUpdateParameters::is_enabled_Set() const{
    return m_enabled_isSet;
}

bool OAIAccessInformationUpdateParameters::is_enabled_Valid() const{
    return m_enabled_isValid;
}

bool OAIAccessInformationUpdateParameters::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAccessInformationUpdateParameters::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
