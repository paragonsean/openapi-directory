/**
 * ApiManagementClient
 * Use these REST APIs for performing operations on tenant entity associated with your Azure API Management deployment. Using this entity you can manage properties and configuration that apply to the entire API Management service instance.
 *
 * The version of the OpenAPI document: 2019-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ApiManagementClient);
  }
}(this, function(expect, ApiManagementClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ApiManagementClient.TenantConfigurationDeploy200ResponseActionLogInner();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('TenantConfigurationDeploy200ResponseActionLogInner', function() {
    it('should create an instance of TenantConfigurationDeploy200ResponseActionLogInner', function() {
      // uncomment below and update the code to test TenantConfigurationDeploy200ResponseActionLogInner
      //var instance = new ApiManagementClient.TenantConfigurationDeploy200ResponseActionLogInner();
      //expect(instance).to.be.a(ApiManagementClient.TenantConfigurationDeploy200ResponseActionLogInner);
    });

    it('should have the property action (base name: "action")', function() {
      // uncomment below and update the code to test the property action
      //var instance = new ApiManagementClient.TenantConfigurationDeploy200ResponseActionLogInner();
      //expect(instance).to.be();
    });

    it('should have the property objectKey (base name: "objectKey")', function() {
      // uncomment below and update the code to test the property objectKey
      //var instance = new ApiManagementClient.TenantConfigurationDeploy200ResponseActionLogInner();
      //expect(instance).to.be();
    });

    it('should have the property objectType (base name: "objectType")', function() {
      // uncomment below and update the code to test the property objectType
      //var instance = new ApiManagementClient.TenantConfigurationDeploy200ResponseActionLogInner();
      //expect(instance).to.be();
    });

  });

}));
