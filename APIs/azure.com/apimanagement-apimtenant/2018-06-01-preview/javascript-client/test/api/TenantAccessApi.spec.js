/**
 * ApiManagementClient
 * Use these REST APIs for performing operations on tenant entity associated with your Azure API Management deployment. Using this entity you can manage properties and configuration that apply to the entire API Management service instance.
 *
 * The version of the OpenAPI document: 2018-06-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ApiManagementClient);
  }
}(this, function(expect, ApiManagementClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ApiManagementClient.TenantAccessApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('TenantAccessApi', function() {
    describe('tenantAccessGet', function() {
      it('should call tenantAccessGet successfully', function(done) {
        //uncomment below and update the code to test tenantAccessGet
        //instance.tenantAccessGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tenantAccessGetEntityTag', function() {
      it('should call tenantAccessGetEntityTag successfully', function(done) {
        //uncomment below and update the code to test tenantAccessGetEntityTag
        //instance.tenantAccessGetEntityTag(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tenantAccessRegeneratePrimaryKey', function() {
      it('should call tenantAccessRegeneratePrimaryKey successfully', function(done) {
        //uncomment below and update the code to test tenantAccessRegeneratePrimaryKey
        //instance.tenantAccessRegeneratePrimaryKey(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tenantAccessRegenerateSecondaryKey', function() {
      it('should call tenantAccessRegenerateSecondaryKey successfully', function(done) {
        //uncomment below and update the code to test tenantAccessRegenerateSecondaryKey
        //instance.tenantAccessRegenerateSecondaryKey(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tenantAccessUpdate', function() {
      it('should call tenantAccessUpdate successfully', function(done) {
        //uncomment below and update the code to test tenantAccessUpdate
        //instance.tenantAccessUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
