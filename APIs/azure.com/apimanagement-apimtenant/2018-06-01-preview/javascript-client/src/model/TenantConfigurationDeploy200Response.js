/**
 * ApiManagementClient
 * Use these REST APIs for performing operations on tenant entity associated with your Azure API Management deployment. Using this entity you can manage properties and configuration that apply to the entire API Management service instance.
 *
 * The version of the OpenAPI document: 2018-06-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TenantAccessGetDefaultResponseError from './TenantAccessGetDefaultResponseError';
import TenantConfigurationDeploy200ResponseActionLogInner from './TenantConfigurationDeploy200ResponseActionLogInner';

/**
 * The TenantConfigurationDeploy200Response model module.
 * @module model/TenantConfigurationDeploy200Response
 * @version 2018-06-01-preview
 */
class TenantConfigurationDeploy200Response {
    /**
     * Constructs a new <code>TenantConfigurationDeploy200Response</code>.
     * Operation Result.
     * @alias module:model/TenantConfigurationDeploy200Response
     */
    constructor() { 
        
        TenantConfigurationDeploy200Response.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TenantConfigurationDeploy200Response</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TenantConfigurationDeploy200Response} obj Optional instance to populate.
     * @return {module:model/TenantConfigurationDeploy200Response} The populated <code>TenantConfigurationDeploy200Response</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TenantConfigurationDeploy200Response();

            if (data.hasOwnProperty('actionLog')) {
                obj['actionLog'] = ApiClient.convertToType(data['actionLog'], [TenantConfigurationDeploy200ResponseActionLogInner]);
            }
            if (data.hasOwnProperty('error')) {
                obj['error'] = TenantAccessGetDefaultResponseError.constructFromObject(data['error']);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('resultInfo')) {
                obj['resultInfo'] = ApiClient.convertToType(data['resultInfo'], 'String');
            }
            if (data.hasOwnProperty('started')) {
                obj['started'] = ApiClient.convertToType(data['started'], 'Date');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('updated')) {
                obj['updated'] = ApiClient.convertToType(data['updated'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TenantConfigurationDeploy200Response</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TenantConfigurationDeploy200Response</code>.
     */
    static validateJSON(data) {
        if (data['actionLog']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['actionLog'])) {
                throw new Error("Expected the field `actionLog` to be an array in the JSON data but got " + data['actionLog']);
            }
            // validate the optional field `actionLog` (array)
            for (const item of data['actionLog']) {
                TenantConfigurationDeploy200ResponseActionLogInner.validateJSON(item);
            };
        }
        // validate the optional field `error`
        if (data['error']) { // data not null
          TenantAccessGetDefaultResponseError.validateJSON(data['error']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['resultInfo'] && !(typeof data['resultInfo'] === 'string' || data['resultInfo'] instanceof String)) {
            throw new Error("Expected the field `resultInfo` to be a primitive type in the JSON string but got " + data['resultInfo']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }

        return true;
    }


}



/**
 * This property if only provided as part of the TenantConfiguration_Validate operation. It contains the log the entities which will be updated/created/deleted as part of the TenantConfiguration_Deploy operation.
 * @member {Array.<module:model/TenantConfigurationDeploy200ResponseActionLogInner>} actionLog
 */
TenantConfigurationDeploy200Response.prototype['actionLog'] = undefined;

/**
 * @member {module:model/TenantAccessGetDefaultResponseError} error
 */
TenantConfigurationDeploy200Response.prototype['error'] = undefined;

/**
 * Operation result identifier.
 * @member {String} id
 */
TenantConfigurationDeploy200Response.prototype['id'] = undefined;

/**
 * Optional result info.
 * @member {String} resultInfo
 */
TenantConfigurationDeploy200Response.prototype['resultInfo'] = undefined;

/**
 * Start time of an async operation. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard. 
 * @member {Date} started
 */
TenantConfigurationDeploy200Response.prototype['started'] = undefined;

/**
 * Status of an async operation.
 * @member {module:model/TenantConfigurationDeploy200Response.StatusEnum} status
 */
TenantConfigurationDeploy200Response.prototype['status'] = undefined;

/**
 * Last update time of an async operation. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard. 
 * @member {Date} updated
 */
TenantConfigurationDeploy200Response.prototype['updated'] = undefined;





/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
TenantConfigurationDeploy200Response['StatusEnum'] = {

    /**
     * value: "Started"
     * @const
     */
    "Started": "Started",

    /**
     * value: "InProgress"
     * @const
     */
    "InProgress": "InProgress",

    /**
     * value: "Succeeded"
     * @const
     */
    "Succeeded": "Succeeded",

    /**
     * value: "Failed"
     * @const
     */
    "Failed": "Failed"
};



export default TenantConfigurationDeploy200Response;

