/**
 * ApiManagementClient
 * Use these REST APIs for performing operations on tenant entity associated with your Azure API Management deployment. Using this entity you can manage properties and configuration that apply to the entire API Management service instance.
 *
 * The version of the OpenAPI document: 2018-06-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import TenantConfigurationGetSyncState200Response from '../model/TenantConfigurationGetSyncState200Response';

/**
* TenantConfigurationSyncState service.
* @module api/TenantConfigurationSyncStateApi
* @version 2018-06-01-preview
*/
export default class TenantConfigurationSyncStateApi {

    /**
    * Constructs a new TenantConfigurationSyncStateApi. 
    * @alias module:api/TenantConfigurationSyncStateApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the tenantConfigurationGetSyncState operation.
     * @callback module:api/TenantConfigurationSyncStateApi~tenantConfigurationGetSyncStateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TenantConfigurationGetSyncState200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the status of the most recent synchronization between the configuration database and the Git repository.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} serviceName The name of the API Management service.
     * @param {String} apiVersion Version of the API to be used with the client request.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:model/String} configurationName The identifier of the Git Configuration Operation.
     * @param {module:api/TenantConfigurationSyncStateApi~tenantConfigurationGetSyncStateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TenantConfigurationGetSyncState200Response}
     */
    tenantConfigurationGetSyncState(resourceGroupName, serviceName, apiVersion, subscriptionId, configurationName, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling tenantConfigurationGetSyncState");
      }
      // verify the required parameter 'serviceName' is set
      if (serviceName === undefined || serviceName === null) {
        throw new Error("Missing the required parameter 'serviceName' when calling tenantConfigurationGetSyncState");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling tenantConfigurationGetSyncState");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling tenantConfigurationGetSyncState");
      }
      // verify the required parameter 'configurationName' is set
      if (configurationName === undefined || configurationName === null) {
        throw new Error("Missing the required parameter 'configurationName' when calling tenantConfigurationGetSyncState");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'serviceName': serviceName,
        'subscriptionId': subscriptionId,
        'configurationName': configurationName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = TenantConfigurationGetSyncState200Response;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/{configurationName}/syncState', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
