/**
 * ApiManagementClient
 * Use these REST APIs for performing operations on tenant entity associated with your Azure API Management deployment. Using this entity you can manage properties and configuration that apply to the entire API Management service instance.
 *
 * The version of the OpenAPI document: 2018-01-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOperationResultLogItemContract.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOperationResultLogItemContract::OAIOperationResultLogItemContract(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOperationResultLogItemContract::OAIOperationResultLogItemContract() {
    this->initializeModel();
}

OAIOperationResultLogItemContract::~OAIOperationResultLogItemContract() {}

void OAIOperationResultLogItemContract::initializeModel() {

    m_action_isSet = false;
    m_action_isValid = false;

    m_object_key_isSet = false;
    m_object_key_isValid = false;

    m_object_type_isSet = false;
    m_object_type_isValid = false;
}

void OAIOperationResultLogItemContract::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOperationResultLogItemContract::fromJsonObject(QJsonObject json) {

    m_action_isValid = ::OpenAPI::fromJsonValue(m_action, json[QString("action")]);
    m_action_isSet = !json[QString("action")].isNull() && m_action_isValid;

    m_object_key_isValid = ::OpenAPI::fromJsonValue(m_object_key, json[QString("objectKey")]);
    m_object_key_isSet = !json[QString("objectKey")].isNull() && m_object_key_isValid;

    m_object_type_isValid = ::OpenAPI::fromJsonValue(m_object_type, json[QString("objectType")]);
    m_object_type_isSet = !json[QString("objectType")].isNull() && m_object_type_isValid;
}

QString OAIOperationResultLogItemContract::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOperationResultLogItemContract::asJsonObject() const {
    QJsonObject obj;
    if (m_action_isSet) {
        obj.insert(QString("action"), ::OpenAPI::toJsonValue(m_action));
    }
    if (m_object_key_isSet) {
        obj.insert(QString("objectKey"), ::OpenAPI::toJsonValue(m_object_key));
    }
    if (m_object_type_isSet) {
        obj.insert(QString("objectType"), ::OpenAPI::toJsonValue(m_object_type));
    }
    return obj;
}

QString OAIOperationResultLogItemContract::getAction() const {
    return m_action;
}
void OAIOperationResultLogItemContract::setAction(const QString &action) {
    m_action = action;
    m_action_isSet = true;
}

bool OAIOperationResultLogItemContract::is_action_Set() const{
    return m_action_isSet;
}

bool OAIOperationResultLogItemContract::is_action_Valid() const{
    return m_action_isValid;
}

QString OAIOperationResultLogItemContract::getObjectKey() const {
    return m_object_key;
}
void OAIOperationResultLogItemContract::setObjectKey(const QString &object_key) {
    m_object_key = object_key;
    m_object_key_isSet = true;
}

bool OAIOperationResultLogItemContract::is_object_key_Set() const{
    return m_object_key_isSet;
}

bool OAIOperationResultLogItemContract::is_object_key_Valid() const{
    return m_object_key_isValid;
}

QString OAIOperationResultLogItemContract::getObjectType() const {
    return m_object_type;
}
void OAIOperationResultLogItemContract::setObjectType(const QString &object_type) {
    m_object_type = object_type;
    m_object_type_isSet = true;
}

bool OAIOperationResultLogItemContract::is_object_type_Set() const{
    return m_object_type_isSet;
}

bool OAIOperationResultLogItemContract::is_object_type_Valid() const{
    return m_object_type_isValid;
}

bool OAIOperationResultLogItemContract::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_action_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_object_key_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_object_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOperationResultLogItemContract::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
