/**
 * ApiManagementClient
 * Use these REST APIs for performing operations on tenant entity associated with your Azure API Management deployment. Using this entity you can manage properties and configuration that apply to the entire API Management service instance.
 *
 * The version of the OpenAPI document: 2018-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The OperationResultLogItemContract model module.
 * @module model/OperationResultLogItemContract
 * @version 2018-01-01
 */
class OperationResultLogItemContract {
    /**
     * Constructs a new <code>OperationResultLogItemContract</code>.
     * Log of the entity being created, updated or deleted.
     * @alias module:model/OperationResultLogItemContract
     */
    constructor() { 
        
        OperationResultLogItemContract.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OperationResultLogItemContract</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OperationResultLogItemContract} obj Optional instance to populate.
     * @return {module:model/OperationResultLogItemContract} The populated <code>OperationResultLogItemContract</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OperationResultLogItemContract();

            if (data.hasOwnProperty('action')) {
                obj['action'] = ApiClient.convertToType(data['action'], 'String');
            }
            if (data.hasOwnProperty('objectKey')) {
                obj['objectKey'] = ApiClient.convertToType(data['objectKey'], 'String');
            }
            if (data.hasOwnProperty('objectType')) {
                obj['objectType'] = ApiClient.convertToType(data['objectType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OperationResultLogItemContract</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OperationResultLogItemContract</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['action'] && !(typeof data['action'] === 'string' || data['action'] instanceof String)) {
            throw new Error("Expected the field `action` to be a primitive type in the JSON string but got " + data['action']);
        }
        // ensure the json data is a string
        if (data['objectKey'] && !(typeof data['objectKey'] === 'string' || data['objectKey'] instanceof String)) {
            throw new Error("Expected the field `objectKey` to be a primitive type in the JSON string but got " + data['objectKey']);
        }
        // ensure the json data is a string
        if (data['objectType'] && !(typeof data['objectType'] === 'string' || data['objectType'] instanceof String)) {
            throw new Error("Expected the field `objectType` to be a primitive type in the JSON string but got " + data['objectType']);
        }

        return true;
    }


}



/**
 * Action like create/update/delete.
 * @member {String} action
 */
OperationResultLogItemContract.prototype['action'] = undefined;

/**
 * Identifier of the entity being created/updated/deleted.
 * @member {String} objectKey
 */
OperationResultLogItemContract.prototype['objectKey'] = undefined;

/**
 * The type of entity contract.
 * @member {String} objectType
 */
OperationResultLogItemContract.prototype['objectType'] = undefined;






export default OperationResultLogItemContract;

