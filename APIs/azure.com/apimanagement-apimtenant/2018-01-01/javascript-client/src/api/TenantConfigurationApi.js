/**
 * ApiManagementClient
 * Use these REST APIs for performing operations on tenant entity associated with your Azure API Management deployment. Using this entity you can manage properties and configuration that apply to the entire API Management service instance.
 *
 * The version of the OpenAPI document: 2018-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import DeployConfigurationParameters from '../model/DeployConfigurationParameters';
import OperationResultContract from '../model/OperationResultContract';
import SaveConfigurationParameter from '../model/SaveConfigurationParameter';
import TenantAccessUpdateDefaultResponse from '../model/TenantAccessUpdateDefaultResponse';

/**
* TenantConfiguration service.
* @module api/TenantConfigurationApi
* @version 2018-01-01
*/
export default class TenantConfigurationApi {

    /**
    * Constructs a new TenantConfigurationApi. 
    * @alias module:api/TenantConfigurationApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the tenantConfigurationDeploy operation.
     * @callback module:api/TenantConfigurationApi~tenantConfigurationDeployCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OperationResultContract} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * This operation applies changes from the specified Git branch to the configuration database. This is a long running operation and could take several minutes to complete.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} serviceName The name of the API Management service.
     * @param {String} apiVersion Version of the API to be used with the client request.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:model/String} configurationName The identifier of the Git Configuration Operation.
     * @param {module:model/DeployConfigurationParameters} parameters Deploy Configuration parameters.
     * @param {module:api/TenantConfigurationApi~tenantConfigurationDeployCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OperationResultContract}
     */
    tenantConfigurationDeploy(resourceGroupName, serviceName, apiVersion, subscriptionId, configurationName, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling tenantConfigurationDeploy");
      }
      // verify the required parameter 'serviceName' is set
      if (serviceName === undefined || serviceName === null) {
        throw new Error("Missing the required parameter 'serviceName' when calling tenantConfigurationDeploy");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling tenantConfigurationDeploy");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling tenantConfigurationDeploy");
      }
      // verify the required parameter 'configurationName' is set
      if (configurationName === undefined || configurationName === null) {
        throw new Error("Missing the required parameter 'configurationName' when calling tenantConfigurationDeploy");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling tenantConfigurationDeploy");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'serviceName': serviceName,
        'subscriptionId': subscriptionId,
        'configurationName': configurationName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = OperationResultContract;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/{configurationName}/deploy', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the tenantConfigurationSave operation.
     * @callback module:api/TenantConfigurationApi~tenantConfigurationSaveCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OperationResultContract} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * This operation creates a commit with the current configuration snapshot to the specified branch in the repository. This is a long running operation and could take several minutes to complete.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} serviceName The name of the API Management service.
     * @param {String} apiVersion Version of the API to be used with the client request.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:model/String} configurationName The identifier of the Git Configuration Operation.
     * @param {module:model/SaveConfigurationParameter} parameters Save Configuration parameters.
     * @param {module:api/TenantConfigurationApi~tenantConfigurationSaveCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OperationResultContract}
     */
    tenantConfigurationSave(resourceGroupName, serviceName, apiVersion, subscriptionId, configurationName, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling tenantConfigurationSave");
      }
      // verify the required parameter 'serviceName' is set
      if (serviceName === undefined || serviceName === null) {
        throw new Error("Missing the required parameter 'serviceName' when calling tenantConfigurationSave");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling tenantConfigurationSave");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling tenantConfigurationSave");
      }
      // verify the required parameter 'configurationName' is set
      if (configurationName === undefined || configurationName === null) {
        throw new Error("Missing the required parameter 'configurationName' when calling tenantConfigurationSave");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling tenantConfigurationSave");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'serviceName': serviceName,
        'subscriptionId': subscriptionId,
        'configurationName': configurationName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = OperationResultContract;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/{configurationName}/save', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the tenantConfigurationValidate operation.
     * @callback module:api/TenantConfigurationApi~tenantConfigurationValidateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OperationResultContract} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * This operation validates the changes in the specified Git branch. This is a long running operation and could take several minutes to complete.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} serviceName The name of the API Management service.
     * @param {String} apiVersion Version of the API to be used with the client request.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:model/String} configurationName The identifier of the Git Configuration Operation.
     * @param {module:model/DeployConfigurationParameters} parameters Validate Configuration parameters.
     * @param {module:api/TenantConfigurationApi~tenantConfigurationValidateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OperationResultContract}
     */
    tenantConfigurationValidate(resourceGroupName, serviceName, apiVersion, subscriptionId, configurationName, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling tenantConfigurationValidate");
      }
      // verify the required parameter 'serviceName' is set
      if (serviceName === undefined || serviceName === null) {
        throw new Error("Missing the required parameter 'serviceName' when calling tenantConfigurationValidate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling tenantConfigurationValidate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling tenantConfigurationValidate");
      }
      // verify the required parameter 'configurationName' is set
      if (configurationName === undefined || configurationName === null) {
        throw new Error("Missing the required parameter 'configurationName' when calling tenantConfigurationValidate");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling tenantConfigurationValidate");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'serviceName': serviceName,
        'subscriptionId': subscriptionId,
        'configurationName': configurationName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = OperationResultContract;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/{configurationName}/validate', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
