/*
 * ApiManagementClient
 * Use these REST APIs for performing operations on tenant entity associated with your Azure API Management deployment. Using this entity you can manage properties and configuration that apply to the entire API Management service instance.
 *
 * The version of the OpenAPI document: 2016-10-10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AccessInformationContract;
import org.openapitools.client.model.AccessInformationUpdateParameters;
import org.openapitools.client.model.TenantAccessUpdateDefaultResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TenantAccessApi
 */
@Disabled
public class TenantAccessApiTest {

    private final TenantAccessApi api = new TenantAccessApi();

    /**
     * Get tenant access information details.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tenantAccessGetTest() throws ApiException {
        String resourceGroupName = null;
        String serviceName = null;
        String apiVersion = null;
        String subscriptionId = null;
        AccessInformationContract response = api.tenantAccessGet(resourceGroupName, serviceName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Regenerate primary access key.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tenantAccessRegeneratePrimaryKeyTest() throws ApiException {
        String resourceGroupName = null;
        String serviceName = null;
        String apiVersion = null;
        String subscriptionId = null;
        api.tenantAccessRegeneratePrimaryKey(resourceGroupName, serviceName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Regenerate secondary access key.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tenantAccessRegenerateSecondaryKeyTest() throws ApiException {
        String resourceGroupName = null;
        String serviceName = null;
        String apiVersion = null;
        String subscriptionId = null;
        api.tenantAccessRegenerateSecondaryKey(resourceGroupName, serviceName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Update tenant access information details.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tenantAccessUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String serviceName = null;
        String ifMatch = null;
        String apiVersion = null;
        String subscriptionId = null;
        AccessInformationUpdateParameters parameters = null;
        api.tenantAccessUpdate(resourceGroupName, serviceName, ifMatch, apiVersion, subscriptionId, parameters);
        // TODO: test validations
    }

}
