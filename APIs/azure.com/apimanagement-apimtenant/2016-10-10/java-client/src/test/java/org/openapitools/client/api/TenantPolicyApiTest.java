/*
 * ApiManagementClient
 * Use these REST APIs for performing operations on tenant entity associated with your Azure API Management deployment. Using this entity you can manage properties and configuration that apply to the entire API Management service instance.
 *
 * The version of the OpenAPI document: 2016-10-10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import java.io.File;
import org.openapitools.client.model.TenantAccessUpdateDefaultResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TenantPolicyApi
 */
@Disabled
public class TenantPolicyApiTest {

    private final TenantPolicyApi api = new TenantPolicyApi();

    /**
     * Creates or updates global policy configuration for the tenant.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tenantPolicyCreateOrUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String serviceName = null;
        String ifMatch = null;
        String apiVersion = null;
        String subscriptionId = null;
        Object parameters = null;
        api.tenantPolicyCreateOrUpdate(resourceGroupName, serviceName, ifMatch, apiVersion, subscriptionId, parameters);
        // TODO: test validations
    }

    /**
     * Deletes the global tenant policy configuration.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tenantPolicyDeleteTest() throws ApiException {
        String resourceGroupName = null;
        String serviceName = null;
        String ifMatch = null;
        String apiVersion = null;
        String subscriptionId = null;
        api.tenantPolicyDelete(resourceGroupName, serviceName, ifMatch, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Get the global policy configuration of the tenant.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tenantPolicyGetTest() throws ApiException {
        String resourceGroupName = null;
        String serviceName = null;
        String apiVersion = null;
        String subscriptionId = null;
        File response = api.tenantPolicyGet(resourceGroupName, serviceName, apiVersion, subscriptionId);
        // TODO: test validations
    }

}
