# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.amount import Amount
from openapi_server.models.download_properties import DownloadProperties
from openapi_server.models.payment_properties import PaymentProperties
from openapi_server import util


class InvoiceSummaryProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, amount_due: Amount=None, billed_amount: Amount=None, billing_profile_id: str=None, billing_profile_name: str=None, document_urls: List[DownloadProperties]=None, due_date: datetime=None, invoice_date: datetime=None, invoice_period_end_date: datetime=None, invoice_period_start_date: datetime=None, payments: List[PaymentProperties]=None, purchase_order_number: str=None, status: str=None):
        """InvoiceSummaryProperties - a model defined in OpenAPI

        :param amount_due: The amount_due of this InvoiceSummaryProperties.
        :param billed_amount: The billed_amount of this InvoiceSummaryProperties.
        :param billing_profile_id: The billing_profile_id of this InvoiceSummaryProperties.
        :param billing_profile_name: The billing_profile_name of this InvoiceSummaryProperties.
        :param document_urls: The document_urls of this InvoiceSummaryProperties.
        :param due_date: The due_date of this InvoiceSummaryProperties.
        :param invoice_date: The invoice_date of this InvoiceSummaryProperties.
        :param invoice_period_end_date: The invoice_period_end_date of this InvoiceSummaryProperties.
        :param invoice_period_start_date: The invoice_period_start_date of this InvoiceSummaryProperties.
        :param payments: The payments of this InvoiceSummaryProperties.
        :param purchase_order_number: The purchase_order_number of this InvoiceSummaryProperties.
        :param status: The status of this InvoiceSummaryProperties.
        """
        self.openapi_types = {
            'amount_due': Amount,
            'billed_amount': Amount,
            'billing_profile_id': str,
            'billing_profile_name': str,
            'document_urls': List[DownloadProperties],
            'due_date': datetime,
            'invoice_date': datetime,
            'invoice_period_end_date': datetime,
            'invoice_period_start_date': datetime,
            'payments': List[PaymentProperties],
            'purchase_order_number': str,
            'status': str
        }

        self.attribute_map = {
            'amount_due': 'amountDue',
            'billed_amount': 'billedAmount',
            'billing_profile_id': 'billingProfileId',
            'billing_profile_name': 'billingProfileName',
            'document_urls': 'documentUrls',
            'due_date': 'dueDate',
            'invoice_date': 'invoiceDate',
            'invoice_period_end_date': 'invoicePeriodEndDate',
            'invoice_period_start_date': 'invoicePeriodStartDate',
            'payments': 'payments',
            'purchase_order_number': 'purchaseOrderNumber',
            'status': 'status'
        }

        self._amount_due = amount_due
        self._billed_amount = billed_amount
        self._billing_profile_id = billing_profile_id
        self._billing_profile_name = billing_profile_name
        self._document_urls = document_urls
        self._due_date = due_date
        self._invoice_date = invoice_date
        self._invoice_period_end_date = invoice_period_end_date
        self._invoice_period_start_date = invoice_period_start_date
        self._payments = payments
        self._purchase_order_number = purchase_order_number
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InvoiceSummaryProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InvoiceSummaryProperties of this InvoiceSummaryProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def amount_due(self):
        """Gets the amount_due of this InvoiceSummaryProperties.


        :return: The amount_due of this InvoiceSummaryProperties.
        :rtype: Amount
        """
        return self._amount_due

    @amount_due.setter
    def amount_due(self, amount_due):
        """Sets the amount_due of this InvoiceSummaryProperties.


        :param amount_due: The amount_due of this InvoiceSummaryProperties.
        :type amount_due: Amount
        """

        self._amount_due = amount_due

    @property
    def billed_amount(self):
        """Gets the billed_amount of this InvoiceSummaryProperties.


        :return: The billed_amount of this InvoiceSummaryProperties.
        :rtype: Amount
        """
        return self._billed_amount

    @billed_amount.setter
    def billed_amount(self, billed_amount):
        """Sets the billed_amount of this InvoiceSummaryProperties.


        :param billed_amount: The billed_amount of this InvoiceSummaryProperties.
        :type billed_amount: Amount
        """

        self._billed_amount = billed_amount

    @property
    def billing_profile_id(self):
        """Gets the billing_profile_id of this InvoiceSummaryProperties.

        The billing profile id this invoice belongs to.

        :return: The billing_profile_id of this InvoiceSummaryProperties.
        :rtype: str
        """
        return self._billing_profile_id

    @billing_profile_id.setter
    def billing_profile_id(self, billing_profile_id):
        """Sets the billing_profile_id of this InvoiceSummaryProperties.

        The billing profile id this invoice belongs to.

        :param billing_profile_id: The billing_profile_id of this InvoiceSummaryProperties.
        :type billing_profile_id: str
        """

        self._billing_profile_id = billing_profile_id

    @property
    def billing_profile_name(self):
        """Gets the billing_profile_name of this InvoiceSummaryProperties.

        The profile name this invoice belongs to.

        :return: The billing_profile_name of this InvoiceSummaryProperties.
        :rtype: str
        """
        return self._billing_profile_name

    @billing_profile_name.setter
    def billing_profile_name(self, billing_profile_name):
        """Sets the billing_profile_name of this InvoiceSummaryProperties.

        The profile name this invoice belongs to.

        :param billing_profile_name: The billing_profile_name of this InvoiceSummaryProperties.
        :type billing_profile_name: str
        """

        self._billing_profile_name = billing_profile_name

    @property
    def document_urls(self):
        """Gets the document_urls of this InvoiceSummaryProperties.

        List of document urls available to download including invoice and tax documents.

        :return: The document_urls of this InvoiceSummaryProperties.
        :rtype: List[DownloadProperties]
        """
        return self._document_urls

    @document_urls.setter
    def document_urls(self, document_urls):
        """Sets the document_urls of this InvoiceSummaryProperties.

        List of document urls available to download including invoice and tax documents.

        :param document_urls: The document_urls of this InvoiceSummaryProperties.
        :type document_urls: List[DownloadProperties]
        """

        self._document_urls = document_urls

    @property
    def due_date(self):
        """Gets the due_date of this InvoiceSummaryProperties.

        The due date for invoice.

        :return: The due_date of this InvoiceSummaryProperties.
        :rtype: datetime
        """
        return self._due_date

    @due_date.setter
    def due_date(self, due_date):
        """Sets the due_date of this InvoiceSummaryProperties.

        The due date for invoice.

        :param due_date: The due_date of this InvoiceSummaryProperties.
        :type due_date: datetime
        """

        self._due_date = due_date

    @property
    def invoice_date(self):
        """Gets the invoice_date of this InvoiceSummaryProperties.

        The date when invoice was created.

        :return: The invoice_date of this InvoiceSummaryProperties.
        :rtype: datetime
        """
        return self._invoice_date

    @invoice_date.setter
    def invoice_date(self, invoice_date):
        """Sets the invoice_date of this InvoiceSummaryProperties.

        The date when invoice was created.

        :param invoice_date: The invoice_date of this InvoiceSummaryProperties.
        :type invoice_date: datetime
        """

        self._invoice_date = invoice_date

    @property
    def invoice_period_end_date(self):
        """Gets the invoice_period_end_date of this InvoiceSummaryProperties.

        The end date of the billing period.

        :return: The invoice_period_end_date of this InvoiceSummaryProperties.
        :rtype: datetime
        """
        return self._invoice_period_end_date

    @invoice_period_end_date.setter
    def invoice_period_end_date(self, invoice_period_end_date):
        """Sets the invoice_period_end_date of this InvoiceSummaryProperties.

        The end date of the billing period.

        :param invoice_period_end_date: The invoice_period_end_date of this InvoiceSummaryProperties.
        :type invoice_period_end_date: datetime
        """

        self._invoice_period_end_date = invoice_period_end_date

    @property
    def invoice_period_start_date(self):
        """Gets the invoice_period_start_date of this InvoiceSummaryProperties.

        The start date of the billing period.

        :return: The invoice_period_start_date of this InvoiceSummaryProperties.
        :rtype: datetime
        """
        return self._invoice_period_start_date

    @invoice_period_start_date.setter
    def invoice_period_start_date(self, invoice_period_start_date):
        """Sets the invoice_period_start_date of this InvoiceSummaryProperties.

        The start date of the billing period.

        :param invoice_period_start_date: The invoice_period_start_date of this InvoiceSummaryProperties.
        :type invoice_period_start_date: datetime
        """

        self._invoice_period_start_date = invoice_period_start_date

    @property
    def payments(self):
        """Gets the payments of this InvoiceSummaryProperties.

        List of payments.

        :return: The payments of this InvoiceSummaryProperties.
        :rtype: List[PaymentProperties]
        """
        return self._payments

    @payments.setter
    def payments(self, payments):
        """Sets the payments of this InvoiceSummaryProperties.

        List of payments.

        :param payments: The payments of this InvoiceSummaryProperties.
        :type payments: List[PaymentProperties]
        """

        self._payments = payments

    @property
    def purchase_order_number(self):
        """Gets the purchase_order_number of this InvoiceSummaryProperties.

        The purchase identifier for the invoice.

        :return: The purchase_order_number of this InvoiceSummaryProperties.
        :rtype: str
        """
        return self._purchase_order_number

    @purchase_order_number.setter
    def purchase_order_number(self, purchase_order_number):
        """Sets the purchase_order_number of this InvoiceSummaryProperties.

        The purchase identifier for the invoice.

        :param purchase_order_number: The purchase_order_number of this InvoiceSummaryProperties.
        :type purchase_order_number: str
        """

        self._purchase_order_number = purchase_order_number

    @property
    def status(self):
        """Gets the status of this InvoiceSummaryProperties.

        Invoice status.

        :return: The status of this InvoiceSummaryProperties.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this InvoiceSummaryProperties.

        Invoice status.

        :param status: The status of this InvoiceSummaryProperties.
        :type status: str
        """
        allowed_values = ["PastDue", "Due", "Paid", "Void"]  # noqa: E501
        if status not in allowed_values:
            raise ValueError(
                "Invalid value for `status` ({0}), must be one of {1}"
                .format(status, allowed_values)
            )

        self._status = status
