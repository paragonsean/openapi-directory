# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.department import Department
from openapi_server import util


class EnrollmentAccountProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_name: str=None, account_owner: str=None, cost_center: str=None, department: Department=None, end_date: datetime=None, start_date: datetime=None, status: str=None):
        """EnrollmentAccountProperties - a model defined in OpenAPI

        :param account_name: The account_name of this EnrollmentAccountProperties.
        :param account_owner: The account_owner of this EnrollmentAccountProperties.
        :param cost_center: The cost_center of this EnrollmentAccountProperties.
        :param department: The department of this EnrollmentAccountProperties.
        :param end_date: The end_date of this EnrollmentAccountProperties.
        :param start_date: The start_date of this EnrollmentAccountProperties.
        :param status: The status of this EnrollmentAccountProperties.
        """
        self.openapi_types = {
            'account_name': str,
            'account_owner': str,
            'cost_center': str,
            'department': Department,
            'end_date': datetime,
            'start_date': datetime,
            'status': str
        }

        self.attribute_map = {
            'account_name': 'accountName',
            'account_owner': 'accountOwner',
            'cost_center': 'costCenter',
            'department': 'department',
            'end_date': 'endDate',
            'start_date': 'startDate',
            'status': 'status'
        }

        self._account_name = account_name
        self._account_owner = account_owner
        self._cost_center = cost_center
        self._department = department
        self._end_date = end_date
        self._start_date = start_date
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EnrollmentAccountProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EnrollmentAccountProperties of this EnrollmentAccountProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_name(self):
        """Gets the account_name of this EnrollmentAccountProperties.

        The account name.

        :return: The account_name of this EnrollmentAccountProperties.
        :rtype: str
        """
        return self._account_name

    @account_name.setter
    def account_name(self, account_name):
        """Sets the account_name of this EnrollmentAccountProperties.

        The account name.

        :param account_name: The account_name of this EnrollmentAccountProperties.
        :type account_name: str
        """

        self._account_name = account_name

    @property
    def account_owner(self):
        """Gets the account_owner of this EnrollmentAccountProperties.

        The account owner

        :return: The account_owner of this EnrollmentAccountProperties.
        :rtype: str
        """
        return self._account_owner

    @account_owner.setter
    def account_owner(self, account_owner):
        """Sets the account_owner of this EnrollmentAccountProperties.

        The account owner

        :param account_owner: The account_owner of this EnrollmentAccountProperties.
        :type account_owner: str
        """

        self._account_owner = account_owner

    @property
    def cost_center(self):
        """Gets the cost_center of this EnrollmentAccountProperties.

        The cost center name.

        :return: The cost_center of this EnrollmentAccountProperties.
        :rtype: str
        """
        return self._cost_center

    @cost_center.setter
    def cost_center(self, cost_center):
        """Sets the cost_center of this EnrollmentAccountProperties.

        The cost center name.

        :param cost_center: The cost_center of this EnrollmentAccountProperties.
        :type cost_center: str
        """

        self._cost_center = cost_center

    @property
    def department(self):
        """Gets the department of this EnrollmentAccountProperties.


        :return: The department of this EnrollmentAccountProperties.
        :rtype: Department
        """
        return self._department

    @department.setter
    def department(self, department):
        """Sets the department of this EnrollmentAccountProperties.


        :param department: The department of this EnrollmentAccountProperties.
        :type department: Department
        """

        self._department = department

    @property
    def end_date(self):
        """Gets the end_date of this EnrollmentAccountProperties.

        Account End Date

        :return: The end_date of this EnrollmentAccountProperties.
        :rtype: datetime
        """
        return self._end_date

    @end_date.setter
    def end_date(self, end_date):
        """Sets the end_date of this EnrollmentAccountProperties.

        Account End Date

        :param end_date: The end_date of this EnrollmentAccountProperties.
        :type end_date: datetime
        """

        self._end_date = end_date

    @property
    def start_date(self):
        """Gets the start_date of this EnrollmentAccountProperties.

        Account Start Date

        :return: The start_date of this EnrollmentAccountProperties.
        :rtype: datetime
        """
        return self._start_date

    @start_date.setter
    def start_date(self, start_date):
        """Sets the start_date of this EnrollmentAccountProperties.

        Account Start Date

        :param start_date: The start_date of this EnrollmentAccountProperties.
        :type start_date: datetime
        """

        self._start_date = start_date

    @property
    def status(self):
        """Gets the status of this EnrollmentAccountProperties.

        The status for account.

        :return: The status of this EnrollmentAccountProperties.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this EnrollmentAccountProperties.

        The status for account.

        :param status: The status of this EnrollmentAccountProperties.
        :type status: str
        """

        self._status = status
