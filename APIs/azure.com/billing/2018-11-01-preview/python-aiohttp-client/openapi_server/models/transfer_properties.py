# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.detailed_transfer_status import DetailedTransferStatus
from openapi_server.models.transfer_status import TransferStatus
from openapi_server import util


class TransferProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, billing_account_id: str=None, canceled_by: str=None, creation_time: datetime=None, detailed_transfer_status: List[DetailedTransferStatus]=None, expiration_time: datetime=None, initiator_email_id: str=None, invoice_section_id: str=None, last_modified_time: datetime=None, recipient_email_id: str=None, transfer_status: TransferStatus=None):
        """TransferProperties - a model defined in OpenAPI

        :param billing_account_id: The billing_account_id of this TransferProperties.
        :param canceled_by: The canceled_by of this TransferProperties.
        :param creation_time: The creation_time of this TransferProperties.
        :param detailed_transfer_status: The detailed_transfer_status of this TransferProperties.
        :param expiration_time: The expiration_time of this TransferProperties.
        :param initiator_email_id: The initiator_email_id of this TransferProperties.
        :param invoice_section_id: The invoice_section_id of this TransferProperties.
        :param last_modified_time: The last_modified_time of this TransferProperties.
        :param recipient_email_id: The recipient_email_id of this TransferProperties.
        :param transfer_status: The transfer_status of this TransferProperties.
        """
        self.openapi_types = {
            'billing_account_id': str,
            'canceled_by': str,
            'creation_time': datetime,
            'detailed_transfer_status': List[DetailedTransferStatus],
            'expiration_time': datetime,
            'initiator_email_id': str,
            'invoice_section_id': str,
            'last_modified_time': datetime,
            'recipient_email_id': str,
            'transfer_status': TransferStatus
        }

        self.attribute_map = {
            'billing_account_id': 'billingAccountId',
            'canceled_by': 'canceledBy',
            'creation_time': 'creationTime',
            'detailed_transfer_status': 'detailedTransferStatus',
            'expiration_time': 'expirationTime',
            'initiator_email_id': 'initiatorEmailId',
            'invoice_section_id': 'invoiceSectionId',
            'last_modified_time': 'lastModifiedTime',
            'recipient_email_id': 'recipientEmailId',
            'transfer_status': 'transferStatus'
        }

        self._billing_account_id = billing_account_id
        self._canceled_by = canceled_by
        self._creation_time = creation_time
        self._detailed_transfer_status = detailed_transfer_status
        self._expiration_time = expiration_time
        self._initiator_email_id = initiator_email_id
        self._invoice_section_id = invoice_section_id
        self._last_modified_time = last_modified_time
        self._recipient_email_id = recipient_email_id
        self._transfer_status = transfer_status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TransferProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TransferProperties of this TransferProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def billing_account_id(self):
        """Gets the billing_account_id of this TransferProperties.

        Target billing account Id.

        :return: The billing_account_id of this TransferProperties.
        :rtype: str
        """
        return self._billing_account_id

    @billing_account_id.setter
    def billing_account_id(self, billing_account_id):
        """Sets the billing_account_id of this TransferProperties.

        Target billing account Id.

        :param billing_account_id: The billing_account_id of this TransferProperties.
        :type billing_account_id: str
        """

        self._billing_account_id = billing_account_id

    @property
    def canceled_by(self):
        """Gets the canceled_by of this TransferProperties.

        Email Id who user canceled the transfer.

        :return: The canceled_by of this TransferProperties.
        :rtype: str
        """
        return self._canceled_by

    @canceled_by.setter
    def canceled_by(self, canceled_by):
        """Sets the canceled_by of this TransferProperties.

        Email Id who user canceled the transfer.

        :param canceled_by: The canceled_by of this TransferProperties.
        :type canceled_by: str
        """

        self._canceled_by = canceled_by

    @property
    def creation_time(self):
        """Gets the creation_time of this TransferProperties.

        Transfer creation time.

        :return: The creation_time of this TransferProperties.
        :rtype: datetime
        """
        return self._creation_time

    @creation_time.setter
    def creation_time(self, creation_time):
        """Sets the creation_time of this TransferProperties.

        Transfer creation time.

        :param creation_time: The creation_time of this TransferProperties.
        :type creation_time: datetime
        """

        self._creation_time = creation_time

    @property
    def detailed_transfer_status(self):
        """Gets the detailed_transfer_status of this TransferProperties.

        Detailed transfer status.

        :return: The detailed_transfer_status of this TransferProperties.
        :rtype: List[DetailedTransferStatus]
        """
        return self._detailed_transfer_status

    @detailed_transfer_status.setter
    def detailed_transfer_status(self, detailed_transfer_status):
        """Sets the detailed_transfer_status of this TransferProperties.

        Detailed transfer status.

        :param detailed_transfer_status: The detailed_transfer_status of this TransferProperties.
        :type detailed_transfer_status: List[DetailedTransferStatus]
        """

        self._detailed_transfer_status = detailed_transfer_status

    @property
    def expiration_time(self):
        """Gets the expiration_time of this TransferProperties.

        Transfer expiration time.

        :return: The expiration_time of this TransferProperties.
        :rtype: datetime
        """
        return self._expiration_time

    @expiration_time.setter
    def expiration_time(self, expiration_time):
        """Sets the expiration_time of this TransferProperties.

        Transfer expiration time.

        :param expiration_time: The expiration_time of this TransferProperties.
        :type expiration_time: datetime
        """

        self._expiration_time = expiration_time

    @property
    def initiator_email_id(self):
        """Gets the initiator_email_id of this TransferProperties.

        Email Id of initiator of transfer.

        :return: The initiator_email_id of this TransferProperties.
        :rtype: str
        """
        return self._initiator_email_id

    @initiator_email_id.setter
    def initiator_email_id(self, initiator_email_id):
        """Sets the initiator_email_id of this TransferProperties.

        Email Id of initiator of transfer.

        :param initiator_email_id: The initiator_email_id of this TransferProperties.
        :type initiator_email_id: str
        """

        self._initiator_email_id = initiator_email_id

    @property
    def invoice_section_id(self):
        """Gets the invoice_section_id of this TransferProperties.

        Target invoice section Id.

        :return: The invoice_section_id of this TransferProperties.
        :rtype: str
        """
        return self._invoice_section_id

    @invoice_section_id.setter
    def invoice_section_id(self, invoice_section_id):
        """Sets the invoice_section_id of this TransferProperties.

        Target invoice section Id.

        :param invoice_section_id: The invoice_section_id of this TransferProperties.
        :type invoice_section_id: str
        """

        self._invoice_section_id = invoice_section_id

    @property
    def last_modified_time(self):
        """Gets the last_modified_time of this TransferProperties.

        Transfer last modification time.

        :return: The last_modified_time of this TransferProperties.
        :rtype: datetime
        """
        return self._last_modified_time

    @last_modified_time.setter
    def last_modified_time(self, last_modified_time):
        """Sets the last_modified_time of this TransferProperties.

        Transfer last modification time.

        :param last_modified_time: The last_modified_time of this TransferProperties.
        :type last_modified_time: datetime
        """

        self._last_modified_time = last_modified_time

    @property
    def recipient_email_id(self):
        """Gets the recipient_email_id of this TransferProperties.

        Email Id of recipient of transfer.

        :return: The recipient_email_id of this TransferProperties.
        :rtype: str
        """
        return self._recipient_email_id

    @recipient_email_id.setter
    def recipient_email_id(self, recipient_email_id):
        """Sets the recipient_email_id of this TransferProperties.

        Email Id of recipient of transfer.

        :param recipient_email_id: The recipient_email_id of this TransferProperties.
        :type recipient_email_id: str
        """

        self._recipient_email_id = recipient_email_id

    @property
    def transfer_status(self):
        """Gets the transfer_status of this TransferProperties.


        :return: The transfer_status of this TransferProperties.
        :rtype: TransferStatus
        """
        return self._transfer_status

    @transfer_status.setter
    def transfer_status(self, transfer_status):
        """Sets the transfer_status of this TransferProperties.


        :param transfer_status: The transfer_status of this TransferProperties.
        :type transfer_status: TransferStatus
        """

        self._transfer_status = transfer_status
