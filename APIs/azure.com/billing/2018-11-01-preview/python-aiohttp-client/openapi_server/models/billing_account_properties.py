# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.address import Address
from openapi_server.models.billing_profile import BillingProfile
from openapi_server.models.department import Department
from openapi_server.models.enrollment import Enrollment
from openapi_server.models.enrollment_account import EnrollmentAccount
from openapi_server.models.invoice_section import InvoiceSection
from openapi_server import util


class BillingAccountProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_type: str=None, address: Address=None, billing_profiles: List[BillingProfile]=None, company: str=None, country: str=None, departments: List[Department]=None, display_name: str=None, enrollment_accounts: List[EnrollmentAccount]=None, enrollment_details: Enrollment=None, has_read_access: bool=None, invoice_sections: List[InvoiceSection]=None):
        """BillingAccountProperties - a model defined in OpenAPI

        :param account_type: The account_type of this BillingAccountProperties.
        :param address: The address of this BillingAccountProperties.
        :param billing_profiles: The billing_profiles of this BillingAccountProperties.
        :param company: The company of this BillingAccountProperties.
        :param country: The country of this BillingAccountProperties.
        :param departments: The departments of this BillingAccountProperties.
        :param display_name: The display_name of this BillingAccountProperties.
        :param enrollment_accounts: The enrollment_accounts of this BillingAccountProperties.
        :param enrollment_details: The enrollment_details of this BillingAccountProperties.
        :param has_read_access: The has_read_access of this BillingAccountProperties.
        :param invoice_sections: The invoice_sections of this BillingAccountProperties.
        """
        self.openapi_types = {
            'account_type': str,
            'address': Address,
            'billing_profiles': List[BillingProfile],
            'company': str,
            'country': str,
            'departments': List[Department],
            'display_name': str,
            'enrollment_accounts': List[EnrollmentAccount],
            'enrollment_details': Enrollment,
            'has_read_access': bool,
            'invoice_sections': List[InvoiceSection]
        }

        self.attribute_map = {
            'account_type': 'accountType',
            'address': 'address',
            'billing_profiles': 'billingProfiles',
            'company': 'company',
            'country': 'country',
            'departments': 'departments',
            'display_name': 'displayName',
            'enrollment_accounts': 'enrollmentAccounts',
            'enrollment_details': 'enrollmentDetails',
            'has_read_access': 'hasReadAccess',
            'invoice_sections': 'invoiceSections'
        }

        self._account_type = account_type
        self._address = address
        self._billing_profiles = billing_profiles
        self._company = company
        self._country = country
        self._departments = departments
        self._display_name = display_name
        self._enrollment_accounts = enrollment_accounts
        self._enrollment_details = enrollment_details
        self._has_read_access = has_read_access
        self._invoice_sections = invoice_sections

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BillingAccountProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BillingAccountProperties of this BillingAccountProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_type(self):
        """Gets the account_type of this BillingAccountProperties.

        The billing account Type.

        :return: The account_type of this BillingAccountProperties.
        :rtype: str
        """
        return self._account_type

    @account_type.setter
    def account_type(self, account_type):
        """Sets the account_type of this BillingAccountProperties.

        The billing account Type.

        :param account_type: The account_type of this BillingAccountProperties.
        :type account_type: str
        """
        allowed_values = ["Organization", "Enrollment"]  # noqa: E501
        if account_type not in allowed_values:
            raise ValueError(
                "Invalid value for `account_type` ({0}), must be one of {1}"
                .format(account_type, allowed_values)
            )

        self._account_type = account_type

    @property
    def address(self):
        """Gets the address of this BillingAccountProperties.


        :return: The address of this BillingAccountProperties.
        :rtype: Address
        """
        return self._address

    @address.setter
    def address(self, address):
        """Sets the address of this BillingAccountProperties.


        :param address: The address of this BillingAccountProperties.
        :type address: Address
        """

        self._address = address

    @property
    def billing_profiles(self):
        """Gets the billing_profiles of this BillingAccountProperties.

        The billing profiles associated to the billing account. By default this is not populated, unless it's specified in $expand.

        :return: The billing_profiles of this BillingAccountProperties.
        :rtype: List[BillingProfile]
        """
        return self._billing_profiles

    @billing_profiles.setter
    def billing_profiles(self, billing_profiles):
        """Sets the billing_profiles of this BillingAccountProperties.

        The billing profiles associated to the billing account. By default this is not populated, unless it's specified in $expand.

        :param billing_profiles: The billing_profiles of this BillingAccountProperties.
        :type billing_profiles: List[BillingProfile]
        """

        self._billing_profiles = billing_profiles

    @property
    def company(self):
        """Gets the company of this BillingAccountProperties.

        Company Name.

        :return: The company of this BillingAccountProperties.
        :rtype: str
        """
        return self._company

    @company.setter
    def company(self, company):
        """Sets the company of this BillingAccountProperties.

        Company Name.

        :param company: The company of this BillingAccountProperties.
        :type company: str
        """

        self._company = company

    @property
    def country(self):
        """Gets the country of this BillingAccountProperties.

        Country Name.

        :return: The country of this BillingAccountProperties.
        :rtype: str
        """
        return self._country

    @country.setter
    def country(self, country):
        """Sets the country of this BillingAccountProperties.

        Country Name.

        :param country: The country of this BillingAccountProperties.
        :type country: str
        """

        self._country = country

    @property
    def departments(self):
        """Gets the departments of this BillingAccountProperties.

        The departments associated to the enrollment.

        :return: The departments of this BillingAccountProperties.
        :rtype: List[Department]
        """
        return self._departments

    @departments.setter
    def departments(self, departments):
        """Sets the departments of this BillingAccountProperties.

        The departments associated to the enrollment.

        :param departments: The departments of this BillingAccountProperties.
        :type departments: List[Department]
        """

        self._departments = departments

    @property
    def display_name(self):
        """Gets the display_name of this BillingAccountProperties.

        The billing account name.

        :return: The display_name of this BillingAccountProperties.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this BillingAccountProperties.

        The billing account name.

        :param display_name: The display_name of this BillingAccountProperties.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def enrollment_accounts(self):
        """Gets the enrollment_accounts of this BillingAccountProperties.

        The accounts associated to the enrollment.

        :return: The enrollment_accounts of this BillingAccountProperties.
        :rtype: List[EnrollmentAccount]
        """
        return self._enrollment_accounts

    @enrollment_accounts.setter
    def enrollment_accounts(self, enrollment_accounts):
        """Sets the enrollment_accounts of this BillingAccountProperties.

        The accounts associated to the enrollment.

        :param enrollment_accounts: The enrollment_accounts of this BillingAccountProperties.
        :type enrollment_accounts: List[EnrollmentAccount]
        """

        self._enrollment_accounts = enrollment_accounts

    @property
    def enrollment_details(self):
        """Gets the enrollment_details of this BillingAccountProperties.


        :return: The enrollment_details of this BillingAccountProperties.
        :rtype: Enrollment
        """
        return self._enrollment_details

    @enrollment_details.setter
    def enrollment_details(self, enrollment_details):
        """Sets the enrollment_details of this BillingAccountProperties.


        :param enrollment_details: The enrollment_details of this BillingAccountProperties.
        :type enrollment_details: Enrollment
        """

        self._enrollment_details = enrollment_details

    @property
    def has_read_access(self):
        """Gets the has_read_access of this BillingAccountProperties.

        Specifies whether the user has read access on billing account.

        :return: The has_read_access of this BillingAccountProperties.
        :rtype: bool
        """
        return self._has_read_access

    @has_read_access.setter
    def has_read_access(self, has_read_access):
        """Sets the has_read_access of this BillingAccountProperties.

        Specifies whether the user has read access on billing account.

        :param has_read_access: The has_read_access of this BillingAccountProperties.
        :type has_read_access: bool
        """

        self._has_read_access = has_read_access

    @property
    def invoice_sections(self):
        """Gets the invoice_sections of this BillingAccountProperties.

        The invoice sections associated to the billing account. By default this is not populated, unless it's specified in $expand.

        :return: The invoice_sections of this BillingAccountProperties.
        :rtype: List[InvoiceSection]
        """
        return self._invoice_sections

    @invoice_sections.setter
    def invoice_sections(self, invoice_sections):
        """Sets the invoice_sections of this BillingAccountProperties.

        The invoice sections associated to the billing account. By default this is not populated, unless it's specified in $expand.

        :param invoice_sections: The invoice_sections of this BillingAccountProperties.
        :type invoice_sections: List[InvoiceSection]
        """

        self._invoice_sections = invoice_sections
