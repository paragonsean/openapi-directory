# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.participants import Participants
from openapi_server import util


class AgreementProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, agreement_link: str=None, effective_date: datetime=None, expiration_date: datetime=None, participants: List[Participants]=None, status: str=None):
        """AgreementProperties - a model defined in OpenAPI

        :param agreement_link: The agreement_link of this AgreementProperties.
        :param effective_date: The effective_date of this AgreementProperties.
        :param expiration_date: The expiration_date of this AgreementProperties.
        :param participants: The participants of this AgreementProperties.
        :param status: The status of this AgreementProperties.
        """
        self.openapi_types = {
            'agreement_link': str,
            'effective_date': datetime,
            'expiration_date': datetime,
            'participants': List[Participants],
            'status': str
        }

        self.attribute_map = {
            'agreement_link': 'agreementLink',
            'effective_date': 'effectiveDate',
            'expiration_date': 'expirationDate',
            'participants': 'participants',
            'status': 'status'
        }

        self._agreement_link = agreement_link
        self._effective_date = effective_date
        self._expiration_date = expiration_date
        self._participants = participants
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AgreementProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AgreementProperties of this AgreementProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def agreement_link(self):
        """Gets the agreement_link of this AgreementProperties.

        The link to the agreement.

        :return: The agreement_link of this AgreementProperties.
        :rtype: str
        """
        return self._agreement_link

    @agreement_link.setter
    def agreement_link(self, agreement_link):
        """Sets the agreement_link of this AgreementProperties.

        The link to the agreement.

        :param agreement_link: The agreement_link of this AgreementProperties.
        :type agreement_link: str
        """

        self._agreement_link = agreement_link

    @property
    def effective_date(self):
        """Gets the effective_date of this AgreementProperties.

        Effective date.

        :return: The effective_date of this AgreementProperties.
        :rtype: datetime
        """
        return self._effective_date

    @effective_date.setter
    def effective_date(self, effective_date):
        """Sets the effective_date of this AgreementProperties.

        Effective date.

        :param effective_date: The effective_date of this AgreementProperties.
        :type effective_date: datetime
        """

        self._effective_date = effective_date

    @property
    def expiration_date(self):
        """Gets the expiration_date of this AgreementProperties.

        Expiration date.

        :return: The expiration_date of this AgreementProperties.
        :rtype: datetime
        """
        return self._expiration_date

    @expiration_date.setter
    def expiration_date(self, expiration_date):
        """Sets the expiration_date of this AgreementProperties.

        Expiration date.

        :param expiration_date: The expiration_date of this AgreementProperties.
        :type expiration_date: datetime
        """

        self._expiration_date = expiration_date

    @property
    def participants(self):
        """Gets the participants of this AgreementProperties.

        Participants or signer of the agreement.

        :return: The participants of this AgreementProperties.
        :rtype: List[Participants]
        """
        return self._participants

    @participants.setter
    def participants(self, participants):
        """Sets the participants of this AgreementProperties.

        Participants or signer of the agreement.

        :param participants: The participants of this AgreementProperties.
        :type participants: List[Participants]
        """

        self._participants = participants

    @property
    def status(self):
        """Gets the status of this AgreementProperties.

        The agreement status

        :return: The status of this AgreementProperties.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this AgreementProperties.

        The agreement status

        :param status: The status of this AgreementProperties.
        :type status: str
        """

        self._status = status
