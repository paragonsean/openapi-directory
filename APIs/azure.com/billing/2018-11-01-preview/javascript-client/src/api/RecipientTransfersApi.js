/**
 * BillingManagementClient
 * Billing client provides access to billing resources for Azure subscriptions.
 *
 * The version of the OpenAPI document: 2018-11-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AcceptTransferRequest from '../model/AcceptTransferRequest';
import ErrorResponse from '../model/ErrorResponse';
import RecipientTransferDetails from '../model/RecipientTransferDetails';
import RecipientTransferDetailsListResult from '../model/RecipientTransferDetailsListResult';

/**
* RecipientTransfers service.
* @module api/RecipientTransfersApi
* @version 2018-11-01-preview
*/
export default class RecipientTransfersApi {

    /**
    * Constructs a new RecipientTransfersApi. 
    * @alias module:api/RecipientTransfersApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the recipientTransfersAccept operation.
     * @callback module:api/RecipientTransfersApi~recipientTransfersAcceptCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RecipientTransferDetails} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Accepts the transfer with given transfer Id.
     * @param {String} transferName Transfer Name.
     * @param {module:model/AcceptTransferRequest} body Accept transfer parameters.
     * @param {module:api/RecipientTransfersApi~recipientTransfersAcceptCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RecipientTransferDetails}
     */
    recipientTransfersAccept(transferName, body, callback) {
      let postBody = body;
      // verify the required parameter 'transferName' is set
      if (transferName === undefined || transferName === null) {
        throw new Error("Missing the required parameter 'transferName' when calling recipientTransfersAccept");
      }
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling recipientTransfersAccept");
      }

      let pathParams = {
        'transferName': transferName
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = RecipientTransferDetails;
      return this.apiClient.callApi(
        '/providers/Microsoft.Billing/transfers/{transferName}/acceptTransfer', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the recipientTransfersDecline operation.
     * @callback module:api/RecipientTransfersApi~recipientTransfersDeclineCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RecipientTransferDetails} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Declines the transfer with given transfer Id.
     * @param {String} transferName Transfer Name.
     * @param {module:api/RecipientTransfersApi~recipientTransfersDeclineCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RecipientTransferDetails}
     */
    recipientTransfersDecline(transferName, callback) {
      let postBody = null;
      // verify the required parameter 'transferName' is set
      if (transferName === undefined || transferName === null) {
        throw new Error("Missing the required parameter 'transferName' when calling recipientTransfersDecline");
      }

      let pathParams = {
        'transferName': transferName
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = RecipientTransferDetails;
      return this.apiClient.callApi(
        '/providers/Microsoft.Billing/transfers/{transferName}/declineTransfer', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the recipientTransfersGet operation.
     * @callback module:api/RecipientTransfersApi~recipientTransfersGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RecipientTransferDetails} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the transfer with given transfer Id.
     * @param {String} transferName Transfer Name.
     * @param {module:api/RecipientTransfersApi~recipientTransfersGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RecipientTransferDetails}
     */
    recipientTransfersGet(transferName, callback) {
      let postBody = null;
      // verify the required parameter 'transferName' is set
      if (transferName === undefined || transferName === null) {
        throw new Error("Missing the required parameter 'transferName' when calling recipientTransfersGet");
      }

      let pathParams = {
        'transferName': transferName
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = RecipientTransferDetails;
      return this.apiClient.callApi(
        '/providers/Microsoft.Billing/transfers/{transferName}/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the recipientTransfersList operation.
     * @callback module:api/RecipientTransfersApi~recipientTransfersListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RecipientTransferDetailsListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists the transfers received by caller.
     * @param {module:api/RecipientTransfersApi~recipientTransfersListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RecipientTransferDetailsListResult}
     */
    recipientTransfersList(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = RecipientTransferDetailsListResult;
      return this.apiClient.callApi(
        '/providers/Microsoft.Billing/transfers', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
