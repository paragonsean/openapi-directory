/**
 * BillingManagementClient
 * Billing client provides access to billing resources for Azure subscriptions.
 *
 * The version of the OpenAPI document: 2018-11-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErrorResponse from '../model/ErrorResponse';
import TransferBillingSubscriptionRequestProperties from '../model/TransferBillingSubscriptionRequestProperties';
import TransferBillingSubscriptionResult from '../model/TransferBillingSubscriptionResult';
import TransferProductRequestProperties from '../model/TransferProductRequestProperties';
import ValidateProductTransferEligibilityResult from '../model/ValidateProductTransferEligibilityResult';
import ValidateSubscriptionTransferEligibilityResult from '../model/ValidateSubscriptionTransferEligibilityResult';

/**
* Default service.
* @module api/DefaultApi
* @version 2018-11-01-preview
*/
export default class DefaultApi {

    /**
    * Constructs a new DefaultApi. 
    * @alias module:api/DefaultApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the billingSubscriptionsTransfer operation.
     * @callback module:api/DefaultApi~billingSubscriptionsTransferCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransferBillingSubscriptionResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Transfers the subscription from one invoice section to another within a billing account.
     * @param {String} billingAccountName Billing Account Id.
     * @param {String} invoiceSectionName InvoiceSection Id.
     * @param {String} billingSubscriptionName Billing Subscription Id.
     * @param {module:model/TransferBillingSubscriptionRequestProperties} parameters Parameters supplied to the Transfer Billing Subscription operation.
     * @param {module:api/DefaultApi~billingSubscriptionsTransferCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransferBillingSubscriptionResult}
     */
    billingSubscriptionsTransfer(billingAccountName, invoiceSectionName, billingSubscriptionName, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'billingAccountName' is set
      if (billingAccountName === undefined || billingAccountName === null) {
        throw new Error("Missing the required parameter 'billingAccountName' when calling billingSubscriptionsTransfer");
      }
      // verify the required parameter 'invoiceSectionName' is set
      if (invoiceSectionName === undefined || invoiceSectionName === null) {
        throw new Error("Missing the required parameter 'invoiceSectionName' when calling billingSubscriptionsTransfer");
      }
      // verify the required parameter 'billingSubscriptionName' is set
      if (billingSubscriptionName === undefined || billingSubscriptionName === null) {
        throw new Error("Missing the required parameter 'billingSubscriptionName' when calling billingSubscriptionsTransfer");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling billingSubscriptionsTransfer");
      }

      let pathParams = {
        'billingAccountName': billingAccountName,
        'invoiceSectionName': invoiceSectionName,
        'billingSubscriptionName': billingSubscriptionName
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = TransferBillingSubscriptionResult;
      return this.apiClient.callApi(
        '/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/invoiceSections/{invoiceSectionName}/billingSubscriptions/{billingSubscriptionName}/transfer', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the billingSubscriptionsValidateTransfer operation.
     * @callback module:api/DefaultApi~billingSubscriptionsValidateTransferCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ValidateSubscriptionTransferEligibilityResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Validates the transfer of billing subscriptions across invoice sections.
     * @param {String} billingAccountName Billing Account Id.
     * @param {String} invoiceSectionName InvoiceSection Id.
     * @param {String} billingSubscriptionName Billing Subscription Id.
     * @param {module:model/TransferBillingSubscriptionRequestProperties} parameters Parameters supplied to the Transfer Billing Subscription operation.
     * @param {module:api/DefaultApi~billingSubscriptionsValidateTransferCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ValidateSubscriptionTransferEligibilityResult}
     */
    billingSubscriptionsValidateTransfer(billingAccountName, invoiceSectionName, billingSubscriptionName, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'billingAccountName' is set
      if (billingAccountName === undefined || billingAccountName === null) {
        throw new Error("Missing the required parameter 'billingAccountName' when calling billingSubscriptionsValidateTransfer");
      }
      // verify the required parameter 'invoiceSectionName' is set
      if (invoiceSectionName === undefined || invoiceSectionName === null) {
        throw new Error("Missing the required parameter 'invoiceSectionName' when calling billingSubscriptionsValidateTransfer");
      }
      // verify the required parameter 'billingSubscriptionName' is set
      if (billingSubscriptionName === undefined || billingSubscriptionName === null) {
        throw new Error("Missing the required parameter 'billingSubscriptionName' when calling billingSubscriptionsValidateTransfer");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling billingSubscriptionsValidateTransfer");
      }

      let pathParams = {
        'billingAccountName': billingAccountName,
        'invoiceSectionName': invoiceSectionName,
        'billingSubscriptionName': billingSubscriptionName
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ValidateSubscriptionTransferEligibilityResult;
      return this.apiClient.callApi(
        '/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/invoiceSections/{invoiceSectionName}/billingSubscriptions/{billingSubscriptionName}/validateTransferEligibility', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the productsValidateTransfer operation.
     * @callback module:api/DefaultApi~productsValidateTransferCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ValidateProductTransferEligibilityResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Validates the transfer of products across invoice sections.
     * @param {String} billingAccountName Billing Account Id.
     * @param {String} invoiceSectionName InvoiceSection Id.
     * @param {String} productName Invoice Id.
     * @param {module:model/TransferProductRequestProperties} parameters Parameters supplied to the Transfer Products operation.
     * @param {module:api/DefaultApi~productsValidateTransferCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ValidateProductTransferEligibilityResult}
     */
    productsValidateTransfer(billingAccountName, invoiceSectionName, productName, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'billingAccountName' is set
      if (billingAccountName === undefined || billingAccountName === null) {
        throw new Error("Missing the required parameter 'billingAccountName' when calling productsValidateTransfer");
      }
      // verify the required parameter 'invoiceSectionName' is set
      if (invoiceSectionName === undefined || invoiceSectionName === null) {
        throw new Error("Missing the required parameter 'invoiceSectionName' when calling productsValidateTransfer");
      }
      // verify the required parameter 'productName' is set
      if (productName === undefined || productName === null) {
        throw new Error("Missing the required parameter 'productName' when calling productsValidateTransfer");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling productsValidateTransfer");
      }

      let pathParams = {
        'billingAccountName': billingAccountName,
        'invoiceSectionName': invoiceSectionName,
        'productName': productName
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ValidateProductTransferEligibilityResult;
      return this.apiClient.callApi(
        '/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/invoiceSections/{invoiceSectionName}/products/{productName}/validateTransferEligibility', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
