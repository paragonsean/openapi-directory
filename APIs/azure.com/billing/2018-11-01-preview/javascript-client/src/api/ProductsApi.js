/**
 * BillingManagementClient
 * Billing client provides access to billing resources for Azure subscriptions.
 *
 * The version of the OpenAPI document: 2018-11-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErrorResponse from '../model/ErrorResponse';
import ProductSummary from '../model/ProductSummary';
import ProductsListResult from '../model/ProductsListResult';
import TransferProductRequestProperties from '../model/TransferProductRequestProperties';
import UpdateAutoRenewOperationSummary from '../model/UpdateAutoRenewOperationSummary';
import UpdateAutoRenewRequest from '../model/UpdateAutoRenewRequest';

/**
* Products service.
* @module api/ProductsApi
* @version 2018-11-01-preview
*/
export default class ProductsApi {

    /**
    * Constructs a new ProductsApi. 
    * @alias module:api/ProductsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the productsGet operation.
     * @callback module:api/ProductsApi~productsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ProductSummary} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a single product by name.
     * @param {String} billingAccountName Billing Account Id.
     * @param {String} invoiceSectionName InvoiceSection Id.
     * @param {String} productName Invoice Id.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-11-01-preview.
     * @param {module:api/ProductsApi~productsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ProductSummary}
     */
    productsGet(billingAccountName, invoiceSectionName, productName, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'billingAccountName' is set
      if (billingAccountName === undefined || billingAccountName === null) {
        throw new Error("Missing the required parameter 'billingAccountName' when calling productsGet");
      }
      // verify the required parameter 'invoiceSectionName' is set
      if (invoiceSectionName === undefined || invoiceSectionName === null) {
        throw new Error("Missing the required parameter 'invoiceSectionName' when calling productsGet");
      }
      // verify the required parameter 'productName' is set
      if (productName === undefined || productName === null) {
        throw new Error("Missing the required parameter 'productName' when calling productsGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling productsGet");
      }

      let pathParams = {
        'billingAccountName': billingAccountName,
        'invoiceSectionName': invoiceSectionName,
        'productName': productName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ProductSummary;
      return this.apiClient.callApi(
        '/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/invoiceSections/{invoiceSectionName}/products/{productName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the productsListByBillingAccountName operation.
     * @callback module:api/ProductsApi~productsListByBillingAccountNameCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ProductsListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists products by billing account name.
     * @param {String} billingAccountName Billing Account Id.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-11-01-preview.
     * @param {Object} opts Optional parameters
     * @param {String} [filter] May be used to filter by product type. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'. Tag filter is a key value pair string where key and value is separated by a colon (:).
     * @param {module:api/ProductsApi~productsListByBillingAccountNameCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ProductsListResult}
     */
    productsListByBillingAccountName(billingAccountName, apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'billingAccountName' is set
      if (billingAccountName === undefined || billingAccountName === null) {
        throw new Error("Missing the required parameter 'billingAccountName' when calling productsListByBillingAccountName");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling productsListByBillingAccountName");
      }

      let pathParams = {
        'billingAccountName': billingAccountName
      };
      let queryParams = {
        'api-version': apiVersion,
        '$filter': opts['filter']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ProductsListResult;
      return this.apiClient.callApi(
        '/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/products', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the productsListByInvoiceSectionName operation.
     * @callback module:api/ProductsApi~productsListByInvoiceSectionNameCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ProductsListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists products by invoice section name.
     * @param {String} billingAccountName Billing Account Id.
     * @param {String} invoiceSectionName InvoiceSection Id.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-11-01-preview.
     * @param {Object} opts Optional parameters
     * @param {String} [filter] May be used to filter by product type. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'. Tag filter is a key value pair string where key and value is separated by a colon (:).
     * @param {module:api/ProductsApi~productsListByInvoiceSectionNameCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ProductsListResult}
     */
    productsListByInvoiceSectionName(billingAccountName, invoiceSectionName, apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'billingAccountName' is set
      if (billingAccountName === undefined || billingAccountName === null) {
        throw new Error("Missing the required parameter 'billingAccountName' when calling productsListByInvoiceSectionName");
      }
      // verify the required parameter 'invoiceSectionName' is set
      if (invoiceSectionName === undefined || invoiceSectionName === null) {
        throw new Error("Missing the required parameter 'invoiceSectionName' when calling productsListByInvoiceSectionName");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling productsListByInvoiceSectionName");
      }

      let pathParams = {
        'billingAccountName': billingAccountName,
        'invoiceSectionName': invoiceSectionName
      };
      let queryParams = {
        'api-version': apiVersion,
        '$filter': opts['filter']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ProductsListResult;
      return this.apiClient.callApi(
        '/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/invoiceSections/{invoiceSectionName}/products', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the productsTransfer operation.
     * @callback module:api/ProductsApi~productsTransferCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ProductSummary} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * The operation to transfer a Product to another invoice section.
     * @param {String} billingAccountName Billing Account Id.
     * @param {String} invoiceSectionName InvoiceSection Id.
     * @param {String} productName Invoice Id.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-11-01-preview.
     * @param {module:model/TransferProductRequestProperties} parameters Parameters supplied to the Transfer Product operation.
     * @param {module:api/ProductsApi~productsTransferCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ProductSummary}
     */
    productsTransfer(billingAccountName, invoiceSectionName, productName, apiVersion, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'billingAccountName' is set
      if (billingAccountName === undefined || billingAccountName === null) {
        throw new Error("Missing the required parameter 'billingAccountName' when calling productsTransfer");
      }
      // verify the required parameter 'invoiceSectionName' is set
      if (invoiceSectionName === undefined || invoiceSectionName === null) {
        throw new Error("Missing the required parameter 'invoiceSectionName' when calling productsTransfer");
      }
      // verify the required parameter 'productName' is set
      if (productName === undefined || productName === null) {
        throw new Error("Missing the required parameter 'productName' when calling productsTransfer");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling productsTransfer");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling productsTransfer");
      }

      let pathParams = {
        'billingAccountName': billingAccountName,
        'invoiceSectionName': invoiceSectionName,
        'productName': productName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ProductSummary;
      return this.apiClient.callApi(
        '/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/invoiceSections/{invoiceSectionName}/products/{productName}/transfer', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the productsUpdateAutoRenewByBillingAccountName operation.
     * @callback module:api/ProductsApi~productsUpdateAutoRenewByBillingAccountNameCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UpdateAutoRenewOperationSummary} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Cancel auto renew for product by product id and billing account name
     * @param {String} billingAccountName Billing Account Id.
     * @param {String} productName Invoice Id.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-11-01-preview.
     * @param {module:model/UpdateAutoRenewRequest} body Update auto renew request parameters.
     * @param {module:api/ProductsApi~productsUpdateAutoRenewByBillingAccountNameCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UpdateAutoRenewOperationSummary}
     */
    productsUpdateAutoRenewByBillingAccountName(billingAccountName, productName, apiVersion, body, callback) {
      let postBody = body;
      // verify the required parameter 'billingAccountName' is set
      if (billingAccountName === undefined || billingAccountName === null) {
        throw new Error("Missing the required parameter 'billingAccountName' when calling productsUpdateAutoRenewByBillingAccountName");
      }
      // verify the required parameter 'productName' is set
      if (productName === undefined || productName === null) {
        throw new Error("Missing the required parameter 'productName' when calling productsUpdateAutoRenewByBillingAccountName");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling productsUpdateAutoRenewByBillingAccountName");
      }
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling productsUpdateAutoRenewByBillingAccountName");
      }

      let pathParams = {
        'billingAccountName': billingAccountName,
        'productName': productName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = UpdateAutoRenewOperationSummary;
      return this.apiClient.callApi(
        '/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/products/{productName}/updateAutoRenew', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the productsUpdateAutoRenewByInvoiceSectionName operation.
     * @callback module:api/ProductsApi~productsUpdateAutoRenewByInvoiceSectionNameCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UpdateAutoRenewOperationSummary} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Cancel auto renew for product by product id and invoice section name
     * @param {String} billingAccountName Billing Account Id.
     * @param {String} invoiceSectionName InvoiceSection Id.
     * @param {String} productName Invoice Id.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-11-01-preview.
     * @param {module:model/UpdateAutoRenewRequest} body Update auto renew request parameters.
     * @param {module:api/ProductsApi~productsUpdateAutoRenewByInvoiceSectionNameCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UpdateAutoRenewOperationSummary}
     */
    productsUpdateAutoRenewByInvoiceSectionName(billingAccountName, invoiceSectionName, productName, apiVersion, body, callback) {
      let postBody = body;
      // verify the required parameter 'billingAccountName' is set
      if (billingAccountName === undefined || billingAccountName === null) {
        throw new Error("Missing the required parameter 'billingAccountName' when calling productsUpdateAutoRenewByInvoiceSectionName");
      }
      // verify the required parameter 'invoiceSectionName' is set
      if (invoiceSectionName === undefined || invoiceSectionName === null) {
        throw new Error("Missing the required parameter 'invoiceSectionName' when calling productsUpdateAutoRenewByInvoiceSectionName");
      }
      // verify the required parameter 'productName' is set
      if (productName === undefined || productName === null) {
        throw new Error("Missing the required parameter 'productName' when calling productsUpdateAutoRenewByInvoiceSectionName");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling productsUpdateAutoRenewByInvoiceSectionName");
      }
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling productsUpdateAutoRenewByInvoiceSectionName");
      }

      let pathParams = {
        'billingAccountName': billingAccountName,
        'invoiceSectionName': invoiceSectionName,
        'productName': productName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = UpdateAutoRenewOperationSummary;
      return this.apiClient.callApi(
        '/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/invoiceSections/{invoiceSectionName}/products/{productName}/updateAutoRenew', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
