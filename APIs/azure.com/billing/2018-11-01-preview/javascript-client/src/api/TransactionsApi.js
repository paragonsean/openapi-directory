/**
 * BillingManagementClient
 * Billing client provides access to billing resources for Azure subscriptions.
 *
 * The version of the OpenAPI document: 2018-11-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErrorResponse from '../model/ErrorResponse';
import TransactionsListResult from '../model/TransactionsListResult';

/**
* Transactions service.
* @module api/TransactionsApi
* @version 2018-11-01-preview
*/
export default class TransactionsApi {

    /**
    * Constructs a new TransactionsApi. 
    * @alias module:api/TransactionsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the transactionsListByBillingAccountName operation.
     * @callback module:api/TransactionsApi~transactionsListByBillingAccountNameCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransactionsListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists the transactions by billing account name for given start and end date.
     * @param {String} billingAccountName Billing Account Id.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-11-01-preview.
     * @param {String} startDate Start date
     * @param {String} endDate End date
     * @param {Object} opts Optional parameters
     * @param {String} [filter] May be used to filter by transaction kind. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'. Tag filter is a key value pair string where key and value is separated by a colon (:).
     * @param {module:api/TransactionsApi~transactionsListByBillingAccountNameCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransactionsListResult}
     */
    transactionsListByBillingAccountName(billingAccountName, apiVersion, startDate, endDate, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'billingAccountName' is set
      if (billingAccountName === undefined || billingAccountName === null) {
        throw new Error("Missing the required parameter 'billingAccountName' when calling transactionsListByBillingAccountName");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling transactionsListByBillingAccountName");
      }
      // verify the required parameter 'startDate' is set
      if (startDate === undefined || startDate === null) {
        throw new Error("Missing the required parameter 'startDate' when calling transactionsListByBillingAccountName");
      }
      // verify the required parameter 'endDate' is set
      if (endDate === undefined || endDate === null) {
        throw new Error("Missing the required parameter 'endDate' when calling transactionsListByBillingAccountName");
      }

      let pathParams = {
        'billingAccountName': billingAccountName
      };
      let queryParams = {
        'api-version': apiVersion,
        'startDate': startDate,
        'endDate': endDate,
        '$filter': opts['filter']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = TransactionsListResult;
      return this.apiClient.callApi(
        '/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/transactions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the transactionsListByBillingProfileName operation.
     * @callback module:api/TransactionsApi~transactionsListByBillingProfileNameCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransactionsListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists the transactions by billing profile name for given start date and end date.
     * @param {String} billingAccountName Billing Account Id.
     * @param {String} billingProfileName Billing Profile Id.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-11-01-preview.
     * @param {String} startDate Start date
     * @param {String} endDate End date
     * @param {Object} opts Optional parameters
     * @param {String} [filter] May be used to filter by transaction kind. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'. Tag filter is a key value pair string where key and value is separated by a colon (:).
     * @param {module:api/TransactionsApi~transactionsListByBillingProfileNameCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransactionsListResult}
     */
    transactionsListByBillingProfileName(billingAccountName, billingProfileName, apiVersion, startDate, endDate, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'billingAccountName' is set
      if (billingAccountName === undefined || billingAccountName === null) {
        throw new Error("Missing the required parameter 'billingAccountName' when calling transactionsListByBillingProfileName");
      }
      // verify the required parameter 'billingProfileName' is set
      if (billingProfileName === undefined || billingProfileName === null) {
        throw new Error("Missing the required parameter 'billingProfileName' when calling transactionsListByBillingProfileName");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling transactionsListByBillingProfileName");
      }
      // verify the required parameter 'startDate' is set
      if (startDate === undefined || startDate === null) {
        throw new Error("Missing the required parameter 'startDate' when calling transactionsListByBillingProfileName");
      }
      // verify the required parameter 'endDate' is set
      if (endDate === undefined || endDate === null) {
        throw new Error("Missing the required parameter 'endDate' when calling transactionsListByBillingProfileName");
      }

      let pathParams = {
        'billingAccountName': billingAccountName,
        'billingProfileName': billingProfileName
      };
      let queryParams = {
        'api-version': apiVersion,
        'startDate': startDate,
        'endDate': endDate,
        '$filter': opts['filter']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = TransactionsListResult;
      return this.apiClient.callApi(
        '/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/billingProfiles/{billingProfileName}/transactions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the transactionsListByCustomerName operation.
     * @callback module:api/TransactionsApi~transactionsListByCustomerNameCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransactionsListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists the transactions by invoice section name for given start date and end date.
     * @param {String} billingAccountName Billing Account Id.
     * @param {String} customerName Customer Id.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-11-01-preview.
     * @param {String} startDate Start date
     * @param {String} endDate End date
     * @param {Object} opts Optional parameters
     * @param {String} [filter] May be used to filter by transaction kind. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'. Tag filter is a key value pair string where key and value is separated by a colon (:).
     * @param {module:api/TransactionsApi~transactionsListByCustomerNameCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransactionsListResult}
     */
    transactionsListByCustomerName(billingAccountName, customerName, apiVersion, startDate, endDate, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'billingAccountName' is set
      if (billingAccountName === undefined || billingAccountName === null) {
        throw new Error("Missing the required parameter 'billingAccountName' when calling transactionsListByCustomerName");
      }
      // verify the required parameter 'customerName' is set
      if (customerName === undefined || customerName === null) {
        throw new Error("Missing the required parameter 'customerName' when calling transactionsListByCustomerName");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling transactionsListByCustomerName");
      }
      // verify the required parameter 'startDate' is set
      if (startDate === undefined || startDate === null) {
        throw new Error("Missing the required parameter 'startDate' when calling transactionsListByCustomerName");
      }
      // verify the required parameter 'endDate' is set
      if (endDate === undefined || endDate === null) {
        throw new Error("Missing the required parameter 'endDate' when calling transactionsListByCustomerName");
      }

      let pathParams = {
        'billingAccountName': billingAccountName,
        'customerName': customerName
      };
      let queryParams = {
        'api-version': apiVersion,
        'startDate': startDate,
        'endDate': endDate,
        '$filter': opts['filter']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = TransactionsListResult;
      return this.apiClient.callApi(
        '/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/customers/{customerName}/transactions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the transactionsListByInvoiceSectionName operation.
     * @callback module:api/TransactionsApi~transactionsListByInvoiceSectionNameCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransactionsListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists the transactions by invoice section name for given start date and end date.
     * @param {String} billingAccountName Billing Account Id.
     * @param {String} invoiceSectionName InvoiceSection Id.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-11-01-preview.
     * @param {String} startDate Start date
     * @param {String} endDate End date
     * @param {Object} opts Optional parameters
     * @param {String} [filter] May be used to filter by transaction kind. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'. Tag filter is a key value pair string where key and value is separated by a colon (:).
     * @param {module:api/TransactionsApi~transactionsListByInvoiceSectionNameCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransactionsListResult}
     */
    transactionsListByInvoiceSectionName(billingAccountName, invoiceSectionName, apiVersion, startDate, endDate, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'billingAccountName' is set
      if (billingAccountName === undefined || billingAccountName === null) {
        throw new Error("Missing the required parameter 'billingAccountName' when calling transactionsListByInvoiceSectionName");
      }
      // verify the required parameter 'invoiceSectionName' is set
      if (invoiceSectionName === undefined || invoiceSectionName === null) {
        throw new Error("Missing the required parameter 'invoiceSectionName' when calling transactionsListByInvoiceSectionName");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling transactionsListByInvoiceSectionName");
      }
      // verify the required parameter 'startDate' is set
      if (startDate === undefined || startDate === null) {
        throw new Error("Missing the required parameter 'startDate' when calling transactionsListByInvoiceSectionName");
      }
      // verify the required parameter 'endDate' is set
      if (endDate === undefined || endDate === null) {
        throw new Error("Missing the required parameter 'endDate' when calling transactionsListByInvoiceSectionName");
      }

      let pathParams = {
        'billingAccountName': billingAccountName,
        'invoiceSectionName': invoiceSectionName
      };
      let queryParams = {
        'api-version': apiVersion,
        'startDate': startDate,
        'endDate': endDate,
        '$filter': opts['filter']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = TransactionsListResult;
      return this.apiClient.callApi(
        '/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/invoiceSections/{invoiceSectionName}/transactions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
