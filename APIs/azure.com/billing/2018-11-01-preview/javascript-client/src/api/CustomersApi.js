/**
 * BillingManagementClient
 * Billing client provides access to billing resources for Azure subscriptions.
 *
 * The version of the OpenAPI document: 2018-11-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Customer from '../model/Customer';
import CustomerListResult from '../model/CustomerListResult';
import ErrorResponse from '../model/ErrorResponse';

/**
* Customers service.
* @module api/CustomersApi
* @version 2018-11-01-preview
*/
export default class CustomersApi {

    /**
    * Constructs a new CustomersApi. 
    * @alias module:api/CustomersApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the customersGet operation.
     * @callback module:api/CustomersApi~customersGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Customer} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the customer by id.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-11-01-preview.
     * @param {String} billingAccountName Billing Account Id.
     * @param {String} customerName Customer Id.
     * @param {Object} opts Optional parameters
     * @param {String} [expand] May be used to expand enabledAzureSkus, resellers.
     * @param {module:api/CustomersApi~customersGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Customer}
     */
    customersGet(apiVersion, billingAccountName, customerName, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling customersGet");
      }
      // verify the required parameter 'billingAccountName' is set
      if (billingAccountName === undefined || billingAccountName === null) {
        throw new Error("Missing the required parameter 'billingAccountName' when calling customersGet");
      }
      // verify the required parameter 'customerName' is set
      if (customerName === undefined || customerName === null) {
        throw new Error("Missing the required parameter 'customerName' when calling customersGet");
      }

      let pathParams = {
        'billingAccountName': billingAccountName,
        'customerName': customerName
      };
      let queryParams = {
        'api-version': apiVersion,
        '$expand': opts['expand']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Customer;
      return this.apiClient.callApi(
        '/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/customers/{customerName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the customersListByBillingAccountName operation.
     * @callback module:api/CustomersApi~customersListByBillingAccountNameCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CustomerListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists all customers which the current user can work with on-behalf of a partner.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-11-01-preview.
     * @param {String} billingAccountName Billing Account Id.
     * @param {Object} opts Optional parameters
     * @param {String} [filter] May be used to filter using hasPermission('{permissionId}') to only return customers for which the caller has the specified permission.
     * @param {String} [skiptoken] Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls.
     * @param {module:api/CustomersApi~customersListByBillingAccountNameCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CustomerListResult}
     */
    customersListByBillingAccountName(apiVersion, billingAccountName, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling customersListByBillingAccountName");
      }
      // verify the required parameter 'billingAccountName' is set
      if (billingAccountName === undefined || billingAccountName === null) {
        throw new Error("Missing the required parameter 'billingAccountName' when calling customersListByBillingAccountName");
      }

      let pathParams = {
        'billingAccountName': billingAccountName
      };
      let queryParams = {
        'api-version': apiVersion,
        '$filter': opts['filter'],
        '$skiptoken': opts['skiptoken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = CustomerListResult;
      return this.apiClient.callApi(
        '/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/customers', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
