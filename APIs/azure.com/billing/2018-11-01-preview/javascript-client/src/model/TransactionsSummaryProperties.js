/**
 * BillingManagementClient
 * Billing client provides access to billing resources for Azure subscriptions.
 *
 * The version of the OpenAPI document: 2018-11-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Amount from './Amount';

/**
 * The TransactionsSummaryProperties model module.
 * @module model/TransactionsSummaryProperties
 * @version 2018-11-01-preview
 */
class TransactionsSummaryProperties {
    /**
     * Constructs a new <code>TransactionsSummaryProperties</code>.
     * The properties of the reservation transaction summary.
     * @alias module:model/TransactionsSummaryProperties
     */
    constructor() { 
        
        TransactionsSummaryProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TransactionsSummaryProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TransactionsSummaryProperties} obj Optional instance to populate.
     * @return {module:model/TransactionsSummaryProperties} The populated <code>TransactionsSummaryProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TransactionsSummaryProperties();

            if (data.hasOwnProperty('billingProfileId')) {
                obj['billingProfileId'] = ApiClient.convertToType(data['billingProfileId'], 'String');
            }
            if (data.hasOwnProperty('billingProfileName')) {
                obj['billingProfileName'] = ApiClient.convertToType(data['billingProfileName'], 'String');
            }
            if (data.hasOwnProperty('customerDisplayName')) {
                obj['customerDisplayName'] = ApiClient.convertToType(data['customerDisplayName'], 'String');
            }
            if (data.hasOwnProperty('customerId')) {
                obj['customerId'] = ApiClient.convertToType(data['customerId'], 'String');
            }
            if (data.hasOwnProperty('date')) {
                obj['date'] = ApiClient.convertToType(data['date'], 'Date');
            }
            if (data.hasOwnProperty('invoice')) {
                obj['invoice'] = ApiClient.convertToType(data['invoice'], 'String');
            }
            if (data.hasOwnProperty('invoiceSectionId')) {
                obj['invoiceSectionId'] = ApiClient.convertToType(data['invoiceSectionId'], 'String');
            }
            if (data.hasOwnProperty('invoiceSectionName')) {
                obj['invoiceSectionName'] = ApiClient.convertToType(data['invoiceSectionName'], 'String');
            }
            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
            }
            if (data.hasOwnProperty('orderId')) {
                obj['orderId'] = ApiClient.convertToType(data['orderId'], 'String');
            }
            if (data.hasOwnProperty('orderName')) {
                obj['orderName'] = ApiClient.convertToType(data['orderName'], 'String');
            }
            if (data.hasOwnProperty('productDescription')) {
                obj['productDescription'] = ApiClient.convertToType(data['productDescription'], 'String');
            }
            if (data.hasOwnProperty('productFamily')) {
                obj['productFamily'] = ApiClient.convertToType(data['productFamily'], 'String');
            }
            if (data.hasOwnProperty('productType')) {
                obj['productType'] = ApiClient.convertToType(data['productType'], 'String');
            }
            if (data.hasOwnProperty('productTypeId')) {
                obj['productTypeId'] = ApiClient.convertToType(data['productTypeId'], 'String');
            }
            if (data.hasOwnProperty('quantity')) {
                obj['quantity'] = ApiClient.convertToType(data['quantity'], 'Number');
            }
            if (data.hasOwnProperty('subscriptionId')) {
                obj['subscriptionId'] = ApiClient.convertToType(data['subscriptionId'], 'String');
            }
            if (data.hasOwnProperty('subscriptionName')) {
                obj['subscriptionName'] = ApiClient.convertToType(data['subscriptionName'], 'String');
            }
            if (data.hasOwnProperty('transactionAmount')) {
                obj['transactionAmount'] = Amount.constructFromObject(data['transactionAmount']);
            }
            if (data.hasOwnProperty('transactionType')) {
                obj['transactionType'] = ApiClient.convertToType(data['transactionType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TransactionsSummaryProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TransactionsSummaryProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['billingProfileId'] && !(typeof data['billingProfileId'] === 'string' || data['billingProfileId'] instanceof String)) {
            throw new Error("Expected the field `billingProfileId` to be a primitive type in the JSON string but got " + data['billingProfileId']);
        }
        // ensure the json data is a string
        if (data['billingProfileName'] && !(typeof data['billingProfileName'] === 'string' || data['billingProfileName'] instanceof String)) {
            throw new Error("Expected the field `billingProfileName` to be a primitive type in the JSON string but got " + data['billingProfileName']);
        }
        // ensure the json data is a string
        if (data['customerDisplayName'] && !(typeof data['customerDisplayName'] === 'string' || data['customerDisplayName'] instanceof String)) {
            throw new Error("Expected the field `customerDisplayName` to be a primitive type in the JSON string but got " + data['customerDisplayName']);
        }
        // ensure the json data is a string
        if (data['customerId'] && !(typeof data['customerId'] === 'string' || data['customerId'] instanceof String)) {
            throw new Error("Expected the field `customerId` to be a primitive type in the JSON string but got " + data['customerId']);
        }
        // ensure the json data is a string
        if (data['invoice'] && !(typeof data['invoice'] === 'string' || data['invoice'] instanceof String)) {
            throw new Error("Expected the field `invoice` to be a primitive type in the JSON string but got " + data['invoice']);
        }
        // ensure the json data is a string
        if (data['invoiceSectionId'] && !(typeof data['invoiceSectionId'] === 'string' || data['invoiceSectionId'] instanceof String)) {
            throw new Error("Expected the field `invoiceSectionId` to be a primitive type in the JSON string but got " + data['invoiceSectionId']);
        }
        // ensure the json data is a string
        if (data['invoiceSectionName'] && !(typeof data['invoiceSectionName'] === 'string' || data['invoiceSectionName'] instanceof String)) {
            throw new Error("Expected the field `invoiceSectionName` to be a primitive type in the JSON string but got " + data['invoiceSectionName']);
        }
        // ensure the json data is a string
        if (data['kind'] && !(typeof data['kind'] === 'string' || data['kind'] instanceof String)) {
            throw new Error("Expected the field `kind` to be a primitive type in the JSON string but got " + data['kind']);
        }
        // ensure the json data is a string
        if (data['orderId'] && !(typeof data['orderId'] === 'string' || data['orderId'] instanceof String)) {
            throw new Error("Expected the field `orderId` to be a primitive type in the JSON string but got " + data['orderId']);
        }
        // ensure the json data is a string
        if (data['orderName'] && !(typeof data['orderName'] === 'string' || data['orderName'] instanceof String)) {
            throw new Error("Expected the field `orderName` to be a primitive type in the JSON string but got " + data['orderName']);
        }
        // ensure the json data is a string
        if (data['productDescription'] && !(typeof data['productDescription'] === 'string' || data['productDescription'] instanceof String)) {
            throw new Error("Expected the field `productDescription` to be a primitive type in the JSON string but got " + data['productDescription']);
        }
        // ensure the json data is a string
        if (data['productFamily'] && !(typeof data['productFamily'] === 'string' || data['productFamily'] instanceof String)) {
            throw new Error("Expected the field `productFamily` to be a primitive type in the JSON string but got " + data['productFamily']);
        }
        // ensure the json data is a string
        if (data['productType'] && !(typeof data['productType'] === 'string' || data['productType'] instanceof String)) {
            throw new Error("Expected the field `productType` to be a primitive type in the JSON string but got " + data['productType']);
        }
        // ensure the json data is a string
        if (data['productTypeId'] && !(typeof data['productTypeId'] === 'string' || data['productTypeId'] instanceof String)) {
            throw new Error("Expected the field `productTypeId` to be a primitive type in the JSON string but got " + data['productTypeId']);
        }
        // ensure the json data is a string
        if (data['subscriptionId'] && !(typeof data['subscriptionId'] === 'string' || data['subscriptionId'] instanceof String)) {
            throw new Error("Expected the field `subscriptionId` to be a primitive type in the JSON string but got " + data['subscriptionId']);
        }
        // ensure the json data is a string
        if (data['subscriptionName'] && !(typeof data['subscriptionName'] === 'string' || data['subscriptionName'] instanceof String)) {
            throw new Error("Expected the field `subscriptionName` to be a primitive type in the JSON string but got " + data['subscriptionName']);
        }
        // validate the optional field `transactionAmount`
        if (data['transactionAmount']) { // data not null
          Amount.validateJSON(data['transactionAmount']);
        }
        // ensure the json data is a string
        if (data['transactionType'] && !(typeof data['transactionType'] === 'string' || data['transactionType'] instanceof String)) {
            throw new Error("Expected the field `transactionType` to be a primitive type in the JSON string but got " + data['transactionType']);
        }

        return true;
    }


}



/**
 * Billing Profile id to which this product belongs.
 * @member {String} billingProfileId
 */
TransactionsSummaryProperties.prototype['billingProfileId'] = undefined;

/**
 * Billing Profile name to which this product belongs.
 * @member {String} billingProfileName
 */
TransactionsSummaryProperties.prototype['billingProfileName'] = undefined;

/**
 * Display name of customer to which this product belongs.
 * @member {String} customerDisplayName
 */
TransactionsSummaryProperties.prototype['customerDisplayName'] = undefined;

/**
 * Customer id to which this product belongs.
 * @member {String} customerId
 */
TransactionsSummaryProperties.prototype['customerId'] = undefined;

/**
 * The date of reservation transaction.
 * @member {Date} date
 */
TransactionsSummaryProperties.prototype['date'] = undefined;

/**
 * Invoice number or 'pending' if not invoiced.
 * @member {String} invoice
 */
TransactionsSummaryProperties.prototype['invoice'] = undefined;

/**
 * Invoice section id to which this product belongs.
 * @member {String} invoiceSectionId
 */
TransactionsSummaryProperties.prototype['invoiceSectionId'] = undefined;

/**
 * Invoice section name to which this product belongs.
 * @member {String} invoiceSectionName
 */
TransactionsSummaryProperties.prototype['invoiceSectionName'] = undefined;

/**
 * The kind of transaction. Choices are all and reservation.
 * @member {module:model/TransactionsSummaryProperties.KindEnum} kind
 */
TransactionsSummaryProperties.prototype['kind'] = undefined;

/**
 * The reservation order id.
 * @member {String} orderId
 */
TransactionsSummaryProperties.prototype['orderId'] = undefined;

/**
 * The reservation order name.
 * @member {String} orderName
 */
TransactionsSummaryProperties.prototype['orderName'] = undefined;

/**
 * Product description.
 * @member {String} productDescription
 */
TransactionsSummaryProperties.prototype['productDescription'] = undefined;

/**
 * The product family.
 * @member {String} productFamily
 */
TransactionsSummaryProperties.prototype['productFamily'] = undefined;

/**
 * The type of product.
 * @member {String} productType
 */
TransactionsSummaryProperties.prototype['productType'] = undefined;

/**
 * The product type id.
 * @member {String} productTypeId
 */
TransactionsSummaryProperties.prototype['productTypeId'] = undefined;

/**
 * Purchase quantity.
 * @member {Number} quantity
 */
TransactionsSummaryProperties.prototype['quantity'] = undefined;

/**
 * The subscription id.
 * @member {String} subscriptionId
 */
TransactionsSummaryProperties.prototype['subscriptionId'] = undefined;

/**
 * The subscription name.
 * @member {String} subscriptionName
 */
TransactionsSummaryProperties.prototype['subscriptionName'] = undefined;

/**
 * @member {module:model/Amount} transactionAmount
 */
TransactionsSummaryProperties.prototype['transactionAmount'] = undefined;

/**
 * Transaction types.
 * @member {module:model/TransactionsSummaryProperties.TransactionTypeEnum} transactionType
 */
TransactionsSummaryProperties.prototype['transactionType'] = undefined;





/**
 * Allowed values for the <code>kind</code> property.
 * @enum {String}
 * @readonly
 */
TransactionsSummaryProperties['KindEnum'] = {

    /**
     * value: "all"
     * @const
     */
    "all": "all",

    /**
     * value: "reservation"
     * @const
     */
    "reservation": "reservation"
};


/**
 * Allowed values for the <code>transactionType</code> property.
 * @enum {String}
 * @readonly
 */
TransactionsSummaryProperties['TransactionTypeEnum'] = {

    /**
     * value: "Purchase"
     * @const
     */
    "Purchase": "Purchase",

    /**
     * value: "Usage Charge"
     * @const
     */
    "Usage Charge": "Usage Charge"
};



export default TransactionsSummaryProperties;

