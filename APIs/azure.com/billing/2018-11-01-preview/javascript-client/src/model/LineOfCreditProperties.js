/**
 * BillingManagementClient
 * Billing client provides access to billing resources for Azure subscriptions.
 *
 * The version of the OpenAPI document: 2018-11-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Amount from './Amount';

/**
 * The LineOfCreditProperties model module.
 * @module model/LineOfCreditProperties
 * @version 2018-11-01-preview
 */
class LineOfCreditProperties {
    /**
     * Constructs a new <code>LineOfCreditProperties</code>.
     * The properties of the line of credit.
     * @alias module:model/LineOfCreditProperties
     */
    constructor() { 
        
        LineOfCreditProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LineOfCreditProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LineOfCreditProperties} obj Optional instance to populate.
     * @return {module:model/LineOfCreditProperties} The populated <code>LineOfCreditProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LineOfCreditProperties();

            if (data.hasOwnProperty('creditLimit')) {
                obj['creditLimit'] = Amount.constructFromObject(data['creditLimit']);
            }
            if (data.hasOwnProperty('reason')) {
                obj['reason'] = ApiClient.convertToType(data['reason'], 'String');
            }
            if (data.hasOwnProperty('remainingBalance')) {
                obj['remainingBalance'] = Amount.constructFromObject(data['remainingBalance']);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LineOfCreditProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LineOfCreditProperties</code>.
     */
    static validateJSON(data) {
        // validate the optional field `creditLimit`
        if (data['creditLimit']) { // data not null
          Amount.validateJSON(data['creditLimit']);
        }
        // ensure the json data is a string
        if (data['reason'] && !(typeof data['reason'] === 'string' || data['reason'] instanceof String)) {
            throw new Error("Expected the field `reason` to be a primitive type in the JSON string but got " + data['reason']);
        }
        // validate the optional field `remainingBalance`
        if (data['remainingBalance']) { // data not null
          Amount.validateJSON(data['remainingBalance']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }

        return true;
    }


}



/**
 * @member {module:model/Amount} creditLimit
 */
LineOfCreditProperties.prototype['creditLimit'] = undefined;

/**
 * The reason for the line of credit status when not approved.
 * @member {String} reason
 */
LineOfCreditProperties.prototype['reason'] = undefined;

/**
 * @member {module:model/Amount} remainingBalance
 */
LineOfCreditProperties.prototype['remainingBalance'] = undefined;

/**
 * The line of credit status.
 * @member {module:model/LineOfCreditProperties.StatusEnum} status
 */
LineOfCreditProperties.prototype['status'] = undefined;





/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
LineOfCreditProperties['StatusEnum'] = {

    /**
     * value: "Approved"
     * @const
     */
    "Approved": "Approved",

    /**
     * value: "Rejected"
     * @const
     */
    "Rejected": "Rejected"
};



export default LineOfCreditProperties;

