/**
 * BillingManagementClient
 * Billing client provides access to billing resources for Azure subscriptions.
 *
 * The version of the OpenAPI document: 2018-11-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DetailedTransferStatus from './DetailedTransferStatus';
import TransferStatus from './TransferStatus';

/**
 * The TransferProperties model module.
 * @module model/TransferProperties
 * @version 2018-11-01-preview
 */
class TransferProperties {
    /**
     * Constructs a new <code>TransferProperties</code>.
     * Transfer details
     * @alias module:model/TransferProperties
     */
    constructor() { 
        
        TransferProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TransferProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TransferProperties} obj Optional instance to populate.
     * @return {module:model/TransferProperties} The populated <code>TransferProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TransferProperties();

            if (data.hasOwnProperty('billingAccountId')) {
                obj['billingAccountId'] = ApiClient.convertToType(data['billingAccountId'], 'String');
            }
            if (data.hasOwnProperty('canceledBy')) {
                obj['canceledBy'] = ApiClient.convertToType(data['canceledBy'], 'String');
            }
            if (data.hasOwnProperty('creationTime')) {
                obj['creationTime'] = ApiClient.convertToType(data['creationTime'], 'Date');
            }
            if (data.hasOwnProperty('detailedTransferStatus')) {
                obj['detailedTransferStatus'] = ApiClient.convertToType(data['detailedTransferStatus'], [DetailedTransferStatus]);
            }
            if (data.hasOwnProperty('expirationTime')) {
                obj['expirationTime'] = ApiClient.convertToType(data['expirationTime'], 'Date');
            }
            if (data.hasOwnProperty('initiatorEmailId')) {
                obj['initiatorEmailId'] = ApiClient.convertToType(data['initiatorEmailId'], 'String');
            }
            if (data.hasOwnProperty('invoiceSectionId')) {
                obj['invoiceSectionId'] = ApiClient.convertToType(data['invoiceSectionId'], 'String');
            }
            if (data.hasOwnProperty('lastModifiedTime')) {
                obj['lastModifiedTime'] = ApiClient.convertToType(data['lastModifiedTime'], 'Date');
            }
            if (data.hasOwnProperty('recipientEmailId')) {
                obj['recipientEmailId'] = ApiClient.convertToType(data['recipientEmailId'], 'String');
            }
            if (data.hasOwnProperty('transferStatus')) {
                obj['transferStatus'] = TransferStatus.constructFromObject(data['transferStatus']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TransferProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TransferProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['billingAccountId'] && !(typeof data['billingAccountId'] === 'string' || data['billingAccountId'] instanceof String)) {
            throw new Error("Expected the field `billingAccountId` to be a primitive type in the JSON string but got " + data['billingAccountId']);
        }
        // ensure the json data is a string
        if (data['canceledBy'] && !(typeof data['canceledBy'] === 'string' || data['canceledBy'] instanceof String)) {
            throw new Error("Expected the field `canceledBy` to be a primitive type in the JSON string but got " + data['canceledBy']);
        }
        if (data['detailedTransferStatus']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['detailedTransferStatus'])) {
                throw new Error("Expected the field `detailedTransferStatus` to be an array in the JSON data but got " + data['detailedTransferStatus']);
            }
            // validate the optional field `detailedTransferStatus` (array)
            for (const item of data['detailedTransferStatus']) {
                DetailedTransferStatus.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['initiatorEmailId'] && !(typeof data['initiatorEmailId'] === 'string' || data['initiatorEmailId'] instanceof String)) {
            throw new Error("Expected the field `initiatorEmailId` to be a primitive type in the JSON string but got " + data['initiatorEmailId']);
        }
        // ensure the json data is a string
        if (data['invoiceSectionId'] && !(typeof data['invoiceSectionId'] === 'string' || data['invoiceSectionId'] instanceof String)) {
            throw new Error("Expected the field `invoiceSectionId` to be a primitive type in the JSON string but got " + data['invoiceSectionId']);
        }
        // ensure the json data is a string
        if (data['recipientEmailId'] && !(typeof data['recipientEmailId'] === 'string' || data['recipientEmailId'] instanceof String)) {
            throw new Error("Expected the field `recipientEmailId` to be a primitive type in the JSON string but got " + data['recipientEmailId']);
        }

        return true;
    }


}



/**
 * Target billing account Id.
 * @member {String} billingAccountId
 */
TransferProperties.prototype['billingAccountId'] = undefined;

/**
 * Email Id who user canceled the transfer.
 * @member {String} canceledBy
 */
TransferProperties.prototype['canceledBy'] = undefined;

/**
 * Transfer creation time.
 * @member {Date} creationTime
 */
TransferProperties.prototype['creationTime'] = undefined;

/**
 * Detailed transfer status.
 * @member {Array.<module:model/DetailedTransferStatus>} detailedTransferStatus
 */
TransferProperties.prototype['detailedTransferStatus'] = undefined;

/**
 * Transfer expiration time.
 * @member {Date} expirationTime
 */
TransferProperties.prototype['expirationTime'] = undefined;

/**
 * Email Id of initiator of transfer.
 * @member {String} initiatorEmailId
 */
TransferProperties.prototype['initiatorEmailId'] = undefined;

/**
 * Target invoice section Id.
 * @member {String} invoiceSectionId
 */
TransferProperties.prototype['invoiceSectionId'] = undefined;

/**
 * Transfer last modification time.
 * @member {Date} lastModifiedTime
 */
TransferProperties.prototype['lastModifiedTime'] = undefined;

/**
 * Email Id of recipient of transfer.
 * @member {String} recipientEmailId
 */
TransferProperties.prototype['recipientEmailId'] = undefined;

/**
 * @member {module:model/TransferStatus} transferStatus
 */
TransferProperties.prototype['transferStatus'] = undefined;






export default TransferProperties;

