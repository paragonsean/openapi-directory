/**
 * BillingManagementClient
 * Billing client provides access to billing resources for Azure subscriptions.
 *
 * The version of the OpenAPI document: 2018-11-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The OperationStatus model module.
 * @module model/OperationStatus
 * @version 2018-11-01-preview
 */
class OperationStatus {
    /**
     * Constructs a new <code>OperationStatus</code>.
     * status of the Billing POST/PUT operation.
     * @alias module:model/OperationStatus
     */
    constructor() { 
        
        OperationStatus.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OperationStatus</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OperationStatus} obj Optional instance to populate.
     * @return {module:model/OperationStatus} The populated <code>OperationStatus</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OperationStatus();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('statusDetail')) {
                obj['statusDetail'] = ApiClient.convertToType(data['statusDetail'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OperationStatus</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OperationStatus</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is a string
        if (data['statusDetail'] && !(typeof data['statusDetail'] === 'string' || data['statusDetail'] instanceof String)) {
            throw new Error("Expected the field `statusDetail` to be a primitive type in the JSON string but got " + data['statusDetail']);
        }

        return true;
    }


}



/**
 * The operation Id.
 * @member {String} id
 */
OperationStatus.prototype['id'] = undefined;

/**
 * Status of the pending operation
 * @member {String} status
 */
OperationStatus.prototype['status'] = undefined;

/**
 * Status Detail of the pending operation
 * @member {String} statusDetail
 */
OperationStatus.prototype['statusDetail'] = undefined;






export default OperationStatus;

