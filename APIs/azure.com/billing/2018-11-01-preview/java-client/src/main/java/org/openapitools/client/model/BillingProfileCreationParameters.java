/*
 * BillingManagementClient
 * Billing client provides access to billing resources for Azure subscriptions.
 *
 * The version of the OpenAPI document: 2018-11-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Address;
import org.openapitools.client.model.EnabledAzureSKUs;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The parameters for creating a new billing profile.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:09:31.075138-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class BillingProfileCreationParameters {
  public static final String SERIALIZED_NAME_ADDRESS = "address";
  @SerializedName(SERIALIZED_NAME_ADDRESS)
  private Address address;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_ENABLE_AZURE_S_K_US = "enableAzureSKUs";
  @SerializedName(SERIALIZED_NAME_ENABLE_AZURE_S_K_US)
  private List<EnabledAzureSKUs> enableAzureSKUs = new ArrayList<>();

  public static final String SERIALIZED_NAME_INVOICE_EMAIL_OPT_IN = "invoiceEmailOptIn";
  @SerializedName(SERIALIZED_NAME_INVOICE_EMAIL_OPT_IN)
  private Boolean invoiceEmailOptIn;

  public static final String SERIALIZED_NAME_PO_NUMBER = "poNumber";
  @SerializedName(SERIALIZED_NAME_PO_NUMBER)
  private String poNumber;

  public BillingProfileCreationParameters() {
  }

  public BillingProfileCreationParameters address(Address address) {
    this.address = address;
    return this;
  }

  /**
   * Get address
   * @return address
   */
  @javax.annotation.Nullable
  public Address getAddress() {
    return address;
  }

  public void setAddress(Address address) {
    this.address = address;
  }


  public BillingProfileCreationParameters displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * The billing profile name.
   * @return displayName
   */
  @javax.annotation.Nullable
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public BillingProfileCreationParameters enableAzureSKUs(List<EnabledAzureSKUs> enableAzureSKUs) {
    this.enableAzureSKUs = enableAzureSKUs;
    return this;
  }

  public BillingProfileCreationParameters addEnableAzureSKUsItem(EnabledAzureSKUs enableAzureSKUsItem) {
    if (this.enableAzureSKUs == null) {
      this.enableAzureSKUs = new ArrayList<>();
    }
    this.enableAzureSKUs.add(enableAzureSKUsItem);
    return this;
  }

  /**
   * Azure skus to enable for this billing profile..
   * @return enableAzureSKUs
   */
  @javax.annotation.Nullable
  public List<EnabledAzureSKUs> getEnableAzureSKUs() {
    return enableAzureSKUs;
  }

  public void setEnableAzureSKUs(List<EnabledAzureSKUs> enableAzureSKUs) {
    this.enableAzureSKUs = enableAzureSKUs;
  }


  public BillingProfileCreationParameters invoiceEmailOptIn(Boolean invoiceEmailOptIn) {
    this.invoiceEmailOptIn = invoiceEmailOptIn;
    return this;
  }

  /**
   * If the billing profile is opted in to receive invoices via email.
   * @return invoiceEmailOptIn
   */
  @javax.annotation.Nullable
  public Boolean getInvoiceEmailOptIn() {
    return invoiceEmailOptIn;
  }

  public void setInvoiceEmailOptIn(Boolean invoiceEmailOptIn) {
    this.invoiceEmailOptIn = invoiceEmailOptIn;
  }


  public BillingProfileCreationParameters poNumber(String poNumber) {
    this.poNumber = poNumber;
    return this;
  }

  /**
   * Purchase order number.
   * @return poNumber
   */
  @javax.annotation.Nullable
  public String getPoNumber() {
    return poNumber;
  }

  public void setPoNumber(String poNumber) {
    this.poNumber = poNumber;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BillingProfileCreationParameters billingProfileCreationParameters = (BillingProfileCreationParameters) o;
    return Objects.equals(this.address, billingProfileCreationParameters.address) &&
        Objects.equals(this.displayName, billingProfileCreationParameters.displayName) &&
        Objects.equals(this.enableAzureSKUs, billingProfileCreationParameters.enableAzureSKUs) &&
        Objects.equals(this.invoiceEmailOptIn, billingProfileCreationParameters.invoiceEmailOptIn) &&
        Objects.equals(this.poNumber, billingProfileCreationParameters.poNumber);
  }

  @Override
  public int hashCode() {
    return Objects.hash(address, displayName, enableAzureSKUs, invoiceEmailOptIn, poNumber);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BillingProfileCreationParameters {\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    enableAzureSKUs: ").append(toIndentedString(enableAzureSKUs)).append("\n");
    sb.append("    invoiceEmailOptIn: ").append(toIndentedString(invoiceEmailOptIn)).append("\n");
    sb.append("    poNumber: ").append(toIndentedString(poNumber)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("address");
    openapiFields.add("displayName");
    openapiFields.add("enableAzureSKUs");
    openapiFields.add("invoiceEmailOptIn");
    openapiFields.add("poNumber");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to BillingProfileCreationParameters
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!BillingProfileCreationParameters.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in BillingProfileCreationParameters is not found in the empty JSON string", BillingProfileCreationParameters.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!BillingProfileCreationParameters.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `BillingProfileCreationParameters` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `address`
      if (jsonObj.get("address") != null && !jsonObj.get("address").isJsonNull()) {
        Address.validateJsonElement(jsonObj.get("address"));
      }
      if ((jsonObj.get("displayName") != null && !jsonObj.get("displayName").isJsonNull()) && !jsonObj.get("displayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayName").toString()));
      }
      if (jsonObj.get("enableAzureSKUs") != null && !jsonObj.get("enableAzureSKUs").isJsonNull()) {
        JsonArray jsonArrayenableAzureSKUs = jsonObj.getAsJsonArray("enableAzureSKUs");
        if (jsonArrayenableAzureSKUs != null) {
          // ensure the json data is an array
          if (!jsonObj.get("enableAzureSKUs").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `enableAzureSKUs` to be an array in the JSON string but got `%s`", jsonObj.get("enableAzureSKUs").toString()));
          }

          // validate the optional field `enableAzureSKUs` (array)
          for (int i = 0; i < jsonArrayenableAzureSKUs.size(); i++) {
            EnabledAzureSKUs.validateJsonElement(jsonArrayenableAzureSKUs.get(i));
          };
        }
      }
      if ((jsonObj.get("poNumber") != null && !jsonObj.get("poNumber").isJsonNull()) && !jsonObj.get("poNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `poNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("poNumber").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!BillingProfileCreationParameters.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'BillingProfileCreationParameters' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<BillingProfileCreationParameters> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(BillingProfileCreationParameters.class));

       return (TypeAdapter<T>) new TypeAdapter<BillingProfileCreationParameters>() {
           @Override
           public void write(JsonWriter out, BillingProfileCreationParameters value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public BillingProfileCreationParameters read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of BillingProfileCreationParameters given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of BillingProfileCreationParameters
   * @throws IOException if the JSON string is invalid with respect to BillingProfileCreationParameters
   */
  public static BillingProfileCreationParameters fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, BillingProfileCreationParameters.class);
  }

  /**
   * Convert an instance of BillingProfileCreationParameters to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

