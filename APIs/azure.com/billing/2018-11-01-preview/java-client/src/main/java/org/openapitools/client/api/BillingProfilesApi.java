/*
 * BillingManagementClient
 * Billing client provides access to billing resources for Azure subscriptions.
 *
 * The version of the OpenAPI document: 2018-11-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.BillingProfile;
import org.openapitools.client.model.BillingProfileCreationParameters;
import org.openapitools.client.model.BillingProfileListResult;
import org.openapitools.client.model.ErrorResponse;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class BillingProfilesApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public BillingProfilesApi() {
        this(Configuration.getDefaultApiClient());
    }

    public BillingProfilesApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for billingProfilesCreate
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-11-01-preview. (required)
     * @param billingAccountName Billing Account Id. (required)
     * @param parameters Parameters supplied to the Create BillingProfile operation. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  * Retry-After - Recommends the retryable time after receiving this. <br>  * Azure-AsyncOperation - URI to poll for the operation status <br>  * Location - Location URI to poll for result. <br>  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call billingProfilesCreateCall(String apiVersion, String billingAccountName, BillingProfileCreationParameters parameters, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = parameters;

        // create path and map variables
        String localVarPath = "/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/billingProfiles"
            .replace("{" + "billingAccountName" + "}", localVarApiClient.escapeString(billingAccountName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call billingProfilesCreateValidateBeforeCall(String apiVersion, String billingAccountName, BillingProfileCreationParameters parameters, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling billingProfilesCreate(Async)");
        }

        // verify the required parameter 'billingAccountName' is set
        if (billingAccountName == null) {
            throw new ApiException("Missing the required parameter 'billingAccountName' when calling billingProfilesCreate(Async)");
        }

        // verify the required parameter 'parameters' is set
        if (parameters == null) {
            throw new ApiException("Missing the required parameter 'parameters' when calling billingProfilesCreate(Async)");
        }

        return billingProfilesCreateCall(apiVersion, billingAccountName, parameters, _callback);

    }

    /**
     * 
     * The operation to create a BillingProfile.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-11-01-preview. (required)
     * @param billingAccountName Billing Account Id. (required)
     * @param parameters Parameters supplied to the Create BillingProfile operation. (required)
     * @return BillingProfile
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  * Retry-After - Recommends the retryable time after receiving this. <br>  * Azure-AsyncOperation - URI to poll for the operation status <br>  * Location - Location URI to poll for result. <br>  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public BillingProfile billingProfilesCreate(String apiVersion, String billingAccountName, BillingProfileCreationParameters parameters) throws ApiException {
        ApiResponse<BillingProfile> localVarResp = billingProfilesCreateWithHttpInfo(apiVersion, billingAccountName, parameters);
        return localVarResp.getData();
    }

    /**
     * 
     * The operation to create a BillingProfile.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-11-01-preview. (required)
     * @param billingAccountName Billing Account Id. (required)
     * @param parameters Parameters supplied to the Create BillingProfile operation. (required)
     * @return ApiResponse&lt;BillingProfile&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  * Retry-After - Recommends the retryable time after receiving this. <br>  * Azure-AsyncOperation - URI to poll for the operation status <br>  * Location - Location URI to poll for result. <br>  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<BillingProfile> billingProfilesCreateWithHttpInfo(String apiVersion, String billingAccountName, BillingProfileCreationParameters parameters) throws ApiException {
        okhttp3.Call localVarCall = billingProfilesCreateValidateBeforeCall(apiVersion, billingAccountName, parameters, null);
        Type localVarReturnType = new TypeToken<BillingProfile>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * The operation to create a BillingProfile.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-11-01-preview. (required)
     * @param billingAccountName Billing Account Id. (required)
     * @param parameters Parameters supplied to the Create BillingProfile operation. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  * Retry-After - Recommends the retryable time after receiving this. <br>  * Azure-AsyncOperation - URI to poll for the operation status <br>  * Location - Location URI to poll for result. <br>  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call billingProfilesCreateAsync(String apiVersion, String billingAccountName, BillingProfileCreationParameters parameters, final ApiCallback<BillingProfile> _callback) throws ApiException {

        okhttp3.Call localVarCall = billingProfilesCreateValidateBeforeCall(apiVersion, billingAccountName, parameters, _callback);
        Type localVarReturnType = new TypeToken<BillingProfile>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for billingProfilesGet
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-11-01-preview. (required)
     * @param billingAccountName Billing Account Id. (required)
     * @param billingProfileName Billing Profile Id. (required)
     * @param $expand May be used to expand the invoiceSections. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call billingProfilesGetCall(String apiVersion, String billingAccountName, String billingProfileName, String $expand, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/billingProfiles/{billingProfileName}"
            .replace("{" + "billingAccountName" + "}", localVarApiClient.escapeString(billingAccountName.toString()))
            .replace("{" + "billingProfileName" + "}", localVarApiClient.escapeString(billingProfileName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        if ($expand != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$expand", $expand));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call billingProfilesGetValidateBeforeCall(String apiVersion, String billingAccountName, String billingProfileName, String $expand, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling billingProfilesGet(Async)");
        }

        // verify the required parameter 'billingAccountName' is set
        if (billingAccountName == null) {
            throw new ApiException("Missing the required parameter 'billingAccountName' when calling billingProfilesGet(Async)");
        }

        // verify the required parameter 'billingProfileName' is set
        if (billingProfileName == null) {
            throw new ApiException("Missing the required parameter 'billingProfileName' when calling billingProfilesGet(Async)");
        }

        return billingProfilesGetCall(apiVersion, billingAccountName, billingProfileName, $expand, _callback);

    }

    /**
     * 
     * Get the billing profile by id.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-11-01-preview. (required)
     * @param billingAccountName Billing Account Id. (required)
     * @param billingProfileName Billing Profile Id. (required)
     * @param $expand May be used to expand the invoiceSections. (optional)
     * @return BillingProfile
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public BillingProfile billingProfilesGet(String apiVersion, String billingAccountName, String billingProfileName, String $expand) throws ApiException {
        ApiResponse<BillingProfile> localVarResp = billingProfilesGetWithHttpInfo(apiVersion, billingAccountName, billingProfileName, $expand);
        return localVarResp.getData();
    }

    /**
     * 
     * Get the billing profile by id.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-11-01-preview. (required)
     * @param billingAccountName Billing Account Id. (required)
     * @param billingProfileName Billing Profile Id. (required)
     * @param $expand May be used to expand the invoiceSections. (optional)
     * @return ApiResponse&lt;BillingProfile&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<BillingProfile> billingProfilesGetWithHttpInfo(String apiVersion, String billingAccountName, String billingProfileName, String $expand) throws ApiException {
        okhttp3.Call localVarCall = billingProfilesGetValidateBeforeCall(apiVersion, billingAccountName, billingProfileName, $expand, null);
        Type localVarReturnType = new TypeToken<BillingProfile>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Get the billing profile by id.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-11-01-preview. (required)
     * @param billingAccountName Billing Account Id. (required)
     * @param billingProfileName Billing Profile Id. (required)
     * @param $expand May be used to expand the invoiceSections. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call billingProfilesGetAsync(String apiVersion, String billingAccountName, String billingProfileName, String $expand, final ApiCallback<BillingProfile> _callback) throws ApiException {

        okhttp3.Call localVarCall = billingProfilesGetValidateBeforeCall(apiVersion, billingAccountName, billingProfileName, $expand, _callback);
        Type localVarReturnType = new TypeToken<BillingProfile>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for billingProfilesListByBillingAccountName
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-11-01-preview. (required)
     * @param billingAccountName Billing Account Id. (required)
     * @param $expand May be used to expand the invoiceSections. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call billingProfilesListByBillingAccountNameCall(String apiVersion, String billingAccountName, String $expand, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/billingProfiles"
            .replace("{" + "billingAccountName" + "}", localVarApiClient.escapeString(billingAccountName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        if ($expand != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$expand", $expand));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call billingProfilesListByBillingAccountNameValidateBeforeCall(String apiVersion, String billingAccountName, String $expand, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling billingProfilesListByBillingAccountName(Async)");
        }

        // verify the required parameter 'billingAccountName' is set
        if (billingAccountName == null) {
            throw new ApiException("Missing the required parameter 'billingAccountName' when calling billingProfilesListByBillingAccountName(Async)");
        }

        return billingProfilesListByBillingAccountNameCall(apiVersion, billingAccountName, $expand, _callback);

    }

    /**
     * 
     * Lists all billing profiles for a user which that user has access to.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-11-01-preview. (required)
     * @param billingAccountName Billing Account Id. (required)
     * @param $expand May be used to expand the invoiceSections. (optional)
     * @return BillingProfileListResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public BillingProfileListResult billingProfilesListByBillingAccountName(String apiVersion, String billingAccountName, String $expand) throws ApiException {
        ApiResponse<BillingProfileListResult> localVarResp = billingProfilesListByBillingAccountNameWithHttpInfo(apiVersion, billingAccountName, $expand);
        return localVarResp.getData();
    }

    /**
     * 
     * Lists all billing profiles for a user which that user has access to.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-11-01-preview. (required)
     * @param billingAccountName Billing Account Id. (required)
     * @param $expand May be used to expand the invoiceSections. (optional)
     * @return ApiResponse&lt;BillingProfileListResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<BillingProfileListResult> billingProfilesListByBillingAccountNameWithHttpInfo(String apiVersion, String billingAccountName, String $expand) throws ApiException {
        okhttp3.Call localVarCall = billingProfilesListByBillingAccountNameValidateBeforeCall(apiVersion, billingAccountName, $expand, null);
        Type localVarReturnType = new TypeToken<BillingProfileListResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Lists all billing profiles for a user which that user has access to.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-11-01-preview. (required)
     * @param billingAccountName Billing Account Id. (required)
     * @param $expand May be used to expand the invoiceSections. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call billingProfilesListByBillingAccountNameAsync(String apiVersion, String billingAccountName, String $expand, final ApiCallback<BillingProfileListResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = billingProfilesListByBillingAccountNameValidateBeforeCall(apiVersion, billingAccountName, $expand, _callback);
        Type localVarReturnType = new TypeToken<BillingProfileListResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for billingProfilesUpdate
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-11-01-preview. (required)
     * @param billingAccountName Billing Account Id. (required)
     * @param billingProfileName Billing Profile Id. (required)
     * @param parameters Parameters supplied to the update billing profile operation. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted. Billing profile update is in progress. </td><td>  * Retry-After - The amount of delay to use while the status of the operation is checked. The value is expressed in seconds. <br>  * Location - Location URI to poll for result. <br>  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call billingProfilesUpdateCall(String apiVersion, String billingAccountName, String billingProfileName, BillingProfile parameters, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = parameters;

        // create path and map variables
        String localVarPath = "/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/billingProfiles/{billingProfileName}"
            .replace("{" + "billingAccountName" + "}", localVarApiClient.escapeString(billingAccountName.toString()))
            .replace("{" + "billingProfileName" + "}", localVarApiClient.escapeString(billingProfileName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call billingProfilesUpdateValidateBeforeCall(String apiVersion, String billingAccountName, String billingProfileName, BillingProfile parameters, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling billingProfilesUpdate(Async)");
        }

        // verify the required parameter 'billingAccountName' is set
        if (billingAccountName == null) {
            throw new ApiException("Missing the required parameter 'billingAccountName' when calling billingProfilesUpdate(Async)");
        }

        // verify the required parameter 'billingProfileName' is set
        if (billingProfileName == null) {
            throw new ApiException("Missing the required parameter 'billingProfileName' when calling billingProfilesUpdate(Async)");
        }

        // verify the required parameter 'parameters' is set
        if (parameters == null) {
            throw new ApiException("Missing the required parameter 'parameters' when calling billingProfilesUpdate(Async)");
        }

        return billingProfilesUpdateCall(apiVersion, billingAccountName, billingProfileName, parameters, _callback);

    }

    /**
     * 
     * The operation to update a billing profile.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-11-01-preview. (required)
     * @param billingAccountName Billing Account Id. (required)
     * @param billingProfileName Billing Profile Id. (required)
     * @param parameters Parameters supplied to the update billing profile operation. (required)
     * @return BillingProfile
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted. Billing profile update is in progress. </td><td>  * Retry-After - The amount of delay to use while the status of the operation is checked. The value is expressed in seconds. <br>  * Location - Location URI to poll for result. <br>  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public BillingProfile billingProfilesUpdate(String apiVersion, String billingAccountName, String billingProfileName, BillingProfile parameters) throws ApiException {
        ApiResponse<BillingProfile> localVarResp = billingProfilesUpdateWithHttpInfo(apiVersion, billingAccountName, billingProfileName, parameters);
        return localVarResp.getData();
    }

    /**
     * 
     * The operation to update a billing profile.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-11-01-preview. (required)
     * @param billingAccountName Billing Account Id. (required)
     * @param billingProfileName Billing Profile Id. (required)
     * @param parameters Parameters supplied to the update billing profile operation. (required)
     * @return ApiResponse&lt;BillingProfile&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted. Billing profile update is in progress. </td><td>  * Retry-After - The amount of delay to use while the status of the operation is checked. The value is expressed in seconds. <br>  * Location - Location URI to poll for result. <br>  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<BillingProfile> billingProfilesUpdateWithHttpInfo(String apiVersion, String billingAccountName, String billingProfileName, BillingProfile parameters) throws ApiException {
        okhttp3.Call localVarCall = billingProfilesUpdateValidateBeforeCall(apiVersion, billingAccountName, billingProfileName, parameters, null);
        Type localVarReturnType = new TypeToken<BillingProfile>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * The operation to update a billing profile.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-11-01-preview. (required)
     * @param billingAccountName Billing Account Id. (required)
     * @param billingProfileName Billing Profile Id. (required)
     * @param parameters Parameters supplied to the update billing profile operation. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted. Billing profile update is in progress. </td><td>  * Retry-After - The amount of delay to use while the status of the operation is checked. The value is expressed in seconds. <br>  * Location - Location URI to poll for result. <br>  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call billingProfilesUpdateAsync(String apiVersion, String billingAccountName, String billingProfileName, BillingProfile parameters, final ApiCallback<BillingProfile> _callback) throws ApiException {

        okhttp3.Call localVarCall = billingProfilesUpdateValidateBeforeCall(apiVersion, billingAccountName, billingProfileName, parameters, _callback);
        Type localVarReturnType = new TypeToken<BillingProfile>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
