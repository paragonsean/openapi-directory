/*
 * BillingManagementClient
 * Billing client provides access to billing resources for Azure subscriptions.
 *
 * The version of the OpenAPI document: 2018-11-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.BillingSubscriptionSummary;
import org.openapitools.client.model.BillingSubscriptionsListResult;
import org.openapitools.client.model.ErrorResponse;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class BillingSubscriptionsApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public BillingSubscriptionsApi() {
        this(Configuration.getDefaultApiClient());
    }

    public BillingSubscriptionsApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for billingSubscriptionsGet
     * @param billingAccountName Billing Account Id. (required)
     * @param invoiceSectionName InvoiceSection Id. (required)
     * @param billingSubscriptionName Billing Subscription Id. (required)
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-11-01-preview. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public okhttp3.Call billingSubscriptionsGetCall(String billingAccountName, String invoiceSectionName, String billingSubscriptionName, String apiVersion, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/invoiceSections/{invoiceSectionName}/billingSubscriptions/{billingSubscriptionName}"
            .replace("{" + "billingAccountName" + "}", localVarApiClient.escapeString(billingAccountName.toString()))
            .replace("{" + "invoiceSectionName" + "}", localVarApiClient.escapeString(invoiceSectionName.toString()))
            .replace("{" + "billingSubscriptionName" + "}", localVarApiClient.escapeString(billingSubscriptionName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call billingSubscriptionsGetValidateBeforeCall(String billingAccountName, String invoiceSectionName, String billingSubscriptionName, String apiVersion, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'billingAccountName' is set
        if (billingAccountName == null) {
            throw new ApiException("Missing the required parameter 'billingAccountName' when calling billingSubscriptionsGet(Async)");
        }

        // verify the required parameter 'invoiceSectionName' is set
        if (invoiceSectionName == null) {
            throw new ApiException("Missing the required parameter 'invoiceSectionName' when calling billingSubscriptionsGet(Async)");
        }

        // verify the required parameter 'billingSubscriptionName' is set
        if (billingSubscriptionName == null) {
            throw new ApiException("Missing the required parameter 'billingSubscriptionName' when calling billingSubscriptionsGet(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling billingSubscriptionsGet(Async)");
        }

        return billingSubscriptionsGetCall(billingAccountName, invoiceSectionName, billingSubscriptionName, apiVersion, _callback);

    }

    /**
     * 
     * Get a single billing subscription by name.
     * @param billingAccountName Billing Account Id. (required)
     * @param invoiceSectionName InvoiceSection Id. (required)
     * @param billingSubscriptionName Billing Subscription Id. (required)
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-11-01-preview. (required)
     * @return BillingSubscriptionSummary
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public BillingSubscriptionSummary billingSubscriptionsGet(String billingAccountName, String invoiceSectionName, String billingSubscriptionName, String apiVersion) throws ApiException {
        ApiResponse<BillingSubscriptionSummary> localVarResp = billingSubscriptionsGetWithHttpInfo(billingAccountName, invoiceSectionName, billingSubscriptionName, apiVersion);
        return localVarResp.getData();
    }

    /**
     * 
     * Get a single billing subscription by name.
     * @param billingAccountName Billing Account Id. (required)
     * @param invoiceSectionName InvoiceSection Id. (required)
     * @param billingSubscriptionName Billing Subscription Id. (required)
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-11-01-preview. (required)
     * @return ApiResponse&lt;BillingSubscriptionSummary&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public ApiResponse<BillingSubscriptionSummary> billingSubscriptionsGetWithHttpInfo(String billingAccountName, String invoiceSectionName, String billingSubscriptionName, String apiVersion) throws ApiException {
        okhttp3.Call localVarCall = billingSubscriptionsGetValidateBeforeCall(billingAccountName, invoiceSectionName, billingSubscriptionName, apiVersion, null);
        Type localVarReturnType = new TypeToken<BillingSubscriptionSummary>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Get a single billing subscription by name.
     * @param billingAccountName Billing Account Id. (required)
     * @param invoiceSectionName InvoiceSection Id. (required)
     * @param billingSubscriptionName Billing Subscription Id. (required)
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-11-01-preview. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public okhttp3.Call billingSubscriptionsGetAsync(String billingAccountName, String invoiceSectionName, String billingSubscriptionName, String apiVersion, final ApiCallback<BillingSubscriptionSummary> _callback) throws ApiException {

        okhttp3.Call localVarCall = billingSubscriptionsGetValidateBeforeCall(billingAccountName, invoiceSectionName, billingSubscriptionName, apiVersion, _callback);
        Type localVarReturnType = new TypeToken<BillingSubscriptionSummary>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for billingSubscriptionsGetByCustomerName
     * @param billingAccountName Billing Account Id. (required)
     * @param customerName Customer Id. (required)
     * @param billingSubscriptionName Billing Subscription Id. (required)
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-11-01-preview. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public okhttp3.Call billingSubscriptionsGetByCustomerNameCall(String billingAccountName, String customerName, String billingSubscriptionName, String apiVersion, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/customers/{customerName}/billingSubscriptions/{billingSubscriptionName}"
            .replace("{" + "billingAccountName" + "}", localVarApiClient.escapeString(billingAccountName.toString()))
            .replace("{" + "customerName" + "}", localVarApiClient.escapeString(customerName.toString()))
            .replace("{" + "billingSubscriptionName" + "}", localVarApiClient.escapeString(billingSubscriptionName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call billingSubscriptionsGetByCustomerNameValidateBeforeCall(String billingAccountName, String customerName, String billingSubscriptionName, String apiVersion, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'billingAccountName' is set
        if (billingAccountName == null) {
            throw new ApiException("Missing the required parameter 'billingAccountName' when calling billingSubscriptionsGetByCustomerName(Async)");
        }

        // verify the required parameter 'customerName' is set
        if (customerName == null) {
            throw new ApiException("Missing the required parameter 'customerName' when calling billingSubscriptionsGetByCustomerName(Async)");
        }

        // verify the required parameter 'billingSubscriptionName' is set
        if (billingSubscriptionName == null) {
            throw new ApiException("Missing the required parameter 'billingSubscriptionName' when calling billingSubscriptionsGetByCustomerName(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling billingSubscriptionsGetByCustomerName(Async)");
        }

        return billingSubscriptionsGetByCustomerNameCall(billingAccountName, customerName, billingSubscriptionName, apiVersion, _callback);

    }

    /**
     * 
     * Get a single billing subscription by name.
     * @param billingAccountName Billing Account Id. (required)
     * @param customerName Customer Id. (required)
     * @param billingSubscriptionName Billing Subscription Id. (required)
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-11-01-preview. (required)
     * @return BillingSubscriptionSummary
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public BillingSubscriptionSummary billingSubscriptionsGetByCustomerName(String billingAccountName, String customerName, String billingSubscriptionName, String apiVersion) throws ApiException {
        ApiResponse<BillingSubscriptionSummary> localVarResp = billingSubscriptionsGetByCustomerNameWithHttpInfo(billingAccountName, customerName, billingSubscriptionName, apiVersion);
        return localVarResp.getData();
    }

    /**
     * 
     * Get a single billing subscription by name.
     * @param billingAccountName Billing Account Id. (required)
     * @param customerName Customer Id. (required)
     * @param billingSubscriptionName Billing Subscription Id. (required)
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-11-01-preview. (required)
     * @return ApiResponse&lt;BillingSubscriptionSummary&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public ApiResponse<BillingSubscriptionSummary> billingSubscriptionsGetByCustomerNameWithHttpInfo(String billingAccountName, String customerName, String billingSubscriptionName, String apiVersion) throws ApiException {
        okhttp3.Call localVarCall = billingSubscriptionsGetByCustomerNameValidateBeforeCall(billingAccountName, customerName, billingSubscriptionName, apiVersion, null);
        Type localVarReturnType = new TypeToken<BillingSubscriptionSummary>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Get a single billing subscription by name.
     * @param billingAccountName Billing Account Id. (required)
     * @param customerName Customer Id. (required)
     * @param billingSubscriptionName Billing Subscription Id. (required)
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-11-01-preview. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public okhttp3.Call billingSubscriptionsGetByCustomerNameAsync(String billingAccountName, String customerName, String billingSubscriptionName, String apiVersion, final ApiCallback<BillingSubscriptionSummary> _callback) throws ApiException {

        okhttp3.Call localVarCall = billingSubscriptionsGetByCustomerNameValidateBeforeCall(billingAccountName, customerName, billingSubscriptionName, apiVersion, _callback);
        Type localVarReturnType = new TypeToken<BillingSubscriptionSummary>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for billingSubscriptionsListByBillingAccountName
     * @param billingAccountName Billing Account Id. (required)
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-11-01-preview. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public okhttp3.Call billingSubscriptionsListByBillingAccountNameCall(String billingAccountName, String apiVersion, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/billingSubscriptions"
            .replace("{" + "billingAccountName" + "}", localVarApiClient.escapeString(billingAccountName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call billingSubscriptionsListByBillingAccountNameValidateBeforeCall(String billingAccountName, String apiVersion, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'billingAccountName' is set
        if (billingAccountName == null) {
            throw new ApiException("Missing the required parameter 'billingAccountName' when calling billingSubscriptionsListByBillingAccountName(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling billingSubscriptionsListByBillingAccountName(Async)");
        }

        return billingSubscriptionsListByBillingAccountNameCall(billingAccountName, apiVersion, _callback);

    }

    /**
     * 
     * Lists billing subscriptions by billing account name.
     * @param billingAccountName Billing Account Id. (required)
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-11-01-preview. (required)
     * @return BillingSubscriptionsListResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public BillingSubscriptionsListResult billingSubscriptionsListByBillingAccountName(String billingAccountName, String apiVersion) throws ApiException {
        ApiResponse<BillingSubscriptionsListResult> localVarResp = billingSubscriptionsListByBillingAccountNameWithHttpInfo(billingAccountName, apiVersion);
        return localVarResp.getData();
    }

    /**
     * 
     * Lists billing subscriptions by billing account name.
     * @param billingAccountName Billing Account Id. (required)
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-11-01-preview. (required)
     * @return ApiResponse&lt;BillingSubscriptionsListResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public ApiResponse<BillingSubscriptionsListResult> billingSubscriptionsListByBillingAccountNameWithHttpInfo(String billingAccountName, String apiVersion) throws ApiException {
        okhttp3.Call localVarCall = billingSubscriptionsListByBillingAccountNameValidateBeforeCall(billingAccountName, apiVersion, null);
        Type localVarReturnType = new TypeToken<BillingSubscriptionsListResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Lists billing subscriptions by billing account name.
     * @param billingAccountName Billing Account Id. (required)
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-11-01-preview. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public okhttp3.Call billingSubscriptionsListByBillingAccountNameAsync(String billingAccountName, String apiVersion, final ApiCallback<BillingSubscriptionsListResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = billingSubscriptionsListByBillingAccountNameValidateBeforeCall(billingAccountName, apiVersion, _callback);
        Type localVarReturnType = new TypeToken<BillingSubscriptionsListResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for billingSubscriptionsListByBillingProfileName
     * @param billingAccountName Billing Account Id. (required)
     * @param billingProfileName Billing Profile Id. (required)
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-11-01-preview. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public okhttp3.Call billingSubscriptionsListByBillingProfileNameCall(String billingAccountName, String billingProfileName, String apiVersion, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/billingProfiles/{billingProfileName}/billingSubscriptions"
            .replace("{" + "billingAccountName" + "}", localVarApiClient.escapeString(billingAccountName.toString()))
            .replace("{" + "billingProfileName" + "}", localVarApiClient.escapeString(billingProfileName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call billingSubscriptionsListByBillingProfileNameValidateBeforeCall(String billingAccountName, String billingProfileName, String apiVersion, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'billingAccountName' is set
        if (billingAccountName == null) {
            throw new ApiException("Missing the required parameter 'billingAccountName' when calling billingSubscriptionsListByBillingProfileName(Async)");
        }

        // verify the required parameter 'billingProfileName' is set
        if (billingProfileName == null) {
            throw new ApiException("Missing the required parameter 'billingProfileName' when calling billingSubscriptionsListByBillingProfileName(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling billingSubscriptionsListByBillingProfileName(Async)");
        }

        return billingSubscriptionsListByBillingProfileNameCall(billingAccountName, billingProfileName, apiVersion, _callback);

    }

    /**
     * 
     * Lists billing subscriptions by billing profile name.
     * @param billingAccountName Billing Account Id. (required)
     * @param billingProfileName Billing Profile Id. (required)
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-11-01-preview. (required)
     * @return BillingSubscriptionsListResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public BillingSubscriptionsListResult billingSubscriptionsListByBillingProfileName(String billingAccountName, String billingProfileName, String apiVersion) throws ApiException {
        ApiResponse<BillingSubscriptionsListResult> localVarResp = billingSubscriptionsListByBillingProfileNameWithHttpInfo(billingAccountName, billingProfileName, apiVersion);
        return localVarResp.getData();
    }

    /**
     * 
     * Lists billing subscriptions by billing profile name.
     * @param billingAccountName Billing Account Id. (required)
     * @param billingProfileName Billing Profile Id. (required)
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-11-01-preview. (required)
     * @return ApiResponse&lt;BillingSubscriptionsListResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public ApiResponse<BillingSubscriptionsListResult> billingSubscriptionsListByBillingProfileNameWithHttpInfo(String billingAccountName, String billingProfileName, String apiVersion) throws ApiException {
        okhttp3.Call localVarCall = billingSubscriptionsListByBillingProfileNameValidateBeforeCall(billingAccountName, billingProfileName, apiVersion, null);
        Type localVarReturnType = new TypeToken<BillingSubscriptionsListResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Lists billing subscriptions by billing profile name.
     * @param billingAccountName Billing Account Id. (required)
     * @param billingProfileName Billing Profile Id. (required)
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-11-01-preview. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public okhttp3.Call billingSubscriptionsListByBillingProfileNameAsync(String billingAccountName, String billingProfileName, String apiVersion, final ApiCallback<BillingSubscriptionsListResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = billingSubscriptionsListByBillingProfileNameValidateBeforeCall(billingAccountName, billingProfileName, apiVersion, _callback);
        Type localVarReturnType = new TypeToken<BillingSubscriptionsListResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for billingSubscriptionsListByCustomerName
     * @param billingAccountName Billing Account Id. (required)
     * @param customerName Customer Id. (required)
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-11-01-preview. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public okhttp3.Call billingSubscriptionsListByCustomerNameCall(String billingAccountName, String customerName, String apiVersion, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/customers/{customerName}/billingSubscriptions"
            .replace("{" + "billingAccountName" + "}", localVarApiClient.escapeString(billingAccountName.toString()))
            .replace("{" + "customerName" + "}", localVarApiClient.escapeString(customerName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call billingSubscriptionsListByCustomerNameValidateBeforeCall(String billingAccountName, String customerName, String apiVersion, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'billingAccountName' is set
        if (billingAccountName == null) {
            throw new ApiException("Missing the required parameter 'billingAccountName' when calling billingSubscriptionsListByCustomerName(Async)");
        }

        // verify the required parameter 'customerName' is set
        if (customerName == null) {
            throw new ApiException("Missing the required parameter 'customerName' when calling billingSubscriptionsListByCustomerName(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling billingSubscriptionsListByCustomerName(Async)");
        }

        return billingSubscriptionsListByCustomerNameCall(billingAccountName, customerName, apiVersion, _callback);

    }

    /**
     * 
     * Lists billing subscription by customer name.
     * @param billingAccountName Billing Account Id. (required)
     * @param customerName Customer Id. (required)
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-11-01-preview. (required)
     * @return BillingSubscriptionsListResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public BillingSubscriptionsListResult billingSubscriptionsListByCustomerName(String billingAccountName, String customerName, String apiVersion) throws ApiException {
        ApiResponse<BillingSubscriptionsListResult> localVarResp = billingSubscriptionsListByCustomerNameWithHttpInfo(billingAccountName, customerName, apiVersion);
        return localVarResp.getData();
    }

    /**
     * 
     * Lists billing subscription by customer name.
     * @param billingAccountName Billing Account Id. (required)
     * @param customerName Customer Id. (required)
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-11-01-preview. (required)
     * @return ApiResponse&lt;BillingSubscriptionsListResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public ApiResponse<BillingSubscriptionsListResult> billingSubscriptionsListByCustomerNameWithHttpInfo(String billingAccountName, String customerName, String apiVersion) throws ApiException {
        okhttp3.Call localVarCall = billingSubscriptionsListByCustomerNameValidateBeforeCall(billingAccountName, customerName, apiVersion, null);
        Type localVarReturnType = new TypeToken<BillingSubscriptionsListResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Lists billing subscription by customer name.
     * @param billingAccountName Billing Account Id. (required)
     * @param customerName Customer Id. (required)
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-11-01-preview. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public okhttp3.Call billingSubscriptionsListByCustomerNameAsync(String billingAccountName, String customerName, String apiVersion, final ApiCallback<BillingSubscriptionsListResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = billingSubscriptionsListByCustomerNameValidateBeforeCall(billingAccountName, customerName, apiVersion, _callback);
        Type localVarReturnType = new TypeToken<BillingSubscriptionsListResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for billingSubscriptionsListByInvoiceSectionName
     * @param billingAccountName Billing Account Id. (required)
     * @param invoiceSectionName InvoiceSection Id. (required)
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-11-01-preview. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public okhttp3.Call billingSubscriptionsListByInvoiceSectionNameCall(String billingAccountName, String invoiceSectionName, String apiVersion, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/invoiceSections/{invoiceSectionName}/billingSubscriptions"
            .replace("{" + "billingAccountName" + "}", localVarApiClient.escapeString(billingAccountName.toString()))
            .replace("{" + "invoiceSectionName" + "}", localVarApiClient.escapeString(invoiceSectionName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call billingSubscriptionsListByInvoiceSectionNameValidateBeforeCall(String billingAccountName, String invoiceSectionName, String apiVersion, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'billingAccountName' is set
        if (billingAccountName == null) {
            throw new ApiException("Missing the required parameter 'billingAccountName' when calling billingSubscriptionsListByInvoiceSectionName(Async)");
        }

        // verify the required parameter 'invoiceSectionName' is set
        if (invoiceSectionName == null) {
            throw new ApiException("Missing the required parameter 'invoiceSectionName' when calling billingSubscriptionsListByInvoiceSectionName(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling billingSubscriptionsListByInvoiceSectionName(Async)");
        }

        return billingSubscriptionsListByInvoiceSectionNameCall(billingAccountName, invoiceSectionName, apiVersion, _callback);

    }

    /**
     * 
     * Lists billing subscription by invoice section name.
     * @param billingAccountName Billing Account Id. (required)
     * @param invoiceSectionName InvoiceSection Id. (required)
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-11-01-preview. (required)
     * @return BillingSubscriptionsListResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public BillingSubscriptionsListResult billingSubscriptionsListByInvoiceSectionName(String billingAccountName, String invoiceSectionName, String apiVersion) throws ApiException {
        ApiResponse<BillingSubscriptionsListResult> localVarResp = billingSubscriptionsListByInvoiceSectionNameWithHttpInfo(billingAccountName, invoiceSectionName, apiVersion);
        return localVarResp.getData();
    }

    /**
     * 
     * Lists billing subscription by invoice section name.
     * @param billingAccountName Billing Account Id. (required)
     * @param invoiceSectionName InvoiceSection Id. (required)
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-11-01-preview. (required)
     * @return ApiResponse&lt;BillingSubscriptionsListResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public ApiResponse<BillingSubscriptionsListResult> billingSubscriptionsListByInvoiceSectionNameWithHttpInfo(String billingAccountName, String invoiceSectionName, String apiVersion) throws ApiException {
        okhttp3.Call localVarCall = billingSubscriptionsListByInvoiceSectionNameValidateBeforeCall(billingAccountName, invoiceSectionName, apiVersion, null);
        Type localVarReturnType = new TypeToken<BillingSubscriptionsListResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Lists billing subscription by invoice section name.
     * @param billingAccountName Billing Account Id. (required)
     * @param invoiceSectionName InvoiceSection Id. (required)
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-11-01-preview. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public okhttp3.Call billingSubscriptionsListByInvoiceSectionNameAsync(String billingAccountName, String invoiceSectionName, String apiVersion, final ApiCallback<BillingSubscriptionsListResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = billingSubscriptionsListByInvoiceSectionNameValidateBeforeCall(billingAccountName, invoiceSectionName, apiVersion, _callback);
        Type localVarReturnType = new TypeToken<BillingSubscriptionsListResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
