/**
 * BillingManagementClient
 * Billing client provides access to billing resources for Azure subscriptions.
 *
 * The version of the OpenAPI document: 2018-11-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIParticipants.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIParticipants::OAIParticipants(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIParticipants::OAIParticipants() {
    this->initializeModel();
}

OAIParticipants::~OAIParticipants() {}

void OAIParticipants::initializeModel() {

    m_email_isSet = false;
    m_email_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_status_date_isSet = false;
    m_status_date_isValid = false;
}

void OAIParticipants::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIParticipants::fromJsonObject(QJsonObject json) {

    m_email_isValid = ::OpenAPI::fromJsonValue(m_email, json[QString("email")]);
    m_email_isSet = !json[QString("email")].isNull() && m_email_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_status_date_isValid = ::OpenAPI::fromJsonValue(m_status_date, json[QString("statusDate")]);
    m_status_date_isSet = !json[QString("statusDate")].isNull() && m_status_date_isValid;
}

QString OAIParticipants::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIParticipants::asJsonObject() const {
    QJsonObject obj;
    if (m_email_isSet) {
        obj.insert(QString("email"), ::OpenAPI::toJsonValue(m_email));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_status_date_isSet) {
        obj.insert(QString("statusDate"), ::OpenAPI::toJsonValue(m_status_date));
    }
    return obj;
}

QString OAIParticipants::getEmail() const {
    return m_email;
}
void OAIParticipants::setEmail(const QString &email) {
    m_email = email;
    m_email_isSet = true;
}

bool OAIParticipants::is_email_Set() const{
    return m_email_isSet;
}

bool OAIParticipants::is_email_Valid() const{
    return m_email_isValid;
}

QString OAIParticipants::getStatus() const {
    return m_status;
}
void OAIParticipants::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIParticipants::is_status_Set() const{
    return m_status_isSet;
}

bool OAIParticipants::is_status_Valid() const{
    return m_status_isValid;
}

QDateTime OAIParticipants::getStatusDate() const {
    return m_status_date;
}
void OAIParticipants::setStatusDate(const QDateTime &status_date) {
    m_status_date = status_date;
    m_status_date_isSet = true;
}

bool OAIParticipants::is_status_date_Set() const{
    return m_status_date_isSet;
}

bool OAIParticipants::is_status_date_Valid() const{
    return m_status_date_isValid;
}

bool OAIParticipants::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_date_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIParticipants::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
