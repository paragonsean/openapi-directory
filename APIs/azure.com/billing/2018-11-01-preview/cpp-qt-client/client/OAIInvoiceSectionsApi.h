/**
 * BillingManagementClient
 * Billing client provides access to billing resources for Azure subscriptions.
 *
 * The version of the OpenAPI document: 2018-11-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#ifndef OAI_OAIInvoiceSectionsApi_H
#define OAI_OAIInvoiceSectionsApi_H

#include "OAIHelpers.h"
#include "OAIHttpRequest.h"
#include "OAIServerConfiguration.h"
#include "OAIOauth.h"

#include "OAIErrorResponse.h"
#include "OAIInvoiceSection.h"
#include "OAIInvoiceSectionCreationRequest.h"
#include "OAIInvoiceSectionListResult.h"
#include <QString>

#include <QObject>
#include <QByteArray>
#include <QStringList>
#include <QList>
#include <QNetworkAccessManager>

namespace OpenAPI {

class OAIInvoiceSectionsApi : public QObject {
    Q_OBJECT

public:
    OAIInvoiceSectionsApi(const int timeOut = 0);
    ~OAIInvoiceSectionsApi();

    void initializeServerConfigs();
    int setDefaultServerValue(int serverIndex,const QString &operation, const QString &variable,const QString &val);
    void setServerIndex(const QString &operation, int serverIndex);
    void setApiKey(const QString &apiKeyName, const QString &apiKey);
    void setBearerToken(const QString &token);
    void setUsername(const QString &username);
    void setPassword(const QString &password);
    void setTimeOut(const int timeOut);
    void setWorkingDirectory(const QString &path);
    void setNetworkAccessManager(QNetworkAccessManager* manager);
    int addServerConfiguration(const QString &operation, const QUrl &url, const QString &description = "", const QMap<QString, OAIServerVariable> &variables = QMap<QString, OAIServerVariable>());
    void setNewServerForAllOperations(const QUrl &url, const QString &description = "", const QMap<QString, OAIServerVariable> &variables =  QMap<QString, OAIServerVariable>());
    void setNewServer(const QString &operation, const QUrl &url, const QString &description = "", const QMap<QString, OAIServerVariable> &variables =  QMap<QString, OAIServerVariable>());
    void addHeaders(const QString &key, const QString &value);
    void enableRequestCompression();
    void enableResponseCompression();
    void abortRequests();
    QString getParamStylePrefix(const QString &style);
    QString getParamStyleSuffix(const QString &style);
    QString getParamStyleDelimiter(const QString &style, const QString &name, bool isExplode);

    /**
    * @param[in]  api_version QString [required]
    * @param[in]  billing_account_name QString [required]
    * @param[in]  parameters OAIInvoiceSectionCreationRequest [required]
    */
    virtual void invoiceSectionsCreate(const QString &api_version, const QString &billing_account_name, const OAIInvoiceSectionCreationRequest &parameters);

    /**
    * @param[in]  billing_account_name QString [required]
    * @param[in]  invoice_section_name QString [required]
    */
    virtual void invoiceSectionsElevateToBillingProfile(const QString &billing_account_name, const QString &invoice_section_name);

    /**
    * @param[in]  api_version QString [required]
    * @param[in]  billing_account_name QString [required]
    * @param[in]  invoice_section_name QString [required]
    * @param[in]  expand QString [optional]
    */
    virtual void invoiceSectionsGet(const QString &api_version, const QString &billing_account_name, const QString &invoice_section_name, const ::OpenAPI::OptionalParam<QString> &expand = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  api_version QString [required]
    * @param[in]  billing_account_name QString [required]
    * @param[in]  expand QString [optional]
    */
    virtual void invoiceSectionsListByBillingAccountName(const QString &api_version, const QString &billing_account_name, const ::OpenAPI::OptionalParam<QString> &expand = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  api_version QString [required]
    * @param[in]  billing_account_name QString [required]
    * @param[in]  billing_profile_name QString [required]
    */
    virtual void invoiceSectionsListByBillingProfileName(const QString &api_version, const QString &billing_account_name, const QString &billing_profile_name);

    /**
    * @param[in]  api_version QString [required]
    * @param[in]  billing_account_name QString [required]
    * @param[in]  expand QString [optional]
    */
    virtual void invoiceSectionsListByCreateSubscriptionPermission(const QString &api_version, const QString &billing_account_name, const ::OpenAPI::OptionalParam<QString> &expand = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  api_version QString [required]
    * @param[in]  billing_account_name QString [required]
    * @param[in]  invoice_section_name QString [required]
    * @param[in]  parameters OAIInvoiceSection [required]
    */
    virtual void invoiceSectionsUpdate(const QString &api_version, const QString &billing_account_name, const QString &invoice_section_name, const OAIInvoiceSection &parameters);


private:
    QMap<QString,int> _serverIndices;
    QMap<QString,QList<OAIServerConfiguration>> _serverConfigs;
    QMap<QString, QString> _apiKeys;
    QString _bearerToken;
    QString _username;
    QString _password;
    int _timeOut;
    QString _workingDirectory;
    QNetworkAccessManager* _manager;
    QMap<QString, QString> _defaultHeaders;
    bool _isResponseCompressionEnabled;
    bool _isRequestCompressionEnabled;
    OAIHttpRequestInput _latestInput;
    OAIHttpRequestWorker *_latestWorker;
    QStringList _latestScope;
    OauthCode _authFlow;
    OauthImplicit _implicitFlow;
    OauthCredentials _credentialFlow;
    OauthPassword _passwordFlow;
    int _OauthMethod = 0;

    void invoiceSectionsCreateCallback(OAIHttpRequestWorker *worker);
    void invoiceSectionsElevateToBillingProfileCallback(OAIHttpRequestWorker *worker);
    void invoiceSectionsGetCallback(OAIHttpRequestWorker *worker);
    void invoiceSectionsListByBillingAccountNameCallback(OAIHttpRequestWorker *worker);
    void invoiceSectionsListByBillingProfileNameCallback(OAIHttpRequestWorker *worker);
    void invoiceSectionsListByCreateSubscriptionPermissionCallback(OAIHttpRequestWorker *worker);
    void invoiceSectionsUpdateCallback(OAIHttpRequestWorker *worker);

Q_SIGNALS:

    void invoiceSectionsCreateSignal(OAIInvoiceSection summary);
    void invoiceSectionsElevateToBillingProfileSignal();
    void invoiceSectionsGetSignal(OAIInvoiceSection summary);
    void invoiceSectionsListByBillingAccountNameSignal(OAIInvoiceSectionListResult summary);
    void invoiceSectionsListByBillingProfileNameSignal(OAIInvoiceSectionListResult summary);
    void invoiceSectionsListByCreateSubscriptionPermissionSignal(OAIInvoiceSectionListResult summary);
    void invoiceSectionsUpdateSignal(OAIInvoiceSection summary);


    void invoiceSectionsCreateSignalFull(OAIHttpRequestWorker *worker, OAIInvoiceSection summary);
    void invoiceSectionsElevateToBillingProfileSignalFull(OAIHttpRequestWorker *worker);
    void invoiceSectionsGetSignalFull(OAIHttpRequestWorker *worker, OAIInvoiceSection summary);
    void invoiceSectionsListByBillingAccountNameSignalFull(OAIHttpRequestWorker *worker, OAIInvoiceSectionListResult summary);
    void invoiceSectionsListByBillingProfileNameSignalFull(OAIHttpRequestWorker *worker, OAIInvoiceSectionListResult summary);
    void invoiceSectionsListByCreateSubscriptionPermissionSignalFull(OAIHttpRequestWorker *worker, OAIInvoiceSectionListResult summary);
    void invoiceSectionsUpdateSignalFull(OAIHttpRequestWorker *worker, OAIInvoiceSection summary);

    Q_DECL_DEPRECATED_X("Use invoiceSectionsCreateSignalError() instead")
    void invoiceSectionsCreateSignalE(OAIInvoiceSection summary, QNetworkReply::NetworkError error_type, QString error_str);
    void invoiceSectionsCreateSignalError(OAIInvoiceSection summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use invoiceSectionsElevateToBillingProfileSignalError() instead")
    void invoiceSectionsElevateToBillingProfileSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void invoiceSectionsElevateToBillingProfileSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use invoiceSectionsGetSignalError() instead")
    void invoiceSectionsGetSignalE(OAIInvoiceSection summary, QNetworkReply::NetworkError error_type, QString error_str);
    void invoiceSectionsGetSignalError(OAIInvoiceSection summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use invoiceSectionsListByBillingAccountNameSignalError() instead")
    void invoiceSectionsListByBillingAccountNameSignalE(OAIInvoiceSectionListResult summary, QNetworkReply::NetworkError error_type, QString error_str);
    void invoiceSectionsListByBillingAccountNameSignalError(OAIInvoiceSectionListResult summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use invoiceSectionsListByBillingProfileNameSignalError() instead")
    void invoiceSectionsListByBillingProfileNameSignalE(OAIInvoiceSectionListResult summary, QNetworkReply::NetworkError error_type, QString error_str);
    void invoiceSectionsListByBillingProfileNameSignalError(OAIInvoiceSectionListResult summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use invoiceSectionsListByCreateSubscriptionPermissionSignalError() instead")
    void invoiceSectionsListByCreateSubscriptionPermissionSignalE(OAIInvoiceSectionListResult summary, QNetworkReply::NetworkError error_type, QString error_str);
    void invoiceSectionsListByCreateSubscriptionPermissionSignalError(OAIInvoiceSectionListResult summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use invoiceSectionsUpdateSignalError() instead")
    void invoiceSectionsUpdateSignalE(OAIInvoiceSection summary, QNetworkReply::NetworkError error_type, QString error_str);
    void invoiceSectionsUpdateSignalError(OAIInvoiceSection summary, QNetworkReply::NetworkError error_type, const QString &error_str);

    Q_DECL_DEPRECATED_X("Use invoiceSectionsCreateSignalErrorFull() instead")
    void invoiceSectionsCreateSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void invoiceSectionsCreateSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use invoiceSectionsElevateToBillingProfileSignalErrorFull() instead")
    void invoiceSectionsElevateToBillingProfileSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void invoiceSectionsElevateToBillingProfileSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use invoiceSectionsGetSignalErrorFull() instead")
    void invoiceSectionsGetSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void invoiceSectionsGetSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use invoiceSectionsListByBillingAccountNameSignalErrorFull() instead")
    void invoiceSectionsListByBillingAccountNameSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void invoiceSectionsListByBillingAccountNameSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use invoiceSectionsListByBillingProfileNameSignalErrorFull() instead")
    void invoiceSectionsListByBillingProfileNameSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void invoiceSectionsListByBillingProfileNameSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use invoiceSectionsListByCreateSubscriptionPermissionSignalErrorFull() instead")
    void invoiceSectionsListByCreateSubscriptionPermissionSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void invoiceSectionsListByCreateSubscriptionPermissionSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use invoiceSectionsUpdateSignalErrorFull() instead")
    void invoiceSectionsUpdateSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void invoiceSectionsUpdateSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);

    void abortRequestsSignal();
    void allPendingRequestsCompleted();

public Q_SLOTS:
    void tokenAvailable();
};

} // namespace OpenAPI
#endif
