/**
 * BillingManagementClient
 * Billing client provides access to billing resources for Azure subscriptions.
 *
 * The version of the OpenAPI document: 2018-11-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITransferStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITransferStatus::OAITransferStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITransferStatus::OAITransferStatus() {
    this->initializeModel();
}

OAITransferStatus::~OAITransferStatus() {}

void OAITransferStatus::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAITransferStatus::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAITransferStatus::fromJson(QString jsonString) {
    
    if ( jsonString.compare("Pending", Qt::CaseInsensitive) == 0) {
        m_value = eOAITransferStatus::PENDING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("InProgress", Qt::CaseInsensitive) == 0) {
        m_value = eOAITransferStatus::INPROGRESS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Completed", Qt::CaseInsensitive) == 0) {
        m_value = eOAITransferStatus::COMPLETED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CompletedWithErrors", Qt::CaseInsensitive) == 0) {
        m_value = eOAITransferStatus::COMPLETEDWITHERRORS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Failed", Qt::CaseInsensitive) == 0) {
        m_value = eOAITransferStatus::FAILED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Canceled", Qt::CaseInsensitive) == 0) {
        m_value = eOAITransferStatus::CANCELED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Declined", Qt::CaseInsensitive) == 0) {
        m_value = eOAITransferStatus::DECLINED;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAITransferStatus::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAITransferStatus::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAITransferStatus::PENDING:
            val = "Pending";
            break;
        case eOAITransferStatus::INPROGRESS:
            val = "InProgress";
            break;
        case eOAITransferStatus::COMPLETED:
            val = "Completed";
            break;
        case eOAITransferStatus::COMPLETEDWITHERRORS:
            val = "CompletedWithErrors";
            break;
        case eOAITransferStatus::FAILED:
            val = "Failed";
            break;
        case eOAITransferStatus::CANCELED:
            val = "Canceled";
            break;
        case eOAITransferStatus::DECLINED:
            val = "Declined";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAITransferStatus::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAITransferStatus::eOAITransferStatus OAITransferStatus::getValue() const {
    return m_value;
}

void OAITransferStatus::setValue(const OAITransferStatus::eOAITransferStatus& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAITransferStatus::isSet() const {
    
    return m_value_isSet;
}

bool OAITransferStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
