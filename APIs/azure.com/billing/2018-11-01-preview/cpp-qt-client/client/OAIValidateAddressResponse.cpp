/**
 * BillingManagementClient
 * Billing client provides access to billing resources for Azure subscriptions.
 *
 * The version of the OpenAPI document: 2018-11-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIValidateAddressResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIValidateAddressResponse::OAIValidateAddressResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIValidateAddressResponse::OAIValidateAddressResponse() {
    this->initializeModel();
}

OAIValidateAddressResponse::~OAIValidateAddressResponse() {}

void OAIValidateAddressResponse::initializeModel() {

    m_status_isSet = false;
    m_status_isValid = false;

    m_suggested_addresses_isSet = false;
    m_suggested_addresses_isValid = false;

    m_validation_message_isSet = false;
    m_validation_message_isValid = false;
}

void OAIValidateAddressResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIValidateAddressResponse::fromJsonObject(QJsonObject json) {

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_suggested_addresses_isValid = ::OpenAPI::fromJsonValue(m_suggested_addresses, json[QString("suggestedAddresses")]);
    m_suggested_addresses_isSet = !json[QString("suggestedAddresses")].isNull() && m_suggested_addresses_isValid;

    m_validation_message_isValid = ::OpenAPI::fromJsonValue(m_validation_message, json[QString("validationMessage")]);
    m_validation_message_isSet = !json[QString("validationMessage")].isNull() && m_validation_message_isValid;
}

QString OAIValidateAddressResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIValidateAddressResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_status.isSet()) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_suggested_addresses.size() > 0) {
        obj.insert(QString("suggestedAddresses"), ::OpenAPI::toJsonValue(m_suggested_addresses));
    }
    if (m_validation_message_isSet) {
        obj.insert(QString("validationMessage"), ::OpenAPI::toJsonValue(m_validation_message));
    }
    return obj;
}

OAIAddressValidationStatus OAIValidateAddressResponse::getStatus() const {
    return m_status;
}
void OAIValidateAddressResponse::setStatus(const OAIAddressValidationStatus &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIValidateAddressResponse::is_status_Set() const{
    return m_status_isSet;
}

bool OAIValidateAddressResponse::is_status_Valid() const{
    return m_status_isValid;
}

QList<OAIAddress> OAIValidateAddressResponse::getSuggestedAddresses() const {
    return m_suggested_addresses;
}
void OAIValidateAddressResponse::setSuggestedAddresses(const QList<OAIAddress> &suggested_addresses) {
    m_suggested_addresses = suggested_addresses;
    m_suggested_addresses_isSet = true;
}

bool OAIValidateAddressResponse::is_suggested_addresses_Set() const{
    return m_suggested_addresses_isSet;
}

bool OAIValidateAddressResponse::is_suggested_addresses_Valid() const{
    return m_suggested_addresses_isValid;
}

QString OAIValidateAddressResponse::getValidationMessage() const {
    return m_validation_message;
}
void OAIValidateAddressResponse::setValidationMessage(const QString &validation_message) {
    m_validation_message = validation_message;
    m_validation_message_isSet = true;
}

bool OAIValidateAddressResponse::is_validation_message_Set() const{
    return m_validation_message_isSet;
}

bool OAIValidateAddressResponse::is_validation_message_Valid() const{
    return m_validation_message_isValid;
}

bool OAIValidateAddressResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_suggested_addresses.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_validation_message_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIValidateAddressResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
