/**
 * BillingManagementClient
 * Billing client provides access to billing resources for Azure subscriptions.
 *
 * The version of the OpenAPI document: 2018-11-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#ifndef OAI_OAIBillingRoleDefinitionsApi_H
#define OAI_OAIBillingRoleDefinitionsApi_H

#include "OAIHelpers.h"
#include "OAIHttpRequest.h"
#include "OAIServerConfiguration.h"
#include "OAIOauth.h"

#include "OAIBillingRoleDefinition.h"
#include "OAIBillingRoleDefinitionListResult.h"
#include "OAIErrorResponse.h"
#include <QString>

#include <QObject>
#include <QByteArray>
#include <QStringList>
#include <QList>
#include <QNetworkAccessManager>

namespace OpenAPI {

class OAIBillingRoleDefinitionsApi : public QObject {
    Q_OBJECT

public:
    OAIBillingRoleDefinitionsApi(const int timeOut = 0);
    ~OAIBillingRoleDefinitionsApi();

    void initializeServerConfigs();
    int setDefaultServerValue(int serverIndex,const QString &operation, const QString &variable,const QString &val);
    void setServerIndex(const QString &operation, int serverIndex);
    void setApiKey(const QString &apiKeyName, const QString &apiKey);
    void setBearerToken(const QString &token);
    void setUsername(const QString &username);
    void setPassword(const QString &password);
    void setTimeOut(const int timeOut);
    void setWorkingDirectory(const QString &path);
    void setNetworkAccessManager(QNetworkAccessManager* manager);
    int addServerConfiguration(const QString &operation, const QUrl &url, const QString &description = "", const QMap<QString, OAIServerVariable> &variables = QMap<QString, OAIServerVariable>());
    void setNewServerForAllOperations(const QUrl &url, const QString &description = "", const QMap<QString, OAIServerVariable> &variables =  QMap<QString, OAIServerVariable>());
    void setNewServer(const QString &operation, const QUrl &url, const QString &description = "", const QMap<QString, OAIServerVariable> &variables =  QMap<QString, OAIServerVariable>());
    void addHeaders(const QString &key, const QString &value);
    void enableRequestCompression();
    void enableResponseCompression();
    void abortRequests();
    QString getParamStylePrefix(const QString &style);
    QString getParamStyleSuffix(const QString &style);
    QString getParamStyleDelimiter(const QString &style, const QString &name, bool isExplode);

    /**
    * @param[in]  api_version QString [required]
    * @param[in]  billing_account_name QString [required]
    * @param[in]  billing_role_definition_name QString [required]
    */
    virtual void billingRoleDefinitionsGetByBillingAccountName(const QString &api_version, const QString &billing_account_name, const QString &billing_role_definition_name);

    /**
    * @param[in]  api_version QString [required]
    * @param[in]  billing_account_name QString [required]
    * @param[in]  billing_profile_name QString [required]
    * @param[in]  billing_role_definition_name QString [required]
    */
    virtual void billingRoleDefinitionsGetByBillingProfileName(const QString &api_version, const QString &billing_account_name, const QString &billing_profile_name, const QString &billing_role_definition_name);

    /**
    * @param[in]  api_version QString [required]
    * @param[in]  billing_account_name QString [required]
    * @param[in]  invoice_section_name QString [required]
    * @param[in]  billing_role_definition_name QString [required]
    */
    virtual void billingRoleDefinitionsGetByInvoiceSectionName(const QString &api_version, const QString &billing_account_name, const QString &invoice_section_name, const QString &billing_role_definition_name);

    /**
    * @param[in]  api_version QString [required]
    * @param[in]  billing_account_name QString [required]
    */
    virtual void billingRoleDefinitionsListByBillingAccountName(const QString &api_version, const QString &billing_account_name);

    /**
    * @param[in]  api_version QString [required]
    * @param[in]  billing_account_name QString [required]
    * @param[in]  billing_profile_name QString [required]
    */
    virtual void billingRoleDefinitionsListByBillingProfileName(const QString &api_version, const QString &billing_account_name, const QString &billing_profile_name);

    /**
    * @param[in]  api_version QString [required]
    * @param[in]  billing_account_name QString [required]
    * @param[in]  invoice_section_name QString [required]
    */
    virtual void billingRoleDefinitionsListByInvoiceSectionName(const QString &api_version, const QString &billing_account_name, const QString &invoice_section_name);


private:
    QMap<QString,int> _serverIndices;
    QMap<QString,QList<OAIServerConfiguration>> _serverConfigs;
    QMap<QString, QString> _apiKeys;
    QString _bearerToken;
    QString _username;
    QString _password;
    int _timeOut;
    QString _workingDirectory;
    QNetworkAccessManager* _manager;
    QMap<QString, QString> _defaultHeaders;
    bool _isResponseCompressionEnabled;
    bool _isRequestCompressionEnabled;
    OAIHttpRequestInput _latestInput;
    OAIHttpRequestWorker *_latestWorker;
    QStringList _latestScope;
    OauthCode _authFlow;
    OauthImplicit _implicitFlow;
    OauthCredentials _credentialFlow;
    OauthPassword _passwordFlow;
    int _OauthMethod = 0;

    void billingRoleDefinitionsGetByBillingAccountNameCallback(OAIHttpRequestWorker *worker);
    void billingRoleDefinitionsGetByBillingProfileNameCallback(OAIHttpRequestWorker *worker);
    void billingRoleDefinitionsGetByInvoiceSectionNameCallback(OAIHttpRequestWorker *worker);
    void billingRoleDefinitionsListByBillingAccountNameCallback(OAIHttpRequestWorker *worker);
    void billingRoleDefinitionsListByBillingProfileNameCallback(OAIHttpRequestWorker *worker);
    void billingRoleDefinitionsListByInvoiceSectionNameCallback(OAIHttpRequestWorker *worker);

Q_SIGNALS:

    void billingRoleDefinitionsGetByBillingAccountNameSignal(OAIBillingRoleDefinition summary);
    void billingRoleDefinitionsGetByBillingProfileNameSignal(OAIBillingRoleDefinition summary);
    void billingRoleDefinitionsGetByInvoiceSectionNameSignal(OAIBillingRoleDefinition summary);
    void billingRoleDefinitionsListByBillingAccountNameSignal(OAIBillingRoleDefinitionListResult summary);
    void billingRoleDefinitionsListByBillingProfileNameSignal(OAIBillingRoleDefinitionListResult summary);
    void billingRoleDefinitionsListByInvoiceSectionNameSignal(OAIBillingRoleDefinitionListResult summary);


    void billingRoleDefinitionsGetByBillingAccountNameSignalFull(OAIHttpRequestWorker *worker, OAIBillingRoleDefinition summary);
    void billingRoleDefinitionsGetByBillingProfileNameSignalFull(OAIHttpRequestWorker *worker, OAIBillingRoleDefinition summary);
    void billingRoleDefinitionsGetByInvoiceSectionNameSignalFull(OAIHttpRequestWorker *worker, OAIBillingRoleDefinition summary);
    void billingRoleDefinitionsListByBillingAccountNameSignalFull(OAIHttpRequestWorker *worker, OAIBillingRoleDefinitionListResult summary);
    void billingRoleDefinitionsListByBillingProfileNameSignalFull(OAIHttpRequestWorker *worker, OAIBillingRoleDefinitionListResult summary);
    void billingRoleDefinitionsListByInvoiceSectionNameSignalFull(OAIHttpRequestWorker *worker, OAIBillingRoleDefinitionListResult summary);

    Q_DECL_DEPRECATED_X("Use billingRoleDefinitionsGetByBillingAccountNameSignalError() instead")
    void billingRoleDefinitionsGetByBillingAccountNameSignalE(OAIBillingRoleDefinition summary, QNetworkReply::NetworkError error_type, QString error_str);
    void billingRoleDefinitionsGetByBillingAccountNameSignalError(OAIBillingRoleDefinition summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use billingRoleDefinitionsGetByBillingProfileNameSignalError() instead")
    void billingRoleDefinitionsGetByBillingProfileNameSignalE(OAIBillingRoleDefinition summary, QNetworkReply::NetworkError error_type, QString error_str);
    void billingRoleDefinitionsGetByBillingProfileNameSignalError(OAIBillingRoleDefinition summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use billingRoleDefinitionsGetByInvoiceSectionNameSignalError() instead")
    void billingRoleDefinitionsGetByInvoiceSectionNameSignalE(OAIBillingRoleDefinition summary, QNetworkReply::NetworkError error_type, QString error_str);
    void billingRoleDefinitionsGetByInvoiceSectionNameSignalError(OAIBillingRoleDefinition summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use billingRoleDefinitionsListByBillingAccountNameSignalError() instead")
    void billingRoleDefinitionsListByBillingAccountNameSignalE(OAIBillingRoleDefinitionListResult summary, QNetworkReply::NetworkError error_type, QString error_str);
    void billingRoleDefinitionsListByBillingAccountNameSignalError(OAIBillingRoleDefinitionListResult summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use billingRoleDefinitionsListByBillingProfileNameSignalError() instead")
    void billingRoleDefinitionsListByBillingProfileNameSignalE(OAIBillingRoleDefinitionListResult summary, QNetworkReply::NetworkError error_type, QString error_str);
    void billingRoleDefinitionsListByBillingProfileNameSignalError(OAIBillingRoleDefinitionListResult summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use billingRoleDefinitionsListByInvoiceSectionNameSignalError() instead")
    void billingRoleDefinitionsListByInvoiceSectionNameSignalE(OAIBillingRoleDefinitionListResult summary, QNetworkReply::NetworkError error_type, QString error_str);
    void billingRoleDefinitionsListByInvoiceSectionNameSignalError(OAIBillingRoleDefinitionListResult summary, QNetworkReply::NetworkError error_type, const QString &error_str);

    Q_DECL_DEPRECATED_X("Use billingRoleDefinitionsGetByBillingAccountNameSignalErrorFull() instead")
    void billingRoleDefinitionsGetByBillingAccountNameSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void billingRoleDefinitionsGetByBillingAccountNameSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use billingRoleDefinitionsGetByBillingProfileNameSignalErrorFull() instead")
    void billingRoleDefinitionsGetByBillingProfileNameSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void billingRoleDefinitionsGetByBillingProfileNameSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use billingRoleDefinitionsGetByInvoiceSectionNameSignalErrorFull() instead")
    void billingRoleDefinitionsGetByInvoiceSectionNameSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void billingRoleDefinitionsGetByInvoiceSectionNameSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use billingRoleDefinitionsListByBillingAccountNameSignalErrorFull() instead")
    void billingRoleDefinitionsListByBillingAccountNameSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void billingRoleDefinitionsListByBillingAccountNameSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use billingRoleDefinitionsListByBillingProfileNameSignalErrorFull() instead")
    void billingRoleDefinitionsListByBillingProfileNameSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void billingRoleDefinitionsListByBillingProfileNameSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use billingRoleDefinitionsListByInvoiceSectionNameSignalErrorFull() instead")
    void billingRoleDefinitionsListByInvoiceSectionNameSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void billingRoleDefinitionsListByInvoiceSectionNameSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);

    void abortRequestsSignal();
    void allPendingRequestsCompleted();

public Q_SLOTS:
    void tokenAvailable();
};

} // namespace OpenAPI
#endif
