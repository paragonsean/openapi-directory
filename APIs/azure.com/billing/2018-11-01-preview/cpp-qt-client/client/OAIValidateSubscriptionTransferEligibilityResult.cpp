/**
 * BillingManagementClient
 * Billing client provides access to billing resources for Azure subscriptions.
 *
 * The version of the OpenAPI document: 2018-11-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIValidateSubscriptionTransferEligibilityResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIValidateSubscriptionTransferEligibilityResult::OAIValidateSubscriptionTransferEligibilityResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIValidateSubscriptionTransferEligibilityResult::OAIValidateSubscriptionTransferEligibilityResult() {
    this->initializeModel();
}

OAIValidateSubscriptionTransferEligibilityResult::~OAIValidateSubscriptionTransferEligibilityResult() {}

void OAIValidateSubscriptionTransferEligibilityResult::initializeModel() {

    m_error_details_isSet = false;
    m_error_details_isValid = false;

    m_is_transfer_eligible_isSet = false;
    m_is_transfer_eligible_isValid = false;
}

void OAIValidateSubscriptionTransferEligibilityResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIValidateSubscriptionTransferEligibilityResult::fromJsonObject(QJsonObject json) {

    m_error_details_isValid = ::OpenAPI::fromJsonValue(m_error_details, json[QString("errorDetails")]);
    m_error_details_isSet = !json[QString("errorDetails")].isNull() && m_error_details_isValid;

    m_is_transfer_eligible_isValid = ::OpenAPI::fromJsonValue(m_is_transfer_eligible, json[QString("isTransferEligible")]);
    m_is_transfer_eligible_isSet = !json[QString("isTransferEligible")].isNull() && m_is_transfer_eligible_isValid;
}

QString OAIValidateSubscriptionTransferEligibilityResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIValidateSubscriptionTransferEligibilityResult::asJsonObject() const {
    QJsonObject obj;
    if (m_error_details.isSet()) {
        obj.insert(QString("errorDetails"), ::OpenAPI::toJsonValue(m_error_details));
    }
    if (m_is_transfer_eligible_isSet) {
        obj.insert(QString("isTransferEligible"), ::OpenAPI::toJsonValue(m_is_transfer_eligible));
    }
    return obj;
}

OAIValidateSubscriptionTransferEligibilityError OAIValidateSubscriptionTransferEligibilityResult::getErrorDetails() const {
    return m_error_details;
}
void OAIValidateSubscriptionTransferEligibilityResult::setErrorDetails(const OAIValidateSubscriptionTransferEligibilityError &error_details) {
    m_error_details = error_details;
    m_error_details_isSet = true;
}

bool OAIValidateSubscriptionTransferEligibilityResult::is_error_details_Set() const{
    return m_error_details_isSet;
}

bool OAIValidateSubscriptionTransferEligibilityResult::is_error_details_Valid() const{
    return m_error_details_isValid;
}

bool OAIValidateSubscriptionTransferEligibilityResult::isIsTransferEligible() const {
    return m_is_transfer_eligible;
}
void OAIValidateSubscriptionTransferEligibilityResult::setIsTransferEligible(const bool &is_transfer_eligible) {
    m_is_transfer_eligible = is_transfer_eligible;
    m_is_transfer_eligible_isSet = true;
}

bool OAIValidateSubscriptionTransferEligibilityResult::is_is_transfer_eligible_Set() const{
    return m_is_transfer_eligible_isSet;
}

bool OAIValidateSubscriptionTransferEligibilityResult::is_is_transfer_eligible_Valid() const{
    return m_is_transfer_eligible_isValid;
}

bool OAIValidateSubscriptionTransferEligibilityResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_error_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_transfer_eligible_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIValidateSubscriptionTransferEligibilityResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
