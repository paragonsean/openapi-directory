/**
 * BillingManagementClient
 * Billing client provides access to billing resources for Azure subscriptions.
 *
 * The version of the OpenAPI document: 2018-11-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEnrollmentAccountContext.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEnrollmentAccountContext::OAIEnrollmentAccountContext(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEnrollmentAccountContext::OAIEnrollmentAccountContext() {
    this->initializeModel();
}

OAIEnrollmentAccountContext::~OAIEnrollmentAccountContext() {}

void OAIEnrollmentAccountContext::initializeModel() {

    m_cost_center_isSet = false;
    m_cost_center_isValid = false;

    m_end_date_isSet = false;
    m_end_date_isValid = false;

    m_enrollment_account_name_isSet = false;
    m_enrollment_account_name_isValid = false;

    m_start_date_isSet = false;
    m_start_date_isValid = false;
}

void OAIEnrollmentAccountContext::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEnrollmentAccountContext::fromJsonObject(QJsonObject json) {

    m_cost_center_isValid = ::OpenAPI::fromJsonValue(m_cost_center, json[QString("costCenter")]);
    m_cost_center_isSet = !json[QString("costCenter")].isNull() && m_cost_center_isValid;

    m_end_date_isValid = ::OpenAPI::fromJsonValue(m_end_date, json[QString("endDate")]);
    m_end_date_isSet = !json[QString("endDate")].isNull() && m_end_date_isValid;

    m_enrollment_account_name_isValid = ::OpenAPI::fromJsonValue(m_enrollment_account_name, json[QString("enrollmentAccountName")]);
    m_enrollment_account_name_isSet = !json[QString("enrollmentAccountName")].isNull() && m_enrollment_account_name_isValid;

    m_start_date_isValid = ::OpenAPI::fromJsonValue(m_start_date, json[QString("startDate")]);
    m_start_date_isSet = !json[QString("startDate")].isNull() && m_start_date_isValid;
}

QString OAIEnrollmentAccountContext::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEnrollmentAccountContext::asJsonObject() const {
    QJsonObject obj;
    if (m_cost_center_isSet) {
        obj.insert(QString("costCenter"), ::OpenAPI::toJsonValue(m_cost_center));
    }
    if (m_end_date_isSet) {
        obj.insert(QString("endDate"), ::OpenAPI::toJsonValue(m_end_date));
    }
    if (m_enrollment_account_name_isSet) {
        obj.insert(QString("enrollmentAccountName"), ::OpenAPI::toJsonValue(m_enrollment_account_name));
    }
    if (m_start_date_isSet) {
        obj.insert(QString("startDate"), ::OpenAPI::toJsonValue(m_start_date));
    }
    return obj;
}

QString OAIEnrollmentAccountContext::getCostCenter() const {
    return m_cost_center;
}
void OAIEnrollmentAccountContext::setCostCenter(const QString &cost_center) {
    m_cost_center = cost_center;
    m_cost_center_isSet = true;
}

bool OAIEnrollmentAccountContext::is_cost_center_Set() const{
    return m_cost_center_isSet;
}

bool OAIEnrollmentAccountContext::is_cost_center_Valid() const{
    return m_cost_center_isValid;
}

QDateTime OAIEnrollmentAccountContext::getEndDate() const {
    return m_end_date;
}
void OAIEnrollmentAccountContext::setEndDate(const QDateTime &end_date) {
    m_end_date = end_date;
    m_end_date_isSet = true;
}

bool OAIEnrollmentAccountContext::is_end_date_Set() const{
    return m_end_date_isSet;
}

bool OAIEnrollmentAccountContext::is_end_date_Valid() const{
    return m_end_date_isValid;
}

QString OAIEnrollmentAccountContext::getEnrollmentAccountName() const {
    return m_enrollment_account_name;
}
void OAIEnrollmentAccountContext::setEnrollmentAccountName(const QString &enrollment_account_name) {
    m_enrollment_account_name = enrollment_account_name;
    m_enrollment_account_name_isSet = true;
}

bool OAIEnrollmentAccountContext::is_enrollment_account_name_Set() const{
    return m_enrollment_account_name_isSet;
}

bool OAIEnrollmentAccountContext::is_enrollment_account_name_Valid() const{
    return m_enrollment_account_name_isValid;
}

QDateTime OAIEnrollmentAccountContext::getStartDate() const {
    return m_start_date;
}
void OAIEnrollmentAccountContext::setStartDate(const QDateTime &start_date) {
    m_start_date = start_date;
    m_start_date_isSet = true;
}

bool OAIEnrollmentAccountContext::is_start_date_Set() const{
    return m_start_date_isSet;
}

bool OAIEnrollmentAccountContext::is_start_date_Valid() const{
    return m_start_date_isValid;
}

bool OAIEnrollmentAccountContext::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cost_center_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_end_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enrollment_account_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_date_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEnrollmentAccountContext::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
