/**
 * BillingManagementClient
 * Billing client provides access to billing resources for Azure subscriptions.
 *
 * The version of the OpenAPI document: 2018-11-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProductDetails.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProductDetails::OAIProductDetails(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProductDetails::OAIProductDetails() {
    this->initializeModel();
}

OAIProductDetails::~OAIProductDetails() {}

void OAIProductDetails::initializeModel() {

    m_product_id_isSet = false;
    m_product_id_isValid = false;

    m_product_type_isSet = false;
    m_product_type_isValid = false;
}

void OAIProductDetails::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProductDetails::fromJsonObject(QJsonObject json) {

    m_product_id_isValid = ::OpenAPI::fromJsonValue(m_product_id, json[QString("productId")]);
    m_product_id_isSet = !json[QString("productId")].isNull() && m_product_id_isValid;

    m_product_type_isValid = ::OpenAPI::fromJsonValue(m_product_type, json[QString("productType")]);
    m_product_type_isSet = !json[QString("productType")].isNull() && m_product_type_isValid;
}

QString OAIProductDetails::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProductDetails::asJsonObject() const {
    QJsonObject obj;
    if (m_product_id_isSet) {
        obj.insert(QString("productId"), ::OpenAPI::toJsonValue(m_product_id));
    }
    if (m_product_type.isSet()) {
        obj.insert(QString("productType"), ::OpenAPI::toJsonValue(m_product_type));
    }
    return obj;
}

QString OAIProductDetails::getProductId() const {
    return m_product_id;
}
void OAIProductDetails::setProductId(const QString &product_id) {
    m_product_id = product_id;
    m_product_id_isSet = true;
}

bool OAIProductDetails::is_product_id_Set() const{
    return m_product_id_isSet;
}

bool OAIProductDetails::is_product_id_Valid() const{
    return m_product_id_isValid;
}

OAIProductType OAIProductDetails::getProductType() const {
    return m_product_type;
}
void OAIProductDetails::setProductType(const OAIProductType &product_type) {
    m_product_type = product_type;
    m_product_type_isSet = true;
}

bool OAIProductDetails::is_product_type_Set() const{
    return m_product_type_isSet;
}

bool OAIProductDetails::is_product_type_Valid() const{
    return m_product_type_isValid;
}

bool OAIProductDetails::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_product_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_product_type.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProductDetails::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
