/**
 * BillingManagementClient
 * Billing client provides access to billing resources for Azure subscriptions.
 *
 * The version of the OpenAPI document: 2018-11-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICustomerProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICustomerProperties::OAICustomerProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICustomerProperties::OAICustomerProperties() {
    this->initializeModel();
}

OAICustomerProperties::~OAICustomerProperties() {}

void OAICustomerProperties::initializeModel() {

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_enabled_azure_skus_isSet = false;
    m_enabled_azure_skus_isValid = false;

    m_resellers_isSet = false;
    m_resellers_isValid = false;
}

void OAICustomerProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICustomerProperties::fromJsonObject(QJsonObject json) {

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_enabled_azure_skus_isValid = ::OpenAPI::fromJsonValue(m_enabled_azure_skus, json[QString("enabledAzureSKUs")]);
    m_enabled_azure_skus_isSet = !json[QString("enabledAzureSKUs")].isNull() && m_enabled_azure_skus_isValid;

    m_resellers_isValid = ::OpenAPI::fromJsonValue(m_resellers, json[QString("resellers")]);
    m_resellers_isSet = !json[QString("resellers")].isNull() && m_resellers_isValid;
}

QString OAICustomerProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICustomerProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_enabled_azure_skus.size() > 0) {
        obj.insert(QString("enabledAzureSKUs"), ::OpenAPI::toJsonValue(m_enabled_azure_skus));
    }
    if (m_resellers.size() > 0) {
        obj.insert(QString("resellers"), ::OpenAPI::toJsonValue(m_resellers));
    }
    return obj;
}

QString OAICustomerProperties::getDisplayName() const {
    return m_display_name;
}
void OAICustomerProperties::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAICustomerProperties::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAICustomerProperties::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QList<OAIEnabledAzureSKUs> OAICustomerProperties::getEnabledAzureSkus() const {
    return m_enabled_azure_skus;
}
void OAICustomerProperties::setEnabledAzureSkus(const QList<OAIEnabledAzureSKUs> &enabled_azure_skus) {
    m_enabled_azure_skus = enabled_azure_skus;
    m_enabled_azure_skus_isSet = true;
}

bool OAICustomerProperties::is_enabled_azure_skus_Set() const{
    return m_enabled_azure_skus_isSet;
}

bool OAICustomerProperties::is_enabled_azure_skus_Valid() const{
    return m_enabled_azure_skus_isValid;
}

QList<OAIReseller> OAICustomerProperties::getResellers() const {
    return m_resellers;
}
void OAICustomerProperties::setResellers(const QList<OAIReseller> &resellers) {
    m_resellers = resellers;
    m_resellers_isSet = true;
}

bool OAICustomerProperties::is_resellers_Set() const{
    return m_resellers_isSet;
}

bool OAICustomerProperties::is_resellers_Valid() const{
    return m_resellers_isValid;
}

bool OAICustomerProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enabled_azure_skus.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_resellers.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICustomerProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
