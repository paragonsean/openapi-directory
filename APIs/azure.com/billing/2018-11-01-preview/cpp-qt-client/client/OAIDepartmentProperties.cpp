/**
 * BillingManagementClient
 * Billing client provides access to billing resources for Azure subscriptions.
 *
 * The version of the OpenAPI document: 2018-11-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDepartmentProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDepartmentProperties::OAIDepartmentProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDepartmentProperties::OAIDepartmentProperties() {
    this->initializeModel();
}

OAIDepartmentProperties::~OAIDepartmentProperties() {}

void OAIDepartmentProperties::initializeModel() {

    m_cost_center_isSet = false;
    m_cost_center_isValid = false;

    m_department_name_isSet = false;
    m_department_name_isValid = false;

    m_enrollment_accounts_isSet = false;
    m_enrollment_accounts_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAIDepartmentProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDepartmentProperties::fromJsonObject(QJsonObject json) {

    m_cost_center_isValid = ::OpenAPI::fromJsonValue(m_cost_center, json[QString("costCenter")]);
    m_cost_center_isSet = !json[QString("costCenter")].isNull() && m_cost_center_isValid;

    m_department_name_isValid = ::OpenAPI::fromJsonValue(m_department_name, json[QString("departmentName")]);
    m_department_name_isSet = !json[QString("departmentName")].isNull() && m_department_name_isValid;

    m_enrollment_accounts_isValid = ::OpenAPI::fromJsonValue(m_enrollment_accounts, json[QString("enrollmentAccounts")]);
    m_enrollment_accounts_isSet = !json[QString("enrollmentAccounts")].isNull() && m_enrollment_accounts_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;
}

QString OAIDepartmentProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDepartmentProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_cost_center_isSet) {
        obj.insert(QString("costCenter"), ::OpenAPI::toJsonValue(m_cost_center));
    }
    if (m_department_name_isSet) {
        obj.insert(QString("departmentName"), ::OpenAPI::toJsonValue(m_department_name));
    }
    if (m_enrollment_accounts.size() > 0) {
        obj.insert(QString("enrollmentAccounts"), ::OpenAPI::toJsonValue(m_enrollment_accounts));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    return obj;
}

QString OAIDepartmentProperties::getCostCenter() const {
    return m_cost_center;
}
void OAIDepartmentProperties::setCostCenter(const QString &cost_center) {
    m_cost_center = cost_center;
    m_cost_center_isSet = true;
}

bool OAIDepartmentProperties::is_cost_center_Set() const{
    return m_cost_center_isSet;
}

bool OAIDepartmentProperties::is_cost_center_Valid() const{
    return m_cost_center_isValid;
}

QString OAIDepartmentProperties::getDepartmentName() const {
    return m_department_name;
}
void OAIDepartmentProperties::setDepartmentName(const QString &department_name) {
    m_department_name = department_name;
    m_department_name_isSet = true;
}

bool OAIDepartmentProperties::is_department_name_Set() const{
    return m_department_name_isSet;
}

bool OAIDepartmentProperties::is_department_name_Valid() const{
    return m_department_name_isValid;
}

QList<OAIEnrollmentAccount> OAIDepartmentProperties::getEnrollmentAccounts() const {
    return m_enrollment_accounts;
}
void OAIDepartmentProperties::setEnrollmentAccounts(const QList<OAIEnrollmentAccount> &enrollment_accounts) {
    m_enrollment_accounts = enrollment_accounts;
    m_enrollment_accounts_isSet = true;
}

bool OAIDepartmentProperties::is_enrollment_accounts_Set() const{
    return m_enrollment_accounts_isSet;
}

bool OAIDepartmentProperties::is_enrollment_accounts_Valid() const{
    return m_enrollment_accounts_isValid;
}

QString OAIDepartmentProperties::getStatus() const {
    return m_status;
}
void OAIDepartmentProperties::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIDepartmentProperties::is_status_Set() const{
    return m_status_isSet;
}

bool OAIDepartmentProperties::is_status_Valid() const{
    return m_status_isValid;
}

bool OAIDepartmentProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cost_center_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_department_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enrollment_accounts.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDepartmentProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
