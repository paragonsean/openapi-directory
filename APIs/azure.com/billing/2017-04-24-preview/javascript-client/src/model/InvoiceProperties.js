/**
 * BillingManagementClient
 * Billing client provides access to billing resources for Azure Web-Direct subscriptions. Other subscription types which were not purchased directly through the Azure web portal are not supported through this preview API.
 *
 * The version of the OpenAPI document: 2017-04-24-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DownloadUrl from './DownloadUrl';

/**
 * The InvoiceProperties model module.
 * @module model/InvoiceProperties
 * @version 2017-04-24-preview
 */
class InvoiceProperties {
    /**
     * Constructs a new <code>InvoiceProperties</code>.
     * The properties of the invoice.
     * @alias module:model/InvoiceProperties
     */
    constructor() { 
        
        InvoiceProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InvoiceProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InvoiceProperties} obj Optional instance to populate.
     * @return {module:model/InvoiceProperties} The populated <code>InvoiceProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InvoiceProperties();

            if (data.hasOwnProperty('billingPeriodIds')) {
                obj['billingPeriodIds'] = ApiClient.convertToType(data['billingPeriodIds'], ['String']);
            }
            if (data.hasOwnProperty('downloadUrl')) {
                obj['downloadUrl'] = DownloadUrl.constructFromObject(data['downloadUrl']);
            }
            if (data.hasOwnProperty('invoicePeriodEndDate')) {
                obj['invoicePeriodEndDate'] = ApiClient.convertToType(data['invoicePeriodEndDate'], 'Date');
            }
            if (data.hasOwnProperty('invoicePeriodStartDate')) {
                obj['invoicePeriodStartDate'] = ApiClient.convertToType(data['invoicePeriodStartDate'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InvoiceProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InvoiceProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['billingPeriodIds'])) {
            throw new Error("Expected the field `billingPeriodIds` to be an array in the JSON data but got " + data['billingPeriodIds']);
        }
        // validate the optional field `downloadUrl`
        if (data['downloadUrl']) { // data not null
          DownloadUrl.validateJSON(data['downloadUrl']);
        }

        return true;
    }


}



/**
 * Array of billing period ids that the invoice is attributed to.
 * @member {Array.<String>} billingPeriodIds
 */
InvoiceProperties.prototype['billingPeriodIds'] = undefined;

/**
 * @member {module:model/DownloadUrl} downloadUrl
 */
InvoiceProperties.prototype['downloadUrl'] = undefined;

/**
 * The end of the date range covered by the invoice.
 * @member {Date} invoicePeriodEndDate
 */
InvoiceProperties.prototype['invoicePeriodEndDate'] = undefined;

/**
 * The start of the date range covered by the invoice.
 * @member {Date} invoicePeriodStartDate
 */
InvoiceProperties.prototype['invoicePeriodStartDate'] = undefined;






export default InvoiceProperties;

