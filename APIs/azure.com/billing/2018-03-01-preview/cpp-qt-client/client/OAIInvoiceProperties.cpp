/**
 * BillingManagementClient
 * Billing client provides access to billing resources for Azure subscriptions.
 *
 * The version of the OpenAPI document: 2018-03-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInvoiceProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInvoiceProperties::OAIInvoiceProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInvoiceProperties::OAIInvoiceProperties() {
    this->initializeModel();
}

OAIInvoiceProperties::~OAIInvoiceProperties() {}

void OAIInvoiceProperties::initializeModel() {

    m_billing_period_ids_isSet = false;
    m_billing_period_ids_isValid = false;

    m_download_url_isSet = false;
    m_download_url_isValid = false;

    m_invoice_period_end_date_isSet = false;
    m_invoice_period_end_date_isValid = false;

    m_invoice_period_start_date_isSet = false;
    m_invoice_period_start_date_isValid = false;
}

void OAIInvoiceProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIInvoiceProperties::fromJsonObject(QJsonObject json) {

    m_billing_period_ids_isValid = ::OpenAPI::fromJsonValue(m_billing_period_ids, json[QString("billingPeriodIds")]);
    m_billing_period_ids_isSet = !json[QString("billingPeriodIds")].isNull() && m_billing_period_ids_isValid;

    m_download_url_isValid = ::OpenAPI::fromJsonValue(m_download_url, json[QString("downloadUrl")]);
    m_download_url_isSet = !json[QString("downloadUrl")].isNull() && m_download_url_isValid;

    m_invoice_period_end_date_isValid = ::OpenAPI::fromJsonValue(m_invoice_period_end_date, json[QString("invoicePeriodEndDate")]);
    m_invoice_period_end_date_isSet = !json[QString("invoicePeriodEndDate")].isNull() && m_invoice_period_end_date_isValid;

    m_invoice_period_start_date_isValid = ::OpenAPI::fromJsonValue(m_invoice_period_start_date, json[QString("invoicePeriodStartDate")]);
    m_invoice_period_start_date_isSet = !json[QString("invoicePeriodStartDate")].isNull() && m_invoice_period_start_date_isValid;
}

QString OAIInvoiceProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIInvoiceProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_billing_period_ids.size() > 0) {
        obj.insert(QString("billingPeriodIds"), ::OpenAPI::toJsonValue(m_billing_period_ids));
    }
    if (m_download_url.isSet()) {
        obj.insert(QString("downloadUrl"), ::OpenAPI::toJsonValue(m_download_url));
    }
    if (m_invoice_period_end_date_isSet) {
        obj.insert(QString("invoicePeriodEndDate"), ::OpenAPI::toJsonValue(m_invoice_period_end_date));
    }
    if (m_invoice_period_start_date_isSet) {
        obj.insert(QString("invoicePeriodStartDate"), ::OpenAPI::toJsonValue(m_invoice_period_start_date));
    }
    return obj;
}

QList<QString> OAIInvoiceProperties::getBillingPeriodIds() const {
    return m_billing_period_ids;
}
void OAIInvoiceProperties::setBillingPeriodIds(const QList<QString> &billing_period_ids) {
    m_billing_period_ids = billing_period_ids;
    m_billing_period_ids_isSet = true;
}

bool OAIInvoiceProperties::is_billing_period_ids_Set() const{
    return m_billing_period_ids_isSet;
}

bool OAIInvoiceProperties::is_billing_period_ids_Valid() const{
    return m_billing_period_ids_isValid;
}

OAIDownloadUrl OAIInvoiceProperties::getDownloadUrl() const {
    return m_download_url;
}
void OAIInvoiceProperties::setDownloadUrl(const OAIDownloadUrl &download_url) {
    m_download_url = download_url;
    m_download_url_isSet = true;
}

bool OAIInvoiceProperties::is_download_url_Set() const{
    return m_download_url_isSet;
}

bool OAIInvoiceProperties::is_download_url_Valid() const{
    return m_download_url_isValid;
}

QDate OAIInvoiceProperties::getInvoicePeriodEndDate() const {
    return m_invoice_period_end_date;
}
void OAIInvoiceProperties::setInvoicePeriodEndDate(const QDate &invoice_period_end_date) {
    m_invoice_period_end_date = invoice_period_end_date;
    m_invoice_period_end_date_isSet = true;
}

bool OAIInvoiceProperties::is_invoice_period_end_date_Set() const{
    return m_invoice_period_end_date_isSet;
}

bool OAIInvoiceProperties::is_invoice_period_end_date_Valid() const{
    return m_invoice_period_end_date_isValid;
}

QDate OAIInvoiceProperties::getInvoicePeriodStartDate() const {
    return m_invoice_period_start_date;
}
void OAIInvoiceProperties::setInvoicePeriodStartDate(const QDate &invoice_period_start_date) {
    m_invoice_period_start_date = invoice_period_start_date;
    m_invoice_period_start_date_isSet = true;
}

bool OAIInvoiceProperties::is_invoice_period_start_date_Set() const{
    return m_invoice_period_start_date_isSet;
}

bool OAIInvoiceProperties::is_invoice_period_start_date_Valid() const{
    return m_invoice_period_start_date_isValid;
}

bool OAIInvoiceProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_billing_period_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_download_url.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_invoice_period_end_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_invoice_period_start_date_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIInvoiceProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
