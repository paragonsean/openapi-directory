# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class InitiateTransferProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, recipient_email_id: str=None, reseller_id: str=None):
        """InitiateTransferProperties - a model defined in OpenAPI

        :param recipient_email_id: The recipient_email_id of this InitiateTransferProperties.
        :param reseller_id: The reseller_id of this InitiateTransferProperties.
        """
        self.openapi_types = {
            'recipient_email_id': str,
            'reseller_id': str
        }

        self.attribute_map = {
            'recipient_email_id': 'recipientEmailId',
            'reseller_id': 'resellerId'
        }

        self._recipient_email_id = recipient_email_id
        self._reseller_id = reseller_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InitiateTransferProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InitiateTransferProperties of this InitiateTransferProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def recipient_email_id(self):
        """Gets the recipient_email_id of this InitiateTransferProperties.

        Email Id of recipient for transfer.

        :return: The recipient_email_id of this InitiateTransferProperties.
        :rtype: str
        """
        return self._recipient_email_id

    @recipient_email_id.setter
    def recipient_email_id(self, recipient_email_id):
        """Sets the recipient_email_id of this InitiateTransferProperties.

        Email Id of recipient for transfer.

        :param recipient_email_id: The recipient_email_id of this InitiateTransferProperties.
        :type recipient_email_id: str
        """

        self._recipient_email_id = recipient_email_id

    @property
    def reseller_id(self):
        """Gets the reseller_id of this InitiateTransferProperties.

        Optional reseller Id for transfer.

        :return: The reseller_id of this InitiateTransferProperties.
        :rtype: str
        """
        return self._reseller_id

    @reseller_id.setter
    def reseller_id(self, reseller_id):
        """Sets the reseller_id of this InitiateTransferProperties.

        Optional reseller Id for transfer.

        :param reseller_id: The reseller_id of this InitiateTransferProperties.
        :type reseller_id: str
        """

        self._reseller_id = reseller_id
