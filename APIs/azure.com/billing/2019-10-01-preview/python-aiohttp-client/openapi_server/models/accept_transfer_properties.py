# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.product_details import ProductDetails
from openapi_server import util


class AcceptTransferProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, product_details: List[ProductDetails]=None):
        """AcceptTransferProperties - a model defined in OpenAPI

        :param product_details: The product_details of this AcceptTransferProperties.
        """
        self.openapi_types = {
            'product_details': List[ProductDetails]
        }

        self.attribute_map = {
            'product_details': 'productDetails'
        }

        self._product_details = product_details

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AcceptTransferProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AcceptTransferProperties of this AcceptTransferProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def product_details(self):
        """Gets the product_details of this AcceptTransferProperties.

        Request parameters to accept transfer.

        :return: The product_details of this AcceptTransferProperties.
        :rtype: List[ProductDetails]
        """
        return self._product_details

    @product_details.setter
    def product_details(self, product_details):
        """Sets the product_details of this AcceptTransferProperties.

        Request parameters to accept transfer.

        :param product_details: The product_details of this AcceptTransferProperties.
        :type product_details: List[ProductDetails]
        """

        self._product_details = product_details
