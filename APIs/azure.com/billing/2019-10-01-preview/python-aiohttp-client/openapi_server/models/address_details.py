# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AddressDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, address_line1: str=None, address_line2: str=None, address_line3: str=None, city: str=None, company_name: str=None, country: str=None, first_name: str=None, last_name: str=None, postal_code: str=None, region: str=None):
        """AddressDetails - a model defined in OpenAPI

        :param address_line1: The address_line1 of this AddressDetails.
        :param address_line2: The address_line2 of this AddressDetails.
        :param address_line3: The address_line3 of this AddressDetails.
        :param city: The city of this AddressDetails.
        :param company_name: The company_name of this AddressDetails.
        :param country: The country of this AddressDetails.
        :param first_name: The first_name of this AddressDetails.
        :param last_name: The last_name of this AddressDetails.
        :param postal_code: The postal_code of this AddressDetails.
        :param region: The region of this AddressDetails.
        """
        self.openapi_types = {
            'address_line1': str,
            'address_line2': str,
            'address_line3': str,
            'city': str,
            'company_name': str,
            'country': str,
            'first_name': str,
            'last_name': str,
            'postal_code': str,
            'region': str
        }

        self.attribute_map = {
            'address_line1': 'addressLine1',
            'address_line2': 'addressLine2',
            'address_line3': 'addressLine3',
            'city': 'city',
            'company_name': 'companyName',
            'country': 'country',
            'first_name': 'firstName',
            'last_name': 'lastName',
            'postal_code': 'postalCode',
            'region': 'region'
        }

        self._address_line1 = address_line1
        self._address_line2 = address_line2
        self._address_line3 = address_line3
        self._city = city
        self._company_name = company_name
        self._country = country
        self._first_name = first_name
        self._last_name = last_name
        self._postal_code = postal_code
        self._region = region

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AddressDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AddressDetails of this AddressDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def address_line1(self):
        """Gets the address_line1 of this AddressDetails.

        Address Line1.

        :return: The address_line1 of this AddressDetails.
        :rtype: str
        """
        return self._address_line1

    @address_line1.setter
    def address_line1(self, address_line1):
        """Sets the address_line1 of this AddressDetails.

        Address Line1.

        :param address_line1: The address_line1 of this AddressDetails.
        :type address_line1: str
        """

        self._address_line1 = address_line1

    @property
    def address_line2(self):
        """Gets the address_line2 of this AddressDetails.

        Address Line2.

        :return: The address_line2 of this AddressDetails.
        :rtype: str
        """
        return self._address_line2

    @address_line2.setter
    def address_line2(self, address_line2):
        """Sets the address_line2 of this AddressDetails.

        Address Line2.

        :param address_line2: The address_line2 of this AddressDetails.
        :type address_line2: str
        """

        self._address_line2 = address_line2

    @property
    def address_line3(self):
        """Gets the address_line3 of this AddressDetails.

        Address Line3.

        :return: The address_line3 of this AddressDetails.
        :rtype: str
        """
        return self._address_line3

    @address_line3.setter
    def address_line3(self, address_line3):
        """Sets the address_line3 of this AddressDetails.

        Address Line3.

        :param address_line3: The address_line3 of this AddressDetails.
        :type address_line3: str
        """

        self._address_line3 = address_line3

    @property
    def city(self):
        """Gets the city of this AddressDetails.

        Address City.

        :return: The city of this AddressDetails.
        :rtype: str
        """
        return self._city

    @city.setter
    def city(self, city):
        """Sets the city of this AddressDetails.

        Address City.

        :param city: The city of this AddressDetails.
        :type city: str
        """

        self._city = city

    @property
    def company_name(self):
        """Gets the company_name of this AddressDetails.

        Company Name.

        :return: The company_name of this AddressDetails.
        :rtype: str
        """
        return self._company_name

    @company_name.setter
    def company_name(self, company_name):
        """Sets the company_name of this AddressDetails.

        Company Name.

        :param company_name: The company_name of this AddressDetails.
        :type company_name: str
        """

        self._company_name = company_name

    @property
    def country(self):
        """Gets the country of this AddressDetails.

        Country code uses ISO2, 2-digit format.

        :return: The country of this AddressDetails.
        :rtype: str
        """
        return self._country

    @country.setter
    def country(self, country):
        """Sets the country of this AddressDetails.

        Country code uses ISO2, 2-digit format.

        :param country: The country of this AddressDetails.
        :type country: str
        """

        self._country = country

    @property
    def first_name(self):
        """Gets the first_name of this AddressDetails.

        First Name.

        :return: The first_name of this AddressDetails.
        :rtype: str
        """
        return self._first_name

    @first_name.setter
    def first_name(self, first_name):
        """Sets the first_name of this AddressDetails.

        First Name.

        :param first_name: The first_name of this AddressDetails.
        :type first_name: str
        """

        self._first_name = first_name

    @property
    def last_name(self):
        """Gets the last_name of this AddressDetails.

        Last Name.

        :return: The last_name of this AddressDetails.
        :rtype: str
        """
        return self._last_name

    @last_name.setter
    def last_name(self, last_name):
        """Sets the last_name of this AddressDetails.

        Last Name.

        :param last_name: The last_name of this AddressDetails.
        :type last_name: str
        """

        self._last_name = last_name

    @property
    def postal_code(self):
        """Gets the postal_code of this AddressDetails.

        Address Postal Code.

        :return: The postal_code of this AddressDetails.
        :rtype: str
        """
        return self._postal_code

    @postal_code.setter
    def postal_code(self, postal_code):
        """Sets the postal_code of this AddressDetails.

        Address Postal Code.

        :param postal_code: The postal_code of this AddressDetails.
        :type postal_code: str
        """

        self._postal_code = postal_code

    @property
    def region(self):
        """Gets the region of this AddressDetails.

        Address Region.

        :return: The region of this AddressDetails.
        :rtype: str
        """
        return self._region

    @region.setter
    def region(self, region):
        """Sets the region of this AddressDetails.

        Address Region.

        :param region: The region of this AddressDetails.
        :type region: str
        """

        self._region = region
