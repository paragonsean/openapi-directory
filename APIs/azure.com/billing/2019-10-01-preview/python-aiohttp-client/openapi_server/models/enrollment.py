# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.enrollment_policies import EnrollmentPolicies
from openapi_server import util


class Enrollment(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, billing_cycle: str=None, channel: str=None, country_code: str=None, currency: str=None, end_date: datetime=None, language: str=None, policies: EnrollmentPolicies=None, start_date: datetime=None, status: str=None):
        """Enrollment - a model defined in OpenAPI

        :param billing_cycle: The billing_cycle of this Enrollment.
        :param channel: The channel of this Enrollment.
        :param country_code: The country_code of this Enrollment.
        :param currency: The currency of this Enrollment.
        :param end_date: The end_date of this Enrollment.
        :param language: The language of this Enrollment.
        :param policies: The policies of this Enrollment.
        :param start_date: The start_date of this Enrollment.
        :param status: The status of this Enrollment.
        """
        self.openapi_types = {
            'billing_cycle': str,
            'channel': str,
            'country_code': str,
            'currency': str,
            'end_date': datetime,
            'language': str,
            'policies': EnrollmentPolicies,
            'start_date': datetime,
            'status': str
        }

        self.attribute_map = {
            'billing_cycle': 'billingCycle',
            'channel': 'channel',
            'country_code': 'countryCode',
            'currency': 'currency',
            'end_date': 'endDate',
            'language': 'language',
            'policies': 'policies',
            'start_date': 'startDate',
            'status': 'status'
        }

        self._billing_cycle = billing_cycle
        self._channel = channel
        self._country_code = country_code
        self._currency = currency
        self._end_date = end_date
        self._language = language
        self._policies = policies
        self._start_date = start_date
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Enrollment':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Enrollment of this Enrollment.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def billing_cycle(self):
        """Gets the billing_cycle of this Enrollment.

        Enrollment billing cycle

        :return: The billing_cycle of this Enrollment.
        :rtype: str
        """
        return self._billing_cycle

    @billing_cycle.setter
    def billing_cycle(self, billing_cycle):
        """Sets the billing_cycle of this Enrollment.

        Enrollment billing cycle

        :param billing_cycle: The billing_cycle of this Enrollment.
        :type billing_cycle: str
        """

        self._billing_cycle = billing_cycle

    @property
    def channel(self):
        """Gets the channel of this Enrollment.

        The channel for Enrollment

        :return: The channel of this Enrollment.
        :rtype: str
        """
        return self._channel

    @channel.setter
    def channel(self, channel):
        """Sets the channel of this Enrollment.

        The channel for Enrollment

        :param channel: The channel of this Enrollment.
        :type channel: str
        """

        self._channel = channel

    @property
    def country_code(self):
        """Gets the country_code of this Enrollment.

        The countryCode for Enrollment

        :return: The country_code of this Enrollment.
        :rtype: str
        """
        return self._country_code

    @country_code.setter
    def country_code(self, country_code):
        """Sets the country_code of this Enrollment.

        The countryCode for Enrollment

        :param country_code: The country_code of this Enrollment.
        :type country_code: str
        """

        self._country_code = country_code

    @property
    def currency(self):
        """Gets the currency of this Enrollment.

        The currency associated with enrollment

        :return: The currency of this Enrollment.
        :rtype: str
        """
        return self._currency

    @currency.setter
    def currency(self, currency):
        """Sets the currency of this Enrollment.

        The currency associated with enrollment

        :param currency: The currency of this Enrollment.
        :type currency: str
        """

        self._currency = currency

    @property
    def end_date(self):
        """Gets the end_date of this Enrollment.

        Enrollment End Date

        :return: The end_date of this Enrollment.
        :rtype: datetime
        """
        return self._end_date

    @end_date.setter
    def end_date(self, end_date):
        """Sets the end_date of this Enrollment.

        Enrollment End Date

        :param end_date: The end_date of this Enrollment.
        :type end_date: datetime
        """

        self._end_date = end_date

    @property
    def language(self):
        """Gets the language of this Enrollment.

        The language for Enrollment

        :return: The language of this Enrollment.
        :rtype: str
        """
        return self._language

    @language.setter
    def language(self, language):
        """Sets the language of this Enrollment.

        The language for Enrollment

        :param language: The language of this Enrollment.
        :type language: str
        """

        self._language = language

    @property
    def policies(self):
        """Gets the policies of this Enrollment.


        :return: The policies of this Enrollment.
        :rtype: EnrollmentPolicies
        """
        return self._policies

    @policies.setter
    def policies(self, policies):
        """Sets the policies of this Enrollment.


        :param policies: The policies of this Enrollment.
        :type policies: EnrollmentPolicies
        """

        self._policies = policies

    @property
    def start_date(self):
        """Gets the start_date of this Enrollment.

        Enrollment Start Date

        :return: The start_date of this Enrollment.
        :rtype: datetime
        """
        return self._start_date

    @start_date.setter
    def start_date(self, start_date):
        """Sets the start_date of this Enrollment.

        Enrollment Start Date

        :param start_date: The start_date of this Enrollment.
        :type start_date: datetime
        """

        self._start_date = start_date

    @property
    def status(self):
        """Gets the status of this Enrollment.

        Enrollment status

        :return: The status of this Enrollment.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this Enrollment.

        Enrollment status

        :param status: The status of this Enrollment.
        :type status: str
        """

        self._status = status
