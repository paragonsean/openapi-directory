# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BillingRoleAssignmentProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_by_principal_id: str=None, created_by_principal_tenant_id: str=None, created_on: str=None, name: str=None, principal_id: str=None, role_definition_name: str=None, scope: str=None):
        """BillingRoleAssignmentProperties - a model defined in OpenAPI

        :param created_by_principal_id: The created_by_principal_id of this BillingRoleAssignmentProperties.
        :param created_by_principal_tenant_id: The created_by_principal_tenant_id of this BillingRoleAssignmentProperties.
        :param created_on: The created_on of this BillingRoleAssignmentProperties.
        :param name: The name of this BillingRoleAssignmentProperties.
        :param principal_id: The principal_id of this BillingRoleAssignmentProperties.
        :param role_definition_name: The role_definition_name of this BillingRoleAssignmentProperties.
        :param scope: The scope of this BillingRoleAssignmentProperties.
        """
        self.openapi_types = {
            'created_by_principal_id': str,
            'created_by_principal_tenant_id': str,
            'created_on': str,
            'name': str,
            'principal_id': str,
            'role_definition_name': str,
            'scope': str
        }

        self.attribute_map = {
            'created_by_principal_id': 'createdByPrincipalId',
            'created_by_principal_tenant_id': 'createdByPrincipalTenantId',
            'created_on': 'createdOn',
            'name': 'name',
            'principal_id': 'principalId',
            'role_definition_name': 'roleDefinitionName',
            'scope': 'scope'
        }

        self._created_by_principal_id = created_by_principal_id
        self._created_by_principal_tenant_id = created_by_principal_tenant_id
        self._created_on = created_on
        self._name = name
        self._principal_id = principal_id
        self._role_definition_name = role_definition_name
        self._scope = scope

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BillingRoleAssignmentProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BillingRoleAssignmentProperties of this BillingRoleAssignmentProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_by_principal_id(self):
        """Gets the created_by_principal_id of this BillingRoleAssignmentProperties.

        the creator's principal Id

        :return: The created_by_principal_id of this BillingRoleAssignmentProperties.
        :rtype: str
        """
        return self._created_by_principal_id

    @created_by_principal_id.setter
    def created_by_principal_id(self, created_by_principal_id):
        """Sets the created_by_principal_id of this BillingRoleAssignmentProperties.

        the creator's principal Id

        :param created_by_principal_id: The created_by_principal_id of this BillingRoleAssignmentProperties.
        :type created_by_principal_id: str
        """

        self._created_by_principal_id = created_by_principal_id

    @property
    def created_by_principal_tenant_id(self):
        """Gets the created_by_principal_tenant_id of this BillingRoleAssignmentProperties.

        the creator's tenant Id

        :return: The created_by_principal_tenant_id of this BillingRoleAssignmentProperties.
        :rtype: str
        """
        return self._created_by_principal_tenant_id

    @created_by_principal_tenant_id.setter
    def created_by_principal_tenant_id(self, created_by_principal_tenant_id):
        """Sets the created_by_principal_tenant_id of this BillingRoleAssignmentProperties.

        the creator's tenant Id

        :param created_by_principal_tenant_id: The created_by_principal_tenant_id of this BillingRoleAssignmentProperties.
        :type created_by_principal_tenant_id: str
        """

        self._created_by_principal_tenant_id = created_by_principal_tenant_id

    @property
    def created_on(self):
        """Gets the created_on of this BillingRoleAssignmentProperties.

        the date the role assignment is created

        :return: The created_on of this BillingRoleAssignmentProperties.
        :rtype: str
        """
        return self._created_on

    @created_on.setter
    def created_on(self, created_on):
        """Sets the created_on of this BillingRoleAssignmentProperties.

        the date the role assignment is created

        :param created_on: The created_on of this BillingRoleAssignmentProperties.
        :type created_on: str
        """

        self._created_on = created_on

    @property
    def name(self):
        """Gets the name of this BillingRoleAssignmentProperties.

        the name of the role assignment

        :return: The name of this BillingRoleAssignmentProperties.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this BillingRoleAssignmentProperties.

        the name of the role assignment

        :param name: The name of this BillingRoleAssignmentProperties.
        :type name: str
        """

        self._name = name

    @property
    def principal_id(self):
        """Gets the principal_id of this BillingRoleAssignmentProperties.

        The user's principal id that the role gets assigned to

        :return: The principal_id of this BillingRoleAssignmentProperties.
        :rtype: str
        """
        return self._principal_id

    @principal_id.setter
    def principal_id(self, principal_id):
        """Sets the principal_id of this BillingRoleAssignmentProperties.

        The user's principal id that the role gets assigned to

        :param principal_id: The principal_id of this BillingRoleAssignmentProperties.
        :type principal_id: str
        """

        self._principal_id = principal_id

    @property
    def role_definition_name(self):
        """Gets the role_definition_name of this BillingRoleAssignmentProperties.

        The role definition id

        :return: The role_definition_name of this BillingRoleAssignmentProperties.
        :rtype: str
        """
        return self._role_definition_name

    @role_definition_name.setter
    def role_definition_name(self, role_definition_name):
        """Sets the role_definition_name of this BillingRoleAssignmentProperties.

        The role definition id

        :param role_definition_name: The role_definition_name of this BillingRoleAssignmentProperties.
        :type role_definition_name: str
        """

        self._role_definition_name = role_definition_name

    @property
    def scope(self):
        """Gets the scope of this BillingRoleAssignmentProperties.

        The scope the role get assigned to

        :return: The scope of this BillingRoleAssignmentProperties.
        :rtype: str
        """
        return self._scope

    @scope.setter
    def scope(self, scope):
        """Sets the scope of this BillingRoleAssignmentProperties.

        The scope the role get assigned to

        :param scope: The scope of this BillingRoleAssignmentProperties.
        :type scope: str
        """

        self._scope = scope
