# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.amount import Amount
from openapi_server import util


class TransactionProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, billing_profile_display_name: str=None, billing_profile_id: str=None, customer_display_name: str=None, customer_id: str=None, _date: datetime=None, invoice: str=None, invoice_section_display_name: str=None, invoice_section_id: str=None, kind: str=None, order_id: str=None, order_name: str=None, product_description: str=None, product_family: str=None, product_type: str=None, product_type_id: str=None, quantity: int=None, subscription_id: str=None, subscription_name: str=None, transaction_amount: Amount=None, transaction_type: str=None):
        """TransactionProperties - a model defined in OpenAPI

        :param billing_profile_display_name: The billing_profile_display_name of this TransactionProperties.
        :param billing_profile_id: The billing_profile_id of this TransactionProperties.
        :param customer_display_name: The customer_display_name of this TransactionProperties.
        :param customer_id: The customer_id of this TransactionProperties.
        :param _date: The _date of this TransactionProperties.
        :param invoice: The invoice of this TransactionProperties.
        :param invoice_section_display_name: The invoice_section_display_name of this TransactionProperties.
        :param invoice_section_id: The invoice_section_id of this TransactionProperties.
        :param kind: The kind of this TransactionProperties.
        :param order_id: The order_id of this TransactionProperties.
        :param order_name: The order_name of this TransactionProperties.
        :param product_description: The product_description of this TransactionProperties.
        :param product_family: The product_family of this TransactionProperties.
        :param product_type: The product_type of this TransactionProperties.
        :param product_type_id: The product_type_id of this TransactionProperties.
        :param quantity: The quantity of this TransactionProperties.
        :param subscription_id: The subscription_id of this TransactionProperties.
        :param subscription_name: The subscription_name of this TransactionProperties.
        :param transaction_amount: The transaction_amount of this TransactionProperties.
        :param transaction_type: The transaction_type of this TransactionProperties.
        """
        self.openapi_types = {
            'billing_profile_display_name': str,
            'billing_profile_id': str,
            'customer_display_name': str,
            'customer_id': str,
            '_date': datetime,
            'invoice': str,
            'invoice_section_display_name': str,
            'invoice_section_id': str,
            'kind': str,
            'order_id': str,
            'order_name': str,
            'product_description': str,
            'product_family': str,
            'product_type': str,
            'product_type_id': str,
            'quantity': int,
            'subscription_id': str,
            'subscription_name': str,
            'transaction_amount': Amount,
            'transaction_type': str
        }

        self.attribute_map = {
            'billing_profile_display_name': 'billingProfileDisplayName',
            'billing_profile_id': 'billingProfileId',
            'customer_display_name': 'customerDisplayName',
            'customer_id': 'customerId',
            '_date': 'date',
            'invoice': 'invoice',
            'invoice_section_display_name': 'invoiceSectionDisplayName',
            'invoice_section_id': 'invoiceSectionId',
            'kind': 'kind',
            'order_id': 'orderId',
            'order_name': 'orderName',
            'product_description': 'productDescription',
            'product_family': 'productFamily',
            'product_type': 'productType',
            'product_type_id': 'productTypeId',
            'quantity': 'quantity',
            'subscription_id': 'subscriptionId',
            'subscription_name': 'subscriptionName',
            'transaction_amount': 'transactionAmount',
            'transaction_type': 'transactionType'
        }

        self._billing_profile_display_name = billing_profile_display_name
        self._billing_profile_id = billing_profile_id
        self._customer_display_name = customer_display_name
        self._customer_id = customer_id
        self.__date = _date
        self._invoice = invoice
        self._invoice_section_display_name = invoice_section_display_name
        self._invoice_section_id = invoice_section_id
        self._kind = kind
        self._order_id = order_id
        self._order_name = order_name
        self._product_description = product_description
        self._product_family = product_family
        self._product_type = product_type
        self._product_type_id = product_type_id
        self._quantity = quantity
        self._subscription_id = subscription_id
        self._subscription_name = subscription_name
        self._transaction_amount = transaction_amount
        self._transaction_type = transaction_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TransactionProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TransactionProperties of this TransactionProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def billing_profile_display_name(self):
        """Gets the billing_profile_display_name of this TransactionProperties.

        Billing Profile display name to which this product belongs.

        :return: The billing_profile_display_name of this TransactionProperties.
        :rtype: str
        """
        return self._billing_profile_display_name

    @billing_profile_display_name.setter
    def billing_profile_display_name(self, billing_profile_display_name):
        """Sets the billing_profile_display_name of this TransactionProperties.

        Billing Profile display name to which this product belongs.

        :param billing_profile_display_name: The billing_profile_display_name of this TransactionProperties.
        :type billing_profile_display_name: str
        """

        self._billing_profile_display_name = billing_profile_display_name

    @property
    def billing_profile_id(self):
        """Gets the billing_profile_id of this TransactionProperties.

        Billing Profile id to which this product belongs.

        :return: The billing_profile_id of this TransactionProperties.
        :rtype: str
        """
        return self._billing_profile_id

    @billing_profile_id.setter
    def billing_profile_id(self, billing_profile_id):
        """Sets the billing_profile_id of this TransactionProperties.

        Billing Profile id to which this product belongs.

        :param billing_profile_id: The billing_profile_id of this TransactionProperties.
        :type billing_profile_id: str
        """

        self._billing_profile_id = billing_profile_id

    @property
    def customer_display_name(self):
        """Gets the customer_display_name of this TransactionProperties.

        Display name of customer to which this product belongs.

        :return: The customer_display_name of this TransactionProperties.
        :rtype: str
        """
        return self._customer_display_name

    @customer_display_name.setter
    def customer_display_name(self, customer_display_name):
        """Sets the customer_display_name of this TransactionProperties.

        Display name of customer to which this product belongs.

        :param customer_display_name: The customer_display_name of this TransactionProperties.
        :type customer_display_name: str
        """

        self._customer_display_name = customer_display_name

    @property
    def customer_id(self):
        """Gets the customer_id of this TransactionProperties.

        Customer id to which this product belongs.

        :return: The customer_id of this TransactionProperties.
        :rtype: str
        """
        return self._customer_id

    @customer_id.setter
    def customer_id(self, customer_id):
        """Sets the customer_id of this TransactionProperties.

        Customer id to which this product belongs.

        :param customer_id: The customer_id of this TransactionProperties.
        :type customer_id: str
        """

        self._customer_id = customer_id

    @property
    def _date(self):
        """Gets the _date of this TransactionProperties.

        The date of reservation transaction.

        :return: The _date of this TransactionProperties.
        :rtype: datetime
        """
        return self.__date

    @_date.setter
    def _date(self, _date):
        """Sets the _date of this TransactionProperties.

        The date of reservation transaction.

        :param _date: The _date of this TransactionProperties.
        :type _date: datetime
        """

        self.__date = _date

    @property
    def invoice(self):
        """Gets the invoice of this TransactionProperties.

        Invoice number or 'pending' if not invoiced.

        :return: The invoice of this TransactionProperties.
        :rtype: str
        """
        return self._invoice

    @invoice.setter
    def invoice(self, invoice):
        """Sets the invoice of this TransactionProperties.

        Invoice number or 'pending' if not invoiced.

        :param invoice: The invoice of this TransactionProperties.
        :type invoice: str
        """

        self._invoice = invoice

    @property
    def invoice_section_display_name(self):
        """Gets the invoice_section_display_name of this TransactionProperties.

        Invoice section display name to which this product belongs.

        :return: The invoice_section_display_name of this TransactionProperties.
        :rtype: str
        """
        return self._invoice_section_display_name

    @invoice_section_display_name.setter
    def invoice_section_display_name(self, invoice_section_display_name):
        """Sets the invoice_section_display_name of this TransactionProperties.

        Invoice section display name to which this product belongs.

        :param invoice_section_display_name: The invoice_section_display_name of this TransactionProperties.
        :type invoice_section_display_name: str
        """

        self._invoice_section_display_name = invoice_section_display_name

    @property
    def invoice_section_id(self):
        """Gets the invoice_section_id of this TransactionProperties.

        Invoice section id to which this product belongs.

        :return: The invoice_section_id of this TransactionProperties.
        :rtype: str
        """
        return self._invoice_section_id

    @invoice_section_id.setter
    def invoice_section_id(self, invoice_section_id):
        """Sets the invoice_section_id of this TransactionProperties.

        Invoice section id to which this product belongs.

        :param invoice_section_id: The invoice_section_id of this TransactionProperties.
        :type invoice_section_id: str
        """

        self._invoice_section_id = invoice_section_id

    @property
    def kind(self):
        """Gets the kind of this TransactionProperties.

        The kind of transaction. Choices are all and reservation.

        :return: The kind of this TransactionProperties.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this TransactionProperties.

        The kind of transaction. Choices are all and reservation.

        :param kind: The kind of this TransactionProperties.
        :type kind: str
        """
        allowed_values = ["all", "reservation"]  # noqa: E501
        if kind not in allowed_values:
            raise ValueError(
                "Invalid value for `kind` ({0}), must be one of {1}"
                .format(kind, allowed_values)
            )

        self._kind = kind

    @property
    def order_id(self):
        """Gets the order_id of this TransactionProperties.

        The reservation order id.

        :return: The order_id of this TransactionProperties.
        :rtype: str
        """
        return self._order_id

    @order_id.setter
    def order_id(self, order_id):
        """Sets the order_id of this TransactionProperties.

        The reservation order id.

        :param order_id: The order_id of this TransactionProperties.
        :type order_id: str
        """

        self._order_id = order_id

    @property
    def order_name(self):
        """Gets the order_name of this TransactionProperties.

        The reservation order name.

        :return: The order_name of this TransactionProperties.
        :rtype: str
        """
        return self._order_name

    @order_name.setter
    def order_name(self, order_name):
        """Sets the order_name of this TransactionProperties.

        The reservation order name.

        :param order_name: The order_name of this TransactionProperties.
        :type order_name: str
        """

        self._order_name = order_name

    @property
    def product_description(self):
        """Gets the product_description of this TransactionProperties.

        Product description.

        :return: The product_description of this TransactionProperties.
        :rtype: str
        """
        return self._product_description

    @product_description.setter
    def product_description(self, product_description):
        """Sets the product_description of this TransactionProperties.

        Product description.

        :param product_description: The product_description of this TransactionProperties.
        :type product_description: str
        """

        self._product_description = product_description

    @property
    def product_family(self):
        """Gets the product_family of this TransactionProperties.

        The product family.

        :return: The product_family of this TransactionProperties.
        :rtype: str
        """
        return self._product_family

    @product_family.setter
    def product_family(self, product_family):
        """Sets the product_family of this TransactionProperties.

        The product family.

        :param product_family: The product_family of this TransactionProperties.
        :type product_family: str
        """

        self._product_family = product_family

    @property
    def product_type(self):
        """Gets the product_type of this TransactionProperties.

        The type of product.

        :return: The product_type of this TransactionProperties.
        :rtype: str
        """
        return self._product_type

    @product_type.setter
    def product_type(self, product_type):
        """Sets the product_type of this TransactionProperties.

        The type of product.

        :param product_type: The product_type of this TransactionProperties.
        :type product_type: str
        """

        self._product_type = product_type

    @property
    def product_type_id(self):
        """Gets the product_type_id of this TransactionProperties.

        The product type id.

        :return: The product_type_id of this TransactionProperties.
        :rtype: str
        """
        return self._product_type_id

    @product_type_id.setter
    def product_type_id(self, product_type_id):
        """Sets the product_type_id of this TransactionProperties.

        The product type id.

        :param product_type_id: The product_type_id of this TransactionProperties.
        :type product_type_id: str
        """

        self._product_type_id = product_type_id

    @property
    def quantity(self):
        """Gets the quantity of this TransactionProperties.

        Purchase quantity.

        :return: The quantity of this TransactionProperties.
        :rtype: int
        """
        return self._quantity

    @quantity.setter
    def quantity(self, quantity):
        """Sets the quantity of this TransactionProperties.

        Purchase quantity.

        :param quantity: The quantity of this TransactionProperties.
        :type quantity: int
        """

        self._quantity = quantity

    @property
    def subscription_id(self):
        """Gets the subscription_id of this TransactionProperties.

        The subscription id.

        :return: The subscription_id of this TransactionProperties.
        :rtype: str
        """
        return self._subscription_id

    @subscription_id.setter
    def subscription_id(self, subscription_id):
        """Sets the subscription_id of this TransactionProperties.

        The subscription id.

        :param subscription_id: The subscription_id of this TransactionProperties.
        :type subscription_id: str
        """

        self._subscription_id = subscription_id

    @property
    def subscription_name(self):
        """Gets the subscription_name of this TransactionProperties.

        The subscription name.

        :return: The subscription_name of this TransactionProperties.
        :rtype: str
        """
        return self._subscription_name

    @subscription_name.setter
    def subscription_name(self, subscription_name):
        """Sets the subscription_name of this TransactionProperties.

        The subscription name.

        :param subscription_name: The subscription_name of this TransactionProperties.
        :type subscription_name: str
        """

        self._subscription_name = subscription_name

    @property
    def transaction_amount(self):
        """Gets the transaction_amount of this TransactionProperties.


        :return: The transaction_amount of this TransactionProperties.
        :rtype: Amount
        """
        return self._transaction_amount

    @transaction_amount.setter
    def transaction_amount(self, transaction_amount):
        """Sets the transaction_amount of this TransactionProperties.


        :param transaction_amount: The transaction_amount of this TransactionProperties.
        :type transaction_amount: Amount
        """

        self._transaction_amount = transaction_amount

    @property
    def transaction_type(self):
        """Gets the transaction_type of this TransactionProperties.

        Transaction types.

        :return: The transaction_type of this TransactionProperties.
        :rtype: str
        """
        return self._transaction_type

    @transaction_type.setter
    def transaction_type(self, transaction_type):
        """Sets the transaction_type of this TransactionProperties.

        Transaction types.

        :param transaction_type: The transaction_type of this TransactionProperties.
        :type transaction_type: str
        """
        allowed_values = ["Purchase", "Usage Charge"]  # noqa: E501
        if transaction_type not in allowed_values:
            raise ValueError(
                "Invalid value for `transaction_type` ({0}), must be one of {1}"
                .format(transaction_type, allowed_values)
            )

        self._transaction_type = transaction_type
