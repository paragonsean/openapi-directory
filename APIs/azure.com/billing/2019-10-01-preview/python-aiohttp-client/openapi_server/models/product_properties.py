# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.amount import Amount
from openapi_server.models.reseller import Reseller
from openapi_server import util


class ProductProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, availability_id: str=None, billing_frequency: str=None, billing_profile_display_name: str=None, billing_profile_id: str=None, customer_display_name: str=None, customer_id: str=None, display_name: str=None, end_date: datetime=None, invoice_section_display_name: str=None, invoice_section_id: str=None, last_charge: Amount=None, last_charge_date: datetime=None, parent_product_id: str=None, product_type: str=None, product_type_id: str=None, purchase_date: datetime=None, quantity: float=None, reseller: Reseller=None, sku_description: str=None, sku_id: str=None, status: str=None):
        """ProductProperties - a model defined in OpenAPI

        :param availability_id: The availability_id of this ProductProperties.
        :param billing_frequency: The billing_frequency of this ProductProperties.
        :param billing_profile_display_name: The billing_profile_display_name of this ProductProperties.
        :param billing_profile_id: The billing_profile_id of this ProductProperties.
        :param customer_display_name: The customer_display_name of this ProductProperties.
        :param customer_id: The customer_id of this ProductProperties.
        :param display_name: The display_name of this ProductProperties.
        :param end_date: The end_date of this ProductProperties.
        :param invoice_section_display_name: The invoice_section_display_name of this ProductProperties.
        :param invoice_section_id: The invoice_section_id of this ProductProperties.
        :param last_charge: The last_charge of this ProductProperties.
        :param last_charge_date: The last_charge_date of this ProductProperties.
        :param parent_product_id: The parent_product_id of this ProductProperties.
        :param product_type: The product_type of this ProductProperties.
        :param product_type_id: The product_type_id of this ProductProperties.
        :param purchase_date: The purchase_date of this ProductProperties.
        :param quantity: The quantity of this ProductProperties.
        :param reseller: The reseller of this ProductProperties.
        :param sku_description: The sku_description of this ProductProperties.
        :param sku_id: The sku_id of this ProductProperties.
        :param status: The status of this ProductProperties.
        """
        self.openapi_types = {
            'availability_id': str,
            'billing_frequency': str,
            'billing_profile_display_name': str,
            'billing_profile_id': str,
            'customer_display_name': str,
            'customer_id': str,
            'display_name': str,
            'end_date': datetime,
            'invoice_section_display_name': str,
            'invoice_section_id': str,
            'last_charge': Amount,
            'last_charge_date': datetime,
            'parent_product_id': str,
            'product_type': str,
            'product_type_id': str,
            'purchase_date': datetime,
            'quantity': float,
            'reseller': Reseller,
            'sku_description': str,
            'sku_id': str,
            'status': str
        }

        self.attribute_map = {
            'availability_id': 'availabilityId',
            'billing_frequency': 'billingFrequency',
            'billing_profile_display_name': 'billingProfileDisplayName',
            'billing_profile_id': 'billingProfileId',
            'customer_display_name': 'customerDisplayName',
            'customer_id': 'customerId',
            'display_name': 'displayName',
            'end_date': 'endDate',
            'invoice_section_display_name': 'invoiceSectionDisplayName',
            'invoice_section_id': 'invoiceSectionId',
            'last_charge': 'lastCharge',
            'last_charge_date': 'lastChargeDate',
            'parent_product_id': 'parentProductId',
            'product_type': 'productType',
            'product_type_id': 'productTypeId',
            'purchase_date': 'purchaseDate',
            'quantity': 'quantity',
            'reseller': 'reseller',
            'sku_description': 'skuDescription',
            'sku_id': 'skuId',
            'status': 'status'
        }

        self._availability_id = availability_id
        self._billing_frequency = billing_frequency
        self._billing_profile_display_name = billing_profile_display_name
        self._billing_profile_id = billing_profile_id
        self._customer_display_name = customer_display_name
        self._customer_id = customer_id
        self._display_name = display_name
        self._end_date = end_date
        self._invoice_section_display_name = invoice_section_display_name
        self._invoice_section_id = invoice_section_id
        self._last_charge = last_charge
        self._last_charge_date = last_charge_date
        self._parent_product_id = parent_product_id
        self._product_type = product_type
        self._product_type_id = product_type_id
        self._purchase_date = purchase_date
        self._quantity = quantity
        self._reseller = reseller
        self._sku_description = sku_description
        self._sku_id = sku_id
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProductProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProductProperties of this ProductProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def availability_id(self):
        """Gets the availability_id of this ProductProperties.

        Availability Id.

        :return: The availability_id of this ProductProperties.
        :rtype: str
        """
        return self._availability_id

    @availability_id.setter
    def availability_id(self, availability_id):
        """Sets the availability_id of this ProductProperties.

        Availability Id.

        :param availability_id: The availability_id of this ProductProperties.
        :type availability_id: str
        """

        self._availability_id = availability_id

    @property
    def billing_frequency(self):
        """Gets the billing_frequency of this ProductProperties.

        Billing frequency.

        :return: The billing_frequency of this ProductProperties.
        :rtype: str
        """
        return self._billing_frequency

    @billing_frequency.setter
    def billing_frequency(self, billing_frequency):
        """Sets the billing_frequency of this ProductProperties.

        Billing frequency.

        :param billing_frequency: The billing_frequency of this ProductProperties.
        :type billing_frequency: str
        """
        allowed_values = ["OneTime", "Monthly", "UsageBased"]  # noqa: E501
        if billing_frequency not in allowed_values:
            raise ValueError(
                "Invalid value for `billing_frequency` ({0}), must be one of {1}"
                .format(billing_frequency, allowed_values)
            )

        self._billing_frequency = billing_frequency

    @property
    def billing_profile_display_name(self):
        """Gets the billing_profile_display_name of this ProductProperties.

        Billing Profile display name to which this product belongs.

        :return: The billing_profile_display_name of this ProductProperties.
        :rtype: str
        """
        return self._billing_profile_display_name

    @billing_profile_display_name.setter
    def billing_profile_display_name(self, billing_profile_display_name):
        """Sets the billing_profile_display_name of this ProductProperties.

        Billing Profile display name to which this product belongs.

        :param billing_profile_display_name: The billing_profile_display_name of this ProductProperties.
        :type billing_profile_display_name: str
        """

        self._billing_profile_display_name = billing_profile_display_name

    @property
    def billing_profile_id(self):
        """Gets the billing_profile_id of this ProductProperties.

        Billing Profile id to which this product belongs.

        :return: The billing_profile_id of this ProductProperties.
        :rtype: str
        """
        return self._billing_profile_id

    @billing_profile_id.setter
    def billing_profile_id(self, billing_profile_id):
        """Sets the billing_profile_id of this ProductProperties.

        Billing Profile id to which this product belongs.

        :param billing_profile_id: The billing_profile_id of this ProductProperties.
        :type billing_profile_id: str
        """

        self._billing_profile_id = billing_profile_id

    @property
    def customer_display_name(self):
        """Gets the customer_display_name of this ProductProperties.

        Display name of customer to which this product belongs.

        :return: The customer_display_name of this ProductProperties.
        :rtype: str
        """
        return self._customer_display_name

    @customer_display_name.setter
    def customer_display_name(self, customer_display_name):
        """Sets the customer_display_name of this ProductProperties.

        Display name of customer to which this product belongs.

        :param customer_display_name: The customer_display_name of this ProductProperties.
        :type customer_display_name: str
        """

        self._customer_display_name = customer_display_name

    @property
    def customer_id(self):
        """Gets the customer_id of this ProductProperties.

        Customer id to which this product belongs.

        :return: The customer_id of this ProductProperties.
        :rtype: str
        """
        return self._customer_id

    @customer_id.setter
    def customer_id(self, customer_id):
        """Sets the customer_id of this ProductProperties.

        Customer id to which this product belongs.

        :param customer_id: The customer_id of this ProductProperties.
        :type customer_id: str
        """

        self._customer_id = customer_id

    @property
    def display_name(self):
        """Gets the display_name of this ProductProperties.

        The display name of the product.

        :return: The display_name of this ProductProperties.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this ProductProperties.

        The display name of the product.

        :param display_name: The display_name of this ProductProperties.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def end_date(self):
        """Gets the end_date of this ProductProperties.

        end date.

        :return: The end_date of this ProductProperties.
        :rtype: datetime
        """
        return self._end_date

    @end_date.setter
    def end_date(self, end_date):
        """Sets the end_date of this ProductProperties.

        end date.

        :param end_date: The end_date of this ProductProperties.
        :type end_date: datetime
        """

        self._end_date = end_date

    @property
    def invoice_section_display_name(self):
        """Gets the invoice_section_display_name of this ProductProperties.

        Invoice section display name to which this product belongs.

        :return: The invoice_section_display_name of this ProductProperties.
        :rtype: str
        """
        return self._invoice_section_display_name

    @invoice_section_display_name.setter
    def invoice_section_display_name(self, invoice_section_display_name):
        """Sets the invoice_section_display_name of this ProductProperties.

        Invoice section display name to which this product belongs.

        :param invoice_section_display_name: The invoice_section_display_name of this ProductProperties.
        :type invoice_section_display_name: str
        """

        self._invoice_section_display_name = invoice_section_display_name

    @property
    def invoice_section_id(self):
        """Gets the invoice_section_id of this ProductProperties.

        Invoice section id to which this product belongs.

        :return: The invoice_section_id of this ProductProperties.
        :rtype: str
        """
        return self._invoice_section_id

    @invoice_section_id.setter
    def invoice_section_id(self, invoice_section_id):
        """Sets the invoice_section_id of this ProductProperties.

        Invoice section id to which this product belongs.

        :param invoice_section_id: The invoice_section_id of this ProductProperties.
        :type invoice_section_id: str
        """

        self._invoice_section_id = invoice_section_id

    @property
    def last_charge(self):
        """Gets the last_charge of this ProductProperties.


        :return: The last_charge of this ProductProperties.
        :rtype: Amount
        """
        return self._last_charge

    @last_charge.setter
    def last_charge(self, last_charge):
        """Sets the last_charge of this ProductProperties.


        :param last_charge: The last_charge of this ProductProperties.
        :type last_charge: Amount
        """

        self._last_charge = last_charge

    @property
    def last_charge_date(self):
        """Gets the last_charge_date of this ProductProperties.

        The date of the last charge.

        :return: The last_charge_date of this ProductProperties.
        :rtype: datetime
        """
        return self._last_charge_date

    @last_charge_date.setter
    def last_charge_date(self, last_charge_date):
        """Sets the last_charge_date of this ProductProperties.

        The date of the last charge.

        :param last_charge_date: The last_charge_date of this ProductProperties.
        :type last_charge_date: datetime
        """

        self._last_charge_date = last_charge_date

    @property
    def parent_product_id(self):
        """Gets the parent_product_id of this ProductProperties.

        Parent Product Id.

        :return: The parent_product_id of this ProductProperties.
        :rtype: str
        """
        return self._parent_product_id

    @parent_product_id.setter
    def parent_product_id(self, parent_product_id):
        """Sets the parent_product_id of this ProductProperties.

        Parent Product Id.

        :param parent_product_id: The parent_product_id of this ProductProperties.
        :type parent_product_id: str
        """

        self._parent_product_id = parent_product_id

    @property
    def product_type(self):
        """Gets the product_type of this ProductProperties.

        The type of product.

        :return: The product_type of this ProductProperties.
        :rtype: str
        """
        return self._product_type

    @product_type.setter
    def product_type(self, product_type):
        """Sets the product_type of this ProductProperties.

        The type of product.

        :param product_type: The product_type of this ProductProperties.
        :type product_type: str
        """

        self._product_type = product_type

    @property
    def product_type_id(self):
        """Gets the product_type_id of this ProductProperties.

        The product type id.

        :return: The product_type_id of this ProductProperties.
        :rtype: str
        """
        return self._product_type_id

    @product_type_id.setter
    def product_type_id(self, product_type_id):
        """Sets the product_type_id of this ProductProperties.

        The product type id.

        :param product_type_id: The product_type_id of this ProductProperties.
        :type product_type_id: str
        """

        self._product_type_id = product_type_id

    @property
    def purchase_date(self):
        """Gets the purchase_date of this ProductProperties.

        The date of purchase.

        :return: The purchase_date of this ProductProperties.
        :rtype: datetime
        """
        return self._purchase_date

    @purchase_date.setter
    def purchase_date(self, purchase_date):
        """Sets the purchase_date of this ProductProperties.

        The date of purchase.

        :param purchase_date: The purchase_date of this ProductProperties.
        :type purchase_date: datetime
        """

        self._purchase_date = purchase_date

    @property
    def quantity(self):
        """Gets the quantity of this ProductProperties.

        The purchased product quantity.

        :return: The quantity of this ProductProperties.
        :rtype: float
        """
        return self._quantity

    @quantity.setter
    def quantity(self, quantity):
        """Sets the quantity of this ProductProperties.

        The purchased product quantity.

        :param quantity: The quantity of this ProductProperties.
        :type quantity: float
        """

        self._quantity = quantity

    @property
    def reseller(self):
        """Gets the reseller of this ProductProperties.


        :return: The reseller of this ProductProperties.
        :rtype: Reseller
        """
        return self._reseller

    @reseller.setter
    def reseller(self, reseller):
        """Sets the reseller of this ProductProperties.


        :param reseller: The reseller of this ProductProperties.
        :type reseller: Reseller
        """

        self._reseller = reseller

    @property
    def sku_description(self):
        """Gets the sku_description of this ProductProperties.

        Sku description.

        :return: The sku_description of this ProductProperties.
        :rtype: str
        """
        return self._sku_description

    @sku_description.setter
    def sku_description(self, sku_description):
        """Sets the sku_description of this ProductProperties.

        Sku description.

        :param sku_description: The sku_description of this ProductProperties.
        :type sku_description: str
        """

        self._sku_description = sku_description

    @property
    def sku_id(self):
        """Gets the sku_id of this ProductProperties.

        Sku Id.

        :return: The sku_id of this ProductProperties.
        :rtype: str
        """
        return self._sku_id

    @sku_id.setter
    def sku_id(self, sku_id):
        """Sets the sku_id of this ProductProperties.

        Sku Id.

        :param sku_id: The sku_id of this ProductProperties.
        :type sku_id: str
        """

        self._sku_id = sku_id

    @property
    def status(self):
        """Gets the status of this ProductProperties.

        Product status.

        :return: The status of this ProductProperties.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this ProductProperties.

        Product status.

        :param status: The status of this ProductProperties.
        :type status: str
        """
        allowed_values = ["Active", "Inactive", "PastDue", "Expiring", "Expired", "Disabled", "Cancelled", "AutoRenew"]  # noqa: E501
        if status not in allowed_values:
            raise ValueError(
                "Invalid value for `status` ({0}), must be one of {1}"
                .format(status, allowed_values)
            )

        self._status = status
