/**
 * BillingManagementClient
 * Billing client provides access to billing resources for Azure subscriptions.
 *
 * The version of the OpenAPI document: 2019-10-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.BillingManagementClient);
  }
}(this, function(expect, BillingManagementClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new BillingManagementClient.ProductProperties();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ProductProperties', function() {
    it('should create an instance of ProductProperties', function() {
      // uncomment below and update the code to test ProductProperties
      //var instance = new BillingManagementClient.ProductProperties();
      //expect(instance).to.be.a(BillingManagementClient.ProductProperties);
    });

    it('should have the property availabilityId (base name: "availabilityId")', function() {
      // uncomment below and update the code to test the property availabilityId
      //var instance = new BillingManagementClient.ProductProperties();
      //expect(instance).to.be();
    });

    it('should have the property billingFrequency (base name: "billingFrequency")', function() {
      // uncomment below and update the code to test the property billingFrequency
      //var instance = new BillingManagementClient.ProductProperties();
      //expect(instance).to.be();
    });

    it('should have the property billingProfileDisplayName (base name: "billingProfileDisplayName")', function() {
      // uncomment below and update the code to test the property billingProfileDisplayName
      //var instance = new BillingManagementClient.ProductProperties();
      //expect(instance).to.be();
    });

    it('should have the property billingProfileId (base name: "billingProfileId")', function() {
      // uncomment below and update the code to test the property billingProfileId
      //var instance = new BillingManagementClient.ProductProperties();
      //expect(instance).to.be();
    });

    it('should have the property customerDisplayName (base name: "customerDisplayName")', function() {
      // uncomment below and update the code to test the property customerDisplayName
      //var instance = new BillingManagementClient.ProductProperties();
      //expect(instance).to.be();
    });

    it('should have the property customerId (base name: "customerId")', function() {
      // uncomment below and update the code to test the property customerId
      //var instance = new BillingManagementClient.ProductProperties();
      //expect(instance).to.be();
    });

    it('should have the property displayName (base name: "displayName")', function() {
      // uncomment below and update the code to test the property displayName
      //var instance = new BillingManagementClient.ProductProperties();
      //expect(instance).to.be();
    });

    it('should have the property endDate (base name: "endDate")', function() {
      // uncomment below and update the code to test the property endDate
      //var instance = new BillingManagementClient.ProductProperties();
      //expect(instance).to.be();
    });

    it('should have the property invoiceSectionDisplayName (base name: "invoiceSectionDisplayName")', function() {
      // uncomment below and update the code to test the property invoiceSectionDisplayName
      //var instance = new BillingManagementClient.ProductProperties();
      //expect(instance).to.be();
    });

    it('should have the property invoiceSectionId (base name: "invoiceSectionId")', function() {
      // uncomment below and update the code to test the property invoiceSectionId
      //var instance = new BillingManagementClient.ProductProperties();
      //expect(instance).to.be();
    });

    it('should have the property lastCharge (base name: "lastCharge")', function() {
      // uncomment below and update the code to test the property lastCharge
      //var instance = new BillingManagementClient.ProductProperties();
      //expect(instance).to.be();
    });

    it('should have the property lastChargeDate (base name: "lastChargeDate")', function() {
      // uncomment below and update the code to test the property lastChargeDate
      //var instance = new BillingManagementClient.ProductProperties();
      //expect(instance).to.be();
    });

    it('should have the property parentProductId (base name: "parentProductId")', function() {
      // uncomment below and update the code to test the property parentProductId
      //var instance = new BillingManagementClient.ProductProperties();
      //expect(instance).to.be();
    });

    it('should have the property productType (base name: "productType")', function() {
      // uncomment below and update the code to test the property productType
      //var instance = new BillingManagementClient.ProductProperties();
      //expect(instance).to.be();
    });

    it('should have the property productTypeId (base name: "productTypeId")', function() {
      // uncomment below and update the code to test the property productTypeId
      //var instance = new BillingManagementClient.ProductProperties();
      //expect(instance).to.be();
    });

    it('should have the property purchaseDate (base name: "purchaseDate")', function() {
      // uncomment below and update the code to test the property purchaseDate
      //var instance = new BillingManagementClient.ProductProperties();
      //expect(instance).to.be();
    });

    it('should have the property quantity (base name: "quantity")', function() {
      // uncomment below and update the code to test the property quantity
      //var instance = new BillingManagementClient.ProductProperties();
      //expect(instance).to.be();
    });

    it('should have the property reseller (base name: "reseller")', function() {
      // uncomment below and update the code to test the property reseller
      //var instance = new BillingManagementClient.ProductProperties();
      //expect(instance).to.be();
    });

    it('should have the property skuDescription (base name: "skuDescription")', function() {
      // uncomment below and update the code to test the property skuDescription
      //var instance = new BillingManagementClient.ProductProperties();
      //expect(instance).to.be();
    });

    it('should have the property skuId (base name: "skuId")', function() {
      // uncomment below and update the code to test the property skuId
      //var instance = new BillingManagementClient.ProductProperties();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new BillingManagementClient.ProductProperties();
      //expect(instance).to.be();
    });

  });

}));
