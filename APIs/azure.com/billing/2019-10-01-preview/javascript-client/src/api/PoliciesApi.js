/**
 * BillingManagementClient
 * Billing client provides access to billing resources for Azure subscriptions.
 *
 * The version of the OpenAPI document: 2019-10-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CustomerPolicy from '../model/CustomerPolicy';
import ErrorResponse from '../model/ErrorResponse';
import Policy from '../model/Policy';

/**
* Policies service.
* @module api/PoliciesApi
* @version 2019-10-01-preview
*/
export default class PoliciesApi {

    /**
    * Constructs a new PoliciesApi. 
    * @alias module:api/PoliciesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the policiesGetByBillingProfile operation.
     * @callback module:api/PoliciesApi~policiesGetByBillingProfileCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Policy} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * The policy for a given billing account name and billing profile name.
     * @param {String} billingAccountName billing Account Id.
     * @param {String} billingProfileName Billing Profile Id.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2019-10-01-preview.
     * @param {module:api/PoliciesApi~policiesGetByBillingProfileCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Policy}
     */
    policiesGetByBillingProfile(billingAccountName, billingProfileName, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'billingAccountName' is set
      if (billingAccountName === undefined || billingAccountName === null) {
        throw new Error("Missing the required parameter 'billingAccountName' when calling policiesGetByBillingProfile");
      }
      // verify the required parameter 'billingProfileName' is set
      if (billingProfileName === undefined || billingProfileName === null) {
        throw new Error("Missing the required parameter 'billingProfileName' when calling policiesGetByBillingProfile");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling policiesGetByBillingProfile");
      }

      let pathParams = {
        'billingAccountName': billingAccountName,
        'billingProfileName': billingProfileName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Policy;
      return this.apiClient.callApi(
        '/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/billingProfiles/{billingProfileName}/policies/default', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the policiesGetByCustomer operation.
     * @callback module:api/PoliciesApi~policiesGetByCustomerCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CustomerPolicy} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * The policy for a given billing account name and customer name.
     * @param {String} billingAccountName billing Account Id.
     * @param {String} customerName Customer name.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2019-10-01-preview.
     * @param {module:api/PoliciesApi~policiesGetByCustomerCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CustomerPolicy}
     */
    policiesGetByCustomer(billingAccountName, customerName, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'billingAccountName' is set
      if (billingAccountName === undefined || billingAccountName === null) {
        throw new Error("Missing the required parameter 'billingAccountName' when calling policiesGetByCustomer");
      }
      // verify the required parameter 'customerName' is set
      if (customerName === undefined || customerName === null) {
        throw new Error("Missing the required parameter 'customerName' when calling policiesGetByCustomer");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling policiesGetByCustomer");
      }

      let pathParams = {
        'billingAccountName': billingAccountName,
        'customerName': customerName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = CustomerPolicy;
      return this.apiClient.callApi(
        '/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/customers/{customerName}/policies/default', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the policiesUpdate operation.
     * @callback module:api/PoliciesApi~policiesUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Policy} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * The operation to update a policy.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2019-10-01-preview.
     * @param {String} billingAccountName billing Account Id.
     * @param {String} billingProfileName Billing Profile Id.
     * @param {module:model/Policy} parameters Parameters supplied to the update policy operation.
     * @param {module:api/PoliciesApi~policiesUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Policy}
     */
    policiesUpdate(apiVersion, billingAccountName, billingProfileName, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling policiesUpdate");
      }
      // verify the required parameter 'billingAccountName' is set
      if (billingAccountName === undefined || billingAccountName === null) {
        throw new Error("Missing the required parameter 'billingAccountName' when calling policiesUpdate");
      }
      // verify the required parameter 'billingProfileName' is set
      if (billingProfileName === undefined || billingProfileName === null) {
        throw new Error("Missing the required parameter 'billingProfileName' when calling policiesUpdate");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling policiesUpdate");
      }

      let pathParams = {
        'billingAccountName': billingAccountName,
        'billingProfileName': billingProfileName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Policy;
      return this.apiClient.callApi(
        '/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/billingProfiles/{billingProfileName}/policies/default', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the policiesUpdateCustomer operation.
     * @callback module:api/PoliciesApi~policiesUpdateCustomerCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CustomerPolicy} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * The operation to update a Customer policy.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2019-10-01-preview.
     * @param {String} billingAccountName billing Account Id.
     * @param {String} customerName Customer name.
     * @param {module:model/CustomerPolicy} parameters Parameters supplied to the update customer policy operation.
     * @param {module:api/PoliciesApi~policiesUpdateCustomerCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CustomerPolicy}
     */
    policiesUpdateCustomer(apiVersion, billingAccountName, customerName, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling policiesUpdateCustomer");
      }
      // verify the required parameter 'billingAccountName' is set
      if (billingAccountName === undefined || billingAccountName === null) {
        throw new Error("Missing the required parameter 'billingAccountName' when calling policiesUpdateCustomer");
      }
      // verify the required parameter 'customerName' is set
      if (customerName === undefined || customerName === null) {
        throw new Error("Missing the required parameter 'customerName' when calling policiesUpdateCustomer");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling policiesUpdateCustomer");
      }

      let pathParams = {
        'billingAccountName': billingAccountName,
        'customerName': customerName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CustomerPolicy;
      return this.apiClient.callApi(
        '/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/customers/{customerName}/policies/default', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
