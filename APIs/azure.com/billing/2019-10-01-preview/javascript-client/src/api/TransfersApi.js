/**
 * BillingManagementClient
 * Billing client provides access to billing resources for Azure subscriptions.
 *
 * The version of the OpenAPI document: 2019-10-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErrorResponse from '../model/ErrorResponse';
import InitiateTransferRequest from '../model/InitiateTransferRequest';
import TransferDetails from '../model/TransferDetails';
import TransferDetailsListResult from '../model/TransferDetailsListResult';

/**
* Transfers service.
* @module api/TransfersApi
* @version 2019-10-01-preview
*/
export default class TransfersApi {

    /**
    * Constructs a new TransfersApi. 
    * @alias module:api/TransfersApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the partnerTransfersCancel operation.
     * @callback module:api/TransfersApi~partnerTransfersCancelCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransferDetails} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Cancels the transfer for given transfer Id.
     * @param {String} billingAccountName billing Account Id.
     * @param {String} billingProfileName Billing Profile Id.
     * @param {String} customerName Customer name.
     * @param {String} transferName Transfer Name.
     * @param {module:api/TransfersApi~partnerTransfersCancelCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransferDetails}
     */
    partnerTransfersCancel(billingAccountName, billingProfileName, customerName, transferName, callback) {
      let postBody = null;
      // verify the required parameter 'billingAccountName' is set
      if (billingAccountName === undefined || billingAccountName === null) {
        throw new Error("Missing the required parameter 'billingAccountName' when calling partnerTransfersCancel");
      }
      // verify the required parameter 'billingProfileName' is set
      if (billingProfileName === undefined || billingProfileName === null) {
        throw new Error("Missing the required parameter 'billingProfileName' when calling partnerTransfersCancel");
      }
      // verify the required parameter 'customerName' is set
      if (customerName === undefined || customerName === null) {
        throw new Error("Missing the required parameter 'customerName' when calling partnerTransfersCancel");
      }
      // verify the required parameter 'transferName' is set
      if (transferName === undefined || transferName === null) {
        throw new Error("Missing the required parameter 'transferName' when calling partnerTransfersCancel");
      }

      let pathParams = {
        'billingAccountName': billingAccountName,
        'billingProfileName': billingProfileName,
        'customerName': customerName,
        'transferName': transferName
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = TransferDetails;
      return this.apiClient.callApi(
        '/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/billingProfiles/{billingProfileName}/customers/{customerName}/transfers/{transferName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the partnerTransfersGet operation.
     * @callback module:api/TransfersApi~partnerTransfersGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransferDetails} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the transfer details for given transfer Id.
     * @param {String} billingAccountName billing Account Id.
     * @param {String} billingProfileName Billing Profile Id.
     * @param {String} customerName Customer name.
     * @param {String} transferName Transfer Name.
     * @param {module:api/TransfersApi~partnerTransfersGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransferDetails}
     */
    partnerTransfersGet(billingAccountName, billingProfileName, customerName, transferName, callback) {
      let postBody = null;
      // verify the required parameter 'billingAccountName' is set
      if (billingAccountName === undefined || billingAccountName === null) {
        throw new Error("Missing the required parameter 'billingAccountName' when calling partnerTransfersGet");
      }
      // verify the required parameter 'billingProfileName' is set
      if (billingProfileName === undefined || billingProfileName === null) {
        throw new Error("Missing the required parameter 'billingProfileName' when calling partnerTransfersGet");
      }
      // verify the required parameter 'customerName' is set
      if (customerName === undefined || customerName === null) {
        throw new Error("Missing the required parameter 'customerName' when calling partnerTransfersGet");
      }
      // verify the required parameter 'transferName' is set
      if (transferName === undefined || transferName === null) {
        throw new Error("Missing the required parameter 'transferName' when calling partnerTransfersGet");
      }

      let pathParams = {
        'billingAccountName': billingAccountName,
        'billingProfileName': billingProfileName,
        'customerName': customerName,
        'transferName': transferName
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = TransferDetails;
      return this.apiClient.callApi(
        '/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/billingProfiles/{billingProfileName}/customers/{customerName}/transfers/{transferName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the partnerTransfersInitiate operation.
     * @callback module:api/TransfersApi~partnerTransfersInitiateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransferDetails} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Initiates the request to transfer the legacy subscriptions or RIs.
     * @param {String} billingAccountName billing Account Id.
     * @param {String} billingProfileName Billing Profile Id.
     * @param {String} customerName Customer name.
     * @param {module:model/InitiateTransferRequest} parameters Parameters supplied to initiate the transfer.
     * @param {module:api/TransfersApi~partnerTransfersInitiateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransferDetails}
     */
    partnerTransfersInitiate(billingAccountName, billingProfileName, customerName, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'billingAccountName' is set
      if (billingAccountName === undefined || billingAccountName === null) {
        throw new Error("Missing the required parameter 'billingAccountName' when calling partnerTransfersInitiate");
      }
      // verify the required parameter 'billingProfileName' is set
      if (billingProfileName === undefined || billingProfileName === null) {
        throw new Error("Missing the required parameter 'billingProfileName' when calling partnerTransfersInitiate");
      }
      // verify the required parameter 'customerName' is set
      if (customerName === undefined || customerName === null) {
        throw new Error("Missing the required parameter 'customerName' when calling partnerTransfersInitiate");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling partnerTransfersInitiate");
      }

      let pathParams = {
        'billingAccountName': billingAccountName,
        'billingProfileName': billingProfileName,
        'customerName': customerName
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = TransferDetails;
      return this.apiClient.callApi(
        '/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/billingProfiles/{billingProfileName}/customers/{customerName}/initiateTransfer', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the partnerTransfersList operation.
     * @callback module:api/TransfersApi~partnerTransfersListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransferDetailsListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists all transfer's details initiated from given invoice section.
     * @param {String} billingAccountName billing Account Id.
     * @param {String} billingProfileName Billing Profile Id.
     * @param {String} customerName Customer name.
     * @param {module:api/TransfersApi~partnerTransfersListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransferDetailsListResult}
     */
    partnerTransfersList(billingAccountName, billingProfileName, customerName, callback) {
      let postBody = null;
      // verify the required parameter 'billingAccountName' is set
      if (billingAccountName === undefined || billingAccountName === null) {
        throw new Error("Missing the required parameter 'billingAccountName' when calling partnerTransfersList");
      }
      // verify the required parameter 'billingProfileName' is set
      if (billingProfileName === undefined || billingProfileName === null) {
        throw new Error("Missing the required parameter 'billingProfileName' when calling partnerTransfersList");
      }
      // verify the required parameter 'customerName' is set
      if (customerName === undefined || customerName === null) {
        throw new Error("Missing the required parameter 'customerName' when calling partnerTransfersList");
      }

      let pathParams = {
        'billingAccountName': billingAccountName,
        'billingProfileName': billingProfileName,
        'customerName': customerName
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = TransferDetailsListResult;
      return this.apiClient.callApi(
        '/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/billingProfiles/{billingProfileName}/customers/{customerName}/transfers', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the transfersCancel operation.
     * @callback module:api/TransfersApi~transfersCancelCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransferDetails} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Cancels the transfer for given transfer Id.
     * @param {String} billingAccountName billing Account Id.
     * @param {String} billingProfileName Billing Profile Id.
     * @param {String} invoiceSectionName InvoiceSection Id.
     * @param {String} transferName Transfer Name.
     * @param {module:api/TransfersApi~transfersCancelCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransferDetails}
     */
    transfersCancel(billingAccountName, billingProfileName, invoiceSectionName, transferName, callback) {
      let postBody = null;
      // verify the required parameter 'billingAccountName' is set
      if (billingAccountName === undefined || billingAccountName === null) {
        throw new Error("Missing the required parameter 'billingAccountName' when calling transfersCancel");
      }
      // verify the required parameter 'billingProfileName' is set
      if (billingProfileName === undefined || billingProfileName === null) {
        throw new Error("Missing the required parameter 'billingProfileName' when calling transfersCancel");
      }
      // verify the required parameter 'invoiceSectionName' is set
      if (invoiceSectionName === undefined || invoiceSectionName === null) {
        throw new Error("Missing the required parameter 'invoiceSectionName' when calling transfersCancel");
      }
      // verify the required parameter 'transferName' is set
      if (transferName === undefined || transferName === null) {
        throw new Error("Missing the required parameter 'transferName' when calling transfersCancel");
      }

      let pathParams = {
        'billingAccountName': billingAccountName,
        'billingProfileName': billingProfileName,
        'invoiceSectionName': invoiceSectionName,
        'transferName': transferName
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = TransferDetails;
      return this.apiClient.callApi(
        '/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/billingProfiles/{billingProfileName}/invoiceSections/{invoiceSectionName}/transfers/{transferName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the transfersGet operation.
     * @callback module:api/TransfersApi~transfersGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransferDetails} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the transfer details for given transfer Id.
     * @param {String} billingAccountName billing Account Id.
     * @param {String} billingProfileName Billing Profile Id.
     * @param {String} invoiceSectionName InvoiceSection Id.
     * @param {String} transferName Transfer Name.
     * @param {module:api/TransfersApi~transfersGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransferDetails}
     */
    transfersGet(billingAccountName, billingProfileName, invoiceSectionName, transferName, callback) {
      let postBody = null;
      // verify the required parameter 'billingAccountName' is set
      if (billingAccountName === undefined || billingAccountName === null) {
        throw new Error("Missing the required parameter 'billingAccountName' when calling transfersGet");
      }
      // verify the required parameter 'billingProfileName' is set
      if (billingProfileName === undefined || billingProfileName === null) {
        throw new Error("Missing the required parameter 'billingProfileName' when calling transfersGet");
      }
      // verify the required parameter 'invoiceSectionName' is set
      if (invoiceSectionName === undefined || invoiceSectionName === null) {
        throw new Error("Missing the required parameter 'invoiceSectionName' when calling transfersGet");
      }
      // verify the required parameter 'transferName' is set
      if (transferName === undefined || transferName === null) {
        throw new Error("Missing the required parameter 'transferName' when calling transfersGet");
      }

      let pathParams = {
        'billingAccountName': billingAccountName,
        'billingProfileName': billingProfileName,
        'invoiceSectionName': invoiceSectionName,
        'transferName': transferName
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = TransferDetails;
      return this.apiClient.callApi(
        '/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/billingProfiles/{billingProfileName}/invoiceSections/{invoiceSectionName}/transfers/{transferName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the transfersInitiate operation.
     * @callback module:api/TransfersApi~transfersInitiateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransferDetails} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Initiates the request to transfer the legacy subscriptions or RIs.
     * @param {String} billingAccountName billing Account Id.
     * @param {String} billingProfileName Billing Profile Id.
     * @param {String} invoiceSectionName InvoiceSection Id.
     * @param {module:model/InitiateTransferRequest} parameters Parameters supplied to initiate the transfer.
     * @param {module:api/TransfersApi~transfersInitiateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransferDetails}
     */
    transfersInitiate(billingAccountName, billingProfileName, invoiceSectionName, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'billingAccountName' is set
      if (billingAccountName === undefined || billingAccountName === null) {
        throw new Error("Missing the required parameter 'billingAccountName' when calling transfersInitiate");
      }
      // verify the required parameter 'billingProfileName' is set
      if (billingProfileName === undefined || billingProfileName === null) {
        throw new Error("Missing the required parameter 'billingProfileName' when calling transfersInitiate");
      }
      // verify the required parameter 'invoiceSectionName' is set
      if (invoiceSectionName === undefined || invoiceSectionName === null) {
        throw new Error("Missing the required parameter 'invoiceSectionName' when calling transfersInitiate");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling transfersInitiate");
      }

      let pathParams = {
        'billingAccountName': billingAccountName,
        'billingProfileName': billingProfileName,
        'invoiceSectionName': invoiceSectionName
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = TransferDetails;
      return this.apiClient.callApi(
        '/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/billingProfiles/{billingProfileName}/invoiceSections/{invoiceSectionName}/initiateTransfer', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the transfersList operation.
     * @callback module:api/TransfersApi~transfersListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransferDetailsListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists all transfer's details initiated from given invoice section.
     * @param {String} billingAccountName billing Account Id.
     * @param {String} billingProfileName Billing Profile Id.
     * @param {String} invoiceSectionName InvoiceSection Id.
     * @param {module:api/TransfersApi~transfersListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransferDetailsListResult}
     */
    transfersList(billingAccountName, billingProfileName, invoiceSectionName, callback) {
      let postBody = null;
      // verify the required parameter 'billingAccountName' is set
      if (billingAccountName === undefined || billingAccountName === null) {
        throw new Error("Missing the required parameter 'billingAccountName' when calling transfersList");
      }
      // verify the required parameter 'billingProfileName' is set
      if (billingProfileName === undefined || billingProfileName === null) {
        throw new Error("Missing the required parameter 'billingProfileName' when calling transfersList");
      }
      // verify the required parameter 'invoiceSectionName' is set
      if (invoiceSectionName === undefined || invoiceSectionName === null) {
        throw new Error("Missing the required parameter 'invoiceSectionName' when calling transfersList");
      }

      let pathParams = {
        'billingAccountName': billingAccountName,
        'billingProfileName': billingProfileName,
        'invoiceSectionName': invoiceSectionName
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = TransferDetailsListResult;
      return this.apiClient.callApi(
        '/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/billingProfiles/{billingProfileName}/invoiceSections/{invoiceSectionName}/transfers', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
