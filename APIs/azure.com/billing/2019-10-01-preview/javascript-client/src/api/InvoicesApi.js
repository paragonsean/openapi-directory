/**
 * BillingManagementClient
 * Billing client provides access to billing resources for Azure subscriptions.
 *
 * The version of the OpenAPI document: 2019-10-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErrorResponse from '../model/ErrorResponse';
import Invoice from '../model/Invoice';
import InvoiceListResult from '../model/InvoiceListResult';

/**
* Invoices service.
* @module api/InvoicesApi
* @version 2019-10-01-preview
*/
export default class InvoicesApi {

    /**
    * Constructs a new InvoicesApi. 
    * @alias module:api/InvoicesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the invoicesGet operation.
     * @callback module:api/InvoicesApi~invoicesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Invoice} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the invoice by name.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2019-10-01-preview.
     * @param {String} billingAccountName billing Account Id.
     * @param {String} billingProfileName Billing Profile Id.
     * @param {String} invoiceName Invoice Id.
     * @param {module:api/InvoicesApi~invoicesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Invoice}
     */
    invoicesGet(apiVersion, billingAccountName, billingProfileName, invoiceName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling invoicesGet");
      }
      // verify the required parameter 'billingAccountName' is set
      if (billingAccountName === undefined || billingAccountName === null) {
        throw new Error("Missing the required parameter 'billingAccountName' when calling invoicesGet");
      }
      // verify the required parameter 'billingProfileName' is set
      if (billingProfileName === undefined || billingProfileName === null) {
        throw new Error("Missing the required parameter 'billingProfileName' when calling invoicesGet");
      }
      // verify the required parameter 'invoiceName' is set
      if (invoiceName === undefined || invoiceName === null) {
        throw new Error("Missing the required parameter 'invoiceName' when calling invoicesGet");
      }

      let pathParams = {
        'billingAccountName': billingAccountName,
        'billingProfileName': billingProfileName,
        'invoiceName': invoiceName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Invoice;
      return this.apiClient.callApi(
        '/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/billingProfiles/{billingProfileName}/invoices/{invoiceName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the invoicesGetById operation.
     * @callback module:api/InvoicesApi~invoicesGetByIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Invoice} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the invoice by name.
     * @param {String} billingAccountName billing Account Id.
     * @param {String} billingSubscriptionName Billing Subscription Id.
     * @param {String} invoiceName Invoice Id.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2019-10-01-preview.
     * @param {module:api/InvoicesApi~invoicesGetByIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Invoice}
     */
    invoicesGetById(billingAccountName, billingSubscriptionName, invoiceName, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'billingAccountName' is set
      if (billingAccountName === undefined || billingAccountName === null) {
        throw new Error("Missing the required parameter 'billingAccountName' when calling invoicesGetById");
      }
      // verify the required parameter 'billingSubscriptionName' is set
      if (billingSubscriptionName === undefined || billingSubscriptionName === null) {
        throw new Error("Missing the required parameter 'billingSubscriptionName' when calling invoicesGetById");
      }
      // verify the required parameter 'invoiceName' is set
      if (invoiceName === undefined || invoiceName === null) {
        throw new Error("Missing the required parameter 'invoiceName' when calling invoicesGetById");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling invoicesGetById");
      }

      let pathParams = {
        'billingAccountName': billingAccountName,
        'billingSubscriptionName': billingSubscriptionName,
        'invoiceName': invoiceName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Invoice;
      return this.apiClient.callApi(
        '/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/billingSubscriptions/{billingSubscriptionName}/invoices/{invoiceName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the invoicesListByBillingAccount operation.
     * @callback module:api/InvoicesApi~invoicesListByBillingAccountCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InvoiceListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List of invoices for a billing account.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2019-10-01-preview.
     * @param {String} billingAccountName billing Account Id.
     * @param {String} periodStartDate Invoice period start date.
     * @param {String} periodEndDate Invoice period end date.
     * @param {module:api/InvoicesApi~invoicesListByBillingAccountCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InvoiceListResult}
     */
    invoicesListByBillingAccount(apiVersion, billingAccountName, periodStartDate, periodEndDate, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling invoicesListByBillingAccount");
      }
      // verify the required parameter 'billingAccountName' is set
      if (billingAccountName === undefined || billingAccountName === null) {
        throw new Error("Missing the required parameter 'billingAccountName' when calling invoicesListByBillingAccount");
      }
      // verify the required parameter 'periodStartDate' is set
      if (periodStartDate === undefined || periodStartDate === null) {
        throw new Error("Missing the required parameter 'periodStartDate' when calling invoicesListByBillingAccount");
      }
      // verify the required parameter 'periodEndDate' is set
      if (periodEndDate === undefined || periodEndDate === null) {
        throw new Error("Missing the required parameter 'periodEndDate' when calling invoicesListByBillingAccount");
      }

      let pathParams = {
        'billingAccountName': billingAccountName
      };
      let queryParams = {
        'api-version': apiVersion,
        'periodStartDate': periodStartDate,
        'periodEndDate': periodEndDate
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InvoiceListResult;
      return this.apiClient.callApi(
        '/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/invoices', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the invoicesListByBillingProfile operation.
     * @callback module:api/InvoicesApi~invoicesListByBillingProfileCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InvoiceListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List of invoices for a billing profile.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2019-10-01-preview.
     * @param {String} billingAccountName billing Account Id.
     * @param {String} billingProfileName Billing Profile Id.
     * @param {String} periodStartDate Invoice period start date.
     * @param {String} periodEndDate Invoice period end date.
     * @param {module:api/InvoicesApi~invoicesListByBillingProfileCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InvoiceListResult}
     */
    invoicesListByBillingProfile(apiVersion, billingAccountName, billingProfileName, periodStartDate, periodEndDate, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling invoicesListByBillingProfile");
      }
      // verify the required parameter 'billingAccountName' is set
      if (billingAccountName === undefined || billingAccountName === null) {
        throw new Error("Missing the required parameter 'billingAccountName' when calling invoicesListByBillingProfile");
      }
      // verify the required parameter 'billingProfileName' is set
      if (billingProfileName === undefined || billingProfileName === null) {
        throw new Error("Missing the required parameter 'billingProfileName' when calling invoicesListByBillingProfile");
      }
      // verify the required parameter 'periodStartDate' is set
      if (periodStartDate === undefined || periodStartDate === null) {
        throw new Error("Missing the required parameter 'periodStartDate' when calling invoicesListByBillingProfile");
      }
      // verify the required parameter 'periodEndDate' is set
      if (periodEndDate === undefined || periodEndDate === null) {
        throw new Error("Missing the required parameter 'periodEndDate' when calling invoicesListByBillingProfile");
      }

      let pathParams = {
        'billingAccountName': billingAccountName,
        'billingProfileName': billingProfileName
      };
      let queryParams = {
        'api-version': apiVersion,
        'periodStartDate': periodStartDate,
        'periodEndDate': periodEndDate
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InvoiceListResult;
      return this.apiClient.callApi(
        '/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/billingProfiles/{billingProfileName}/invoices', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the invoicesListByBillingSubscription operation.
     * @callback module:api/InvoicesApi~invoicesListByBillingSubscriptionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InvoiceListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists invoices by billing subscriptions name.
     * @param {String} billingAccountName billing Account Id.
     * @param {String} billingSubscriptionName Billing Subscription Id.
     * @param {String} periodStartDate Invoice period start date.
     * @param {String} periodEndDate Invoice period end date.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2019-10-01-preview.
     * @param {module:api/InvoicesApi~invoicesListByBillingSubscriptionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InvoiceListResult}
     */
    invoicesListByBillingSubscription(billingAccountName, billingSubscriptionName, periodStartDate, periodEndDate, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'billingAccountName' is set
      if (billingAccountName === undefined || billingAccountName === null) {
        throw new Error("Missing the required parameter 'billingAccountName' when calling invoicesListByBillingSubscription");
      }
      // verify the required parameter 'billingSubscriptionName' is set
      if (billingSubscriptionName === undefined || billingSubscriptionName === null) {
        throw new Error("Missing the required parameter 'billingSubscriptionName' when calling invoicesListByBillingSubscription");
      }
      // verify the required parameter 'periodStartDate' is set
      if (periodStartDate === undefined || periodStartDate === null) {
        throw new Error("Missing the required parameter 'periodStartDate' when calling invoicesListByBillingSubscription");
      }
      // verify the required parameter 'periodEndDate' is set
      if (periodEndDate === undefined || periodEndDate === null) {
        throw new Error("Missing the required parameter 'periodEndDate' when calling invoicesListByBillingSubscription");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling invoicesListByBillingSubscription");
      }

      let pathParams = {
        'billingAccountName': billingAccountName,
        'billingSubscriptionName': billingSubscriptionName
      };
      let queryParams = {
        'periodStartDate': periodStartDate,
        'periodEndDate': periodEndDate,
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InvoiceListResult;
      return this.apiClient.callApi(
        '/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/billingSubscriptions/{billingSubscriptionName}/invoices', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
