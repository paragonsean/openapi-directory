/**
 * BillingManagementClient
 * Billing client provides access to billing resources for Azure subscriptions.
 *
 * The version of the OpenAPI document: 2019-10-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The InitiateTransferProperties model module.
 * @module model/InitiateTransferProperties
 * @version 2019-10-01-preview
 */
class InitiateTransferProperties {
    /**
     * Constructs a new <code>InitiateTransferProperties</code>.
     * Request parameters to initiate transfer.
     * @alias module:model/InitiateTransferProperties
     */
    constructor() { 
        
        InitiateTransferProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InitiateTransferProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InitiateTransferProperties} obj Optional instance to populate.
     * @return {module:model/InitiateTransferProperties} The populated <code>InitiateTransferProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InitiateTransferProperties();

            if (data.hasOwnProperty('recipientEmailId')) {
                obj['recipientEmailId'] = ApiClient.convertToType(data['recipientEmailId'], 'String');
            }
            if (data.hasOwnProperty('resellerId')) {
                obj['resellerId'] = ApiClient.convertToType(data['resellerId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InitiateTransferProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InitiateTransferProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['recipientEmailId'] && !(typeof data['recipientEmailId'] === 'string' || data['recipientEmailId'] instanceof String)) {
            throw new Error("Expected the field `recipientEmailId` to be a primitive type in the JSON string but got " + data['recipientEmailId']);
        }
        // ensure the json data is a string
        if (data['resellerId'] && !(typeof data['resellerId'] === 'string' || data['resellerId'] instanceof String)) {
            throw new Error("Expected the field `resellerId` to be a primitive type in the JSON string but got " + data['resellerId']);
        }

        return true;
    }


}



/**
 * Email Id of recipient for transfer.
 * @member {String} recipientEmailId
 */
InitiateTransferProperties.prototype['recipientEmailId'] = undefined;

/**
 * Optional reseller Id for transfer.
 * @member {String} resellerId
 */
InitiateTransferProperties.prototype['resellerId'] = undefined;






export default InitiateTransferProperties;

