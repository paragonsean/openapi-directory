/**
 * BillingManagementClient
 * Billing client provides access to billing resources for Azure subscriptions.
 *
 * The version of the OpenAPI document: 2019-10-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The BillingPropertyProperties model module.
 * @module model/BillingPropertyProperties
 * @version 2019-10-01-preview
 */
class BillingPropertyProperties {
    /**
     * Constructs a new <code>BillingPropertyProperties</code>.
     * The billing property.
     * @alias module:model/BillingPropertyProperties
     */
    constructor() { 
        
        BillingPropertyProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BillingPropertyProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BillingPropertyProperties} obj Optional instance to populate.
     * @return {module:model/BillingPropertyProperties} The populated <code>BillingPropertyProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BillingPropertyProperties();

            if (data.hasOwnProperty('billingAccountDisplayName')) {
                obj['billingAccountDisplayName'] = ApiClient.convertToType(data['billingAccountDisplayName'], 'String');
            }
            if (data.hasOwnProperty('billingAccountId')) {
                obj['billingAccountId'] = ApiClient.convertToType(data['billingAccountId'], 'String');
            }
            if (data.hasOwnProperty('billingProfileDisplayName')) {
                obj['billingProfileDisplayName'] = ApiClient.convertToType(data['billingProfileDisplayName'], 'String');
            }
            if (data.hasOwnProperty('billingProfileId')) {
                obj['billingProfileId'] = ApiClient.convertToType(data['billingProfileId'], 'String');
            }
            if (data.hasOwnProperty('billingTenantId')) {
                obj['billingTenantId'] = ApiClient.convertToType(data['billingTenantId'], 'String');
            }
            if (data.hasOwnProperty('costCenter')) {
                obj['costCenter'] = ApiClient.convertToType(data['costCenter'], 'String');
            }
            if (data.hasOwnProperty('invoiceSectionDisplayName')) {
                obj['invoiceSectionDisplayName'] = ApiClient.convertToType(data['invoiceSectionDisplayName'], 'String');
            }
            if (data.hasOwnProperty('invoiceSectionId')) {
                obj['invoiceSectionId'] = ApiClient.convertToType(data['invoiceSectionId'], 'String');
            }
            if (data.hasOwnProperty('productId')) {
                obj['productId'] = ApiClient.convertToType(data['productId'], 'String');
            }
            if (data.hasOwnProperty('productName')) {
                obj['productName'] = ApiClient.convertToType(data['productName'], 'String');
            }
            if (data.hasOwnProperty('skuDescription')) {
                obj['skuDescription'] = ApiClient.convertToType(data['skuDescription'], 'String');
            }
            if (data.hasOwnProperty('skuId')) {
                obj['skuId'] = ApiClient.convertToType(data['skuId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BillingPropertyProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BillingPropertyProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['billingAccountDisplayName'] && !(typeof data['billingAccountDisplayName'] === 'string' || data['billingAccountDisplayName'] instanceof String)) {
            throw new Error("Expected the field `billingAccountDisplayName` to be a primitive type in the JSON string but got " + data['billingAccountDisplayName']);
        }
        // ensure the json data is a string
        if (data['billingAccountId'] && !(typeof data['billingAccountId'] === 'string' || data['billingAccountId'] instanceof String)) {
            throw new Error("Expected the field `billingAccountId` to be a primitive type in the JSON string but got " + data['billingAccountId']);
        }
        // ensure the json data is a string
        if (data['billingProfileDisplayName'] && !(typeof data['billingProfileDisplayName'] === 'string' || data['billingProfileDisplayName'] instanceof String)) {
            throw new Error("Expected the field `billingProfileDisplayName` to be a primitive type in the JSON string but got " + data['billingProfileDisplayName']);
        }
        // ensure the json data is a string
        if (data['billingProfileId'] && !(typeof data['billingProfileId'] === 'string' || data['billingProfileId'] instanceof String)) {
            throw new Error("Expected the field `billingProfileId` to be a primitive type in the JSON string but got " + data['billingProfileId']);
        }
        // ensure the json data is a string
        if (data['billingTenantId'] && !(typeof data['billingTenantId'] === 'string' || data['billingTenantId'] instanceof String)) {
            throw new Error("Expected the field `billingTenantId` to be a primitive type in the JSON string but got " + data['billingTenantId']);
        }
        // ensure the json data is a string
        if (data['costCenter'] && !(typeof data['costCenter'] === 'string' || data['costCenter'] instanceof String)) {
            throw new Error("Expected the field `costCenter` to be a primitive type in the JSON string but got " + data['costCenter']);
        }
        // ensure the json data is a string
        if (data['invoiceSectionDisplayName'] && !(typeof data['invoiceSectionDisplayName'] === 'string' || data['invoiceSectionDisplayName'] instanceof String)) {
            throw new Error("Expected the field `invoiceSectionDisplayName` to be a primitive type in the JSON string but got " + data['invoiceSectionDisplayName']);
        }
        // ensure the json data is a string
        if (data['invoiceSectionId'] && !(typeof data['invoiceSectionId'] === 'string' || data['invoiceSectionId'] instanceof String)) {
            throw new Error("Expected the field `invoiceSectionId` to be a primitive type in the JSON string but got " + data['invoiceSectionId']);
        }
        // ensure the json data is a string
        if (data['productId'] && !(typeof data['productId'] === 'string' || data['productId'] instanceof String)) {
            throw new Error("Expected the field `productId` to be a primitive type in the JSON string but got " + data['productId']);
        }
        // ensure the json data is a string
        if (data['productName'] && !(typeof data['productName'] === 'string' || data['productName'] instanceof String)) {
            throw new Error("Expected the field `productName` to be a primitive type in the JSON string but got " + data['productName']);
        }
        // ensure the json data is a string
        if (data['skuDescription'] && !(typeof data['skuDescription'] === 'string' || data['skuDescription'] instanceof String)) {
            throw new Error("Expected the field `skuDescription` to be a primitive type in the JSON string but got " + data['skuDescription']);
        }
        // ensure the json data is a string
        if (data['skuId'] && !(typeof data['skuId'] === 'string' || data['skuId'] instanceof String)) {
            throw new Error("Expected the field `skuId` to be a primitive type in the JSON string but got " + data['skuId']);
        }

        return true;
    }


}



/**
 * Billing account display name.
 * @member {String} billingAccountDisplayName
 */
BillingPropertyProperties.prototype['billingAccountDisplayName'] = undefined;

/**
 * Billing account Id.
 * @member {String} billingAccountId
 */
BillingPropertyProperties.prototype['billingAccountId'] = undefined;

/**
 * Billing profile display name.
 * @member {String} billingProfileDisplayName
 */
BillingPropertyProperties.prototype['billingProfileDisplayName'] = undefined;

/**
 * Billing profile Id.
 * @member {String} billingProfileId
 */
BillingPropertyProperties.prototype['billingProfileId'] = undefined;

/**
 * Billing tenant Id.
 * @member {String} billingTenantId
 */
BillingPropertyProperties.prototype['billingTenantId'] = undefined;

/**
 * Cost center name.
 * @member {String} costCenter
 */
BillingPropertyProperties.prototype['costCenter'] = undefined;

/**
 * Invoice Section display name.
 * @member {String} invoiceSectionDisplayName
 */
BillingPropertyProperties.prototype['invoiceSectionDisplayName'] = undefined;

/**
 * Invoice Section Id.
 * @member {String} invoiceSectionId
 */
BillingPropertyProperties.prototype['invoiceSectionId'] = undefined;

/**
 * Product Id.
 * @member {String} productId
 */
BillingPropertyProperties.prototype['productId'] = undefined;

/**
 * Product name.
 * @member {String} productName
 */
BillingPropertyProperties.prototype['productName'] = undefined;

/**
 * SKU description.
 * @member {String} skuDescription
 */
BillingPropertyProperties.prototype['skuDescription'] = undefined;

/**
 * SKU Id.
 * @member {String} skuId
 */
BillingPropertyProperties.prototype['skuId'] = undefined;






export default BillingPropertyProperties;

