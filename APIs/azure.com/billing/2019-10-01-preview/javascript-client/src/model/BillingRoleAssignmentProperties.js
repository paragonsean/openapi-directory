/**
 * BillingManagementClient
 * Billing client provides access to billing resources for Azure subscriptions.
 *
 * The version of the OpenAPI document: 2019-10-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The BillingRoleAssignmentProperties model module.
 * @module model/BillingRoleAssignmentProperties
 * @version 2019-10-01-preview
 */
class BillingRoleAssignmentProperties {
    /**
     * Constructs a new <code>BillingRoleAssignmentProperties</code>.
     * The properties of the a role assignment.
     * @alias module:model/BillingRoleAssignmentProperties
     */
    constructor() { 
        
        BillingRoleAssignmentProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BillingRoleAssignmentProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BillingRoleAssignmentProperties} obj Optional instance to populate.
     * @return {module:model/BillingRoleAssignmentProperties} The populated <code>BillingRoleAssignmentProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BillingRoleAssignmentProperties();

            if (data.hasOwnProperty('createdByPrincipalId')) {
                obj['createdByPrincipalId'] = ApiClient.convertToType(data['createdByPrincipalId'], 'String');
            }
            if (data.hasOwnProperty('createdByPrincipalTenantId')) {
                obj['createdByPrincipalTenantId'] = ApiClient.convertToType(data['createdByPrincipalTenantId'], 'String');
            }
            if (data.hasOwnProperty('createdOn')) {
                obj['createdOn'] = ApiClient.convertToType(data['createdOn'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('principalId')) {
                obj['principalId'] = ApiClient.convertToType(data['principalId'], 'String');
            }
            if (data.hasOwnProperty('roleDefinitionName')) {
                obj['roleDefinitionName'] = ApiClient.convertToType(data['roleDefinitionName'], 'String');
            }
            if (data.hasOwnProperty('scope')) {
                obj['scope'] = ApiClient.convertToType(data['scope'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BillingRoleAssignmentProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BillingRoleAssignmentProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['createdByPrincipalId'] && !(typeof data['createdByPrincipalId'] === 'string' || data['createdByPrincipalId'] instanceof String)) {
            throw new Error("Expected the field `createdByPrincipalId` to be a primitive type in the JSON string but got " + data['createdByPrincipalId']);
        }
        // ensure the json data is a string
        if (data['createdByPrincipalTenantId'] && !(typeof data['createdByPrincipalTenantId'] === 'string' || data['createdByPrincipalTenantId'] instanceof String)) {
            throw new Error("Expected the field `createdByPrincipalTenantId` to be a primitive type in the JSON string but got " + data['createdByPrincipalTenantId']);
        }
        // ensure the json data is a string
        if (data['createdOn'] && !(typeof data['createdOn'] === 'string' || data['createdOn'] instanceof String)) {
            throw new Error("Expected the field `createdOn` to be a primitive type in the JSON string but got " + data['createdOn']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['principalId'] && !(typeof data['principalId'] === 'string' || data['principalId'] instanceof String)) {
            throw new Error("Expected the field `principalId` to be a primitive type in the JSON string but got " + data['principalId']);
        }
        // ensure the json data is a string
        if (data['roleDefinitionName'] && !(typeof data['roleDefinitionName'] === 'string' || data['roleDefinitionName'] instanceof String)) {
            throw new Error("Expected the field `roleDefinitionName` to be a primitive type in the JSON string but got " + data['roleDefinitionName']);
        }
        // ensure the json data is a string
        if (data['scope'] && !(typeof data['scope'] === 'string' || data['scope'] instanceof String)) {
            throw new Error("Expected the field `scope` to be a primitive type in the JSON string but got " + data['scope']);
        }

        return true;
    }


}



/**
 * the creator's principal Id
 * @member {String} createdByPrincipalId
 */
BillingRoleAssignmentProperties.prototype['createdByPrincipalId'] = undefined;

/**
 * the creator's tenant Id
 * @member {String} createdByPrincipalTenantId
 */
BillingRoleAssignmentProperties.prototype['createdByPrincipalTenantId'] = undefined;

/**
 * the date the role assignment is created
 * @member {String} createdOn
 */
BillingRoleAssignmentProperties.prototype['createdOn'] = undefined;

/**
 * the name of the role assignment
 * @member {String} name
 */
BillingRoleAssignmentProperties.prototype['name'] = undefined;

/**
 * The user's principal id that the role gets assigned to
 * @member {String} principalId
 */
BillingRoleAssignmentProperties.prototype['principalId'] = undefined;

/**
 * The role definition id
 * @member {String} roleDefinitionName
 */
BillingRoleAssignmentProperties.prototype['roleDefinitionName'] = undefined;

/**
 * The scope the role get assigned to
 * @member {String} scope
 */
BillingRoleAssignmentProperties.prototype['scope'] = undefined;






export default BillingRoleAssignmentProperties;

