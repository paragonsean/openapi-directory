/**
 * BillingManagementClient
 * Billing client provides access to billing resources for Azure subscriptions.
 *
 * The version of the OpenAPI document: 2019-10-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ProductDetails from './ProductDetails';

/**
 * The AcceptTransferProperties model module.
 * @module model/AcceptTransferProperties
 * @version 2019-10-01-preview
 */
class AcceptTransferProperties {
    /**
     * Constructs a new <code>AcceptTransferProperties</code>.
     * Request parameters to accept transfer.
     * @alias module:model/AcceptTransferProperties
     */
    constructor() { 
        
        AcceptTransferProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AcceptTransferProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AcceptTransferProperties} obj Optional instance to populate.
     * @return {module:model/AcceptTransferProperties} The populated <code>AcceptTransferProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AcceptTransferProperties();

            if (data.hasOwnProperty('productDetails')) {
                obj['productDetails'] = ApiClient.convertToType(data['productDetails'], [ProductDetails]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AcceptTransferProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AcceptTransferProperties</code>.
     */
    static validateJSON(data) {
        if (data['productDetails']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['productDetails'])) {
                throw new Error("Expected the field `productDetails` to be an array in the JSON data but got " + data['productDetails']);
            }
            // validate the optional field `productDetails` (array)
            for (const item of data['productDetails']) {
                ProductDetails.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Request parameters to accept transfer.
 * @member {Array.<module:model/ProductDetails>} productDetails
 */
AcceptTransferProperties.prototype['productDetails'] = undefined;






export default AcceptTransferProperties;

