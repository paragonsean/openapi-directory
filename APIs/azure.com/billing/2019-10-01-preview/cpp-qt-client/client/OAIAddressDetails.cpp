/**
 * BillingManagementClient
 * Billing client provides access to billing resources for Azure subscriptions.
 *
 * The version of the OpenAPI document: 2019-10-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAddressDetails.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAddressDetails::OAIAddressDetails(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAddressDetails::OAIAddressDetails() {
    this->initializeModel();
}

OAIAddressDetails::~OAIAddressDetails() {}

void OAIAddressDetails::initializeModel() {

    m_address_line1_isSet = false;
    m_address_line1_isValid = false;

    m_address_line2_isSet = false;
    m_address_line2_isValid = false;

    m_address_line3_isSet = false;
    m_address_line3_isValid = false;

    m_city_isSet = false;
    m_city_isValid = false;

    m_company_name_isSet = false;
    m_company_name_isValid = false;

    m_country_isSet = false;
    m_country_isValid = false;

    m_first_name_isSet = false;
    m_first_name_isValid = false;

    m_last_name_isSet = false;
    m_last_name_isValid = false;

    m_postal_code_isSet = false;
    m_postal_code_isValid = false;

    m_region_isSet = false;
    m_region_isValid = false;
}

void OAIAddressDetails::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAddressDetails::fromJsonObject(QJsonObject json) {

    m_address_line1_isValid = ::OpenAPI::fromJsonValue(m_address_line1, json[QString("addressLine1")]);
    m_address_line1_isSet = !json[QString("addressLine1")].isNull() && m_address_line1_isValid;

    m_address_line2_isValid = ::OpenAPI::fromJsonValue(m_address_line2, json[QString("addressLine2")]);
    m_address_line2_isSet = !json[QString("addressLine2")].isNull() && m_address_line2_isValid;

    m_address_line3_isValid = ::OpenAPI::fromJsonValue(m_address_line3, json[QString("addressLine3")]);
    m_address_line3_isSet = !json[QString("addressLine3")].isNull() && m_address_line3_isValid;

    m_city_isValid = ::OpenAPI::fromJsonValue(m_city, json[QString("city")]);
    m_city_isSet = !json[QString("city")].isNull() && m_city_isValid;

    m_company_name_isValid = ::OpenAPI::fromJsonValue(m_company_name, json[QString("companyName")]);
    m_company_name_isSet = !json[QString("companyName")].isNull() && m_company_name_isValid;

    m_country_isValid = ::OpenAPI::fromJsonValue(m_country, json[QString("country")]);
    m_country_isSet = !json[QString("country")].isNull() && m_country_isValid;

    m_first_name_isValid = ::OpenAPI::fromJsonValue(m_first_name, json[QString("firstName")]);
    m_first_name_isSet = !json[QString("firstName")].isNull() && m_first_name_isValid;

    m_last_name_isValid = ::OpenAPI::fromJsonValue(m_last_name, json[QString("lastName")]);
    m_last_name_isSet = !json[QString("lastName")].isNull() && m_last_name_isValid;

    m_postal_code_isValid = ::OpenAPI::fromJsonValue(m_postal_code, json[QString("postalCode")]);
    m_postal_code_isSet = !json[QString("postalCode")].isNull() && m_postal_code_isValid;

    m_region_isValid = ::OpenAPI::fromJsonValue(m_region, json[QString("region")]);
    m_region_isSet = !json[QString("region")].isNull() && m_region_isValid;
}

QString OAIAddressDetails::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAddressDetails::asJsonObject() const {
    QJsonObject obj;
    if (m_address_line1_isSet) {
        obj.insert(QString("addressLine1"), ::OpenAPI::toJsonValue(m_address_line1));
    }
    if (m_address_line2_isSet) {
        obj.insert(QString("addressLine2"), ::OpenAPI::toJsonValue(m_address_line2));
    }
    if (m_address_line3_isSet) {
        obj.insert(QString("addressLine3"), ::OpenAPI::toJsonValue(m_address_line3));
    }
    if (m_city_isSet) {
        obj.insert(QString("city"), ::OpenAPI::toJsonValue(m_city));
    }
    if (m_company_name_isSet) {
        obj.insert(QString("companyName"), ::OpenAPI::toJsonValue(m_company_name));
    }
    if (m_country_isSet) {
        obj.insert(QString("country"), ::OpenAPI::toJsonValue(m_country));
    }
    if (m_first_name_isSet) {
        obj.insert(QString("firstName"), ::OpenAPI::toJsonValue(m_first_name));
    }
    if (m_last_name_isSet) {
        obj.insert(QString("lastName"), ::OpenAPI::toJsonValue(m_last_name));
    }
    if (m_postal_code_isSet) {
        obj.insert(QString("postalCode"), ::OpenAPI::toJsonValue(m_postal_code));
    }
    if (m_region_isSet) {
        obj.insert(QString("region"), ::OpenAPI::toJsonValue(m_region));
    }
    return obj;
}

QString OAIAddressDetails::getAddressLine1() const {
    return m_address_line1;
}
void OAIAddressDetails::setAddressLine1(const QString &address_line1) {
    m_address_line1 = address_line1;
    m_address_line1_isSet = true;
}

bool OAIAddressDetails::is_address_line1_Set() const{
    return m_address_line1_isSet;
}

bool OAIAddressDetails::is_address_line1_Valid() const{
    return m_address_line1_isValid;
}

QString OAIAddressDetails::getAddressLine2() const {
    return m_address_line2;
}
void OAIAddressDetails::setAddressLine2(const QString &address_line2) {
    m_address_line2 = address_line2;
    m_address_line2_isSet = true;
}

bool OAIAddressDetails::is_address_line2_Set() const{
    return m_address_line2_isSet;
}

bool OAIAddressDetails::is_address_line2_Valid() const{
    return m_address_line2_isValid;
}

QString OAIAddressDetails::getAddressLine3() const {
    return m_address_line3;
}
void OAIAddressDetails::setAddressLine3(const QString &address_line3) {
    m_address_line3 = address_line3;
    m_address_line3_isSet = true;
}

bool OAIAddressDetails::is_address_line3_Set() const{
    return m_address_line3_isSet;
}

bool OAIAddressDetails::is_address_line3_Valid() const{
    return m_address_line3_isValid;
}

QString OAIAddressDetails::getCity() const {
    return m_city;
}
void OAIAddressDetails::setCity(const QString &city) {
    m_city = city;
    m_city_isSet = true;
}

bool OAIAddressDetails::is_city_Set() const{
    return m_city_isSet;
}

bool OAIAddressDetails::is_city_Valid() const{
    return m_city_isValid;
}

QString OAIAddressDetails::getCompanyName() const {
    return m_company_name;
}
void OAIAddressDetails::setCompanyName(const QString &company_name) {
    m_company_name = company_name;
    m_company_name_isSet = true;
}

bool OAIAddressDetails::is_company_name_Set() const{
    return m_company_name_isSet;
}

bool OAIAddressDetails::is_company_name_Valid() const{
    return m_company_name_isValid;
}

QString OAIAddressDetails::getCountry() const {
    return m_country;
}
void OAIAddressDetails::setCountry(const QString &country) {
    m_country = country;
    m_country_isSet = true;
}

bool OAIAddressDetails::is_country_Set() const{
    return m_country_isSet;
}

bool OAIAddressDetails::is_country_Valid() const{
    return m_country_isValid;
}

QString OAIAddressDetails::getFirstName() const {
    return m_first_name;
}
void OAIAddressDetails::setFirstName(const QString &first_name) {
    m_first_name = first_name;
    m_first_name_isSet = true;
}

bool OAIAddressDetails::is_first_name_Set() const{
    return m_first_name_isSet;
}

bool OAIAddressDetails::is_first_name_Valid() const{
    return m_first_name_isValid;
}

QString OAIAddressDetails::getLastName() const {
    return m_last_name;
}
void OAIAddressDetails::setLastName(const QString &last_name) {
    m_last_name = last_name;
    m_last_name_isSet = true;
}

bool OAIAddressDetails::is_last_name_Set() const{
    return m_last_name_isSet;
}

bool OAIAddressDetails::is_last_name_Valid() const{
    return m_last_name_isValid;
}

QString OAIAddressDetails::getPostalCode() const {
    return m_postal_code;
}
void OAIAddressDetails::setPostalCode(const QString &postal_code) {
    m_postal_code = postal_code;
    m_postal_code_isSet = true;
}

bool OAIAddressDetails::is_postal_code_Set() const{
    return m_postal_code_isSet;
}

bool OAIAddressDetails::is_postal_code_Valid() const{
    return m_postal_code_isValid;
}

QString OAIAddressDetails::getRegion() const {
    return m_region;
}
void OAIAddressDetails::setRegion(const QString &region) {
    m_region = region;
    m_region_isSet = true;
}

bool OAIAddressDetails::is_region_Set() const{
    return m_region_isSet;
}

bool OAIAddressDetails::is_region_Valid() const{
    return m_region_isValid;
}

bool OAIAddressDetails::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_address_line1_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_address_line2_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_address_line3_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_city_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_company_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_country_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_first_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_postal_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_region_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAddressDetails::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
