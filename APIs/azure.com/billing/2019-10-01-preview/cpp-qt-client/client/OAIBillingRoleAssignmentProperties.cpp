/**
 * BillingManagementClient
 * Billing client provides access to billing resources for Azure subscriptions.
 *
 * The version of the OpenAPI document: 2019-10-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBillingRoleAssignmentProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBillingRoleAssignmentProperties::OAIBillingRoleAssignmentProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBillingRoleAssignmentProperties::OAIBillingRoleAssignmentProperties() {
    this->initializeModel();
}

OAIBillingRoleAssignmentProperties::~OAIBillingRoleAssignmentProperties() {}

void OAIBillingRoleAssignmentProperties::initializeModel() {

    m_created_by_principal_id_isSet = false;
    m_created_by_principal_id_isValid = false;

    m_created_by_principal_tenant_id_isSet = false;
    m_created_by_principal_tenant_id_isValid = false;

    m_created_on_isSet = false;
    m_created_on_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_principal_id_isSet = false;
    m_principal_id_isValid = false;

    m_role_definition_name_isSet = false;
    m_role_definition_name_isValid = false;

    m_scope_isSet = false;
    m_scope_isValid = false;
}

void OAIBillingRoleAssignmentProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBillingRoleAssignmentProperties::fromJsonObject(QJsonObject json) {

    m_created_by_principal_id_isValid = ::OpenAPI::fromJsonValue(m_created_by_principal_id, json[QString("createdByPrincipalId")]);
    m_created_by_principal_id_isSet = !json[QString("createdByPrincipalId")].isNull() && m_created_by_principal_id_isValid;

    m_created_by_principal_tenant_id_isValid = ::OpenAPI::fromJsonValue(m_created_by_principal_tenant_id, json[QString("createdByPrincipalTenantId")]);
    m_created_by_principal_tenant_id_isSet = !json[QString("createdByPrincipalTenantId")].isNull() && m_created_by_principal_tenant_id_isValid;

    m_created_on_isValid = ::OpenAPI::fromJsonValue(m_created_on, json[QString("createdOn")]);
    m_created_on_isSet = !json[QString("createdOn")].isNull() && m_created_on_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_principal_id_isValid = ::OpenAPI::fromJsonValue(m_principal_id, json[QString("principalId")]);
    m_principal_id_isSet = !json[QString("principalId")].isNull() && m_principal_id_isValid;

    m_role_definition_name_isValid = ::OpenAPI::fromJsonValue(m_role_definition_name, json[QString("roleDefinitionName")]);
    m_role_definition_name_isSet = !json[QString("roleDefinitionName")].isNull() && m_role_definition_name_isValid;

    m_scope_isValid = ::OpenAPI::fromJsonValue(m_scope, json[QString("scope")]);
    m_scope_isSet = !json[QString("scope")].isNull() && m_scope_isValid;
}

QString OAIBillingRoleAssignmentProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBillingRoleAssignmentProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_created_by_principal_id_isSet) {
        obj.insert(QString("createdByPrincipalId"), ::OpenAPI::toJsonValue(m_created_by_principal_id));
    }
    if (m_created_by_principal_tenant_id_isSet) {
        obj.insert(QString("createdByPrincipalTenantId"), ::OpenAPI::toJsonValue(m_created_by_principal_tenant_id));
    }
    if (m_created_on_isSet) {
        obj.insert(QString("createdOn"), ::OpenAPI::toJsonValue(m_created_on));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_principal_id_isSet) {
        obj.insert(QString("principalId"), ::OpenAPI::toJsonValue(m_principal_id));
    }
    if (m_role_definition_name_isSet) {
        obj.insert(QString("roleDefinitionName"), ::OpenAPI::toJsonValue(m_role_definition_name));
    }
    if (m_scope_isSet) {
        obj.insert(QString("scope"), ::OpenAPI::toJsonValue(m_scope));
    }
    return obj;
}

QString OAIBillingRoleAssignmentProperties::getCreatedByPrincipalId() const {
    return m_created_by_principal_id;
}
void OAIBillingRoleAssignmentProperties::setCreatedByPrincipalId(const QString &created_by_principal_id) {
    m_created_by_principal_id = created_by_principal_id;
    m_created_by_principal_id_isSet = true;
}

bool OAIBillingRoleAssignmentProperties::is_created_by_principal_id_Set() const{
    return m_created_by_principal_id_isSet;
}

bool OAIBillingRoleAssignmentProperties::is_created_by_principal_id_Valid() const{
    return m_created_by_principal_id_isValid;
}

QString OAIBillingRoleAssignmentProperties::getCreatedByPrincipalTenantId() const {
    return m_created_by_principal_tenant_id;
}
void OAIBillingRoleAssignmentProperties::setCreatedByPrincipalTenantId(const QString &created_by_principal_tenant_id) {
    m_created_by_principal_tenant_id = created_by_principal_tenant_id;
    m_created_by_principal_tenant_id_isSet = true;
}

bool OAIBillingRoleAssignmentProperties::is_created_by_principal_tenant_id_Set() const{
    return m_created_by_principal_tenant_id_isSet;
}

bool OAIBillingRoleAssignmentProperties::is_created_by_principal_tenant_id_Valid() const{
    return m_created_by_principal_tenant_id_isValid;
}

QString OAIBillingRoleAssignmentProperties::getCreatedOn() const {
    return m_created_on;
}
void OAIBillingRoleAssignmentProperties::setCreatedOn(const QString &created_on) {
    m_created_on = created_on;
    m_created_on_isSet = true;
}

bool OAIBillingRoleAssignmentProperties::is_created_on_Set() const{
    return m_created_on_isSet;
}

bool OAIBillingRoleAssignmentProperties::is_created_on_Valid() const{
    return m_created_on_isValid;
}

QString OAIBillingRoleAssignmentProperties::getName() const {
    return m_name;
}
void OAIBillingRoleAssignmentProperties::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIBillingRoleAssignmentProperties::is_name_Set() const{
    return m_name_isSet;
}

bool OAIBillingRoleAssignmentProperties::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIBillingRoleAssignmentProperties::getPrincipalId() const {
    return m_principal_id;
}
void OAIBillingRoleAssignmentProperties::setPrincipalId(const QString &principal_id) {
    m_principal_id = principal_id;
    m_principal_id_isSet = true;
}

bool OAIBillingRoleAssignmentProperties::is_principal_id_Set() const{
    return m_principal_id_isSet;
}

bool OAIBillingRoleAssignmentProperties::is_principal_id_Valid() const{
    return m_principal_id_isValid;
}

QString OAIBillingRoleAssignmentProperties::getRoleDefinitionName() const {
    return m_role_definition_name;
}
void OAIBillingRoleAssignmentProperties::setRoleDefinitionName(const QString &role_definition_name) {
    m_role_definition_name = role_definition_name;
    m_role_definition_name_isSet = true;
}

bool OAIBillingRoleAssignmentProperties::is_role_definition_name_Set() const{
    return m_role_definition_name_isSet;
}

bool OAIBillingRoleAssignmentProperties::is_role_definition_name_Valid() const{
    return m_role_definition_name_isValid;
}

QString OAIBillingRoleAssignmentProperties::getScope() const {
    return m_scope;
}
void OAIBillingRoleAssignmentProperties::setScope(const QString &scope) {
    m_scope = scope;
    m_scope_isSet = true;
}

bool OAIBillingRoleAssignmentProperties::is_scope_Set() const{
    return m_scope_isSet;
}

bool OAIBillingRoleAssignmentProperties::is_scope_Valid() const{
    return m_scope_isValid;
}

bool OAIBillingRoleAssignmentProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_created_by_principal_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_by_principal_tenant_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_on_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_principal_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_role_definition_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_scope_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBillingRoleAssignmentProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
