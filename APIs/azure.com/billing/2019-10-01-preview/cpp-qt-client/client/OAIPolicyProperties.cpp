/**
 * BillingManagementClient
 * Billing client provides access to billing resources for Azure subscriptions.
 *
 * The version of the OpenAPI document: 2019-10-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPolicyProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPolicyProperties::OAIPolicyProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPolicyProperties::OAIPolicyProperties() {
    this->initializeModel();
}

OAIPolicyProperties::~OAIPolicyProperties() {}

void OAIPolicyProperties::initializeModel() {

    m_marketplace_purchases_isSet = false;
    m_marketplace_purchases_isValid = false;

    m_reservation_purchases_isSet = false;
    m_reservation_purchases_isValid = false;

    m_view_charges_isSet = false;
    m_view_charges_isValid = false;
}

void OAIPolicyProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPolicyProperties::fromJsonObject(QJsonObject json) {

    m_marketplace_purchases_isValid = ::OpenAPI::fromJsonValue(m_marketplace_purchases, json[QString("marketplacePurchases")]);
    m_marketplace_purchases_isSet = !json[QString("marketplacePurchases")].isNull() && m_marketplace_purchases_isValid;

    m_reservation_purchases_isValid = ::OpenAPI::fromJsonValue(m_reservation_purchases, json[QString("reservationPurchases")]);
    m_reservation_purchases_isSet = !json[QString("reservationPurchases")].isNull() && m_reservation_purchases_isValid;

    m_view_charges_isValid = ::OpenAPI::fromJsonValue(m_view_charges, json[QString("viewCharges")]);
    m_view_charges_isSet = !json[QString("viewCharges")].isNull() && m_view_charges_isValid;
}

QString OAIPolicyProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPolicyProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_marketplace_purchases_isSet) {
        obj.insert(QString("marketplacePurchases"), ::OpenAPI::toJsonValue(m_marketplace_purchases));
    }
    if (m_reservation_purchases_isSet) {
        obj.insert(QString("reservationPurchases"), ::OpenAPI::toJsonValue(m_reservation_purchases));
    }
    if (m_view_charges_isSet) {
        obj.insert(QString("viewCharges"), ::OpenAPI::toJsonValue(m_view_charges));
    }
    return obj;
}

QString OAIPolicyProperties::getMarketplacePurchases() const {
    return m_marketplace_purchases;
}
void OAIPolicyProperties::setMarketplacePurchases(const QString &marketplace_purchases) {
    m_marketplace_purchases = marketplace_purchases;
    m_marketplace_purchases_isSet = true;
}

bool OAIPolicyProperties::is_marketplace_purchases_Set() const{
    return m_marketplace_purchases_isSet;
}

bool OAIPolicyProperties::is_marketplace_purchases_Valid() const{
    return m_marketplace_purchases_isValid;
}

QString OAIPolicyProperties::getReservationPurchases() const {
    return m_reservation_purchases;
}
void OAIPolicyProperties::setReservationPurchases(const QString &reservation_purchases) {
    m_reservation_purchases = reservation_purchases;
    m_reservation_purchases_isSet = true;
}

bool OAIPolicyProperties::is_reservation_purchases_Set() const{
    return m_reservation_purchases_isSet;
}

bool OAIPolicyProperties::is_reservation_purchases_Valid() const{
    return m_reservation_purchases_isValid;
}

QString OAIPolicyProperties::getViewCharges() const {
    return m_view_charges;
}
void OAIPolicyProperties::setViewCharges(const QString &view_charges) {
    m_view_charges = view_charges;
    m_view_charges_isSet = true;
}

bool OAIPolicyProperties::is_view_charges_Set() const{
    return m_view_charges_isSet;
}

bool OAIPolicyProperties::is_view_charges_Valid() const{
    return m_view_charges_isValid;
}

bool OAIPolicyProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_marketplace_purchases_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reservation_purchases_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_view_charges_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPolicyProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
