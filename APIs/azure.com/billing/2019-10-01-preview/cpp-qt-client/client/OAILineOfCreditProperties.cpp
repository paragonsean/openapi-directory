/**
 * BillingManagementClient
 * Billing client provides access to billing resources for Azure subscriptions.
 *
 * The version of the OpenAPI document: 2019-10-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILineOfCreditProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILineOfCreditProperties::OAILineOfCreditProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILineOfCreditProperties::OAILineOfCreditProperties() {
    this->initializeModel();
}

OAILineOfCreditProperties::~OAILineOfCreditProperties() {}

void OAILineOfCreditProperties::initializeModel() {

    m_credit_limit_isSet = false;
    m_credit_limit_isValid = false;

    m_reason_isSet = false;
    m_reason_isValid = false;

    m_remaining_balance_isSet = false;
    m_remaining_balance_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAILineOfCreditProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILineOfCreditProperties::fromJsonObject(QJsonObject json) {

    m_credit_limit_isValid = ::OpenAPI::fromJsonValue(m_credit_limit, json[QString("creditLimit")]);
    m_credit_limit_isSet = !json[QString("creditLimit")].isNull() && m_credit_limit_isValid;

    m_reason_isValid = ::OpenAPI::fromJsonValue(m_reason, json[QString("reason")]);
    m_reason_isSet = !json[QString("reason")].isNull() && m_reason_isValid;

    m_remaining_balance_isValid = ::OpenAPI::fromJsonValue(m_remaining_balance, json[QString("remainingBalance")]);
    m_remaining_balance_isSet = !json[QString("remainingBalance")].isNull() && m_remaining_balance_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;
}

QString OAILineOfCreditProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILineOfCreditProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_credit_limit.isSet()) {
        obj.insert(QString("creditLimit"), ::OpenAPI::toJsonValue(m_credit_limit));
    }
    if (m_reason_isSet) {
        obj.insert(QString("reason"), ::OpenAPI::toJsonValue(m_reason));
    }
    if (m_remaining_balance.isSet()) {
        obj.insert(QString("remainingBalance"), ::OpenAPI::toJsonValue(m_remaining_balance));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    return obj;
}

OAIAmount OAILineOfCreditProperties::getCreditLimit() const {
    return m_credit_limit;
}
void OAILineOfCreditProperties::setCreditLimit(const OAIAmount &credit_limit) {
    m_credit_limit = credit_limit;
    m_credit_limit_isSet = true;
}

bool OAILineOfCreditProperties::is_credit_limit_Set() const{
    return m_credit_limit_isSet;
}

bool OAILineOfCreditProperties::is_credit_limit_Valid() const{
    return m_credit_limit_isValid;
}

QString OAILineOfCreditProperties::getReason() const {
    return m_reason;
}
void OAILineOfCreditProperties::setReason(const QString &reason) {
    m_reason = reason;
    m_reason_isSet = true;
}

bool OAILineOfCreditProperties::is_reason_Set() const{
    return m_reason_isSet;
}

bool OAILineOfCreditProperties::is_reason_Valid() const{
    return m_reason_isValid;
}

OAIAmount OAILineOfCreditProperties::getRemainingBalance() const {
    return m_remaining_balance;
}
void OAILineOfCreditProperties::setRemainingBalance(const OAIAmount &remaining_balance) {
    m_remaining_balance = remaining_balance;
    m_remaining_balance_isSet = true;
}

bool OAILineOfCreditProperties::is_remaining_balance_Set() const{
    return m_remaining_balance_isSet;
}

bool OAILineOfCreditProperties::is_remaining_balance_Valid() const{
    return m_remaining_balance_isValid;
}

QString OAILineOfCreditProperties::getStatus() const {
    return m_status;
}
void OAILineOfCreditProperties::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAILineOfCreditProperties::is_status_Set() const{
    return m_status_isSet;
}

bool OAILineOfCreditProperties::is_status_Valid() const{
    return m_status_isValid;
}

bool OAILineOfCreditProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_credit_limit.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_reason_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_remaining_balance.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILineOfCreditProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
