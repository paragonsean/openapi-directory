/**
 * BillingManagementClient
 * Billing client provides access to billing resources for Azure subscriptions.
 *
 * The version of the OpenAPI document: 2019-10-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#ifndef OAI_OAIBillingRoleDefinitionsApi_H
#define OAI_OAIBillingRoleDefinitionsApi_H

#include "OAIHelpers.h"
#include "OAIHttpRequest.h"
#include "OAIServerConfiguration.h"
#include "OAIOauth.h"

#include "OAIBillingRoleDefinition.h"
#include "OAIBillingRoleDefinitionListResult.h"
#include "OAIErrorResponse.h"
#include <QString>

#include <QObject>
#include <QByteArray>
#include <QStringList>
#include <QList>
#include <QNetworkAccessManager>

namespace OpenAPI {

class OAIBillingRoleDefinitionsApi : public QObject {
    Q_OBJECT

public:
    OAIBillingRoleDefinitionsApi(const int timeOut = 0);
    ~OAIBillingRoleDefinitionsApi();

    void initializeServerConfigs();
    int setDefaultServerValue(int serverIndex,const QString &operation, const QString &variable,const QString &val);
    void setServerIndex(const QString &operation, int serverIndex);
    void setApiKey(const QString &apiKeyName, const QString &apiKey);
    void setBearerToken(const QString &token);
    void setUsername(const QString &username);
    void setPassword(const QString &password);
    void setTimeOut(const int timeOut);
    void setWorkingDirectory(const QString &path);
    void setNetworkAccessManager(QNetworkAccessManager* manager);
    int addServerConfiguration(const QString &operation, const QUrl &url, const QString &description = "", const QMap<QString, OAIServerVariable> &variables = QMap<QString, OAIServerVariable>());
    void setNewServerForAllOperations(const QUrl &url, const QString &description = "", const QMap<QString, OAIServerVariable> &variables =  QMap<QString, OAIServerVariable>());
    void setNewServer(const QString &operation, const QUrl &url, const QString &description = "", const QMap<QString, OAIServerVariable> &variables =  QMap<QString, OAIServerVariable>());
    void addHeaders(const QString &key, const QString &value);
    void enableRequestCompression();
    void enableResponseCompression();
    void abortRequests();
    QString getParamStylePrefix(const QString &style);
    QString getParamStyleSuffix(const QString &style);
    QString getParamStyleDelimiter(const QString &style, const QString &name, bool isExplode);

    /**
    * @param[in]  api_version QString [required]
    * @param[in]  billing_account_name QString [required]
    * @param[in]  billing_role_definition_name QString [required]
    */
    virtual void billingRoleDefinitionsGetByBillingAccount(const QString &api_version, const QString &billing_account_name, const QString &billing_role_definition_name);

    /**
    * @param[in]  api_version QString [required]
    * @param[in]  billing_account_name QString [required]
    * @param[in]  billing_profile_name QString [required]
    * @param[in]  billing_role_definition_name QString [required]
    */
    virtual void billingRoleDefinitionsGetByBillingProfile(const QString &api_version, const QString &billing_account_name, const QString &billing_profile_name, const QString &billing_role_definition_name);

    /**
    * @param[in]  api_version QString [required]
    * @param[in]  billing_account_name QString [required]
    * @param[in]  billing_profile_name QString [required]
    * @param[in]  invoice_section_name QString [required]
    * @param[in]  billing_role_definition_name QString [required]
    */
    virtual void billingRoleDefinitionsGetByInvoiceSection(const QString &api_version, const QString &billing_account_name, const QString &billing_profile_name, const QString &invoice_section_name, const QString &billing_role_definition_name);

    /**
    * @param[in]  api_version QString [required]
    * @param[in]  billing_account_name QString [required]
    */
    virtual void billingRoleDefinitionsListByBillingAccount(const QString &api_version, const QString &billing_account_name);

    /**
    * @param[in]  api_version QString [required]
    * @param[in]  billing_account_name QString [required]
    * @param[in]  billing_profile_name QString [required]
    */
    virtual void billingRoleDefinitionsListByBillingProfile(const QString &api_version, const QString &billing_account_name, const QString &billing_profile_name);

    /**
    * @param[in]  api_version QString [required]
    * @param[in]  billing_account_name QString [required]
    * @param[in]  billing_profile_name QString [required]
    * @param[in]  invoice_section_name QString [required]
    */
    virtual void billingRoleDefinitionsListByInvoiceSection(const QString &api_version, const QString &billing_account_name, const QString &billing_profile_name, const QString &invoice_section_name);


private:
    QMap<QString,int> _serverIndices;
    QMap<QString,QList<OAIServerConfiguration>> _serverConfigs;
    QMap<QString, QString> _apiKeys;
    QString _bearerToken;
    QString _username;
    QString _password;
    int _timeOut;
    QString _workingDirectory;
    QNetworkAccessManager* _manager;
    QMap<QString, QString> _defaultHeaders;
    bool _isResponseCompressionEnabled;
    bool _isRequestCompressionEnabled;
    OAIHttpRequestInput _latestInput;
    OAIHttpRequestWorker *_latestWorker;
    QStringList _latestScope;
    OauthCode _authFlow;
    OauthImplicit _implicitFlow;
    OauthCredentials _credentialFlow;
    OauthPassword _passwordFlow;
    int _OauthMethod = 0;

    void billingRoleDefinitionsGetByBillingAccountCallback(OAIHttpRequestWorker *worker);
    void billingRoleDefinitionsGetByBillingProfileCallback(OAIHttpRequestWorker *worker);
    void billingRoleDefinitionsGetByInvoiceSectionCallback(OAIHttpRequestWorker *worker);
    void billingRoleDefinitionsListByBillingAccountCallback(OAIHttpRequestWorker *worker);
    void billingRoleDefinitionsListByBillingProfileCallback(OAIHttpRequestWorker *worker);
    void billingRoleDefinitionsListByInvoiceSectionCallback(OAIHttpRequestWorker *worker);

Q_SIGNALS:

    void billingRoleDefinitionsGetByBillingAccountSignal(OAIBillingRoleDefinition summary);
    void billingRoleDefinitionsGetByBillingProfileSignal(OAIBillingRoleDefinition summary);
    void billingRoleDefinitionsGetByInvoiceSectionSignal(OAIBillingRoleDefinition summary);
    void billingRoleDefinitionsListByBillingAccountSignal(OAIBillingRoleDefinitionListResult summary);
    void billingRoleDefinitionsListByBillingProfileSignal(OAIBillingRoleDefinitionListResult summary);
    void billingRoleDefinitionsListByInvoiceSectionSignal(OAIBillingRoleDefinitionListResult summary);


    void billingRoleDefinitionsGetByBillingAccountSignalFull(OAIHttpRequestWorker *worker, OAIBillingRoleDefinition summary);
    void billingRoleDefinitionsGetByBillingProfileSignalFull(OAIHttpRequestWorker *worker, OAIBillingRoleDefinition summary);
    void billingRoleDefinitionsGetByInvoiceSectionSignalFull(OAIHttpRequestWorker *worker, OAIBillingRoleDefinition summary);
    void billingRoleDefinitionsListByBillingAccountSignalFull(OAIHttpRequestWorker *worker, OAIBillingRoleDefinitionListResult summary);
    void billingRoleDefinitionsListByBillingProfileSignalFull(OAIHttpRequestWorker *worker, OAIBillingRoleDefinitionListResult summary);
    void billingRoleDefinitionsListByInvoiceSectionSignalFull(OAIHttpRequestWorker *worker, OAIBillingRoleDefinitionListResult summary);

    Q_DECL_DEPRECATED_X("Use billingRoleDefinitionsGetByBillingAccountSignalError() instead")
    void billingRoleDefinitionsGetByBillingAccountSignalE(OAIBillingRoleDefinition summary, QNetworkReply::NetworkError error_type, QString error_str);
    void billingRoleDefinitionsGetByBillingAccountSignalError(OAIBillingRoleDefinition summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use billingRoleDefinitionsGetByBillingProfileSignalError() instead")
    void billingRoleDefinitionsGetByBillingProfileSignalE(OAIBillingRoleDefinition summary, QNetworkReply::NetworkError error_type, QString error_str);
    void billingRoleDefinitionsGetByBillingProfileSignalError(OAIBillingRoleDefinition summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use billingRoleDefinitionsGetByInvoiceSectionSignalError() instead")
    void billingRoleDefinitionsGetByInvoiceSectionSignalE(OAIBillingRoleDefinition summary, QNetworkReply::NetworkError error_type, QString error_str);
    void billingRoleDefinitionsGetByInvoiceSectionSignalError(OAIBillingRoleDefinition summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use billingRoleDefinitionsListByBillingAccountSignalError() instead")
    void billingRoleDefinitionsListByBillingAccountSignalE(OAIBillingRoleDefinitionListResult summary, QNetworkReply::NetworkError error_type, QString error_str);
    void billingRoleDefinitionsListByBillingAccountSignalError(OAIBillingRoleDefinitionListResult summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use billingRoleDefinitionsListByBillingProfileSignalError() instead")
    void billingRoleDefinitionsListByBillingProfileSignalE(OAIBillingRoleDefinitionListResult summary, QNetworkReply::NetworkError error_type, QString error_str);
    void billingRoleDefinitionsListByBillingProfileSignalError(OAIBillingRoleDefinitionListResult summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use billingRoleDefinitionsListByInvoiceSectionSignalError() instead")
    void billingRoleDefinitionsListByInvoiceSectionSignalE(OAIBillingRoleDefinitionListResult summary, QNetworkReply::NetworkError error_type, QString error_str);
    void billingRoleDefinitionsListByInvoiceSectionSignalError(OAIBillingRoleDefinitionListResult summary, QNetworkReply::NetworkError error_type, const QString &error_str);

    Q_DECL_DEPRECATED_X("Use billingRoleDefinitionsGetByBillingAccountSignalErrorFull() instead")
    void billingRoleDefinitionsGetByBillingAccountSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void billingRoleDefinitionsGetByBillingAccountSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use billingRoleDefinitionsGetByBillingProfileSignalErrorFull() instead")
    void billingRoleDefinitionsGetByBillingProfileSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void billingRoleDefinitionsGetByBillingProfileSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use billingRoleDefinitionsGetByInvoiceSectionSignalErrorFull() instead")
    void billingRoleDefinitionsGetByInvoiceSectionSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void billingRoleDefinitionsGetByInvoiceSectionSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use billingRoleDefinitionsListByBillingAccountSignalErrorFull() instead")
    void billingRoleDefinitionsListByBillingAccountSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void billingRoleDefinitionsListByBillingAccountSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use billingRoleDefinitionsListByBillingProfileSignalErrorFull() instead")
    void billingRoleDefinitionsListByBillingProfileSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void billingRoleDefinitionsListByBillingProfileSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use billingRoleDefinitionsListByInvoiceSectionSignalErrorFull() instead")
    void billingRoleDefinitionsListByInvoiceSectionSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void billingRoleDefinitionsListByInvoiceSectionSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);

    void abortRequestsSignal();
    void allPendingRequestsCompleted();

public Q_SLOTS:
    void tokenAvailable();
};

} // namespace OpenAPI
#endif
