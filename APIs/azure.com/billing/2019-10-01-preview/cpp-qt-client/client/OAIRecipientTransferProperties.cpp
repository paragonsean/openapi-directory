/**
 * BillingManagementClient
 * Billing client provides access to billing resources for Azure subscriptions.
 *
 * The version of the OpenAPI document: 2019-10-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRecipientTransferProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRecipientTransferProperties::OAIRecipientTransferProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRecipientTransferProperties::OAIRecipientTransferProperties() {
    this->initializeModel();
}

OAIRecipientTransferProperties::~OAIRecipientTransferProperties() {}

void OAIRecipientTransferProperties::initializeModel() {

    m_allowed_product_type_isSet = false;
    m_allowed_product_type_isValid = false;

    m_canceled_by_isSet = false;
    m_canceled_by_isValid = false;

    m_creation_time_isSet = false;
    m_creation_time_isValid = false;

    m_detailed_transfer_status_isSet = false;
    m_detailed_transfer_status_isValid = false;

    m_expiration_time_isSet = false;
    m_expiration_time_isValid = false;

    m_initiator_customer_type_isSet = false;
    m_initiator_customer_type_isValid = false;

    m_initiator_email_id_isSet = false;
    m_initiator_email_id_isValid = false;

    m_last_modified_time_isSet = false;
    m_last_modified_time_isValid = false;

    m_recipient_email_id_isSet = false;
    m_recipient_email_id_isValid = false;

    m_reseller_id_isSet = false;
    m_reseller_id_isValid = false;

    m_reseller_name_isSet = false;
    m_reseller_name_isValid = false;

    m_transfer_status_isSet = false;
    m_transfer_status_isValid = false;
}

void OAIRecipientTransferProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRecipientTransferProperties::fromJsonObject(QJsonObject json) {

    m_allowed_product_type_isValid = ::OpenAPI::fromJsonValue(m_allowed_product_type, json[QString("allowedProductType")]);
    m_allowed_product_type_isSet = !json[QString("allowedProductType")].isNull() && m_allowed_product_type_isValid;

    m_canceled_by_isValid = ::OpenAPI::fromJsonValue(m_canceled_by, json[QString("canceledBy")]);
    m_canceled_by_isSet = !json[QString("canceledBy")].isNull() && m_canceled_by_isValid;

    m_creation_time_isValid = ::OpenAPI::fromJsonValue(m_creation_time, json[QString("creationTime")]);
    m_creation_time_isSet = !json[QString("creationTime")].isNull() && m_creation_time_isValid;

    m_detailed_transfer_status_isValid = ::OpenAPI::fromJsonValue(m_detailed_transfer_status, json[QString("detailedTransferStatus")]);
    m_detailed_transfer_status_isSet = !json[QString("detailedTransferStatus")].isNull() && m_detailed_transfer_status_isValid;

    m_expiration_time_isValid = ::OpenAPI::fromJsonValue(m_expiration_time, json[QString("expirationTime")]);
    m_expiration_time_isSet = !json[QString("expirationTime")].isNull() && m_expiration_time_isValid;

    m_initiator_customer_type_isValid = ::OpenAPI::fromJsonValue(m_initiator_customer_type, json[QString("initiatorCustomerType")]);
    m_initiator_customer_type_isSet = !json[QString("initiatorCustomerType")].isNull() && m_initiator_customer_type_isValid;

    m_initiator_email_id_isValid = ::OpenAPI::fromJsonValue(m_initiator_email_id, json[QString("initiatorEmailId")]);
    m_initiator_email_id_isSet = !json[QString("initiatorEmailId")].isNull() && m_initiator_email_id_isValid;

    m_last_modified_time_isValid = ::OpenAPI::fromJsonValue(m_last_modified_time, json[QString("lastModifiedTime")]);
    m_last_modified_time_isSet = !json[QString("lastModifiedTime")].isNull() && m_last_modified_time_isValid;

    m_recipient_email_id_isValid = ::OpenAPI::fromJsonValue(m_recipient_email_id, json[QString("recipientEmailId")]);
    m_recipient_email_id_isSet = !json[QString("recipientEmailId")].isNull() && m_recipient_email_id_isValid;

    m_reseller_id_isValid = ::OpenAPI::fromJsonValue(m_reseller_id, json[QString("resellerId")]);
    m_reseller_id_isSet = !json[QString("resellerId")].isNull() && m_reseller_id_isValid;

    m_reseller_name_isValid = ::OpenAPI::fromJsonValue(m_reseller_name, json[QString("resellerName")]);
    m_reseller_name_isSet = !json[QString("resellerName")].isNull() && m_reseller_name_isValid;

    m_transfer_status_isValid = ::OpenAPI::fromJsonValue(m_transfer_status, json[QString("transferStatus")]);
    m_transfer_status_isSet = !json[QString("transferStatus")].isNull() && m_transfer_status_isValid;
}

QString OAIRecipientTransferProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRecipientTransferProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_allowed_product_type.size() > 0) {
        obj.insert(QString("allowedProductType"), ::OpenAPI::toJsonValue(m_allowed_product_type));
    }
    if (m_canceled_by_isSet) {
        obj.insert(QString("canceledBy"), ::OpenAPI::toJsonValue(m_canceled_by));
    }
    if (m_creation_time_isSet) {
        obj.insert(QString("creationTime"), ::OpenAPI::toJsonValue(m_creation_time));
    }
    if (m_detailed_transfer_status.size() > 0) {
        obj.insert(QString("detailedTransferStatus"), ::OpenAPI::toJsonValue(m_detailed_transfer_status));
    }
    if (m_expiration_time_isSet) {
        obj.insert(QString("expirationTime"), ::OpenAPI::toJsonValue(m_expiration_time));
    }
    if (m_initiator_customer_type_isSet) {
        obj.insert(QString("initiatorCustomerType"), ::OpenAPI::toJsonValue(m_initiator_customer_type));
    }
    if (m_initiator_email_id_isSet) {
        obj.insert(QString("initiatorEmailId"), ::OpenAPI::toJsonValue(m_initiator_email_id));
    }
    if (m_last_modified_time_isSet) {
        obj.insert(QString("lastModifiedTime"), ::OpenAPI::toJsonValue(m_last_modified_time));
    }
    if (m_recipient_email_id_isSet) {
        obj.insert(QString("recipientEmailId"), ::OpenAPI::toJsonValue(m_recipient_email_id));
    }
    if (m_reseller_id_isSet) {
        obj.insert(QString("resellerId"), ::OpenAPI::toJsonValue(m_reseller_id));
    }
    if (m_reseller_name_isSet) {
        obj.insert(QString("resellerName"), ::OpenAPI::toJsonValue(m_reseller_name));
    }
    if (m_transfer_status.isSet()) {
        obj.insert(QString("transferStatus"), ::OpenAPI::toJsonValue(m_transfer_status));
    }
    return obj;
}

QList<OAIEligibleProductType> OAIRecipientTransferProperties::getAllowedProductType() const {
    return m_allowed_product_type;
}
void OAIRecipientTransferProperties::setAllowedProductType(const QList<OAIEligibleProductType> &allowed_product_type) {
    m_allowed_product_type = allowed_product_type;
    m_allowed_product_type_isSet = true;
}

bool OAIRecipientTransferProperties::is_allowed_product_type_Set() const{
    return m_allowed_product_type_isSet;
}

bool OAIRecipientTransferProperties::is_allowed_product_type_Valid() const{
    return m_allowed_product_type_isValid;
}

QString OAIRecipientTransferProperties::getCanceledBy() const {
    return m_canceled_by;
}
void OAIRecipientTransferProperties::setCanceledBy(const QString &canceled_by) {
    m_canceled_by = canceled_by;
    m_canceled_by_isSet = true;
}

bool OAIRecipientTransferProperties::is_canceled_by_Set() const{
    return m_canceled_by_isSet;
}

bool OAIRecipientTransferProperties::is_canceled_by_Valid() const{
    return m_canceled_by_isValid;
}

QDateTime OAIRecipientTransferProperties::getCreationTime() const {
    return m_creation_time;
}
void OAIRecipientTransferProperties::setCreationTime(const QDateTime &creation_time) {
    m_creation_time = creation_time;
    m_creation_time_isSet = true;
}

bool OAIRecipientTransferProperties::is_creation_time_Set() const{
    return m_creation_time_isSet;
}

bool OAIRecipientTransferProperties::is_creation_time_Valid() const{
    return m_creation_time_isValid;
}

QList<OAIDetailedTransferStatus> OAIRecipientTransferProperties::getDetailedTransferStatus() const {
    return m_detailed_transfer_status;
}
void OAIRecipientTransferProperties::setDetailedTransferStatus(const QList<OAIDetailedTransferStatus> &detailed_transfer_status) {
    m_detailed_transfer_status = detailed_transfer_status;
    m_detailed_transfer_status_isSet = true;
}

bool OAIRecipientTransferProperties::is_detailed_transfer_status_Set() const{
    return m_detailed_transfer_status_isSet;
}

bool OAIRecipientTransferProperties::is_detailed_transfer_status_Valid() const{
    return m_detailed_transfer_status_isValid;
}

QDateTime OAIRecipientTransferProperties::getExpirationTime() const {
    return m_expiration_time;
}
void OAIRecipientTransferProperties::setExpirationTime(const QDateTime &expiration_time) {
    m_expiration_time = expiration_time;
    m_expiration_time_isSet = true;
}

bool OAIRecipientTransferProperties::is_expiration_time_Set() const{
    return m_expiration_time_isSet;
}

bool OAIRecipientTransferProperties::is_expiration_time_Valid() const{
    return m_expiration_time_isValid;
}

QString OAIRecipientTransferProperties::getInitiatorCustomerType() const {
    return m_initiator_customer_type;
}
void OAIRecipientTransferProperties::setInitiatorCustomerType(const QString &initiator_customer_type) {
    m_initiator_customer_type = initiator_customer_type;
    m_initiator_customer_type_isSet = true;
}

bool OAIRecipientTransferProperties::is_initiator_customer_type_Set() const{
    return m_initiator_customer_type_isSet;
}

bool OAIRecipientTransferProperties::is_initiator_customer_type_Valid() const{
    return m_initiator_customer_type_isValid;
}

QString OAIRecipientTransferProperties::getInitiatorEmailId() const {
    return m_initiator_email_id;
}
void OAIRecipientTransferProperties::setInitiatorEmailId(const QString &initiator_email_id) {
    m_initiator_email_id = initiator_email_id;
    m_initiator_email_id_isSet = true;
}

bool OAIRecipientTransferProperties::is_initiator_email_id_Set() const{
    return m_initiator_email_id_isSet;
}

bool OAIRecipientTransferProperties::is_initiator_email_id_Valid() const{
    return m_initiator_email_id_isValid;
}

QDateTime OAIRecipientTransferProperties::getLastModifiedTime() const {
    return m_last_modified_time;
}
void OAIRecipientTransferProperties::setLastModifiedTime(const QDateTime &last_modified_time) {
    m_last_modified_time = last_modified_time;
    m_last_modified_time_isSet = true;
}

bool OAIRecipientTransferProperties::is_last_modified_time_Set() const{
    return m_last_modified_time_isSet;
}

bool OAIRecipientTransferProperties::is_last_modified_time_Valid() const{
    return m_last_modified_time_isValid;
}

QString OAIRecipientTransferProperties::getRecipientEmailId() const {
    return m_recipient_email_id;
}
void OAIRecipientTransferProperties::setRecipientEmailId(const QString &recipient_email_id) {
    m_recipient_email_id = recipient_email_id;
    m_recipient_email_id_isSet = true;
}

bool OAIRecipientTransferProperties::is_recipient_email_id_Set() const{
    return m_recipient_email_id_isSet;
}

bool OAIRecipientTransferProperties::is_recipient_email_id_Valid() const{
    return m_recipient_email_id_isValid;
}

QString OAIRecipientTransferProperties::getResellerId() const {
    return m_reseller_id;
}
void OAIRecipientTransferProperties::setResellerId(const QString &reseller_id) {
    m_reseller_id = reseller_id;
    m_reseller_id_isSet = true;
}

bool OAIRecipientTransferProperties::is_reseller_id_Set() const{
    return m_reseller_id_isSet;
}

bool OAIRecipientTransferProperties::is_reseller_id_Valid() const{
    return m_reseller_id_isValid;
}

QString OAIRecipientTransferProperties::getResellerName() const {
    return m_reseller_name;
}
void OAIRecipientTransferProperties::setResellerName(const QString &reseller_name) {
    m_reseller_name = reseller_name;
    m_reseller_name_isSet = true;
}

bool OAIRecipientTransferProperties::is_reseller_name_Set() const{
    return m_reseller_name_isSet;
}

bool OAIRecipientTransferProperties::is_reseller_name_Valid() const{
    return m_reseller_name_isValid;
}

OAITransferStatus OAIRecipientTransferProperties::getTransferStatus() const {
    return m_transfer_status;
}
void OAIRecipientTransferProperties::setTransferStatus(const OAITransferStatus &transfer_status) {
    m_transfer_status = transfer_status;
    m_transfer_status_isSet = true;
}

bool OAIRecipientTransferProperties::is_transfer_status_Set() const{
    return m_transfer_status_isSet;
}

bool OAIRecipientTransferProperties::is_transfer_status_Valid() const{
    return m_transfer_status_isValid;
}

bool OAIRecipientTransferProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_allowed_product_type.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_canceled_by_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_creation_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_detailed_transfer_status.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_expiration_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_initiator_customer_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_initiator_email_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_recipient_email_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reseller_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reseller_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transfer_status.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRecipientTransferProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
