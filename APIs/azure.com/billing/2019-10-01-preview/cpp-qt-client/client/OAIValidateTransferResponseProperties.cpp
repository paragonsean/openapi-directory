/**
 * BillingManagementClient
 * Billing client provides access to billing resources for Azure subscriptions.
 *
 * The version of the OpenAPI document: 2019-10-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIValidateTransferResponseProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIValidateTransferResponseProperties::OAIValidateTransferResponseProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIValidateTransferResponseProperties::OAIValidateTransferResponseProperties() {
    this->initializeModel();
}

OAIValidateTransferResponseProperties::~OAIValidateTransferResponseProperties() {}

void OAIValidateTransferResponseProperties::initializeModel() {

    m_product_id_isSet = false;
    m_product_id_isValid = false;

    m_results_isSet = false;
    m_results_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAIValidateTransferResponseProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIValidateTransferResponseProperties::fromJsonObject(QJsonObject json) {

    m_product_id_isValid = ::OpenAPI::fromJsonValue(m_product_id, json[QString("productId")]);
    m_product_id_isSet = !json[QString("productId")].isNull() && m_product_id_isValid;

    m_results_isValid = ::OpenAPI::fromJsonValue(m_results, json[QString("results")]);
    m_results_isSet = !json[QString("results")].isNull() && m_results_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;
}

QString OAIValidateTransferResponseProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIValidateTransferResponseProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_product_id_isSet) {
        obj.insert(QString("productId"), ::OpenAPI::toJsonValue(m_product_id));
    }
    if (m_results.size() > 0) {
        obj.insert(QString("results"), ::OpenAPI::toJsonValue(m_results));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    return obj;
}

QString OAIValidateTransferResponseProperties::getProductId() const {
    return m_product_id;
}
void OAIValidateTransferResponseProperties::setProductId(const QString &product_id) {
    m_product_id = product_id;
    m_product_id_isSet = true;
}

bool OAIValidateTransferResponseProperties::is_product_id_Set() const{
    return m_product_id_isSet;
}

bool OAIValidateTransferResponseProperties::is_product_id_Valid() const{
    return m_product_id_isValid;
}

QList<OAIValidationResultProperties> OAIValidateTransferResponseProperties::getResults() const {
    return m_results;
}
void OAIValidateTransferResponseProperties::setResults(const QList<OAIValidationResultProperties> &results) {
    m_results = results;
    m_results_isSet = true;
}

bool OAIValidateTransferResponseProperties::is_results_Set() const{
    return m_results_isSet;
}

bool OAIValidateTransferResponseProperties::is_results_Valid() const{
    return m_results_isValid;
}

QString OAIValidateTransferResponseProperties::getStatus() const {
    return m_status;
}
void OAIValidateTransferResponseProperties::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIValidateTransferResponseProperties::is_status_Set() const{
    return m_status_isSet;
}

bool OAIValidateTransferResponseProperties::is_status_Valid() const{
    return m_status_isValid;
}

bool OAIValidateTransferResponseProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_product_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_results.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIValidateTransferResponseProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
