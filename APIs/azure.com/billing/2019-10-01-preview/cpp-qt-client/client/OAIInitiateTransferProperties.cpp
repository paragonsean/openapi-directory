/**
 * BillingManagementClient
 * Billing client provides access to billing resources for Azure subscriptions.
 *
 * The version of the OpenAPI document: 2019-10-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInitiateTransferProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInitiateTransferProperties::OAIInitiateTransferProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInitiateTransferProperties::OAIInitiateTransferProperties() {
    this->initializeModel();
}

OAIInitiateTransferProperties::~OAIInitiateTransferProperties() {}

void OAIInitiateTransferProperties::initializeModel() {

    m_recipient_email_id_isSet = false;
    m_recipient_email_id_isValid = false;

    m_reseller_id_isSet = false;
    m_reseller_id_isValid = false;
}

void OAIInitiateTransferProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIInitiateTransferProperties::fromJsonObject(QJsonObject json) {

    m_recipient_email_id_isValid = ::OpenAPI::fromJsonValue(m_recipient_email_id, json[QString("recipientEmailId")]);
    m_recipient_email_id_isSet = !json[QString("recipientEmailId")].isNull() && m_recipient_email_id_isValid;

    m_reseller_id_isValid = ::OpenAPI::fromJsonValue(m_reseller_id, json[QString("resellerId")]);
    m_reseller_id_isSet = !json[QString("resellerId")].isNull() && m_reseller_id_isValid;
}

QString OAIInitiateTransferProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIInitiateTransferProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_recipient_email_id_isSet) {
        obj.insert(QString("recipientEmailId"), ::OpenAPI::toJsonValue(m_recipient_email_id));
    }
    if (m_reseller_id_isSet) {
        obj.insert(QString("resellerId"), ::OpenAPI::toJsonValue(m_reseller_id));
    }
    return obj;
}

QString OAIInitiateTransferProperties::getRecipientEmailId() const {
    return m_recipient_email_id;
}
void OAIInitiateTransferProperties::setRecipientEmailId(const QString &recipient_email_id) {
    m_recipient_email_id = recipient_email_id;
    m_recipient_email_id_isSet = true;
}

bool OAIInitiateTransferProperties::is_recipient_email_id_Set() const{
    return m_recipient_email_id_isSet;
}

bool OAIInitiateTransferProperties::is_recipient_email_id_Valid() const{
    return m_recipient_email_id_isValid;
}

QString OAIInitiateTransferProperties::getResellerId() const {
    return m_reseller_id;
}
void OAIInitiateTransferProperties::setResellerId(const QString &reseller_id) {
    m_reseller_id = reseller_id;
    m_reseller_id_isSet = true;
}

bool OAIInitiateTransferProperties::is_reseller_id_Set() const{
    return m_reseller_id_isSet;
}

bool OAIInitiateTransferProperties::is_reseller_id_Valid() const{
    return m_reseller_id_isValid;
}

bool OAIInitiateTransferProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_recipient_email_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reseller_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIInitiateTransferProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
