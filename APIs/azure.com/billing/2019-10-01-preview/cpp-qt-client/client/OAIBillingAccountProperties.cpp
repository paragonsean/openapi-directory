/**
 * BillingManagementClient
 * Billing client provides access to billing resources for Azure subscriptions.
 *
 * The version of the OpenAPI document: 2019-10-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBillingAccountProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBillingAccountProperties::OAIBillingAccountProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBillingAccountProperties::OAIBillingAccountProperties() {
    this->initializeModel();
}

OAIBillingAccountProperties::~OAIBillingAccountProperties() {}

void OAIBillingAccountProperties::initializeModel() {

    m_address_isSet = false;
    m_address_isValid = false;

    m_agreement_type_isSet = false;
    m_agreement_type_isValid = false;

    m_billing_profiles_isSet = false;
    m_billing_profiles_isValid = false;

    m_customer_type_isSet = false;
    m_customer_type_isValid = false;

    m_departments_isSet = false;
    m_departments_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_enrollment_accounts_isSet = false;
    m_enrollment_accounts_isValid = false;

    m_enrollment_details_isSet = false;
    m_enrollment_details_isValid = false;

    m_organization_id_isSet = false;
    m_organization_id_isValid = false;
}

void OAIBillingAccountProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBillingAccountProperties::fromJsonObject(QJsonObject json) {

    m_address_isValid = ::OpenAPI::fromJsonValue(m_address, json[QString("address")]);
    m_address_isSet = !json[QString("address")].isNull() && m_address_isValid;

    m_agreement_type_isValid = ::OpenAPI::fromJsonValue(m_agreement_type, json[QString("agreementType")]);
    m_agreement_type_isSet = !json[QString("agreementType")].isNull() && m_agreement_type_isValid;

    m_billing_profiles_isValid = ::OpenAPI::fromJsonValue(m_billing_profiles, json[QString("billingProfiles")]);
    m_billing_profiles_isSet = !json[QString("billingProfiles")].isNull() && m_billing_profiles_isValid;

    m_customer_type_isValid = ::OpenAPI::fromJsonValue(m_customer_type, json[QString("customerType")]);
    m_customer_type_isSet = !json[QString("customerType")].isNull() && m_customer_type_isValid;

    m_departments_isValid = ::OpenAPI::fromJsonValue(m_departments, json[QString("departments")]);
    m_departments_isSet = !json[QString("departments")].isNull() && m_departments_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_enrollment_accounts_isValid = ::OpenAPI::fromJsonValue(m_enrollment_accounts, json[QString("enrollmentAccounts")]);
    m_enrollment_accounts_isSet = !json[QString("enrollmentAccounts")].isNull() && m_enrollment_accounts_isValid;

    m_enrollment_details_isValid = ::OpenAPI::fromJsonValue(m_enrollment_details, json[QString("enrollmentDetails")]);
    m_enrollment_details_isSet = !json[QString("enrollmentDetails")].isNull() && m_enrollment_details_isValid;

    m_organization_id_isValid = ::OpenAPI::fromJsonValue(m_organization_id, json[QString("organizationId")]);
    m_organization_id_isSet = !json[QString("organizationId")].isNull() && m_organization_id_isValid;
}

QString OAIBillingAccountProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBillingAccountProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_address.isSet()) {
        obj.insert(QString("address"), ::OpenAPI::toJsonValue(m_address));
    }
    if (m_agreement_type_isSet) {
        obj.insert(QString("agreementType"), ::OpenAPI::toJsonValue(m_agreement_type));
    }
    if (m_billing_profiles.size() > 0) {
        obj.insert(QString("billingProfiles"), ::OpenAPI::toJsonValue(m_billing_profiles));
    }
    if (m_customer_type_isSet) {
        obj.insert(QString("customerType"), ::OpenAPI::toJsonValue(m_customer_type));
    }
    if (m_departments.size() > 0) {
        obj.insert(QString("departments"), ::OpenAPI::toJsonValue(m_departments));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_enrollment_accounts.size() > 0) {
        obj.insert(QString("enrollmentAccounts"), ::OpenAPI::toJsonValue(m_enrollment_accounts));
    }
    if (m_enrollment_details.isSet()) {
        obj.insert(QString("enrollmentDetails"), ::OpenAPI::toJsonValue(m_enrollment_details));
    }
    if (m_organization_id_isSet) {
        obj.insert(QString("organizationId"), ::OpenAPI::toJsonValue(m_organization_id));
    }
    return obj;
}

OAIAddressDetails OAIBillingAccountProperties::getAddress() const {
    return m_address;
}
void OAIBillingAccountProperties::setAddress(const OAIAddressDetails &address) {
    m_address = address;
    m_address_isSet = true;
}

bool OAIBillingAccountProperties::is_address_Set() const{
    return m_address_isSet;
}

bool OAIBillingAccountProperties::is_address_Valid() const{
    return m_address_isValid;
}

QString OAIBillingAccountProperties::getAgreementType() const {
    return m_agreement_type;
}
void OAIBillingAccountProperties::setAgreementType(const QString &agreement_type) {
    m_agreement_type = agreement_type;
    m_agreement_type_isSet = true;
}

bool OAIBillingAccountProperties::is_agreement_type_Set() const{
    return m_agreement_type_isSet;
}

bool OAIBillingAccountProperties::is_agreement_type_Valid() const{
    return m_agreement_type_isValid;
}

QList<OAIBillingProfile> OAIBillingAccountProperties::getBillingProfiles() const {
    return m_billing_profiles;
}
void OAIBillingAccountProperties::setBillingProfiles(const QList<OAIBillingProfile> &billing_profiles) {
    m_billing_profiles = billing_profiles;
    m_billing_profiles_isSet = true;
}

bool OAIBillingAccountProperties::is_billing_profiles_Set() const{
    return m_billing_profiles_isSet;
}

bool OAIBillingAccountProperties::is_billing_profiles_Valid() const{
    return m_billing_profiles_isValid;
}

QString OAIBillingAccountProperties::getCustomerType() const {
    return m_customer_type;
}
void OAIBillingAccountProperties::setCustomerType(const QString &customer_type) {
    m_customer_type = customer_type;
    m_customer_type_isSet = true;
}

bool OAIBillingAccountProperties::is_customer_type_Set() const{
    return m_customer_type_isSet;
}

bool OAIBillingAccountProperties::is_customer_type_Valid() const{
    return m_customer_type_isValid;
}

QList<OAIDepartment> OAIBillingAccountProperties::getDepartments() const {
    return m_departments;
}
void OAIBillingAccountProperties::setDepartments(const QList<OAIDepartment> &departments) {
    m_departments = departments;
    m_departments_isSet = true;
}

bool OAIBillingAccountProperties::is_departments_Set() const{
    return m_departments_isSet;
}

bool OAIBillingAccountProperties::is_departments_Valid() const{
    return m_departments_isValid;
}

QString OAIBillingAccountProperties::getDisplayName() const {
    return m_display_name;
}
void OAIBillingAccountProperties::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIBillingAccountProperties::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIBillingAccountProperties::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QList<OAIEnrollmentAccount> OAIBillingAccountProperties::getEnrollmentAccounts() const {
    return m_enrollment_accounts;
}
void OAIBillingAccountProperties::setEnrollmentAccounts(const QList<OAIEnrollmentAccount> &enrollment_accounts) {
    m_enrollment_accounts = enrollment_accounts;
    m_enrollment_accounts_isSet = true;
}

bool OAIBillingAccountProperties::is_enrollment_accounts_Set() const{
    return m_enrollment_accounts_isSet;
}

bool OAIBillingAccountProperties::is_enrollment_accounts_Valid() const{
    return m_enrollment_accounts_isValid;
}

OAIEnrollment OAIBillingAccountProperties::getEnrollmentDetails() const {
    return m_enrollment_details;
}
void OAIBillingAccountProperties::setEnrollmentDetails(const OAIEnrollment &enrollment_details) {
    m_enrollment_details = enrollment_details;
    m_enrollment_details_isSet = true;
}

bool OAIBillingAccountProperties::is_enrollment_details_Set() const{
    return m_enrollment_details_isSet;
}

bool OAIBillingAccountProperties::is_enrollment_details_Valid() const{
    return m_enrollment_details_isValid;
}

QString OAIBillingAccountProperties::getOrganizationId() const {
    return m_organization_id;
}
void OAIBillingAccountProperties::setOrganizationId(const QString &organization_id) {
    m_organization_id = organization_id;
    m_organization_id_isSet = true;
}

bool OAIBillingAccountProperties::is_organization_id_Set() const{
    return m_organization_id_isSet;
}

bool OAIBillingAccountProperties::is_organization_id_Valid() const{
    return m_organization_id_isValid;
}

bool OAIBillingAccountProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_address.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_agreement_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_billing_profiles.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_customer_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_departments.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enrollment_accounts.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_enrollment_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_organization_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBillingAccountProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
