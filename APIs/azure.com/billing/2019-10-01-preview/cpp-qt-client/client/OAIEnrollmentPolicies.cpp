/**
 * BillingManagementClient
 * Billing client provides access to billing resources for Azure subscriptions.
 *
 * The version of the OpenAPI document: 2019-10-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEnrollmentPolicies.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEnrollmentPolicies::OAIEnrollmentPolicies(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEnrollmentPolicies::OAIEnrollmentPolicies() {
    this->initializeModel();
}

OAIEnrollmentPolicies::~OAIEnrollmentPolicies() {}

void OAIEnrollmentPolicies::initializeModel() {

    m_account_owner_view_charges_isSet = false;
    m_account_owner_view_charges_isValid = false;

    m_department_admin_view_charges_isSet = false;
    m_department_admin_view_charges_isValid = false;

    m_marketplaces_enabled_isSet = false;
    m_marketplaces_enabled_isValid = false;

    m_reserved_instances_enabled_isSet = false;
    m_reserved_instances_enabled_isValid = false;
}

void OAIEnrollmentPolicies::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEnrollmentPolicies::fromJsonObject(QJsonObject json) {

    m_account_owner_view_charges_isValid = ::OpenAPI::fromJsonValue(m_account_owner_view_charges, json[QString("accountOwnerViewCharges")]);
    m_account_owner_view_charges_isSet = !json[QString("accountOwnerViewCharges")].isNull() && m_account_owner_view_charges_isValid;

    m_department_admin_view_charges_isValid = ::OpenAPI::fromJsonValue(m_department_admin_view_charges, json[QString("departmentAdminViewCharges")]);
    m_department_admin_view_charges_isSet = !json[QString("departmentAdminViewCharges")].isNull() && m_department_admin_view_charges_isValid;

    m_marketplaces_enabled_isValid = ::OpenAPI::fromJsonValue(m_marketplaces_enabled, json[QString("marketplacesEnabled")]);
    m_marketplaces_enabled_isSet = !json[QString("marketplacesEnabled")].isNull() && m_marketplaces_enabled_isValid;

    m_reserved_instances_enabled_isValid = ::OpenAPI::fromJsonValue(m_reserved_instances_enabled, json[QString("reservedInstancesEnabled")]);
    m_reserved_instances_enabled_isSet = !json[QString("reservedInstancesEnabled")].isNull() && m_reserved_instances_enabled_isValid;
}

QString OAIEnrollmentPolicies::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEnrollmentPolicies::asJsonObject() const {
    QJsonObject obj;
    if (m_account_owner_view_charges_isSet) {
        obj.insert(QString("accountOwnerViewCharges"), ::OpenAPI::toJsonValue(m_account_owner_view_charges));
    }
    if (m_department_admin_view_charges_isSet) {
        obj.insert(QString("departmentAdminViewCharges"), ::OpenAPI::toJsonValue(m_department_admin_view_charges));
    }
    if (m_marketplaces_enabled_isSet) {
        obj.insert(QString("marketplacesEnabled"), ::OpenAPI::toJsonValue(m_marketplaces_enabled));
    }
    if (m_reserved_instances_enabled_isSet) {
        obj.insert(QString("reservedInstancesEnabled"), ::OpenAPI::toJsonValue(m_reserved_instances_enabled));
    }
    return obj;
}

bool OAIEnrollmentPolicies::isAccountOwnerViewCharges() const {
    return m_account_owner_view_charges;
}
void OAIEnrollmentPolicies::setAccountOwnerViewCharges(const bool &account_owner_view_charges) {
    m_account_owner_view_charges = account_owner_view_charges;
    m_account_owner_view_charges_isSet = true;
}

bool OAIEnrollmentPolicies::is_account_owner_view_charges_Set() const{
    return m_account_owner_view_charges_isSet;
}

bool OAIEnrollmentPolicies::is_account_owner_view_charges_Valid() const{
    return m_account_owner_view_charges_isValid;
}

bool OAIEnrollmentPolicies::isDepartmentAdminViewCharges() const {
    return m_department_admin_view_charges;
}
void OAIEnrollmentPolicies::setDepartmentAdminViewCharges(const bool &department_admin_view_charges) {
    m_department_admin_view_charges = department_admin_view_charges;
    m_department_admin_view_charges_isSet = true;
}

bool OAIEnrollmentPolicies::is_department_admin_view_charges_Set() const{
    return m_department_admin_view_charges_isSet;
}

bool OAIEnrollmentPolicies::is_department_admin_view_charges_Valid() const{
    return m_department_admin_view_charges_isValid;
}

bool OAIEnrollmentPolicies::isMarketplacesEnabled() const {
    return m_marketplaces_enabled;
}
void OAIEnrollmentPolicies::setMarketplacesEnabled(const bool &marketplaces_enabled) {
    m_marketplaces_enabled = marketplaces_enabled;
    m_marketplaces_enabled_isSet = true;
}

bool OAIEnrollmentPolicies::is_marketplaces_enabled_Set() const{
    return m_marketplaces_enabled_isSet;
}

bool OAIEnrollmentPolicies::is_marketplaces_enabled_Valid() const{
    return m_marketplaces_enabled_isValid;
}

bool OAIEnrollmentPolicies::isReservedInstancesEnabled() const {
    return m_reserved_instances_enabled;
}
void OAIEnrollmentPolicies::setReservedInstancesEnabled(const bool &reserved_instances_enabled) {
    m_reserved_instances_enabled = reserved_instances_enabled;
    m_reserved_instances_enabled_isSet = true;
}

bool OAIEnrollmentPolicies::is_reserved_instances_enabled_Set() const{
    return m_reserved_instances_enabled_isSet;
}

bool OAIEnrollmentPolicies::is_reserved_instances_enabled_Valid() const{
    return m_reserved_instances_enabled_isValid;
}

bool OAIEnrollmentPolicies::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_owner_view_charges_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_department_admin_view_charges_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_marketplaces_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reserved_instances_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEnrollmentPolicies::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
