/**
 * BillingManagementClient
 * Billing client provides access to billing resources for Azure subscriptions.
 *
 * The version of the OpenAPI document: 2019-10-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAcceptTransferProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAcceptTransferProperties::OAIAcceptTransferProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAcceptTransferProperties::OAIAcceptTransferProperties() {
    this->initializeModel();
}

OAIAcceptTransferProperties::~OAIAcceptTransferProperties() {}

void OAIAcceptTransferProperties::initializeModel() {

    m_product_details_isSet = false;
    m_product_details_isValid = false;
}

void OAIAcceptTransferProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAcceptTransferProperties::fromJsonObject(QJsonObject json) {

    m_product_details_isValid = ::OpenAPI::fromJsonValue(m_product_details, json[QString("productDetails")]);
    m_product_details_isSet = !json[QString("productDetails")].isNull() && m_product_details_isValid;
}

QString OAIAcceptTransferProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAcceptTransferProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_product_details.size() > 0) {
        obj.insert(QString("productDetails"), ::OpenAPI::toJsonValue(m_product_details));
    }
    return obj;
}

QList<OAIProductDetails> OAIAcceptTransferProperties::getProductDetails() const {
    return m_product_details;
}
void OAIAcceptTransferProperties::setProductDetails(const QList<OAIProductDetails> &product_details) {
    m_product_details = product_details;
    m_product_details_isSet = true;
}

bool OAIAcceptTransferProperties::is_product_details_Set() const{
    return m_product_details_isSet;
}

bool OAIAcceptTransferProperties::is_product_details_Valid() const{
    return m_product_details_isValid;
}

bool OAIAcceptTransferProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_product_details.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAcceptTransferProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
