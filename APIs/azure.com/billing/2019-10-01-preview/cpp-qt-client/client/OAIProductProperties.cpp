/**
 * BillingManagementClient
 * Billing client provides access to billing resources for Azure subscriptions.
 *
 * The version of the OpenAPI document: 2019-10-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProductProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProductProperties::OAIProductProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProductProperties::OAIProductProperties() {
    this->initializeModel();
}

OAIProductProperties::~OAIProductProperties() {}

void OAIProductProperties::initializeModel() {

    m_availability_id_isSet = false;
    m_availability_id_isValid = false;

    m_billing_frequency_isSet = false;
    m_billing_frequency_isValid = false;

    m_billing_profile_display_name_isSet = false;
    m_billing_profile_display_name_isValid = false;

    m_billing_profile_id_isSet = false;
    m_billing_profile_id_isValid = false;

    m_customer_display_name_isSet = false;
    m_customer_display_name_isValid = false;

    m_customer_id_isSet = false;
    m_customer_id_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_end_date_isSet = false;
    m_end_date_isValid = false;

    m_invoice_section_display_name_isSet = false;
    m_invoice_section_display_name_isValid = false;

    m_invoice_section_id_isSet = false;
    m_invoice_section_id_isValid = false;

    m_last_charge_isSet = false;
    m_last_charge_isValid = false;

    m_last_charge_date_isSet = false;
    m_last_charge_date_isValid = false;

    m_parent_product_id_isSet = false;
    m_parent_product_id_isValid = false;

    m_product_type_isSet = false;
    m_product_type_isValid = false;

    m_product_type_id_isSet = false;
    m_product_type_id_isValid = false;

    m_purchase_date_isSet = false;
    m_purchase_date_isValid = false;

    m_quantity_isSet = false;
    m_quantity_isValid = false;

    m_reseller_isSet = false;
    m_reseller_isValid = false;

    m_sku_description_isSet = false;
    m_sku_description_isValid = false;

    m_sku_id_isSet = false;
    m_sku_id_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAIProductProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProductProperties::fromJsonObject(QJsonObject json) {

    m_availability_id_isValid = ::OpenAPI::fromJsonValue(m_availability_id, json[QString("availabilityId")]);
    m_availability_id_isSet = !json[QString("availabilityId")].isNull() && m_availability_id_isValid;

    m_billing_frequency_isValid = ::OpenAPI::fromJsonValue(m_billing_frequency, json[QString("billingFrequency")]);
    m_billing_frequency_isSet = !json[QString("billingFrequency")].isNull() && m_billing_frequency_isValid;

    m_billing_profile_display_name_isValid = ::OpenAPI::fromJsonValue(m_billing_profile_display_name, json[QString("billingProfileDisplayName")]);
    m_billing_profile_display_name_isSet = !json[QString("billingProfileDisplayName")].isNull() && m_billing_profile_display_name_isValid;

    m_billing_profile_id_isValid = ::OpenAPI::fromJsonValue(m_billing_profile_id, json[QString("billingProfileId")]);
    m_billing_profile_id_isSet = !json[QString("billingProfileId")].isNull() && m_billing_profile_id_isValid;

    m_customer_display_name_isValid = ::OpenAPI::fromJsonValue(m_customer_display_name, json[QString("customerDisplayName")]);
    m_customer_display_name_isSet = !json[QString("customerDisplayName")].isNull() && m_customer_display_name_isValid;

    m_customer_id_isValid = ::OpenAPI::fromJsonValue(m_customer_id, json[QString("customerId")]);
    m_customer_id_isSet = !json[QString("customerId")].isNull() && m_customer_id_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_end_date_isValid = ::OpenAPI::fromJsonValue(m_end_date, json[QString("endDate")]);
    m_end_date_isSet = !json[QString("endDate")].isNull() && m_end_date_isValid;

    m_invoice_section_display_name_isValid = ::OpenAPI::fromJsonValue(m_invoice_section_display_name, json[QString("invoiceSectionDisplayName")]);
    m_invoice_section_display_name_isSet = !json[QString("invoiceSectionDisplayName")].isNull() && m_invoice_section_display_name_isValid;

    m_invoice_section_id_isValid = ::OpenAPI::fromJsonValue(m_invoice_section_id, json[QString("invoiceSectionId")]);
    m_invoice_section_id_isSet = !json[QString("invoiceSectionId")].isNull() && m_invoice_section_id_isValid;

    m_last_charge_isValid = ::OpenAPI::fromJsonValue(m_last_charge, json[QString("lastCharge")]);
    m_last_charge_isSet = !json[QString("lastCharge")].isNull() && m_last_charge_isValid;

    m_last_charge_date_isValid = ::OpenAPI::fromJsonValue(m_last_charge_date, json[QString("lastChargeDate")]);
    m_last_charge_date_isSet = !json[QString("lastChargeDate")].isNull() && m_last_charge_date_isValid;

    m_parent_product_id_isValid = ::OpenAPI::fromJsonValue(m_parent_product_id, json[QString("parentProductId")]);
    m_parent_product_id_isSet = !json[QString("parentProductId")].isNull() && m_parent_product_id_isValid;

    m_product_type_isValid = ::OpenAPI::fromJsonValue(m_product_type, json[QString("productType")]);
    m_product_type_isSet = !json[QString("productType")].isNull() && m_product_type_isValid;

    m_product_type_id_isValid = ::OpenAPI::fromJsonValue(m_product_type_id, json[QString("productTypeId")]);
    m_product_type_id_isSet = !json[QString("productTypeId")].isNull() && m_product_type_id_isValid;

    m_purchase_date_isValid = ::OpenAPI::fromJsonValue(m_purchase_date, json[QString("purchaseDate")]);
    m_purchase_date_isSet = !json[QString("purchaseDate")].isNull() && m_purchase_date_isValid;

    m_quantity_isValid = ::OpenAPI::fromJsonValue(m_quantity, json[QString("quantity")]);
    m_quantity_isSet = !json[QString("quantity")].isNull() && m_quantity_isValid;

    m_reseller_isValid = ::OpenAPI::fromJsonValue(m_reseller, json[QString("reseller")]);
    m_reseller_isSet = !json[QString("reseller")].isNull() && m_reseller_isValid;

    m_sku_description_isValid = ::OpenAPI::fromJsonValue(m_sku_description, json[QString("skuDescription")]);
    m_sku_description_isSet = !json[QString("skuDescription")].isNull() && m_sku_description_isValid;

    m_sku_id_isValid = ::OpenAPI::fromJsonValue(m_sku_id, json[QString("skuId")]);
    m_sku_id_isSet = !json[QString("skuId")].isNull() && m_sku_id_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;
}

QString OAIProductProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProductProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_availability_id_isSet) {
        obj.insert(QString("availabilityId"), ::OpenAPI::toJsonValue(m_availability_id));
    }
    if (m_billing_frequency_isSet) {
        obj.insert(QString("billingFrequency"), ::OpenAPI::toJsonValue(m_billing_frequency));
    }
    if (m_billing_profile_display_name_isSet) {
        obj.insert(QString("billingProfileDisplayName"), ::OpenAPI::toJsonValue(m_billing_profile_display_name));
    }
    if (m_billing_profile_id_isSet) {
        obj.insert(QString("billingProfileId"), ::OpenAPI::toJsonValue(m_billing_profile_id));
    }
    if (m_customer_display_name_isSet) {
        obj.insert(QString("customerDisplayName"), ::OpenAPI::toJsonValue(m_customer_display_name));
    }
    if (m_customer_id_isSet) {
        obj.insert(QString("customerId"), ::OpenAPI::toJsonValue(m_customer_id));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_end_date_isSet) {
        obj.insert(QString("endDate"), ::OpenAPI::toJsonValue(m_end_date));
    }
    if (m_invoice_section_display_name_isSet) {
        obj.insert(QString("invoiceSectionDisplayName"), ::OpenAPI::toJsonValue(m_invoice_section_display_name));
    }
    if (m_invoice_section_id_isSet) {
        obj.insert(QString("invoiceSectionId"), ::OpenAPI::toJsonValue(m_invoice_section_id));
    }
    if (m_last_charge.isSet()) {
        obj.insert(QString("lastCharge"), ::OpenAPI::toJsonValue(m_last_charge));
    }
    if (m_last_charge_date_isSet) {
        obj.insert(QString("lastChargeDate"), ::OpenAPI::toJsonValue(m_last_charge_date));
    }
    if (m_parent_product_id_isSet) {
        obj.insert(QString("parentProductId"), ::OpenAPI::toJsonValue(m_parent_product_id));
    }
    if (m_product_type_isSet) {
        obj.insert(QString("productType"), ::OpenAPI::toJsonValue(m_product_type));
    }
    if (m_product_type_id_isSet) {
        obj.insert(QString("productTypeId"), ::OpenAPI::toJsonValue(m_product_type_id));
    }
    if (m_purchase_date_isSet) {
        obj.insert(QString("purchaseDate"), ::OpenAPI::toJsonValue(m_purchase_date));
    }
    if (m_quantity_isSet) {
        obj.insert(QString("quantity"), ::OpenAPI::toJsonValue(m_quantity));
    }
    if (m_reseller.isSet()) {
        obj.insert(QString("reseller"), ::OpenAPI::toJsonValue(m_reseller));
    }
    if (m_sku_description_isSet) {
        obj.insert(QString("skuDescription"), ::OpenAPI::toJsonValue(m_sku_description));
    }
    if (m_sku_id_isSet) {
        obj.insert(QString("skuId"), ::OpenAPI::toJsonValue(m_sku_id));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    return obj;
}

QString OAIProductProperties::getAvailabilityId() const {
    return m_availability_id;
}
void OAIProductProperties::setAvailabilityId(const QString &availability_id) {
    m_availability_id = availability_id;
    m_availability_id_isSet = true;
}

bool OAIProductProperties::is_availability_id_Set() const{
    return m_availability_id_isSet;
}

bool OAIProductProperties::is_availability_id_Valid() const{
    return m_availability_id_isValid;
}

QString OAIProductProperties::getBillingFrequency() const {
    return m_billing_frequency;
}
void OAIProductProperties::setBillingFrequency(const QString &billing_frequency) {
    m_billing_frequency = billing_frequency;
    m_billing_frequency_isSet = true;
}

bool OAIProductProperties::is_billing_frequency_Set() const{
    return m_billing_frequency_isSet;
}

bool OAIProductProperties::is_billing_frequency_Valid() const{
    return m_billing_frequency_isValid;
}

QString OAIProductProperties::getBillingProfileDisplayName() const {
    return m_billing_profile_display_name;
}
void OAIProductProperties::setBillingProfileDisplayName(const QString &billing_profile_display_name) {
    m_billing_profile_display_name = billing_profile_display_name;
    m_billing_profile_display_name_isSet = true;
}

bool OAIProductProperties::is_billing_profile_display_name_Set() const{
    return m_billing_profile_display_name_isSet;
}

bool OAIProductProperties::is_billing_profile_display_name_Valid() const{
    return m_billing_profile_display_name_isValid;
}

QString OAIProductProperties::getBillingProfileId() const {
    return m_billing_profile_id;
}
void OAIProductProperties::setBillingProfileId(const QString &billing_profile_id) {
    m_billing_profile_id = billing_profile_id;
    m_billing_profile_id_isSet = true;
}

bool OAIProductProperties::is_billing_profile_id_Set() const{
    return m_billing_profile_id_isSet;
}

bool OAIProductProperties::is_billing_profile_id_Valid() const{
    return m_billing_profile_id_isValid;
}

QString OAIProductProperties::getCustomerDisplayName() const {
    return m_customer_display_name;
}
void OAIProductProperties::setCustomerDisplayName(const QString &customer_display_name) {
    m_customer_display_name = customer_display_name;
    m_customer_display_name_isSet = true;
}

bool OAIProductProperties::is_customer_display_name_Set() const{
    return m_customer_display_name_isSet;
}

bool OAIProductProperties::is_customer_display_name_Valid() const{
    return m_customer_display_name_isValid;
}

QString OAIProductProperties::getCustomerId() const {
    return m_customer_id;
}
void OAIProductProperties::setCustomerId(const QString &customer_id) {
    m_customer_id = customer_id;
    m_customer_id_isSet = true;
}

bool OAIProductProperties::is_customer_id_Set() const{
    return m_customer_id_isSet;
}

bool OAIProductProperties::is_customer_id_Valid() const{
    return m_customer_id_isValid;
}

QString OAIProductProperties::getDisplayName() const {
    return m_display_name;
}
void OAIProductProperties::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIProductProperties::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIProductProperties::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QDateTime OAIProductProperties::getEndDate() const {
    return m_end_date;
}
void OAIProductProperties::setEndDate(const QDateTime &end_date) {
    m_end_date = end_date;
    m_end_date_isSet = true;
}

bool OAIProductProperties::is_end_date_Set() const{
    return m_end_date_isSet;
}

bool OAIProductProperties::is_end_date_Valid() const{
    return m_end_date_isValid;
}

QString OAIProductProperties::getInvoiceSectionDisplayName() const {
    return m_invoice_section_display_name;
}
void OAIProductProperties::setInvoiceSectionDisplayName(const QString &invoice_section_display_name) {
    m_invoice_section_display_name = invoice_section_display_name;
    m_invoice_section_display_name_isSet = true;
}

bool OAIProductProperties::is_invoice_section_display_name_Set() const{
    return m_invoice_section_display_name_isSet;
}

bool OAIProductProperties::is_invoice_section_display_name_Valid() const{
    return m_invoice_section_display_name_isValid;
}

QString OAIProductProperties::getInvoiceSectionId() const {
    return m_invoice_section_id;
}
void OAIProductProperties::setInvoiceSectionId(const QString &invoice_section_id) {
    m_invoice_section_id = invoice_section_id;
    m_invoice_section_id_isSet = true;
}

bool OAIProductProperties::is_invoice_section_id_Set() const{
    return m_invoice_section_id_isSet;
}

bool OAIProductProperties::is_invoice_section_id_Valid() const{
    return m_invoice_section_id_isValid;
}

OAIAmount OAIProductProperties::getLastCharge() const {
    return m_last_charge;
}
void OAIProductProperties::setLastCharge(const OAIAmount &last_charge) {
    m_last_charge = last_charge;
    m_last_charge_isSet = true;
}

bool OAIProductProperties::is_last_charge_Set() const{
    return m_last_charge_isSet;
}

bool OAIProductProperties::is_last_charge_Valid() const{
    return m_last_charge_isValid;
}

QDateTime OAIProductProperties::getLastChargeDate() const {
    return m_last_charge_date;
}
void OAIProductProperties::setLastChargeDate(const QDateTime &last_charge_date) {
    m_last_charge_date = last_charge_date;
    m_last_charge_date_isSet = true;
}

bool OAIProductProperties::is_last_charge_date_Set() const{
    return m_last_charge_date_isSet;
}

bool OAIProductProperties::is_last_charge_date_Valid() const{
    return m_last_charge_date_isValid;
}

QString OAIProductProperties::getParentProductId() const {
    return m_parent_product_id;
}
void OAIProductProperties::setParentProductId(const QString &parent_product_id) {
    m_parent_product_id = parent_product_id;
    m_parent_product_id_isSet = true;
}

bool OAIProductProperties::is_parent_product_id_Set() const{
    return m_parent_product_id_isSet;
}

bool OAIProductProperties::is_parent_product_id_Valid() const{
    return m_parent_product_id_isValid;
}

QString OAIProductProperties::getProductType() const {
    return m_product_type;
}
void OAIProductProperties::setProductType(const QString &product_type) {
    m_product_type = product_type;
    m_product_type_isSet = true;
}

bool OAIProductProperties::is_product_type_Set() const{
    return m_product_type_isSet;
}

bool OAIProductProperties::is_product_type_Valid() const{
    return m_product_type_isValid;
}

QString OAIProductProperties::getProductTypeId() const {
    return m_product_type_id;
}
void OAIProductProperties::setProductTypeId(const QString &product_type_id) {
    m_product_type_id = product_type_id;
    m_product_type_id_isSet = true;
}

bool OAIProductProperties::is_product_type_id_Set() const{
    return m_product_type_id_isSet;
}

bool OAIProductProperties::is_product_type_id_Valid() const{
    return m_product_type_id_isValid;
}

QDateTime OAIProductProperties::getPurchaseDate() const {
    return m_purchase_date;
}
void OAIProductProperties::setPurchaseDate(const QDateTime &purchase_date) {
    m_purchase_date = purchase_date;
    m_purchase_date_isSet = true;
}

bool OAIProductProperties::is_purchase_date_Set() const{
    return m_purchase_date_isSet;
}

bool OAIProductProperties::is_purchase_date_Valid() const{
    return m_purchase_date_isValid;
}

double OAIProductProperties::getQuantity() const {
    return m_quantity;
}
void OAIProductProperties::setQuantity(const double &quantity) {
    m_quantity = quantity;
    m_quantity_isSet = true;
}

bool OAIProductProperties::is_quantity_Set() const{
    return m_quantity_isSet;
}

bool OAIProductProperties::is_quantity_Valid() const{
    return m_quantity_isValid;
}

OAIReseller OAIProductProperties::getReseller() const {
    return m_reseller;
}
void OAIProductProperties::setReseller(const OAIReseller &reseller) {
    m_reseller = reseller;
    m_reseller_isSet = true;
}

bool OAIProductProperties::is_reseller_Set() const{
    return m_reseller_isSet;
}

bool OAIProductProperties::is_reseller_Valid() const{
    return m_reseller_isValid;
}

QString OAIProductProperties::getSkuDescription() const {
    return m_sku_description;
}
void OAIProductProperties::setSkuDescription(const QString &sku_description) {
    m_sku_description = sku_description;
    m_sku_description_isSet = true;
}

bool OAIProductProperties::is_sku_description_Set() const{
    return m_sku_description_isSet;
}

bool OAIProductProperties::is_sku_description_Valid() const{
    return m_sku_description_isValid;
}

QString OAIProductProperties::getSkuId() const {
    return m_sku_id;
}
void OAIProductProperties::setSkuId(const QString &sku_id) {
    m_sku_id = sku_id;
    m_sku_id_isSet = true;
}

bool OAIProductProperties::is_sku_id_Set() const{
    return m_sku_id_isSet;
}

bool OAIProductProperties::is_sku_id_Valid() const{
    return m_sku_id_isValid;
}

QString OAIProductProperties::getStatus() const {
    return m_status;
}
void OAIProductProperties::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIProductProperties::is_status_Set() const{
    return m_status_isSet;
}

bool OAIProductProperties::is_status_Valid() const{
    return m_status_isValid;
}

bool OAIProductProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_availability_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_billing_frequency_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_billing_profile_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_billing_profile_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_customer_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_customer_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_end_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_invoice_section_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_invoice_section_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_charge.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_charge_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_parent_product_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_product_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_product_type_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_purchase_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quantity_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reseller.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_sku_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sku_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProductProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
