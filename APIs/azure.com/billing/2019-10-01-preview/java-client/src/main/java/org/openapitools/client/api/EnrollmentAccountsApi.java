/*
 * BillingManagementClient
 * Billing client provides access to billing resources for Azure subscriptions.
 *
 * The version of the OpenAPI document: 2019-10-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.EnrollmentAccount;
import org.openapitools.client.model.EnrollmentAccountListResult;
import org.openapitools.client.model.ErrorResponse;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class EnrollmentAccountsApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public EnrollmentAccountsApi() {
        this(Configuration.getDefaultApiClient());
    }

    public EnrollmentAccountsApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for enrollmentAccountsGetByEnrollmentAccountId
     * @param apiVersion Version of the API to be used with the client request. The current version is 2019-10-01-preview. (required)
     * @param billingAccountName billing Account Id. (required)
     * @param enrollmentAccountName Enrollment Account Id. (required)
     * @param $expand May be used to expand the Department. (optional)
     * @param $filter The filter supports &#39;eq&#39;, &#39;lt&#39;, &#39;gt&#39;, &#39;le&#39;, &#39;ge&#39;, and &#39;and&#39;. It does not currently support &#39;ne&#39;, &#39;or&#39;, or &#39;not&#39;. Tag filter is a key value pair string where key and value is separated by a colon (:). (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call enrollmentAccountsGetByEnrollmentAccountIdCall(String apiVersion, String billingAccountName, String enrollmentAccountName, String $expand, String $filter, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/enrollmentAccounts/{enrollmentAccountName}"
            .replace("{" + "billingAccountName" + "}", localVarApiClient.escapeString(billingAccountName.toString()))
            .replace("{" + "enrollmentAccountName" + "}", localVarApiClient.escapeString(enrollmentAccountName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        if ($expand != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$expand", $expand));
        }

        if ($filter != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$filter", $filter));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call enrollmentAccountsGetByEnrollmentAccountIdValidateBeforeCall(String apiVersion, String billingAccountName, String enrollmentAccountName, String $expand, String $filter, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling enrollmentAccountsGetByEnrollmentAccountId(Async)");
        }

        // verify the required parameter 'billingAccountName' is set
        if (billingAccountName == null) {
            throw new ApiException("Missing the required parameter 'billingAccountName' when calling enrollmentAccountsGetByEnrollmentAccountId(Async)");
        }

        // verify the required parameter 'enrollmentAccountName' is set
        if (enrollmentAccountName == null) {
            throw new ApiException("Missing the required parameter 'enrollmentAccountName' when calling enrollmentAccountsGetByEnrollmentAccountId(Async)");
        }

        return enrollmentAccountsGetByEnrollmentAccountIdCall(apiVersion, billingAccountName, enrollmentAccountName, $expand, $filter, _callback);

    }

    /**
     * 
     * Get the enrollment account by id.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2019-10-01-preview. (required)
     * @param billingAccountName billing Account Id. (required)
     * @param enrollmentAccountName Enrollment Account Id. (required)
     * @param $expand May be used to expand the Department. (optional)
     * @param $filter The filter supports &#39;eq&#39;, &#39;lt&#39;, &#39;gt&#39;, &#39;le&#39;, &#39;ge&#39;, and &#39;and&#39;. It does not currently support &#39;ne&#39;, &#39;or&#39;, or &#39;not&#39;. Tag filter is a key value pair string where key and value is separated by a colon (:). (optional)
     * @return EnrollmentAccount
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public EnrollmentAccount enrollmentAccountsGetByEnrollmentAccountId(String apiVersion, String billingAccountName, String enrollmentAccountName, String $expand, String $filter) throws ApiException {
        ApiResponse<EnrollmentAccount> localVarResp = enrollmentAccountsGetByEnrollmentAccountIdWithHttpInfo(apiVersion, billingAccountName, enrollmentAccountName, $expand, $filter);
        return localVarResp.getData();
    }

    /**
     * 
     * Get the enrollment account by id.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2019-10-01-preview. (required)
     * @param billingAccountName billing Account Id. (required)
     * @param enrollmentAccountName Enrollment Account Id. (required)
     * @param $expand May be used to expand the Department. (optional)
     * @param $filter The filter supports &#39;eq&#39;, &#39;lt&#39;, &#39;gt&#39;, &#39;le&#39;, &#39;ge&#39;, and &#39;and&#39;. It does not currently support &#39;ne&#39;, &#39;or&#39;, or &#39;not&#39;. Tag filter is a key value pair string where key and value is separated by a colon (:). (optional)
     * @return ApiResponse&lt;EnrollmentAccount&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EnrollmentAccount> enrollmentAccountsGetByEnrollmentAccountIdWithHttpInfo(String apiVersion, String billingAccountName, String enrollmentAccountName, String $expand, String $filter) throws ApiException {
        okhttp3.Call localVarCall = enrollmentAccountsGetByEnrollmentAccountIdValidateBeforeCall(apiVersion, billingAccountName, enrollmentAccountName, $expand, $filter, null);
        Type localVarReturnType = new TypeToken<EnrollmentAccount>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Get the enrollment account by id.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2019-10-01-preview. (required)
     * @param billingAccountName billing Account Id. (required)
     * @param enrollmentAccountName Enrollment Account Id. (required)
     * @param $expand May be used to expand the Department. (optional)
     * @param $filter The filter supports &#39;eq&#39;, &#39;lt&#39;, &#39;gt&#39;, &#39;le&#39;, &#39;ge&#39;, and &#39;and&#39;. It does not currently support &#39;ne&#39;, &#39;or&#39;, or &#39;not&#39;. Tag filter is a key value pair string where key and value is separated by a colon (:). (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call enrollmentAccountsGetByEnrollmentAccountIdAsync(String apiVersion, String billingAccountName, String enrollmentAccountName, String $expand, String $filter, final ApiCallback<EnrollmentAccount> _callback) throws ApiException {

        okhttp3.Call localVarCall = enrollmentAccountsGetByEnrollmentAccountIdValidateBeforeCall(apiVersion, billingAccountName, enrollmentAccountName, $expand, $filter, _callback);
        Type localVarReturnType = new TypeToken<EnrollmentAccount>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for enrollmentAccountsListByBillingAccountName
     * @param apiVersion Version of the API to be used with the client request. The current version is 2019-10-01-preview. (required)
     * @param billingAccountName billing Account Id. (required)
     * @param $expand May be used to expand the department. (optional)
     * @param $filter The filter supports &#39;eq&#39;, &#39;lt&#39;, &#39;gt&#39;, &#39;le&#39;, &#39;ge&#39;, and &#39;and&#39;. It does not currently support &#39;ne&#39;, &#39;or&#39;, or &#39;not&#39;. Tag filter is a key value pair string where key and value is separated by a colon (:). (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call enrollmentAccountsListByBillingAccountNameCall(String apiVersion, String billingAccountName, String $expand, String $filter, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/enrollmentAccounts"
            .replace("{" + "billingAccountName" + "}", localVarApiClient.escapeString(billingAccountName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        if ($expand != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$expand", $expand));
        }

        if ($filter != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$filter", $filter));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call enrollmentAccountsListByBillingAccountNameValidateBeforeCall(String apiVersion, String billingAccountName, String $expand, String $filter, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling enrollmentAccountsListByBillingAccountName(Async)");
        }

        // verify the required parameter 'billingAccountName' is set
        if (billingAccountName == null) {
            throw new ApiException("Missing the required parameter 'billingAccountName' when calling enrollmentAccountsListByBillingAccountName(Async)");
        }

        return enrollmentAccountsListByBillingAccountNameCall(apiVersion, billingAccountName, $expand, $filter, _callback);

    }

    /**
     * 
     * Lists all Enrollment Accounts for a user which he has access to.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2019-10-01-preview. (required)
     * @param billingAccountName billing Account Id. (required)
     * @param $expand May be used to expand the department. (optional)
     * @param $filter The filter supports &#39;eq&#39;, &#39;lt&#39;, &#39;gt&#39;, &#39;le&#39;, &#39;ge&#39;, and &#39;and&#39;. It does not currently support &#39;ne&#39;, &#39;or&#39;, or &#39;not&#39;. Tag filter is a key value pair string where key and value is separated by a colon (:). (optional)
     * @return EnrollmentAccountListResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public EnrollmentAccountListResult enrollmentAccountsListByBillingAccountName(String apiVersion, String billingAccountName, String $expand, String $filter) throws ApiException {
        ApiResponse<EnrollmentAccountListResult> localVarResp = enrollmentAccountsListByBillingAccountNameWithHttpInfo(apiVersion, billingAccountName, $expand, $filter);
        return localVarResp.getData();
    }

    /**
     * 
     * Lists all Enrollment Accounts for a user which he has access to.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2019-10-01-preview. (required)
     * @param billingAccountName billing Account Id. (required)
     * @param $expand May be used to expand the department. (optional)
     * @param $filter The filter supports &#39;eq&#39;, &#39;lt&#39;, &#39;gt&#39;, &#39;le&#39;, &#39;ge&#39;, and &#39;and&#39;. It does not currently support &#39;ne&#39;, &#39;or&#39;, or &#39;not&#39;. Tag filter is a key value pair string where key and value is separated by a colon (:). (optional)
     * @return ApiResponse&lt;EnrollmentAccountListResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EnrollmentAccountListResult> enrollmentAccountsListByBillingAccountNameWithHttpInfo(String apiVersion, String billingAccountName, String $expand, String $filter) throws ApiException {
        okhttp3.Call localVarCall = enrollmentAccountsListByBillingAccountNameValidateBeforeCall(apiVersion, billingAccountName, $expand, $filter, null);
        Type localVarReturnType = new TypeToken<EnrollmentAccountListResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Lists all Enrollment Accounts for a user which he has access to.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2019-10-01-preview. (required)
     * @param billingAccountName billing Account Id. (required)
     * @param $expand May be used to expand the department. (optional)
     * @param $filter The filter supports &#39;eq&#39;, &#39;lt&#39;, &#39;gt&#39;, &#39;le&#39;, &#39;ge&#39;, and &#39;and&#39;. It does not currently support &#39;ne&#39;, &#39;or&#39;, or &#39;not&#39;. Tag filter is a key value pair string where key and value is separated by a colon (:). (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call enrollmentAccountsListByBillingAccountNameAsync(String apiVersion, String billingAccountName, String $expand, String $filter, final ApiCallback<EnrollmentAccountListResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = enrollmentAccountsListByBillingAccountNameValidateBeforeCall(apiVersion, billingAccountName, $expand, $filter, _callback);
        Type localVarReturnType = new TypeToken<EnrollmentAccountListResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
