/*
 * BillingManagementClient
 * Billing client provides access to billing resources for Azure subscriptions.
 *
 * The version of the OpenAPI document: 2019-10-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AddressDetails;
import org.openapitools.client.model.AzurePlan;
import org.openapitools.client.model.InvoiceSection;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The properties of the billing profile.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:09:33.730549-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class BillingProfileProperties {
  public static final String SERIALIZED_NAME_ADDRESS = "address";
  @SerializedName(SERIALIZED_NAME_ADDRESS)
  private AddressDetails address;

  public static final String SERIALIZED_NAME_CURRENCY = "currency";
  @SerializedName(SERIALIZED_NAME_CURRENCY)
  private String currency;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_ENABLED_AZURE_PLANS = "enabledAzurePlans";
  @SerializedName(SERIALIZED_NAME_ENABLED_AZURE_PLANS)
  private List<AzurePlan> enabledAzurePlans = new ArrayList<>();

  public static final String SERIALIZED_NAME_INVOICE_DAY = "invoiceDay";
  @SerializedName(SERIALIZED_NAME_INVOICE_DAY)
  private Integer invoiceDay;

  public static final String SERIALIZED_NAME_INVOICE_EMAIL_OPT_IN = "invoiceEmailOptIn";
  @SerializedName(SERIALIZED_NAME_INVOICE_EMAIL_OPT_IN)
  private Boolean invoiceEmailOptIn;

  public static final String SERIALIZED_NAME_INVOICE_SECTIONS = "invoiceSections";
  @SerializedName(SERIALIZED_NAME_INVOICE_SECTIONS)
  private List<InvoiceSection> invoiceSections = new ArrayList<>();

  public static final String SERIALIZED_NAME_PO_NUMBER = "poNumber";
  @SerializedName(SERIALIZED_NAME_PO_NUMBER)
  private String poNumber;

  public BillingProfileProperties() {
  }

  public BillingProfileProperties(
     String currency, 
     Integer invoiceDay
  ) {
    this();
    this.currency = currency;
    this.invoiceDay = invoiceDay;
  }

  public BillingProfileProperties address(AddressDetails address) {
    this.address = address;
    return this;
  }

  /**
   * Get address
   * @return address
   */
  @javax.annotation.Nullable
  public AddressDetails getAddress() {
    return address;
  }

  public void setAddress(AddressDetails address) {
    this.address = address;
  }


  /**
   * The currency associated with the billing profile.
   * @return currency
   */
  @javax.annotation.Nullable
  public String getCurrency() {
    return currency;
  }



  public BillingProfileProperties displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * The billing profile name.
   * @return displayName
   */
  @javax.annotation.Nullable
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public BillingProfileProperties enabledAzurePlans(List<AzurePlan> enabledAzurePlans) {
    this.enabledAzurePlans = enabledAzurePlans;
    return this;
  }

  public BillingProfileProperties addEnabledAzurePlansItem(AzurePlan enabledAzurePlansItem) {
    if (this.enabledAzurePlans == null) {
      this.enabledAzurePlans = new ArrayList<>();
    }
    this.enabledAzurePlans.add(enabledAzurePlansItem);
    return this;
  }

  /**
   * Information about the enabled azure plans.
   * @return enabledAzurePlans
   */
  @javax.annotation.Nullable
  public List<AzurePlan> getEnabledAzurePlans() {
    return enabledAzurePlans;
  }

  public void setEnabledAzurePlans(List<AzurePlan> enabledAzurePlans) {
    this.enabledAzurePlans = enabledAzurePlans;
  }


  /**
   * Invoice day.
   * @return invoiceDay
   */
  @javax.annotation.Nullable
  public Integer getInvoiceDay() {
    return invoiceDay;
  }



  public BillingProfileProperties invoiceEmailOptIn(Boolean invoiceEmailOptIn) {
    this.invoiceEmailOptIn = invoiceEmailOptIn;
    return this;
  }

  /**
   * If the billing profile is opted in to receive invoices via email.
   * @return invoiceEmailOptIn
   */
  @javax.annotation.Nullable
  public Boolean getInvoiceEmailOptIn() {
    return invoiceEmailOptIn;
  }

  public void setInvoiceEmailOptIn(Boolean invoiceEmailOptIn) {
    this.invoiceEmailOptIn = invoiceEmailOptIn;
  }


  public BillingProfileProperties invoiceSections(List<InvoiceSection> invoiceSections) {
    this.invoiceSections = invoiceSections;
    return this;
  }

  public BillingProfileProperties addInvoiceSectionsItem(InvoiceSection invoiceSectionsItem) {
    if (this.invoiceSections == null) {
      this.invoiceSections = new ArrayList<>();
    }
    this.invoiceSections.add(invoiceSectionsItem);
    return this;
  }

  /**
   * The invoice sections associated to the billing profile.
   * @return invoiceSections
   */
  @javax.annotation.Nullable
  public List<InvoiceSection> getInvoiceSections() {
    return invoiceSections;
  }

  public void setInvoiceSections(List<InvoiceSection> invoiceSections) {
    this.invoiceSections = invoiceSections;
  }


  public BillingProfileProperties poNumber(String poNumber) {
    this.poNumber = poNumber;
    return this;
  }

  /**
   * Purchase order number.
   * @return poNumber
   */
  @javax.annotation.Nullable
  public String getPoNumber() {
    return poNumber;
  }

  public void setPoNumber(String poNumber) {
    this.poNumber = poNumber;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BillingProfileProperties billingProfileProperties = (BillingProfileProperties) o;
    return Objects.equals(this.address, billingProfileProperties.address) &&
        Objects.equals(this.currency, billingProfileProperties.currency) &&
        Objects.equals(this.displayName, billingProfileProperties.displayName) &&
        Objects.equals(this.enabledAzurePlans, billingProfileProperties.enabledAzurePlans) &&
        Objects.equals(this.invoiceDay, billingProfileProperties.invoiceDay) &&
        Objects.equals(this.invoiceEmailOptIn, billingProfileProperties.invoiceEmailOptIn) &&
        Objects.equals(this.invoiceSections, billingProfileProperties.invoiceSections) &&
        Objects.equals(this.poNumber, billingProfileProperties.poNumber);
  }

  @Override
  public int hashCode() {
    return Objects.hash(address, currency, displayName, enabledAzurePlans, invoiceDay, invoiceEmailOptIn, invoiceSections, poNumber);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BillingProfileProperties {\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    enabledAzurePlans: ").append(toIndentedString(enabledAzurePlans)).append("\n");
    sb.append("    invoiceDay: ").append(toIndentedString(invoiceDay)).append("\n");
    sb.append("    invoiceEmailOptIn: ").append(toIndentedString(invoiceEmailOptIn)).append("\n");
    sb.append("    invoiceSections: ").append(toIndentedString(invoiceSections)).append("\n");
    sb.append("    poNumber: ").append(toIndentedString(poNumber)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("address");
    openapiFields.add("currency");
    openapiFields.add("displayName");
    openapiFields.add("enabledAzurePlans");
    openapiFields.add("invoiceDay");
    openapiFields.add("invoiceEmailOptIn");
    openapiFields.add("invoiceSections");
    openapiFields.add("poNumber");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to BillingProfileProperties
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!BillingProfileProperties.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in BillingProfileProperties is not found in the empty JSON string", BillingProfileProperties.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!BillingProfileProperties.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `BillingProfileProperties` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `address`
      if (jsonObj.get("address") != null && !jsonObj.get("address").isJsonNull()) {
        AddressDetails.validateJsonElement(jsonObj.get("address"));
      }
      if ((jsonObj.get("currency") != null && !jsonObj.get("currency").isJsonNull()) && !jsonObj.get("currency").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `currency` to be a primitive type in the JSON string but got `%s`", jsonObj.get("currency").toString()));
      }
      if ((jsonObj.get("displayName") != null && !jsonObj.get("displayName").isJsonNull()) && !jsonObj.get("displayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayName").toString()));
      }
      if (jsonObj.get("enabledAzurePlans") != null && !jsonObj.get("enabledAzurePlans").isJsonNull()) {
        JsonArray jsonArrayenabledAzurePlans = jsonObj.getAsJsonArray("enabledAzurePlans");
        if (jsonArrayenabledAzurePlans != null) {
          // ensure the json data is an array
          if (!jsonObj.get("enabledAzurePlans").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `enabledAzurePlans` to be an array in the JSON string but got `%s`", jsonObj.get("enabledAzurePlans").toString()));
          }

          // validate the optional field `enabledAzurePlans` (array)
          for (int i = 0; i < jsonArrayenabledAzurePlans.size(); i++) {
            AzurePlan.validateJsonElement(jsonArrayenabledAzurePlans.get(i));
          };
        }
      }
      if (jsonObj.get("invoiceSections") != null && !jsonObj.get("invoiceSections").isJsonNull()) {
        JsonArray jsonArrayinvoiceSections = jsonObj.getAsJsonArray("invoiceSections");
        if (jsonArrayinvoiceSections != null) {
          // ensure the json data is an array
          if (!jsonObj.get("invoiceSections").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `invoiceSections` to be an array in the JSON string but got `%s`", jsonObj.get("invoiceSections").toString()));
          }

          // validate the optional field `invoiceSections` (array)
          for (int i = 0; i < jsonArrayinvoiceSections.size(); i++) {
            InvoiceSection.validateJsonElement(jsonArrayinvoiceSections.get(i));
          };
        }
      }
      if ((jsonObj.get("poNumber") != null && !jsonObj.get("poNumber").isJsonNull()) && !jsonObj.get("poNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `poNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("poNumber").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!BillingProfileProperties.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'BillingProfileProperties' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<BillingProfileProperties> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(BillingProfileProperties.class));

       return (TypeAdapter<T>) new TypeAdapter<BillingProfileProperties>() {
           @Override
           public void write(JsonWriter out, BillingProfileProperties value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public BillingProfileProperties read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of BillingProfileProperties given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of BillingProfileProperties
   * @throws IOException if the JSON string is invalid with respect to BillingProfileProperties
   */
  public static BillingProfileProperties fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, BillingProfileProperties.class);
  }

  /**
   * Convert an instance of BillingProfileProperties to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

