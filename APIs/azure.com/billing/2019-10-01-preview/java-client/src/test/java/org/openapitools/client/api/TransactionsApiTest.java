/*
 * BillingManagementClient
 * Billing client provides access to billing resources for Azure subscriptions.
 *
 * The version of the OpenAPI document: 2019-10-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ErrorResponse;
import org.openapitools.client.model.Transaction;
import org.openapitools.client.model.TransactionListResult;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TransactionsApi
 */
@Disabled
public class TransactionsApiTest {

    private final TransactionsApi api = new TransactionsApi();

    /**
     * Get the transaction.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void transactionsGetTest() throws ApiException {
        String billingAccountName = null;
        String billingProfileName = null;
        String transactionName = null;
        String periodStartDate = null;
        String periodEndDate = null;
        String apiVersion = null;
        Transaction response = api.transactionsGet(billingAccountName, billingProfileName, transactionName, periodStartDate, periodEndDate, apiVersion);
        // TODO: test validations
    }

    /**
     * Lists the transactions by billing account name for given start and end date.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void transactionsListByBillingAccountTest() throws ApiException {
        String billingAccountName = null;
        String apiVersion = null;
        String periodStartDate = null;
        String periodEndDate = null;
        String $filter = null;
        TransactionListResult response = api.transactionsListByBillingAccount(billingAccountName, apiVersion, periodStartDate, periodEndDate, $filter);
        // TODO: test validations
    }

    /**
     * Lists the transactions by billing profile name for given start date and end date.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void transactionsListByBillingProfileTest() throws ApiException {
        String billingAccountName = null;
        String billingProfileName = null;
        String apiVersion = null;
        String periodStartDate = null;
        String periodEndDate = null;
        String $filter = null;
        TransactionListResult response = api.transactionsListByBillingProfile(billingAccountName, billingProfileName, apiVersion, periodStartDate, periodEndDate, $filter);
        // TODO: test validations
    }

    /**
     * Lists the transactions by customer id for given start date and end date.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void transactionsListByCustomerTest() throws ApiException {
        String billingAccountName = null;
        String customerName = null;
        String apiVersion = null;
        String periodStartDate = null;
        String periodEndDate = null;
        String $filter = null;
        TransactionListResult response = api.transactionsListByCustomer(billingAccountName, customerName, apiVersion, periodStartDate, periodEndDate, $filter);
        // TODO: test validations
    }

    /**
     * Lists the transactions by invoice section name for given start date and end date.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void transactionsListByInvoiceSectionTest() throws ApiException {
        String billingAccountName = null;
        String billingProfileName = null;
        String invoiceSectionName = null;
        String apiVersion = null;
        String periodStartDate = null;
        String periodEndDate = null;
        String $filter = null;
        TransactionListResult response = api.transactionsListByInvoiceSection(billingAccountName, billingProfileName, invoiceSectionName, apiVersion, periodStartDate, periodEndDate, $filter);
        // TODO: test validations
    }

}
