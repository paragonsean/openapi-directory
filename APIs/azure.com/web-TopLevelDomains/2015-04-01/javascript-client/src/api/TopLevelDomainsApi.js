/**
 * TopLevelDomains API Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2015-04-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import TldLegalAgreementCollection from '../model/TldLegalAgreementCollection';
import TopLevelDomain from '../model/TopLevelDomain';
import TopLevelDomainAgreementOption from '../model/TopLevelDomainAgreementOption';
import TopLevelDomainCollection from '../model/TopLevelDomainCollection';

/**
* TopLevelDomains service.
* @module api/TopLevelDomainsApi
* @version 2015-04-01
*/
export default class TopLevelDomainsApi {

    /**
    * Constructs a new TopLevelDomainsApi. 
    * @alias module:api/TopLevelDomainsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the topLevelDomainsGet operation.
     * @callback module:api/TopLevelDomainsApi~topLevelDomainsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TopLevelDomain} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get details of a top-level domain.
     * Get details of a top-level domain.
     * @param {String} name Name of the top-level domain.
     * @param {String} subscriptionId Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).
     * @param {String} apiVersion API Version
     * @param {module:api/TopLevelDomainsApi~topLevelDomainsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TopLevelDomain}
     */
    topLevelDomainsGet(name, subscriptionId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling topLevelDomainsGet");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling topLevelDomainsGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling topLevelDomainsGet");
      }

      let pathParams = {
        'name': name,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = TopLevelDomain;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.DomainRegistration/topLevelDomains/{name}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the topLevelDomainsList operation.
     * @callback module:api/TopLevelDomainsApi~topLevelDomainsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TopLevelDomainCollection} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get all top-level domains supported for registration.
     * Get all top-level domains supported for registration.
     * @param {String} subscriptionId Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).
     * @param {String} apiVersion API Version
     * @param {module:api/TopLevelDomainsApi~topLevelDomainsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TopLevelDomainCollection}
     */
    topLevelDomainsList(subscriptionId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling topLevelDomainsList");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling topLevelDomainsList");
      }

      let pathParams = {
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = TopLevelDomainCollection;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.DomainRegistration/topLevelDomains', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the topLevelDomainsListAgreements operation.
     * @callback module:api/TopLevelDomainsApi~topLevelDomainsListAgreementsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TldLegalAgreementCollection} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets all legal agreements that user needs to accept before purchasing a domain.
     * Gets all legal agreements that user needs to accept before purchasing a domain.
     * @param {String} name Name of the top-level domain.
     * @param {String} subscriptionId Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).
     * @param {String} apiVersion API Version
     * @param {module:model/TopLevelDomainAgreementOption} agreementOption Domain agreement options.
     * @param {module:api/TopLevelDomainsApi~topLevelDomainsListAgreementsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TldLegalAgreementCollection}
     */
    topLevelDomainsListAgreements(name, subscriptionId, apiVersion, agreementOption, callback) {
      let postBody = agreementOption;
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling topLevelDomainsListAgreements");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling topLevelDomainsListAgreements");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling topLevelDomainsListAgreements");
      }
      // verify the required parameter 'agreementOption' is set
      if (agreementOption === undefined || agreementOption === null) {
        throw new Error("Missing the required parameter 'agreementOption' when calling topLevelDomainsListAgreements");
      }

      let pathParams = {
        'name': name,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = TldLegalAgreementCollection;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.DomainRegistration/topLevelDomains/{name}/listAgreements', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
