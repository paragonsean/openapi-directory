/*
 * ApplicationInsightsManagementClient
 * Azure Application Insights client for selecting pricing plans and options.
 *
 * The version of the OpenAPI document: 2017-10-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * An Application Insights component daily data volume cap
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:36:23.450631-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class PricingPlanProperties {
  public static final String SERIALIZED_NAME_CAP = "cap";
  @SerializedName(SERIALIZED_NAME_CAP)
  private BigDecimal cap;

  public static final String SERIALIZED_NAME_MAX_HISTORY_CAP = "maxHistoryCap";
  @SerializedName(SERIALIZED_NAME_MAX_HISTORY_CAP)
  private BigDecimal maxHistoryCap;

  public static final String SERIALIZED_NAME_PLAN_TYPE = "planType";
  @SerializedName(SERIALIZED_NAME_PLAN_TYPE)
  private String planType;

  public static final String SERIALIZED_NAME_RESET_HOUR = "resetHour";
  @SerializedName(SERIALIZED_NAME_RESET_HOUR)
  private Integer resetHour;

  public static final String SERIALIZED_NAME_STOP_SEND_NOTIFICATION_WHEN_HIT_CAP = "stopSendNotificationWhenHitCap";
  @SerializedName(SERIALIZED_NAME_STOP_SEND_NOTIFICATION_WHEN_HIT_CAP)
  private Boolean stopSendNotificationWhenHitCap;

  public static final String SERIALIZED_NAME_STOP_SEND_NOTIFICATION_WHEN_HIT_THRESHOLD = "stopSendNotificationWhenHitThreshold";
  @SerializedName(SERIALIZED_NAME_STOP_SEND_NOTIFICATION_WHEN_HIT_THRESHOLD)
  private Boolean stopSendNotificationWhenHitThreshold;

  public static final String SERIALIZED_NAME_WARNING_THRESHOLD = "warningThreshold";
  @SerializedName(SERIALIZED_NAME_WARNING_THRESHOLD)
  private Integer warningThreshold;

  public PricingPlanProperties() {
  }

  public PricingPlanProperties(
     BigDecimal maxHistoryCap, 
     Integer resetHour
  ) {
    this();
    this.maxHistoryCap = maxHistoryCap;
    this.resetHour = resetHour;
  }

  public PricingPlanProperties cap(BigDecimal cap) {
    this.cap = cap;
    return this;
  }

  /**
   * Daily data volume cap in GB.
   * @return cap
   */
  @javax.annotation.Nullable
  public BigDecimal getCap() {
    return cap;
  }

  public void setCap(BigDecimal cap) {
    this.cap = cap;
  }


  /**
   * Maximum daily data volume cap that the user can set for this component.
   * @return maxHistoryCap
   */
  @javax.annotation.Nullable
  public BigDecimal getMaxHistoryCap() {
    return maxHistoryCap;
  }



  public PricingPlanProperties planType(String planType) {
    this.planType = planType;
    return this;
  }

  /**
   * Pricing Plan Type Name.
   * @return planType
   */
  @javax.annotation.Nullable
  public String getPlanType() {
    return planType;
  }

  public void setPlanType(String planType) {
    this.planType = planType;
  }


  /**
   * Daily data volume cap UTC reset hour.
   * @return resetHour
   */
  @javax.annotation.Nullable
  public Integer getResetHour() {
    return resetHour;
  }



  public PricingPlanProperties stopSendNotificationWhenHitCap(Boolean stopSendNotificationWhenHitCap) {
    this.stopSendNotificationWhenHitCap = stopSendNotificationWhenHitCap;
    return this;
  }

  /**
   * Do not send a notification email when the daily data volume cap is met.
   * @return stopSendNotificationWhenHitCap
   */
  @javax.annotation.Nullable
  public Boolean getStopSendNotificationWhenHitCap() {
    return stopSendNotificationWhenHitCap;
  }

  public void setStopSendNotificationWhenHitCap(Boolean stopSendNotificationWhenHitCap) {
    this.stopSendNotificationWhenHitCap = stopSendNotificationWhenHitCap;
  }


  public PricingPlanProperties stopSendNotificationWhenHitThreshold(Boolean stopSendNotificationWhenHitThreshold) {
    this.stopSendNotificationWhenHitThreshold = stopSendNotificationWhenHitThreshold;
    return this;
  }

  /**
   * Reserved, not used for now.
   * @return stopSendNotificationWhenHitThreshold
   */
  @javax.annotation.Nullable
  public Boolean getStopSendNotificationWhenHitThreshold() {
    return stopSendNotificationWhenHitThreshold;
  }

  public void setStopSendNotificationWhenHitThreshold(Boolean stopSendNotificationWhenHitThreshold) {
    this.stopSendNotificationWhenHitThreshold = stopSendNotificationWhenHitThreshold;
  }


  public PricingPlanProperties warningThreshold(Integer warningThreshold) {
    this.warningThreshold = warningThreshold;
    return this;
  }

  /**
   * Reserved, not used for now.
   * @return warningThreshold
   */
  @javax.annotation.Nullable
  public Integer getWarningThreshold() {
    return warningThreshold;
  }

  public void setWarningThreshold(Integer warningThreshold) {
    this.warningThreshold = warningThreshold;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PricingPlanProperties pricingPlanProperties = (PricingPlanProperties) o;
    return Objects.equals(this.cap, pricingPlanProperties.cap) &&
        Objects.equals(this.maxHistoryCap, pricingPlanProperties.maxHistoryCap) &&
        Objects.equals(this.planType, pricingPlanProperties.planType) &&
        Objects.equals(this.resetHour, pricingPlanProperties.resetHour) &&
        Objects.equals(this.stopSendNotificationWhenHitCap, pricingPlanProperties.stopSendNotificationWhenHitCap) &&
        Objects.equals(this.stopSendNotificationWhenHitThreshold, pricingPlanProperties.stopSendNotificationWhenHitThreshold) &&
        Objects.equals(this.warningThreshold, pricingPlanProperties.warningThreshold);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cap, maxHistoryCap, planType, resetHour, stopSendNotificationWhenHitCap, stopSendNotificationWhenHitThreshold, warningThreshold);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PricingPlanProperties {\n");
    sb.append("    cap: ").append(toIndentedString(cap)).append("\n");
    sb.append("    maxHistoryCap: ").append(toIndentedString(maxHistoryCap)).append("\n");
    sb.append("    planType: ").append(toIndentedString(planType)).append("\n");
    sb.append("    resetHour: ").append(toIndentedString(resetHour)).append("\n");
    sb.append("    stopSendNotificationWhenHitCap: ").append(toIndentedString(stopSendNotificationWhenHitCap)).append("\n");
    sb.append("    stopSendNotificationWhenHitThreshold: ").append(toIndentedString(stopSendNotificationWhenHitThreshold)).append("\n");
    sb.append("    warningThreshold: ").append(toIndentedString(warningThreshold)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("cap");
    openapiFields.add("maxHistoryCap");
    openapiFields.add("planType");
    openapiFields.add("resetHour");
    openapiFields.add("stopSendNotificationWhenHitCap");
    openapiFields.add("stopSendNotificationWhenHitThreshold");
    openapiFields.add("warningThreshold");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to PricingPlanProperties
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PricingPlanProperties.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PricingPlanProperties is not found in the empty JSON string", PricingPlanProperties.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PricingPlanProperties.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PricingPlanProperties` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("planType") != null && !jsonObj.get("planType").isJsonNull()) && !jsonObj.get("planType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `planType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("planType").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PricingPlanProperties.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PricingPlanProperties' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PricingPlanProperties> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PricingPlanProperties.class));

       return (TypeAdapter<T>) new TypeAdapter<PricingPlanProperties>() {
           @Override
           public void write(JsonWriter out, PricingPlanProperties value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PricingPlanProperties read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of PricingPlanProperties given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PricingPlanProperties
   * @throws IOException if the JSON string is invalid with respect to PricingPlanProperties
   */
  public static PricingPlanProperties fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PricingPlanProperties.class);
  }

  /**
   * Convert an instance of PricingPlanProperties to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

