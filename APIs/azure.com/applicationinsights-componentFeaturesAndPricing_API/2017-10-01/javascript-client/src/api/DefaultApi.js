/**
 * ApplicationInsightsManagementClient
 * Azure Application Insights client for selecting pricing plans and options.
 *
 * The version of the OpenAPI document: 2017-10-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ApplicationInsightsComponentPricingPlan from '../model/ApplicationInsightsComponentPricingPlan';

/**
* Default service.
* @module api/DefaultApi
* @version 2017-10-01
*/
export default class DefaultApi {

    /**
    * Constructs a new DefaultApi. 
    * @alias module:api/DefaultApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the componentCurrentPricingPlanCreateAndUpdate operation.
     * @callback module:api/DefaultApi~componentCurrentPricingPlanCreateAndUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApplicationInsightsComponentPricingPlan} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Replace current pricing plan for an Application Insights component.
     * @param {String} resourceGroupName The name of the resource group. The name is case insensitive.
     * @param {String} apiVersion The API version to use for this operation.
     * @param {String} subscriptionId The ID of the target subscription.
     * @param {String} resourceName The name of the Application Insights component resource.
     * @param {module:model/ApplicationInsightsComponentPricingPlan} pricingPlanProperties Properties that need to be specified to update current pricing plan for an Application Insights component.
     * @param {module:api/DefaultApi~componentCurrentPricingPlanCreateAndUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApplicationInsightsComponentPricingPlan}
     */
    componentCurrentPricingPlanCreateAndUpdate(resourceGroupName, apiVersion, subscriptionId, resourceName, pricingPlanProperties, callback) {
      let postBody = pricingPlanProperties;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling componentCurrentPricingPlanCreateAndUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling componentCurrentPricingPlanCreateAndUpdate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling componentCurrentPricingPlanCreateAndUpdate");
      }
      // verify the required parameter 'resourceName' is set
      if (resourceName === undefined || resourceName === null) {
        throw new Error("Missing the required parameter 'resourceName' when calling componentCurrentPricingPlanCreateAndUpdate");
      }
      // verify the required parameter 'pricingPlanProperties' is set
      if (pricingPlanProperties === undefined || pricingPlanProperties === null) {
        throw new Error("Missing the required parameter 'pricingPlanProperties' when calling componentCurrentPricingPlanCreateAndUpdate");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'subscriptionId': subscriptionId,
        'resourceName': resourceName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ApplicationInsightsComponentPricingPlan;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.insights/components/{resourceName}/pricingPlans/current', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the componentCurrentPricingPlanGet operation.
     * @callback module:api/DefaultApi~componentCurrentPricingPlanGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApplicationInsightsComponentPricingPlan} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns the current pricing plan setting for an Application Insights component.
     * @param {String} resourceGroupName The name of the resource group. The name is case insensitive.
     * @param {String} apiVersion The API version to use for this operation.
     * @param {String} subscriptionId The ID of the target subscription.
     * @param {String} resourceName The name of the Application Insights component resource.
     * @param {module:api/DefaultApi~componentCurrentPricingPlanGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApplicationInsightsComponentPricingPlan}
     */
    componentCurrentPricingPlanGet(resourceGroupName, apiVersion, subscriptionId, resourceName, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling componentCurrentPricingPlanGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling componentCurrentPricingPlanGet");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling componentCurrentPricingPlanGet");
      }
      // verify the required parameter 'resourceName' is set
      if (resourceName === undefined || resourceName === null) {
        throw new Error("Missing the required parameter 'resourceName' when calling componentCurrentPricingPlanGet");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'subscriptionId': subscriptionId,
        'resourceName': resourceName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ApplicationInsightsComponentPricingPlan;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.insights/components/{resourceName}/pricingPlans/current', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the componentCurrentPricingPlanUpdate operation.
     * @callback module:api/DefaultApi~componentCurrentPricingPlanUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApplicationInsightsComponentPricingPlan} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update current pricing plan for an Application Insights component.
     * @param {String} resourceGroupName The name of the resource group. The name is case insensitive.
     * @param {String} apiVersion The API version to use for this operation.
     * @param {String} subscriptionId The ID of the target subscription.
     * @param {String} resourceName The name of the Application Insights component resource.
     * @param {module:model/ApplicationInsightsComponentPricingPlan} pricingPlanProperties Properties that need to be specified to update current pricing plan for an Application Insights component.
     * @param {module:api/DefaultApi~componentCurrentPricingPlanUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApplicationInsightsComponentPricingPlan}
     */
    componentCurrentPricingPlanUpdate(resourceGroupName, apiVersion, subscriptionId, resourceName, pricingPlanProperties, callback) {
      let postBody = pricingPlanProperties;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling componentCurrentPricingPlanUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling componentCurrentPricingPlanUpdate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling componentCurrentPricingPlanUpdate");
      }
      // verify the required parameter 'resourceName' is set
      if (resourceName === undefined || resourceName === null) {
        throw new Error("Missing the required parameter 'resourceName' when calling componentCurrentPricingPlanUpdate");
      }
      // verify the required parameter 'pricingPlanProperties' is set
      if (pricingPlanProperties === undefined || pricingPlanProperties === null) {
        throw new Error("Missing the required parameter 'pricingPlanProperties' when calling componentCurrentPricingPlanUpdate");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'subscriptionId': subscriptionId,
        'resourceName': resourceName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ApplicationInsightsComponentPricingPlan;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.insights/components/{resourceName}/pricingPlans/current', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
