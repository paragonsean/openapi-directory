/**
 * ApplicationInsightsManagementClient
 * Azure Application Insights client for selecting pricing plans and options.
 *
 * The version of the OpenAPI document: 2017-10-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PricingPlanProperties model module.
 * @module model/PricingPlanProperties
 * @version 2017-10-01
 */
class PricingPlanProperties {
    /**
     * Constructs a new <code>PricingPlanProperties</code>.
     * An Application Insights component daily data volume cap
     * @alias module:model/PricingPlanProperties
     */
    constructor() { 
        
        PricingPlanProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PricingPlanProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PricingPlanProperties} obj Optional instance to populate.
     * @return {module:model/PricingPlanProperties} The populated <code>PricingPlanProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PricingPlanProperties();

            if (data.hasOwnProperty('cap')) {
                obj['cap'] = ApiClient.convertToType(data['cap'], 'Number');
            }
            if (data.hasOwnProperty('maxHistoryCap')) {
                obj['maxHistoryCap'] = ApiClient.convertToType(data['maxHistoryCap'], 'Number');
            }
            if (data.hasOwnProperty('planType')) {
                obj['planType'] = ApiClient.convertToType(data['planType'], 'String');
            }
            if (data.hasOwnProperty('resetHour')) {
                obj['resetHour'] = ApiClient.convertToType(data['resetHour'], 'Number');
            }
            if (data.hasOwnProperty('stopSendNotificationWhenHitCap')) {
                obj['stopSendNotificationWhenHitCap'] = ApiClient.convertToType(data['stopSendNotificationWhenHitCap'], 'Boolean');
            }
            if (data.hasOwnProperty('stopSendNotificationWhenHitThreshold')) {
                obj['stopSendNotificationWhenHitThreshold'] = ApiClient.convertToType(data['stopSendNotificationWhenHitThreshold'], 'Boolean');
            }
            if (data.hasOwnProperty('warningThreshold')) {
                obj['warningThreshold'] = ApiClient.convertToType(data['warningThreshold'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PricingPlanProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PricingPlanProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['planType'] && !(typeof data['planType'] === 'string' || data['planType'] instanceof String)) {
            throw new Error("Expected the field `planType` to be a primitive type in the JSON string but got " + data['planType']);
        }

        return true;
    }


}



/**
 * Daily data volume cap in GB.
 * @member {Number} cap
 */
PricingPlanProperties.prototype['cap'] = undefined;

/**
 * Maximum daily data volume cap that the user can set for this component.
 * @member {Number} maxHistoryCap
 */
PricingPlanProperties.prototype['maxHistoryCap'] = undefined;

/**
 * Pricing Plan Type Name.
 * @member {String} planType
 */
PricingPlanProperties.prototype['planType'] = undefined;

/**
 * Daily data volume cap UTC reset hour.
 * @member {Number} resetHour
 */
PricingPlanProperties.prototype['resetHour'] = undefined;

/**
 * Do not send a notification email when the daily data volume cap is met.
 * @member {Boolean} stopSendNotificationWhenHitCap
 */
PricingPlanProperties.prototype['stopSendNotificationWhenHitCap'] = undefined;

/**
 * Reserved, not used for now.
 * @member {Boolean} stopSendNotificationWhenHitThreshold
 */
PricingPlanProperties.prototype['stopSendNotificationWhenHitThreshold'] = undefined;

/**
 * Reserved, not used for now.
 * @member {Number} warningThreshold
 */
PricingPlanProperties.prototype['warningThreshold'] = undefined;






export default PricingPlanProperties;

