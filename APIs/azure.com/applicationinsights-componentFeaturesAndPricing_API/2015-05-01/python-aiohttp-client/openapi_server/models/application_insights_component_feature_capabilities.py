# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ApplicationInsightsComponentFeatureCapabilities(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, analytics_integration: bool=None, api_access_level: str=None, application_map: bool=None, burst_throttle_policy: str=None, daily_cap: float=None, daily_cap_reset_time: float=None, live_stream_metrics: bool=None, metadata_class: str=None, multiple_step_web_test: bool=None, open_schema: bool=None, power_bi_integration: bool=None, proactive_detection: bool=None, support_export_data: bool=None, throttle_rate: float=None, tracking_type: str=None, work_item_integration: bool=None):
        """ApplicationInsightsComponentFeatureCapabilities - a model defined in OpenAPI

        :param analytics_integration: The analytics_integration of this ApplicationInsightsComponentFeatureCapabilities.
        :param api_access_level: The api_access_level of this ApplicationInsightsComponentFeatureCapabilities.
        :param application_map: The application_map of this ApplicationInsightsComponentFeatureCapabilities.
        :param burst_throttle_policy: The burst_throttle_policy of this ApplicationInsightsComponentFeatureCapabilities.
        :param daily_cap: The daily_cap of this ApplicationInsightsComponentFeatureCapabilities.
        :param daily_cap_reset_time: The daily_cap_reset_time of this ApplicationInsightsComponentFeatureCapabilities.
        :param live_stream_metrics: The live_stream_metrics of this ApplicationInsightsComponentFeatureCapabilities.
        :param metadata_class: The metadata_class of this ApplicationInsightsComponentFeatureCapabilities.
        :param multiple_step_web_test: The multiple_step_web_test of this ApplicationInsightsComponentFeatureCapabilities.
        :param open_schema: The open_schema of this ApplicationInsightsComponentFeatureCapabilities.
        :param power_bi_integration: The power_bi_integration of this ApplicationInsightsComponentFeatureCapabilities.
        :param proactive_detection: The proactive_detection of this ApplicationInsightsComponentFeatureCapabilities.
        :param support_export_data: The support_export_data of this ApplicationInsightsComponentFeatureCapabilities.
        :param throttle_rate: The throttle_rate of this ApplicationInsightsComponentFeatureCapabilities.
        :param tracking_type: The tracking_type of this ApplicationInsightsComponentFeatureCapabilities.
        :param work_item_integration: The work_item_integration of this ApplicationInsightsComponentFeatureCapabilities.
        """
        self.openapi_types = {
            'analytics_integration': bool,
            'api_access_level': str,
            'application_map': bool,
            'burst_throttle_policy': str,
            'daily_cap': float,
            'daily_cap_reset_time': float,
            'live_stream_metrics': bool,
            'metadata_class': str,
            'multiple_step_web_test': bool,
            'open_schema': bool,
            'power_bi_integration': bool,
            'proactive_detection': bool,
            'support_export_data': bool,
            'throttle_rate': float,
            'tracking_type': str,
            'work_item_integration': bool
        }

        self.attribute_map = {
            'analytics_integration': 'AnalyticsIntegration',
            'api_access_level': 'ApiAccessLevel',
            'application_map': 'ApplicationMap',
            'burst_throttle_policy': 'BurstThrottlePolicy',
            'daily_cap': 'DailyCap',
            'daily_cap_reset_time': 'DailyCapResetTime',
            'live_stream_metrics': 'LiveStreamMetrics',
            'metadata_class': 'MetadataClass',
            'multiple_step_web_test': 'MultipleStepWebTest',
            'open_schema': 'OpenSchema',
            'power_bi_integration': 'PowerBIIntegration',
            'proactive_detection': 'ProactiveDetection',
            'support_export_data': 'SupportExportData',
            'throttle_rate': 'ThrottleRate',
            'tracking_type': 'TrackingType',
            'work_item_integration': 'WorkItemIntegration'
        }

        self._analytics_integration = analytics_integration
        self._api_access_level = api_access_level
        self._application_map = application_map
        self._burst_throttle_policy = burst_throttle_policy
        self._daily_cap = daily_cap
        self._daily_cap_reset_time = daily_cap_reset_time
        self._live_stream_metrics = live_stream_metrics
        self._metadata_class = metadata_class
        self._multiple_step_web_test = multiple_step_web_test
        self._open_schema = open_schema
        self._power_bi_integration = power_bi_integration
        self._proactive_detection = proactive_detection
        self._support_export_data = support_export_data
        self._throttle_rate = throttle_rate
        self._tracking_type = tracking_type
        self._work_item_integration = work_item_integration

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApplicationInsightsComponentFeatureCapabilities':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ApplicationInsightsComponentFeatureCapabilities of this ApplicationInsightsComponentFeatureCapabilities.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def analytics_integration(self):
        """Gets the analytics_integration of this ApplicationInsightsComponentFeatureCapabilities.

        Reserved, not used now.

        :return: The analytics_integration of this ApplicationInsightsComponentFeatureCapabilities.
        :rtype: bool
        """
        return self._analytics_integration

    @analytics_integration.setter
    def analytics_integration(self, analytics_integration):
        """Sets the analytics_integration of this ApplicationInsightsComponentFeatureCapabilities.

        Reserved, not used now.

        :param analytics_integration: The analytics_integration of this ApplicationInsightsComponentFeatureCapabilities.
        :type analytics_integration: bool
        """

        self._analytics_integration = analytics_integration

    @property
    def api_access_level(self):
        """Gets the api_access_level of this ApplicationInsightsComponentFeatureCapabilities.

        Reserved, not used now.

        :return: The api_access_level of this ApplicationInsightsComponentFeatureCapabilities.
        :rtype: str
        """
        return self._api_access_level

    @api_access_level.setter
    def api_access_level(self, api_access_level):
        """Sets the api_access_level of this ApplicationInsightsComponentFeatureCapabilities.

        Reserved, not used now.

        :param api_access_level: The api_access_level of this ApplicationInsightsComponentFeatureCapabilities.
        :type api_access_level: str
        """

        self._api_access_level = api_access_level

    @property
    def application_map(self):
        """Gets the application_map of this ApplicationInsightsComponentFeatureCapabilities.

        Reserved, not used now.

        :return: The application_map of this ApplicationInsightsComponentFeatureCapabilities.
        :rtype: bool
        """
        return self._application_map

    @application_map.setter
    def application_map(self, application_map):
        """Sets the application_map of this ApplicationInsightsComponentFeatureCapabilities.

        Reserved, not used now.

        :param application_map: The application_map of this ApplicationInsightsComponentFeatureCapabilities.
        :type application_map: bool
        """

        self._application_map = application_map

    @property
    def burst_throttle_policy(self):
        """Gets the burst_throttle_policy of this ApplicationInsightsComponentFeatureCapabilities.

        Reserved, not used now.

        :return: The burst_throttle_policy of this ApplicationInsightsComponentFeatureCapabilities.
        :rtype: str
        """
        return self._burst_throttle_policy

    @burst_throttle_policy.setter
    def burst_throttle_policy(self, burst_throttle_policy):
        """Sets the burst_throttle_policy of this ApplicationInsightsComponentFeatureCapabilities.

        Reserved, not used now.

        :param burst_throttle_policy: The burst_throttle_policy of this ApplicationInsightsComponentFeatureCapabilities.
        :type burst_throttle_policy: str
        """

        self._burst_throttle_policy = burst_throttle_policy

    @property
    def daily_cap(self):
        """Gets the daily_cap of this ApplicationInsightsComponentFeatureCapabilities.

        Daily data volume cap in GB.

        :return: The daily_cap of this ApplicationInsightsComponentFeatureCapabilities.
        :rtype: float
        """
        return self._daily_cap

    @daily_cap.setter
    def daily_cap(self, daily_cap):
        """Sets the daily_cap of this ApplicationInsightsComponentFeatureCapabilities.

        Daily data volume cap in GB.

        :param daily_cap: The daily_cap of this ApplicationInsightsComponentFeatureCapabilities.
        :type daily_cap: float
        """

        self._daily_cap = daily_cap

    @property
    def daily_cap_reset_time(self):
        """Gets the daily_cap_reset_time of this ApplicationInsightsComponentFeatureCapabilities.

        Daily data volume cap UTC reset hour.

        :return: The daily_cap_reset_time of this ApplicationInsightsComponentFeatureCapabilities.
        :rtype: float
        """
        return self._daily_cap_reset_time

    @daily_cap_reset_time.setter
    def daily_cap_reset_time(self, daily_cap_reset_time):
        """Sets the daily_cap_reset_time of this ApplicationInsightsComponentFeatureCapabilities.

        Daily data volume cap UTC reset hour.

        :param daily_cap_reset_time: The daily_cap_reset_time of this ApplicationInsightsComponentFeatureCapabilities.
        :type daily_cap_reset_time: float
        """

        self._daily_cap_reset_time = daily_cap_reset_time

    @property
    def live_stream_metrics(self):
        """Gets the live_stream_metrics of this ApplicationInsightsComponentFeatureCapabilities.

        Reserved, not used now.

        :return: The live_stream_metrics of this ApplicationInsightsComponentFeatureCapabilities.
        :rtype: bool
        """
        return self._live_stream_metrics

    @live_stream_metrics.setter
    def live_stream_metrics(self, live_stream_metrics):
        """Sets the live_stream_metrics of this ApplicationInsightsComponentFeatureCapabilities.

        Reserved, not used now.

        :param live_stream_metrics: The live_stream_metrics of this ApplicationInsightsComponentFeatureCapabilities.
        :type live_stream_metrics: bool
        """

        self._live_stream_metrics = live_stream_metrics

    @property
    def metadata_class(self):
        """Gets the metadata_class of this ApplicationInsightsComponentFeatureCapabilities.

        Reserved, not used now.

        :return: The metadata_class of this ApplicationInsightsComponentFeatureCapabilities.
        :rtype: str
        """
        return self._metadata_class

    @metadata_class.setter
    def metadata_class(self, metadata_class):
        """Sets the metadata_class of this ApplicationInsightsComponentFeatureCapabilities.

        Reserved, not used now.

        :param metadata_class: The metadata_class of this ApplicationInsightsComponentFeatureCapabilities.
        :type metadata_class: str
        """

        self._metadata_class = metadata_class

    @property
    def multiple_step_web_test(self):
        """Gets the multiple_step_web_test of this ApplicationInsightsComponentFeatureCapabilities.

        Whether allow to use multiple steps web test feature.

        :return: The multiple_step_web_test of this ApplicationInsightsComponentFeatureCapabilities.
        :rtype: bool
        """
        return self._multiple_step_web_test

    @multiple_step_web_test.setter
    def multiple_step_web_test(self, multiple_step_web_test):
        """Sets the multiple_step_web_test of this ApplicationInsightsComponentFeatureCapabilities.

        Whether allow to use multiple steps web test feature.

        :param multiple_step_web_test: The multiple_step_web_test of this ApplicationInsightsComponentFeatureCapabilities.
        :type multiple_step_web_test: bool
        """

        self._multiple_step_web_test = multiple_step_web_test

    @property
    def open_schema(self):
        """Gets the open_schema of this ApplicationInsightsComponentFeatureCapabilities.

        Reserved, not used now.

        :return: The open_schema of this ApplicationInsightsComponentFeatureCapabilities.
        :rtype: bool
        """
        return self._open_schema

    @open_schema.setter
    def open_schema(self, open_schema):
        """Sets the open_schema of this ApplicationInsightsComponentFeatureCapabilities.

        Reserved, not used now.

        :param open_schema: The open_schema of this ApplicationInsightsComponentFeatureCapabilities.
        :type open_schema: bool
        """

        self._open_schema = open_schema

    @property
    def power_bi_integration(self):
        """Gets the power_bi_integration of this ApplicationInsightsComponentFeatureCapabilities.

        Reserved, not used now.

        :return: The power_bi_integration of this ApplicationInsightsComponentFeatureCapabilities.
        :rtype: bool
        """
        return self._power_bi_integration

    @power_bi_integration.setter
    def power_bi_integration(self, power_bi_integration):
        """Sets the power_bi_integration of this ApplicationInsightsComponentFeatureCapabilities.

        Reserved, not used now.

        :param power_bi_integration: The power_bi_integration of this ApplicationInsightsComponentFeatureCapabilities.
        :type power_bi_integration: bool
        """

        self._power_bi_integration = power_bi_integration

    @property
    def proactive_detection(self):
        """Gets the proactive_detection of this ApplicationInsightsComponentFeatureCapabilities.

        Reserved, not used now.

        :return: The proactive_detection of this ApplicationInsightsComponentFeatureCapabilities.
        :rtype: bool
        """
        return self._proactive_detection

    @proactive_detection.setter
    def proactive_detection(self, proactive_detection):
        """Sets the proactive_detection of this ApplicationInsightsComponentFeatureCapabilities.

        Reserved, not used now.

        :param proactive_detection: The proactive_detection of this ApplicationInsightsComponentFeatureCapabilities.
        :type proactive_detection: bool
        """

        self._proactive_detection = proactive_detection

    @property
    def support_export_data(self):
        """Gets the support_export_data of this ApplicationInsightsComponentFeatureCapabilities.

        Whether allow to use continuous export feature.

        :return: The support_export_data of this ApplicationInsightsComponentFeatureCapabilities.
        :rtype: bool
        """
        return self._support_export_data

    @support_export_data.setter
    def support_export_data(self, support_export_data):
        """Sets the support_export_data of this ApplicationInsightsComponentFeatureCapabilities.

        Whether allow to use continuous export feature.

        :param support_export_data: The support_export_data of this ApplicationInsightsComponentFeatureCapabilities.
        :type support_export_data: bool
        """

        self._support_export_data = support_export_data

    @property
    def throttle_rate(self):
        """Gets the throttle_rate of this ApplicationInsightsComponentFeatureCapabilities.

        Reserved, not used now.

        :return: The throttle_rate of this ApplicationInsightsComponentFeatureCapabilities.
        :rtype: float
        """
        return self._throttle_rate

    @throttle_rate.setter
    def throttle_rate(self, throttle_rate):
        """Sets the throttle_rate of this ApplicationInsightsComponentFeatureCapabilities.

        Reserved, not used now.

        :param throttle_rate: The throttle_rate of this ApplicationInsightsComponentFeatureCapabilities.
        :type throttle_rate: float
        """

        self._throttle_rate = throttle_rate

    @property
    def tracking_type(self):
        """Gets the tracking_type of this ApplicationInsightsComponentFeatureCapabilities.

        The application insights component used tracking type.

        :return: The tracking_type of this ApplicationInsightsComponentFeatureCapabilities.
        :rtype: str
        """
        return self._tracking_type

    @tracking_type.setter
    def tracking_type(self, tracking_type):
        """Sets the tracking_type of this ApplicationInsightsComponentFeatureCapabilities.

        The application insights component used tracking type.

        :param tracking_type: The tracking_type of this ApplicationInsightsComponentFeatureCapabilities.
        :type tracking_type: str
        """

        self._tracking_type = tracking_type

    @property
    def work_item_integration(self):
        """Gets the work_item_integration of this ApplicationInsightsComponentFeatureCapabilities.

        Whether allow to use work item integration feature.

        :return: The work_item_integration of this ApplicationInsightsComponentFeatureCapabilities.
        :rtype: bool
        """
        return self._work_item_integration

    @work_item_integration.setter
    def work_item_integration(self, work_item_integration):
        """Sets the work_item_integration of this ApplicationInsightsComponentFeatureCapabilities.

        Whether allow to use work item integration feature.

        :param work_item_integration: The work_item_integration of this ApplicationInsightsComponentFeatureCapabilities.
        :type work_item_integration: bool
        """

        self._work_item_integration = work_item_integration
