# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ApplicationInsightsComponentQuotaStatus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, app_id: str=None, expiration_time: str=None, should_be_throttled: bool=None):
        """ApplicationInsightsComponentQuotaStatus - a model defined in OpenAPI

        :param app_id: The app_id of this ApplicationInsightsComponentQuotaStatus.
        :param expiration_time: The expiration_time of this ApplicationInsightsComponentQuotaStatus.
        :param should_be_throttled: The should_be_throttled of this ApplicationInsightsComponentQuotaStatus.
        """
        self.openapi_types = {
            'app_id': str,
            'expiration_time': str,
            'should_be_throttled': bool
        }

        self.attribute_map = {
            'app_id': 'AppId',
            'expiration_time': 'ExpirationTime',
            'should_be_throttled': 'ShouldBeThrottled'
        }

        self._app_id = app_id
        self._expiration_time = expiration_time
        self._should_be_throttled = should_be_throttled

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApplicationInsightsComponentQuotaStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ApplicationInsightsComponentQuotaStatus of this ApplicationInsightsComponentQuotaStatus.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def app_id(self):
        """Gets the app_id of this ApplicationInsightsComponentQuotaStatus.

        The Application ID for the Application Insights component.

        :return: The app_id of this ApplicationInsightsComponentQuotaStatus.
        :rtype: str
        """
        return self._app_id

    @app_id.setter
    def app_id(self, app_id):
        """Sets the app_id of this ApplicationInsightsComponentQuotaStatus.

        The Application ID for the Application Insights component.

        :param app_id: The app_id of this ApplicationInsightsComponentQuotaStatus.
        :type app_id: str
        """

        self._app_id = app_id

    @property
    def expiration_time(self):
        """Gets the expiration_time of this ApplicationInsightsComponentQuotaStatus.

        Date and time when the daily data volume cap will be reset, and data ingestion will resume.

        :return: The expiration_time of this ApplicationInsightsComponentQuotaStatus.
        :rtype: str
        """
        return self._expiration_time

    @expiration_time.setter
    def expiration_time(self, expiration_time):
        """Sets the expiration_time of this ApplicationInsightsComponentQuotaStatus.

        Date and time when the daily data volume cap will be reset, and data ingestion will resume.

        :param expiration_time: The expiration_time of this ApplicationInsightsComponentQuotaStatus.
        :type expiration_time: str
        """

        self._expiration_time = expiration_time

    @property
    def should_be_throttled(self):
        """Gets the should_be_throttled of this ApplicationInsightsComponentQuotaStatus.

        The daily data volume cap is met, and data ingestion will be stopped.

        :return: The should_be_throttled of this ApplicationInsightsComponentQuotaStatus.
        :rtype: bool
        """
        return self._should_be_throttled

    @should_be_throttled.setter
    def should_be_throttled(self, should_be_throttled):
        """Sets the should_be_throttled of this ApplicationInsightsComponentQuotaStatus.

        The daily data volume cap is met, and data ingestion will be stopped.

        :param should_be_throttled: The should_be_throttled of this ApplicationInsightsComponentQuotaStatus.
        :type should_be_throttled: bool
        """

        self._should_be_throttled = should_be_throttled
