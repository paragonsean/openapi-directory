/**
 * ApplicationInsightsManagementClient
 * Azure Application Insights client for selecting pricing plans and options.
 *
 * The version of the OpenAPI document: 2015-05-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ApplicationInsightsManagementClient);
  }
}(this, function(expect, ApplicationInsightsManagementClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ApplicationInsightsManagementClient.ApplicationInsightsComponentFeatureCapabilities();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ApplicationInsightsComponentFeatureCapabilities', function() {
    it('should create an instance of ApplicationInsightsComponentFeatureCapabilities', function() {
      // uncomment below and update the code to test ApplicationInsightsComponentFeatureCapabilities
      //var instance = new ApplicationInsightsManagementClient.ApplicationInsightsComponentFeatureCapabilities();
      //expect(instance).to.be.a(ApplicationInsightsManagementClient.ApplicationInsightsComponentFeatureCapabilities);
    });

    it('should have the property analyticsIntegration (base name: "AnalyticsIntegration")', function() {
      // uncomment below and update the code to test the property analyticsIntegration
      //var instance = new ApplicationInsightsManagementClient.ApplicationInsightsComponentFeatureCapabilities();
      //expect(instance).to.be();
    });

    it('should have the property apiAccessLevel (base name: "ApiAccessLevel")', function() {
      // uncomment below and update the code to test the property apiAccessLevel
      //var instance = new ApplicationInsightsManagementClient.ApplicationInsightsComponentFeatureCapabilities();
      //expect(instance).to.be();
    });

    it('should have the property applicationMap (base name: "ApplicationMap")', function() {
      // uncomment below and update the code to test the property applicationMap
      //var instance = new ApplicationInsightsManagementClient.ApplicationInsightsComponentFeatureCapabilities();
      //expect(instance).to.be();
    });

    it('should have the property burstThrottlePolicy (base name: "BurstThrottlePolicy")', function() {
      // uncomment below and update the code to test the property burstThrottlePolicy
      //var instance = new ApplicationInsightsManagementClient.ApplicationInsightsComponentFeatureCapabilities();
      //expect(instance).to.be();
    });

    it('should have the property dailyCap (base name: "DailyCap")', function() {
      // uncomment below and update the code to test the property dailyCap
      //var instance = new ApplicationInsightsManagementClient.ApplicationInsightsComponentFeatureCapabilities();
      //expect(instance).to.be();
    });

    it('should have the property dailyCapResetTime (base name: "DailyCapResetTime")', function() {
      // uncomment below and update the code to test the property dailyCapResetTime
      //var instance = new ApplicationInsightsManagementClient.ApplicationInsightsComponentFeatureCapabilities();
      //expect(instance).to.be();
    });

    it('should have the property liveStreamMetrics (base name: "LiveStreamMetrics")', function() {
      // uncomment below and update the code to test the property liveStreamMetrics
      //var instance = new ApplicationInsightsManagementClient.ApplicationInsightsComponentFeatureCapabilities();
      //expect(instance).to.be();
    });

    it('should have the property metadataClass (base name: "MetadataClass")', function() {
      // uncomment below and update the code to test the property metadataClass
      //var instance = new ApplicationInsightsManagementClient.ApplicationInsightsComponentFeatureCapabilities();
      //expect(instance).to.be();
    });

    it('should have the property multipleStepWebTest (base name: "MultipleStepWebTest")', function() {
      // uncomment below and update the code to test the property multipleStepWebTest
      //var instance = new ApplicationInsightsManagementClient.ApplicationInsightsComponentFeatureCapabilities();
      //expect(instance).to.be();
    });

    it('should have the property openSchema (base name: "OpenSchema")', function() {
      // uncomment below and update the code to test the property openSchema
      //var instance = new ApplicationInsightsManagementClient.ApplicationInsightsComponentFeatureCapabilities();
      //expect(instance).to.be();
    });

    it('should have the property powerBIIntegration (base name: "PowerBIIntegration")', function() {
      // uncomment below and update the code to test the property powerBIIntegration
      //var instance = new ApplicationInsightsManagementClient.ApplicationInsightsComponentFeatureCapabilities();
      //expect(instance).to.be();
    });

    it('should have the property proactiveDetection (base name: "ProactiveDetection")', function() {
      // uncomment below and update the code to test the property proactiveDetection
      //var instance = new ApplicationInsightsManagementClient.ApplicationInsightsComponentFeatureCapabilities();
      //expect(instance).to.be();
    });

    it('should have the property supportExportData (base name: "SupportExportData")', function() {
      // uncomment below and update the code to test the property supportExportData
      //var instance = new ApplicationInsightsManagementClient.ApplicationInsightsComponentFeatureCapabilities();
      //expect(instance).to.be();
    });

    it('should have the property throttleRate (base name: "ThrottleRate")', function() {
      // uncomment below and update the code to test the property throttleRate
      //var instance = new ApplicationInsightsManagementClient.ApplicationInsightsComponentFeatureCapabilities();
      //expect(instance).to.be();
    });

    it('should have the property trackingType (base name: "TrackingType")', function() {
      // uncomment below and update the code to test the property trackingType
      //var instance = new ApplicationInsightsManagementClient.ApplicationInsightsComponentFeatureCapabilities();
      //expect(instance).to.be();
    });

    it('should have the property workItemIntegration (base name: "WorkItemIntegration")', function() {
      // uncomment below and update the code to test the property workItemIntegration
      //var instance = new ApplicationInsightsManagementClient.ApplicationInsightsComponentFeatureCapabilities();
      //expect(instance).to.be();
    });

  });

}));
