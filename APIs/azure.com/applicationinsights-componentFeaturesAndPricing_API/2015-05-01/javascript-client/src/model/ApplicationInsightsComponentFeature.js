/**
 * ApplicationInsightsManagementClient
 * Azure Application Insights client for selecting pricing plans and options.
 *
 * The version of the OpenAPI document: 2015-05-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ApplicationInsightsComponentFeatureCapability from './ApplicationInsightsComponentFeatureCapability';

/**
 * The ApplicationInsightsComponentFeature model module.
 * @module model/ApplicationInsightsComponentFeature
 * @version 2015-05-01
 */
class ApplicationInsightsComponentFeature {
    /**
     * Constructs a new <code>ApplicationInsightsComponentFeature</code>.
     * An Application Insights component daily data volume cap status
     * @alias module:model/ApplicationInsightsComponentFeature
     */
    constructor() { 
        
        ApplicationInsightsComponentFeature.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ApplicationInsightsComponentFeature</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApplicationInsightsComponentFeature} obj Optional instance to populate.
     * @return {module:model/ApplicationInsightsComponentFeature} The populated <code>ApplicationInsightsComponentFeature</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApplicationInsightsComponentFeature();

            if (data.hasOwnProperty('Capabilities')) {
                obj['Capabilities'] = ApiClient.convertToType(data['Capabilities'], [ApplicationInsightsComponentFeatureCapability]);
            }
            if (data.hasOwnProperty('FeatureName')) {
                obj['FeatureName'] = ApiClient.convertToType(data['FeatureName'], 'String');
            }
            if (data.hasOwnProperty('IsHidden')) {
                obj['IsHidden'] = ApiClient.convertToType(data['IsHidden'], 'Boolean');
            }
            if (data.hasOwnProperty('IsMainFeature')) {
                obj['IsMainFeature'] = ApiClient.convertToType(data['IsMainFeature'], 'Boolean');
            }
            if (data.hasOwnProperty('MeterId')) {
                obj['MeterId'] = ApiClient.convertToType(data['MeterId'], 'String');
            }
            if (data.hasOwnProperty('MeterRateFrequency')) {
                obj['MeterRateFrequency'] = ApiClient.convertToType(data['MeterRateFrequency'], 'String');
            }
            if (data.hasOwnProperty('ResouceId')) {
                obj['ResouceId'] = ApiClient.convertToType(data['ResouceId'], 'String');
            }
            if (data.hasOwnProperty('SupportedAddonFeatures')) {
                obj['SupportedAddonFeatures'] = ApiClient.convertToType(data['SupportedAddonFeatures'], 'String');
            }
            if (data.hasOwnProperty('Title')) {
                obj['Title'] = ApiClient.convertToType(data['Title'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ApplicationInsightsComponentFeature</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ApplicationInsightsComponentFeature</code>.
     */
    static validateJSON(data) {
        if (data['Capabilities']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['Capabilities'])) {
                throw new Error("Expected the field `Capabilities` to be an array in the JSON data but got " + data['Capabilities']);
            }
            // validate the optional field `Capabilities` (array)
            for (const item of data['Capabilities']) {
                ApplicationInsightsComponentFeatureCapability.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['FeatureName'] && !(typeof data['FeatureName'] === 'string' || data['FeatureName'] instanceof String)) {
            throw new Error("Expected the field `FeatureName` to be a primitive type in the JSON string but got " + data['FeatureName']);
        }
        // ensure the json data is a string
        if (data['MeterId'] && !(typeof data['MeterId'] === 'string' || data['MeterId'] instanceof String)) {
            throw new Error("Expected the field `MeterId` to be a primitive type in the JSON string but got " + data['MeterId']);
        }
        // ensure the json data is a string
        if (data['MeterRateFrequency'] && !(typeof data['MeterRateFrequency'] === 'string' || data['MeterRateFrequency'] instanceof String)) {
            throw new Error("Expected the field `MeterRateFrequency` to be a primitive type in the JSON string but got " + data['MeterRateFrequency']);
        }
        // ensure the json data is a string
        if (data['ResouceId'] && !(typeof data['ResouceId'] === 'string' || data['ResouceId'] instanceof String)) {
            throw new Error("Expected the field `ResouceId` to be a primitive type in the JSON string but got " + data['ResouceId']);
        }
        // ensure the json data is a string
        if (data['SupportedAddonFeatures'] && !(typeof data['SupportedAddonFeatures'] === 'string' || data['SupportedAddonFeatures'] instanceof String)) {
            throw new Error("Expected the field `SupportedAddonFeatures` to be a primitive type in the JSON string but got " + data['SupportedAddonFeatures']);
        }
        // ensure the json data is a string
        if (data['Title'] && !(typeof data['Title'] === 'string' || data['Title'] instanceof String)) {
            throw new Error("Expected the field `Title` to be a primitive type in the JSON string but got " + data['Title']);
        }

        return true;
    }


}



/**
 * A list of Application Insights component feature capability.
 * @member {Array.<module:model/ApplicationInsightsComponentFeatureCapability>} Capabilities
 */
ApplicationInsightsComponentFeature.prototype['Capabilities'] = undefined;

/**
 * The pricing feature name.
 * @member {String} FeatureName
 */
ApplicationInsightsComponentFeature.prototype['FeatureName'] = undefined;

/**
 * Reserved, not used now.
 * @member {Boolean} IsHidden
 */
ApplicationInsightsComponentFeature.prototype['IsHidden'] = undefined;

/**
 * Whether can apply addon feature on to it.
 * @member {Boolean} IsMainFeature
 */
ApplicationInsightsComponentFeature.prototype['IsMainFeature'] = undefined;

/**
 * The meter id used for the feature.
 * @member {String} MeterId
 */
ApplicationInsightsComponentFeature.prototype['MeterId'] = undefined;

/**
 * The meter rate for the feature's meter.
 * @member {String} MeterRateFrequency
 */
ApplicationInsightsComponentFeature.prototype['MeterRateFrequency'] = undefined;

/**
 * Reserved, not used now.
 * @member {String} ResouceId
 */
ApplicationInsightsComponentFeature.prototype['ResouceId'] = undefined;

/**
 * The add on features on main feature.
 * @member {String} SupportedAddonFeatures
 */
ApplicationInsightsComponentFeature.prototype['SupportedAddonFeatures'] = undefined;

/**
 * Display name of the feature.
 * @member {String} Title
 */
ApplicationInsightsComponentFeature.prototype['Title'] = undefined;






export default ApplicationInsightsComponentFeature;

