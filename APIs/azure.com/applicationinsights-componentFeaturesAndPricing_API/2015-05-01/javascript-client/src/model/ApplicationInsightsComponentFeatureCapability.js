/**
 * ApplicationInsightsManagementClient
 * Azure Application Insights client for selecting pricing plans and options.
 *
 * The version of the OpenAPI document: 2015-05-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ApplicationInsightsComponentFeatureCapability model module.
 * @module model/ApplicationInsightsComponentFeatureCapability
 * @version 2015-05-01
 */
class ApplicationInsightsComponentFeatureCapability {
    /**
     * Constructs a new <code>ApplicationInsightsComponentFeatureCapability</code>.
     * An Application Insights component feature capability
     * @alias module:model/ApplicationInsightsComponentFeatureCapability
     */
    constructor() { 
        
        ApplicationInsightsComponentFeatureCapability.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ApplicationInsightsComponentFeatureCapability</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApplicationInsightsComponentFeatureCapability} obj Optional instance to populate.
     * @return {module:model/ApplicationInsightsComponentFeatureCapability} The populated <code>ApplicationInsightsComponentFeatureCapability</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApplicationInsightsComponentFeatureCapability();

            if (data.hasOwnProperty('Description')) {
                obj['Description'] = ApiClient.convertToType(data['Description'], 'String');
            }
            if (data.hasOwnProperty('MeterId')) {
                obj['MeterId'] = ApiClient.convertToType(data['MeterId'], 'String');
            }
            if (data.hasOwnProperty('MeterRateFrequency')) {
                obj['MeterRateFrequency'] = ApiClient.convertToType(data['MeterRateFrequency'], 'String');
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('Unit')) {
                obj['Unit'] = ApiClient.convertToType(data['Unit'], 'String');
            }
            if (data.hasOwnProperty('Value')) {
                obj['Value'] = ApiClient.convertToType(data['Value'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ApplicationInsightsComponentFeatureCapability</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ApplicationInsightsComponentFeatureCapability</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['Description'] && !(typeof data['Description'] === 'string' || data['Description'] instanceof String)) {
            throw new Error("Expected the field `Description` to be a primitive type in the JSON string but got " + data['Description']);
        }
        // ensure the json data is a string
        if (data['MeterId'] && !(typeof data['MeterId'] === 'string' || data['MeterId'] instanceof String)) {
            throw new Error("Expected the field `MeterId` to be a primitive type in the JSON string but got " + data['MeterId']);
        }
        // ensure the json data is a string
        if (data['MeterRateFrequency'] && !(typeof data['MeterRateFrequency'] === 'string' || data['MeterRateFrequency'] instanceof String)) {
            throw new Error("Expected the field `MeterRateFrequency` to be a primitive type in the JSON string but got " + data['MeterRateFrequency']);
        }
        // ensure the json data is a string
        if (data['Name'] && !(typeof data['Name'] === 'string' || data['Name'] instanceof String)) {
            throw new Error("Expected the field `Name` to be a primitive type in the JSON string but got " + data['Name']);
        }
        // ensure the json data is a string
        if (data['Unit'] && !(typeof data['Unit'] === 'string' || data['Unit'] instanceof String)) {
            throw new Error("Expected the field `Unit` to be a primitive type in the JSON string but got " + data['Unit']);
        }
        // ensure the json data is a string
        if (data['Value'] && !(typeof data['Value'] === 'string' || data['Value'] instanceof String)) {
            throw new Error("Expected the field `Value` to be a primitive type in the JSON string but got " + data['Value']);
        }

        return true;
    }


}



/**
 * The description of the capability.
 * @member {String} Description
 */
ApplicationInsightsComponentFeatureCapability.prototype['Description'] = undefined;

/**
 * The meter used for the capability.
 * @member {String} MeterId
 */
ApplicationInsightsComponentFeatureCapability.prototype['MeterId'] = undefined;

/**
 * The meter rate of the meter.
 * @member {String} MeterRateFrequency
 */
ApplicationInsightsComponentFeatureCapability.prototype['MeterRateFrequency'] = undefined;

/**
 * The name of the capability.
 * @member {String} Name
 */
ApplicationInsightsComponentFeatureCapability.prototype['Name'] = undefined;

/**
 * The unit of the capability.
 * @member {String} Unit
 */
ApplicationInsightsComponentFeatureCapability.prototype['Unit'] = undefined;

/**
 * The value of the capability.
 * @member {String} Value
 */
ApplicationInsightsComponentFeatureCapability.prototype['Value'] = undefined;






export default ApplicationInsightsComponentFeatureCapability;

