/**
 * ApplicationInsightsManagementClient
 * Azure Application Insights client for selecting pricing plans and options.
 *
 * The version of the OpenAPI document: 2015-05-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ApplicationInsightsComponentAvailableFeatures from '../model/ApplicationInsightsComponentAvailableFeatures';
import ApplicationInsightsComponentBillingFeatures from '../model/ApplicationInsightsComponentBillingFeatures';
import ApplicationInsightsComponentFeatureCapabilities from '../model/ApplicationInsightsComponentFeatureCapabilities';
import ApplicationInsightsComponentQuotaStatus from '../model/ApplicationInsightsComponentQuotaStatus';

/**
* Default service.
* @module api/DefaultApi
* @version 2015-05-01
*/
export default class DefaultApi {

    /**
    * Constructs a new DefaultApi. 
    * @alias module:api/DefaultApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the componentAvailableFeaturesGet operation.
     * @callback module:api/DefaultApi~componentAvailableFeaturesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApplicationInsightsComponentAvailableFeatures} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns all available features of the application insights component.
     * @param {String} resourceGroupName The name of the resource group. The name is case insensitive.
     * @param {String} apiVersion The API version to use for this operation.
     * @param {String} subscriptionId The ID of the target subscription.
     * @param {String} resourceName The name of the Application Insights component resource.
     * @param {module:api/DefaultApi~componentAvailableFeaturesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApplicationInsightsComponentAvailableFeatures}
     */
    componentAvailableFeaturesGet(resourceGroupName, apiVersion, subscriptionId, resourceName, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling componentAvailableFeaturesGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling componentAvailableFeaturesGet");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling componentAvailableFeaturesGet");
      }
      // verify the required parameter 'resourceName' is set
      if (resourceName === undefined || resourceName === null) {
        throw new Error("Missing the required parameter 'resourceName' when calling componentAvailableFeaturesGet");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'subscriptionId': subscriptionId,
        'resourceName': resourceName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ApplicationInsightsComponentAvailableFeatures;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/components/{resourceName}/getavailablebillingfeatures', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the componentCurrentBillingFeaturesGet operation.
     * @callback module:api/DefaultApi~componentCurrentBillingFeaturesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApplicationInsightsComponentBillingFeatures} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns current billing features for an Application Insights component.
     * @param {String} resourceGroupName The name of the resource group. The name is case insensitive.
     * @param {String} apiVersion The API version to use for this operation.
     * @param {String} subscriptionId The ID of the target subscription.
     * @param {String} resourceName The name of the Application Insights component resource.
     * @param {module:api/DefaultApi~componentCurrentBillingFeaturesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApplicationInsightsComponentBillingFeatures}
     */
    componentCurrentBillingFeaturesGet(resourceGroupName, apiVersion, subscriptionId, resourceName, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling componentCurrentBillingFeaturesGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling componentCurrentBillingFeaturesGet");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling componentCurrentBillingFeaturesGet");
      }
      // verify the required parameter 'resourceName' is set
      if (resourceName === undefined || resourceName === null) {
        throw new Error("Missing the required parameter 'resourceName' when calling componentCurrentBillingFeaturesGet");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'subscriptionId': subscriptionId,
        'resourceName': resourceName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ApplicationInsightsComponentBillingFeatures;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/components/{resourceName}/currentbillingfeatures', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the componentCurrentBillingFeaturesUpdate operation.
     * @callback module:api/DefaultApi~componentCurrentBillingFeaturesUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApplicationInsightsComponentBillingFeatures} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update current billing features for an Application Insights component.
     * @param {String} resourceGroupName The name of the resource group. The name is case insensitive.
     * @param {String} apiVersion The API version to use for this operation.
     * @param {String} subscriptionId The ID of the target subscription.
     * @param {String} resourceName The name of the Application Insights component resource.
     * @param {module:model/ApplicationInsightsComponentBillingFeatures} billingFeaturesProperties Properties that need to be specified to update billing features for an Application Insights component.
     * @param {module:api/DefaultApi~componentCurrentBillingFeaturesUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApplicationInsightsComponentBillingFeatures}
     */
    componentCurrentBillingFeaturesUpdate(resourceGroupName, apiVersion, subscriptionId, resourceName, billingFeaturesProperties, callback) {
      let postBody = billingFeaturesProperties;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling componentCurrentBillingFeaturesUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling componentCurrentBillingFeaturesUpdate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling componentCurrentBillingFeaturesUpdate");
      }
      // verify the required parameter 'resourceName' is set
      if (resourceName === undefined || resourceName === null) {
        throw new Error("Missing the required parameter 'resourceName' when calling componentCurrentBillingFeaturesUpdate");
      }
      // verify the required parameter 'billingFeaturesProperties' is set
      if (billingFeaturesProperties === undefined || billingFeaturesProperties === null) {
        throw new Error("Missing the required parameter 'billingFeaturesProperties' when calling componentCurrentBillingFeaturesUpdate");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'subscriptionId': subscriptionId,
        'resourceName': resourceName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ApplicationInsightsComponentBillingFeatures;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/components/{resourceName}/currentbillingfeatures', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the componentFeatureCapabilitiesGet operation.
     * @callback module:api/DefaultApi~componentFeatureCapabilitiesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApplicationInsightsComponentFeatureCapabilities} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns feature capabilities of the application insights component.
     * @param {String} resourceGroupName The name of the resource group. The name is case insensitive.
     * @param {String} apiVersion The API version to use for this operation.
     * @param {String} subscriptionId The ID of the target subscription.
     * @param {String} resourceName The name of the Application Insights component resource.
     * @param {module:api/DefaultApi~componentFeatureCapabilitiesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApplicationInsightsComponentFeatureCapabilities}
     */
    componentFeatureCapabilitiesGet(resourceGroupName, apiVersion, subscriptionId, resourceName, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling componentFeatureCapabilitiesGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling componentFeatureCapabilitiesGet");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling componentFeatureCapabilitiesGet");
      }
      // verify the required parameter 'resourceName' is set
      if (resourceName === undefined || resourceName === null) {
        throw new Error("Missing the required parameter 'resourceName' when calling componentFeatureCapabilitiesGet");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'subscriptionId': subscriptionId,
        'resourceName': resourceName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ApplicationInsightsComponentFeatureCapabilities;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/components/{resourceName}/featurecapabilities', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the componentQuotaStatusGet operation.
     * @callback module:api/DefaultApi~componentQuotaStatusGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApplicationInsightsComponentQuotaStatus} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns daily data volume cap (quota) status for an Application Insights component.
     * @param {String} resourceGroupName The name of the resource group. The name is case insensitive.
     * @param {String} apiVersion The API version to use for this operation.
     * @param {String} subscriptionId The ID of the target subscription.
     * @param {String} resourceName The name of the Application Insights component resource.
     * @param {module:api/DefaultApi~componentQuotaStatusGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApplicationInsightsComponentQuotaStatus}
     */
    componentQuotaStatusGet(resourceGroupName, apiVersion, subscriptionId, resourceName, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling componentQuotaStatusGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling componentQuotaStatusGet");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling componentQuotaStatusGet");
      }
      // verify the required parameter 'resourceName' is set
      if (resourceName === undefined || resourceName === null) {
        throw new Error("Missing the required parameter 'resourceName' when calling componentQuotaStatusGet");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'subscriptionId': subscriptionId,
        'resourceName': resourceName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ApplicationInsightsComponentQuotaStatus;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/components/{resourceName}/quotastatus', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
