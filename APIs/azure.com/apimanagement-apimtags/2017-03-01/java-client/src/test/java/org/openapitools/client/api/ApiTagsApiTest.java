/*
 * ApiManagementClient
 * Use these REST APIs for performing operations on Tag entity in your Azure API Management deployment. Tags can be assigned to APIs, Operations and Products.
 *
 * The version of the OpenAPI document: 2017-03-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.TagCollection;
import org.openapitools.client.model.TagContract;
import org.openapitools.client.model.TagListByOperationDefaultResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ApiTagsApi
 */
@Disabled
public class ApiTagsApiTest {

    private final ApiTagsApi api = new ApiTagsApi();

    /**
     * Assign tag to the Api.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tagAssignToApiTest() throws ApiException {
        String resourceGroupName = null;
        String serviceName = null;
        String apiId = null;
        String tagId = null;
        String apiVersion = null;
        String subscriptionId = null;
        String ifMatch = null;
        TagContract response = api.tagAssignToApi(resourceGroupName, serviceName, apiId, tagId, apiVersion, subscriptionId, ifMatch);
        // TODO: test validations
    }

    /**
     * Detach the tag from the Api.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tagDetachFromApiTest() throws ApiException {
        String resourceGroupName = null;
        String serviceName = null;
        String apiId = null;
        String tagId = null;
        String ifMatch = null;
        String apiVersion = null;
        String subscriptionId = null;
        api.tagDetachFromApi(resourceGroupName, serviceName, apiId, tagId, ifMatch, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Get tag associated with the API.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tagGetByApiTest() throws ApiException {
        String resourceGroupName = null;
        String serviceName = null;
        String apiId = null;
        String tagId = null;
        String apiVersion = null;
        String subscriptionId = null;
        TagContract response = api.tagGetByApi(resourceGroupName, serviceName, apiId, tagId, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Gets the entity state version of the tag specified by its identifier.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tagGetEntityStateByApiTest() throws ApiException {
        String resourceGroupName = null;
        String serviceName = null;
        String apiId = null;
        String tagId = null;
        String apiVersion = null;
        String subscriptionId = null;
        api.tagGetEntityStateByApi(resourceGroupName, serviceName, apiId, tagId, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Lists all Tags associated with the API.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tagListByApiTest() throws ApiException {
        String resourceGroupName = null;
        String serviceName = null;
        String apiId = null;
        String apiVersion = null;
        String subscriptionId = null;
        String $filter = null;
        Integer $top = null;
        Integer $skip = null;
        TagCollection response = api.tagListByApi(resourceGroupName, serviceName, apiId, apiVersion, subscriptionId, $filter, $top, $skip);
        // TODO: test validations
    }

}
