/*
 * ApiManagementClient
 * Use these REST APIs for performing operations on Tag entity in your Azure API Management deployment. Tags can be assigned to APIs, Operations and Products.
 *
 * The version of the OpenAPI document: 2018-06-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.TagCreateOrUpdateRequest;
import org.openapitools.client.model.TagGet200Response;
import org.openapitools.client.model.TagListByService200Response;
import org.openapitools.client.model.TagListByServiceDefaultResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TagApi
 */
@Disabled
public class TagApiTest {

    private final TagApi api = new TagApi();

    /**
     * Creates a tag.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tagCreateOrUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String serviceName = null;
        String tagId = null;
        String apiVersion = null;
        String subscriptionId = null;
        TagCreateOrUpdateRequest parameters = null;
        String ifMatch = null;
        TagGet200Response response = api.tagCreateOrUpdate(resourceGroupName, serviceName, tagId, apiVersion, subscriptionId, parameters, ifMatch);
        // TODO: test validations
    }

    /**
     * Deletes specific tag of the API Management service instance.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tagDeleteTest() throws ApiException {
        String resourceGroupName = null;
        String serviceName = null;
        String tagId = null;
        String ifMatch = null;
        String apiVersion = null;
        String subscriptionId = null;
        api.tagDelete(resourceGroupName, serviceName, tagId, ifMatch, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Gets the details of the tag specified by its identifier.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tagGetTest() throws ApiException {
        String resourceGroupName = null;
        String serviceName = null;
        String tagId = null;
        String apiVersion = null;
        String subscriptionId = null;
        TagGet200Response response = api.tagGet(resourceGroupName, serviceName, tagId, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Gets the entity state version of the tag specified by its identifier.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tagGetEntityStateTest() throws ApiException {
        String resourceGroupName = null;
        String serviceName = null;
        String tagId = null;
        String apiVersion = null;
        String subscriptionId = null;
        api.tagGetEntityState(resourceGroupName, serviceName, tagId, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Lists a collection of tags defined within a service instance.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tagListByServiceTest() throws ApiException {
        String resourceGroupName = null;
        String serviceName = null;
        String apiVersion = null;
        String subscriptionId = null;
        String $filter = null;
        Integer $top = null;
        Integer $skip = null;
        String scope = null;
        TagListByService200Response response = api.tagListByService(resourceGroupName, serviceName, apiVersion, subscriptionId, $filter, $top, $skip, scope);
        // TODO: test validations
    }

    /**
     * Updates the details of the tag specified by its identifier.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tagUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String serviceName = null;
        String tagId = null;
        String ifMatch = null;
        String apiVersion = null;
        String subscriptionId = null;
        TagCreateOrUpdateRequest parameters = null;
        api.tagUpdate(resourceGroupName, serviceName, tagId, ifMatch, apiVersion, subscriptionId, parameters);
        // TODO: test validations
    }

}
