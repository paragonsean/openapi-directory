/*
 * ApiManagementClient
 * Use these REST APIs for performing operations on Tag entity in your Azure API Management deployment. Tags can be assigned to APIs, Operations and Products.
 *
 * The version of the OpenAPI document: 2018-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.OperationListByTags200ResponseValueInnerApi;
import org.openapitools.client.model.OperationListByTags200ResponseValueInnerOperation;
import org.openapitools.client.model.OperationListByTags200ResponseValueInnerProduct;
import org.openapitools.client.model.OperationListByTags200ResponseValueInnerTag;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * TagResource contract properties.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:11:57.295348-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class OperationListByTags200ResponseValueInner {
  public static final String SERIALIZED_NAME_API = "api";
  @SerializedName(SERIALIZED_NAME_API)
  private OperationListByTags200ResponseValueInnerApi api;

  public static final String SERIALIZED_NAME_OPERATION = "operation";
  @SerializedName(SERIALIZED_NAME_OPERATION)
  private OperationListByTags200ResponseValueInnerOperation operation;

  public static final String SERIALIZED_NAME_PRODUCT = "product";
  @SerializedName(SERIALIZED_NAME_PRODUCT)
  private OperationListByTags200ResponseValueInnerProduct product;

  public static final String SERIALIZED_NAME_TAG = "tag";
  @SerializedName(SERIALIZED_NAME_TAG)
  private OperationListByTags200ResponseValueInnerTag tag;

  public OperationListByTags200ResponseValueInner() {
  }

  public OperationListByTags200ResponseValueInner api(OperationListByTags200ResponseValueInnerApi api) {
    this.api = api;
    return this;
  }

  /**
   * Get api
   * @return api
   */
  @javax.annotation.Nullable
  public OperationListByTags200ResponseValueInnerApi getApi() {
    return api;
  }

  public void setApi(OperationListByTags200ResponseValueInnerApi api) {
    this.api = api;
  }


  public OperationListByTags200ResponseValueInner operation(OperationListByTags200ResponseValueInnerOperation operation) {
    this.operation = operation;
    return this;
  }

  /**
   * Get operation
   * @return operation
   */
  @javax.annotation.Nullable
  public OperationListByTags200ResponseValueInnerOperation getOperation() {
    return operation;
  }

  public void setOperation(OperationListByTags200ResponseValueInnerOperation operation) {
    this.operation = operation;
  }


  public OperationListByTags200ResponseValueInner product(OperationListByTags200ResponseValueInnerProduct product) {
    this.product = product;
    return this;
  }

  /**
   * Get product
   * @return product
   */
  @javax.annotation.Nullable
  public OperationListByTags200ResponseValueInnerProduct getProduct() {
    return product;
  }

  public void setProduct(OperationListByTags200ResponseValueInnerProduct product) {
    this.product = product;
  }


  public OperationListByTags200ResponseValueInner tag(OperationListByTags200ResponseValueInnerTag tag) {
    this.tag = tag;
    return this;
  }

  /**
   * Get tag
   * @return tag
   */
  @javax.annotation.Nonnull
  public OperationListByTags200ResponseValueInnerTag getTag() {
    return tag;
  }

  public void setTag(OperationListByTags200ResponseValueInnerTag tag) {
    this.tag = tag;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OperationListByTags200ResponseValueInner operationListByTags200ResponseValueInner = (OperationListByTags200ResponseValueInner) o;
    return Objects.equals(this.api, operationListByTags200ResponseValueInner.api) &&
        Objects.equals(this.operation, operationListByTags200ResponseValueInner.operation) &&
        Objects.equals(this.product, operationListByTags200ResponseValueInner.product) &&
        Objects.equals(this.tag, operationListByTags200ResponseValueInner.tag);
  }

  @Override
  public int hashCode() {
    return Objects.hash(api, operation, product, tag);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OperationListByTags200ResponseValueInner {\n");
    sb.append("    api: ").append(toIndentedString(api)).append("\n");
    sb.append("    operation: ").append(toIndentedString(operation)).append("\n");
    sb.append("    product: ").append(toIndentedString(product)).append("\n");
    sb.append("    tag: ").append(toIndentedString(tag)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("api");
    openapiFields.add("operation");
    openapiFields.add("product");
    openapiFields.add("tag");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("tag");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to OperationListByTags200ResponseValueInner
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!OperationListByTags200ResponseValueInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in OperationListByTags200ResponseValueInner is not found in the empty JSON string", OperationListByTags200ResponseValueInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!OperationListByTags200ResponseValueInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `OperationListByTags200ResponseValueInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : OperationListByTags200ResponseValueInner.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `api`
      if (jsonObj.get("api") != null && !jsonObj.get("api").isJsonNull()) {
        OperationListByTags200ResponseValueInnerApi.validateJsonElement(jsonObj.get("api"));
      }
      // validate the optional field `operation`
      if (jsonObj.get("operation") != null && !jsonObj.get("operation").isJsonNull()) {
        OperationListByTags200ResponseValueInnerOperation.validateJsonElement(jsonObj.get("operation"));
      }
      // validate the optional field `product`
      if (jsonObj.get("product") != null && !jsonObj.get("product").isJsonNull()) {
        OperationListByTags200ResponseValueInnerProduct.validateJsonElement(jsonObj.get("product"));
      }
      // validate the required field `tag`
      OperationListByTags200ResponseValueInnerTag.validateJsonElement(jsonObj.get("tag"));
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!OperationListByTags200ResponseValueInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'OperationListByTags200ResponseValueInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<OperationListByTags200ResponseValueInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(OperationListByTags200ResponseValueInner.class));

       return (TypeAdapter<T>) new TypeAdapter<OperationListByTags200ResponseValueInner>() {
           @Override
           public void write(JsonWriter out, OperationListByTags200ResponseValueInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public OperationListByTags200ResponseValueInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of OperationListByTags200ResponseValueInner given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of OperationListByTags200ResponseValueInner
   * @throws IOException if the JSON string is invalid with respect to OperationListByTags200ResponseValueInner
   */
  public static OperationListByTags200ResponseValueInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, OperationListByTags200ResponseValueInner.class);
  }

  /**
   * Convert an instance of OperationListByTags200ResponseValueInner to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

