/*
 * SqlManagementClient
 * The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.
 *
 * The version of the OpenAPI document: 2018-06-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.DatabaseSecurityAlertListResult;
import org.openapitools.client.model.DatabaseSecurityAlertPolicy;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DatabaseSecurityAlertPoliciesApi
 */
@Disabled
public class DatabaseSecurityAlertPoliciesApiTest {

    private final DatabaseSecurityAlertPoliciesApi api = new DatabaseSecurityAlertPoliciesApi();

    /**
     * Creates or updates a database&#39;s security alert policy.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void databaseSecurityAlertPoliciesCreateOrUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String serverName = null;
        String databaseName = null;
        String securityAlertPolicyName = null;
        String subscriptionId = null;
        String apiVersion = null;
        DatabaseSecurityAlertPolicy parameters = null;
        DatabaseSecurityAlertPolicy response = api.databaseSecurityAlertPoliciesCreateOrUpdate(resourceGroupName, serverName, databaseName, securityAlertPolicyName, subscriptionId, apiVersion, parameters);
        // TODO: test validations
    }

    /**
     * Gets a  database&#39;s security alert policy.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void databaseSecurityAlertPoliciesGetTest() throws ApiException {
        String resourceGroupName = null;
        String serverName = null;
        String databaseName = null;
        String securityAlertPolicyName = null;
        String subscriptionId = null;
        String apiVersion = null;
        DatabaseSecurityAlertPolicy response = api.databaseSecurityAlertPoliciesGet(resourceGroupName, serverName, databaseName, securityAlertPolicyName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets a list of database&#39;s security alert policies.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void databaseSecurityAlertPoliciesListByDatabaseTest() throws ApiException {
        String resourceGroupName = null;
        String serverName = null;
        String databaseName = null;
        String subscriptionId = null;
        String apiVersion = null;
        DatabaseSecurityAlertListResult response = api.databaseSecurityAlertPoliciesListByDatabase(resourceGroupName, serverName, databaseName, subscriptionId, apiVersion);
        // TODO: test validations
    }

}
