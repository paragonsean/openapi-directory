/**
 * AutomationManagement
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-01-15
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDscReportResource.h
 *
 * Definition of the DSC Report Resource.
 */

#ifndef OAIDscReportResource_H
#define OAIDscReportResource_H

#include <QJsonObject>

#include "OAIDscReportResourceNavigation.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDscReportResourceNavigation;

class OAIDscReportResource : public OAIObject {
public:
    OAIDscReportResource();
    OAIDscReportResource(QString json);
    ~OAIDscReportResource() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIDscReportResourceNavigation> getDependsOn() const;
    void setDependsOn(const QList<OAIDscReportResourceNavigation> &depends_on);
    bool is_depends_on_Set() const;
    bool is_depends_on_Valid() const;

    double getDurationInSeconds() const;
    void setDurationInSeconds(const double &duration_in_seconds);
    bool is_duration_in_seconds_Set() const;
    bool is_duration_in_seconds_Valid() const;

    QString getError() const;
    void setError(const QString &error);
    bool is_error_Set() const;
    bool is_error_Valid() const;

    QString getModuleName() const;
    void setModuleName(const QString &module_name);
    bool is_module_name_Set() const;
    bool is_module_name_Valid() const;

    QString getModuleVersion() const;
    void setModuleVersion(const QString &module_version);
    bool is_module_version_Set() const;
    bool is_module_version_Valid() const;

    QString getResourceId() const;
    void setResourceId(const QString &resource_id);
    bool is_resource_id_Set() const;
    bool is_resource_id_Valid() const;

    QString getResourceName() const;
    void setResourceName(const QString &resource_name);
    bool is_resource_name_Set() const;
    bool is_resource_name_Valid() const;

    QString getSourceInfo() const;
    void setSourceInfo(const QString &source_info);
    bool is_source_info_Set() const;
    bool is_source_info_Valid() const;

    QDateTime getStartDate() const;
    void setStartDate(const QDateTime &start_date);
    bool is_start_date_Set() const;
    bool is_start_date_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIDscReportResourceNavigation> m_depends_on;
    bool m_depends_on_isSet;
    bool m_depends_on_isValid;

    double m_duration_in_seconds;
    bool m_duration_in_seconds_isSet;
    bool m_duration_in_seconds_isValid;

    QString m_error;
    bool m_error_isSet;
    bool m_error_isValid;

    QString m_module_name;
    bool m_module_name_isSet;
    bool m_module_name_isValid;

    QString m_module_version;
    bool m_module_version_isSet;
    bool m_module_version_isValid;

    QString m_resource_id;
    bool m_resource_id_isSet;
    bool m_resource_id_isValid;

    QString m_resource_name;
    bool m_resource_name_isSet;
    bool m_resource_name_isValid;

    QString m_source_info;
    bool m_source_info_isSet;
    bool m_source_info_isValid;

    QDateTime m_start_date;
    bool m_start_date_isSet;
    bool m_start_date_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDscReportResource)

#endif // OAIDscReportResource_H
