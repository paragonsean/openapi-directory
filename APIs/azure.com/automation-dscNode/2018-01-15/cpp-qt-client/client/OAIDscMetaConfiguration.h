/**
 * AutomationManagement
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-01-15
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDscMetaConfiguration.h
 *
 * Definition of the DSC Meta Configuration.
 */

#ifndef OAIDscMetaConfiguration_H
#define OAIDscMetaConfiguration_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDscMetaConfiguration : public OAIObject {
public:
    OAIDscMetaConfiguration();
    OAIDscMetaConfiguration(QString json);
    ~OAIDscMetaConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getActionAfterReboot() const;
    void setActionAfterReboot(const QString &action_after_reboot);
    bool is_action_after_reboot_Set() const;
    bool is_action_after_reboot_Valid() const;

    bool isAllowModuleOverwrite() const;
    void setAllowModuleOverwrite(const bool &allow_module_overwrite);
    bool is_allow_module_overwrite_Set() const;
    bool is_allow_module_overwrite_Valid() const;

    QString getCertificateId() const;
    void setCertificateId(const QString &certificate_id);
    bool is_certificate_id_Set() const;
    bool is_certificate_id_Valid() const;

    QString getConfigurationMode() const;
    void setConfigurationMode(const QString &configuration_mode);
    bool is_configuration_mode_Set() const;
    bool is_configuration_mode_Valid() const;

    qint32 getConfigurationModeFrequencyMins() const;
    void setConfigurationModeFrequencyMins(const qint32 &configuration_mode_frequency_mins);
    bool is_configuration_mode_frequency_mins_Set() const;
    bool is_configuration_mode_frequency_mins_Valid() const;

    bool isRebootNodeIfNeeded() const;
    void setRebootNodeIfNeeded(const bool &reboot_node_if_needed);
    bool is_reboot_node_if_needed_Set() const;
    bool is_reboot_node_if_needed_Valid() const;

    qint32 getRefreshFrequencyMins() const;
    void setRefreshFrequencyMins(const qint32 &refresh_frequency_mins);
    bool is_refresh_frequency_mins_Set() const;
    bool is_refresh_frequency_mins_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_action_after_reboot;
    bool m_action_after_reboot_isSet;
    bool m_action_after_reboot_isValid;

    bool m_allow_module_overwrite;
    bool m_allow_module_overwrite_isSet;
    bool m_allow_module_overwrite_isValid;

    QString m_certificate_id;
    bool m_certificate_id_isSet;
    bool m_certificate_id_isValid;

    QString m_configuration_mode;
    bool m_configuration_mode_isSet;
    bool m_configuration_mode_isValid;

    qint32 m_configuration_mode_frequency_mins;
    bool m_configuration_mode_frequency_mins_isSet;
    bool m_configuration_mode_frequency_mins_isValid;

    bool m_reboot_node_if_needed;
    bool m_reboot_node_if_needed_isSet;
    bool m_reboot_node_if_needed_isValid;

    qint32 m_refresh_frequency_mins;
    bool m_refresh_frequency_mins_isSet;
    bool m_refresh_frequency_mins_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDscMetaConfiguration)

#endif // OAIDscMetaConfiguration_H
