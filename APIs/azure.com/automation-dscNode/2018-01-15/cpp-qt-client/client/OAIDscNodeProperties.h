/**
 * AutomationManagement
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-01-15
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDscNodeProperties.h
 *
 * The properties of a DscNode
 */

#ifndef OAIDscNodeProperties_H
#define OAIDscNodeProperties_H

#include <QJsonObject>

#include "OAIDscNodeConfigurationAssociationProperty.h"
#include "OAIDscNodeExtensionHandlerAssociationProperty.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDscNodeExtensionHandlerAssociationProperty;
class OAIDscNodeConfigurationAssociationProperty;

class OAIDscNodeProperties : public OAIObject {
public:
    OAIDscNodeProperties();
    OAIDscNodeProperties(QString json);
    ~OAIDscNodeProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccountId() const;
    void setAccountId(const QString &account_id);
    bool is_account_id_Set() const;
    bool is_account_id_Valid() const;

    QString getEtag() const;
    void setEtag(const QString &etag);
    bool is_etag_Set() const;
    bool is_etag_Valid() const;

    QList<OAIDscNodeExtensionHandlerAssociationProperty> getExtensionHandler() const;
    void setExtensionHandler(const QList<OAIDscNodeExtensionHandlerAssociationProperty> &extension_handler);
    bool is_extension_handler_Set() const;
    bool is_extension_handler_Valid() const;

    QString getIp() const;
    void setIp(const QString &ip);
    bool is_ip_Set() const;
    bool is_ip_Valid() const;

    QDateTime getLastSeen() const;
    void setLastSeen(const QDateTime &last_seen);
    bool is_last_seen_Set() const;
    bool is_last_seen_Valid() const;

    OAIDscNodeConfigurationAssociationProperty getNodeConfiguration() const;
    void setNodeConfiguration(const OAIDscNodeConfigurationAssociationProperty &node_configuration);
    bool is_node_configuration_Set() const;
    bool is_node_configuration_Valid() const;

    QString getNodeId() const;
    void setNodeId(const QString &node_id);
    bool is_node_id_Set() const;
    bool is_node_id_Valid() const;

    QDateTime getRegistrationTime() const;
    void setRegistrationTime(const QDateTime &registration_time);
    bool is_registration_time_Set() const;
    bool is_registration_time_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    qint32 getTotalCount() const;
    void setTotalCount(const qint32 &total_count);
    bool is_total_count_Set() const;
    bool is_total_count_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_account_id;
    bool m_account_id_isSet;
    bool m_account_id_isValid;

    QString m_etag;
    bool m_etag_isSet;
    bool m_etag_isValid;

    QList<OAIDscNodeExtensionHandlerAssociationProperty> m_extension_handler;
    bool m_extension_handler_isSet;
    bool m_extension_handler_isValid;

    QString m_ip;
    bool m_ip_isSet;
    bool m_ip_isValid;

    QDateTime m_last_seen;
    bool m_last_seen_isSet;
    bool m_last_seen_isValid;

    OAIDscNodeConfigurationAssociationProperty m_node_configuration;
    bool m_node_configuration_isSet;
    bool m_node_configuration_isValid;

    QString m_node_id;
    bool m_node_id_isSet;
    bool m_node_id_isValid;

    QDateTime m_registration_time;
    bool m_registration_time_isSet;
    bool m_registration_time_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    qint32 m_total_count;
    bool m_total_count_isSet;
    bool m_total_count_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDscNodeProperties)

#endif // OAIDscNodeProperties_H
