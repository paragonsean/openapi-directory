# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.agent_registration_keys import AgentRegistrationKeys
from openapi_server import util


class AgentRegistration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, dsc_meta_configuration: str=None, endpoint: str=None, id: str=None, keys: AgentRegistrationKeys=None):
        """AgentRegistration - a model defined in OpenAPI

        :param dsc_meta_configuration: The dsc_meta_configuration of this AgentRegistration.
        :param endpoint: The endpoint of this AgentRegistration.
        :param id: The id of this AgentRegistration.
        :param keys: The keys of this AgentRegistration.
        """
        self.openapi_types = {
            'dsc_meta_configuration': str,
            'endpoint': str,
            'id': str,
            'keys': AgentRegistrationKeys
        }

        self.attribute_map = {
            'dsc_meta_configuration': 'dscMetaConfiguration',
            'endpoint': 'endpoint',
            'id': 'id',
            'keys': 'keys'
        }

        self._dsc_meta_configuration = dsc_meta_configuration
        self._endpoint = endpoint
        self._id = id
        self._keys = keys

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AgentRegistration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AgentRegistration of this AgentRegistration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def dsc_meta_configuration(self):
        """Gets the dsc_meta_configuration of this AgentRegistration.

        Gets or sets the dsc meta configuration.

        :return: The dsc_meta_configuration of this AgentRegistration.
        :rtype: str
        """
        return self._dsc_meta_configuration

    @dsc_meta_configuration.setter
    def dsc_meta_configuration(self, dsc_meta_configuration):
        """Sets the dsc_meta_configuration of this AgentRegistration.

        Gets or sets the dsc meta configuration.

        :param dsc_meta_configuration: The dsc_meta_configuration of this AgentRegistration.
        :type dsc_meta_configuration: str
        """

        self._dsc_meta_configuration = dsc_meta_configuration

    @property
    def endpoint(self):
        """Gets the endpoint of this AgentRegistration.

        Gets or sets the dsc server endpoint.

        :return: The endpoint of this AgentRegistration.
        :rtype: str
        """
        return self._endpoint

    @endpoint.setter
    def endpoint(self, endpoint):
        """Sets the endpoint of this AgentRegistration.

        Gets or sets the dsc server endpoint.

        :param endpoint: The endpoint of this AgentRegistration.
        :type endpoint: str
        """

        self._endpoint = endpoint

    @property
    def id(self):
        """Gets the id of this AgentRegistration.

        Gets or sets the id.

        :return: The id of this AgentRegistration.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this AgentRegistration.

        Gets or sets the id.

        :param id: The id of this AgentRegistration.
        :type id: str
        """

        self._id = id

    @property
    def keys(self):
        """Gets the keys of this AgentRegistration.


        :return: The keys of this AgentRegistration.
        :rtype: AgentRegistrationKeys
        """
        return self._keys

    @keys.setter
    def keys(self, keys):
        """Sets the keys of this AgentRegistration.


        :param keys: The keys of this AgentRegistration.
        :type keys: AgentRegistrationKeys
        """

        self._keys = keys
