# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.dsc_report_resource_navigation import DscReportResourceNavigation
from openapi_server import util


class DscReportResource(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, depends_on: List[DscReportResourceNavigation]=None, duration_in_seconds: float=None, error: str=None, module_name: str=None, module_version: str=None, resource_id: str=None, resource_name: str=None, source_info: str=None, start_date: datetime=None, status: str=None):
        """DscReportResource - a model defined in OpenAPI

        :param depends_on: The depends_on of this DscReportResource.
        :param duration_in_seconds: The duration_in_seconds of this DscReportResource.
        :param error: The error of this DscReportResource.
        :param module_name: The module_name of this DscReportResource.
        :param module_version: The module_version of this DscReportResource.
        :param resource_id: The resource_id of this DscReportResource.
        :param resource_name: The resource_name of this DscReportResource.
        :param source_info: The source_info of this DscReportResource.
        :param start_date: The start_date of this DscReportResource.
        :param status: The status of this DscReportResource.
        """
        self.openapi_types = {
            'depends_on': List[DscReportResourceNavigation],
            'duration_in_seconds': float,
            'error': str,
            'module_name': str,
            'module_version': str,
            'resource_id': str,
            'resource_name': str,
            'source_info': str,
            'start_date': datetime,
            'status': str
        }

        self.attribute_map = {
            'depends_on': 'dependsOn',
            'duration_in_seconds': 'durationInSeconds',
            'error': 'error',
            'module_name': 'moduleName',
            'module_version': 'moduleVersion',
            'resource_id': 'resourceId',
            'resource_name': 'resourceName',
            'source_info': 'sourceInfo',
            'start_date': 'startDate',
            'status': 'status'
        }

        self._depends_on = depends_on
        self._duration_in_seconds = duration_in_seconds
        self._error = error
        self._module_name = module_name
        self._module_version = module_version
        self._resource_id = resource_id
        self._resource_name = resource_name
        self._source_info = source_info
        self._start_date = start_date
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DscReportResource':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DscReportResource of this DscReportResource.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def depends_on(self):
        """Gets the depends_on of this DscReportResource.

        Gets or sets the Resource Navigation values for resources the resource depends on.

        :return: The depends_on of this DscReportResource.
        :rtype: List[DscReportResourceNavigation]
        """
        return self._depends_on

    @depends_on.setter
    def depends_on(self, depends_on):
        """Sets the depends_on of this DscReportResource.

        Gets or sets the Resource Navigation values for resources the resource depends on.

        :param depends_on: The depends_on of this DscReportResource.
        :type depends_on: List[DscReportResourceNavigation]
        """

        self._depends_on = depends_on

    @property
    def duration_in_seconds(self):
        """Gets the duration_in_seconds of this DscReportResource.

        Gets or sets the duration in seconds for the resource.

        :return: The duration_in_seconds of this DscReportResource.
        :rtype: float
        """
        return self._duration_in_seconds

    @duration_in_seconds.setter
    def duration_in_seconds(self, duration_in_seconds):
        """Sets the duration_in_seconds of this DscReportResource.

        Gets or sets the duration in seconds for the resource.

        :param duration_in_seconds: The duration_in_seconds of this DscReportResource.
        :type duration_in_seconds: float
        """

        self._duration_in_seconds = duration_in_seconds

    @property
    def error(self):
        """Gets the error of this DscReportResource.

        Gets or sets the error of the resource.

        :return: The error of this DscReportResource.
        :rtype: str
        """
        return self._error

    @error.setter
    def error(self, error):
        """Sets the error of this DscReportResource.

        Gets or sets the error of the resource.

        :param error: The error of this DscReportResource.
        :type error: str
        """

        self._error = error

    @property
    def module_name(self):
        """Gets the module_name of this DscReportResource.

        Gets or sets the module name of the resource.

        :return: The module_name of this DscReportResource.
        :rtype: str
        """
        return self._module_name

    @module_name.setter
    def module_name(self, module_name):
        """Sets the module_name of this DscReportResource.

        Gets or sets the module name of the resource.

        :param module_name: The module_name of this DscReportResource.
        :type module_name: str
        """

        self._module_name = module_name

    @property
    def module_version(self):
        """Gets the module_version of this DscReportResource.

        Gets or sets the module version of the resource.

        :return: The module_version of this DscReportResource.
        :rtype: str
        """
        return self._module_version

    @module_version.setter
    def module_version(self, module_version):
        """Sets the module_version of this DscReportResource.

        Gets or sets the module version of the resource.

        :param module_version: The module_version of this DscReportResource.
        :type module_version: str
        """

        self._module_version = module_version

    @property
    def resource_id(self):
        """Gets the resource_id of this DscReportResource.

        Gets or sets the ID of the resource.

        :return: The resource_id of this DscReportResource.
        :rtype: str
        """
        return self._resource_id

    @resource_id.setter
    def resource_id(self, resource_id):
        """Sets the resource_id of this DscReportResource.

        Gets or sets the ID of the resource.

        :param resource_id: The resource_id of this DscReportResource.
        :type resource_id: str
        """

        self._resource_id = resource_id

    @property
    def resource_name(self):
        """Gets the resource_name of this DscReportResource.

        Gets or sets the name of the resource.

        :return: The resource_name of this DscReportResource.
        :rtype: str
        """
        return self._resource_name

    @resource_name.setter
    def resource_name(self, resource_name):
        """Sets the resource_name of this DscReportResource.

        Gets or sets the name of the resource.

        :param resource_name: The resource_name of this DscReportResource.
        :type resource_name: str
        """

        self._resource_name = resource_name

    @property
    def source_info(self):
        """Gets the source_info of this DscReportResource.

        Gets or sets the source info of the resource.

        :return: The source_info of this DscReportResource.
        :rtype: str
        """
        return self._source_info

    @source_info.setter
    def source_info(self, source_info):
        """Sets the source_info of this DscReportResource.

        Gets or sets the source info of the resource.

        :param source_info: The source_info of this DscReportResource.
        :type source_info: str
        """

        self._source_info = source_info

    @property
    def start_date(self):
        """Gets the start_date of this DscReportResource.

        Gets or sets the start date of the resource.

        :return: The start_date of this DscReportResource.
        :rtype: datetime
        """
        return self._start_date

    @start_date.setter
    def start_date(self, start_date):
        """Sets the start_date of this DscReportResource.

        Gets or sets the start date of the resource.

        :param start_date: The start_date of this DscReportResource.
        :type start_date: datetime
        """

        self._start_date = start_date

    @property
    def status(self):
        """Gets the status of this DscReportResource.

        Gets or sets the status of the resource.

        :return: The status of this DscReportResource.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this DscReportResource.

        Gets or sets the status of the resource.

        :param status: The status of this DscReportResource.
        :type status: str
        """

        self._status = status
