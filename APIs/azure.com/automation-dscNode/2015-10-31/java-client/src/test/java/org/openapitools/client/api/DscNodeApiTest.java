/*
 * AutomationManagement
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2015-10-31
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AgentRegistrationInformationGetDefaultResponse;
import org.openapitools.client.model.DscNode;
import org.openapitools.client.model.DscNodeListResult;
import org.openapitools.client.model.DscNodeUpdateParameters;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DscNodeApi
 */
@Disabled
public class DscNodeApiTest {

    private final DscNodeApi api = new DscNodeApi();

    /**
     * Delete the dsc node identified by node id.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dscNodeDeleteTest() throws ApiException {
        String resourceGroupName = null;
        String automationAccountName = null;
        String nodeId = null;
        String subscriptionId = null;
        String apiVersion = null;
        DscNode response = api.dscNodeDelete(resourceGroupName, automationAccountName, nodeId, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Retrieve the dsc node identified by node id.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dscNodeGetTest() throws ApiException {
        String resourceGroupName = null;
        String automationAccountName = null;
        String nodeId = null;
        String subscriptionId = null;
        String apiVersion = null;
        DscNode response = api.dscNodeGet(resourceGroupName, automationAccountName, nodeId, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Retrieve a list of dsc nodes.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dscNodeListByAutomationAccountTest() throws ApiException {
        String resourceGroupName = null;
        String automationAccountName = null;
        String subscriptionId = null;
        String apiVersion = null;
        String $filter = null;
        DscNodeListResult response = api.dscNodeListByAutomationAccount(resourceGroupName, automationAccountName, subscriptionId, apiVersion, $filter);
        // TODO: test validations
    }

    /**
     * Update the dsc node.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dscNodeUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String automationAccountName = null;
        String nodeId = null;
        String subscriptionId = null;
        String apiVersion = null;
        DscNodeUpdateParameters parameters = null;
        DscNode response = api.dscNodeUpdate(resourceGroupName, automationAccountName, nodeId, subscriptionId, apiVersion, parameters);
        // TODO: test validations
    }

}
