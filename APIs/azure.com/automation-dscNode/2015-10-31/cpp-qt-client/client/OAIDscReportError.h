/**
 * AutomationManagement
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2015-10-31
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDscReportError.h
 *
 * Definition of the dsc node report error type.
 */

#ifndef OAIDscReportError_H
#define OAIDscReportError_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDscReportError : public OAIObject {
public:
    OAIDscReportError();
    OAIDscReportError(QString json);
    ~OAIDscReportError() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getErrorCode() const;
    void setErrorCode(const QString &error_code);
    bool is_error_code_Set() const;
    bool is_error_code_Valid() const;

    QString getErrorDetails() const;
    void setErrorDetails(const QString &error_details);
    bool is_error_details_Set() const;
    bool is_error_details_Valid() const;

    QString getErrorMessage() const;
    void setErrorMessage(const QString &error_message);
    bool is_error_message_Set() const;
    bool is_error_message_Valid() const;

    QString getErrorSource() const;
    void setErrorSource(const QString &error_source);
    bool is_error_source_Set() const;
    bool is_error_source_Valid() const;

    QString getLocale() const;
    void setLocale(const QString &locale);
    bool is_locale_Set() const;
    bool is_locale_Valid() const;

    QString getResourceId() const;
    void setResourceId(const QString &resource_id);
    bool is_resource_id_Set() const;
    bool is_resource_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_error_code;
    bool m_error_code_isSet;
    bool m_error_code_isValid;

    QString m_error_details;
    bool m_error_details_isSet;
    bool m_error_details_isValid;

    QString m_error_message;
    bool m_error_message_isSet;
    bool m_error_message_isValid;

    QString m_error_source;
    bool m_error_source_isSet;
    bool m_error_source_isValid;

    QString m_locale;
    bool m_locale_isSet;
    bool m_locale_isValid;

    QString m_resource_id;
    bool m_resource_id_isSet;
    bool m_resource_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDscReportError)

#endif // OAIDscReportError_H
