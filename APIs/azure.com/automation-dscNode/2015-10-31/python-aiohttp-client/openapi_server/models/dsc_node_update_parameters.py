# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.dsc_node_configuration_association_property import DscNodeConfigurationAssociationProperty
from openapi_server import util


class DscNodeUpdateParameters(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, node_configuration: DscNodeConfigurationAssociationProperty=None, node_id: str=None):
        """DscNodeUpdateParameters - a model defined in OpenAPI

        :param node_configuration: The node_configuration of this DscNodeUpdateParameters.
        :param node_id: The node_id of this DscNodeUpdateParameters.
        """
        self.openapi_types = {
            'node_configuration': DscNodeConfigurationAssociationProperty,
            'node_id': str
        }

        self.attribute_map = {
            'node_configuration': 'nodeConfiguration',
            'node_id': 'nodeId'
        }

        self._node_configuration = node_configuration
        self._node_id = node_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DscNodeUpdateParameters':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DscNodeUpdateParameters of this DscNodeUpdateParameters.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def node_configuration(self):
        """Gets the node_configuration of this DscNodeUpdateParameters.


        :return: The node_configuration of this DscNodeUpdateParameters.
        :rtype: DscNodeConfigurationAssociationProperty
        """
        return self._node_configuration

    @node_configuration.setter
    def node_configuration(self, node_configuration):
        """Sets the node_configuration of this DscNodeUpdateParameters.


        :param node_configuration: The node_configuration of this DscNodeUpdateParameters.
        :type node_configuration: DscNodeConfigurationAssociationProperty
        """

        self._node_configuration = node_configuration

    @property
    def node_id(self):
        """Gets the node_id of this DscNodeUpdateParameters.

        Gets or sets the id of the dsc node.

        :return: The node_id of this DscNodeUpdateParameters.
        :rtype: str
        """
        return self._node_id

    @node_id.setter
    def node_id(self, node_id):
        """Sets the node_id of this DscNodeUpdateParameters.

        Gets or sets the id of the dsc node.

        :param node_id: The node_id of this DscNodeUpdateParameters.
        :type node_id: str
        """

        self._node_id = node_id
