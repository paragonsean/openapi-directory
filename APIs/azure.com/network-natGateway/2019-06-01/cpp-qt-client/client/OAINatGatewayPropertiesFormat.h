/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-06-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINatGatewayPropertiesFormat.h
 *
 * Nat Gateway properties.
 */

#ifndef OAINatGatewayPropertiesFormat_H
#define OAINatGatewayPropertiesFormat_H

#include <QJsonObject>

#include "OAINatGatewayPropertiesFormat_publicIpAddresses_inner.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAINatGatewayPropertiesFormat_publicIpAddresses_inner;

class OAINatGatewayPropertiesFormat : public OAIObject {
public:
    OAINatGatewayPropertiesFormat();
    OAINatGatewayPropertiesFormat(QString json);
    ~OAINatGatewayPropertiesFormat() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getIdleTimeoutInMinutes() const;
    void setIdleTimeoutInMinutes(const qint32 &idle_timeout_in_minutes);
    bool is_idle_timeout_in_minutes_Set() const;
    bool is_idle_timeout_in_minutes_Valid() const;

    QString getProvisioningState() const;
    void setProvisioningState(const QString &provisioning_state);
    bool is_provisioning_state_Set() const;
    bool is_provisioning_state_Valid() const;

    QList<OAINatGatewayPropertiesFormat_publicIpAddresses_inner> getPublicIpAddresses() const;
    void setPublicIpAddresses(const QList<OAINatGatewayPropertiesFormat_publicIpAddresses_inner> &public_ip_addresses);
    bool is_public_ip_addresses_Set() const;
    bool is_public_ip_addresses_Valid() const;

    QList<OAINatGatewayPropertiesFormat_publicIpAddresses_inner> getPublicIpPrefixes() const;
    void setPublicIpPrefixes(const QList<OAINatGatewayPropertiesFormat_publicIpAddresses_inner> &public_ip_prefixes);
    bool is_public_ip_prefixes_Set() const;
    bool is_public_ip_prefixes_Valid() const;

    QString getResourceGuid() const;
    void setResourceGuid(const QString &resource_guid);
    bool is_resource_guid_Set() const;
    bool is_resource_guid_Valid() const;

    QList<OAINatGatewayPropertiesFormat_publicIpAddresses_inner> getSubnets() const;
    void setSubnets(const QList<OAINatGatewayPropertiesFormat_publicIpAddresses_inner> &subnets);
    bool is_subnets_Set() const;
    bool is_subnets_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_idle_timeout_in_minutes;
    bool m_idle_timeout_in_minutes_isSet;
    bool m_idle_timeout_in_minutes_isValid;

    QString m_provisioning_state;
    bool m_provisioning_state_isSet;
    bool m_provisioning_state_isValid;

    QList<OAINatGatewayPropertiesFormat_publicIpAddresses_inner> m_public_ip_addresses;
    bool m_public_ip_addresses_isSet;
    bool m_public_ip_addresses_isValid;

    QList<OAINatGatewayPropertiesFormat_publicIpAddresses_inner> m_public_ip_prefixes;
    bool m_public_ip_prefixes_isSet;
    bool m_public_ip_prefixes_isValid;

    QString m_resource_guid;
    bool m_resource_guid_isSet;
    bool m_resource_guid_isValid;

    QList<OAINatGatewayPropertiesFormat_publicIpAddresses_inner> m_subnets;
    bool m_subnets_isSet;
    bool m_subnets_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINatGatewayPropertiesFormat)

#endif // OAINatGatewayPropertiesFormat_H
