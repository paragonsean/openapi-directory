/*
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-04-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.NatGateway;
import org.openapitools.client.model.NatGatewayListResult;
import org.openapitools.client.model.NatGatewaysUpdateTagsRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for NatGatewaysApi
 */
@Disabled
public class NatGatewaysApiTest {

    private final NatGatewaysApi api = new NatGatewaysApi();

    /**
     * Creates or updates a nat gateway.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void natGatewaysCreateOrUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String natGatewayName = null;
        String apiVersion = null;
        String subscriptionId = null;
        NatGateway parameters = null;
        NatGateway response = api.natGatewaysCreateOrUpdate(resourceGroupName, natGatewayName, apiVersion, subscriptionId, parameters);
        // TODO: test validations
    }

    /**
     * Deletes the specified nat gateway.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void natGatewaysDeleteTest() throws ApiException {
        String resourceGroupName = null;
        String natGatewayName = null;
        String apiVersion = null;
        String subscriptionId = null;
        api.natGatewaysDelete(resourceGroupName, natGatewayName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Gets the specified nat gateway in a specified resource group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void natGatewaysGetTest() throws ApiException {
        String resourceGroupName = null;
        String natGatewayName = null;
        String apiVersion = null;
        String subscriptionId = null;
        String $expand = null;
        NatGateway response = api.natGatewaysGet(resourceGroupName, natGatewayName, apiVersion, subscriptionId, $expand);
        // TODO: test validations
    }

    /**
     * Gets all nat gateways in a resource group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void natGatewaysListTest() throws ApiException {
        String resourceGroupName = null;
        String apiVersion = null;
        String subscriptionId = null;
        NatGatewayListResult response = api.natGatewaysList(resourceGroupName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Gets all the Nat Gateways in a subscription.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void natGatewaysListAllTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        NatGatewayListResult response = api.natGatewaysListAll(apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Updates nat gateway tags.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void natGatewaysUpdateTagsTest() throws ApiException {
        String resourceGroupName = null;
        String natGatewayName = null;
        String apiVersion = null;
        String subscriptionId = null;
        NatGatewaysUpdateTagsRequest parameters = null;
        NatGateway response = api.natGatewaysUpdateTags(resourceGroupName, natGatewayName, apiVersion, subscriptionId, parameters);
        // TODO: test validations
    }

}
