# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.nat_gateway_properties_format_public_ip_addresses_inner import NatGatewayPropertiesFormatPublicIpAddressesInner
from openapi_server import util


class NatGatewayPropertiesFormat(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, idle_timeout_in_minutes: int=None, provisioning_state: str=None, public_ip_addresses: List[NatGatewayPropertiesFormatPublicIpAddressesInner]=None, public_ip_prefixes: List[NatGatewayPropertiesFormatPublicIpAddressesInner]=None, resource_guid: str=None, subnets: List[NatGatewayPropertiesFormatPublicIpAddressesInner]=None):
        """NatGatewayPropertiesFormat - a model defined in OpenAPI

        :param idle_timeout_in_minutes: The idle_timeout_in_minutes of this NatGatewayPropertiesFormat.
        :param provisioning_state: The provisioning_state of this NatGatewayPropertiesFormat.
        :param public_ip_addresses: The public_ip_addresses of this NatGatewayPropertiesFormat.
        :param public_ip_prefixes: The public_ip_prefixes of this NatGatewayPropertiesFormat.
        :param resource_guid: The resource_guid of this NatGatewayPropertiesFormat.
        :param subnets: The subnets of this NatGatewayPropertiesFormat.
        """
        self.openapi_types = {
            'idle_timeout_in_minutes': int,
            'provisioning_state': str,
            'public_ip_addresses': List[NatGatewayPropertiesFormatPublicIpAddressesInner],
            'public_ip_prefixes': List[NatGatewayPropertiesFormatPublicIpAddressesInner],
            'resource_guid': str,
            'subnets': List[NatGatewayPropertiesFormatPublicIpAddressesInner]
        }

        self.attribute_map = {
            'idle_timeout_in_minutes': 'idleTimeoutInMinutes',
            'provisioning_state': 'provisioningState',
            'public_ip_addresses': 'publicIpAddresses',
            'public_ip_prefixes': 'publicIpPrefixes',
            'resource_guid': 'resourceGuid',
            'subnets': 'subnets'
        }

        self._idle_timeout_in_minutes = idle_timeout_in_minutes
        self._provisioning_state = provisioning_state
        self._public_ip_addresses = public_ip_addresses
        self._public_ip_prefixes = public_ip_prefixes
        self._resource_guid = resource_guid
        self._subnets = subnets

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NatGatewayPropertiesFormat':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NatGatewayPropertiesFormat of this NatGatewayPropertiesFormat.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def idle_timeout_in_minutes(self):
        """Gets the idle_timeout_in_minutes of this NatGatewayPropertiesFormat.

        The idle timeout of the nat gateway.

        :return: The idle_timeout_in_minutes of this NatGatewayPropertiesFormat.
        :rtype: int
        """
        return self._idle_timeout_in_minutes

    @idle_timeout_in_minutes.setter
    def idle_timeout_in_minutes(self, idle_timeout_in_minutes):
        """Sets the idle_timeout_in_minutes of this NatGatewayPropertiesFormat.

        The idle timeout of the nat gateway.

        :param idle_timeout_in_minutes: The idle_timeout_in_minutes of this NatGatewayPropertiesFormat.
        :type idle_timeout_in_minutes: int
        """

        self._idle_timeout_in_minutes = idle_timeout_in_minutes

    @property
    def provisioning_state(self):
        """Gets the provisioning_state of this NatGatewayPropertiesFormat.

        The provisioning state of the NatGateway resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.

        :return: The provisioning_state of this NatGatewayPropertiesFormat.
        :rtype: str
        """
        return self._provisioning_state

    @provisioning_state.setter
    def provisioning_state(self, provisioning_state):
        """Sets the provisioning_state of this NatGatewayPropertiesFormat.

        The provisioning state of the NatGateway resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.

        :param provisioning_state: The provisioning_state of this NatGatewayPropertiesFormat.
        :type provisioning_state: str
        """

        self._provisioning_state = provisioning_state

    @property
    def public_ip_addresses(self):
        """Gets the public_ip_addresses of this NatGatewayPropertiesFormat.

        An array of public ip addresses associated with the nat gateway resource.

        :return: The public_ip_addresses of this NatGatewayPropertiesFormat.
        :rtype: List[NatGatewayPropertiesFormatPublicIpAddressesInner]
        """
        return self._public_ip_addresses

    @public_ip_addresses.setter
    def public_ip_addresses(self, public_ip_addresses):
        """Sets the public_ip_addresses of this NatGatewayPropertiesFormat.

        An array of public ip addresses associated with the nat gateway resource.

        :param public_ip_addresses: The public_ip_addresses of this NatGatewayPropertiesFormat.
        :type public_ip_addresses: List[NatGatewayPropertiesFormatPublicIpAddressesInner]
        """

        self._public_ip_addresses = public_ip_addresses

    @property
    def public_ip_prefixes(self):
        """Gets the public_ip_prefixes of this NatGatewayPropertiesFormat.

        An array of public ip prefixes associated with the nat gateway resource.

        :return: The public_ip_prefixes of this NatGatewayPropertiesFormat.
        :rtype: List[NatGatewayPropertiesFormatPublicIpAddressesInner]
        """
        return self._public_ip_prefixes

    @public_ip_prefixes.setter
    def public_ip_prefixes(self, public_ip_prefixes):
        """Sets the public_ip_prefixes of this NatGatewayPropertiesFormat.

        An array of public ip prefixes associated with the nat gateway resource.

        :param public_ip_prefixes: The public_ip_prefixes of this NatGatewayPropertiesFormat.
        :type public_ip_prefixes: List[NatGatewayPropertiesFormatPublicIpAddressesInner]
        """

        self._public_ip_prefixes = public_ip_prefixes

    @property
    def resource_guid(self):
        """Gets the resource_guid of this NatGatewayPropertiesFormat.

        The resource GUID property of the nat gateway resource.

        :return: The resource_guid of this NatGatewayPropertiesFormat.
        :rtype: str
        """
        return self._resource_guid

    @resource_guid.setter
    def resource_guid(self, resource_guid):
        """Sets the resource_guid of this NatGatewayPropertiesFormat.

        The resource GUID property of the nat gateway resource.

        :param resource_guid: The resource_guid of this NatGatewayPropertiesFormat.
        :type resource_guid: str
        """

        self._resource_guid = resource_guid

    @property
    def subnets(self):
        """Gets the subnets of this NatGatewayPropertiesFormat.

        An array of references to the subnets using this nat gateway resource.

        :return: The subnets of this NatGatewayPropertiesFormat.
        :rtype: List[NatGatewayPropertiesFormatPublicIpAddressesInner]
        """
        return self._subnets

    @subnets.setter
    def subnets(self, subnets):
        """Sets the subnets of this NatGatewayPropertiesFormat.

        An array of references to the subnets using this nat gateway resource.

        :param subnets: The subnets of this NatGatewayPropertiesFormat.
        :type subnets: List[NatGatewayPropertiesFormatPublicIpAddressesInner]
        """

        self._subnets = subnets
