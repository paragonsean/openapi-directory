/*
 * ApiManagementClient
 * Use these REST APIs for performing operations on API entity and their Operations associated with your Azure API Management deployment.
 *
 * The version of the OpenAPI document: 2017-03-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ApiListByTags200ResponseValueInnerPropertiesApiPropertiesApiVersionSet;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Api Entity Properties
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:29:40.041986-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ApiListByTags200ResponseValueInnerPropertiesApiProperties {
  public static final String SERIALIZED_NAME_API_VERSION_SET = "apiVersionSet";
  @SerializedName(SERIALIZED_NAME_API_VERSION_SET)
  private ApiListByTags200ResponseValueInnerPropertiesApiPropertiesApiVersionSet apiVersionSet;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_PATH = "path";
  @SerializedName(SERIALIZED_NAME_PATH)
  private String path;

  /**
   * Gets or Sets protocols
   */
  @JsonAdapter(ProtocolsEnum.Adapter.class)
  public enum ProtocolsEnum {
    HTTP("http"),
    
    HTTPS("https");

    private String value;

    ProtocolsEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ProtocolsEnum fromValue(String value) {
      for (ProtocolsEnum b : ProtocolsEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ProtocolsEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ProtocolsEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ProtocolsEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ProtocolsEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      ProtocolsEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_PROTOCOLS = "protocols";
  @SerializedName(SERIALIZED_NAME_PROTOCOLS)
  private List<ProtocolsEnum> protocols = new ArrayList<>();

  public static final String SERIALIZED_NAME_SERVICE_URL = "serviceUrl";
  @SerializedName(SERIALIZED_NAME_SERVICE_URL)
  private String serviceUrl;

  public ApiListByTags200ResponseValueInnerPropertiesApiProperties() {
  }

  public ApiListByTags200ResponseValueInnerPropertiesApiProperties apiVersionSet(ApiListByTags200ResponseValueInnerPropertiesApiPropertiesApiVersionSet apiVersionSet) {
    this.apiVersionSet = apiVersionSet;
    return this;
  }

  /**
   * Get apiVersionSet
   * @return apiVersionSet
   */
  @javax.annotation.Nullable
  public ApiListByTags200ResponseValueInnerPropertiesApiPropertiesApiVersionSet getApiVersionSet() {
    return apiVersionSet;
  }

  public void setApiVersionSet(ApiListByTags200ResponseValueInnerPropertiesApiPropertiesApiVersionSet apiVersionSet) {
    this.apiVersionSet = apiVersionSet;
  }


  public ApiListByTags200ResponseValueInnerPropertiesApiProperties displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * API name.
   * @return displayName
   */
  @javax.annotation.Nullable
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public ApiListByTags200ResponseValueInnerPropertiesApiProperties path(String path) {
    this.path = path;
    return this;
  }

  /**
   * Relative URL uniquely identifying this API and all of its resource paths within the API Management service instance. It is appended to the API endpoint base URL specified during the service instance creation to form a public URL for this API.
   * @return path
   */
  @javax.annotation.Nonnull
  public String getPath() {
    return path;
  }

  public void setPath(String path) {
    this.path = path;
  }


  public ApiListByTags200ResponseValueInnerPropertiesApiProperties protocols(List<ProtocolsEnum> protocols) {
    this.protocols = protocols;
    return this;
  }

  public ApiListByTags200ResponseValueInnerPropertiesApiProperties addProtocolsItem(ProtocolsEnum protocolsItem) {
    if (this.protocols == null) {
      this.protocols = new ArrayList<>();
    }
    this.protocols.add(protocolsItem);
    return this;
  }

  /**
   * Describes on which protocols the operations in this API can be invoked.
   * @return protocols
   */
  @javax.annotation.Nullable
  public List<ProtocolsEnum> getProtocols() {
    return protocols;
  }

  public void setProtocols(List<ProtocolsEnum> protocols) {
    this.protocols = protocols;
  }


  public ApiListByTags200ResponseValueInnerPropertiesApiProperties serviceUrl(String serviceUrl) {
    this.serviceUrl = serviceUrl;
    return this;
  }

  /**
   * Absolute URL of the backend service implementing this API.
   * @return serviceUrl
   */
  @javax.annotation.Nullable
  public String getServiceUrl() {
    return serviceUrl;
  }

  public void setServiceUrl(String serviceUrl) {
    this.serviceUrl = serviceUrl;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApiListByTags200ResponseValueInnerPropertiesApiProperties apiListByTags200ResponseValueInnerPropertiesApiProperties = (ApiListByTags200ResponseValueInnerPropertiesApiProperties) o;
    return Objects.equals(this.apiVersionSet, apiListByTags200ResponseValueInnerPropertiesApiProperties.apiVersionSet) &&
        Objects.equals(this.displayName, apiListByTags200ResponseValueInnerPropertiesApiProperties.displayName) &&
        Objects.equals(this.path, apiListByTags200ResponseValueInnerPropertiesApiProperties.path) &&
        Objects.equals(this.protocols, apiListByTags200ResponseValueInnerPropertiesApiProperties.protocols) &&
        Objects.equals(this.serviceUrl, apiListByTags200ResponseValueInnerPropertiesApiProperties.serviceUrl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(apiVersionSet, displayName, path, protocols, serviceUrl);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApiListByTags200ResponseValueInnerPropertiesApiProperties {\n");
    sb.append("    apiVersionSet: ").append(toIndentedString(apiVersionSet)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    path: ").append(toIndentedString(path)).append("\n");
    sb.append("    protocols: ").append(toIndentedString(protocols)).append("\n");
    sb.append("    serviceUrl: ").append(toIndentedString(serviceUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("apiVersionSet");
    openapiFields.add("displayName");
    openapiFields.add("path");
    openapiFields.add("protocols");
    openapiFields.add("serviceUrl");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("path");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ApiListByTags200ResponseValueInnerPropertiesApiProperties
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ApiListByTags200ResponseValueInnerPropertiesApiProperties.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ApiListByTags200ResponseValueInnerPropertiesApiProperties is not found in the empty JSON string", ApiListByTags200ResponseValueInnerPropertiesApiProperties.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ApiListByTags200ResponseValueInnerPropertiesApiProperties.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ApiListByTags200ResponseValueInnerPropertiesApiProperties` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ApiListByTags200ResponseValueInnerPropertiesApiProperties.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `apiVersionSet`
      if (jsonObj.get("apiVersionSet") != null && !jsonObj.get("apiVersionSet").isJsonNull()) {
        ApiListByTags200ResponseValueInnerPropertiesApiPropertiesApiVersionSet.validateJsonElement(jsonObj.get("apiVersionSet"));
      }
      if ((jsonObj.get("displayName") != null && !jsonObj.get("displayName").isJsonNull()) && !jsonObj.get("displayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayName").toString()));
      }
      if (!jsonObj.get("path").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `path` to be a primitive type in the JSON string but got `%s`", jsonObj.get("path").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("protocols") != null && !jsonObj.get("protocols").isJsonNull() && !jsonObj.get("protocols").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `protocols` to be an array in the JSON string but got `%s`", jsonObj.get("protocols").toString()));
      }
      if ((jsonObj.get("serviceUrl") != null && !jsonObj.get("serviceUrl").isJsonNull()) && !jsonObj.get("serviceUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `serviceUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("serviceUrl").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ApiListByTags200ResponseValueInnerPropertiesApiProperties.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ApiListByTags200ResponseValueInnerPropertiesApiProperties' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ApiListByTags200ResponseValueInnerPropertiesApiProperties> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ApiListByTags200ResponseValueInnerPropertiesApiProperties.class));

       return (TypeAdapter<T>) new TypeAdapter<ApiListByTags200ResponseValueInnerPropertiesApiProperties>() {
           @Override
           public void write(JsonWriter out, ApiListByTags200ResponseValueInnerPropertiesApiProperties value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ApiListByTags200ResponseValueInnerPropertiesApiProperties read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ApiListByTags200ResponseValueInnerPropertiesApiProperties given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ApiListByTags200ResponseValueInnerPropertiesApiProperties
   * @throws IOException if the JSON string is invalid with respect to ApiListByTags200ResponseValueInnerPropertiesApiProperties
   */
  public static ApiListByTags200ResponseValueInnerPropertiesApiProperties fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ApiListByTags200ResponseValueInnerPropertiesApiProperties.class);
  }

  /**
   * Convert an instance of ApiListByTags200ResponseValueInnerPropertiesApiProperties to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

