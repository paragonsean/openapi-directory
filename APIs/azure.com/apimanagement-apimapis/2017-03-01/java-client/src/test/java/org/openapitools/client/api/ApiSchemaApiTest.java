/*
 * ApiManagementClient
 * Use these REST APIs for performing operations on API entity and their Operations associated with your Azure API Management deployment.
 *
 * The version of the OpenAPI document: 2017-03-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ApiListByServiceDefaultResponse;
import org.openapitools.client.model.SchemaCollection;
import org.openapitools.client.model.SchemaContract;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ApiSchemaApi
 */
@Disabled
public class ApiSchemaApiTest {

    private final ApiSchemaApi api = new ApiSchemaApi();

    /**
     * Creates or updates schema configuration for the API.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiSchemaCreateOrUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String serviceName = null;
        String apiId = null;
        String schemaId = null;
        String apiVersion = null;
        String subscriptionId = null;
        SchemaContract parameters = null;
        String ifMatch = null;
        SchemaContract response = api.apiSchemaCreateOrUpdate(resourceGroupName, serviceName, apiId, schemaId, apiVersion, subscriptionId, parameters, ifMatch);
        // TODO: test validations
    }

    /**
     * Deletes the schema configuration at the Api.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiSchemaDeleteTest() throws ApiException {
        String resourceGroupName = null;
        String serviceName = null;
        String apiId = null;
        String schemaId = null;
        String ifMatch = null;
        String apiVersion = null;
        String subscriptionId = null;
        api.apiSchemaDelete(resourceGroupName, serviceName, apiId, schemaId, ifMatch, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Get the schema configuration at the API level.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiSchemaGetTest() throws ApiException {
        String resourceGroupName = null;
        String serviceName = null;
        String apiId = null;
        String schemaId = null;
        String apiVersion = null;
        String subscriptionId = null;
        SchemaContract response = api.apiSchemaGet(resourceGroupName, serviceName, apiId, schemaId, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Gets the entity state (Etag) version of the schema specified by its identifier.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiSchemaGetEntityTagTest() throws ApiException {
        String resourceGroupName = null;
        String serviceName = null;
        String apiId = null;
        String schemaId = null;
        String apiVersion = null;
        String subscriptionId = null;
        api.apiSchemaGetEntityTag(resourceGroupName, serviceName, apiId, schemaId, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Get the schema configuration at the API level.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiSchemaListByApiTest() throws ApiException {
        String resourceGroupName = null;
        String serviceName = null;
        String apiId = null;
        String apiVersion = null;
        String subscriptionId = null;
        SchemaCollection response = api.apiSchemaListByApi(resourceGroupName, serviceName, apiId, apiVersion, subscriptionId);
        // TODO: test validations
    }

}
