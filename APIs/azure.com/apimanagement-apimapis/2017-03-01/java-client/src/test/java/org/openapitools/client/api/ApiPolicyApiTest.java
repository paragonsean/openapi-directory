/*
 * ApiManagementClient
 * Use these REST APIs for performing operations on API entity and their Operations associated with your Azure API Management deployment.
 *
 * The version of the OpenAPI document: 2017-03-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ApiListByServiceDefaultResponse;
import org.openapitools.client.model.ApiOperationPolicyGet200Response;
import org.openapitools.client.model.ApiOperationPolicyListByOperation200Response;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ApiPolicyApi
 */
@Disabled
public class ApiPolicyApiTest {

    private final ApiPolicyApi api = new ApiPolicyApi();

    /**
     * Creates or updates policy configuration for the API.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiPolicyCreateOrUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String serviceName = null;
        String apiId = null;
        String policyId = null;
        String ifMatch = null;
        String apiVersion = null;
        String subscriptionId = null;
        ApiOperationPolicyGet200Response parameters = null;
        ApiOperationPolicyGet200Response response = api.apiPolicyCreateOrUpdate(resourceGroupName, serviceName, apiId, policyId, ifMatch, apiVersion, subscriptionId, parameters);
        // TODO: test validations
    }

    /**
     * Deletes the policy configuration at the Api.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiPolicyDeleteTest() throws ApiException {
        String resourceGroupName = null;
        String serviceName = null;
        String apiId = null;
        String policyId = null;
        String ifMatch = null;
        String apiVersion = null;
        String subscriptionId = null;
        api.apiPolicyDelete(resourceGroupName, serviceName, apiId, policyId, ifMatch, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Get the policy configuration at the API level.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiPolicyGetTest() throws ApiException {
        String resourceGroupName = null;
        String serviceName = null;
        String apiId = null;
        String policyId = null;
        String apiVersion = null;
        String subscriptionId = null;
        ApiOperationPolicyGet200Response response = api.apiPolicyGet(resourceGroupName, serviceName, apiId, policyId, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Gets the entity state (Etag) version of the API policy specified by its identifier.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiPolicyGetEntityTagTest() throws ApiException {
        String resourceGroupName = null;
        String serviceName = null;
        String apiId = null;
        String policyId = null;
        String apiVersion = null;
        String subscriptionId = null;
        api.apiPolicyGetEntityTag(resourceGroupName, serviceName, apiId, policyId, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Get the policy configuration at the API level.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiPolicyListByApiTest() throws ApiException {
        String resourceGroupName = null;
        String serviceName = null;
        String apiId = null;
        String apiVersion = null;
        String subscriptionId = null;
        ApiOperationPolicyListByOperation200Response response = api.apiPolicyListByApi(resourceGroupName, serviceName, apiId, apiVersion, subscriptionId);
        // TODO: test validations
    }

}
