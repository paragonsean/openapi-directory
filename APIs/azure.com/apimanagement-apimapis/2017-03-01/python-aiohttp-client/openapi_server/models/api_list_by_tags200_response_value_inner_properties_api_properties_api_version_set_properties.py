# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ApiListByTags200ResponseValueInnerPropertiesApiPropertiesApiVersionSetProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, display_name: str=None, versioning_scheme: str=None):
        """ApiListByTags200ResponseValueInnerPropertiesApiPropertiesApiVersionSetProperties - a model defined in OpenAPI

        :param display_name: The display_name of this ApiListByTags200ResponseValueInnerPropertiesApiPropertiesApiVersionSetProperties.
        :param versioning_scheme: The versioning_scheme of this ApiListByTags200ResponseValueInnerPropertiesApiPropertiesApiVersionSetProperties.
        """
        self.openapi_types = {
            'display_name': str,
            'versioning_scheme': str
        }

        self.attribute_map = {
            'display_name': 'displayName',
            'versioning_scheme': 'versioningScheme'
        }

        self._display_name = display_name
        self._versioning_scheme = versioning_scheme

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApiListByTags200ResponseValueInnerPropertiesApiPropertiesApiVersionSetProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Api_ListByTags_200_response_value_inner_properties_api_properties_apiVersionSet_properties of this ApiListByTags200ResponseValueInnerPropertiesApiPropertiesApiVersionSetProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def display_name(self):
        """Gets the display_name of this ApiListByTags200ResponseValueInnerPropertiesApiPropertiesApiVersionSetProperties.

        Name of API Version Set

        :return: The display_name of this ApiListByTags200ResponseValueInnerPropertiesApiPropertiesApiVersionSetProperties.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this ApiListByTags200ResponseValueInnerPropertiesApiPropertiesApiVersionSetProperties.

        Name of API Version Set

        :param display_name: The display_name of this ApiListByTags200ResponseValueInnerPropertiesApiPropertiesApiVersionSetProperties.
        :type display_name: str
        """
        if display_name is None:
            raise ValueError("Invalid value for `display_name`, must not be `None`")
        if display_name is not None and len(display_name) > 100:
            raise ValueError("Invalid value for `display_name`, length must be less than or equal to `100`")
        if display_name is not None and len(display_name) < 1:
            raise ValueError("Invalid value for `display_name`, length must be greater than or equal to `1`")

        self._display_name = display_name

    @property
    def versioning_scheme(self):
        """Gets the versioning_scheme of this ApiListByTags200ResponseValueInnerPropertiesApiPropertiesApiVersionSetProperties.

        An value that determines where the API Version identifer will be located in a HTTP request.

        :return: The versioning_scheme of this ApiListByTags200ResponseValueInnerPropertiesApiPropertiesApiVersionSetProperties.
        :rtype: str
        """
        return self._versioning_scheme

    @versioning_scheme.setter
    def versioning_scheme(self, versioning_scheme):
        """Sets the versioning_scheme of this ApiListByTags200ResponseValueInnerPropertiesApiPropertiesApiVersionSetProperties.

        An value that determines where the API Version identifer will be located in a HTTP request.

        :param versioning_scheme: The versioning_scheme of this ApiListByTags200ResponseValueInnerPropertiesApiPropertiesApiVersionSetProperties.
        :type versioning_scheme: str
        """
        allowed_values = ["Segment", "Query", "Header"]  # noqa: E501
        if versioning_scheme not in allowed_values:
            raise ValueError(
                "Invalid value for `versioning_scheme` ({0}), must be one of {1}"
                .format(versioning_scheme, allowed_values)
            )

        self._versioning_scheme = versioning_scheme
