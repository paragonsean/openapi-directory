# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ApiRevisionContractProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, api_id: str=None, api_revision: str=None, created_date_time: datetime=None, description: str=None, is_current: bool=None, is_online: bool=None, private_url: str=None, updated_date_time: datetime=None):
        """ApiRevisionContractProperties - a model defined in OpenAPI

        :param api_id: The api_id of this ApiRevisionContractProperties.
        :param api_revision: The api_revision of this ApiRevisionContractProperties.
        :param created_date_time: The created_date_time of this ApiRevisionContractProperties.
        :param description: The description of this ApiRevisionContractProperties.
        :param is_current: The is_current of this ApiRevisionContractProperties.
        :param is_online: The is_online of this ApiRevisionContractProperties.
        :param private_url: The private_url of this ApiRevisionContractProperties.
        :param updated_date_time: The updated_date_time of this ApiRevisionContractProperties.
        """
        self.openapi_types = {
            'api_id': str,
            'api_revision': str,
            'created_date_time': datetime,
            'description': str,
            'is_current': bool,
            'is_online': bool,
            'private_url': str,
            'updated_date_time': datetime
        }

        self.attribute_map = {
            'api_id': 'apiId',
            'api_revision': 'apiRevision',
            'created_date_time': 'createdDateTime',
            'description': 'description',
            'is_current': 'isCurrent',
            'is_online': 'isOnline',
            'private_url': 'privateUrl',
            'updated_date_time': 'updatedDateTime'
        }

        self._api_id = api_id
        self._api_revision = api_revision
        self._created_date_time = created_date_time
        self._description = description
        self._is_current = is_current
        self._is_online = is_online
        self._private_url = private_url
        self._updated_date_time = updated_date_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApiRevisionContractProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ApiRevisionContractProperties of this ApiRevisionContractProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def api_id(self):
        """Gets the api_id of this ApiRevisionContractProperties.

        Identifier of the API Revision.

        :return: The api_id of this ApiRevisionContractProperties.
        :rtype: str
        """
        return self._api_id

    @api_id.setter
    def api_id(self, api_id):
        """Sets the api_id of this ApiRevisionContractProperties.

        Identifier of the API Revision.

        :param api_id: The api_id of this ApiRevisionContractProperties.
        :type api_id: str
        """

        self._api_id = api_id

    @property
    def api_revision(self):
        """Gets the api_revision of this ApiRevisionContractProperties.

        Revision number of API.

        :return: The api_revision of this ApiRevisionContractProperties.
        :rtype: str
        """
        return self._api_revision

    @api_revision.setter
    def api_revision(self, api_revision):
        """Sets the api_revision of this ApiRevisionContractProperties.

        Revision number of API.

        :param api_revision: The api_revision of this ApiRevisionContractProperties.
        :type api_revision: str
        """
        if api_revision is not None and len(api_revision) > 100:
            raise ValueError("Invalid value for `api_revision`, length must be less than or equal to `100`")
        if api_revision is not None and len(api_revision) < 1:
            raise ValueError("Invalid value for `api_revision`, length must be greater than or equal to `1`")

        self._api_revision = api_revision

    @property
    def created_date_time(self):
        """Gets the created_date_time of this ApiRevisionContractProperties.

        The time the API Revision was created. The date conforms to the following format: yyyy-MM-ddTHH:mm:ssZ as specified by the ISO 8601 standard.

        :return: The created_date_time of this ApiRevisionContractProperties.
        :rtype: datetime
        """
        return self._created_date_time

    @created_date_time.setter
    def created_date_time(self, created_date_time):
        """Sets the created_date_time of this ApiRevisionContractProperties.

        The time the API Revision was created. The date conforms to the following format: yyyy-MM-ddTHH:mm:ssZ as specified by the ISO 8601 standard.

        :param created_date_time: The created_date_time of this ApiRevisionContractProperties.
        :type created_date_time: datetime
        """

        self._created_date_time = created_date_time

    @property
    def description(self):
        """Gets the description of this ApiRevisionContractProperties.

        Description of the API Revision.

        :return: The description of this ApiRevisionContractProperties.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ApiRevisionContractProperties.

        Description of the API Revision.

        :param description: The description of this ApiRevisionContractProperties.
        :type description: str
        """
        if description is not None and len(description) > 256:
            raise ValueError("Invalid value for `description`, length must be less than or equal to `256`")

        self._description = description

    @property
    def is_current(self):
        """Gets the is_current of this ApiRevisionContractProperties.

        Indicates if API revision is accessible via the gateway.

        :return: The is_current of this ApiRevisionContractProperties.
        :rtype: bool
        """
        return self._is_current

    @is_current.setter
    def is_current(self, is_current):
        """Sets the is_current of this ApiRevisionContractProperties.

        Indicates if API revision is accessible via the gateway.

        :param is_current: The is_current of this ApiRevisionContractProperties.
        :type is_current: bool
        """

        self._is_current = is_current

    @property
    def is_online(self):
        """Gets the is_online of this ApiRevisionContractProperties.

        Indicates if API revision is the current api revision.

        :return: The is_online of this ApiRevisionContractProperties.
        :rtype: bool
        """
        return self._is_online

    @is_online.setter
    def is_online(self, is_online):
        """Sets the is_online of this ApiRevisionContractProperties.

        Indicates if API revision is the current api revision.

        :param is_online: The is_online of this ApiRevisionContractProperties.
        :type is_online: bool
        """

        self._is_online = is_online

    @property
    def private_url(self):
        """Gets the private_url of this ApiRevisionContractProperties.

        Gateway URL for accessing the non-current API Revision.

        :return: The private_url of this ApiRevisionContractProperties.
        :rtype: str
        """
        return self._private_url

    @private_url.setter
    def private_url(self, private_url):
        """Sets the private_url of this ApiRevisionContractProperties.

        Gateway URL for accessing the non-current API Revision.

        :param private_url: The private_url of this ApiRevisionContractProperties.
        :type private_url: str
        """

        self._private_url = private_url

    @property
    def updated_date_time(self):
        """Gets the updated_date_time of this ApiRevisionContractProperties.

        The time the API Revision were updated. The date conforms to the following format: yyyy-MM-ddTHH:mm:ssZ as specified by the ISO 8601 standard.

        :return: The updated_date_time of this ApiRevisionContractProperties.
        :rtype: datetime
        """
        return self._updated_date_time

    @updated_date_time.setter
    def updated_date_time(self, updated_date_time):
        """Sets the updated_date_time of this ApiRevisionContractProperties.

        The time the API Revision were updated. The date conforms to the following format: yyyy-MM-ddTHH:mm:ssZ as specified by the ISO 8601 standard.

        :param updated_date_time: The updated_date_time of this ApiRevisionContractProperties.
        :type updated_date_time: datetime
        """

        self._updated_date_time = updated_date_time
