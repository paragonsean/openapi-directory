/**
 * ApiManagementClient
 * Use these REST APIs for performing operations on API entity and their Operations associated with your Azure API Management deployment.
 *
 * The version of the OpenAPI document: 2017-03-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIApiDiagnosticLogger_ListByService_200_response_value_inner_properties.h
 *
 * The Logger entity in API Management represents an event sink that you can use to log API Management events. Currently the Logger entity supports logging API Management events to Azure Event Hubs.
 */

#ifndef OAIApiDiagnosticLogger_ListByService_200_response_value_inner_properties_H
#define OAIApiDiagnosticLogger_ListByService_200_response_value_inner_properties_H

#include <QJsonObject>

#include "OAIApiDiagnosticLogger_ListByService_200_response_value_inner_properties_sampling.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIApiDiagnosticLogger_ListByService_200_response_value_inner_properties_sampling;

class OAIApiDiagnosticLogger_ListByService_200_response_value_inner_properties : public OAIObject {
public:
    OAIApiDiagnosticLogger_ListByService_200_response_value_inner_properties();
    OAIApiDiagnosticLogger_ListByService_200_response_value_inner_properties(QString json);
    ~OAIApiDiagnosticLogger_ListByService_200_response_value_inner_properties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QMap<QString, QString> getCredentials() const;
    void setCredentials(const QMap<QString, QString> &credentials);
    bool is_credentials_Set() const;
    bool is_credentials_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    bool isIsBuffered() const;
    void setIsBuffered(const bool &is_buffered);
    bool is_is_buffered_Set() const;
    bool is_is_buffered_Valid() const;

    QString getLoggerType() const;
    void setLoggerType(const QString &logger_type);
    bool is_logger_type_Set() const;
    bool is_logger_type_Valid() const;

    OAIApiDiagnosticLogger_ListByService_200_response_value_inner_properties_sampling getSampling() const;
    void setSampling(const OAIApiDiagnosticLogger_ListByService_200_response_value_inner_properties_sampling &sampling);
    bool is_sampling_Set() const;
    bool is_sampling_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QMap<QString, QString> m_credentials;
    bool m_credentials_isSet;
    bool m_credentials_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    bool m_is_buffered;
    bool m_is_buffered_isSet;
    bool m_is_buffered_isValid;

    QString m_logger_type;
    bool m_logger_type_isSet;
    bool m_logger_type_isValid;

    OAIApiDiagnosticLogger_ListByService_200_response_value_inner_properties_sampling m_sampling;
    bool m_sampling_isSet;
    bool m_sampling_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIApiDiagnosticLogger_ListByService_200_response_value_inner_properties)

#endif // OAIApiDiagnosticLogger_ListByService_200_response_value_inner_properties_H
