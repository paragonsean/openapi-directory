/*
 * ApiManagementClient
 * Use these REST APIs for performing operations on API entity and their Operations associated with your Azure API Management deployment.
 *
 * The version of the OpenAPI document: 2018-06-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Summary of revision metadata.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:29:37.783793-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ApiRevisionsList200ResponseValueInner {
  public static final String SERIALIZED_NAME_API_ID = "apiId";
  @SerializedName(SERIALIZED_NAME_API_ID)
  private String apiId;

  public static final String SERIALIZED_NAME_API_REVISION = "apiRevision";
  @SerializedName(SERIALIZED_NAME_API_REVISION)
  private String apiRevision;

  public static final String SERIALIZED_NAME_CREATED_DATE_TIME = "createdDateTime";
  @SerializedName(SERIALIZED_NAME_CREATED_DATE_TIME)
  private OffsetDateTime createdDateTime;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_IS_CURRENT = "isCurrent";
  @SerializedName(SERIALIZED_NAME_IS_CURRENT)
  private Boolean isCurrent;

  public static final String SERIALIZED_NAME_IS_ONLINE = "isOnline";
  @SerializedName(SERIALIZED_NAME_IS_ONLINE)
  private Boolean isOnline;

  public static final String SERIALIZED_NAME_PRIVATE_URL = "privateUrl";
  @SerializedName(SERIALIZED_NAME_PRIVATE_URL)
  private String privateUrl;

  public static final String SERIALIZED_NAME_UPDATED_DATE_TIME = "updatedDateTime";
  @SerializedName(SERIALIZED_NAME_UPDATED_DATE_TIME)
  private OffsetDateTime updatedDateTime;

  public ApiRevisionsList200ResponseValueInner() {
  }

  public ApiRevisionsList200ResponseValueInner(
     String apiId, 
     String apiRevision, 
     OffsetDateTime createdDateTime, 
     String description, 
     Boolean isCurrent, 
     Boolean isOnline, 
     String privateUrl, 
     OffsetDateTime updatedDateTime
  ) {
    this();
    this.apiId = apiId;
    this.apiRevision = apiRevision;
    this.createdDateTime = createdDateTime;
    this.description = description;
    this.isCurrent = isCurrent;
    this.isOnline = isOnline;
    this.privateUrl = privateUrl;
    this.updatedDateTime = updatedDateTime;
  }

  /**
   * Identifier of the API Revision.
   * @return apiId
   */
  @javax.annotation.Nullable
  public String getApiId() {
    return apiId;
  }



  /**
   * Revision number of API.
   * @return apiRevision
   */
  @javax.annotation.Nullable
  public String getApiRevision() {
    return apiRevision;
  }



  /**
   * The time the API Revision was created. The date conforms to the following format: yyyy-MM-ddTHH:mm:ssZ as specified by the ISO 8601 standard.
   * @return createdDateTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedDateTime() {
    return createdDateTime;
  }



  /**
   * Description of the API Revision.
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }



  /**
   * Indicates if API revision is accessible via the gateway.
   * @return isCurrent
   */
  @javax.annotation.Nullable
  public Boolean getIsCurrent() {
    return isCurrent;
  }



  /**
   * Indicates if API revision is the current api revision.
   * @return isOnline
   */
  @javax.annotation.Nullable
  public Boolean getIsOnline() {
    return isOnline;
  }



  /**
   * Gateway URL for accessing the non-current API Revision.
   * @return privateUrl
   */
  @javax.annotation.Nullable
  public String getPrivateUrl() {
    return privateUrl;
  }



  /**
   * The time the API Revision were updated. The date conforms to the following format: yyyy-MM-ddTHH:mm:ssZ as specified by the ISO 8601 standard.
   * @return updatedDateTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getUpdatedDateTime() {
    return updatedDateTime;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApiRevisionsList200ResponseValueInner apiRevisionsList200ResponseValueInner = (ApiRevisionsList200ResponseValueInner) o;
    return Objects.equals(this.apiId, apiRevisionsList200ResponseValueInner.apiId) &&
        Objects.equals(this.apiRevision, apiRevisionsList200ResponseValueInner.apiRevision) &&
        Objects.equals(this.createdDateTime, apiRevisionsList200ResponseValueInner.createdDateTime) &&
        Objects.equals(this.description, apiRevisionsList200ResponseValueInner.description) &&
        Objects.equals(this.isCurrent, apiRevisionsList200ResponseValueInner.isCurrent) &&
        Objects.equals(this.isOnline, apiRevisionsList200ResponseValueInner.isOnline) &&
        Objects.equals(this.privateUrl, apiRevisionsList200ResponseValueInner.privateUrl) &&
        Objects.equals(this.updatedDateTime, apiRevisionsList200ResponseValueInner.updatedDateTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(apiId, apiRevision, createdDateTime, description, isCurrent, isOnline, privateUrl, updatedDateTime);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApiRevisionsList200ResponseValueInner {\n");
    sb.append("    apiId: ").append(toIndentedString(apiId)).append("\n");
    sb.append("    apiRevision: ").append(toIndentedString(apiRevision)).append("\n");
    sb.append("    createdDateTime: ").append(toIndentedString(createdDateTime)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    isCurrent: ").append(toIndentedString(isCurrent)).append("\n");
    sb.append("    isOnline: ").append(toIndentedString(isOnline)).append("\n");
    sb.append("    privateUrl: ").append(toIndentedString(privateUrl)).append("\n");
    sb.append("    updatedDateTime: ").append(toIndentedString(updatedDateTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("apiId");
    openapiFields.add("apiRevision");
    openapiFields.add("createdDateTime");
    openapiFields.add("description");
    openapiFields.add("isCurrent");
    openapiFields.add("isOnline");
    openapiFields.add("privateUrl");
    openapiFields.add("updatedDateTime");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ApiRevisionsList200ResponseValueInner
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ApiRevisionsList200ResponseValueInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ApiRevisionsList200ResponseValueInner is not found in the empty JSON string", ApiRevisionsList200ResponseValueInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ApiRevisionsList200ResponseValueInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ApiRevisionsList200ResponseValueInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("apiId") != null && !jsonObj.get("apiId").isJsonNull()) && !jsonObj.get("apiId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `apiId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("apiId").toString()));
      }
      if ((jsonObj.get("apiRevision") != null && !jsonObj.get("apiRevision").isJsonNull()) && !jsonObj.get("apiRevision").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `apiRevision` to be a primitive type in the JSON string but got `%s`", jsonObj.get("apiRevision").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("privateUrl") != null && !jsonObj.get("privateUrl").isJsonNull()) && !jsonObj.get("privateUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `privateUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("privateUrl").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ApiRevisionsList200ResponseValueInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ApiRevisionsList200ResponseValueInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ApiRevisionsList200ResponseValueInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ApiRevisionsList200ResponseValueInner.class));

       return (TypeAdapter<T>) new TypeAdapter<ApiRevisionsList200ResponseValueInner>() {
           @Override
           public void write(JsonWriter out, ApiRevisionsList200ResponseValueInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ApiRevisionsList200ResponseValueInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ApiRevisionsList200ResponseValueInner given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ApiRevisionsList200ResponseValueInner
   * @throws IOException if the JSON string is invalid with respect to ApiRevisionsList200ResponseValueInner
   */
  public static ApiRevisionsList200ResponseValueInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ApiRevisionsList200ResponseValueInner.class);
  }

  /**
   * Convert an instance of ApiRevisionsList200ResponseValueInner to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

