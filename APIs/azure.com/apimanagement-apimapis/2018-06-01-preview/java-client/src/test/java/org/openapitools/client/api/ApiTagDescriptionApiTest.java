/*
 * ApiManagementClient
 * Use these REST APIs for performing operations on API entity and their Operations associated with your Azure API Management deployment.
 *
 * The version of the OpenAPI document: 2018-06-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ApiListByServiceDefaultResponse;
import org.openapitools.client.model.TagDescriptionCreateOrUpdateRequest;
import org.openapitools.client.model.TagDescriptionGet200Response;
import org.openapitools.client.model.TagDescriptionListByApi200Response;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ApiTagDescriptionApi
 */
@Disabled
public class ApiTagDescriptionApiTest {

    private final ApiTagDescriptionApi api = new ApiTagDescriptionApi();

    /**
     * Create/Update tag description in scope of the Api.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tagDescriptionCreateOrUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String serviceName = null;
        String apiId = null;
        String tagId = null;
        String apiVersion = null;
        String subscriptionId = null;
        TagDescriptionCreateOrUpdateRequest parameters = null;
        String ifMatch = null;
        TagDescriptionGet200Response response = api.tagDescriptionCreateOrUpdate(resourceGroupName, serviceName, apiId, tagId, apiVersion, subscriptionId, parameters, ifMatch);
        // TODO: test validations
    }

    /**
     * Delete tag description for the Api.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tagDescriptionDeleteTest() throws ApiException {
        String resourceGroupName = null;
        String serviceName = null;
        String apiId = null;
        String tagId = null;
        String ifMatch = null;
        String apiVersion = null;
        String subscriptionId = null;
        api.tagDescriptionDelete(resourceGroupName, serviceName, apiId, tagId, ifMatch, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Get Tag description in scope of API
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tagDescriptionGetTest() throws ApiException {
        String resourceGroupName = null;
        String serviceName = null;
        String apiId = null;
        String tagId = null;
        String apiVersion = null;
        String subscriptionId = null;
        TagDescriptionGet200Response response = api.tagDescriptionGet(resourceGroupName, serviceName, apiId, tagId, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Gets the entity state version of the tag specified by its identifier.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tagDescriptionGetEntityStateTest() throws ApiException {
        String resourceGroupName = null;
        String serviceName = null;
        String apiId = null;
        String tagId = null;
        String apiVersion = null;
        String subscriptionId = null;
        api.tagDescriptionGetEntityState(resourceGroupName, serviceName, apiId, tagId, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Lists all Tags descriptions in scope of API. Model similar to swagger - tagDescription is defined on API level but tag may be assigned to the Operations
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tagDescriptionListByApiTest() throws ApiException {
        String resourceGroupName = null;
        String serviceName = null;
        String apiId = null;
        String apiVersion = null;
        String subscriptionId = null;
        String $filter = null;
        Integer $top = null;
        Integer $skip = null;
        TagDescriptionListByApi200Response response = api.tagDescriptionListByApi(resourceGroupName, serviceName, apiId, apiVersion, subscriptionId, $filter, $top, $skip);
        // TODO: test validations
    }

}
