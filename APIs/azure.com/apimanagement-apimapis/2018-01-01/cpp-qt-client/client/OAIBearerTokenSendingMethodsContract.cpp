/**
 * ApiManagementClient
 * Use these REST APIs for performing operations on API entity and their Operations associated with your Azure API Management deployment.
 *
 * The version of the OpenAPI document: 2018-01-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBearerTokenSendingMethodsContract.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBearerTokenSendingMethodsContract::OAIBearerTokenSendingMethodsContract(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBearerTokenSendingMethodsContract::OAIBearerTokenSendingMethodsContract() {
    this->initializeModel();
}

OAIBearerTokenSendingMethodsContract::~OAIBearerTokenSendingMethodsContract() {}

void OAIBearerTokenSendingMethodsContract::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIBearerTokenSendingMethodsContract::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIBearerTokenSendingMethodsContract::fromJson(QString jsonString) {
    
    if ( jsonString.compare("authorizationHeader", Qt::CaseInsensitive) == 0) {
        m_value = eOAIBearerTokenSendingMethodsContract::AUTHORIZATIONHEADER;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("query", Qt::CaseInsensitive) == 0) {
        m_value = eOAIBearerTokenSendingMethodsContract::QUERY;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIBearerTokenSendingMethodsContract::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIBearerTokenSendingMethodsContract::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIBearerTokenSendingMethodsContract::AUTHORIZATIONHEADER:
            val = "authorizationHeader";
            break;
        case eOAIBearerTokenSendingMethodsContract::QUERY:
            val = "query";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIBearerTokenSendingMethodsContract::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIBearerTokenSendingMethodsContract::eOAIBearerTokenSendingMethodsContract OAIBearerTokenSendingMethodsContract::getValue() const {
    return m_value;
}

void OAIBearerTokenSendingMethodsContract::setValue(const OAIBearerTokenSendingMethodsContract::eOAIBearerTokenSendingMethodsContract& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIBearerTokenSendingMethodsContract::isSet() const {
    
    return m_value_isSet;
}

bool OAIBearerTokenSendingMethodsContract::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
