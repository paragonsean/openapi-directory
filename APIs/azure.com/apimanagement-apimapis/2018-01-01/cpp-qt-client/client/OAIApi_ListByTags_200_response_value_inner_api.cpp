/**
 * ApiManagementClient
 * Use these REST APIs for performing operations on API entity and their Operations associated with your Azure API Management deployment.
 *
 * The version of the OpenAPI document: 2018-01-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApi_ListByTags_200_response_value_inner_api.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApi_ListByTags_200_response_value_inner_api::OAIApi_ListByTags_200_response_value_inner_api(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApi_ListByTags_200_response_value_inner_api::OAIApi_ListByTags_200_response_value_inner_api() {
    this->initializeModel();
}

OAIApi_ListByTags_200_response_value_inner_api::~OAIApi_ListByTags_200_response_value_inner_api() {}

void OAIApi_ListByTags_200_response_value_inner_api::initializeModel() {

    m_id_isSet = false;
    m_id_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_path_isSet = false;
    m_path_isValid = false;

    m_protocols_isSet = false;
    m_protocols_isValid = false;

    m_service_url_isSet = false;
    m_service_url_isValid = false;
}

void OAIApi_ListByTags_200_response_value_inner_api::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIApi_ListByTags_200_response_value_inner_api::fromJsonObject(QJsonObject json) {

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_path_isValid = ::OpenAPI::fromJsonValue(m_path, json[QString("path")]);
    m_path_isSet = !json[QString("path")].isNull() && m_path_isValid;

    m_protocols_isValid = ::OpenAPI::fromJsonValue(m_protocols, json[QString("protocols")]);
    m_protocols_isSet = !json[QString("protocols")].isNull() && m_protocols_isValid;

    m_service_url_isValid = ::OpenAPI::fromJsonValue(m_service_url, json[QString("serviceUrl")]);
    m_service_url_isSet = !json[QString("serviceUrl")].isNull() && m_service_url_isValid;
}

QString OAIApi_ListByTags_200_response_value_inner_api::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIApi_ListByTags_200_response_value_inner_api::asJsonObject() const {
    QJsonObject obj;
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_path_isSet) {
        obj.insert(QString("path"), ::OpenAPI::toJsonValue(m_path));
    }
    if (m_protocols.size() > 0) {
        obj.insert(QString("protocols"), ::OpenAPI::toJsonValue(m_protocols));
    }
    if (m_service_url_isSet) {
        obj.insert(QString("serviceUrl"), ::OpenAPI::toJsonValue(m_service_url));
    }
    return obj;
}

QString OAIApi_ListByTags_200_response_value_inner_api::getId() const {
    return m_id;
}
void OAIApi_ListByTags_200_response_value_inner_api::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIApi_ListByTags_200_response_value_inner_api::is_id_Set() const{
    return m_id_isSet;
}

bool OAIApi_ListByTags_200_response_value_inner_api::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIApi_ListByTags_200_response_value_inner_api::getName() const {
    return m_name;
}
void OAIApi_ListByTags_200_response_value_inner_api::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIApi_ListByTags_200_response_value_inner_api::is_name_Set() const{
    return m_name_isSet;
}

bool OAIApi_ListByTags_200_response_value_inner_api::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIApi_ListByTags_200_response_value_inner_api::getPath() const {
    return m_path;
}
void OAIApi_ListByTags_200_response_value_inner_api::setPath(const QString &path) {
    m_path = path;
    m_path_isSet = true;
}

bool OAIApi_ListByTags_200_response_value_inner_api::is_path_Set() const{
    return m_path_isSet;
}

bool OAIApi_ListByTags_200_response_value_inner_api::is_path_Valid() const{
    return m_path_isValid;
}

QList<QString> OAIApi_ListByTags_200_response_value_inner_api::getProtocols() const {
    return m_protocols;
}
void OAIApi_ListByTags_200_response_value_inner_api::setProtocols(const QList<QString> &protocols) {
    m_protocols = protocols;
    m_protocols_isSet = true;
}

bool OAIApi_ListByTags_200_response_value_inner_api::is_protocols_Set() const{
    return m_protocols_isSet;
}

bool OAIApi_ListByTags_200_response_value_inner_api::is_protocols_Valid() const{
    return m_protocols_isValid;
}

QString OAIApi_ListByTags_200_response_value_inner_api::getServiceUrl() const {
    return m_service_url;
}
void OAIApi_ListByTags_200_response_value_inner_api::setServiceUrl(const QString &service_url) {
    m_service_url = service_url;
    m_service_url_isSet = true;
}

bool OAIApi_ListByTags_200_response_value_inner_api::is_service_url_Set() const{
    return m_service_url_isSet;
}

bool OAIApi_ListByTags_200_response_value_inner_api::is_service_url_Valid() const{
    return m_service_url_isValid;
}

bool OAIApi_ListByTags_200_response_value_inner_api::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_path_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_protocols.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_service_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIApi_ListByTags_200_response_value_inner_api::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
