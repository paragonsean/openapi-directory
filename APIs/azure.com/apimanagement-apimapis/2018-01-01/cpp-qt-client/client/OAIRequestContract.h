/**
 * ApiManagementClient
 * Use these REST APIs for performing operations on API entity and their Operations associated with your Azure API Management deployment.
 *
 * The version of the OpenAPI document: 2018-01-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRequestContract.h
 *
 * Operation request details.
 */

#ifndef OAIRequestContract_H
#define OAIRequestContract_H

#include <QJsonObject>

#include "OAIParameterContract.h"
#include "OAIRepresentationContract.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIParameterContract;
class OAIRepresentationContract;

class OAIRequestContract : public OAIObject {
public:
    OAIRequestContract();
    OAIRequestContract(QString json);
    ~OAIRequestContract() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QList<OAIParameterContract> getHeaders() const;
    void setHeaders(const QList<OAIParameterContract> &headers);
    bool is_headers_Set() const;
    bool is_headers_Valid() const;

    QList<OAIParameterContract> getQueryParameters() const;
    void setQueryParameters(const QList<OAIParameterContract> &query_parameters);
    bool is_query_parameters_Set() const;
    bool is_query_parameters_Valid() const;

    QList<OAIRepresentationContract> getRepresentations() const;
    void setRepresentations(const QList<OAIRepresentationContract> &representations);
    bool is_representations_Set() const;
    bool is_representations_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QList<OAIParameterContract> m_headers;
    bool m_headers_isSet;
    bool m_headers_isValid;

    QList<OAIParameterContract> m_query_parameters;
    bool m_query_parameters_isSet;
    bool m_query_parameters_isValid;

    QList<OAIRepresentationContract> m_representations;
    bool m_representations_isSet;
    bool m_representations_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRequestContract)

#endif // OAIRequestContract_H
