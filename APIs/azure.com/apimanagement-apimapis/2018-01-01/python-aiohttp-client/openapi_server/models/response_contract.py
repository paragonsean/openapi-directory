# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.parameter_contract import ParameterContract
from openapi_server.models.representation_contract import RepresentationContract
from openapi_server import util


class ResponseContract(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, headers: List[ParameterContract]=None, representations: List[RepresentationContract]=None, status_code: int=None):
        """ResponseContract - a model defined in OpenAPI

        :param description: The description of this ResponseContract.
        :param headers: The headers of this ResponseContract.
        :param representations: The representations of this ResponseContract.
        :param status_code: The status_code of this ResponseContract.
        """
        self.openapi_types = {
            'description': str,
            'headers': List[ParameterContract],
            'representations': List[RepresentationContract],
            'status_code': int
        }

        self.attribute_map = {
            'description': 'description',
            'headers': 'headers',
            'representations': 'representations',
            'status_code': 'statusCode'
        }

        self._description = description
        self._headers = headers
        self._representations = representations
        self._status_code = status_code

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ResponseContract':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ResponseContract of this ResponseContract.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this ResponseContract.

        Operation response description.

        :return: The description of this ResponseContract.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ResponseContract.

        Operation response description.

        :param description: The description of this ResponseContract.
        :type description: str
        """

        self._description = description

    @property
    def headers(self):
        """Gets the headers of this ResponseContract.

        Collection of operation response headers.

        :return: The headers of this ResponseContract.
        :rtype: List[ParameterContract]
        """
        return self._headers

    @headers.setter
    def headers(self, headers):
        """Sets the headers of this ResponseContract.

        Collection of operation response headers.

        :param headers: The headers of this ResponseContract.
        :type headers: List[ParameterContract]
        """

        self._headers = headers

    @property
    def representations(self):
        """Gets the representations of this ResponseContract.

        Collection of operation response representations.

        :return: The representations of this ResponseContract.
        :rtype: List[RepresentationContract]
        """
        return self._representations

    @representations.setter
    def representations(self, representations):
        """Sets the representations of this ResponseContract.

        Collection of operation response representations.

        :param representations: The representations of this ResponseContract.
        :type representations: List[RepresentationContract]
        """

        self._representations = representations

    @property
    def status_code(self):
        """Gets the status_code of this ResponseContract.

        Operation response HTTP status code.

        :return: The status_code of this ResponseContract.
        :rtype: int
        """
        return self._status_code

    @status_code.setter
    def status_code(self, status_code):
        """Sets the status_code of this ResponseContract.

        Operation response HTTP status code.

        :param status_code: The status_code of this ResponseContract.
        :type status_code: int
        """
        if status_code is None:
            raise ValueError("Invalid value for `status_code`, must not be `None`")

        self._status_code = status_code
