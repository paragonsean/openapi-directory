# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.api_version_set_contract_details import ApiVersionSetContractDetails
from openapi_server import util


class ApiRevisionInfoContract(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, api_revision_description: str=None, api_version_name: str=None, api_version_set: ApiVersionSetContractDetails=None, source_api_id: str=None):
        """ApiRevisionInfoContract - a model defined in OpenAPI

        :param api_revision_description: The api_revision_description of this ApiRevisionInfoContract.
        :param api_version_name: The api_version_name of this ApiRevisionInfoContract.
        :param api_version_set: The api_version_set of this ApiRevisionInfoContract.
        :param source_api_id: The source_api_id of this ApiRevisionInfoContract.
        """
        self.openapi_types = {
            'api_revision_description': str,
            'api_version_name': str,
            'api_version_set': ApiVersionSetContractDetails,
            'source_api_id': str
        }

        self.attribute_map = {
            'api_revision_description': 'apiRevisionDescription',
            'api_version_name': 'apiVersionName',
            'api_version_set': 'apiVersionSet',
            'source_api_id': 'sourceApiId'
        }

        self._api_revision_description = api_revision_description
        self._api_version_name = api_version_name
        self._api_version_set = api_version_set
        self._source_api_id = source_api_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApiRevisionInfoContract':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ApiRevisionInfoContract of this ApiRevisionInfoContract.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def api_revision_description(self):
        """Gets the api_revision_description of this ApiRevisionInfoContract.

        Description of new API Revision.

        :return: The api_revision_description of this ApiRevisionInfoContract.
        :rtype: str
        """
        return self._api_revision_description

    @api_revision_description.setter
    def api_revision_description(self, api_revision_description):
        """Sets the api_revision_description of this ApiRevisionInfoContract.

        Description of new API Revision.

        :param api_revision_description: The api_revision_description of this ApiRevisionInfoContract.
        :type api_revision_description: str
        """
        if api_revision_description is not None and len(api_revision_description) > 256:
            raise ValueError("Invalid value for `api_revision_description`, length must be less than or equal to `256`")

        self._api_revision_description = api_revision_description

    @property
    def api_version_name(self):
        """Gets the api_version_name of this ApiRevisionInfoContract.

        Version identifier for the new API Version.

        :return: The api_version_name of this ApiRevisionInfoContract.
        :rtype: str
        """
        return self._api_version_name

    @api_version_name.setter
    def api_version_name(self, api_version_name):
        """Sets the api_version_name of this ApiRevisionInfoContract.

        Version identifier for the new API Version.

        :param api_version_name: The api_version_name of this ApiRevisionInfoContract.
        :type api_version_name: str
        """
        if api_version_name is not None and len(api_version_name) > 100:
            raise ValueError("Invalid value for `api_version_name`, length must be less than or equal to `100`")

        self._api_version_name = api_version_name

    @property
    def api_version_set(self):
        """Gets the api_version_set of this ApiRevisionInfoContract.


        :return: The api_version_set of this ApiRevisionInfoContract.
        :rtype: ApiVersionSetContractDetails
        """
        return self._api_version_set

    @api_version_set.setter
    def api_version_set(self, api_version_set):
        """Sets the api_version_set of this ApiRevisionInfoContract.


        :param api_version_set: The api_version_set of this ApiRevisionInfoContract.
        :type api_version_set: ApiVersionSetContractDetails
        """

        self._api_version_set = api_version_set

    @property
    def source_api_id(self):
        """Gets the source_api_id of this ApiRevisionInfoContract.

        Resource identifier of API to be used to create the revision from.

        :return: The source_api_id of this ApiRevisionInfoContract.
        :rtype: str
        """
        return self._source_api_id

    @source_api_id.setter
    def source_api_id(self, source_api_id):
        """Sets the source_api_id of this ApiRevisionInfoContract.

        Resource identifier of API to be used to create the revision from.

        :param source_api_id: The source_api_id of this ApiRevisionInfoContract.
        :type source_api_id: str
        """

        self._source_api_id = source_api_id
