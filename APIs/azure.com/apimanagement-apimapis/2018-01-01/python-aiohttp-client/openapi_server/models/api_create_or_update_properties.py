# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.api_entity_base_contract_authentication_settings import ApiEntityBaseContractAuthenticationSettings
from openapi_server.models.api_entity_base_contract_subscription_key_parameter_names import ApiEntityBaseContractSubscriptionKeyParameterNames
from openapi_server.models.api_version_set_contract_details import ApiVersionSetContractDetails
from openapi_server import util


class ApiCreateOrUpdateProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, api_type: str=None, content_format: str=None, content_value: str=None, wsdl_selector: object=None, api_version_set: ApiVersionSetContractDetails=None, display_name: str=None, path: str=None, protocols: List[str]=None, service_url: str=None, api_revision: str=None, api_revision_description: str=None, api_version: str=None, api_version_description: str=None, api_version_set_id: str=None, authentication_settings: ApiEntityBaseContractAuthenticationSettings=None, description: str=None, is_current: bool=None, is_online: bool=None, subscription_key_parameter_names: ApiEntityBaseContractSubscriptionKeyParameterNames=None, type: str=None):
        """ApiCreateOrUpdateProperties - a model defined in OpenAPI

        :param api_type: The api_type of this ApiCreateOrUpdateProperties.
        :param content_format: The content_format of this ApiCreateOrUpdateProperties.
        :param content_value: The content_value of this ApiCreateOrUpdateProperties.
        :param wsdl_selector: The wsdl_selector of this ApiCreateOrUpdateProperties.
        :param api_version_set: The api_version_set of this ApiCreateOrUpdateProperties.
        :param display_name: The display_name of this ApiCreateOrUpdateProperties.
        :param path: The path of this ApiCreateOrUpdateProperties.
        :param protocols: The protocols of this ApiCreateOrUpdateProperties.
        :param service_url: The service_url of this ApiCreateOrUpdateProperties.
        :param api_revision: The api_revision of this ApiCreateOrUpdateProperties.
        :param api_revision_description: The api_revision_description of this ApiCreateOrUpdateProperties.
        :param api_version: The api_version of this ApiCreateOrUpdateProperties.
        :param api_version_description: The api_version_description of this ApiCreateOrUpdateProperties.
        :param api_version_set_id: The api_version_set_id of this ApiCreateOrUpdateProperties.
        :param authentication_settings: The authentication_settings of this ApiCreateOrUpdateProperties.
        :param description: The description of this ApiCreateOrUpdateProperties.
        :param is_current: The is_current of this ApiCreateOrUpdateProperties.
        :param is_online: The is_online of this ApiCreateOrUpdateProperties.
        :param subscription_key_parameter_names: The subscription_key_parameter_names of this ApiCreateOrUpdateProperties.
        :param type: The type of this ApiCreateOrUpdateProperties.
        """
        self.openapi_types = {
            'api_type': str,
            'content_format': str,
            'content_value': str,
            'wsdl_selector': object,
            'api_version_set': ApiVersionSetContractDetails,
            'display_name': str,
            'path': str,
            'protocols': List[str],
            'service_url': str,
            'api_revision': str,
            'api_revision_description': str,
            'api_version': str,
            'api_version_description': str,
            'api_version_set_id': str,
            'authentication_settings': ApiEntityBaseContractAuthenticationSettings,
            'description': str,
            'is_current': bool,
            'is_online': bool,
            'subscription_key_parameter_names': ApiEntityBaseContractSubscriptionKeyParameterNames,
            'type': str
        }

        self.attribute_map = {
            'api_type': 'apiType',
            'content_format': 'contentFormat',
            'content_value': 'contentValue',
            'wsdl_selector': 'wsdlSelector',
            'api_version_set': 'apiVersionSet',
            'display_name': 'displayName',
            'path': 'path',
            'protocols': 'protocols',
            'service_url': 'serviceUrl',
            'api_revision': 'apiRevision',
            'api_revision_description': 'apiRevisionDescription',
            'api_version': 'apiVersion',
            'api_version_description': 'apiVersionDescription',
            'api_version_set_id': 'apiVersionSetId',
            'authentication_settings': 'authenticationSettings',
            'description': 'description',
            'is_current': 'isCurrent',
            'is_online': 'isOnline',
            'subscription_key_parameter_names': 'subscriptionKeyParameterNames',
            'type': 'type'
        }

        self._api_type = api_type
        self._content_format = content_format
        self._content_value = content_value
        self._wsdl_selector = wsdl_selector
        self._api_version_set = api_version_set
        self._display_name = display_name
        self._path = path
        self._protocols = protocols
        self._service_url = service_url
        self._api_revision = api_revision
        self._api_revision_description = api_revision_description
        self._api_version = api_version
        self._api_version_description = api_version_description
        self._api_version_set_id = api_version_set_id
        self._authentication_settings = authentication_settings
        self._description = description
        self._is_current = is_current
        self._is_online = is_online
        self._subscription_key_parameter_names = subscription_key_parameter_names
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApiCreateOrUpdateProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ApiCreateOrUpdateProperties of this ApiCreateOrUpdateProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def api_type(self):
        """Gets the api_type of this ApiCreateOrUpdateProperties.

        Type of Api to create.   * `http` creates a SOAP to REST API   * `soap` creates a SOAP pass-through API .

        :return: The api_type of this ApiCreateOrUpdateProperties.
        :rtype: str
        """
        return self._api_type

    @api_type.setter
    def api_type(self, api_type):
        """Sets the api_type of this ApiCreateOrUpdateProperties.

        Type of Api to create.   * `http` creates a SOAP to REST API   * `soap` creates a SOAP pass-through API .

        :param api_type: The api_type of this ApiCreateOrUpdateProperties.
        :type api_type: str
        """
        allowed_values = ["http", "soap"]  # noqa: E501
        if api_type not in allowed_values:
            raise ValueError(
                "Invalid value for `api_type` ({0}), must be one of {1}"
                .format(api_type, allowed_values)
            )

        self._api_type = api_type

    @property
    def content_format(self):
        """Gets the content_format of this ApiCreateOrUpdateProperties.

        Format of the Content in which the API is getting imported.

        :return: The content_format of this ApiCreateOrUpdateProperties.
        :rtype: str
        """
        return self._content_format

    @content_format.setter
    def content_format(self, content_format):
        """Sets the content_format of this ApiCreateOrUpdateProperties.

        Format of the Content in which the API is getting imported.

        :param content_format: The content_format of this ApiCreateOrUpdateProperties.
        :type content_format: str
        """
        allowed_values = ["wadl-xml", "wadl-link-json", "swagger-json", "swagger-link-json", "wsdl", "wsdl-link"]  # noqa: E501
        if content_format not in allowed_values:
            raise ValueError(
                "Invalid value for `content_format` ({0}), must be one of {1}"
                .format(content_format, allowed_values)
            )

        self._content_format = content_format

    @property
    def content_value(self):
        """Gets the content_value of this ApiCreateOrUpdateProperties.

        Content value when Importing an API.

        :return: The content_value of this ApiCreateOrUpdateProperties.
        :rtype: str
        """
        return self._content_value

    @content_value.setter
    def content_value(self, content_value):
        """Sets the content_value of this ApiCreateOrUpdateProperties.

        Content value when Importing an API.

        :param content_value: The content_value of this ApiCreateOrUpdateProperties.
        :type content_value: str
        """

        self._content_value = content_value

    @property
    def wsdl_selector(self):
        """Gets the wsdl_selector of this ApiCreateOrUpdateProperties.

        Criteria to limit import of WSDL to a subset of the document.

        :return: The wsdl_selector of this ApiCreateOrUpdateProperties.
        :rtype: object
        """
        return self._wsdl_selector

    @wsdl_selector.setter
    def wsdl_selector(self, wsdl_selector):
        """Sets the wsdl_selector of this ApiCreateOrUpdateProperties.

        Criteria to limit import of WSDL to a subset of the document.

        :param wsdl_selector: The wsdl_selector of this ApiCreateOrUpdateProperties.
        :type wsdl_selector: object
        """

        self._wsdl_selector = wsdl_selector

    @property
    def api_version_set(self):
        """Gets the api_version_set of this ApiCreateOrUpdateProperties.


        :return: The api_version_set of this ApiCreateOrUpdateProperties.
        :rtype: ApiVersionSetContractDetails
        """
        return self._api_version_set

    @api_version_set.setter
    def api_version_set(self, api_version_set):
        """Sets the api_version_set of this ApiCreateOrUpdateProperties.


        :param api_version_set: The api_version_set of this ApiCreateOrUpdateProperties.
        :type api_version_set: ApiVersionSetContractDetails
        """

        self._api_version_set = api_version_set

    @property
    def display_name(self):
        """Gets the display_name of this ApiCreateOrUpdateProperties.

        API name.

        :return: The display_name of this ApiCreateOrUpdateProperties.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this ApiCreateOrUpdateProperties.

        API name.

        :param display_name: The display_name of this ApiCreateOrUpdateProperties.
        :type display_name: str
        """
        if display_name is not None and len(display_name) > 300:
            raise ValueError("Invalid value for `display_name`, length must be less than or equal to `300`")
        if display_name is not None and len(display_name) < 1:
            raise ValueError("Invalid value for `display_name`, length must be greater than or equal to `1`")

        self._display_name = display_name

    @property
    def path(self):
        """Gets the path of this ApiCreateOrUpdateProperties.

        Relative URL uniquely identifying this API and all of its resource paths within the API Management service instance. It is appended to the API endpoint base URL specified during the service instance creation to form a public URL for this API.

        :return: The path of this ApiCreateOrUpdateProperties.
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path):
        """Sets the path of this ApiCreateOrUpdateProperties.

        Relative URL uniquely identifying this API and all of its resource paths within the API Management service instance. It is appended to the API endpoint base URL specified during the service instance creation to form a public URL for this API.

        :param path: The path of this ApiCreateOrUpdateProperties.
        :type path: str
        """
        if path is None:
            raise ValueError("Invalid value for `path`, must not be `None`")
        if path is not None and len(path) > 400:
            raise ValueError("Invalid value for `path`, length must be less than or equal to `400`")
        if path is not None and len(path) < 0:
            raise ValueError("Invalid value for `path`, length must be greater than or equal to `0`")

        self._path = path

    @property
    def protocols(self):
        """Gets the protocols of this ApiCreateOrUpdateProperties.

        Describes on which protocols the operations in this API can be invoked.

        :return: The protocols of this ApiCreateOrUpdateProperties.
        :rtype: List[str]
        """
        return self._protocols

    @protocols.setter
    def protocols(self, protocols):
        """Sets the protocols of this ApiCreateOrUpdateProperties.

        Describes on which protocols the operations in this API can be invoked.

        :param protocols: The protocols of this ApiCreateOrUpdateProperties.
        :type protocols: List[str]
        """
        allowed_values = ["http", "https"]  # noqa: E501
        if not set(protocols).issubset(set(allowed_values)):
            raise ValueError(
                "Invalid values for `protocols` [{0}], must be a subset of [{1}]"
                .format(", ".join(map(str, set(protocols) - set(allowed_values))),
                        ", ".join(map(str, allowed_values)))
            )

        self._protocols = protocols

    @property
    def service_url(self):
        """Gets the service_url of this ApiCreateOrUpdateProperties.

        Absolute URL of the backend service implementing this API.

        :return: The service_url of this ApiCreateOrUpdateProperties.
        :rtype: str
        """
        return self._service_url

    @service_url.setter
    def service_url(self, service_url):
        """Sets the service_url of this ApiCreateOrUpdateProperties.

        Absolute URL of the backend service implementing this API.

        :param service_url: The service_url of this ApiCreateOrUpdateProperties.
        :type service_url: str
        """
        if service_url is not None and len(service_url) > 2000:
            raise ValueError("Invalid value for `service_url`, length must be less than or equal to `2000`")
        if service_url is not None and len(service_url) < 0:
            raise ValueError("Invalid value for `service_url`, length must be greater than or equal to `0`")

        self._service_url = service_url

    @property
    def api_revision(self):
        """Gets the api_revision of this ApiCreateOrUpdateProperties.

        Describes the Revision of the Api. If no value is provided, default revision 1 is created

        :return: The api_revision of this ApiCreateOrUpdateProperties.
        :rtype: str
        """
        return self._api_revision

    @api_revision.setter
    def api_revision(self, api_revision):
        """Sets the api_revision of this ApiCreateOrUpdateProperties.

        Describes the Revision of the Api. If no value is provided, default revision 1 is created

        :param api_revision: The api_revision of this ApiCreateOrUpdateProperties.
        :type api_revision: str
        """
        if api_revision is not None and len(api_revision) > 100:
            raise ValueError("Invalid value for `api_revision`, length must be less than or equal to `100`")
        if api_revision is not None and len(api_revision) < 1:
            raise ValueError("Invalid value for `api_revision`, length must be greater than or equal to `1`")

        self._api_revision = api_revision

    @property
    def api_revision_description(self):
        """Gets the api_revision_description of this ApiCreateOrUpdateProperties.

        Description of the Api Revision.

        :return: The api_revision_description of this ApiCreateOrUpdateProperties.
        :rtype: str
        """
        return self._api_revision_description

    @api_revision_description.setter
    def api_revision_description(self, api_revision_description):
        """Sets the api_revision_description of this ApiCreateOrUpdateProperties.

        Description of the Api Revision.

        :param api_revision_description: The api_revision_description of this ApiCreateOrUpdateProperties.
        :type api_revision_description: str
        """
        if api_revision_description is not None and len(api_revision_description) > 256:
            raise ValueError("Invalid value for `api_revision_description`, length must be less than or equal to `256`")

        self._api_revision_description = api_revision_description

    @property
    def api_version(self):
        """Gets the api_version of this ApiCreateOrUpdateProperties.

        Indicates the Version identifier of the API if the API is versioned

        :return: The api_version of this ApiCreateOrUpdateProperties.
        :rtype: str
        """
        return self._api_version

    @api_version.setter
    def api_version(self, api_version):
        """Sets the api_version of this ApiCreateOrUpdateProperties.

        Indicates the Version identifier of the API if the API is versioned

        :param api_version: The api_version of this ApiCreateOrUpdateProperties.
        :type api_version: str
        """
        if api_version is not None and len(api_version) > 100:
            raise ValueError("Invalid value for `api_version`, length must be less than or equal to `100`")

        self._api_version = api_version

    @property
    def api_version_description(self):
        """Gets the api_version_description of this ApiCreateOrUpdateProperties.

        Description of the Api Version.

        :return: The api_version_description of this ApiCreateOrUpdateProperties.
        :rtype: str
        """
        return self._api_version_description

    @api_version_description.setter
    def api_version_description(self, api_version_description):
        """Sets the api_version_description of this ApiCreateOrUpdateProperties.

        Description of the Api Version.

        :param api_version_description: The api_version_description of this ApiCreateOrUpdateProperties.
        :type api_version_description: str
        """
        if api_version_description is not None and len(api_version_description) > 256:
            raise ValueError("Invalid value for `api_version_description`, length must be less than or equal to `256`")

        self._api_version_description = api_version_description

    @property
    def api_version_set_id(self):
        """Gets the api_version_set_id of this ApiCreateOrUpdateProperties.

        A resource identifier for the related ApiVersionSet.

        :return: The api_version_set_id of this ApiCreateOrUpdateProperties.
        :rtype: str
        """
        return self._api_version_set_id

    @api_version_set_id.setter
    def api_version_set_id(self, api_version_set_id):
        """Sets the api_version_set_id of this ApiCreateOrUpdateProperties.

        A resource identifier for the related ApiVersionSet.

        :param api_version_set_id: The api_version_set_id of this ApiCreateOrUpdateProperties.
        :type api_version_set_id: str
        """

        self._api_version_set_id = api_version_set_id

    @property
    def authentication_settings(self):
        """Gets the authentication_settings of this ApiCreateOrUpdateProperties.


        :return: The authentication_settings of this ApiCreateOrUpdateProperties.
        :rtype: ApiEntityBaseContractAuthenticationSettings
        """
        return self._authentication_settings

    @authentication_settings.setter
    def authentication_settings(self, authentication_settings):
        """Sets the authentication_settings of this ApiCreateOrUpdateProperties.


        :param authentication_settings: The authentication_settings of this ApiCreateOrUpdateProperties.
        :type authentication_settings: ApiEntityBaseContractAuthenticationSettings
        """

        self._authentication_settings = authentication_settings

    @property
    def description(self):
        """Gets the description of this ApiCreateOrUpdateProperties.

        Description of the API. May include HTML formatting tags.

        :return: The description of this ApiCreateOrUpdateProperties.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ApiCreateOrUpdateProperties.

        Description of the API. May include HTML formatting tags.

        :param description: The description of this ApiCreateOrUpdateProperties.
        :type description: str
        """

        self._description = description

    @property
    def is_current(self):
        """Gets the is_current of this ApiCreateOrUpdateProperties.

        Indicates if API revision is current api revision.

        :return: The is_current of this ApiCreateOrUpdateProperties.
        :rtype: bool
        """
        return self._is_current

    @is_current.setter
    def is_current(self, is_current):
        """Sets the is_current of this ApiCreateOrUpdateProperties.

        Indicates if API revision is current api revision.

        :param is_current: The is_current of this ApiCreateOrUpdateProperties.
        :type is_current: bool
        """

        self._is_current = is_current

    @property
    def is_online(self):
        """Gets the is_online of this ApiCreateOrUpdateProperties.

        Indicates if API revision is accessible via the gateway.

        :return: The is_online of this ApiCreateOrUpdateProperties.
        :rtype: bool
        """
        return self._is_online

    @is_online.setter
    def is_online(self, is_online):
        """Sets the is_online of this ApiCreateOrUpdateProperties.

        Indicates if API revision is accessible via the gateway.

        :param is_online: The is_online of this ApiCreateOrUpdateProperties.
        :type is_online: bool
        """

        self._is_online = is_online

    @property
    def subscription_key_parameter_names(self):
        """Gets the subscription_key_parameter_names of this ApiCreateOrUpdateProperties.


        :return: The subscription_key_parameter_names of this ApiCreateOrUpdateProperties.
        :rtype: ApiEntityBaseContractSubscriptionKeyParameterNames
        """
        return self._subscription_key_parameter_names

    @subscription_key_parameter_names.setter
    def subscription_key_parameter_names(self, subscription_key_parameter_names):
        """Sets the subscription_key_parameter_names of this ApiCreateOrUpdateProperties.


        :param subscription_key_parameter_names: The subscription_key_parameter_names of this ApiCreateOrUpdateProperties.
        :type subscription_key_parameter_names: ApiEntityBaseContractSubscriptionKeyParameterNames
        """

        self._subscription_key_parameter_names = subscription_key_parameter_names

    @property
    def type(self):
        """Gets the type of this ApiCreateOrUpdateProperties.

        Type of API.

        :return: The type of this ApiCreateOrUpdateProperties.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this ApiCreateOrUpdateProperties.

        Type of API.

        :param type: The type of this ApiCreateOrUpdateProperties.
        :type type: str
        """
        allowed_values = ["http", "soap"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"
                .format(type, allowed_values)
            )

        self._type = type
