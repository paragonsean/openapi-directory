/**
 * ApiManagementClient
 * Use these REST APIs for performing operations on API entity and their Operations associated with your Azure API Management deployment.
 *
 * The version of the OpenAPI document: 2019-01-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApiOperation_ListByApi_200_response_value_inner_properties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApiOperation_ListByApi_200_response_value_inner_properties::OAIApiOperation_ListByApi_200_response_value_inner_properties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApiOperation_ListByApi_200_response_value_inner_properties::OAIApiOperation_ListByApi_200_response_value_inner_properties() {
    this->initializeModel();
}

OAIApiOperation_ListByApi_200_response_value_inner_properties::~OAIApiOperation_ListByApi_200_response_value_inner_properties() {}

void OAIApiOperation_ListByApi_200_response_value_inner_properties::initializeModel() {

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_method_isSet = false;
    m_method_isValid = false;

    m_url_template_isSet = false;
    m_url_template_isValid = false;
}

void OAIApiOperation_ListByApi_200_response_value_inner_properties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIApiOperation_ListByApi_200_response_value_inner_properties::fromJsonObject(QJsonObject json) {

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_method_isValid = ::OpenAPI::fromJsonValue(m_method, json[QString("method")]);
    m_method_isSet = !json[QString("method")].isNull() && m_method_isValid;

    m_url_template_isValid = ::OpenAPI::fromJsonValue(m_url_template, json[QString("urlTemplate")]);
    m_url_template_isSet = !json[QString("urlTemplate")].isNull() && m_url_template_isValid;
}

QString OAIApiOperation_ListByApi_200_response_value_inner_properties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIApiOperation_ListByApi_200_response_value_inner_properties::asJsonObject() const {
    QJsonObject obj;
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_method_isSet) {
        obj.insert(QString("method"), ::OpenAPI::toJsonValue(m_method));
    }
    if (m_url_template_isSet) {
        obj.insert(QString("urlTemplate"), ::OpenAPI::toJsonValue(m_url_template));
    }
    return obj;
}

QString OAIApiOperation_ListByApi_200_response_value_inner_properties::getDisplayName() const {
    return m_display_name;
}
void OAIApiOperation_ListByApi_200_response_value_inner_properties::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIApiOperation_ListByApi_200_response_value_inner_properties::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIApiOperation_ListByApi_200_response_value_inner_properties::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QString OAIApiOperation_ListByApi_200_response_value_inner_properties::getMethod() const {
    return m_method;
}
void OAIApiOperation_ListByApi_200_response_value_inner_properties::setMethod(const QString &method) {
    m_method = method;
    m_method_isSet = true;
}

bool OAIApiOperation_ListByApi_200_response_value_inner_properties::is_method_Set() const{
    return m_method_isSet;
}

bool OAIApiOperation_ListByApi_200_response_value_inner_properties::is_method_Valid() const{
    return m_method_isValid;
}

QString OAIApiOperation_ListByApi_200_response_value_inner_properties::getUrlTemplate() const {
    return m_url_template;
}
void OAIApiOperation_ListByApi_200_response_value_inner_properties::setUrlTemplate(const QString &url_template) {
    m_url_template = url_template;
    m_url_template_isSet = true;
}

bool OAIApiOperation_ListByApi_200_response_value_inner_properties::is_url_template_Set() const{
    return m_url_template_isSet;
}

bool OAIApiOperation_ListByApi_200_response_value_inner_properties::is_url_template_Valid() const{
    return m_url_template_isValid;
}

bool OAIApiOperation_ListByApi_200_response_value_inner_properties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_method_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_template_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIApiOperation_ListByApi_200_response_value_inner_properties::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_display_name_isValid && m_method_isValid && m_url_template_isValid && true;
}

} // namespace OpenAPI
