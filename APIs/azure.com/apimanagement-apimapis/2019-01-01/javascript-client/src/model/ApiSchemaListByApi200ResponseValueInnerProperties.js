/**
 * ApiManagementClient
 * Use these REST APIs for performing operations on API entity and their Operations associated with your Azure API Management deployment.
 *
 * The version of the OpenAPI document: 2019-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ApiSchemaListByApi200ResponseValueInnerProperties model module.
 * @module model/ApiSchemaListByApi200ResponseValueInnerProperties
 * @version 2019-01-01
 */
class ApiSchemaListByApi200ResponseValueInnerProperties {
    /**
     * Constructs a new <code>ApiSchemaListByApi200ResponseValueInnerProperties</code>.
     * Schema contract Properties.
     * @alias module:model/ApiSchemaListByApi200ResponseValueInnerProperties
     * @param contentType {String} Must be a valid a media type used in a Content-Type header as defined in the RFC 2616. Media type of the schema document (e.g. application/json, application/xml). </br> - `Swagger` Schema use `application/vnd.ms-azure-apim.swagger.definitions+json` </br> - `WSDL` Schema use `application/vnd.ms-azure-apim.xsd+xml` </br> - `OpenApi` Schema use `application/vnd.oai.openapi.components+json` </br> - `WADL Schema` use `application/vnd.ms-azure-apim.wadl.grammars+xml`. 
     */
    constructor(contentType) { 
        
        ApiSchemaListByApi200ResponseValueInnerProperties.initialize(this, contentType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, contentType) { 
        obj['contentType'] = contentType;
    }

    /**
     * Constructs a <code>ApiSchemaListByApi200ResponseValueInnerProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApiSchemaListByApi200ResponseValueInnerProperties} obj Optional instance to populate.
     * @return {module:model/ApiSchemaListByApi200ResponseValueInnerProperties} The populated <code>ApiSchemaListByApi200ResponseValueInnerProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApiSchemaListByApi200ResponseValueInnerProperties();

            if (data.hasOwnProperty('contentType')) {
                obj['contentType'] = ApiClient.convertToType(data['contentType'], 'String');
            }
            if (data.hasOwnProperty('document')) {
                obj['document'] = ApiClient.convertToType(data['document'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ApiSchemaListByApi200ResponseValueInnerProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ApiSchemaListByApi200ResponseValueInnerProperties</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ApiSchemaListByApi200ResponseValueInnerProperties.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['contentType'] && !(typeof data['contentType'] === 'string' || data['contentType'] instanceof String)) {
            throw new Error("Expected the field `contentType` to be a primitive type in the JSON string but got " + data['contentType']);
        }

        return true;
    }


}

ApiSchemaListByApi200ResponseValueInnerProperties.RequiredProperties = ["contentType"];

/**
 * Must be a valid a media type used in a Content-Type header as defined in the RFC 2616. Media type of the schema document (e.g. application/json, application/xml). </br> - `Swagger` Schema use `application/vnd.ms-azure-apim.swagger.definitions+json` </br> - `WSDL` Schema use `application/vnd.ms-azure-apim.xsd+xml` </br> - `OpenApi` Schema use `application/vnd.oai.openapi.components+json` </br> - `WADL Schema` use `application/vnd.ms-azure-apim.wadl.grammars+xml`. 
 * @member {String} contentType
 */
ApiSchemaListByApi200ResponseValueInnerProperties.prototype['contentType'] = undefined;

/**
 * Properties of the Schema Document.
 * @member {Object} document
 */
ApiSchemaListByApi200ResponseValueInnerProperties.prototype['document'] = undefined;






export default ApiSchemaListByApi200ResponseValueInnerProperties;

