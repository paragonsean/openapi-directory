/*
 * ApiManagementClient
 * Use these REST APIs for performing operations on API entity and their Operations associated with your Azure API Management deployment.
 *
 * The version of the OpenAPI document: 2019-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ApiListByServiceDefaultResponse;
import org.openapitools.client.model.TagGetByOperation200Response;
import org.openapitools.client.model.TagListByOperation200Response;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ApiOperationTagApi
 */
@Disabled
public class ApiOperationTagApiTest {

    private final ApiOperationTagApi api = new ApiOperationTagApi();

    /**
     * Assign tag to the Operation.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tagAssignToOperationTest() throws ApiException {
        String resourceGroupName = null;
        String serviceName = null;
        String apiId = null;
        String operationId = null;
        String tagId = null;
        String apiVersion = null;
        String subscriptionId = null;
        TagGetByOperation200Response response = api.tagAssignToOperation(resourceGroupName, serviceName, apiId, operationId, tagId, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Detach the tag from the Operation.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tagDetachFromOperationTest() throws ApiException {
        String resourceGroupName = null;
        String serviceName = null;
        String apiId = null;
        String operationId = null;
        String tagId = null;
        String apiVersion = null;
        String subscriptionId = null;
        api.tagDetachFromOperation(resourceGroupName, serviceName, apiId, operationId, tagId, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Get tag associated with the Operation.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tagGetByOperationTest() throws ApiException {
        String resourceGroupName = null;
        String serviceName = null;
        String apiId = null;
        String operationId = null;
        String tagId = null;
        String apiVersion = null;
        String subscriptionId = null;
        TagGetByOperation200Response response = api.tagGetByOperation(resourceGroupName, serviceName, apiId, operationId, tagId, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Gets the entity state version of the tag specified by its identifier.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tagGetEntityStateByOperationTest() throws ApiException {
        String resourceGroupName = null;
        String serviceName = null;
        String apiId = null;
        String operationId = null;
        String tagId = null;
        String apiVersion = null;
        String subscriptionId = null;
        api.tagGetEntityStateByOperation(resourceGroupName, serviceName, apiId, operationId, tagId, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Lists all Tags associated with the Operation.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tagListByOperationTest() throws ApiException {
        String resourceGroupName = null;
        String serviceName = null;
        String apiId = null;
        String operationId = null;
        String apiVersion = null;
        String subscriptionId = null;
        String $filter = null;
        Integer $top = null;
        Integer $skip = null;
        TagListByOperation200Response response = api.tagListByOperation(resourceGroupName, serviceName, apiId, operationId, apiVersion, subscriptionId, $filter, $top, $skip);
        // TODO: test validations
    }

}
