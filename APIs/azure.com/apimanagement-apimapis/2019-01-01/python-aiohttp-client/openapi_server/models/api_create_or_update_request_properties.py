# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.api_create_or_update_request_properties_wsdl_selector import ApiCreateOrUpdateRequestPropertiesWsdlSelector
from openapi_server import util


class ApiCreateOrUpdateRequestProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, api_type: str=None, format: str=None, value: str=None, wsdl_selector: ApiCreateOrUpdateRequestPropertiesWsdlSelector=None):
        """ApiCreateOrUpdateRequestProperties - a model defined in OpenAPI

        :param api_type: The api_type of this ApiCreateOrUpdateRequestProperties.
        :param format: The format of this ApiCreateOrUpdateRequestProperties.
        :param value: The value of this ApiCreateOrUpdateRequestProperties.
        :param wsdl_selector: The wsdl_selector of this ApiCreateOrUpdateRequestProperties.
        """
        self.openapi_types = {
            'api_type': str,
            'format': str,
            'value': str,
            'wsdl_selector': ApiCreateOrUpdateRequestPropertiesWsdlSelector
        }

        self.attribute_map = {
            'api_type': 'apiType',
            'format': 'format',
            'value': 'value',
            'wsdl_selector': 'wsdlSelector'
        }

        self._api_type = api_type
        self._format = format
        self._value = value
        self._wsdl_selector = wsdl_selector

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApiCreateOrUpdateRequestProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Api_CreateOrUpdate_request_properties of this ApiCreateOrUpdateRequestProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def api_type(self):
        """Gets the api_type of this ApiCreateOrUpdateRequestProperties.

        Type of Api to create.   * `http` creates a SOAP to REST API   * `soap` creates a SOAP pass-through API .

        :return: The api_type of this ApiCreateOrUpdateRequestProperties.
        :rtype: str
        """
        return self._api_type

    @api_type.setter
    def api_type(self, api_type):
        """Sets the api_type of this ApiCreateOrUpdateRequestProperties.

        Type of Api to create.   * `http` creates a SOAP to REST API   * `soap` creates a SOAP pass-through API .

        :param api_type: The api_type of this ApiCreateOrUpdateRequestProperties.
        :type api_type: str
        """
        allowed_values = ["http", "soap"]  # noqa: E501
        if api_type not in allowed_values:
            raise ValueError(
                "Invalid value for `api_type` ({0}), must be one of {1}"
                .format(api_type, allowed_values)
            )

        self._api_type = api_type

    @property
    def format(self):
        """Gets the format of this ApiCreateOrUpdateRequestProperties.

        Format of the Content in which the API is getting imported.

        :return: The format of this ApiCreateOrUpdateRequestProperties.
        :rtype: str
        """
        return self._format

    @format.setter
    def format(self, format):
        """Sets the format of this ApiCreateOrUpdateRequestProperties.

        Format of the Content in which the API is getting imported.

        :param format: The format of this ApiCreateOrUpdateRequestProperties.
        :type format: str
        """
        allowed_values = ["wadl-xml", "wadl-link-json", "swagger-json", "swagger-link-json", "wsdl", "wsdl-link", "openapi", "openapi+json", "openapi-link", "openapi+json-link"]  # noqa: E501
        if format not in allowed_values:
            raise ValueError(
                "Invalid value for `format` ({0}), must be one of {1}"
                .format(format, allowed_values)
            )

        self._format = format

    @property
    def value(self):
        """Gets the value of this ApiCreateOrUpdateRequestProperties.

        Content value when Importing an API.

        :return: The value of this ApiCreateOrUpdateRequestProperties.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this ApiCreateOrUpdateRequestProperties.

        Content value when Importing an API.

        :param value: The value of this ApiCreateOrUpdateRequestProperties.
        :type value: str
        """

        self._value = value

    @property
    def wsdl_selector(self):
        """Gets the wsdl_selector of this ApiCreateOrUpdateRequestProperties.


        :return: The wsdl_selector of this ApiCreateOrUpdateRequestProperties.
        :rtype: ApiCreateOrUpdateRequestPropertiesWsdlSelector
        """
        return self._wsdl_selector

    @wsdl_selector.setter
    def wsdl_selector(self, wsdl_selector):
        """Sets the wsdl_selector of this ApiCreateOrUpdateRequestProperties.


        :param wsdl_selector: The wsdl_selector of this ApiCreateOrUpdateRequestProperties.
        :type wsdl_selector: ApiCreateOrUpdateRequestPropertiesWsdlSelector
        """

        self._wsdl_selector = wsdl_selector
