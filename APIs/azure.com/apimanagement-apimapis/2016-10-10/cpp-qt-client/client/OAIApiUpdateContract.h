/**
 * ApiManagementClient
 * Use these REST APIs for performing operations on API entity and their Operations associated with your Azure API Management deployment.
 *
 * The version of the OpenAPI document: 2016-10-10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIApiUpdateContract.h
 *
 * API Update Contract details.
 */

#ifndef OAIApiUpdateContract_H
#define OAIApiUpdateContract_H

#include <QJsonObject>

#include "OAIAuthenticationSettingsContract.h"
#include "OAISubscriptionKeyParameterNamesContract.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAuthenticationSettingsContract;
class OAISubscriptionKeyParameterNamesContract;

class OAIApiUpdateContract : public OAIObject {
public:
    OAIApiUpdateContract();
    OAIApiUpdateContract(QString json);
    ~OAIApiUpdateContract() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getPath() const;
    void setPath(const QString &path);
    bool is_path_Set() const;
    bool is_path_Valid() const;

    QList<QString> getProtocols() const;
    void setProtocols(const QList<QString> &protocols);
    bool is_protocols_Set() const;
    bool is_protocols_Valid() const;

    QString getServiceUrl() const;
    void setServiceUrl(const QString &service_url);
    bool is_service_url_Set() const;
    bool is_service_url_Valid() const;

    OAIAuthenticationSettingsContract getAuthenticationSettings() const;
    void setAuthenticationSettings(const OAIAuthenticationSettingsContract &authentication_settings);
    bool is_authentication_settings_Set() const;
    bool is_authentication_settings_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    OAISubscriptionKeyParameterNamesContract getSubscriptionKeyParameterNames() const;
    void setSubscriptionKeyParameterNames(const OAISubscriptionKeyParameterNamesContract &subscription_key_parameter_names);
    bool is_subscription_key_parameter_names_Set() const;
    bool is_subscription_key_parameter_names_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_path;
    bool m_path_isSet;
    bool m_path_isValid;

    QList<QString> m_protocols;
    bool m_protocols_isSet;
    bool m_protocols_isValid;

    QString m_service_url;
    bool m_service_url_isSet;
    bool m_service_url_isValid;

    OAIAuthenticationSettingsContract m_authentication_settings;
    bool m_authentication_settings_isSet;
    bool m_authentication_settings_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    OAISubscriptionKeyParameterNamesContract m_subscription_key_parameter_names;
    bool m_subscription_key_parameter_names_isSet;
    bool m_subscription_key_parameter_names_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIApiUpdateContract)

#endif // OAIApiUpdateContract_H
