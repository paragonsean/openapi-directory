# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.o_auth2_authentication_settings_contract import OAuth2AuthenticationSettingsContract
from openapi_server import util


class AuthenticationSettingsContract(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, o_auth2: OAuth2AuthenticationSettingsContract=None):
        """AuthenticationSettingsContract - a model defined in OpenAPI

        :param o_auth2: The o_auth2 of this AuthenticationSettingsContract.
        """
        self.openapi_types = {
            'o_auth2': OAuth2AuthenticationSettingsContract
        }

        self.attribute_map = {
            'o_auth2': 'oAuth2'
        }

        self._o_auth2 = o_auth2

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AuthenticationSettingsContract':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AuthenticationSettingsContract of this AuthenticationSettingsContract.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def o_auth2(self):
        """Gets the o_auth2 of this AuthenticationSettingsContract.


        :return: The o_auth2 of this AuthenticationSettingsContract.
        :rtype: OAuth2AuthenticationSettingsContract
        """
        return self._o_auth2

    @o_auth2.setter
    def o_auth2(self, o_auth2):
        """Sets the o_auth2 of this AuthenticationSettingsContract.


        :param o_auth2: The o_auth2 of this AuthenticationSettingsContract.
        :type o_auth2: OAuth2AuthenticationSettingsContract
        """

        self._o_auth2 = o_auth2
