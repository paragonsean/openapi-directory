# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class OAuth2AuthenticationSettingsContract(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, authorization_server_id: str=None, scope: str=None):
        """OAuth2AuthenticationSettingsContract - a model defined in OpenAPI

        :param authorization_server_id: The authorization_server_id of this OAuth2AuthenticationSettingsContract.
        :param scope: The scope of this OAuth2AuthenticationSettingsContract.
        """
        self.openapi_types = {
            'authorization_server_id': str,
            'scope': str
        }

        self.attribute_map = {
            'authorization_server_id': 'authorizationServerId',
            'scope': 'scope'
        }

        self._authorization_server_id = authorization_server_id
        self._scope = scope

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OAuth2AuthenticationSettingsContract':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OAuth2AuthenticationSettingsContract of this OAuth2AuthenticationSettingsContract.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def authorization_server_id(self):
        """Gets the authorization_server_id of this OAuth2AuthenticationSettingsContract.

        OAuth authorization server identifier.

        :return: The authorization_server_id of this OAuth2AuthenticationSettingsContract.
        :rtype: str
        """
        return self._authorization_server_id

    @authorization_server_id.setter
    def authorization_server_id(self, authorization_server_id):
        """Sets the authorization_server_id of this OAuth2AuthenticationSettingsContract.

        OAuth authorization server identifier.

        :param authorization_server_id: The authorization_server_id of this OAuth2AuthenticationSettingsContract.
        :type authorization_server_id: str
        """

        self._authorization_server_id = authorization_server_id

    @property
    def scope(self):
        """Gets the scope of this OAuth2AuthenticationSettingsContract.

        operations scope.

        :return: The scope of this OAuth2AuthenticationSettingsContract.
        :rtype: str
        """
        return self._scope

    @scope.setter
    def scope(self, scope):
        """Sets the scope of this OAuth2AuthenticationSettingsContract.

        operations scope.

        :param scope: The scope of this OAuth2AuthenticationSettingsContract.
        :type scope: str
        """

        self._scope = scope
