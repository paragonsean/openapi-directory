/**
 * ApiManagementClient
 * Use these REST APIs for performing operations on API entity and their Operations associated with your Azure API Management deployment.
 *
 * The version of the OpenAPI document: 2016-10-10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ApiExportResult model module.
 * @module model/ApiExportResult
 * @version 2016-10-10
 */
class ApiExportResult {
    /**
     * Constructs a new <code>ApiExportResult</code>.
     * The response model for the export API output operation.
     * @alias module:model/ApiExportResult
     */
    constructor() { 
        
        ApiExportResult.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ApiExportResult</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApiExportResult} obj Optional instance to populate.
     * @return {module:model/ApiExportResult} The populated <code>ApiExportResult</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApiExportResult();

            if (data.hasOwnProperty('content')) {
                obj['content'] = ApiClient.convertToType(data['content'], 'Blob');
            }
            if (data.hasOwnProperty('requestId')) {
                obj['requestId'] = ApiClient.convertToType(data['requestId'], 'String');
            }
            if (data.hasOwnProperty('statusCode')) {
                obj['statusCode'] = ApiClient.convertToType(data['statusCode'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ApiExportResult</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ApiExportResult</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['requestId'] && !(typeof data['requestId'] === 'string' || data['requestId'] instanceof String)) {
            throw new Error("Expected the field `requestId` to be a primitive type in the JSON string but got " + data['requestId']);
        }
        // ensure the json data is a string
        if (data['statusCode'] && !(typeof data['statusCode'] === 'string' || data['statusCode'] instanceof String)) {
            throw new Error("Expected the field `statusCode` to be a primitive type in the JSON string but got " + data['statusCode']);
        }

        return true;
    }


}



/**
 * Response content bytes.
 * @member {Blob} content
 */
ApiExportResult.prototype['content'] = undefined;

/**
 * @member {String} requestId
 */
ApiExportResult.prototype['requestId'] = undefined;

/**
 * @member {module:model/ApiExportResult.StatusCodeEnum} statusCode
 */
ApiExportResult.prototype['statusCode'] = undefined;





/**
 * Allowed values for the <code>statusCode</code> property.
 * @enum {String}
 * @readonly
 */
ApiExportResult['StatusCodeEnum'] = {

    /**
     * value: "Continue"
     * @const
     */
    "Continue": "Continue",

    /**
     * value: "OK"
     * @const
     */
    "OK": "OK",

    /**
     * value: "Created"
     * @const
     */
    "Created": "Created",

    /**
     * value: "Accepted"
     * @const
     */
    "Accepted": "Accepted",

    /**
     * value: "NotFound"
     * @const
     */
    "NotFound": "NotFound",

    /**
     * value: "Conflict"
     * @const
     */
    "Conflict": "Conflict"
};



export default ApiExportResult;

