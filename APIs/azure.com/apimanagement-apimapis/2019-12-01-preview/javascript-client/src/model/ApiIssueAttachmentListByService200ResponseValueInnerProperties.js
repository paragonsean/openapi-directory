/**
 * ApiManagementClient
 * Use these REST APIs for performing operations on API entity and their Operations associated with your Azure API Management deployment.
 *
 * The version of the OpenAPI document: 2019-12-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ApiIssueAttachmentListByService200ResponseValueInnerProperties model module.
 * @module model/ApiIssueAttachmentListByService200ResponseValueInnerProperties
 * @version 2019-12-01-preview
 */
class ApiIssueAttachmentListByService200ResponseValueInnerProperties {
    /**
     * Constructs a new <code>ApiIssueAttachmentListByService200ResponseValueInnerProperties</code>.
     * Issue Attachment contract Properties.
     * @alias module:model/ApiIssueAttachmentListByService200ResponseValueInnerProperties
     * @param content {String} An HTTP link or Base64-encoded binary data.
     * @param contentFormat {String} Either 'link' if content is provided via an HTTP link or the MIME type of the Base64-encoded binary data provided in the 'content' property.
     * @param title {String} Filename by which the binary data will be saved.
     */
    constructor(content, contentFormat, title) { 
        
        ApiIssueAttachmentListByService200ResponseValueInnerProperties.initialize(this, content, contentFormat, title);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, content, contentFormat, title) { 
        obj['content'] = content;
        obj['contentFormat'] = contentFormat;
        obj['title'] = title;
    }

    /**
     * Constructs a <code>ApiIssueAttachmentListByService200ResponseValueInnerProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApiIssueAttachmentListByService200ResponseValueInnerProperties} obj Optional instance to populate.
     * @return {module:model/ApiIssueAttachmentListByService200ResponseValueInnerProperties} The populated <code>ApiIssueAttachmentListByService200ResponseValueInnerProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApiIssueAttachmentListByService200ResponseValueInnerProperties();

            if (data.hasOwnProperty('content')) {
                obj['content'] = ApiClient.convertToType(data['content'], 'String');
            }
            if (data.hasOwnProperty('contentFormat')) {
                obj['contentFormat'] = ApiClient.convertToType(data['contentFormat'], 'String');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ApiIssueAttachmentListByService200ResponseValueInnerProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ApiIssueAttachmentListByService200ResponseValueInnerProperties</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ApiIssueAttachmentListByService200ResponseValueInnerProperties.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['content'] && !(typeof data['content'] === 'string' || data['content'] instanceof String)) {
            throw new Error("Expected the field `content` to be a primitive type in the JSON string but got " + data['content']);
        }
        // ensure the json data is a string
        if (data['contentFormat'] && !(typeof data['contentFormat'] === 'string' || data['contentFormat'] instanceof String)) {
            throw new Error("Expected the field `contentFormat` to be a primitive type in the JSON string but got " + data['contentFormat']);
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }

        return true;
    }


}

ApiIssueAttachmentListByService200ResponseValueInnerProperties.RequiredProperties = ["content", "contentFormat", "title"];

/**
 * An HTTP link or Base64-encoded binary data.
 * @member {String} content
 */
ApiIssueAttachmentListByService200ResponseValueInnerProperties.prototype['content'] = undefined;

/**
 * Either 'link' if content is provided via an HTTP link or the MIME type of the Base64-encoded binary data provided in the 'content' property.
 * @member {String} contentFormat
 */
ApiIssueAttachmentListByService200ResponseValueInnerProperties.prototype['contentFormat'] = undefined;

/**
 * Filename by which the binary data will be saved.
 * @member {String} title
 */
ApiIssueAttachmentListByService200ResponseValueInnerProperties.prototype['title'] = undefined;






export default ApiIssueAttachmentListByService200ResponseValueInnerProperties;

