/*
 * ApiManagementClient
 * Use these REST APIs for performing operations on API entity and their Operations associated with your Azure API Management deployment.
 *
 * The version of the OpenAPI document: 2019-12-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ApiListByServiceDefaultResponse;
import org.openapitools.client.model.ApiOperationGet200Response;
import org.openapitools.client.model.ApiOperationListByApi200Response;
import org.openapitools.client.model.ApiOperationUpdateRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ApiOperationApi
 */
@Disabled
public class ApiOperationApiTest {

    private final ApiOperationApi api = new ApiOperationApi();

    /**
     * Creates a new operation in the API or updates an existing one.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiOperationCreateOrUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String serviceName = null;
        String apiId = null;
        String operationId = null;
        String apiVersion = null;
        String subscriptionId = null;
        ApiOperationGet200Response parameters = null;
        String ifMatch = null;
        ApiOperationGet200Response response = api.apiOperationCreateOrUpdate(resourceGroupName, serviceName, apiId, operationId, apiVersion, subscriptionId, parameters, ifMatch);
        // TODO: test validations
    }

    /**
     * Deletes the specified operation in the API.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiOperationDeleteTest() throws ApiException {
        String resourceGroupName = null;
        String serviceName = null;
        String apiId = null;
        String operationId = null;
        String ifMatch = null;
        String apiVersion = null;
        String subscriptionId = null;
        api.apiOperationDelete(resourceGroupName, serviceName, apiId, operationId, ifMatch, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Gets the details of the API Operation specified by its identifier.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiOperationGetTest() throws ApiException {
        String resourceGroupName = null;
        String serviceName = null;
        String apiId = null;
        String operationId = null;
        String apiVersion = null;
        String subscriptionId = null;
        ApiOperationGet200Response response = api.apiOperationGet(resourceGroupName, serviceName, apiId, operationId, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Gets the entity state (Etag) version of the API operation specified by its identifier.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiOperationGetEntityTagTest() throws ApiException {
        String resourceGroupName = null;
        String serviceName = null;
        String apiId = null;
        String operationId = null;
        String apiVersion = null;
        String subscriptionId = null;
        api.apiOperationGetEntityTag(resourceGroupName, serviceName, apiId, operationId, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Lists a collection of the operations for the specified API.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiOperationListByApiTest() throws ApiException {
        String resourceGroupName = null;
        String serviceName = null;
        String apiId = null;
        String apiVersion = null;
        String subscriptionId = null;
        String $filter = null;
        Integer $top = null;
        Integer $skip = null;
        String tags = null;
        ApiOperationListByApi200Response response = api.apiOperationListByApi(resourceGroupName, serviceName, apiId, apiVersion, subscriptionId, $filter, $top, $skip, tags);
        // TODO: test validations
    }

    /**
     * Updates the details of the operation in the API specified by its identifier.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiOperationUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String serviceName = null;
        String apiId = null;
        String operationId = null;
        String ifMatch = null;
        String apiVersion = null;
        String subscriptionId = null;
        ApiOperationUpdateRequest parameters = null;
        api.apiOperationUpdate(resourceGroupName, serviceName, apiId, operationId, ifMatch, apiVersion, subscriptionId, parameters);
        // TODO: test validations
    }

}
