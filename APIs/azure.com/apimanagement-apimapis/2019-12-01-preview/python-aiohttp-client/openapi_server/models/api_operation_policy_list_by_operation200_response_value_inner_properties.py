# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ApiOperationPolicyListByOperation200ResponseValueInnerProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, format: str='xml', value: str=None):
        """ApiOperationPolicyListByOperation200ResponseValueInnerProperties - a model defined in OpenAPI

        :param format: The format of this ApiOperationPolicyListByOperation200ResponseValueInnerProperties.
        :param value: The value of this ApiOperationPolicyListByOperation200ResponseValueInnerProperties.
        """
        self.openapi_types = {
            'format': str,
            'value': str
        }

        self.attribute_map = {
            'format': 'format',
            'value': 'value'
        }

        self._format = format
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApiOperationPolicyListByOperation200ResponseValueInnerProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ApiOperationPolicy_ListByOperation_200_response_value_inner_properties of this ApiOperationPolicyListByOperation200ResponseValueInnerProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def format(self):
        """Gets the format of this ApiOperationPolicyListByOperation200ResponseValueInnerProperties.

        Format of the policyContent.

        :return: The format of this ApiOperationPolicyListByOperation200ResponseValueInnerProperties.
        :rtype: str
        """
        return self._format

    @format.setter
    def format(self, format):
        """Sets the format of this ApiOperationPolicyListByOperation200ResponseValueInnerProperties.

        Format of the policyContent.

        :param format: The format of this ApiOperationPolicyListByOperation200ResponseValueInnerProperties.
        :type format: str
        """
        allowed_values = ["xml", "xml-link", "rawxml", "rawxml-link"]  # noqa: E501
        if format not in allowed_values:
            raise ValueError(
                "Invalid value for `format` ({0}), must be one of {1}"
                .format(format, allowed_values)
            )

        self._format = format

    @property
    def value(self):
        """Gets the value of this ApiOperationPolicyListByOperation200ResponseValueInnerProperties.

        Contents of the Policy as defined by the format.

        :return: The value of this ApiOperationPolicyListByOperation200ResponseValueInnerProperties.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this ApiOperationPolicyListByOperation200ResponseValueInnerProperties.

        Contents of the Policy as defined by the format.

        :param value: The value of this ApiOperationPolicyListByOperation200ResponseValueInnerProperties.
        :type value: str
        """
        if value is None:
            raise ValueError("Invalid value for `value`, must not be `None`")

        self._value = value
