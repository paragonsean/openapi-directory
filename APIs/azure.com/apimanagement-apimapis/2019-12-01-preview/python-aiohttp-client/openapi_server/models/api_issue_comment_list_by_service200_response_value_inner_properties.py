# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ApiIssueCommentListByService200ResponseValueInnerProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_date: datetime=None, text: str=None, user_id: str=None):
        """ApiIssueCommentListByService200ResponseValueInnerProperties - a model defined in OpenAPI

        :param created_date: The created_date of this ApiIssueCommentListByService200ResponseValueInnerProperties.
        :param text: The text of this ApiIssueCommentListByService200ResponseValueInnerProperties.
        :param user_id: The user_id of this ApiIssueCommentListByService200ResponseValueInnerProperties.
        """
        self.openapi_types = {
            'created_date': datetime,
            'text': str,
            'user_id': str
        }

        self.attribute_map = {
            'created_date': 'createdDate',
            'text': 'text',
            'user_id': 'userId'
        }

        self._created_date = created_date
        self._text = text
        self._user_id = user_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApiIssueCommentListByService200ResponseValueInnerProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ApiIssueComment_ListByService_200_response_value_inner_properties of this ApiIssueCommentListByService200ResponseValueInnerProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_date(self):
        """Gets the created_date of this ApiIssueCommentListByService200ResponseValueInnerProperties.

        Date and time when the comment was created.

        :return: The created_date of this ApiIssueCommentListByService200ResponseValueInnerProperties.
        :rtype: datetime
        """
        return self._created_date

    @created_date.setter
    def created_date(self, created_date):
        """Sets the created_date of this ApiIssueCommentListByService200ResponseValueInnerProperties.

        Date and time when the comment was created.

        :param created_date: The created_date of this ApiIssueCommentListByService200ResponseValueInnerProperties.
        :type created_date: datetime
        """

        self._created_date = created_date

    @property
    def text(self):
        """Gets the text of this ApiIssueCommentListByService200ResponseValueInnerProperties.

        Comment text.

        :return: The text of this ApiIssueCommentListByService200ResponseValueInnerProperties.
        :rtype: str
        """
        return self._text

    @text.setter
    def text(self, text):
        """Sets the text of this ApiIssueCommentListByService200ResponseValueInnerProperties.

        Comment text.

        :param text: The text of this ApiIssueCommentListByService200ResponseValueInnerProperties.
        :type text: str
        """
        if text is None:
            raise ValueError("Invalid value for `text`, must not be `None`")

        self._text = text

    @property
    def user_id(self):
        """Gets the user_id of this ApiIssueCommentListByService200ResponseValueInnerProperties.

        A resource identifier for the user who left the comment.

        :return: The user_id of this ApiIssueCommentListByService200ResponseValueInnerProperties.
        :rtype: str
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this ApiIssueCommentListByService200ResponseValueInnerProperties.

        A resource identifier for the user who left the comment.

        :param user_id: The user_id of this ApiIssueCommentListByService200ResponseValueInnerProperties.
        :type user_id: str
        """
        if user_id is None:
            raise ValueError("Invalid value for `user_id`, must not be `None`")

        self._user_id = user_id
