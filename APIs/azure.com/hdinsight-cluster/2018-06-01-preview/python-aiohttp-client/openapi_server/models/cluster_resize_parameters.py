# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ClusterResizeParameters(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, target_instance_count: int=None):
        """ClusterResizeParameters - a model defined in OpenAPI

        :param target_instance_count: The target_instance_count of this ClusterResizeParameters.
        """
        self.openapi_types = {
            'target_instance_count': int
        }

        self.attribute_map = {
            'target_instance_count': 'targetInstanceCount'
        }

        self._target_instance_count = target_instance_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ClusterResizeParameters':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ClusterResizeParameters of this ClusterResizeParameters.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def target_instance_count(self):
        """Gets the target_instance_count of this ClusterResizeParameters.

        The target instance count for the operation.

        :return: The target_instance_count of this ClusterResizeParameters.
        :rtype: int
        """
        return self._target_instance_count

    @target_instance_count.setter
    def target_instance_count(self, target_instance_count):
        """Sets the target_instance_count of this ClusterResizeParameters.

        The target instance count for the operation.

        :param target_instance_count: The target_instance_count of this ClusterResizeParameters.
        :type target_instance_count: int
        """

        self._target_instance_count = target_instance_count
