# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class StorageAccount(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, container: str=None, file_system: str=None, is_default: bool=None, key: str=None, msi_resource_id: str=None, name: str=None, resource_id: str=None):
        """StorageAccount - a model defined in OpenAPI

        :param container: The container of this StorageAccount.
        :param file_system: The file_system of this StorageAccount.
        :param is_default: The is_default of this StorageAccount.
        :param key: The key of this StorageAccount.
        :param msi_resource_id: The msi_resource_id of this StorageAccount.
        :param name: The name of this StorageAccount.
        :param resource_id: The resource_id of this StorageAccount.
        """
        self.openapi_types = {
            'container': str,
            'file_system': str,
            'is_default': bool,
            'key': str,
            'msi_resource_id': str,
            'name': str,
            'resource_id': str
        }

        self.attribute_map = {
            'container': 'container',
            'file_system': 'fileSystem',
            'is_default': 'isDefault',
            'key': 'key',
            'msi_resource_id': 'msiResourceId',
            'name': 'name',
            'resource_id': 'resourceId'
        }

        self._container = container
        self._file_system = file_system
        self._is_default = is_default
        self._key = key
        self._msi_resource_id = msi_resource_id
        self._name = name
        self._resource_id = resource_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StorageAccount':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StorageAccount of this StorageAccount.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def container(self):
        """Gets the container of this StorageAccount.

        The container in the storage account, only to be specified for WASB storage accounts.

        :return: The container of this StorageAccount.
        :rtype: str
        """
        return self._container

    @container.setter
    def container(self, container):
        """Sets the container of this StorageAccount.

        The container in the storage account, only to be specified for WASB storage accounts.

        :param container: The container of this StorageAccount.
        :type container: str
        """

        self._container = container

    @property
    def file_system(self):
        """Gets the file_system of this StorageAccount.

        The filesystem, only to be specified for Azure Data Lake Storage Gen 2.

        :return: The file_system of this StorageAccount.
        :rtype: str
        """
        return self._file_system

    @file_system.setter
    def file_system(self, file_system):
        """Sets the file_system of this StorageAccount.

        The filesystem, only to be specified for Azure Data Lake Storage Gen 2.

        :param file_system: The file_system of this StorageAccount.
        :type file_system: str
        """

        self._file_system = file_system

    @property
    def is_default(self):
        """Gets the is_default of this StorageAccount.

        Whether or not the storage account is the default storage account.

        :return: The is_default of this StorageAccount.
        :rtype: bool
        """
        return self._is_default

    @is_default.setter
    def is_default(self, is_default):
        """Sets the is_default of this StorageAccount.

        Whether or not the storage account is the default storage account.

        :param is_default: The is_default of this StorageAccount.
        :type is_default: bool
        """

        self._is_default = is_default

    @property
    def key(self):
        """Gets the key of this StorageAccount.

        The storage account access key.

        :return: The key of this StorageAccount.
        :rtype: str
        """
        return self._key

    @key.setter
    def key(self, key):
        """Sets the key of this StorageAccount.

        The storage account access key.

        :param key: The key of this StorageAccount.
        :type key: str
        """

        self._key = key

    @property
    def msi_resource_id(self):
        """Gets the msi_resource_id of this StorageAccount.

        The managed identity (MSI) that is allowed to access the storage account, only to be specified for Azure Data Lake Storage Gen 2.

        :return: The msi_resource_id of this StorageAccount.
        :rtype: str
        """
        return self._msi_resource_id

    @msi_resource_id.setter
    def msi_resource_id(self, msi_resource_id):
        """Sets the msi_resource_id of this StorageAccount.

        The managed identity (MSI) that is allowed to access the storage account, only to be specified for Azure Data Lake Storage Gen 2.

        :param msi_resource_id: The msi_resource_id of this StorageAccount.
        :type msi_resource_id: str
        """

        self._msi_resource_id = msi_resource_id

    @property
    def name(self):
        """Gets the name of this StorageAccount.

        The name of the storage account.

        :return: The name of this StorageAccount.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this StorageAccount.

        The name of the storage account.

        :param name: The name of this StorageAccount.
        :type name: str
        """

        self._name = name

    @property
    def resource_id(self):
        """Gets the resource_id of this StorageAccount.

        The resource ID of storage account, only to be specified for Azure Data Lake Storage Gen 2.

        :return: The resource_id of this StorageAccount.
        :rtype: str
        """
        return self._resource_id

    @resource_id.setter
    def resource_id(self, resource_id):
        """Sets the resource_id of this StorageAccount.

        The resource ID of storage account, only to be specified for Azure Data Lake Storage Gen 2.

        :param resource_id: The resource_id of this StorageAccount.
        :type resource_id: str
        """

        self._resource_id = resource_id
