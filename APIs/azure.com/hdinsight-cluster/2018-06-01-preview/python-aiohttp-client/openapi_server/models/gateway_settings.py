# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GatewaySettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, rest_auth_credential_is_enabled: str=None, rest_auth_credential_password: str=None, rest_auth_credential_username: str=None):
        """GatewaySettings - a model defined in OpenAPI

        :param rest_auth_credential_is_enabled: The rest_auth_credential_is_enabled of this GatewaySettings.
        :param rest_auth_credential_password: The rest_auth_credential_password of this GatewaySettings.
        :param rest_auth_credential_username: The rest_auth_credential_username of this GatewaySettings.
        """
        self.openapi_types = {
            'rest_auth_credential_is_enabled': str,
            'rest_auth_credential_password': str,
            'rest_auth_credential_username': str
        }

        self.attribute_map = {
            'rest_auth_credential_is_enabled': 'restAuthCredential.isEnabled',
            'rest_auth_credential_password': 'restAuthCredential.password',
            'rest_auth_credential_username': 'restAuthCredential.username'
        }

        self._rest_auth_credential_is_enabled = rest_auth_credential_is_enabled
        self._rest_auth_credential_password = rest_auth_credential_password
        self._rest_auth_credential_username = rest_auth_credential_username

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GatewaySettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GatewaySettings of this GatewaySettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def rest_auth_credential_is_enabled(self):
        """Gets the rest_auth_credential_is_enabled of this GatewaySettings.

        Indicates whether or not the gateway settings based authorization is enabled.

        :return: The rest_auth_credential_is_enabled of this GatewaySettings.
        :rtype: str
        """
        return self._rest_auth_credential_is_enabled

    @rest_auth_credential_is_enabled.setter
    def rest_auth_credential_is_enabled(self, rest_auth_credential_is_enabled):
        """Sets the rest_auth_credential_is_enabled of this GatewaySettings.

        Indicates whether or not the gateway settings based authorization is enabled.

        :param rest_auth_credential_is_enabled: The rest_auth_credential_is_enabled of this GatewaySettings.
        :type rest_auth_credential_is_enabled: str
        """

        self._rest_auth_credential_is_enabled = rest_auth_credential_is_enabled

    @property
    def rest_auth_credential_password(self):
        """Gets the rest_auth_credential_password of this GatewaySettings.

        The gateway settings user password.

        :return: The rest_auth_credential_password of this GatewaySettings.
        :rtype: str
        """
        return self._rest_auth_credential_password

    @rest_auth_credential_password.setter
    def rest_auth_credential_password(self, rest_auth_credential_password):
        """Sets the rest_auth_credential_password of this GatewaySettings.

        The gateway settings user password.

        :param rest_auth_credential_password: The rest_auth_credential_password of this GatewaySettings.
        :type rest_auth_credential_password: str
        """

        self._rest_auth_credential_password = rest_auth_credential_password

    @property
    def rest_auth_credential_username(self):
        """Gets the rest_auth_credential_username of this GatewaySettings.

        The gateway settings user name.

        :return: The rest_auth_credential_username of this GatewaySettings.
        :rtype: str
        """
        return self._rest_auth_credential_username

    @rest_auth_credential_username.setter
    def rest_auth_credential_username(self, rest_auth_credential_username):
        """Sets the rest_auth_credential_username of this GatewaySettings.

        The gateway settings user name.

        :param rest_auth_credential_username: The rest_auth_credential_username of this GatewaySettings.
        :type rest_auth_credential_username: str
        """

        self._rest_auth_credential_username = rest_auth_credential_username
