/**
 * HDInsightManagementClient
 * The HDInsight Management Client.
 *
 * The version of the OpenAPI document: 2018-06-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ClusterDefinition from './ClusterDefinition';
import ComputeProfile from './ComputeProfile';
import ConnectivityEndpoint from './ConnectivityEndpoint';
import DiskEncryptionProperties from './DiskEncryptionProperties';
import Errors from './Errors';
import KafkaRestProperties from './KafkaRestProperties';
import QuotaInfo from './QuotaInfo';
import SecurityProfile from './SecurityProfile';

/**
 * The ClusterGetProperties model module.
 * @module model/ClusterGetProperties
 * @version 2018-06-01-preview
 */
class ClusterGetProperties {
    /**
     * Constructs a new <code>ClusterGetProperties</code>.
     * The properties of cluster.
     * @alias module:model/ClusterGetProperties
     * @param clusterDefinition {module:model/ClusterDefinition} 
     */
    constructor(clusterDefinition) { 
        
        ClusterGetProperties.initialize(this, clusterDefinition);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, clusterDefinition) { 
        obj['clusterDefinition'] = clusterDefinition;
    }

    /**
     * Constructs a <code>ClusterGetProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ClusterGetProperties} obj Optional instance to populate.
     * @return {module:model/ClusterGetProperties} The populated <code>ClusterGetProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ClusterGetProperties();

            if (data.hasOwnProperty('clusterDefinition')) {
                obj['clusterDefinition'] = ClusterDefinition.constructFromObject(data['clusterDefinition']);
            }
            if (data.hasOwnProperty('clusterState')) {
                obj['clusterState'] = ApiClient.convertToType(data['clusterState'], 'String');
            }
            if (data.hasOwnProperty('clusterVersion')) {
                obj['clusterVersion'] = ApiClient.convertToType(data['clusterVersion'], 'String');
            }
            if (data.hasOwnProperty('computeProfile')) {
                obj['computeProfile'] = ComputeProfile.constructFromObject(data['computeProfile']);
            }
            if (data.hasOwnProperty('connectivityEndpoints')) {
                obj['connectivityEndpoints'] = ApiClient.convertToType(data['connectivityEndpoints'], [ConnectivityEndpoint]);
            }
            if (data.hasOwnProperty('createdDate')) {
                obj['createdDate'] = ApiClient.convertToType(data['createdDate'], 'String');
            }
            if (data.hasOwnProperty('diskEncryptionProperties')) {
                obj['diskEncryptionProperties'] = DiskEncryptionProperties.constructFromObject(data['diskEncryptionProperties']);
            }
            if (data.hasOwnProperty('errors')) {
                obj['errors'] = ApiClient.convertToType(data['errors'], [Errors]);
            }
            if (data.hasOwnProperty('kafkaRestProperties')) {
                obj['kafkaRestProperties'] = KafkaRestProperties.constructFromObject(data['kafkaRestProperties']);
            }
            if (data.hasOwnProperty('osType')) {
                obj['osType'] = ApiClient.convertToType(data['osType'], 'String');
            }
            if (data.hasOwnProperty('provisioningState')) {
                obj['provisioningState'] = ApiClient.convertToType(data['provisioningState'], 'String');
            }
            if (data.hasOwnProperty('quotaInfo')) {
                obj['quotaInfo'] = QuotaInfo.constructFromObject(data['quotaInfo']);
            }
            if (data.hasOwnProperty('securityProfile')) {
                obj['securityProfile'] = SecurityProfile.constructFromObject(data['securityProfile']);
            }
            if (data.hasOwnProperty('tier')) {
                obj['tier'] = ApiClient.convertToType(data['tier'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ClusterGetProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ClusterGetProperties</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ClusterGetProperties.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `clusterDefinition`
        if (data['clusterDefinition']) { // data not null
          ClusterDefinition.validateJSON(data['clusterDefinition']);
        }
        // ensure the json data is a string
        if (data['clusterState'] && !(typeof data['clusterState'] === 'string' || data['clusterState'] instanceof String)) {
            throw new Error("Expected the field `clusterState` to be a primitive type in the JSON string but got " + data['clusterState']);
        }
        // ensure the json data is a string
        if (data['clusterVersion'] && !(typeof data['clusterVersion'] === 'string' || data['clusterVersion'] instanceof String)) {
            throw new Error("Expected the field `clusterVersion` to be a primitive type in the JSON string but got " + data['clusterVersion']);
        }
        // validate the optional field `computeProfile`
        if (data['computeProfile']) { // data not null
          ComputeProfile.validateJSON(data['computeProfile']);
        }
        if (data['connectivityEndpoints']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['connectivityEndpoints'])) {
                throw new Error("Expected the field `connectivityEndpoints` to be an array in the JSON data but got " + data['connectivityEndpoints']);
            }
            // validate the optional field `connectivityEndpoints` (array)
            for (const item of data['connectivityEndpoints']) {
                ConnectivityEndpoint.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['createdDate'] && !(typeof data['createdDate'] === 'string' || data['createdDate'] instanceof String)) {
            throw new Error("Expected the field `createdDate` to be a primitive type in the JSON string but got " + data['createdDate']);
        }
        // validate the optional field `diskEncryptionProperties`
        if (data['diskEncryptionProperties']) { // data not null
          DiskEncryptionProperties.validateJSON(data['diskEncryptionProperties']);
        }
        if (data['errors']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['errors'])) {
                throw new Error("Expected the field `errors` to be an array in the JSON data but got " + data['errors']);
            }
            // validate the optional field `errors` (array)
            for (const item of data['errors']) {
                Errors.validateJSON(item);
            };
        }
        // validate the optional field `kafkaRestProperties`
        if (data['kafkaRestProperties']) { // data not null
          KafkaRestProperties.validateJSON(data['kafkaRestProperties']);
        }
        // ensure the json data is a string
        if (data['osType'] && !(typeof data['osType'] === 'string' || data['osType'] instanceof String)) {
            throw new Error("Expected the field `osType` to be a primitive type in the JSON string but got " + data['osType']);
        }
        // ensure the json data is a string
        if (data['provisioningState'] && !(typeof data['provisioningState'] === 'string' || data['provisioningState'] instanceof String)) {
            throw new Error("Expected the field `provisioningState` to be a primitive type in the JSON string but got " + data['provisioningState']);
        }
        // validate the optional field `quotaInfo`
        if (data['quotaInfo']) { // data not null
          QuotaInfo.validateJSON(data['quotaInfo']);
        }
        // validate the optional field `securityProfile`
        if (data['securityProfile']) { // data not null
          SecurityProfile.validateJSON(data['securityProfile']);
        }
        // ensure the json data is a string
        if (data['tier'] && !(typeof data['tier'] === 'string' || data['tier'] instanceof String)) {
            throw new Error("Expected the field `tier` to be a primitive type in the JSON string but got " + data['tier']);
        }

        return true;
    }


}

ClusterGetProperties.RequiredProperties = ["clusterDefinition"];

/**
 * @member {module:model/ClusterDefinition} clusterDefinition
 */
ClusterGetProperties.prototype['clusterDefinition'] = undefined;

/**
 * The state of the cluster.
 * @member {String} clusterState
 */
ClusterGetProperties.prototype['clusterState'] = undefined;

/**
 * The version of the cluster.
 * @member {String} clusterVersion
 */
ClusterGetProperties.prototype['clusterVersion'] = undefined;

/**
 * @member {module:model/ComputeProfile} computeProfile
 */
ClusterGetProperties.prototype['computeProfile'] = undefined;

/**
 * The list of connectivity endpoints.
 * @member {Array.<module:model/ConnectivityEndpoint>} connectivityEndpoints
 */
ClusterGetProperties.prototype['connectivityEndpoints'] = undefined;

/**
 * The date on which the cluster was created.
 * @member {String} createdDate
 */
ClusterGetProperties.prototype['createdDate'] = undefined;

/**
 * @member {module:model/DiskEncryptionProperties} diskEncryptionProperties
 */
ClusterGetProperties.prototype['diskEncryptionProperties'] = undefined;

/**
 * The list of errors.
 * @member {Array.<module:model/Errors>} errors
 */
ClusterGetProperties.prototype['errors'] = undefined;

/**
 * @member {module:model/KafkaRestProperties} kafkaRestProperties
 */
ClusterGetProperties.prototype['kafkaRestProperties'] = undefined;

/**
 * The type of operating system.
 * @member {module:model/ClusterGetProperties.OsTypeEnum} osType
 */
ClusterGetProperties.prototype['osType'] = undefined;

/**
 * The provisioning state, which only appears in the response.
 * @member {module:model/ClusterGetProperties.ProvisioningStateEnum} provisioningState
 */
ClusterGetProperties.prototype['provisioningState'] = undefined;

/**
 * @member {module:model/QuotaInfo} quotaInfo
 */
ClusterGetProperties.prototype['quotaInfo'] = undefined;

/**
 * @member {module:model/SecurityProfile} securityProfile
 */
ClusterGetProperties.prototype['securityProfile'] = undefined;

/**
 * The cluster tier.
 * @member {module:model/ClusterGetProperties.TierEnum} tier
 */
ClusterGetProperties.prototype['tier'] = undefined;





/**
 * Allowed values for the <code>osType</code> property.
 * @enum {String}
 * @readonly
 */
ClusterGetProperties['OsTypeEnum'] = {

    /**
     * value: "Windows"
     * @const
     */
    "Windows": "Windows",

    /**
     * value: "Linux"
     * @const
     */
    "Linux": "Linux"
};


/**
 * Allowed values for the <code>provisioningState</code> property.
 * @enum {String}
 * @readonly
 */
ClusterGetProperties['ProvisioningStateEnum'] = {

    /**
     * value: "InProgress"
     * @const
     */
    "InProgress": "InProgress",

    /**
     * value: "Failed"
     * @const
     */
    "Failed": "Failed",

    /**
     * value: "Succeeded"
     * @const
     */
    "Succeeded": "Succeeded",

    /**
     * value: "Canceled"
     * @const
     */
    "Canceled": "Canceled",

    /**
     * value: "Deleting"
     * @const
     */
    "Deleting": "Deleting"
};


/**
 * Allowed values for the <code>tier</code> property.
 * @enum {String}
 * @readonly
 */
ClusterGetProperties['TierEnum'] = {

    /**
     * value: "Standard"
     * @const
     */
    "Standard": "Standard",

    /**
     * value: "Premium"
     * @const
     */
    "Premium": "Premium"
};



export default ClusterGetProperties;

