/**
 * HDInsightManagementClient
 * The HDInsight Management Client.
 *
 * The version of the OpenAPI document: 2018-06-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The StorageAccount model module.
 * @module model/StorageAccount
 * @version 2018-06-01-preview
 */
class StorageAccount {
    /**
     * Constructs a new <code>StorageAccount</code>.
     * The storage Account.
     * @alias module:model/StorageAccount
     */
    constructor() { 
        
        StorageAccount.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>StorageAccount</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/StorageAccount} obj Optional instance to populate.
     * @return {module:model/StorageAccount} The populated <code>StorageAccount</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StorageAccount();

            if (data.hasOwnProperty('container')) {
                obj['container'] = ApiClient.convertToType(data['container'], 'String');
            }
            if (data.hasOwnProperty('fileSystem')) {
                obj['fileSystem'] = ApiClient.convertToType(data['fileSystem'], 'String');
            }
            if (data.hasOwnProperty('isDefault')) {
                obj['isDefault'] = ApiClient.convertToType(data['isDefault'], 'Boolean');
            }
            if (data.hasOwnProperty('key')) {
                obj['key'] = ApiClient.convertToType(data['key'], 'String');
            }
            if (data.hasOwnProperty('msiResourceId')) {
                obj['msiResourceId'] = ApiClient.convertToType(data['msiResourceId'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('resourceId')) {
                obj['resourceId'] = ApiClient.convertToType(data['resourceId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>StorageAccount</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>StorageAccount</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['container'] && !(typeof data['container'] === 'string' || data['container'] instanceof String)) {
            throw new Error("Expected the field `container` to be a primitive type in the JSON string but got " + data['container']);
        }
        // ensure the json data is a string
        if (data['fileSystem'] && !(typeof data['fileSystem'] === 'string' || data['fileSystem'] instanceof String)) {
            throw new Error("Expected the field `fileSystem` to be a primitive type in the JSON string but got " + data['fileSystem']);
        }
        // ensure the json data is a string
        if (data['key'] && !(typeof data['key'] === 'string' || data['key'] instanceof String)) {
            throw new Error("Expected the field `key` to be a primitive type in the JSON string but got " + data['key']);
        }
        // ensure the json data is a string
        if (data['msiResourceId'] && !(typeof data['msiResourceId'] === 'string' || data['msiResourceId'] instanceof String)) {
            throw new Error("Expected the field `msiResourceId` to be a primitive type in the JSON string but got " + data['msiResourceId']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['resourceId'] && !(typeof data['resourceId'] === 'string' || data['resourceId'] instanceof String)) {
            throw new Error("Expected the field `resourceId` to be a primitive type in the JSON string but got " + data['resourceId']);
        }

        return true;
    }


}



/**
 * The container in the storage account, only to be specified for WASB storage accounts.
 * @member {String} container
 */
StorageAccount.prototype['container'] = undefined;

/**
 * The filesystem, only to be specified for Azure Data Lake Storage Gen 2.
 * @member {String} fileSystem
 */
StorageAccount.prototype['fileSystem'] = undefined;

/**
 * Whether or not the storage account is the default storage account.
 * @member {Boolean} isDefault
 */
StorageAccount.prototype['isDefault'] = undefined;

/**
 * The storage account access key.
 * @member {String} key
 */
StorageAccount.prototype['key'] = undefined;

/**
 * The managed identity (MSI) that is allowed to access the storage account, only to be specified for Azure Data Lake Storage Gen 2.
 * @member {String} msiResourceId
 */
StorageAccount.prototype['msiResourceId'] = undefined;

/**
 * The name of the storage account.
 * @member {String} name
 */
StorageAccount.prototype['name'] = undefined;

/**
 * The resource ID of storage account, only to be specified for Azure Data Lake Storage Gen 2.
 * @member {String} resourceId
 */
StorageAccount.prototype['resourceId'] = undefined;






export default StorageAccount;

