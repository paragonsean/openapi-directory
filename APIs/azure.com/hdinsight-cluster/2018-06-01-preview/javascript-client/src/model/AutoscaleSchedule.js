/**
 * HDInsightManagementClient
 * The HDInsight Management Client.
 *
 * The version of the OpenAPI document: 2018-06-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AutoscaleTimeAndCapacity from './AutoscaleTimeAndCapacity';

/**
 * The AutoscaleSchedule model module.
 * @module model/AutoscaleSchedule
 * @version 2018-06-01-preview
 */
class AutoscaleSchedule {
    /**
     * Constructs a new <code>AutoscaleSchedule</code>.
     * Parameters for a schedule-based autoscale rule, consisting of an array of days + a time and capacity
     * @alias module:model/AutoscaleSchedule
     */
    constructor() { 
        
        AutoscaleSchedule.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AutoscaleSchedule</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AutoscaleSchedule} obj Optional instance to populate.
     * @return {module:model/AutoscaleSchedule} The populated <code>AutoscaleSchedule</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AutoscaleSchedule();

            if (data.hasOwnProperty('days')) {
                obj['days'] = ApiClient.convertToType(data['days'], ['String']);
            }
            if (data.hasOwnProperty('timeAndCapacity')) {
                obj['timeAndCapacity'] = AutoscaleTimeAndCapacity.constructFromObject(data['timeAndCapacity']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AutoscaleSchedule</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AutoscaleSchedule</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['days'])) {
            throw new Error("Expected the field `days` to be an array in the JSON data but got " + data['days']);
        }
        // validate the optional field `timeAndCapacity`
        if (data['timeAndCapacity']) { // data not null
          AutoscaleTimeAndCapacity.validateJSON(data['timeAndCapacity']);
        }

        return true;
    }


}



/**
 * Days of the week for a schedule-based autoscale rule
 * @member {Array.<module:model/AutoscaleSchedule.DaysEnum>} days
 */
AutoscaleSchedule.prototype['days'] = undefined;

/**
 * @member {module:model/AutoscaleTimeAndCapacity} timeAndCapacity
 */
AutoscaleSchedule.prototype['timeAndCapacity'] = undefined;





/**
 * Allowed values for the <code>days</code> property.
 * @enum {String}
 * @readonly
 */
AutoscaleSchedule['DaysEnum'] = {

    /**
     * value: "Monday"
     * @const
     */
    "Monday": "Monday",

    /**
     * value: "Tuesday"
     * @const
     */
    "Tuesday": "Tuesday",

    /**
     * value: "Wednesday"
     * @const
     */
    "Wednesday": "Wednesday",

    /**
     * value: "Thursday"
     * @const
     */
    "Thursday": "Thursday",

    /**
     * value: "Friday"
     * @const
     */
    "Friday": "Friday",

    /**
     * value: "Saturday"
     * @const
     */
    "Saturday": "Saturday",

    /**
     * value: "Sunday"
     * @const
     */
    "Sunday": "Sunday"
};



export default AutoscaleSchedule;

