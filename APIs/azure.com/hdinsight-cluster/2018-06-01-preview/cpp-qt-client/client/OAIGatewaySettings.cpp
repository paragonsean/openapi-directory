/**
 * HDInsightManagementClient
 * The HDInsight Management Client.
 *
 * The version of the OpenAPI document: 2018-06-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGatewaySettings.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGatewaySettings::OAIGatewaySettings(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGatewaySettings::OAIGatewaySettings() {
    this->initializeModel();
}

OAIGatewaySettings::~OAIGatewaySettings() {}

void OAIGatewaySettings::initializeModel() {

    m_rest_auth_credential_is_enabled_isSet = false;
    m_rest_auth_credential_is_enabled_isValid = false;

    m_rest_auth_credential_password_isSet = false;
    m_rest_auth_credential_password_isValid = false;

    m_rest_auth_credential_username_isSet = false;
    m_rest_auth_credential_username_isValid = false;
}

void OAIGatewaySettings::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGatewaySettings::fromJsonObject(QJsonObject json) {

    m_rest_auth_credential_is_enabled_isValid = ::OpenAPI::fromJsonValue(m_rest_auth_credential_is_enabled, json[QString("restAuthCredential.isEnabled")]);
    m_rest_auth_credential_is_enabled_isSet = !json[QString("restAuthCredential.isEnabled")].isNull() && m_rest_auth_credential_is_enabled_isValid;

    m_rest_auth_credential_password_isValid = ::OpenAPI::fromJsonValue(m_rest_auth_credential_password, json[QString("restAuthCredential.password")]);
    m_rest_auth_credential_password_isSet = !json[QString("restAuthCredential.password")].isNull() && m_rest_auth_credential_password_isValid;

    m_rest_auth_credential_username_isValid = ::OpenAPI::fromJsonValue(m_rest_auth_credential_username, json[QString("restAuthCredential.username")]);
    m_rest_auth_credential_username_isSet = !json[QString("restAuthCredential.username")].isNull() && m_rest_auth_credential_username_isValid;
}

QString OAIGatewaySettings::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGatewaySettings::asJsonObject() const {
    QJsonObject obj;
    if (m_rest_auth_credential_is_enabled_isSet) {
        obj.insert(QString("restAuthCredential.isEnabled"), ::OpenAPI::toJsonValue(m_rest_auth_credential_is_enabled));
    }
    if (m_rest_auth_credential_password_isSet) {
        obj.insert(QString("restAuthCredential.password"), ::OpenAPI::toJsonValue(m_rest_auth_credential_password));
    }
    if (m_rest_auth_credential_username_isSet) {
        obj.insert(QString("restAuthCredential.username"), ::OpenAPI::toJsonValue(m_rest_auth_credential_username));
    }
    return obj;
}

QString OAIGatewaySettings::getRestAuthCredentialIsEnabled() const {
    return m_rest_auth_credential_is_enabled;
}
void OAIGatewaySettings::setRestAuthCredentialIsEnabled(const QString &rest_auth_credential_is_enabled) {
    m_rest_auth_credential_is_enabled = rest_auth_credential_is_enabled;
    m_rest_auth_credential_is_enabled_isSet = true;
}

bool OAIGatewaySettings::is_rest_auth_credential_is_enabled_Set() const{
    return m_rest_auth_credential_is_enabled_isSet;
}

bool OAIGatewaySettings::is_rest_auth_credential_is_enabled_Valid() const{
    return m_rest_auth_credential_is_enabled_isValid;
}

QString OAIGatewaySettings::getRestAuthCredentialPassword() const {
    return m_rest_auth_credential_password;
}
void OAIGatewaySettings::setRestAuthCredentialPassword(const QString &rest_auth_credential_password) {
    m_rest_auth_credential_password = rest_auth_credential_password;
    m_rest_auth_credential_password_isSet = true;
}

bool OAIGatewaySettings::is_rest_auth_credential_password_Set() const{
    return m_rest_auth_credential_password_isSet;
}

bool OAIGatewaySettings::is_rest_auth_credential_password_Valid() const{
    return m_rest_auth_credential_password_isValid;
}

QString OAIGatewaySettings::getRestAuthCredentialUsername() const {
    return m_rest_auth_credential_username;
}
void OAIGatewaySettings::setRestAuthCredentialUsername(const QString &rest_auth_credential_username) {
    m_rest_auth_credential_username = rest_auth_credential_username;
    m_rest_auth_credential_username_isSet = true;
}

bool OAIGatewaySettings::is_rest_auth_credential_username_Set() const{
    return m_rest_auth_credential_username_isSet;
}

bool OAIGatewaySettings::is_rest_auth_credential_username_Valid() const{
    return m_rest_auth_credential_username_isValid;
}

bool OAIGatewaySettings::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_rest_auth_credential_is_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rest_auth_credential_password_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rest_auth_credential_username_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGatewaySettings::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
