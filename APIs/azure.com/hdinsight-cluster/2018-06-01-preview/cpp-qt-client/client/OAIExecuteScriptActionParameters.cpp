/**
 * HDInsightManagementClient
 * The HDInsight Management Client.
 *
 * The version of the OpenAPI document: 2018-06-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIExecuteScriptActionParameters.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIExecuteScriptActionParameters::OAIExecuteScriptActionParameters(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIExecuteScriptActionParameters::OAIExecuteScriptActionParameters() {
    this->initializeModel();
}

OAIExecuteScriptActionParameters::~OAIExecuteScriptActionParameters() {}

void OAIExecuteScriptActionParameters::initializeModel() {

    m_persist_on_success_isSet = false;
    m_persist_on_success_isValid = false;

    m_script_actions_isSet = false;
    m_script_actions_isValid = false;
}

void OAIExecuteScriptActionParameters::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIExecuteScriptActionParameters::fromJsonObject(QJsonObject json) {

    m_persist_on_success_isValid = ::OpenAPI::fromJsonValue(m_persist_on_success, json[QString("persistOnSuccess")]);
    m_persist_on_success_isSet = !json[QString("persistOnSuccess")].isNull() && m_persist_on_success_isValid;

    m_script_actions_isValid = ::OpenAPI::fromJsonValue(m_script_actions, json[QString("scriptActions")]);
    m_script_actions_isSet = !json[QString("scriptActions")].isNull() && m_script_actions_isValid;
}

QString OAIExecuteScriptActionParameters::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIExecuteScriptActionParameters::asJsonObject() const {
    QJsonObject obj;
    if (m_persist_on_success_isSet) {
        obj.insert(QString("persistOnSuccess"), ::OpenAPI::toJsonValue(m_persist_on_success));
    }
    if (m_script_actions.size() > 0) {
        obj.insert(QString("scriptActions"), ::OpenAPI::toJsonValue(m_script_actions));
    }
    return obj;
}

bool OAIExecuteScriptActionParameters::isPersistOnSuccess() const {
    return m_persist_on_success;
}
void OAIExecuteScriptActionParameters::setPersistOnSuccess(const bool &persist_on_success) {
    m_persist_on_success = persist_on_success;
    m_persist_on_success_isSet = true;
}

bool OAIExecuteScriptActionParameters::is_persist_on_success_Set() const{
    return m_persist_on_success_isSet;
}

bool OAIExecuteScriptActionParameters::is_persist_on_success_Valid() const{
    return m_persist_on_success_isValid;
}

QList<OAIRuntimeScriptAction> OAIExecuteScriptActionParameters::getScriptActions() const {
    return m_script_actions;
}
void OAIExecuteScriptActionParameters::setScriptActions(const QList<OAIRuntimeScriptAction> &script_actions) {
    m_script_actions = script_actions;
    m_script_actions_isSet = true;
}

bool OAIExecuteScriptActionParameters::is_script_actions_Set() const{
    return m_script_actions_isSet;
}

bool OAIExecuteScriptActionParameters::is_script_actions_Valid() const{
    return m_script_actions_isValid;
}

bool OAIExecuteScriptActionParameters::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_persist_on_success_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_script_actions.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIExecuteScriptActionParameters::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_persist_on_success_isValid && true;
}

} // namespace OpenAPI
