/**
 * HDInsightManagementClient
 * The HDInsight Management Client.
 *
 * The version of the OpenAPI document: 2018-06-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIStorageProfile.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIStorageProfile::OAIStorageProfile(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIStorageProfile::OAIStorageProfile() {
    this->initializeModel();
}

OAIStorageProfile::~OAIStorageProfile() {}

void OAIStorageProfile::initializeModel() {

    m_storageaccounts_isSet = false;
    m_storageaccounts_isValid = false;
}

void OAIStorageProfile::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIStorageProfile::fromJsonObject(QJsonObject json) {

    m_storageaccounts_isValid = ::OpenAPI::fromJsonValue(m_storageaccounts, json[QString("storageaccounts")]);
    m_storageaccounts_isSet = !json[QString("storageaccounts")].isNull() && m_storageaccounts_isValid;
}

QString OAIStorageProfile::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIStorageProfile::asJsonObject() const {
    QJsonObject obj;
    if (m_storageaccounts.size() > 0) {
        obj.insert(QString("storageaccounts"), ::OpenAPI::toJsonValue(m_storageaccounts));
    }
    return obj;
}

QList<OAIStorageAccount> OAIStorageProfile::getStorageaccounts() const {
    return m_storageaccounts;
}
void OAIStorageProfile::setStorageaccounts(const QList<OAIStorageAccount> &storageaccounts) {
    m_storageaccounts = storageaccounts;
    m_storageaccounts_isSet = true;
}

bool OAIStorageProfile::is_storageaccounts_Set() const{
    return m_storageaccounts_isSet;
}

bool OAIStorageProfile::is_storageaccounts_Valid() const{
    return m_storageaccounts_isValid;
}

bool OAIStorageProfile::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_storageaccounts.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIStorageProfile::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
