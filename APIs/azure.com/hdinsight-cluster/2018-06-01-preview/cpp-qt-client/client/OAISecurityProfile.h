/**
 * HDInsightManagementClient
 * The HDInsight Management Client.
 *
 * The version of the OpenAPI document: 2018-06-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISecurityProfile.h
 *
 * The security profile which contains Ssh public key for the HDInsight cluster.
 */

#ifndef OAISecurityProfile_H
#define OAISecurityProfile_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISecurityProfile : public OAIObject {
public:
    OAISecurityProfile();
    OAISecurityProfile(QString json);
    ~OAISecurityProfile() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAaddsResourceId() const;
    void setAaddsResourceId(const QString &aadds_resource_id);
    bool is_aadds_resource_id_Set() const;
    bool is_aadds_resource_id_Valid() const;

    QList<QString> getClusterUsersGroupDns() const;
    void setClusterUsersGroupDns(const QList<QString> &cluster_users_group_dns);
    bool is_cluster_users_group_dns_Set() const;
    bool is_cluster_users_group_dns_Valid() const;

    QString getDirectoryType() const;
    void setDirectoryType(const QString &directory_type);
    bool is_directory_type_Set() const;
    bool is_directory_type_Valid() const;

    QString getDomain() const;
    void setDomain(const QString &domain);
    bool is_domain_Set() const;
    bool is_domain_Valid() const;

    QString getDomainUserPassword() const;
    void setDomainUserPassword(const QString &domain_user_password);
    bool is_domain_user_password_Set() const;
    bool is_domain_user_password_Valid() const;

    QString getDomainUsername() const;
    void setDomainUsername(const QString &domain_username);
    bool is_domain_username_Set() const;
    bool is_domain_username_Valid() const;

    QList<QString> getLdapsUrls() const;
    void setLdapsUrls(const QList<QString> &ldaps_urls);
    bool is_ldaps_urls_Set() const;
    bool is_ldaps_urls_Valid() const;

    QString getMsiResourceId() const;
    void setMsiResourceId(const QString &msi_resource_id);
    bool is_msi_resource_id_Set() const;
    bool is_msi_resource_id_Valid() const;

    QString getOrganizationalUnitDn() const;
    void setOrganizationalUnitDn(const QString &organizational_unit_dn);
    bool is_organizational_unit_dn_Set() const;
    bool is_organizational_unit_dn_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_aadds_resource_id;
    bool m_aadds_resource_id_isSet;
    bool m_aadds_resource_id_isValid;

    QList<QString> m_cluster_users_group_dns;
    bool m_cluster_users_group_dns_isSet;
    bool m_cluster_users_group_dns_isValid;

    QString m_directory_type;
    bool m_directory_type_isSet;
    bool m_directory_type_isValid;

    QString m_domain;
    bool m_domain_isSet;
    bool m_domain_isValid;

    QString m_domain_user_password;
    bool m_domain_user_password_isSet;
    bool m_domain_user_password_isValid;

    QString m_domain_username;
    bool m_domain_username_isSet;
    bool m_domain_username_isValid;

    QList<QString> m_ldaps_urls;
    bool m_ldaps_urls_isSet;
    bool m_ldaps_urls_isValid;

    QString m_msi_resource_id;
    bool m_msi_resource_id_isSet;
    bool m_msi_resource_id_isValid;

    QString m_organizational_unit_dn;
    bool m_organizational_unit_dn_isSet;
    bool m_organizational_unit_dn_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISecurityProfile)

#endif // OAISecurityProfile_H
