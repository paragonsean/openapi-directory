/**
 * HDInsightManagementClient
 * The HDInsight Management Client.
 *
 * The version of the OpenAPI document: 2018-06-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISshProfile.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISshProfile::OAISshProfile(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISshProfile::OAISshProfile() {
    this->initializeModel();
}

OAISshProfile::~OAISshProfile() {}

void OAISshProfile::initializeModel() {

    m_public_keys_isSet = false;
    m_public_keys_isValid = false;
}

void OAISshProfile::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISshProfile::fromJsonObject(QJsonObject json) {

    m_public_keys_isValid = ::OpenAPI::fromJsonValue(m_public_keys, json[QString("publicKeys")]);
    m_public_keys_isSet = !json[QString("publicKeys")].isNull() && m_public_keys_isValid;
}

QString OAISshProfile::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISshProfile::asJsonObject() const {
    QJsonObject obj;
    if (m_public_keys.size() > 0) {
        obj.insert(QString("publicKeys"), ::OpenAPI::toJsonValue(m_public_keys));
    }
    return obj;
}

QList<OAISshPublicKey> OAISshProfile::getPublicKeys() const {
    return m_public_keys;
}
void OAISshProfile::setPublicKeys(const QList<OAISshPublicKey> &public_keys) {
    m_public_keys = public_keys;
    m_public_keys_isSet = true;
}

bool OAISshProfile::is_public_keys_Set() const{
    return m_public_keys_isSet;
}

bool OAISshProfile::is_public_keys_Valid() const{
    return m_public_keys_isValid;
}

bool OAISshProfile::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_public_keys.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISshProfile::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
