/*
 * HDInsightManagementClient
 * The HDInsight Management Client.
 *
 * The version of the OpenAPI document: 2018-06-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Cluster;
import org.openapitools.client.model.ClusterCreateParametersExtended;
import org.openapitools.client.model.ClusterDiskEncryptionParameters;
import org.openapitools.client.model.ClusterListResult;
import org.openapitools.client.model.ClusterPatchParameters;
import org.openapitools.client.model.ClusterResizeParameters;
import org.openapitools.client.model.ClustersListDefaultResponse;
import org.openapitools.client.model.GatewaySettings;
import org.openapitools.client.model.UpdateGatewaySettingsParameters;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ClustersApi
 */
@Disabled
public class ClustersApiTest {

    private final ClustersApi api = new ClustersApi();

    /**
     * Creates a new HDInsight cluster with the specified parameters.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void clustersCreateTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String clusterName = null;
        String apiVersion = null;
        ClusterCreateParametersExtended parameters = null;
        Cluster response = api.clustersCreate(subscriptionId, resourceGroupName, clusterName, apiVersion, parameters);
        // TODO: test validations
    }

    /**
     * Deletes the specified HDInsight cluster.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void clustersDeleteTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String clusterName = null;
        String apiVersion = null;
        api.clustersDelete(subscriptionId, resourceGroupName, clusterName, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets the specified cluster.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void clustersGetTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String clusterName = null;
        String apiVersion = null;
        Cluster response = api.clustersGet(subscriptionId, resourceGroupName, clusterName, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets the gateway settings for the specified cluster.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void clustersGetGatewaySettingsTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String clusterName = null;
        String apiVersion = null;
        GatewaySettings response = api.clustersGetGatewaySettings(subscriptionId, resourceGroupName, clusterName, apiVersion);
        // TODO: test validations
    }

    /**
     * Lists all the HDInsight clusters under the subscription.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void clustersListTest() throws ApiException {
        String subscriptionId = null;
        String apiVersion = null;
        ClusterListResult response = api.clustersList(subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Lists the HDInsight clusters in a resource group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void clustersListByResourceGroupTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String apiVersion = null;
        ClusterListResult response = api.clustersListByResourceGroup(subscriptionId, resourceGroupName, apiVersion);
        // TODO: test validations
    }

    /**
     * Resizes the specified HDInsight cluster to the specified size.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void clustersResizeTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String clusterName = null;
        String roleName = null;
        String apiVersion = null;
        ClusterResizeParameters parameters = null;
        api.clustersResize(subscriptionId, resourceGroupName, clusterName, roleName, apiVersion, parameters);
        // TODO: test validations
    }

    /**
     * Rotate disk encryption key of the specified HDInsight cluster.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void clustersRotateDiskEncryptionKeyTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String clusterName = null;
        String apiVersion = null;
        ClusterDiskEncryptionParameters parameters = null;
        api.clustersRotateDiskEncryptionKey(subscriptionId, resourceGroupName, clusterName, apiVersion, parameters);
        // TODO: test validations
    }

    /**
     * Patch HDInsight cluster with the specified parameters.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void clustersUpdateTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String clusterName = null;
        String apiVersion = null;
        ClusterPatchParameters parameters = null;
        Cluster response = api.clustersUpdate(subscriptionId, resourceGroupName, clusterName, apiVersion, parameters);
        // TODO: test validations
    }

    /**
     * Configures the gateway settings on the specified cluster.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void clustersUpdateGatewaySettingsTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String clusterName = null;
        String apiVersion = null;
        UpdateGatewaySettingsParameters parameters = null;
        api.clustersUpdateGatewaySettings(subscriptionId, resourceGroupName, clusterName, apiVersion, parameters);
        // TODO: test validations
    }

}
