/**
 * HDInsightManagementClient
 * The HDInsight Management Client.
 *
 * The version of the OpenAPI document: 2015-03-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ClusterDefinition model module.
 * @module model/ClusterDefinition
 * @version 2015-03-01-preview
 */
class ClusterDefinition {
    /**
     * Constructs a new <code>ClusterDefinition</code>.
     * The cluster definition.
     * @alias module:model/ClusterDefinition
     */
    constructor() { 
        
        ClusterDefinition.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ClusterDefinition</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ClusterDefinition} obj Optional instance to populate.
     * @return {module:model/ClusterDefinition} The populated <code>ClusterDefinition</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ClusterDefinition();

            if (data.hasOwnProperty('blueprint')) {
                obj['blueprint'] = ApiClient.convertToType(data['blueprint'], 'String');
            }
            if (data.hasOwnProperty('componentVersion')) {
                obj['componentVersion'] = ApiClient.convertToType(data['componentVersion'], {'String': 'String'});
            }
            if (data.hasOwnProperty('configurations')) {
                obj['configurations'] = ApiClient.convertToType(data['configurations'], Object);
            }
            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ClusterDefinition</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ClusterDefinition</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['blueprint'] && !(typeof data['blueprint'] === 'string' || data['blueprint'] instanceof String)) {
            throw new Error("Expected the field `blueprint` to be a primitive type in the JSON string but got " + data['blueprint']);
        }
        // ensure the json data is a string
        if (data['kind'] && !(typeof data['kind'] === 'string' || data['kind'] instanceof String)) {
            throw new Error("Expected the field `kind` to be a primitive type in the JSON string but got " + data['kind']);
        }

        return true;
    }


}



/**
 * The link to the blueprint.
 * @member {String} blueprint
 */
ClusterDefinition.prototype['blueprint'] = undefined;

/**
 * The versions of different services in the cluster.
 * @member {Object.<String, String>} componentVersion
 */
ClusterDefinition.prototype['componentVersion'] = undefined;

/**
 * The cluster configurations.
 * @member {Object} configurations
 */
ClusterDefinition.prototype['configurations'] = undefined;

/**
 * The type of cluster.
 * @member {String} kind
 */
ClusterDefinition.prototype['kind'] = undefined;






export default ClusterDefinition;

