/**
 * HDInsightManagementClient
 * The HDInsight Management Client.
 *
 * The version of the OpenAPI document: 2015-03-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DiskEncryptionProperties model module.
 * @module model/DiskEncryptionProperties
 * @version 2015-03-01-preview
 */
class DiskEncryptionProperties {
    /**
     * Constructs a new <code>DiskEncryptionProperties</code>.
     * The disk encryption properties
     * @alias module:model/DiskEncryptionProperties
     */
    constructor() { 
        
        DiskEncryptionProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DiskEncryptionProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DiskEncryptionProperties} obj Optional instance to populate.
     * @return {module:model/DiskEncryptionProperties} The populated <code>DiskEncryptionProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DiskEncryptionProperties();

            if (data.hasOwnProperty('encryptionAlgorithm')) {
                obj['encryptionAlgorithm'] = ApiClient.convertToType(data['encryptionAlgorithm'], 'String');
            }
            if (data.hasOwnProperty('keyName')) {
                obj['keyName'] = ApiClient.convertToType(data['keyName'], 'String');
            }
            if (data.hasOwnProperty('keyVersion')) {
                obj['keyVersion'] = ApiClient.convertToType(data['keyVersion'], 'String');
            }
            if (data.hasOwnProperty('msiResourceId')) {
                obj['msiResourceId'] = ApiClient.convertToType(data['msiResourceId'], 'String');
            }
            if (data.hasOwnProperty('vaultUri')) {
                obj['vaultUri'] = ApiClient.convertToType(data['vaultUri'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DiskEncryptionProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DiskEncryptionProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['encryptionAlgorithm'] && !(typeof data['encryptionAlgorithm'] === 'string' || data['encryptionAlgorithm'] instanceof String)) {
            throw new Error("Expected the field `encryptionAlgorithm` to be a primitive type in the JSON string but got " + data['encryptionAlgorithm']);
        }
        // ensure the json data is a string
        if (data['keyName'] && !(typeof data['keyName'] === 'string' || data['keyName'] instanceof String)) {
            throw new Error("Expected the field `keyName` to be a primitive type in the JSON string but got " + data['keyName']);
        }
        // ensure the json data is a string
        if (data['keyVersion'] && !(typeof data['keyVersion'] === 'string' || data['keyVersion'] instanceof String)) {
            throw new Error("Expected the field `keyVersion` to be a primitive type in the JSON string but got " + data['keyVersion']);
        }
        // ensure the json data is a string
        if (data['msiResourceId'] && !(typeof data['msiResourceId'] === 'string' || data['msiResourceId'] instanceof String)) {
            throw new Error("Expected the field `msiResourceId` to be a primitive type in the JSON string but got " + data['msiResourceId']);
        }
        // ensure the json data is a string
        if (data['vaultUri'] && !(typeof data['vaultUri'] === 'string' || data['vaultUri'] instanceof String)) {
            throw new Error("Expected the field `vaultUri` to be a primitive type in the JSON string but got " + data['vaultUri']);
        }

        return true;
    }


}



/**
 * Algorithm identifier for encryption, default RSA-OAEP.
 * @member {module:model/DiskEncryptionProperties.EncryptionAlgorithmEnum} encryptionAlgorithm
 */
DiskEncryptionProperties.prototype['encryptionAlgorithm'] = undefined;

/**
 * Key name that is used for enabling disk encryption.
 * @member {String} keyName
 */
DiskEncryptionProperties.prototype['keyName'] = undefined;

/**
 * Specific key version that is used for enabling disk encryption.
 * @member {String} keyVersion
 */
DiskEncryptionProperties.prototype['keyVersion'] = undefined;

/**
 * Resource ID of Managed Identity that is used to access the key vault.
 * @member {String} msiResourceId
 */
DiskEncryptionProperties.prototype['msiResourceId'] = undefined;

/**
 * Base key vault URI where the customers key is located eg. https://myvault.vault.azure.net
 * @member {String} vaultUri
 */
DiskEncryptionProperties.prototype['vaultUri'] = undefined;





/**
 * Allowed values for the <code>encryptionAlgorithm</code> property.
 * @enum {String}
 * @readonly
 */
DiskEncryptionProperties['EncryptionAlgorithmEnum'] = {

    /**
     * value: "RSA-OAEP"
     * @const
     */
    "RSA-OAEP": "RSA-OAEP",

    /**
     * value: "RSA-OAEP-256"
     * @const
     */
    "RSA-OAEP-256": "RSA-OAEP-256",

    /**
     * value: "RSA1_5"
     * @const
     */
    "RSA1_5": "RSA1_5"
};



export default DiskEncryptionProperties;

