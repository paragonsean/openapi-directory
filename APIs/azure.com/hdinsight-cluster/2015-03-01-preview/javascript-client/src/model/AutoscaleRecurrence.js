/**
 * HDInsightManagementClient
 * The HDInsight Management Client.
 *
 * The version of the OpenAPI document: 2015-03-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AutoscaleSchedule from './AutoscaleSchedule';

/**
 * The AutoscaleRecurrence model module.
 * @module model/AutoscaleRecurrence
 * @version 2015-03-01-preview
 */
class AutoscaleRecurrence {
    /**
     * Constructs a new <code>AutoscaleRecurrence</code>.
     * Schedule-based autoscale request parameters
     * @alias module:model/AutoscaleRecurrence
     */
    constructor() { 
        
        AutoscaleRecurrence.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AutoscaleRecurrence</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AutoscaleRecurrence} obj Optional instance to populate.
     * @return {module:model/AutoscaleRecurrence} The populated <code>AutoscaleRecurrence</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AutoscaleRecurrence();

            if (data.hasOwnProperty('schedule')) {
                obj['schedule'] = ApiClient.convertToType(data['schedule'], [AutoscaleSchedule]);
            }
            if (data.hasOwnProperty('timeZone')) {
                obj['timeZone'] = ApiClient.convertToType(data['timeZone'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AutoscaleRecurrence</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AutoscaleRecurrence</code>.
     */
    static validateJSON(data) {
        if (data['schedule']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['schedule'])) {
                throw new Error("Expected the field `schedule` to be an array in the JSON data but got " + data['schedule']);
            }
            // validate the optional field `schedule` (array)
            for (const item of data['schedule']) {
                AutoscaleSchedule.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['timeZone'] && !(typeof data['timeZone'] === 'string' || data['timeZone'] instanceof String)) {
            throw new Error("Expected the field `timeZone` to be a primitive type in the JSON string but got " + data['timeZone']);
        }

        return true;
    }


}



/**
 * Array of schedule-based autoscale rules
 * @member {Array.<module:model/AutoscaleSchedule>} schedule
 */
AutoscaleRecurrence.prototype['schedule'] = undefined;

/**
 * The time zone for the autoscale schedule times
 * @member {String} timeZone
 */
AutoscaleRecurrence.prototype['timeZone'] = undefined;






export default AutoscaleRecurrence;

