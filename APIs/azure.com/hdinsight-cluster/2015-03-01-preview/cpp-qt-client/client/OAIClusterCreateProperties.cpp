/**
 * HDInsightManagementClient
 * The HDInsight Management Client.
 *
 * The version of the OpenAPI document: 2015-03-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIClusterCreateProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIClusterCreateProperties::OAIClusterCreateProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIClusterCreateProperties::OAIClusterCreateProperties() {
    this->initializeModel();
}

OAIClusterCreateProperties::~OAIClusterCreateProperties() {}

void OAIClusterCreateProperties::initializeModel() {

    m_cluster_definition_isSet = false;
    m_cluster_definition_isValid = false;

    m_cluster_version_isSet = false;
    m_cluster_version_isValid = false;

    m_compute_profile_isSet = false;
    m_compute_profile_isValid = false;

    m_disk_encryption_properties_isSet = false;
    m_disk_encryption_properties_isValid = false;

    m_kafka_rest_properties_isSet = false;
    m_kafka_rest_properties_isValid = false;

    m_os_type_isSet = false;
    m_os_type_isValid = false;

    m_security_profile_isSet = false;
    m_security_profile_isValid = false;

    m_storage_profile_isSet = false;
    m_storage_profile_isValid = false;

    m_tier_isSet = false;
    m_tier_isValid = false;
}

void OAIClusterCreateProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIClusterCreateProperties::fromJsonObject(QJsonObject json) {

    m_cluster_definition_isValid = ::OpenAPI::fromJsonValue(m_cluster_definition, json[QString("clusterDefinition")]);
    m_cluster_definition_isSet = !json[QString("clusterDefinition")].isNull() && m_cluster_definition_isValid;

    m_cluster_version_isValid = ::OpenAPI::fromJsonValue(m_cluster_version, json[QString("clusterVersion")]);
    m_cluster_version_isSet = !json[QString("clusterVersion")].isNull() && m_cluster_version_isValid;

    m_compute_profile_isValid = ::OpenAPI::fromJsonValue(m_compute_profile, json[QString("computeProfile")]);
    m_compute_profile_isSet = !json[QString("computeProfile")].isNull() && m_compute_profile_isValid;

    m_disk_encryption_properties_isValid = ::OpenAPI::fromJsonValue(m_disk_encryption_properties, json[QString("diskEncryptionProperties")]);
    m_disk_encryption_properties_isSet = !json[QString("diskEncryptionProperties")].isNull() && m_disk_encryption_properties_isValid;

    m_kafka_rest_properties_isValid = ::OpenAPI::fromJsonValue(m_kafka_rest_properties, json[QString("kafkaRestProperties")]);
    m_kafka_rest_properties_isSet = !json[QString("kafkaRestProperties")].isNull() && m_kafka_rest_properties_isValid;

    m_os_type_isValid = ::OpenAPI::fromJsonValue(m_os_type, json[QString("osType")]);
    m_os_type_isSet = !json[QString("osType")].isNull() && m_os_type_isValid;

    m_security_profile_isValid = ::OpenAPI::fromJsonValue(m_security_profile, json[QString("securityProfile")]);
    m_security_profile_isSet = !json[QString("securityProfile")].isNull() && m_security_profile_isValid;

    m_storage_profile_isValid = ::OpenAPI::fromJsonValue(m_storage_profile, json[QString("storageProfile")]);
    m_storage_profile_isSet = !json[QString("storageProfile")].isNull() && m_storage_profile_isValid;

    m_tier_isValid = ::OpenAPI::fromJsonValue(m_tier, json[QString("tier")]);
    m_tier_isSet = !json[QString("tier")].isNull() && m_tier_isValid;
}

QString OAIClusterCreateProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIClusterCreateProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_cluster_definition.isSet()) {
        obj.insert(QString("clusterDefinition"), ::OpenAPI::toJsonValue(m_cluster_definition));
    }
    if (m_cluster_version_isSet) {
        obj.insert(QString("clusterVersion"), ::OpenAPI::toJsonValue(m_cluster_version));
    }
    if (m_compute_profile.isSet()) {
        obj.insert(QString("computeProfile"), ::OpenAPI::toJsonValue(m_compute_profile));
    }
    if (m_disk_encryption_properties.isSet()) {
        obj.insert(QString("diskEncryptionProperties"), ::OpenAPI::toJsonValue(m_disk_encryption_properties));
    }
    if (m_kafka_rest_properties.isSet()) {
        obj.insert(QString("kafkaRestProperties"), ::OpenAPI::toJsonValue(m_kafka_rest_properties));
    }
    if (m_os_type_isSet) {
        obj.insert(QString("osType"), ::OpenAPI::toJsonValue(m_os_type));
    }
    if (m_security_profile.isSet()) {
        obj.insert(QString("securityProfile"), ::OpenAPI::toJsonValue(m_security_profile));
    }
    if (m_storage_profile.isSet()) {
        obj.insert(QString("storageProfile"), ::OpenAPI::toJsonValue(m_storage_profile));
    }
    if (m_tier_isSet) {
        obj.insert(QString("tier"), ::OpenAPI::toJsonValue(m_tier));
    }
    return obj;
}

OAIClusterDefinition OAIClusterCreateProperties::getClusterDefinition() const {
    return m_cluster_definition;
}
void OAIClusterCreateProperties::setClusterDefinition(const OAIClusterDefinition &cluster_definition) {
    m_cluster_definition = cluster_definition;
    m_cluster_definition_isSet = true;
}

bool OAIClusterCreateProperties::is_cluster_definition_Set() const{
    return m_cluster_definition_isSet;
}

bool OAIClusterCreateProperties::is_cluster_definition_Valid() const{
    return m_cluster_definition_isValid;
}

QString OAIClusterCreateProperties::getClusterVersion() const {
    return m_cluster_version;
}
void OAIClusterCreateProperties::setClusterVersion(const QString &cluster_version) {
    m_cluster_version = cluster_version;
    m_cluster_version_isSet = true;
}

bool OAIClusterCreateProperties::is_cluster_version_Set() const{
    return m_cluster_version_isSet;
}

bool OAIClusterCreateProperties::is_cluster_version_Valid() const{
    return m_cluster_version_isValid;
}

OAIComputeProfile OAIClusterCreateProperties::getComputeProfile() const {
    return m_compute_profile;
}
void OAIClusterCreateProperties::setComputeProfile(const OAIComputeProfile &compute_profile) {
    m_compute_profile = compute_profile;
    m_compute_profile_isSet = true;
}

bool OAIClusterCreateProperties::is_compute_profile_Set() const{
    return m_compute_profile_isSet;
}

bool OAIClusterCreateProperties::is_compute_profile_Valid() const{
    return m_compute_profile_isValid;
}

OAIDiskEncryptionProperties OAIClusterCreateProperties::getDiskEncryptionProperties() const {
    return m_disk_encryption_properties;
}
void OAIClusterCreateProperties::setDiskEncryptionProperties(const OAIDiskEncryptionProperties &disk_encryption_properties) {
    m_disk_encryption_properties = disk_encryption_properties;
    m_disk_encryption_properties_isSet = true;
}

bool OAIClusterCreateProperties::is_disk_encryption_properties_Set() const{
    return m_disk_encryption_properties_isSet;
}

bool OAIClusterCreateProperties::is_disk_encryption_properties_Valid() const{
    return m_disk_encryption_properties_isValid;
}

OAIKafkaRestProperties OAIClusterCreateProperties::getKafkaRestProperties() const {
    return m_kafka_rest_properties;
}
void OAIClusterCreateProperties::setKafkaRestProperties(const OAIKafkaRestProperties &kafka_rest_properties) {
    m_kafka_rest_properties = kafka_rest_properties;
    m_kafka_rest_properties_isSet = true;
}

bool OAIClusterCreateProperties::is_kafka_rest_properties_Set() const{
    return m_kafka_rest_properties_isSet;
}

bool OAIClusterCreateProperties::is_kafka_rest_properties_Valid() const{
    return m_kafka_rest_properties_isValid;
}

QString OAIClusterCreateProperties::getOsType() const {
    return m_os_type;
}
void OAIClusterCreateProperties::setOsType(const QString &os_type) {
    m_os_type = os_type;
    m_os_type_isSet = true;
}

bool OAIClusterCreateProperties::is_os_type_Set() const{
    return m_os_type_isSet;
}

bool OAIClusterCreateProperties::is_os_type_Valid() const{
    return m_os_type_isValid;
}

OAISecurityProfile OAIClusterCreateProperties::getSecurityProfile() const {
    return m_security_profile;
}
void OAIClusterCreateProperties::setSecurityProfile(const OAISecurityProfile &security_profile) {
    m_security_profile = security_profile;
    m_security_profile_isSet = true;
}

bool OAIClusterCreateProperties::is_security_profile_Set() const{
    return m_security_profile_isSet;
}

bool OAIClusterCreateProperties::is_security_profile_Valid() const{
    return m_security_profile_isValid;
}

OAIStorageProfile OAIClusterCreateProperties::getStorageProfile() const {
    return m_storage_profile;
}
void OAIClusterCreateProperties::setStorageProfile(const OAIStorageProfile &storage_profile) {
    m_storage_profile = storage_profile;
    m_storage_profile_isSet = true;
}

bool OAIClusterCreateProperties::is_storage_profile_Set() const{
    return m_storage_profile_isSet;
}

bool OAIClusterCreateProperties::is_storage_profile_Valid() const{
    return m_storage_profile_isValid;
}

QString OAIClusterCreateProperties::getTier() const {
    return m_tier;
}
void OAIClusterCreateProperties::setTier(const QString &tier) {
    m_tier = tier;
    m_tier_isSet = true;
}

bool OAIClusterCreateProperties::is_tier_Set() const{
    return m_tier_isSet;
}

bool OAIClusterCreateProperties::is_tier_Valid() const{
    return m_tier_isValid;
}

bool OAIClusterCreateProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cluster_definition.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_cluster_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_compute_profile.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_disk_encryption_properties.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_kafka_rest_properties.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_os_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_security_profile.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_storage_profile.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_tier_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIClusterCreateProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
