/**
 * DeploymentAdminClient
 * Deployment Admin Client.
 *
 * The version of the OpenAPI document: 2019-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import FileContainer from '../model/FileContainer';
import FileContainerParameters from '../model/FileContainerParameters';
import FileContainersList from '../model/FileContainersList';

/**
* FileContainers service.
* @module api/FileContainersApi
* @version 2019-01-01
*/
export default class FileContainersApi {

    /**
    * Constructs a new FileContainersApi. 
    * @alias module:api/FileContainersApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the fileContainersCreate operation.
     * @callback module:api/FileContainersApi~fileContainersCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/FileContainer} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a new file container.
     * @param {String} subscriptionId Subscription credentials that uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} apiVersion Client API Version.
     * @param {String} fileContainerId The file container identifier.
     * @param {module:model/FileContainerParameters} fileContainerParameters The parameters required to create a new file container.
     * @param {module:api/FileContainersApi~fileContainersCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/FileContainer}
     */
    fileContainersCreate(subscriptionId, apiVersion, fileContainerId, fileContainerParameters, callback) {
      let postBody = fileContainerParameters;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling fileContainersCreate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling fileContainersCreate");
      }
      // verify the required parameter 'fileContainerId' is set
      if (fileContainerId === undefined || fileContainerId === null) {
        throw new Error("Missing the required parameter 'fileContainerId' when calling fileContainersCreate");
      }
      // verify the required parameter 'fileContainerParameters' is set
      if (fileContainerParameters === undefined || fileContainerParameters === null) {
        throw new Error("Missing the required parameter 'fileContainerParameters' when calling fileContainersCreate");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'fileContainerId': fileContainerId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = FileContainer;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.Deployment.Admin/locations/global/fileContainers/{fileContainerId}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the fileContainersDelete operation.
     * @callback module:api/FileContainersApi~fileContainersDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes specified file container.
     * Delete an existing file container.
     * @param {String} subscriptionId Subscription credentials that uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} fileContainerId The file container identifier.
     * @param {String} apiVersion Client API Version.
     * @param {module:api/FileContainersApi~fileContainersDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    fileContainersDelete(subscriptionId, fileContainerId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling fileContainersDelete");
      }
      // verify the required parameter 'fileContainerId' is set
      if (fileContainerId === undefined || fileContainerId === null) {
        throw new Error("Missing the required parameter 'fileContainerId' when calling fileContainersDelete");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling fileContainersDelete");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'fileContainerId': fileContainerId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.Deployment.Admin/locations/global/fileContainers/{fileContainerId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the fileContainersGet operation.
     * @callback module:api/FileContainersApi~fileContainersGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/FileContainer} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves the specific file container details.
     * @param {String} subscriptionId Subscription credentials that uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} fileContainerId The file container identifier.
     * @param {String} apiVersion Client API Version.
     * @param {module:api/FileContainersApi~fileContainersGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/FileContainer}
     */
    fileContainersGet(subscriptionId, fileContainerId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling fileContainersGet");
      }
      // verify the required parameter 'fileContainerId' is set
      if (fileContainerId === undefined || fileContainerId === null) {
        throw new Error("Missing the required parameter 'fileContainerId' when calling fileContainersGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling fileContainersGet");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'fileContainerId': fileContainerId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = FileContainer;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.Deployment.Admin/locations/global/fileContainers/{fileContainerId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the fileContainersList operation.
     * @callback module:api/FileContainersApi~fileContainersListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/FileContainersList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns an array of file containers.
     * @param {String} subscriptionId Subscription credentials that uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} apiVersion Client API Version.
     * @param {module:api/FileContainersApi~fileContainersListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/FileContainersList}
     */
    fileContainersList(subscriptionId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling fileContainersList");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling fileContainersList");
      }

      let pathParams = {
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = FileContainersList;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.Deployment.Admin/locations/global/fileContainers', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
