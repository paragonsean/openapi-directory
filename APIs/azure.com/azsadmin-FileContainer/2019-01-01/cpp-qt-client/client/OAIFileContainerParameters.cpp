/**
 * DeploymentAdminClient
 * Deployment Admin Client.
 *
 * The version of the OpenAPI document: 2019-01-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFileContainerParameters.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFileContainerParameters::OAIFileContainerParameters(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFileContainerParameters::OAIFileContainerParameters() {
    this->initializeModel();
}

OAIFileContainerParameters::~OAIFileContainerParameters() {}

void OAIFileContainerParameters::initializeModel() {

    m_post_copy_action_isSet = false;
    m_post_copy_action_isValid = false;

    m_source_uri_isSet = false;
    m_source_uri_isValid = false;
}

void OAIFileContainerParameters::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFileContainerParameters::fromJsonObject(QJsonObject json) {

    m_post_copy_action_isValid = ::OpenAPI::fromJsonValue(m_post_copy_action, json[QString("postCopyAction")]);
    m_post_copy_action_isSet = !json[QString("postCopyAction")].isNull() && m_post_copy_action_isValid;

    m_source_uri_isValid = ::OpenAPI::fromJsonValue(m_source_uri, json[QString("sourceUri")]);
    m_source_uri_isSet = !json[QString("sourceUri")].isNull() && m_source_uri_isValid;
}

QString OAIFileContainerParameters::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFileContainerParameters::asJsonObject() const {
    QJsonObject obj;
    if (m_post_copy_action.isSet()) {
        obj.insert(QString("postCopyAction"), ::OpenAPI::toJsonValue(m_post_copy_action));
    }
    if (m_source_uri_isSet) {
        obj.insert(QString("sourceUri"), ::OpenAPI::toJsonValue(m_source_uri));
    }
    return obj;
}

OAIPostCopyAction OAIFileContainerParameters::getPostCopyAction() const {
    return m_post_copy_action;
}
void OAIFileContainerParameters::setPostCopyAction(const OAIPostCopyAction &post_copy_action) {
    m_post_copy_action = post_copy_action;
    m_post_copy_action_isSet = true;
}

bool OAIFileContainerParameters::is_post_copy_action_Set() const{
    return m_post_copy_action_isSet;
}

bool OAIFileContainerParameters::is_post_copy_action_Valid() const{
    return m_post_copy_action_isValid;
}

QString OAIFileContainerParameters::getSourceUri() const {
    return m_source_uri;
}
void OAIFileContainerParameters::setSourceUri(const QString &source_uri) {
    m_source_uri = source_uri;
    m_source_uri_isSet = true;
}

bool OAIFileContainerParameters::is_source_uri_Set() const{
    return m_source_uri_isSet;
}

bool OAIFileContainerParameters::is_source_uri_Valid() const{
    return m_source_uri_isValid;
}

bool OAIFileContainerParameters::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_post_copy_action.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_source_uri_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFileContainerParameters::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
