# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.error_info import ErrorInfo
from openapi_server.models.post_copy_action import PostCopyAction
from openapi_server import util


class FileContainerAdminProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, error: ErrorInfo=None, file_container_id: str=None, post_copy_action: PostCopyAction=None, provisioning_state: str=None, source_uri: str=None, uri: str=None):
        """FileContainerAdminProperties - a model defined in OpenAPI

        :param error: The error of this FileContainerAdminProperties.
        :param file_container_id: The file_container_id of this FileContainerAdminProperties.
        :param post_copy_action: The post_copy_action of this FileContainerAdminProperties.
        :param provisioning_state: The provisioning_state of this FileContainerAdminProperties.
        :param source_uri: The source_uri of this FileContainerAdminProperties.
        :param uri: The uri of this FileContainerAdminProperties.
        """
        self.openapi_types = {
            'error': ErrorInfo,
            'file_container_id': str,
            'post_copy_action': PostCopyAction,
            'provisioning_state': str,
            'source_uri': str,
            'uri': str
        }

        self.attribute_map = {
            'error': 'error',
            'file_container_id': 'fileContainerId',
            'post_copy_action': 'postCopyAction',
            'provisioning_state': 'provisioningState',
            'source_uri': 'sourceUri',
            'uri': 'uri'
        }

        self._error = error
        self._file_container_id = file_container_id
        self._post_copy_action = post_copy_action
        self._provisioning_state = provisioning_state
        self._source_uri = source_uri
        self._uri = uri

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FileContainerAdminProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FileContainerAdminProperties of this FileContainerAdminProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def error(self):
        """Gets the error of this FileContainerAdminProperties.


        :return: The error of this FileContainerAdminProperties.
        :rtype: ErrorInfo
        """
        return self._error

    @error.setter
    def error(self, error):
        """Sets the error of this FileContainerAdminProperties.


        :param error: The error of this FileContainerAdminProperties.
        :type error: ErrorInfo
        """

        self._error = error

    @property
    def file_container_id(self):
        """Gets the file_container_id of this FileContainerAdminProperties.

        File container resource identifier containing product manifest.

        :return: The file_container_id of this FileContainerAdminProperties.
        :rtype: str
        """
        return self._file_container_id

    @file_container_id.setter
    def file_container_id(self, file_container_id):
        """Sets the file_container_id of this FileContainerAdminProperties.

        File container resource identifier containing product manifest.

        :param file_container_id: The file_container_id of this FileContainerAdminProperties.
        :type file_container_id: str
        """

        self._file_container_id = file_container_id

    @property
    def post_copy_action(self):
        """Gets the post_copy_action of this FileContainerAdminProperties.


        :return: The post_copy_action of this FileContainerAdminProperties.
        :rtype: PostCopyAction
        """
        return self._post_copy_action

    @post_copy_action.setter
    def post_copy_action(self, post_copy_action):
        """Sets the post_copy_action of this FileContainerAdminProperties.


        :param post_copy_action: The post_copy_action of this FileContainerAdminProperties.
        :type post_copy_action: PostCopyAction
        """

        self._post_copy_action = post_copy_action

    @property
    def provisioning_state(self):
        """Gets the provisioning_state of this FileContainerAdminProperties.

        Provisioning state of the resource.

        :return: The provisioning_state of this FileContainerAdminProperties.
        :rtype: str
        """
        return self._provisioning_state

    @provisioning_state.setter
    def provisioning_state(self, provisioning_state):
        """Sets the provisioning_state of this FileContainerAdminProperties.

        Provisioning state of the resource.

        :param provisioning_state: The provisioning_state of this FileContainerAdminProperties.
        :type provisioning_state: str
        """

        self._provisioning_state = provisioning_state

    @property
    def source_uri(self):
        """Gets the source_uri of this FileContainerAdminProperties.

        Specifies The remote file location.

        :return: The source_uri of this FileContainerAdminProperties.
        :rtype: str
        """
        return self._source_uri

    @source_uri.setter
    def source_uri(self, source_uri):
        """Sets the source_uri of this FileContainerAdminProperties.

        Specifies The remote file location.

        :param source_uri: The source_uri of this FileContainerAdminProperties.
        :type source_uri: str
        """

        self._source_uri = source_uri

    @property
    def uri(self):
        """Gets the uri of this FileContainerAdminProperties.

        The file or container Uri. This is read-only property; a user cannot set it.

        :return: The uri of this FileContainerAdminProperties.
        :rtype: str
        """
        return self._uri

    @uri.setter
    def uri(self, uri):
        """Sets the uri of this FileContainerAdminProperties.

        The file or container Uri. This is read-only property; a user cannot set it.

        :param uri: The uri of this FileContainerAdminProperties.
        :type uri: str
        """

        self._uri = uri
