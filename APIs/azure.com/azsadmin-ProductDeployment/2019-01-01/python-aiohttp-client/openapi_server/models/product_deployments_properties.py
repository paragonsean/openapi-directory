# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.deployment_info import DeploymentInfo
from openapi_server.models.deployment_status import DeploymentStatus
from openapi_server.models.external_access_info import ExternalAccessInfo
from openapi_server.models.product_deployments_internal_state import ProductDeploymentsInternalState
from openapi_server.models.product_deployments_properties_error import ProductDeploymentsPropertiesError
from openapi_server.models.secret_rotation_info import SecretRotationInfo
from openapi_server import util


class ProductDeploymentsProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, deployment: DeploymentInfo=None, error: ProductDeploymentsPropertiesError=None, external_access: ExternalAccessInfo=None, internal_state: ProductDeploymentsInternalState=None, last_successful_deployment: DeploymentInfo=None, product_id: str=None, provisioning_state: str=None, secret_rotation: SecretRotationInfo=None, status: DeploymentStatus=None, subscription_id: str=None):
        """ProductDeploymentsProperties - a model defined in OpenAPI

        :param deployment: The deployment of this ProductDeploymentsProperties.
        :param error: The error of this ProductDeploymentsProperties.
        :param external_access: The external_access of this ProductDeploymentsProperties.
        :param internal_state: The internal_state of this ProductDeploymentsProperties.
        :param last_successful_deployment: The last_successful_deployment of this ProductDeploymentsProperties.
        :param product_id: The product_id of this ProductDeploymentsProperties.
        :param provisioning_state: The provisioning_state of this ProductDeploymentsProperties.
        :param secret_rotation: The secret_rotation of this ProductDeploymentsProperties.
        :param status: The status of this ProductDeploymentsProperties.
        :param subscription_id: The subscription_id of this ProductDeploymentsProperties.
        """
        self.openapi_types = {
            'deployment': DeploymentInfo,
            'error': ProductDeploymentsPropertiesError,
            'external_access': ExternalAccessInfo,
            'internal_state': ProductDeploymentsInternalState,
            'last_successful_deployment': DeploymentInfo,
            'product_id': str,
            'provisioning_state': str,
            'secret_rotation': SecretRotationInfo,
            'status': DeploymentStatus,
            'subscription_id': str
        }

        self.attribute_map = {
            'deployment': 'deployment',
            'error': 'error',
            'external_access': 'externalAccess',
            'internal_state': 'internalState',
            'last_successful_deployment': 'lastSuccessfulDeployment',
            'product_id': 'productId',
            'provisioning_state': 'provisioningState',
            'secret_rotation': 'secretRotation',
            'status': 'status',
            'subscription_id': 'subscriptionId'
        }

        self._deployment = deployment
        self._error = error
        self._external_access = external_access
        self._internal_state = internal_state
        self._last_successful_deployment = last_successful_deployment
        self._product_id = product_id
        self._provisioning_state = provisioning_state
        self._secret_rotation = secret_rotation
        self._status = status
        self._subscription_id = subscription_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProductDeploymentsProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProductDeploymentsProperties of this ProductDeploymentsProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def deployment(self):
        """Gets the deployment of this ProductDeploymentsProperties.


        :return: The deployment of this ProductDeploymentsProperties.
        :rtype: DeploymentInfo
        """
        return self._deployment

    @deployment.setter
    def deployment(self, deployment):
        """Sets the deployment of this ProductDeploymentsProperties.


        :param deployment: The deployment of this ProductDeploymentsProperties.
        :type deployment: DeploymentInfo
        """

        self._deployment = deployment

    @property
    def error(self):
        """Gets the error of this ProductDeploymentsProperties.


        :return: The error of this ProductDeploymentsProperties.
        :rtype: ProductDeploymentsPropertiesError
        """
        return self._error

    @error.setter
    def error(self, error):
        """Sets the error of this ProductDeploymentsProperties.


        :param error: The error of this ProductDeploymentsProperties.
        :type error: ProductDeploymentsPropertiesError
        """

        self._error = error

    @property
    def external_access(self):
        """Gets the external_access of this ProductDeploymentsProperties.


        :return: The external_access of this ProductDeploymentsProperties.
        :rtype: ExternalAccessInfo
        """
        return self._external_access

    @external_access.setter
    def external_access(self, external_access):
        """Sets the external_access of this ProductDeploymentsProperties.


        :param external_access: The external_access of this ProductDeploymentsProperties.
        :type external_access: ExternalAccessInfo
        """

        self._external_access = external_access

    @property
    def internal_state(self):
        """Gets the internal_state of this ProductDeploymentsProperties.


        :return: The internal_state of this ProductDeploymentsProperties.
        :rtype: ProductDeploymentsInternalState
        """
        return self._internal_state

    @internal_state.setter
    def internal_state(self, internal_state):
        """Sets the internal_state of this ProductDeploymentsProperties.


        :param internal_state: The internal_state of this ProductDeploymentsProperties.
        :type internal_state: ProductDeploymentsInternalState
        """

        self._internal_state = internal_state

    @property
    def last_successful_deployment(self):
        """Gets the last_successful_deployment of this ProductDeploymentsProperties.


        :return: The last_successful_deployment of this ProductDeploymentsProperties.
        :rtype: DeploymentInfo
        """
        return self._last_successful_deployment

    @last_successful_deployment.setter
    def last_successful_deployment(self, last_successful_deployment):
        """Sets the last_successful_deployment of this ProductDeploymentsProperties.


        :param last_successful_deployment: The last_successful_deployment of this ProductDeploymentsProperties.
        :type last_successful_deployment: DeploymentInfo
        """

        self._last_successful_deployment = last_successful_deployment

    @property
    def product_id(self):
        """Gets the product_id of this ProductDeploymentsProperties.

        The product identifier

        :return: The product_id of this ProductDeploymentsProperties.
        :rtype: str
        """
        return self._product_id

    @product_id.setter
    def product_id(self, product_id):
        """Sets the product_id of this ProductDeploymentsProperties.

        The product identifier

        :param product_id: The product_id of this ProductDeploymentsProperties.
        :type product_id: str
        """

        self._product_id = product_id

    @property
    def provisioning_state(self):
        """Gets the provisioning_state of this ProductDeploymentsProperties.

        The provisioning state

        :return: The provisioning_state of this ProductDeploymentsProperties.
        :rtype: str
        """
        return self._provisioning_state

    @provisioning_state.setter
    def provisioning_state(self, provisioning_state):
        """Sets the provisioning_state of this ProductDeploymentsProperties.

        The provisioning state

        :param provisioning_state: The provisioning_state of this ProductDeploymentsProperties.
        :type provisioning_state: str
        """

        self._provisioning_state = provisioning_state

    @property
    def secret_rotation(self):
        """Gets the secret_rotation of this ProductDeploymentsProperties.


        :return: The secret_rotation of this ProductDeploymentsProperties.
        :rtype: SecretRotationInfo
        """
        return self._secret_rotation

    @secret_rotation.setter
    def secret_rotation(self, secret_rotation):
        """Sets the secret_rotation of this ProductDeploymentsProperties.


        :param secret_rotation: The secret_rotation of this ProductDeploymentsProperties.
        :type secret_rotation: SecretRotationInfo
        """

        self._secret_rotation = secret_rotation

    @property
    def status(self):
        """Gets the status of this ProductDeploymentsProperties.


        :return: The status of this ProductDeploymentsProperties.
        :rtype: DeploymentStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this ProductDeploymentsProperties.


        :param status: The status of this ProductDeploymentsProperties.
        :type status: DeploymentStatus
        """

        self._status = status

    @property
    def subscription_id(self):
        """Gets the subscription_id of this ProductDeploymentsProperties.

        The product subscription identifier

        :return: The subscription_id of this ProductDeploymentsProperties.
        :rtype: str
        """
        return self._subscription_id

    @subscription_id.setter
    def subscription_id(self, subscription_id):
        """Sets the subscription_id of this ProductDeploymentsProperties.

        The product subscription identifier

        :param subscription_id: The subscription_id of this ProductDeploymentsProperties.
        :type subscription_id: str
        """

        self._subscription_id = subscription_id
