# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ProductDeploymentsInternalState(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, external_access_role_assignment_id: str=None, intermediate_vault_id: str=None, intermediate_vault_uri: str=None, job_id: str=None):
        """ProductDeploymentsInternalState - a model defined in OpenAPI

        :param external_access_role_assignment_id: The external_access_role_assignment_id of this ProductDeploymentsInternalState.
        :param intermediate_vault_id: The intermediate_vault_id of this ProductDeploymentsInternalState.
        :param intermediate_vault_uri: The intermediate_vault_uri of this ProductDeploymentsInternalState.
        :param job_id: The job_id of this ProductDeploymentsInternalState.
        """
        self.openapi_types = {
            'external_access_role_assignment_id': str,
            'intermediate_vault_id': str,
            'intermediate_vault_uri': str,
            'job_id': str
        }

        self.attribute_map = {
            'external_access_role_assignment_id': 'externalAccessRoleAssignmentId',
            'intermediate_vault_id': 'intermediateVaultId',
            'intermediate_vault_uri': 'intermediateVaultUri',
            'job_id': 'jobId'
        }

        self._external_access_role_assignment_id = external_access_role_assignment_id
        self._intermediate_vault_id = intermediate_vault_id
        self._intermediate_vault_uri = intermediate_vault_uri
        self._job_id = job_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProductDeploymentsInternalState':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProductDeploymentsInternalState of this ProductDeploymentsInternalState.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def external_access_role_assignment_id(self):
        """Gets the external_access_role_assignment_id of this ProductDeploymentsInternalState.

        The current external access role assignment identifier

        :return: The external_access_role_assignment_id of this ProductDeploymentsInternalState.
        :rtype: str
        """
        return self._external_access_role_assignment_id

    @external_access_role_assignment_id.setter
    def external_access_role_assignment_id(self, external_access_role_assignment_id):
        """Sets the external_access_role_assignment_id of this ProductDeploymentsInternalState.

        The current external access role assignment identifier

        :param external_access_role_assignment_id: The external_access_role_assignment_id of this ProductDeploymentsInternalState.
        :type external_access_role_assignment_id: str
        """

        self._external_access_role_assignment_id = external_access_role_assignment_id

    @property
    def intermediate_vault_id(self):
        """Gets the intermediate_vault_id of this ProductDeploymentsInternalState.

        The intermediate vault resource identifier

        :return: The intermediate_vault_id of this ProductDeploymentsInternalState.
        :rtype: str
        """
        return self._intermediate_vault_id

    @intermediate_vault_id.setter
    def intermediate_vault_id(self, intermediate_vault_id):
        """Sets the intermediate_vault_id of this ProductDeploymentsInternalState.

        The intermediate vault resource identifier

        :param intermediate_vault_id: The intermediate_vault_id of this ProductDeploymentsInternalState.
        :type intermediate_vault_id: str
        """

        self._intermediate_vault_id = intermediate_vault_id

    @property
    def intermediate_vault_uri(self):
        """Gets the intermediate_vault_uri of this ProductDeploymentsInternalState.

        The intermediate vault Uri.

        :return: The intermediate_vault_uri of this ProductDeploymentsInternalState.
        :rtype: str
        """
        return self._intermediate_vault_uri

    @intermediate_vault_uri.setter
    def intermediate_vault_uri(self, intermediate_vault_uri):
        """Sets the intermediate_vault_uri of this ProductDeploymentsInternalState.

        The intermediate vault Uri.

        :param intermediate_vault_uri: The intermediate_vault_uri of this ProductDeploymentsInternalState.
        :type intermediate_vault_uri: str
        """

        self._intermediate_vault_uri = intermediate_vault_uri

    @property
    def job_id(self):
        """Gets the job_id of this ProductDeploymentsInternalState.

        The latest deployment job identifier

        :return: The job_id of this ProductDeploymentsInternalState.
        :rtype: str
        """
        return self._job_id

    @job_id.setter
    def job_id(self, job_id):
        """Sets the job_id of this ProductDeploymentsInternalState.

        The latest deployment job identifier

        :param job_id: The job_id of this ProductDeploymentsInternalState.
        :type job_id: str
        """

        self._job_id = job_id
