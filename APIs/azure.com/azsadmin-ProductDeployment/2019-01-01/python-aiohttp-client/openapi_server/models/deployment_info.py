# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DeploymentInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, action_plan_instance_resource_id: str=None, e_tag: str=None, parameters: str=None, version: str=None):
        """DeploymentInfo - a model defined in OpenAPI

        :param action_plan_instance_resource_id: The action_plan_instance_resource_id of this DeploymentInfo.
        :param e_tag: The e_tag of this DeploymentInfo.
        :param parameters: The parameters of this DeploymentInfo.
        :param version: The version of this DeploymentInfo.
        """
        self.openapi_types = {
            'action_plan_instance_resource_id': str,
            'e_tag': str,
            'parameters': str,
            'version': str
        }

        self.attribute_map = {
            'action_plan_instance_resource_id': 'actionPlanInstanceResourceId',
            'e_tag': 'eTag',
            'parameters': 'parameters',
            'version': 'version'
        }

        self._action_plan_instance_resource_id = action_plan_instance_resource_id
        self._e_tag = e_tag
        self._parameters = parameters
        self._version = version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeploymentInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeploymentInfo of this DeploymentInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def action_plan_instance_resource_id(self):
        """Gets the action_plan_instance_resource_id of this DeploymentInfo.

        The identifier of the latest action plan instance resource.

        :return: The action_plan_instance_resource_id of this DeploymentInfo.
        :rtype: str
        """
        return self._action_plan_instance_resource_id

    @action_plan_instance_resource_id.setter
    def action_plan_instance_resource_id(self, action_plan_instance_resource_id):
        """Sets the action_plan_instance_resource_id of this DeploymentInfo.

        The identifier of the latest action plan instance resource.

        :param action_plan_instance_resource_id: The action_plan_instance_resource_id of this DeploymentInfo.
        :type action_plan_instance_resource_id: str
        """

        self._action_plan_instance_resource_id = action_plan_instance_resource_id

    @property
    def e_tag(self):
        """Gets the e_tag of this DeploymentInfo.

        entity tag

        :return: The e_tag of this DeploymentInfo.
        :rtype: str
        """
        return self._e_tag

    @e_tag.setter
    def e_tag(self, e_tag):
        """Sets the e_tag of this DeploymentInfo.

        entity tag

        :param e_tag: The e_tag of this DeploymentInfo.
        :type e_tag: str
        """

        self._e_tag = e_tag

    @property
    def parameters(self):
        """Gets the parameters of this DeploymentInfo.

        The latest deployment parameters as JToken

        :return: The parameters of this DeploymentInfo.
        :rtype: str
        """
        return self._parameters

    @parameters.setter
    def parameters(self, parameters):
        """Sets the parameters of this DeploymentInfo.

        The latest deployment parameters as JToken

        :param parameters: The parameters of this DeploymentInfo.
        :type parameters: str
        """

        self._parameters = parameters

    @property
    def version(self):
        """Gets the version of this DeploymentInfo.

        The product version

        :return: The version of this DeploymentInfo.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this DeploymentInfo.

        The product version

        :param version: The version of this DeploymentInfo.
        :type version: str
        """

        self._version = version
