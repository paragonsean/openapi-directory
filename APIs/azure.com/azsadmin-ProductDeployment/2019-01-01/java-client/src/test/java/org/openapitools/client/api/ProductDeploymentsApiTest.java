/*
 * DeploymentAdminClient
 * Deployment Admin Client.
 *
 * The version of the OpenAPI document: 2019-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ProductDeploymentResourceEntity;
import org.openapitools.client.model.ProductDeploymentsBootStrapRequest;
import org.openapitools.client.model.ProductDeploymentsDeployRequest;
import org.openapitools.client.model.ProductDeploymentsList;
import org.openapitools.client.model.ProductDeploymentsUnlockRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ProductDeploymentsApi
 */
@Disabled
public class ProductDeploymentsApiTest {

    private final ProductDeploymentsApi api = new ProductDeploymentsApi();

    /**
     * Invokes bootstrap action on the product deployment
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void productDeploymentsBootStrapTest() throws ApiException {
        String subscriptionId = null;
        String productId = null;
        String apiVersion = null;
        ProductDeploymentsBootStrapRequest bootstrapActionParameter = null;
        api.productDeploymentsBootStrap(subscriptionId, productId, apiVersion, bootstrapActionParameter);
        // TODO: test validations
    }

    /**
     * Invokes deploy action on the product
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void productDeploymentsDeployTest() throws ApiException {
        String subscriptionId = null;
        String productId = null;
        String apiVersion = null;
        ProductDeploymentsDeployRequest deployActionParameter = null;
        api.productDeploymentsDeploy(subscriptionId, productId, apiVersion, deployActionParameter);
        // TODO: test validations
    }

    /**
     * Invokes bootstrap action on the product deployment
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void productDeploymentsGetTest() throws ApiException {
        String subscriptionId = null;
        String apiVersion = null;
        String productId = null;
        ProductDeploymentResourceEntity response = api.productDeploymentsGet(subscriptionId, apiVersion, productId);
        // TODO: test validations
    }

    /**
     * Invokes bootstrap action on the product deployment
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void productDeploymentsListTest() throws ApiException {
        String subscriptionId = null;
        String apiVersion = null;
        ProductDeploymentsList response = api.productDeploymentsList(subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * locks the product subscription
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void productDeploymentsLockTest() throws ApiException {
        String subscriptionId = null;
        String productId = null;
        String apiVersion = null;
        api.productDeploymentsLock(subscriptionId, productId, apiVersion);
        // TODO: test validations
    }

    /**
     * Invokes remove action on the product deployment
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void productDeploymentsRemoveTest() throws ApiException {
        String subscriptionId = null;
        String productId = null;
        String apiVersion = null;
        api.productDeploymentsRemove(subscriptionId, productId, apiVersion);
        // TODO: test validations
    }

    /**
     * Invokes rotate secrets action on the product deployment
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void productDeploymentsRotateSecretsTest() throws ApiException {
        String subscriptionId = null;
        String productId = null;
        String apiVersion = null;
        api.productDeploymentsRotateSecrets(subscriptionId, productId, apiVersion);
        // TODO: test validations
    }

    /**
     * Unlocks the product subscription
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void productDeploymentsUnlockTest() throws ApiException {
        String subscriptionId = null;
        String productId = null;
        String apiVersion = null;
        ProductDeploymentsUnlockRequest unlockActionParameter = null;
        api.productDeploymentsUnlock(subscriptionId, productId, apiVersion, unlockActionParameter);
        // TODO: test validations
    }

}
