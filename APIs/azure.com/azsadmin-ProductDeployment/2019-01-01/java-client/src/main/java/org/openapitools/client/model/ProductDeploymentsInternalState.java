/*
 * DeploymentAdminClient
 * Deployment Admin Client.
 *
 * The version of the OpenAPI document: 2019-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Resource type internal state
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:08:38.244751-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ProductDeploymentsInternalState {
  public static final String SERIALIZED_NAME_EXTERNAL_ACCESS_ROLE_ASSIGNMENT_ID = "externalAccessRoleAssignmentId";
  @SerializedName(SERIALIZED_NAME_EXTERNAL_ACCESS_ROLE_ASSIGNMENT_ID)
  private String externalAccessRoleAssignmentId;

  public static final String SERIALIZED_NAME_INTERMEDIATE_VAULT_ID = "intermediateVaultId";
  @SerializedName(SERIALIZED_NAME_INTERMEDIATE_VAULT_ID)
  private String intermediateVaultId;

  public static final String SERIALIZED_NAME_INTERMEDIATE_VAULT_URI = "intermediateVaultUri";
  @SerializedName(SERIALIZED_NAME_INTERMEDIATE_VAULT_URI)
  private String intermediateVaultUri;

  public static final String SERIALIZED_NAME_JOB_ID = "jobId";
  @SerializedName(SERIALIZED_NAME_JOB_ID)
  private String jobId;

  public ProductDeploymentsInternalState() {
  }

  public ProductDeploymentsInternalState externalAccessRoleAssignmentId(String externalAccessRoleAssignmentId) {
    this.externalAccessRoleAssignmentId = externalAccessRoleAssignmentId;
    return this;
  }

  /**
   * The current external access role assignment identifier
   * @return externalAccessRoleAssignmentId
   */
  @javax.annotation.Nullable
  public String getExternalAccessRoleAssignmentId() {
    return externalAccessRoleAssignmentId;
  }

  public void setExternalAccessRoleAssignmentId(String externalAccessRoleAssignmentId) {
    this.externalAccessRoleAssignmentId = externalAccessRoleAssignmentId;
  }


  public ProductDeploymentsInternalState intermediateVaultId(String intermediateVaultId) {
    this.intermediateVaultId = intermediateVaultId;
    return this;
  }

  /**
   * The intermediate vault resource identifier
   * @return intermediateVaultId
   */
  @javax.annotation.Nullable
  public String getIntermediateVaultId() {
    return intermediateVaultId;
  }

  public void setIntermediateVaultId(String intermediateVaultId) {
    this.intermediateVaultId = intermediateVaultId;
  }


  public ProductDeploymentsInternalState intermediateVaultUri(String intermediateVaultUri) {
    this.intermediateVaultUri = intermediateVaultUri;
    return this;
  }

  /**
   * The intermediate vault Uri.
   * @return intermediateVaultUri
   */
  @javax.annotation.Nullable
  public String getIntermediateVaultUri() {
    return intermediateVaultUri;
  }

  public void setIntermediateVaultUri(String intermediateVaultUri) {
    this.intermediateVaultUri = intermediateVaultUri;
  }


  public ProductDeploymentsInternalState jobId(String jobId) {
    this.jobId = jobId;
    return this;
  }

  /**
   * The latest deployment job identifier
   * @return jobId
   */
  @javax.annotation.Nullable
  public String getJobId() {
    return jobId;
  }

  public void setJobId(String jobId) {
    this.jobId = jobId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProductDeploymentsInternalState productDeploymentsInternalState = (ProductDeploymentsInternalState) o;
    return Objects.equals(this.externalAccessRoleAssignmentId, productDeploymentsInternalState.externalAccessRoleAssignmentId) &&
        Objects.equals(this.intermediateVaultId, productDeploymentsInternalState.intermediateVaultId) &&
        Objects.equals(this.intermediateVaultUri, productDeploymentsInternalState.intermediateVaultUri) &&
        Objects.equals(this.jobId, productDeploymentsInternalState.jobId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(externalAccessRoleAssignmentId, intermediateVaultId, intermediateVaultUri, jobId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProductDeploymentsInternalState {\n");
    sb.append("    externalAccessRoleAssignmentId: ").append(toIndentedString(externalAccessRoleAssignmentId)).append("\n");
    sb.append("    intermediateVaultId: ").append(toIndentedString(intermediateVaultId)).append("\n");
    sb.append("    intermediateVaultUri: ").append(toIndentedString(intermediateVaultUri)).append("\n");
    sb.append("    jobId: ").append(toIndentedString(jobId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("externalAccessRoleAssignmentId");
    openapiFields.add("intermediateVaultId");
    openapiFields.add("intermediateVaultUri");
    openapiFields.add("jobId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ProductDeploymentsInternalState
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ProductDeploymentsInternalState.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ProductDeploymentsInternalState is not found in the empty JSON string", ProductDeploymentsInternalState.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ProductDeploymentsInternalState.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ProductDeploymentsInternalState` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("externalAccessRoleAssignmentId") != null && !jsonObj.get("externalAccessRoleAssignmentId").isJsonNull()) && !jsonObj.get("externalAccessRoleAssignmentId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `externalAccessRoleAssignmentId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("externalAccessRoleAssignmentId").toString()));
      }
      if ((jsonObj.get("intermediateVaultId") != null && !jsonObj.get("intermediateVaultId").isJsonNull()) && !jsonObj.get("intermediateVaultId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `intermediateVaultId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("intermediateVaultId").toString()));
      }
      if ((jsonObj.get("intermediateVaultUri") != null && !jsonObj.get("intermediateVaultUri").isJsonNull()) && !jsonObj.get("intermediateVaultUri").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `intermediateVaultUri` to be a primitive type in the JSON string but got `%s`", jsonObj.get("intermediateVaultUri").toString()));
      }
      if ((jsonObj.get("jobId") != null && !jsonObj.get("jobId").isJsonNull()) && !jsonObj.get("jobId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `jobId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("jobId").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ProductDeploymentsInternalState.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ProductDeploymentsInternalState' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ProductDeploymentsInternalState> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ProductDeploymentsInternalState.class));

       return (TypeAdapter<T>) new TypeAdapter<ProductDeploymentsInternalState>() {
           @Override
           public void write(JsonWriter out, ProductDeploymentsInternalState value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ProductDeploymentsInternalState read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ProductDeploymentsInternalState given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ProductDeploymentsInternalState
   * @throws IOException if the JSON string is invalid with respect to ProductDeploymentsInternalState
   */
  public static ProductDeploymentsInternalState fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ProductDeploymentsInternalState.class);
  }

  /**
   * Convert an instance of ProductDeploymentsInternalState to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

