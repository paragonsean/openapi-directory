/*
 * DeploymentAdminClient
 * Deployment Admin Client.
 *
 * The version of the OpenAPI document: 2019-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.DeploymentInfo;
import org.openapitools.client.model.DeploymentStatus;
import org.openapitools.client.model.ExternalAccessInfo;
import org.openapitools.client.model.ProductDeploymentsInternalState;
import org.openapitools.client.model.ProductDeploymentsPropertiesError;
import org.openapitools.client.model.SecretRotationInfo;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Product deployment resource properties
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:08:38.244751-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ProductDeploymentsProperties {
  public static final String SERIALIZED_NAME_DEPLOYMENT = "deployment";
  @SerializedName(SERIALIZED_NAME_DEPLOYMENT)
  private DeploymentInfo deployment;

  public static final String SERIALIZED_NAME_ERROR = "error";
  @SerializedName(SERIALIZED_NAME_ERROR)
  private ProductDeploymentsPropertiesError error;

  public static final String SERIALIZED_NAME_EXTERNAL_ACCESS = "externalAccess";
  @SerializedName(SERIALIZED_NAME_EXTERNAL_ACCESS)
  private ExternalAccessInfo externalAccess;

  public static final String SERIALIZED_NAME_INTERNAL_STATE = "internalState";
  @SerializedName(SERIALIZED_NAME_INTERNAL_STATE)
  private ProductDeploymentsInternalState internalState;

  public static final String SERIALIZED_NAME_LAST_SUCCESSFUL_DEPLOYMENT = "lastSuccessfulDeployment";
  @SerializedName(SERIALIZED_NAME_LAST_SUCCESSFUL_DEPLOYMENT)
  private DeploymentInfo lastSuccessfulDeployment;

  public static final String SERIALIZED_NAME_PRODUCT_ID = "productId";
  @SerializedName(SERIALIZED_NAME_PRODUCT_ID)
  private String productId;

  public static final String SERIALIZED_NAME_PROVISIONING_STATE = "provisioningState";
  @SerializedName(SERIALIZED_NAME_PROVISIONING_STATE)
  private String provisioningState;

  public static final String SERIALIZED_NAME_SECRET_ROTATION = "secretRotation";
  @SerializedName(SERIALIZED_NAME_SECRET_ROTATION)
  private SecretRotationInfo secretRotation;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private DeploymentStatus status;

  public static final String SERIALIZED_NAME_SUBSCRIPTION_ID = "subscriptionId";
  @SerializedName(SERIALIZED_NAME_SUBSCRIPTION_ID)
  private String subscriptionId;

  public ProductDeploymentsProperties() {
  }

  public ProductDeploymentsProperties deployment(DeploymentInfo deployment) {
    this.deployment = deployment;
    return this;
  }

  /**
   * Get deployment
   * @return deployment
   */
  @javax.annotation.Nullable
  public DeploymentInfo getDeployment() {
    return deployment;
  }

  public void setDeployment(DeploymentInfo deployment) {
    this.deployment = deployment;
  }


  public ProductDeploymentsProperties error(ProductDeploymentsPropertiesError error) {
    this.error = error;
    return this;
  }

  /**
   * Get error
   * @return error
   */
  @javax.annotation.Nullable
  public ProductDeploymentsPropertiesError getError() {
    return error;
  }

  public void setError(ProductDeploymentsPropertiesError error) {
    this.error = error;
  }


  public ProductDeploymentsProperties externalAccess(ExternalAccessInfo externalAccess) {
    this.externalAccess = externalAccess;
    return this;
  }

  /**
   * Get externalAccess
   * @return externalAccess
   */
  @javax.annotation.Nullable
  public ExternalAccessInfo getExternalAccess() {
    return externalAccess;
  }

  public void setExternalAccess(ExternalAccessInfo externalAccess) {
    this.externalAccess = externalAccess;
  }


  public ProductDeploymentsProperties internalState(ProductDeploymentsInternalState internalState) {
    this.internalState = internalState;
    return this;
  }

  /**
   * Get internalState
   * @return internalState
   */
  @javax.annotation.Nullable
  public ProductDeploymentsInternalState getInternalState() {
    return internalState;
  }

  public void setInternalState(ProductDeploymentsInternalState internalState) {
    this.internalState = internalState;
  }


  public ProductDeploymentsProperties lastSuccessfulDeployment(DeploymentInfo lastSuccessfulDeployment) {
    this.lastSuccessfulDeployment = lastSuccessfulDeployment;
    return this;
  }

  /**
   * Get lastSuccessfulDeployment
   * @return lastSuccessfulDeployment
   */
  @javax.annotation.Nullable
  public DeploymentInfo getLastSuccessfulDeployment() {
    return lastSuccessfulDeployment;
  }

  public void setLastSuccessfulDeployment(DeploymentInfo lastSuccessfulDeployment) {
    this.lastSuccessfulDeployment = lastSuccessfulDeployment;
  }


  public ProductDeploymentsProperties productId(String productId) {
    this.productId = productId;
    return this;
  }

  /**
   * The product identifier
   * @return productId
   */
  @javax.annotation.Nullable
  public String getProductId() {
    return productId;
  }

  public void setProductId(String productId) {
    this.productId = productId;
  }


  public ProductDeploymentsProperties provisioningState(String provisioningState) {
    this.provisioningState = provisioningState;
    return this;
  }

  /**
   * The provisioning state
   * @return provisioningState
   */
  @javax.annotation.Nullable
  public String getProvisioningState() {
    return provisioningState;
  }

  public void setProvisioningState(String provisioningState) {
    this.provisioningState = provisioningState;
  }


  public ProductDeploymentsProperties secretRotation(SecretRotationInfo secretRotation) {
    this.secretRotation = secretRotation;
    return this;
  }

  /**
   * Get secretRotation
   * @return secretRotation
   */
  @javax.annotation.Nullable
  public SecretRotationInfo getSecretRotation() {
    return secretRotation;
  }

  public void setSecretRotation(SecretRotationInfo secretRotation) {
    this.secretRotation = secretRotation;
  }


  public ProductDeploymentsProperties status(DeploymentStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public DeploymentStatus getStatus() {
    return status;
  }

  public void setStatus(DeploymentStatus status) {
    this.status = status;
  }


  public ProductDeploymentsProperties subscriptionId(String subscriptionId) {
    this.subscriptionId = subscriptionId;
    return this;
  }

  /**
   * The product subscription identifier
   * @return subscriptionId
   */
  @javax.annotation.Nullable
  public String getSubscriptionId() {
    return subscriptionId;
  }

  public void setSubscriptionId(String subscriptionId) {
    this.subscriptionId = subscriptionId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProductDeploymentsProperties productDeploymentsProperties = (ProductDeploymentsProperties) o;
    return Objects.equals(this.deployment, productDeploymentsProperties.deployment) &&
        Objects.equals(this.error, productDeploymentsProperties.error) &&
        Objects.equals(this.externalAccess, productDeploymentsProperties.externalAccess) &&
        Objects.equals(this.internalState, productDeploymentsProperties.internalState) &&
        Objects.equals(this.lastSuccessfulDeployment, productDeploymentsProperties.lastSuccessfulDeployment) &&
        Objects.equals(this.productId, productDeploymentsProperties.productId) &&
        Objects.equals(this.provisioningState, productDeploymentsProperties.provisioningState) &&
        Objects.equals(this.secretRotation, productDeploymentsProperties.secretRotation) &&
        Objects.equals(this.status, productDeploymentsProperties.status) &&
        Objects.equals(this.subscriptionId, productDeploymentsProperties.subscriptionId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(deployment, error, externalAccess, internalState, lastSuccessfulDeployment, productId, provisioningState, secretRotation, status, subscriptionId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProductDeploymentsProperties {\n");
    sb.append("    deployment: ").append(toIndentedString(deployment)).append("\n");
    sb.append("    error: ").append(toIndentedString(error)).append("\n");
    sb.append("    externalAccess: ").append(toIndentedString(externalAccess)).append("\n");
    sb.append("    internalState: ").append(toIndentedString(internalState)).append("\n");
    sb.append("    lastSuccessfulDeployment: ").append(toIndentedString(lastSuccessfulDeployment)).append("\n");
    sb.append("    productId: ").append(toIndentedString(productId)).append("\n");
    sb.append("    provisioningState: ").append(toIndentedString(provisioningState)).append("\n");
    sb.append("    secretRotation: ").append(toIndentedString(secretRotation)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    subscriptionId: ").append(toIndentedString(subscriptionId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("deployment");
    openapiFields.add("error");
    openapiFields.add("externalAccess");
    openapiFields.add("internalState");
    openapiFields.add("lastSuccessfulDeployment");
    openapiFields.add("productId");
    openapiFields.add("provisioningState");
    openapiFields.add("secretRotation");
    openapiFields.add("status");
    openapiFields.add("subscriptionId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ProductDeploymentsProperties
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ProductDeploymentsProperties.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ProductDeploymentsProperties is not found in the empty JSON string", ProductDeploymentsProperties.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ProductDeploymentsProperties.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ProductDeploymentsProperties` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `deployment`
      if (jsonObj.get("deployment") != null && !jsonObj.get("deployment").isJsonNull()) {
        DeploymentInfo.validateJsonElement(jsonObj.get("deployment"));
      }
      // validate the optional field `error`
      if (jsonObj.get("error") != null && !jsonObj.get("error").isJsonNull()) {
        ProductDeploymentsPropertiesError.validateJsonElement(jsonObj.get("error"));
      }
      // validate the optional field `externalAccess`
      if (jsonObj.get("externalAccess") != null && !jsonObj.get("externalAccess").isJsonNull()) {
        ExternalAccessInfo.validateJsonElement(jsonObj.get("externalAccess"));
      }
      // validate the optional field `internalState`
      if (jsonObj.get("internalState") != null && !jsonObj.get("internalState").isJsonNull()) {
        ProductDeploymentsInternalState.validateJsonElement(jsonObj.get("internalState"));
      }
      // validate the optional field `lastSuccessfulDeployment`
      if (jsonObj.get("lastSuccessfulDeployment") != null && !jsonObj.get("lastSuccessfulDeployment").isJsonNull()) {
        DeploymentInfo.validateJsonElement(jsonObj.get("lastSuccessfulDeployment"));
      }
      if ((jsonObj.get("productId") != null && !jsonObj.get("productId").isJsonNull()) && !jsonObj.get("productId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `productId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("productId").toString()));
      }
      if ((jsonObj.get("provisioningState") != null && !jsonObj.get("provisioningState").isJsonNull()) && !jsonObj.get("provisioningState").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `provisioningState` to be a primitive type in the JSON string but got `%s`", jsonObj.get("provisioningState").toString()));
      }
      // validate the optional field `secretRotation`
      if (jsonObj.get("secretRotation") != null && !jsonObj.get("secretRotation").isJsonNull()) {
        SecretRotationInfo.validateJsonElement(jsonObj.get("secretRotation"));
      }
      // validate the optional field `status`
      if (jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) {
        DeploymentStatus.validateJsonElement(jsonObj.get("status"));
      }
      if ((jsonObj.get("subscriptionId") != null && !jsonObj.get("subscriptionId").isJsonNull()) && !jsonObj.get("subscriptionId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `subscriptionId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("subscriptionId").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ProductDeploymentsProperties.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ProductDeploymentsProperties' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ProductDeploymentsProperties> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ProductDeploymentsProperties.class));

       return (TypeAdapter<T>) new TypeAdapter<ProductDeploymentsProperties>() {
           @Override
           public void write(JsonWriter out, ProductDeploymentsProperties value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ProductDeploymentsProperties read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ProductDeploymentsProperties given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ProductDeploymentsProperties
   * @throws IOException if the JSON string is invalid with respect to ProductDeploymentsProperties
   */
  public static ProductDeploymentsProperties fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ProductDeploymentsProperties.class);
  }

  /**
   * Convert an instance of ProductDeploymentsProperties to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

