/**
 * Diagnostics API Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-03-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DataTableResponseObject from './DataTableResponseObject';
import Rendering from './Rendering';

/**
 * The DiagnosticData model module.
 * @module model/DiagnosticData
 * @version 2016-03-01
 */
class DiagnosticData {
    /**
     * Constructs a new <code>DiagnosticData</code>.
     * Set of data with rendering instructions
     * @alias module:model/DiagnosticData
     */
    constructor() { 
        
        DiagnosticData.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DiagnosticData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DiagnosticData} obj Optional instance to populate.
     * @return {module:model/DiagnosticData} The populated <code>DiagnosticData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DiagnosticData();

            if (data.hasOwnProperty('renderingProperties')) {
                obj['renderingProperties'] = Rendering.constructFromObject(data['renderingProperties']);
            }
            if (data.hasOwnProperty('table')) {
                obj['table'] = DataTableResponseObject.constructFromObject(data['table']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DiagnosticData</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DiagnosticData</code>.
     */
    static validateJSON(data) {
        // validate the optional field `renderingProperties`
        if (data['renderingProperties']) { // data not null
          Rendering.validateJSON(data['renderingProperties']);
        }
        // validate the optional field `table`
        if (data['table']) { // data not null
          DataTableResponseObject.validateJSON(data['table']);
        }

        return true;
    }


}



/**
 * @member {module:model/Rendering} renderingProperties
 */
DiagnosticData.prototype['renderingProperties'] = undefined;

/**
 * @member {module:model/DataTableResponseObject} table
 */
DiagnosticData.prototype['table'] = undefined;






export default DiagnosticData;

