/**
 * Diagnostics API Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-03-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDetectorInfo.h
 *
 * Definition of Detector
 */

#ifndef OAIDetectorInfo_H
#define OAIDetectorInfo_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDetectorInfo : public OAIObject {
public:
    OAIDetectorInfo();
    OAIDetectorInfo(QString json);
    ~OAIDetectorInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCategory() const;
    void setCategory(const QString &category);
    bool is_category_Set() const;
    bool is_category_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getSubCategory() const;
    void setSubCategory(const QString &sub_category);
    bool is_sub_category_Set() const;
    bool is_sub_category_Valid() const;

    QString getSupportTopicId() const;
    void setSupportTopicId(const QString &support_topic_id);
    bool is_support_topic_id_Set() const;
    bool is_support_topic_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_category;
    bool m_category_isSet;
    bool m_category_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_sub_category;
    bool m_sub_category_isSet;
    bool m_sub_category_isValid;

    QString m_support_topic_id;
    bool m_support_topic_id_isSet;
    bool m_support_topic_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDetectorInfo)

#endif // OAIDetectorInfo_H
