/**
 * Diagnostics API Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-03-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDetectorAbnormalTimePeriod.h
 *
 * Class representing Abnormal Time Period detected.
 */

#ifndef OAIDetectorAbnormalTimePeriod_H
#define OAIDetectorAbnormalTimePeriod_H

#include <QJsonObject>

#include "OAIAnalysisData_data_inner_inner.h"
#include "OAISolution.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAnalysisData_data_inner_inner;
class OAISolution;

class OAIDetectorAbnormalTimePeriod : public OAIObject {
public:
    OAIDetectorAbnormalTimePeriod();
    OAIDetectorAbnormalTimePeriod(QString json);
    ~OAIDetectorAbnormalTimePeriod() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getEndTime() const;
    void setEndTime(const QDateTime &end_time);
    bool is_end_time_Set() const;
    bool is_end_time_Valid() const;

    QString getMessage() const;
    void setMessage(const QString &message);
    bool is_message_Set() const;
    bool is_message_Valid() const;

    QList<QList<OAIAnalysisData_data_inner_inner>> getMetaData() const;
    void setMetaData(const QList<QList<OAIAnalysisData_data_inner_inner>> &meta_data);
    bool is_meta_data_Set() const;
    bool is_meta_data_Valid() const;

    double getPriority() const;
    void setPriority(const double &priority);
    bool is_priority_Set() const;
    bool is_priority_Valid() const;

    QList<OAISolution> getSolutions() const;
    void setSolutions(const QList<OAISolution> &solutions);
    bool is_solutions_Set() const;
    bool is_solutions_Valid() const;

    QString getSource() const;
    void setSource(const QString &source);
    bool is_source_Set() const;
    bool is_source_Valid() const;

    QDateTime getStartTime() const;
    void setStartTime(const QDateTime &start_time);
    bool is_start_time_Set() const;
    bool is_start_time_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_end_time;
    bool m_end_time_isSet;
    bool m_end_time_isValid;

    QString m_message;
    bool m_message_isSet;
    bool m_message_isValid;

    QList<QList<OAIAnalysisData_data_inner_inner>> m_meta_data;
    bool m_meta_data_isSet;
    bool m_meta_data_isValid;

    double m_priority;
    bool m_priority_isSet;
    bool m_priority_isValid;

    QList<OAISolution> m_solutions;
    bool m_solutions_isSet;
    bool m_solutions_isValid;

    QString m_source;
    bool m_source_isSet;
    bool m_source_isValid;

    QDateTime m_start_time;
    bool m_start_time_isSet;
    bool m_start_time_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDetectorAbnormalTimePeriod)

#endif // OAIDetectorAbnormalTimePeriod_H
