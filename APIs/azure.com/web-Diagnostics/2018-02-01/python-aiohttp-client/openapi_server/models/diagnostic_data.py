# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.data_table_response_object import DataTableResponseObject
from openapi_server.models.rendering import Rendering
from openapi_server import util


class DiagnosticData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, rendering_properties: Rendering=None, table: DataTableResponseObject=None):
        """DiagnosticData - a model defined in OpenAPI

        :param rendering_properties: The rendering_properties of this DiagnosticData.
        :param table: The table of this DiagnosticData.
        """
        self.openapi_types = {
            'rendering_properties': Rendering,
            'table': DataTableResponseObject
        }

        self.attribute_map = {
            'rendering_properties': 'renderingProperties',
            'table': 'table'
        }

        self._rendering_properties = rendering_properties
        self._table = table

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DiagnosticData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DiagnosticData of this DiagnosticData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def rendering_properties(self):
        """Gets the rendering_properties of this DiagnosticData.


        :return: The rendering_properties of this DiagnosticData.
        :rtype: Rendering
        """
        return self._rendering_properties

    @rendering_properties.setter
    def rendering_properties(self, rendering_properties):
        """Sets the rendering_properties of this DiagnosticData.


        :param rendering_properties: The rendering_properties of this DiagnosticData.
        :type rendering_properties: Rendering
        """

        self._rendering_properties = rendering_properties

    @property
    def table(self):
        """Gets the table of this DiagnosticData.


        :return: The table of this DiagnosticData.
        :rtype: DataTableResponseObject
        """
        return self._table

    @table.setter
    def table(self, table):
        """Sets the table of this DiagnosticData.


        :param table: The table of this DiagnosticData.
        :type table: DataTableResponseObject
        """

        self._table = table
