/**
 * Diagnostics API Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-02-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DetectorInfo model module.
 * @module model/DetectorInfo
 * @version 2018-02-01
 */
class DetectorInfo {
    /**
     * Constructs a new <code>DetectorInfo</code>.
     * Definition of Detector
     * @alias module:model/DetectorInfo
     */
    constructor() { 
        
        DetectorInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DetectorInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DetectorInfo} obj Optional instance to populate.
     * @return {module:model/DetectorInfo} The populated <code>DetectorInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DetectorInfo();

            if (data.hasOwnProperty('category')) {
                obj['category'] = ApiClient.convertToType(data['category'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('subCategory')) {
                obj['subCategory'] = ApiClient.convertToType(data['subCategory'], 'String');
            }
            if (data.hasOwnProperty('supportTopicId')) {
                obj['supportTopicId'] = ApiClient.convertToType(data['supportTopicId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DetectorInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DetectorInfo</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['category'] && !(typeof data['category'] === 'string' || data['category'] instanceof String)) {
            throw new Error("Expected the field `category` to be a primitive type in the JSON string but got " + data['category']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['subCategory'] && !(typeof data['subCategory'] === 'string' || data['subCategory'] instanceof String)) {
            throw new Error("Expected the field `subCategory` to be a primitive type in the JSON string but got " + data['subCategory']);
        }
        // ensure the json data is a string
        if (data['supportTopicId'] && !(typeof data['supportTopicId'] === 'string' || data['supportTopicId'] instanceof String)) {
            throw new Error("Expected the field `supportTopicId` to be a primitive type in the JSON string but got " + data['supportTopicId']);
        }

        return true;
    }


}



/**
 * Support Category
 * @member {String} category
 */
DetectorInfo.prototype['category'] = undefined;

/**
 * Short description of the detector and its purpose
 * @member {String} description
 */
DetectorInfo.prototype['description'] = undefined;

/**
 * Support Sub Category
 * @member {String} subCategory
 */
DetectorInfo.prototype['subCategory'] = undefined;

/**
 * Support Topic Id
 * @member {String} supportTopicId
 */
DetectorInfo.prototype['supportTopicId'] = undefined;






export default DetectorInfo;

