/**
 * Diagnostics API Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-08-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDataTableResponseColumn.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDataTableResponseColumn::OAIDataTableResponseColumn(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDataTableResponseColumn::OAIDataTableResponseColumn() {
    this->initializeModel();
}

OAIDataTableResponseColumn::~OAIDataTableResponseColumn() {}

void OAIDataTableResponseColumn::initializeModel() {

    m_column_name_isSet = false;
    m_column_name_isValid = false;

    m_column_type_isSet = false;
    m_column_type_isValid = false;

    m_data_type_isSet = false;
    m_data_type_isValid = false;
}

void OAIDataTableResponseColumn::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDataTableResponseColumn::fromJsonObject(QJsonObject json) {

    m_column_name_isValid = ::OpenAPI::fromJsonValue(m_column_name, json[QString("columnName")]);
    m_column_name_isSet = !json[QString("columnName")].isNull() && m_column_name_isValid;

    m_column_type_isValid = ::OpenAPI::fromJsonValue(m_column_type, json[QString("columnType")]);
    m_column_type_isSet = !json[QString("columnType")].isNull() && m_column_type_isValid;

    m_data_type_isValid = ::OpenAPI::fromJsonValue(m_data_type, json[QString("dataType")]);
    m_data_type_isSet = !json[QString("dataType")].isNull() && m_data_type_isValid;
}

QString OAIDataTableResponseColumn::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDataTableResponseColumn::asJsonObject() const {
    QJsonObject obj;
    if (m_column_name_isSet) {
        obj.insert(QString("columnName"), ::OpenAPI::toJsonValue(m_column_name));
    }
    if (m_column_type_isSet) {
        obj.insert(QString("columnType"), ::OpenAPI::toJsonValue(m_column_type));
    }
    if (m_data_type_isSet) {
        obj.insert(QString("dataType"), ::OpenAPI::toJsonValue(m_data_type));
    }
    return obj;
}

QString OAIDataTableResponseColumn::getColumnName() const {
    return m_column_name;
}
void OAIDataTableResponseColumn::setColumnName(const QString &column_name) {
    m_column_name = column_name;
    m_column_name_isSet = true;
}

bool OAIDataTableResponseColumn::is_column_name_Set() const{
    return m_column_name_isSet;
}

bool OAIDataTableResponseColumn::is_column_name_Valid() const{
    return m_column_name_isValid;
}

QString OAIDataTableResponseColumn::getColumnType() const {
    return m_column_type;
}
void OAIDataTableResponseColumn::setColumnType(const QString &column_type) {
    m_column_type = column_type;
    m_column_type_isSet = true;
}

bool OAIDataTableResponseColumn::is_column_type_Set() const{
    return m_column_type_isSet;
}

bool OAIDataTableResponseColumn::is_column_type_Valid() const{
    return m_column_type_isValid;
}

QString OAIDataTableResponseColumn::getDataType() const {
    return m_data_type;
}
void OAIDataTableResponseColumn::setDataType(const QString &data_type) {
    m_data_type = data_type;
    m_data_type_isSet = true;
}

bool OAIDataTableResponseColumn::is_data_type_Set() const{
    return m_data_type_isSet;
}

bool OAIDataTableResponseColumn::is_data_type_Valid() const{
    return m_data_type_isValid;
}

bool OAIDataTableResponseColumn::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_column_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_column_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_data_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDataTableResponseColumn::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
