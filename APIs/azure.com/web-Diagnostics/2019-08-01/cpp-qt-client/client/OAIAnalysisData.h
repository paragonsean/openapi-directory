/**
 * Diagnostics API Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-08-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAnalysisData.h
 *
 * Class Representing Detector Evidence used for analysis
 */

#ifndef OAIAnalysisData_H
#define OAIAnalysisData_H

#include <QJsonObject>

#include "OAIAnalysisData_data_inner_inner.h"
#include "OAIDetectorDefinition.h"
#include "OAIDiagnosticMetricSet.h"
#include "OAIResponseMetaData.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAnalysisData_data_inner_inner;
class OAIDetectorDefinition;
class OAIResponseMetaData;
class OAIDiagnosticMetricSet;

class OAIAnalysisData : public OAIObject {
public:
    OAIAnalysisData();
    OAIAnalysisData(QString json);
    ~OAIAnalysisData() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QList<OAIAnalysisData_data_inner_inner>> getData() const;
    void setData(const QList<QList<OAIAnalysisData_data_inner_inner>> &data);
    bool is_data_Set() const;
    bool is_data_Valid() const;

    OAIDetectorDefinition getDetectorDefinition() const;
    void setDetectorDefinition(const OAIDetectorDefinition &detector_definition);
    bool is_detector_definition_Set() const;
    bool is_detector_definition_Valid() const;

    OAIResponseMetaData getDetectorMetaData() const;
    void setDetectorMetaData(const OAIResponseMetaData &detector_meta_data);
    bool is_detector_meta_data_Set() const;
    bool is_detector_meta_data_Valid() const;

    QList<OAIDiagnosticMetricSet> getMetrics() const;
    void setMetrics(const QList<OAIDiagnosticMetricSet> &metrics);
    bool is_metrics_Set() const;
    bool is_metrics_Valid() const;

    QString getSource() const;
    void setSource(const QString &source);
    bool is_source_Set() const;
    bool is_source_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QList<OAIAnalysisData_data_inner_inner>> m_data;
    bool m_data_isSet;
    bool m_data_isValid;

    OAIDetectorDefinition m_detector_definition;
    bool m_detector_definition_isSet;
    bool m_detector_definition_isValid;

    OAIResponseMetaData m_detector_meta_data;
    bool m_detector_meta_data_isSet;
    bool m_detector_meta_data_isValid;

    QList<OAIDiagnosticMetricSet> m_metrics;
    bool m_metrics_isSet;
    bool m_metrics_isValid;

    QString m_source;
    bool m_source_isSet;
    bool m_source_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAnalysisData)

#endif // OAIAnalysisData_H
