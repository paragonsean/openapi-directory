/**
 * DevSpacesManagement
 * Dev Spaces REST API
 *
 * The version of the OpenAPI document: 2019-04-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIControllerUpdateParametersProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIControllerUpdateParametersProperties::OAIControllerUpdateParametersProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIControllerUpdateParametersProperties::OAIControllerUpdateParametersProperties() {
    this->initializeModel();
}

OAIControllerUpdateParametersProperties::~OAIControllerUpdateParametersProperties() {}

void OAIControllerUpdateParametersProperties::initializeModel() {

    m_target_container_host_credentials_base64_isSet = false;
    m_target_container_host_credentials_base64_isValid = false;
}

void OAIControllerUpdateParametersProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIControllerUpdateParametersProperties::fromJsonObject(QJsonObject json) {

    m_target_container_host_credentials_base64_isValid = ::OpenAPI::fromJsonValue(m_target_container_host_credentials_base64, json[QString("targetContainerHostCredentialsBase64")]);
    m_target_container_host_credentials_base64_isSet = !json[QString("targetContainerHostCredentialsBase64")].isNull() && m_target_container_host_credentials_base64_isValid;
}

QString OAIControllerUpdateParametersProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIControllerUpdateParametersProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_target_container_host_credentials_base64_isSet) {
        obj.insert(QString("targetContainerHostCredentialsBase64"), ::OpenAPI::toJsonValue(m_target_container_host_credentials_base64));
    }
    return obj;
}

QString OAIControllerUpdateParametersProperties::getTargetContainerHostCredentialsBase64() const {
    return m_target_container_host_credentials_base64;
}
void OAIControllerUpdateParametersProperties::setTargetContainerHostCredentialsBase64(const QString &target_container_host_credentials_base64) {
    m_target_container_host_credentials_base64 = target_container_host_credentials_base64;
    m_target_container_host_credentials_base64_isSet = true;
}

bool OAIControllerUpdateParametersProperties::is_target_container_host_credentials_base64_Set() const{
    return m_target_container_host_credentials_base64_isSet;
}

bool OAIControllerUpdateParametersProperties::is_target_container_host_credentials_base64_Valid() const{
    return m_target_container_host_credentials_base64_isValid;
}

bool OAIControllerUpdateParametersProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_target_container_host_credentials_base64_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIControllerUpdateParametersProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
