/**
 * DevSpacesManagement
 * Dev Spaces REST API
 *
 * The version of the OpenAPI document: 2019-04-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIControllerProperties.h
 *
 * 
 */

#ifndef OAIControllerProperties_H
#define OAIControllerProperties_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIControllerProperties : public OAIObject {
public:
    OAIControllerProperties();
    OAIControllerProperties(QString json);
    ~OAIControllerProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDataPlaneFqdn() const;
    void setDataPlaneFqdn(const QString &data_plane_fqdn);
    bool is_data_plane_fqdn_Set() const;
    bool is_data_plane_fqdn_Valid() const;

    QString getHostSuffix() const;
    void setHostSuffix(const QString &host_suffix);
    bool is_host_suffix_Set() const;
    bool is_host_suffix_Valid() const;

    QString getProvisioningState() const;
    void setProvisioningState(const QString &provisioning_state);
    bool is_provisioning_state_Set() const;
    bool is_provisioning_state_Valid() const;

    QString getTargetContainerHostCredentialsBase64() const;
    void setTargetContainerHostCredentialsBase64(const QString &target_container_host_credentials_base64);
    bool is_target_container_host_credentials_base64_Set() const;
    bool is_target_container_host_credentials_base64_Valid() const;

    QString getTargetContainerHostResourceId() const;
    void setTargetContainerHostResourceId(const QString &target_container_host_resource_id);
    bool is_target_container_host_resource_id_Set() const;
    bool is_target_container_host_resource_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_data_plane_fqdn;
    bool m_data_plane_fqdn_isSet;
    bool m_data_plane_fqdn_isValid;

    QString m_host_suffix;
    bool m_host_suffix_isSet;
    bool m_host_suffix_isValid;

    QString m_provisioning_state;
    bool m_provisioning_state_isSet;
    bool m_provisioning_state_isValid;

    QString m_target_container_host_credentials_base64;
    bool m_target_container_host_credentials_base64_isSet;
    bool m_target_container_host_credentials_base64_isValid;

    QString m_target_container_host_resource_id;
    bool m_target_container_host_resource_id_isSet;
    bool m_target_container_host_resource_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIControllerProperties)

#endif // OAIControllerProperties_H
