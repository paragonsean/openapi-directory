# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.orchestrator_specific_connection_details import OrchestratorSpecificConnectionDetails
from openapi_server import util


class ControllerConnectionDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, auth_key: str=None, orchestrator_specific_connection_details: OrchestratorSpecificConnectionDetails=None, workspace_storage_account_name: str=None, workspace_storage_sas_token: str=None):
        """ControllerConnectionDetails - a model defined in OpenAPI

        :param auth_key: The auth_key of this ControllerConnectionDetails.
        :param orchestrator_specific_connection_details: The orchestrator_specific_connection_details of this ControllerConnectionDetails.
        :param workspace_storage_account_name: The workspace_storage_account_name of this ControllerConnectionDetails.
        :param workspace_storage_sas_token: The workspace_storage_sas_token of this ControllerConnectionDetails.
        """
        self.openapi_types = {
            'auth_key': str,
            'orchestrator_specific_connection_details': OrchestratorSpecificConnectionDetails,
            'workspace_storage_account_name': str,
            'workspace_storage_sas_token': str
        }

        self.attribute_map = {
            'auth_key': 'authKey',
            'orchestrator_specific_connection_details': 'orchestratorSpecificConnectionDetails',
            'workspace_storage_account_name': 'workspaceStorageAccountName',
            'workspace_storage_sas_token': 'workspaceStorageSasToken'
        }

        self._auth_key = auth_key
        self._orchestrator_specific_connection_details = orchestrator_specific_connection_details
        self._workspace_storage_account_name = workspace_storage_account_name
        self._workspace_storage_sas_token = workspace_storage_sas_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ControllerConnectionDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ControllerConnectionDetails of this ControllerConnectionDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def auth_key(self):
        """Gets the auth_key of this ControllerConnectionDetails.

        Authentication key for communicating with services.

        :return: The auth_key of this ControllerConnectionDetails.
        :rtype: str
        """
        return self._auth_key

    @auth_key.setter
    def auth_key(self, auth_key):
        """Sets the auth_key of this ControllerConnectionDetails.

        Authentication key for communicating with services.

        :param auth_key: The auth_key of this ControllerConnectionDetails.
        :type auth_key: str
        """

        self._auth_key = auth_key

    @property
    def orchestrator_specific_connection_details(self):
        """Gets the orchestrator_specific_connection_details of this ControllerConnectionDetails.


        :return: The orchestrator_specific_connection_details of this ControllerConnectionDetails.
        :rtype: OrchestratorSpecificConnectionDetails
        """
        return self._orchestrator_specific_connection_details

    @orchestrator_specific_connection_details.setter
    def orchestrator_specific_connection_details(self, orchestrator_specific_connection_details):
        """Sets the orchestrator_specific_connection_details of this ControllerConnectionDetails.


        :param orchestrator_specific_connection_details: The orchestrator_specific_connection_details of this ControllerConnectionDetails.
        :type orchestrator_specific_connection_details: OrchestratorSpecificConnectionDetails
        """

        self._orchestrator_specific_connection_details = orchestrator_specific_connection_details

    @property
    def workspace_storage_account_name(self):
        """Gets the workspace_storage_account_name of this ControllerConnectionDetails.

        Workspace storage account name.

        :return: The workspace_storage_account_name of this ControllerConnectionDetails.
        :rtype: str
        """
        return self._workspace_storage_account_name

    @workspace_storage_account_name.setter
    def workspace_storage_account_name(self, workspace_storage_account_name):
        """Sets the workspace_storage_account_name of this ControllerConnectionDetails.

        Workspace storage account name.

        :param workspace_storage_account_name: The workspace_storage_account_name of this ControllerConnectionDetails.
        :type workspace_storage_account_name: str
        """

        self._workspace_storage_account_name = workspace_storage_account_name

    @property
    def workspace_storage_sas_token(self):
        """Gets the workspace_storage_sas_token of this ControllerConnectionDetails.

        Workspace storage account SAS token.

        :return: The workspace_storage_sas_token of this ControllerConnectionDetails.
        :rtype: str
        """
        return self._workspace_storage_sas_token

    @workspace_storage_sas_token.setter
    def workspace_storage_sas_token(self, workspace_storage_sas_token):
        """Sets the workspace_storage_sas_token of this ControllerConnectionDetails.

        Workspace storage account SAS token.

        :param workspace_storage_sas_token: The workspace_storage_sas_token of this ControllerConnectionDetails.
        :type workspace_storage_sas_token: str
        """

        self._workspace_storage_sas_token = workspace_storage_sas_token
