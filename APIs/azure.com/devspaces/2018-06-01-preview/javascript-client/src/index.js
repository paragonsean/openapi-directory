/**
 * DevSpacesManagement
 * Dev Spaces REST API
 *
 * The version of the OpenAPI document: 2018-06-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import ContainerHostMapping from './model/ContainerHostMapping';
import Controller from './model/Controller';
import ControllerConnectionDetails from './model/ControllerConnectionDetails';
import ControllerConnectionDetailsList from './model/ControllerConnectionDetailsList';
import ControllerList from './model/ControllerList';
import ControllerProperties from './model/ControllerProperties';
import ControllerUpdateParameters from './model/ControllerUpdateParameters';
import ErrorDetails from './model/ErrorDetails';
import ErrorResponse from './model/ErrorResponse';
import KubernetesConnectionDetails from './model/KubernetesConnectionDetails';
import OrchestratorSpecificConnectionDetails from './model/OrchestratorSpecificConnectionDetails';
import Resource from './model/Resource';
import ResourceProviderOperationDefinition from './model/ResourceProviderOperationDefinition';
import ResourceProviderOperationDisplay from './model/ResourceProviderOperationDisplay';
import ResourceProviderOperationList from './model/ResourceProviderOperationList';
import Sku from './model/Sku';
import TrackedResource from './model/TrackedResource';
import ContainerHostMappingsApi from './api/ContainerHostMappingsApi';
import ControllersApi from './api/ControllersApi';
import OperationsApi from './api/OperationsApi';


/**
* Dev Spaces REST API.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var DevSpacesManagement = require('index'); // See note below*.
* var xxxSvc = new DevSpacesManagement.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new DevSpacesManagement.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new DevSpacesManagement.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new DevSpacesManagement.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2018-06-01-preview
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The ContainerHostMapping model constructor.
     * @property {module:model/ContainerHostMapping}
     */
    ContainerHostMapping,

    /**
     * The Controller model constructor.
     * @property {module:model/Controller}
     */
    Controller,

    /**
     * The ControllerConnectionDetails model constructor.
     * @property {module:model/ControllerConnectionDetails}
     */
    ControllerConnectionDetails,

    /**
     * The ControllerConnectionDetailsList model constructor.
     * @property {module:model/ControllerConnectionDetailsList}
     */
    ControllerConnectionDetailsList,

    /**
     * The ControllerList model constructor.
     * @property {module:model/ControllerList}
     */
    ControllerList,

    /**
     * The ControllerProperties model constructor.
     * @property {module:model/ControllerProperties}
     */
    ControllerProperties,

    /**
     * The ControllerUpdateParameters model constructor.
     * @property {module:model/ControllerUpdateParameters}
     */
    ControllerUpdateParameters,

    /**
     * The ErrorDetails model constructor.
     * @property {module:model/ErrorDetails}
     */
    ErrorDetails,

    /**
     * The ErrorResponse model constructor.
     * @property {module:model/ErrorResponse}
     */
    ErrorResponse,

    /**
     * The KubernetesConnectionDetails model constructor.
     * @property {module:model/KubernetesConnectionDetails}
     */
    KubernetesConnectionDetails,

    /**
     * The OrchestratorSpecificConnectionDetails model constructor.
     * @property {module:model/OrchestratorSpecificConnectionDetails}
     */
    OrchestratorSpecificConnectionDetails,

    /**
     * The Resource model constructor.
     * @property {module:model/Resource}
     */
    Resource,

    /**
     * The ResourceProviderOperationDefinition model constructor.
     * @property {module:model/ResourceProviderOperationDefinition}
     */
    ResourceProviderOperationDefinition,

    /**
     * The ResourceProviderOperationDisplay model constructor.
     * @property {module:model/ResourceProviderOperationDisplay}
     */
    ResourceProviderOperationDisplay,

    /**
     * The ResourceProviderOperationList model constructor.
     * @property {module:model/ResourceProviderOperationList}
     */
    ResourceProviderOperationList,

    /**
     * The Sku model constructor.
     * @property {module:model/Sku}
     */
    Sku,

    /**
     * The TrackedResource model constructor.
     * @property {module:model/TrackedResource}
     */
    TrackedResource,

    /**
    * The ContainerHostMappingsApi service constructor.
    * @property {module:api/ContainerHostMappingsApi}
    */
    ContainerHostMappingsApi,

    /**
    * The ControllersApi service constructor.
    * @property {module:api/ControllersApi}
    */
    ControllersApi,

    /**
    * The OperationsApi service constructor.
    * @property {module:api/OperationsApi}
    */
    OperationsApi
};
