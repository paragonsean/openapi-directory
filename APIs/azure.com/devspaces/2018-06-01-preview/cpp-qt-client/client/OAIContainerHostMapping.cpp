/**
 * DevSpacesManagement
 * Dev Spaces REST API
 *
 * The version of the OpenAPI document: 2018-06-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIContainerHostMapping.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIContainerHostMapping::OAIContainerHostMapping(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIContainerHostMapping::OAIContainerHostMapping() {
    this->initializeModel();
}

OAIContainerHostMapping::~OAIContainerHostMapping() {}

void OAIContainerHostMapping::initializeModel() {

    m_container_host_resource_id_isSet = false;
    m_container_host_resource_id_isValid = false;

    m_mapped_controller_resource_id_isSet = false;
    m_mapped_controller_resource_id_isValid = false;
}

void OAIContainerHostMapping::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIContainerHostMapping::fromJsonObject(QJsonObject json) {

    m_container_host_resource_id_isValid = ::OpenAPI::fromJsonValue(m_container_host_resource_id, json[QString("containerHostResourceId")]);
    m_container_host_resource_id_isSet = !json[QString("containerHostResourceId")].isNull() && m_container_host_resource_id_isValid;

    m_mapped_controller_resource_id_isValid = ::OpenAPI::fromJsonValue(m_mapped_controller_resource_id, json[QString("mappedControllerResourceId")]);
    m_mapped_controller_resource_id_isSet = !json[QString("mappedControllerResourceId")].isNull() && m_mapped_controller_resource_id_isValid;
}

QString OAIContainerHostMapping::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIContainerHostMapping::asJsonObject() const {
    QJsonObject obj;
    if (m_container_host_resource_id_isSet) {
        obj.insert(QString("containerHostResourceId"), ::OpenAPI::toJsonValue(m_container_host_resource_id));
    }
    if (m_mapped_controller_resource_id_isSet) {
        obj.insert(QString("mappedControllerResourceId"), ::OpenAPI::toJsonValue(m_mapped_controller_resource_id));
    }
    return obj;
}

QString OAIContainerHostMapping::getContainerHostResourceId() const {
    return m_container_host_resource_id;
}
void OAIContainerHostMapping::setContainerHostResourceId(const QString &container_host_resource_id) {
    m_container_host_resource_id = container_host_resource_id;
    m_container_host_resource_id_isSet = true;
}

bool OAIContainerHostMapping::is_container_host_resource_id_Set() const{
    return m_container_host_resource_id_isSet;
}

bool OAIContainerHostMapping::is_container_host_resource_id_Valid() const{
    return m_container_host_resource_id_isValid;
}

QString OAIContainerHostMapping::getMappedControllerResourceId() const {
    return m_mapped_controller_resource_id;
}
void OAIContainerHostMapping::setMappedControllerResourceId(const QString &mapped_controller_resource_id) {
    m_mapped_controller_resource_id = mapped_controller_resource_id;
    m_mapped_controller_resource_id_isSet = true;
}

bool OAIContainerHostMapping::is_mapped_controller_resource_id_Set() const{
    return m_mapped_controller_resource_id_isSet;
}

bool OAIContainerHostMapping::is_mapped_controller_resource_id_Valid() const{
    return m_mapped_controller_resource_id_isValid;
}

bool OAIContainerHostMapping::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_container_host_resource_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mapped_controller_resource_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIContainerHostMapping::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
