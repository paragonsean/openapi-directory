/**
 * DataLakeStoreAccountManagementClient
 * Creates an Azure Data Lake Store account management client.
 *
 * The version of the OpenAPI document: 2016-11-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CapabilityInformation model module.
 * @module model/CapabilityInformation
 * @version 2016-11-01
 */
class CapabilityInformation {
    /**
     * Constructs a new <code>CapabilityInformation</code>.
     * Subscription-level properties and limits for Data Lake Store.
     * @alias module:model/CapabilityInformation
     */
    constructor() { 
        
        CapabilityInformation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CapabilityInformation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CapabilityInformation} obj Optional instance to populate.
     * @return {module:model/CapabilityInformation} The populated <code>CapabilityInformation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CapabilityInformation();

            if (data.hasOwnProperty('accountCount')) {
                obj['accountCount'] = ApiClient.convertToType(data['accountCount'], 'Number');
            }
            if (data.hasOwnProperty('maxAccountCount')) {
                obj['maxAccountCount'] = ApiClient.convertToType(data['maxAccountCount'], 'Number');
            }
            if (data.hasOwnProperty('migrationState')) {
                obj['migrationState'] = ApiClient.convertToType(data['migrationState'], 'Boolean');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('subscriptionId')) {
                obj['subscriptionId'] = ApiClient.convertToType(data['subscriptionId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CapabilityInformation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CapabilityInformation</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }
        // ensure the json data is a string
        if (data['subscriptionId'] && !(typeof data['subscriptionId'] === 'string' || data['subscriptionId'] instanceof String)) {
            throw new Error("Expected the field `subscriptionId` to be a primitive type in the JSON string but got " + data['subscriptionId']);
        }

        return true;
    }


}



/**
 * The current number of accounts under this subscription.
 * @member {Number} accountCount
 */
CapabilityInformation.prototype['accountCount'] = undefined;

/**
 * The maximum supported number of accounts under this subscription.
 * @member {Number} maxAccountCount
 */
CapabilityInformation.prototype['maxAccountCount'] = undefined;

/**
 * The Boolean value of true or false to indicate the maintenance state.
 * @member {Boolean} migrationState
 */
CapabilityInformation.prototype['migrationState'] = undefined;

/**
 * The subscription state.
 * @member {module:model/CapabilityInformation.StateEnum} state
 */
CapabilityInformation.prototype['state'] = undefined;

/**
 * The subscription credentials that uniquely identifies the subscription.
 * @member {String} subscriptionId
 */
CapabilityInformation.prototype['subscriptionId'] = undefined;





/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
CapabilityInformation['StateEnum'] = {

    /**
     * value: "Registered"
     * @const
     */
    "Registered": "Registered",

    /**
     * value: "Suspended"
     * @const
     */
    "Suspended": "Suspended",

    /**
     * value: "Deleted"
     * @const
     */
    "Deleted": "Deleted",

    /**
     * value: "Unregistered"
     * @const
     */
    "Unregistered": "Unregistered",

    /**
     * value: "Warned"
     * @const
     */
    "Warned": "Warned"
};



export default CapabilityInformation;

