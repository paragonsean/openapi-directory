/**
 * DataLakeStoreAccountManagementClient
 * Creates an Azure Data Lake Store account management client.
 *
 * The version of the OpenAPI document: 2016-11-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateDataLakeStoreAccountProperties from './CreateDataLakeStoreAccountProperties';
import EncryptionIdentity from './EncryptionIdentity';

/**
 * The CreateDataLakeStoreAccountParameters model module.
 * @module model/CreateDataLakeStoreAccountParameters
 * @version 2016-11-01
 */
class CreateDataLakeStoreAccountParameters {
    /**
     * Constructs a new <code>CreateDataLakeStoreAccountParameters</code>.
     * @alias module:model/CreateDataLakeStoreAccountParameters
     * @param location {String} The resource location.
     */
    constructor(location) { 
        
        CreateDataLakeStoreAccountParameters.initialize(this, location);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, location) { 
        obj['location'] = location;
    }

    /**
     * Constructs a <code>CreateDataLakeStoreAccountParameters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateDataLakeStoreAccountParameters} obj Optional instance to populate.
     * @return {module:model/CreateDataLakeStoreAccountParameters} The populated <code>CreateDataLakeStoreAccountParameters</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateDataLakeStoreAccountParameters();

            if (data.hasOwnProperty('identity')) {
                obj['identity'] = EncryptionIdentity.constructFromObject(data['identity']);
            }
            if (data.hasOwnProperty('location')) {
                obj['location'] = ApiClient.convertToType(data['location'], 'String');
            }
            if (data.hasOwnProperty('properties')) {
                obj['properties'] = CreateDataLakeStoreAccountProperties.constructFromObject(data['properties']);
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], {'String': 'String'});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateDataLakeStoreAccountParameters</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateDataLakeStoreAccountParameters</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateDataLakeStoreAccountParameters.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `identity`
        if (data['identity']) { // data not null
          EncryptionIdentity.validateJSON(data['identity']);
        }
        // ensure the json data is a string
        if (data['location'] && !(typeof data['location'] === 'string' || data['location'] instanceof String)) {
            throw new Error("Expected the field `location` to be a primitive type in the JSON string but got " + data['location']);
        }
        // validate the optional field `properties`
        if (data['properties']) { // data not null
          CreateDataLakeStoreAccountProperties.validateJSON(data['properties']);
        }

        return true;
    }


}

CreateDataLakeStoreAccountParameters.RequiredProperties = ["location"];

/**
 * @member {module:model/EncryptionIdentity} identity
 */
CreateDataLakeStoreAccountParameters.prototype['identity'] = undefined;

/**
 * The resource location.
 * @member {String} location
 */
CreateDataLakeStoreAccountParameters.prototype['location'] = undefined;

/**
 * @member {module:model/CreateDataLakeStoreAccountProperties} properties
 */
CreateDataLakeStoreAccountParameters.prototype['properties'] = undefined;

/**
 * The resource tags.
 * @member {Object.<String, String>} tags
 */
CreateDataLakeStoreAccountParameters.prototype['tags'] = undefined;






export default CreateDataLakeStoreAccountParameters;

