/**
 * DataLakeStoreAccountManagementClient
 * Creates an Azure Data Lake Store account management client.
 *
 * The version of the OpenAPI document: 2016-11-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDataLakeStoreAccountProperties.h
 *
 * Data Lake Store account properties information.
 */

#ifndef OAIDataLakeStoreAccountProperties_H
#define OAIDataLakeStoreAccountProperties_H

#include <QJsonObject>

#include "OAIEncryptionConfig.h"
#include "OAIFirewallRule.h"
#include "OAITrustedIdProvider.h"
#include "OAIVirtualNetworkRule.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIEncryptionConfig;
class OAIFirewallRule;
class OAITrustedIdProvider;
class OAIVirtualNetworkRule;

class OAIDataLakeStoreAccountProperties : public OAIObject {
public:
    OAIDataLakeStoreAccountProperties();
    OAIDataLakeStoreAccountProperties(QString json);
    ~OAIDataLakeStoreAccountProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCurrentTier() const;
    void setCurrentTier(const QString &current_tier);
    bool is_current_tier_Set() const;
    bool is_current_tier_Valid() const;

    QString getDefaultGroup() const;
    void setDefaultGroup(const QString &default_group);
    bool is_default_group_Set() const;
    bool is_default_group_Valid() const;

    OAIEncryptionConfig getEncryptionConfig() const;
    void setEncryptionConfig(const OAIEncryptionConfig &encryption_config);
    bool is_encryption_config_Set() const;
    bool is_encryption_config_Valid() const;

    QString getEncryptionProvisioningState() const;
    void setEncryptionProvisioningState(const QString &encryption_provisioning_state);
    bool is_encryption_provisioning_state_Set() const;
    bool is_encryption_provisioning_state_Valid() const;

    QString getEncryptionState() const;
    void setEncryptionState(const QString &encryption_state);
    bool is_encryption_state_Set() const;
    bool is_encryption_state_Valid() const;

    QString getFirewallAllowAzureIps() const;
    void setFirewallAllowAzureIps(const QString &firewall_allow_azure_ips);
    bool is_firewall_allow_azure_ips_Set() const;
    bool is_firewall_allow_azure_ips_Valid() const;

    QList<OAIFirewallRule> getFirewallRules() const;
    void setFirewallRules(const QList<OAIFirewallRule> &firewall_rules);
    bool is_firewall_rules_Set() const;
    bool is_firewall_rules_Valid() const;

    QString getFirewallState() const;
    void setFirewallState(const QString &firewall_state);
    bool is_firewall_state_Set() const;
    bool is_firewall_state_Valid() const;

    QString getNewTier() const;
    void setNewTier(const QString &new_tier);
    bool is_new_tier_Set() const;
    bool is_new_tier_Valid() const;

    QString getTrustedIdProviderState() const;
    void setTrustedIdProviderState(const QString &trusted_id_provider_state);
    bool is_trusted_id_provider_state_Set() const;
    bool is_trusted_id_provider_state_Valid() const;

    QList<OAITrustedIdProvider> getTrustedIdProviders() const;
    void setTrustedIdProviders(const QList<OAITrustedIdProvider> &trusted_id_providers);
    bool is_trusted_id_providers_Set() const;
    bool is_trusted_id_providers_Valid() const;

    QList<OAIVirtualNetworkRule> getVirtualNetworkRules() const;
    void setVirtualNetworkRules(const QList<OAIVirtualNetworkRule> &virtual_network_rules);
    bool is_virtual_network_rules_Set() const;
    bool is_virtual_network_rules_Valid() const;

    QString getAccountId() const;
    void setAccountId(const QString &account_id);
    bool is_account_id_Set() const;
    bool is_account_id_Valid() const;

    QDateTime getCreationTime() const;
    void setCreationTime(const QDateTime &creation_time);
    bool is_creation_time_Set() const;
    bool is_creation_time_Valid() const;

    QString getEndpoint() const;
    void setEndpoint(const QString &endpoint);
    bool is_endpoint_Set() const;
    bool is_endpoint_Valid() const;

    QDateTime getLastModifiedTime() const;
    void setLastModifiedTime(const QDateTime &last_modified_time);
    bool is_last_modified_time_Set() const;
    bool is_last_modified_time_Valid() const;

    QString getProvisioningState() const;
    void setProvisioningState(const QString &provisioning_state);
    bool is_provisioning_state_Set() const;
    bool is_provisioning_state_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_current_tier;
    bool m_current_tier_isSet;
    bool m_current_tier_isValid;

    QString m_default_group;
    bool m_default_group_isSet;
    bool m_default_group_isValid;

    OAIEncryptionConfig m_encryption_config;
    bool m_encryption_config_isSet;
    bool m_encryption_config_isValid;

    QString m_encryption_provisioning_state;
    bool m_encryption_provisioning_state_isSet;
    bool m_encryption_provisioning_state_isValid;

    QString m_encryption_state;
    bool m_encryption_state_isSet;
    bool m_encryption_state_isValid;

    QString m_firewall_allow_azure_ips;
    bool m_firewall_allow_azure_ips_isSet;
    bool m_firewall_allow_azure_ips_isValid;

    QList<OAIFirewallRule> m_firewall_rules;
    bool m_firewall_rules_isSet;
    bool m_firewall_rules_isValid;

    QString m_firewall_state;
    bool m_firewall_state_isSet;
    bool m_firewall_state_isValid;

    QString m_new_tier;
    bool m_new_tier_isSet;
    bool m_new_tier_isValid;

    QString m_trusted_id_provider_state;
    bool m_trusted_id_provider_state_isSet;
    bool m_trusted_id_provider_state_isValid;

    QList<OAITrustedIdProvider> m_trusted_id_providers;
    bool m_trusted_id_providers_isSet;
    bool m_trusted_id_providers_isValid;

    QList<OAIVirtualNetworkRule> m_virtual_network_rules;
    bool m_virtual_network_rules_isSet;
    bool m_virtual_network_rules_isValid;

    QString m_account_id;
    bool m_account_id_isSet;
    bool m_account_id_isValid;

    QDateTime m_creation_time;
    bool m_creation_time_isSet;
    bool m_creation_time_isValid;

    QString m_endpoint;
    bool m_endpoint_isSet;
    bool m_endpoint_isValid;

    QDateTime m_last_modified_time;
    bool m_last_modified_time_isSet;
    bool m_last_modified_time_isValid;

    QString m_provisioning_state;
    bool m_provisioning_state_isSet;
    bool m_provisioning_state_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDataLakeStoreAccountProperties)

#endif // OAIDataLakeStoreAccountProperties_H
