/**
 * DataLakeStoreAccountManagementClient
 * Creates an Azure Data Lake Store account management client.
 *
 * The version of the OpenAPI document: 2016-11-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateOrUpdateTrustedIdProviderProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateOrUpdateTrustedIdProviderProperties::OAICreateOrUpdateTrustedIdProviderProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateOrUpdateTrustedIdProviderProperties::OAICreateOrUpdateTrustedIdProviderProperties() {
    this->initializeModel();
}

OAICreateOrUpdateTrustedIdProviderProperties::~OAICreateOrUpdateTrustedIdProviderProperties() {}

void OAICreateOrUpdateTrustedIdProviderProperties::initializeModel() {

    m_id_provider_isSet = false;
    m_id_provider_isValid = false;
}

void OAICreateOrUpdateTrustedIdProviderProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateOrUpdateTrustedIdProviderProperties::fromJsonObject(QJsonObject json) {

    m_id_provider_isValid = ::OpenAPI::fromJsonValue(m_id_provider, json[QString("idProvider")]);
    m_id_provider_isSet = !json[QString("idProvider")].isNull() && m_id_provider_isValid;
}

QString OAICreateOrUpdateTrustedIdProviderProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateOrUpdateTrustedIdProviderProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_id_provider_isSet) {
        obj.insert(QString("idProvider"), ::OpenAPI::toJsonValue(m_id_provider));
    }
    return obj;
}

QString OAICreateOrUpdateTrustedIdProviderProperties::getIdProvider() const {
    return m_id_provider;
}
void OAICreateOrUpdateTrustedIdProviderProperties::setIdProvider(const QString &id_provider) {
    m_id_provider = id_provider;
    m_id_provider_isSet = true;
}

bool OAICreateOrUpdateTrustedIdProviderProperties::is_id_provider_Set() const{
    return m_id_provider_isSet;
}

bool OAICreateOrUpdateTrustedIdProviderProperties::is_id_provider_Valid() const{
    return m_id_provider_isValid;
}

bool OAICreateOrUpdateTrustedIdProviderProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_id_provider_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateOrUpdateTrustedIdProviderProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_id_provider_isValid && true;
}

} // namespace OpenAPI
