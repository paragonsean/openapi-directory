# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class VirtualNetworkRuleProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, subnet_id: str=None):
        """VirtualNetworkRuleProperties - a model defined in OpenAPI

        :param subnet_id: The subnet_id of this VirtualNetworkRuleProperties.
        """
        self.openapi_types = {
            'subnet_id': str
        }

        self.attribute_map = {
            'subnet_id': 'subnetId'
        }

        self._subnet_id = subnet_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VirtualNetworkRuleProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VirtualNetworkRuleProperties of this VirtualNetworkRuleProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def subnet_id(self):
        """Gets the subnet_id of this VirtualNetworkRuleProperties.

        The resource identifier for the subnet.

        :return: The subnet_id of this VirtualNetworkRuleProperties.
        :rtype: str
        """
        return self._subnet_id

    @subnet_id.setter
    def subnet_id(self, subnet_id):
        """Sets the subnet_id of this VirtualNetworkRuleProperties.

        The resource identifier for the subnet.

        :param subnet_id: The subnet_id of this VirtualNetworkRuleProperties.
        :type subnet_id: str
        """

        self._subnet_id = subnet_id
