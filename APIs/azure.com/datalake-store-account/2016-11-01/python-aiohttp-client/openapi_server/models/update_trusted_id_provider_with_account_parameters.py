# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.update_trusted_id_provider_properties import UpdateTrustedIdProviderProperties
from openapi_server import util


class UpdateTrustedIdProviderWithAccountParameters(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, properties: UpdateTrustedIdProviderProperties=None):
        """UpdateTrustedIdProviderWithAccountParameters - a model defined in OpenAPI

        :param name: The name of this UpdateTrustedIdProviderWithAccountParameters.
        :param properties: The properties of this UpdateTrustedIdProviderWithAccountParameters.
        """
        self.openapi_types = {
            'name': str,
            'properties': UpdateTrustedIdProviderProperties
        }

        self.attribute_map = {
            'name': 'name',
            'properties': 'properties'
        }

        self._name = name
        self._properties = properties

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateTrustedIdProviderWithAccountParameters':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateTrustedIdProviderWithAccountParameters of this UpdateTrustedIdProviderWithAccountParameters.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this UpdateTrustedIdProviderWithAccountParameters.

        The unique name of the trusted identity provider to update.

        :return: The name of this UpdateTrustedIdProviderWithAccountParameters.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this UpdateTrustedIdProviderWithAccountParameters.

        The unique name of the trusted identity provider to update.

        :param name: The name of this UpdateTrustedIdProviderWithAccountParameters.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def properties(self):
        """Gets the properties of this UpdateTrustedIdProviderWithAccountParameters.


        :return: The properties of this UpdateTrustedIdProviderWithAccountParameters.
        :rtype: UpdateTrustedIdProviderProperties
        """
        return self._properties

    @properties.setter
    def properties(self, properties):
        """Sets the properties of this UpdateTrustedIdProviderWithAccountParameters.


        :param properties: The properties of this UpdateTrustedIdProviderWithAccountParameters.
        :type properties: UpdateTrustedIdProviderProperties
        """

        self._properties = properties
