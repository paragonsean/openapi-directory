/*
 * DataLakeStoreAccountManagementClient
 * Creates an Azure Data Lake Store account management client.
 *
 * The version of the OpenAPI document: 2016-11-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CreateOrUpdateTrustedIdProviderParameters;
import org.openapitools.client.model.TrustedIdProvider;
import org.openapitools.client.model.TrustedIdProviderListResult;
import org.openapitools.client.model.UpdateTrustedIdProviderParameters;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TrustedIdProvidersApi
 */
@Disabled
public class TrustedIdProvidersApiTest {

    private final TrustedIdProvidersApi api = new TrustedIdProvidersApi();

    /**
     * Creates or updates the specified trusted identity provider. During update, the trusted identity provider with the specified name will be replaced with this new provider
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void trustedIdProvidersCreateOrUpdateTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String accountName = null;
        String trustedIdProviderName = null;
        String apiVersion = null;
        CreateOrUpdateTrustedIdProviderParameters parameters = null;
        TrustedIdProvider response = api.trustedIdProvidersCreateOrUpdate(subscriptionId, resourceGroupName, accountName, trustedIdProviderName, apiVersion, parameters);
        // TODO: test validations
    }

    /**
     * Deletes the specified trusted identity provider from the specified Data Lake Store account
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void trustedIdProvidersDeleteTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String accountName = null;
        String trustedIdProviderName = null;
        String apiVersion = null;
        api.trustedIdProvidersDelete(subscriptionId, resourceGroupName, accountName, trustedIdProviderName, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets the specified Data Lake Store trusted identity provider.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void trustedIdProvidersGetTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String accountName = null;
        String trustedIdProviderName = null;
        String apiVersion = null;
        TrustedIdProvider response = api.trustedIdProvidersGet(subscriptionId, resourceGroupName, accountName, trustedIdProviderName, apiVersion);
        // TODO: test validations
    }

    /**
     * Lists the Data Lake Store trusted identity providers within the specified Data Lake Store account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void trustedIdProvidersListByAccountTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String accountName = null;
        String apiVersion = null;
        TrustedIdProviderListResult response = api.trustedIdProvidersListByAccount(subscriptionId, resourceGroupName, accountName, apiVersion);
        // TODO: test validations
    }

    /**
     * Updates the specified trusted identity provider.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void trustedIdProvidersUpdateTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String accountName = null;
        String trustedIdProviderName = null;
        String apiVersion = null;
        UpdateTrustedIdProviderParameters parameters = null;
        TrustedIdProvider response = api.trustedIdProvidersUpdate(subscriptionId, resourceGroupName, accountName, trustedIdProviderName, apiVersion, parameters);
        // TODO: test validations
    }

}
