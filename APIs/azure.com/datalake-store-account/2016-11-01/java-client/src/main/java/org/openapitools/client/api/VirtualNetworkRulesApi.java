/*
 * DataLakeStoreAccountManagementClient
 * Creates an Azure Data Lake Store account management client.
 *
 * The version of the OpenAPI document: 2016-11-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.CreateOrUpdateVirtualNetworkRuleParameters;
import org.openapitools.client.model.UpdateVirtualNetworkRuleParameters;
import org.openapitools.client.model.VirtualNetworkRule;
import org.openapitools.client.model.VirtualNetworkRuleListResult;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class VirtualNetworkRulesApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public VirtualNetworkRulesApi() {
        this(Configuration.getDefaultApiClient());
    }

    public VirtualNetworkRulesApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for virtualNetworkRulesCreateOrUpdate
     * @param subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the Azure resource group. (required)
     * @param accountName The name of the Data Lake Store account. (required)
     * @param virtualNetworkRuleName The name of the virtual network rule to create or update. (required)
     * @param apiVersion Client Api Version. (required)
     * @param parameters Parameters supplied to create or update the virtual network rule. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successfully created or updated the specified virtual network rule. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualNetworkRulesCreateOrUpdateCall(String subscriptionId, String resourceGroupName, String accountName, String virtualNetworkRuleName, String apiVersion, CreateOrUpdateVirtualNetworkRuleParameters parameters, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = parameters;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/virtualNetworkRules/{virtualNetworkRuleName}"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "accountName" + "}", localVarApiClient.escapeString(accountName.toString()))
            .replace("{" + "virtualNetworkRuleName" + "}", localVarApiClient.escapeString(virtualNetworkRuleName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call virtualNetworkRulesCreateOrUpdateValidateBeforeCall(String subscriptionId, String resourceGroupName, String accountName, String virtualNetworkRuleName, String apiVersion, CreateOrUpdateVirtualNetworkRuleParameters parameters, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling virtualNetworkRulesCreateOrUpdate(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling virtualNetworkRulesCreateOrUpdate(Async)");
        }

        // verify the required parameter 'accountName' is set
        if (accountName == null) {
            throw new ApiException("Missing the required parameter 'accountName' when calling virtualNetworkRulesCreateOrUpdate(Async)");
        }

        // verify the required parameter 'virtualNetworkRuleName' is set
        if (virtualNetworkRuleName == null) {
            throw new ApiException("Missing the required parameter 'virtualNetworkRuleName' when calling virtualNetworkRulesCreateOrUpdate(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling virtualNetworkRulesCreateOrUpdate(Async)");
        }

        // verify the required parameter 'parameters' is set
        if (parameters == null) {
            throw new ApiException("Missing the required parameter 'parameters' when calling virtualNetworkRulesCreateOrUpdate(Async)");
        }

        return virtualNetworkRulesCreateOrUpdateCall(subscriptionId, resourceGroupName, accountName, virtualNetworkRuleName, apiVersion, parameters, _callback);

    }

    /**
     * 
     * Creates or updates the specified virtual network rule. During update, the virtual network rule with the specified name will be replaced with this new virtual network rule.
     * @param subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the Azure resource group. (required)
     * @param accountName The name of the Data Lake Store account. (required)
     * @param virtualNetworkRuleName The name of the virtual network rule to create or update. (required)
     * @param apiVersion Client Api Version. (required)
     * @param parameters Parameters supplied to create or update the virtual network rule. (required)
     * @return VirtualNetworkRule
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successfully created or updated the specified virtual network rule. </td><td>  -  </td></tr>
     </table>
     */
    public VirtualNetworkRule virtualNetworkRulesCreateOrUpdate(String subscriptionId, String resourceGroupName, String accountName, String virtualNetworkRuleName, String apiVersion, CreateOrUpdateVirtualNetworkRuleParameters parameters) throws ApiException {
        ApiResponse<VirtualNetworkRule> localVarResp = virtualNetworkRulesCreateOrUpdateWithHttpInfo(subscriptionId, resourceGroupName, accountName, virtualNetworkRuleName, apiVersion, parameters);
        return localVarResp.getData();
    }

    /**
     * 
     * Creates or updates the specified virtual network rule. During update, the virtual network rule with the specified name will be replaced with this new virtual network rule.
     * @param subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the Azure resource group. (required)
     * @param accountName The name of the Data Lake Store account. (required)
     * @param virtualNetworkRuleName The name of the virtual network rule to create or update. (required)
     * @param apiVersion Client Api Version. (required)
     * @param parameters Parameters supplied to create or update the virtual network rule. (required)
     * @return ApiResponse&lt;VirtualNetworkRule&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successfully created or updated the specified virtual network rule. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<VirtualNetworkRule> virtualNetworkRulesCreateOrUpdateWithHttpInfo(String subscriptionId, String resourceGroupName, String accountName, String virtualNetworkRuleName, String apiVersion, CreateOrUpdateVirtualNetworkRuleParameters parameters) throws ApiException {
        okhttp3.Call localVarCall = virtualNetworkRulesCreateOrUpdateValidateBeforeCall(subscriptionId, resourceGroupName, accountName, virtualNetworkRuleName, apiVersion, parameters, null);
        Type localVarReturnType = new TypeToken<VirtualNetworkRule>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Creates or updates the specified virtual network rule. During update, the virtual network rule with the specified name will be replaced with this new virtual network rule.
     * @param subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the Azure resource group. (required)
     * @param accountName The name of the Data Lake Store account. (required)
     * @param virtualNetworkRuleName The name of the virtual network rule to create or update. (required)
     * @param apiVersion Client Api Version. (required)
     * @param parameters Parameters supplied to create or update the virtual network rule. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successfully created or updated the specified virtual network rule. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualNetworkRulesCreateOrUpdateAsync(String subscriptionId, String resourceGroupName, String accountName, String virtualNetworkRuleName, String apiVersion, CreateOrUpdateVirtualNetworkRuleParameters parameters, final ApiCallback<VirtualNetworkRule> _callback) throws ApiException {

        okhttp3.Call localVarCall = virtualNetworkRulesCreateOrUpdateValidateBeforeCall(subscriptionId, resourceGroupName, accountName, virtualNetworkRuleName, apiVersion, parameters, _callback);
        Type localVarReturnType = new TypeToken<VirtualNetworkRule>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for virtualNetworkRulesDelete
     * @param subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the Azure resource group. (required)
     * @param accountName The name of the Data Lake Store account. (required)
     * @param virtualNetworkRuleName The name of the virtual network rule to delete. (required)
     * @param apiVersion Client Api Version. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successfully deleted the specified virtual network rule. </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> The specified virtual network rule does not exist or was already deleted. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualNetworkRulesDeleteCall(String subscriptionId, String resourceGroupName, String accountName, String virtualNetworkRuleName, String apiVersion, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/virtualNetworkRules/{virtualNetworkRuleName}"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "accountName" + "}", localVarApiClient.escapeString(accountName.toString()))
            .replace("{" + "virtualNetworkRuleName" + "}", localVarApiClient.escapeString(virtualNetworkRuleName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call virtualNetworkRulesDeleteValidateBeforeCall(String subscriptionId, String resourceGroupName, String accountName, String virtualNetworkRuleName, String apiVersion, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling virtualNetworkRulesDelete(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling virtualNetworkRulesDelete(Async)");
        }

        // verify the required parameter 'accountName' is set
        if (accountName == null) {
            throw new ApiException("Missing the required parameter 'accountName' when calling virtualNetworkRulesDelete(Async)");
        }

        // verify the required parameter 'virtualNetworkRuleName' is set
        if (virtualNetworkRuleName == null) {
            throw new ApiException("Missing the required parameter 'virtualNetworkRuleName' when calling virtualNetworkRulesDelete(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling virtualNetworkRulesDelete(Async)");
        }

        return virtualNetworkRulesDeleteCall(subscriptionId, resourceGroupName, accountName, virtualNetworkRuleName, apiVersion, _callback);

    }

    /**
     * 
     * Deletes the specified virtual network rule from the specified Data Lake Store account.
     * @param subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the Azure resource group. (required)
     * @param accountName The name of the Data Lake Store account. (required)
     * @param virtualNetworkRuleName The name of the virtual network rule to delete. (required)
     * @param apiVersion Client Api Version. (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successfully deleted the specified virtual network rule. </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> The specified virtual network rule does not exist or was already deleted. </td><td>  -  </td></tr>
     </table>
     */
    public void virtualNetworkRulesDelete(String subscriptionId, String resourceGroupName, String accountName, String virtualNetworkRuleName, String apiVersion) throws ApiException {
        virtualNetworkRulesDeleteWithHttpInfo(subscriptionId, resourceGroupName, accountName, virtualNetworkRuleName, apiVersion);
    }

    /**
     * 
     * Deletes the specified virtual network rule from the specified Data Lake Store account.
     * @param subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the Azure resource group. (required)
     * @param accountName The name of the Data Lake Store account. (required)
     * @param virtualNetworkRuleName The name of the virtual network rule to delete. (required)
     * @param apiVersion Client Api Version. (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successfully deleted the specified virtual network rule. </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> The specified virtual network rule does not exist or was already deleted. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> virtualNetworkRulesDeleteWithHttpInfo(String subscriptionId, String resourceGroupName, String accountName, String virtualNetworkRuleName, String apiVersion) throws ApiException {
        okhttp3.Call localVarCall = virtualNetworkRulesDeleteValidateBeforeCall(subscriptionId, resourceGroupName, accountName, virtualNetworkRuleName, apiVersion, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     *  (asynchronously)
     * Deletes the specified virtual network rule from the specified Data Lake Store account.
     * @param subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the Azure resource group. (required)
     * @param accountName The name of the Data Lake Store account. (required)
     * @param virtualNetworkRuleName The name of the virtual network rule to delete. (required)
     * @param apiVersion Client Api Version. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successfully deleted the specified virtual network rule. </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> The specified virtual network rule does not exist or was already deleted. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualNetworkRulesDeleteAsync(String subscriptionId, String resourceGroupName, String accountName, String virtualNetworkRuleName, String apiVersion, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = virtualNetworkRulesDeleteValidateBeforeCall(subscriptionId, resourceGroupName, accountName, virtualNetworkRuleName, apiVersion, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for virtualNetworkRulesGet
     * @param subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the Azure resource group. (required)
     * @param accountName The name of the Data Lake Store account. (required)
     * @param virtualNetworkRuleName The name of the virtual network rule to retrieve. (required)
     * @param apiVersion Client Api Version. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successfully retrieved the virtual network rule. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualNetworkRulesGetCall(String subscriptionId, String resourceGroupName, String accountName, String virtualNetworkRuleName, String apiVersion, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/virtualNetworkRules/{virtualNetworkRuleName}"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "accountName" + "}", localVarApiClient.escapeString(accountName.toString()))
            .replace("{" + "virtualNetworkRuleName" + "}", localVarApiClient.escapeString(virtualNetworkRuleName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call virtualNetworkRulesGetValidateBeforeCall(String subscriptionId, String resourceGroupName, String accountName, String virtualNetworkRuleName, String apiVersion, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling virtualNetworkRulesGet(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling virtualNetworkRulesGet(Async)");
        }

        // verify the required parameter 'accountName' is set
        if (accountName == null) {
            throw new ApiException("Missing the required parameter 'accountName' when calling virtualNetworkRulesGet(Async)");
        }

        // verify the required parameter 'virtualNetworkRuleName' is set
        if (virtualNetworkRuleName == null) {
            throw new ApiException("Missing the required parameter 'virtualNetworkRuleName' when calling virtualNetworkRulesGet(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling virtualNetworkRulesGet(Async)");
        }

        return virtualNetworkRulesGetCall(subscriptionId, resourceGroupName, accountName, virtualNetworkRuleName, apiVersion, _callback);

    }

    /**
     * 
     * Gets the specified Data Lake Store virtual network rule.
     * @param subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the Azure resource group. (required)
     * @param accountName The name of the Data Lake Store account. (required)
     * @param virtualNetworkRuleName The name of the virtual network rule to retrieve. (required)
     * @param apiVersion Client Api Version. (required)
     * @return VirtualNetworkRule
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successfully retrieved the virtual network rule. </td><td>  -  </td></tr>
     </table>
     */
    public VirtualNetworkRule virtualNetworkRulesGet(String subscriptionId, String resourceGroupName, String accountName, String virtualNetworkRuleName, String apiVersion) throws ApiException {
        ApiResponse<VirtualNetworkRule> localVarResp = virtualNetworkRulesGetWithHttpInfo(subscriptionId, resourceGroupName, accountName, virtualNetworkRuleName, apiVersion);
        return localVarResp.getData();
    }

    /**
     * 
     * Gets the specified Data Lake Store virtual network rule.
     * @param subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the Azure resource group. (required)
     * @param accountName The name of the Data Lake Store account. (required)
     * @param virtualNetworkRuleName The name of the virtual network rule to retrieve. (required)
     * @param apiVersion Client Api Version. (required)
     * @return ApiResponse&lt;VirtualNetworkRule&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successfully retrieved the virtual network rule. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<VirtualNetworkRule> virtualNetworkRulesGetWithHttpInfo(String subscriptionId, String resourceGroupName, String accountName, String virtualNetworkRuleName, String apiVersion) throws ApiException {
        okhttp3.Call localVarCall = virtualNetworkRulesGetValidateBeforeCall(subscriptionId, resourceGroupName, accountName, virtualNetworkRuleName, apiVersion, null);
        Type localVarReturnType = new TypeToken<VirtualNetworkRule>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Gets the specified Data Lake Store virtual network rule.
     * @param subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the Azure resource group. (required)
     * @param accountName The name of the Data Lake Store account. (required)
     * @param virtualNetworkRuleName The name of the virtual network rule to retrieve. (required)
     * @param apiVersion Client Api Version. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successfully retrieved the virtual network rule. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualNetworkRulesGetAsync(String subscriptionId, String resourceGroupName, String accountName, String virtualNetworkRuleName, String apiVersion, final ApiCallback<VirtualNetworkRule> _callback) throws ApiException {

        okhttp3.Call localVarCall = virtualNetworkRulesGetValidateBeforeCall(subscriptionId, resourceGroupName, accountName, virtualNetworkRuleName, apiVersion, _callback);
        Type localVarReturnType = new TypeToken<VirtualNetworkRule>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for virtualNetworkRulesListByAccount
     * @param subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the Azure resource group. (required)
     * @param accountName The name of the Data Lake Store account. (required)
     * @param apiVersion Client Api Version. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successfully retrieved the list of virtual network rules. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualNetworkRulesListByAccountCall(String subscriptionId, String resourceGroupName, String accountName, String apiVersion, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/virtualNetworkRules"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "accountName" + "}", localVarApiClient.escapeString(accountName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call virtualNetworkRulesListByAccountValidateBeforeCall(String subscriptionId, String resourceGroupName, String accountName, String apiVersion, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling virtualNetworkRulesListByAccount(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling virtualNetworkRulesListByAccount(Async)");
        }

        // verify the required parameter 'accountName' is set
        if (accountName == null) {
            throw new ApiException("Missing the required parameter 'accountName' when calling virtualNetworkRulesListByAccount(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling virtualNetworkRulesListByAccount(Async)");
        }

        return virtualNetworkRulesListByAccountCall(subscriptionId, resourceGroupName, accountName, apiVersion, _callback);

    }

    /**
     * 
     * Lists the Data Lake Store virtual network rules within the specified Data Lake Store account.
     * @param subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the Azure resource group. (required)
     * @param accountName The name of the Data Lake Store account. (required)
     * @param apiVersion Client Api Version. (required)
     * @return VirtualNetworkRuleListResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successfully retrieved the list of virtual network rules. </td><td>  -  </td></tr>
     </table>
     */
    public VirtualNetworkRuleListResult virtualNetworkRulesListByAccount(String subscriptionId, String resourceGroupName, String accountName, String apiVersion) throws ApiException {
        ApiResponse<VirtualNetworkRuleListResult> localVarResp = virtualNetworkRulesListByAccountWithHttpInfo(subscriptionId, resourceGroupName, accountName, apiVersion);
        return localVarResp.getData();
    }

    /**
     * 
     * Lists the Data Lake Store virtual network rules within the specified Data Lake Store account.
     * @param subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the Azure resource group. (required)
     * @param accountName The name of the Data Lake Store account. (required)
     * @param apiVersion Client Api Version. (required)
     * @return ApiResponse&lt;VirtualNetworkRuleListResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successfully retrieved the list of virtual network rules. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<VirtualNetworkRuleListResult> virtualNetworkRulesListByAccountWithHttpInfo(String subscriptionId, String resourceGroupName, String accountName, String apiVersion) throws ApiException {
        okhttp3.Call localVarCall = virtualNetworkRulesListByAccountValidateBeforeCall(subscriptionId, resourceGroupName, accountName, apiVersion, null);
        Type localVarReturnType = new TypeToken<VirtualNetworkRuleListResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Lists the Data Lake Store virtual network rules within the specified Data Lake Store account.
     * @param subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the Azure resource group. (required)
     * @param accountName The name of the Data Lake Store account. (required)
     * @param apiVersion Client Api Version. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successfully retrieved the list of virtual network rules. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualNetworkRulesListByAccountAsync(String subscriptionId, String resourceGroupName, String accountName, String apiVersion, final ApiCallback<VirtualNetworkRuleListResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = virtualNetworkRulesListByAccountValidateBeforeCall(subscriptionId, resourceGroupName, accountName, apiVersion, _callback);
        Type localVarReturnType = new TypeToken<VirtualNetworkRuleListResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for virtualNetworkRulesUpdate
     * @param subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the Azure resource group. (required)
     * @param accountName The name of the Data Lake Store account. (required)
     * @param virtualNetworkRuleName The name of the virtual network rule to update. (required)
     * @param apiVersion Client Api Version. (required)
     * @param parameters Parameters supplied to update the virtual network rule. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successfully updated the specified virtual network rule. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualNetworkRulesUpdateCall(String subscriptionId, String resourceGroupName, String accountName, String virtualNetworkRuleName, String apiVersion, UpdateVirtualNetworkRuleParameters parameters, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = parameters;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/virtualNetworkRules/{virtualNetworkRuleName}"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "accountName" + "}", localVarApiClient.escapeString(accountName.toString()))
            .replace("{" + "virtualNetworkRuleName" + "}", localVarApiClient.escapeString(virtualNetworkRuleName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PATCH", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call virtualNetworkRulesUpdateValidateBeforeCall(String subscriptionId, String resourceGroupName, String accountName, String virtualNetworkRuleName, String apiVersion, UpdateVirtualNetworkRuleParameters parameters, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling virtualNetworkRulesUpdate(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling virtualNetworkRulesUpdate(Async)");
        }

        // verify the required parameter 'accountName' is set
        if (accountName == null) {
            throw new ApiException("Missing the required parameter 'accountName' when calling virtualNetworkRulesUpdate(Async)");
        }

        // verify the required parameter 'virtualNetworkRuleName' is set
        if (virtualNetworkRuleName == null) {
            throw new ApiException("Missing the required parameter 'virtualNetworkRuleName' when calling virtualNetworkRulesUpdate(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling virtualNetworkRulesUpdate(Async)");
        }

        return virtualNetworkRulesUpdateCall(subscriptionId, resourceGroupName, accountName, virtualNetworkRuleName, apiVersion, parameters, _callback);

    }

    /**
     * 
     * Updates the specified virtual network rule.
     * @param subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the Azure resource group. (required)
     * @param accountName The name of the Data Lake Store account. (required)
     * @param virtualNetworkRuleName The name of the virtual network rule to update. (required)
     * @param apiVersion Client Api Version. (required)
     * @param parameters Parameters supplied to update the virtual network rule. (optional)
     * @return VirtualNetworkRule
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successfully updated the specified virtual network rule. </td><td>  -  </td></tr>
     </table>
     */
    public VirtualNetworkRule virtualNetworkRulesUpdate(String subscriptionId, String resourceGroupName, String accountName, String virtualNetworkRuleName, String apiVersion, UpdateVirtualNetworkRuleParameters parameters) throws ApiException {
        ApiResponse<VirtualNetworkRule> localVarResp = virtualNetworkRulesUpdateWithHttpInfo(subscriptionId, resourceGroupName, accountName, virtualNetworkRuleName, apiVersion, parameters);
        return localVarResp.getData();
    }

    /**
     * 
     * Updates the specified virtual network rule.
     * @param subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the Azure resource group. (required)
     * @param accountName The name of the Data Lake Store account. (required)
     * @param virtualNetworkRuleName The name of the virtual network rule to update. (required)
     * @param apiVersion Client Api Version. (required)
     * @param parameters Parameters supplied to update the virtual network rule. (optional)
     * @return ApiResponse&lt;VirtualNetworkRule&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successfully updated the specified virtual network rule. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<VirtualNetworkRule> virtualNetworkRulesUpdateWithHttpInfo(String subscriptionId, String resourceGroupName, String accountName, String virtualNetworkRuleName, String apiVersion, UpdateVirtualNetworkRuleParameters parameters) throws ApiException {
        okhttp3.Call localVarCall = virtualNetworkRulesUpdateValidateBeforeCall(subscriptionId, resourceGroupName, accountName, virtualNetworkRuleName, apiVersion, parameters, null);
        Type localVarReturnType = new TypeToken<VirtualNetworkRule>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Updates the specified virtual network rule.
     * @param subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the Azure resource group. (required)
     * @param accountName The name of the Data Lake Store account. (required)
     * @param virtualNetworkRuleName The name of the virtual network rule to update. (required)
     * @param apiVersion Client Api Version. (required)
     * @param parameters Parameters supplied to update the virtual network rule. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successfully updated the specified virtual network rule. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualNetworkRulesUpdateAsync(String subscriptionId, String resourceGroupName, String accountName, String virtualNetworkRuleName, String apiVersion, UpdateVirtualNetworkRuleParameters parameters, final ApiCallback<VirtualNetworkRule> _callback) throws ApiException {

        okhttp3.Call localVarCall = virtualNetworkRulesUpdateValidateBeforeCall(subscriptionId, resourceGroupName, accountName, virtualNetworkRuleName, apiVersion, parameters, _callback);
        Type localVarReturnType = new TypeToken<VirtualNetworkRule>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
