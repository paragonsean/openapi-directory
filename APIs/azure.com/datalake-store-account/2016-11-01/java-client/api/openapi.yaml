openapi: 3.0.1
info:
  description: Creates an Azure Data Lake Store account management client.
  title: DataLakeStoreAccountManagementClient
  version: 2016-11-01
  x-apisguru-categories:
  - cloud
  x-logo:
    url: https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png
  x-origin:
  - format: swagger
    url: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/datalake-store/resource-manager/Microsoft.DataLakeStore/stable/2016-11-01/account.json
    version: "2.0"
  x-preferred: true
  x-providerName: azure.com
  x-serviceName: datalake-store-account
  x-tags:
  - Azure
  - Microsoft
servers:
- url: https://management.azure.com/
security:
- azure_auth:
  - user_impersonation
paths:
  /providers/Microsoft.DataLakeStore/operations:
    get:
      description: Lists all of the available Data Lake Store REST API operations.
      operationId: Operations_List
      parameters:
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
          description: Successfully listed the available operations for Data Lake
            Store.
      tags:
      - Operations
      x-ms-examples:
        Lists all of the available Data Lake Store REST API operations:
          parameters:
            api-version: 2016-11-01
          responses:
            "200":
              body:
                nextLink: https://management.azure.com/subscriptions/34adfa4f-cedf-4dc0-ba29-b6d1a69ab345/resourceGroups/contosorg/providers/Microsoft.DataLakeAnalytics/accounts/contosoadla/jobPolicies?api-version=2016-11-01&%24skiptoken=<token>
                value:
                - display:
                    description: Get available operations of DataLakeStore.
                    operation: Get Available Operations
                    provider: Microsoft DataLakeStore
                    resource: Available Operations
                  name: Microsoft.DataLakeStore/operations/read
      x-accepts:
      - application/json
  /subscriptions/{subscriptionId}/providers/Microsoft.DataLakeStore/accounts:
    get:
      description: "Lists the Data Lake Store accounts within the subscription. The\
        \ response includes a link to the next page of results, if any."
      operationId: Accounts_List
      parameters:
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: OData filter. Optional.
        in: query
        name: $filter
        schema:
          type: string
      - description: The number of items to return. Optional.
        in: query
        name: $top
        schema:
          format: int32
          minimum: 1
          type: integer
      - description: The number of items to skip over before returning elements. Optional.
        in: query
        name: $skip
        schema:
          format: int32
          minimum: 1
          type: integer
      - description: "OData Select statement. Limits the properties on each entry\
          \ to just those requested, e.g. Categories?$select=CategoryName,Description.\
          \ Optional."
        in: query
        name: $select
        schema:
          type: string
      - description: "OrderBy clause. One or more comma-separated expressions with\
          \ an optional \"asc\" (the default) or \"desc\" depending on the order you'd\
          \ like the values sorted, e.g. Categories?$orderby=CategoryName desc. Optional."
        in: query
        name: $orderby
        schema:
          type: string
      - description: "The Boolean value of true or false to request a count of the\
          \ matching resources included with the resources in the response, e.g. Categories?$count=true.\
          \ Optional."
        in: query
        name: $count
        schema:
          type: boolean
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataLakeStoreAccountListResult'
          description: Successfully retrieved the list of accounts.
      tags:
      - Accounts
      x-ms-examples:
        Lists the Data Lake Store accounts within the subscription:
          parameters:
            $count: false
            $filter: test_filter
            $orderby: test_orderby
            $select: test_select
            $skip: 1
            $top: 1
            api-version: 2016-11-01
            subscriptionId: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
          responses:
            "200":
              body:
                nextLink: https://management.azure.com/subscriptions/34adfa4f-cedf-4dc0-ba29-b6d1a69ab345/resourceGroups/contosorg/providers/Microsoft.DataLakeStore/accounts/contosoadla/jobPolicies?api-version=2016-11-01&%24skiptoken=<token>
                value:
                - id: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
                  location: eastus2
                  name: contosoadla
                  properties:
                    accountId: 94f4bf5d-78a9-4c31-8aa7-b34d07bad898
                    creationTime: 2017-04-14T13:21:56.6819037-07:00
                    endpoint: testadlfs17607.azuredatalakestore.net
                    lastModifiedTime: 2017-04-14T13:21:56.6819037-07:00
                    provisioningState: Succeeded
                    state: Active
                  tags:
                    test_key: test_value
                  type: test_type
      x-ms-odata: '#/definitions/DataLakeStoreAccountBasic'
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
  /subscriptions/{subscriptionId}/providers/Microsoft.DataLakeStore/locations/{location}/capability:
    get:
      description: Gets subscription-level properties and limits for Data Lake Store
        specified by resource location.
      operationId: Locations_GetCapability
      parameters:
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: The resource location without whitespace.
        in: path
        name: location
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CapabilityInformation'
          description: Successfully retrieved the subscription-level properties and
            limits for Data Lake Store specified by resource location.
        "404":
          content: {}
          description: Subscription not found.
      tags:
      - Locations
      x-ms-examples:
        Gets subscription-level properties and limits for Data Lake Store specified by resource location:
          parameters:
            api-version: 2016-11-01
            location: EastUS2
            subscriptionId: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
          responses:
            "200":
              body:
                accountCount: 100
                maxAccountCount: 150
                migrationState: false
                state: Registered
                subscriptionId: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
            "404": {}
      x-accepts:
      - application/json
  /subscriptions/{subscriptionId}/providers/Microsoft.DataLakeStore/locations/{location}/checkNameAvailability:
    post:
      description: Checks whether the specified account name is available or taken.
      operationId: Accounts_CheckNameAvailability
      parameters:
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: The resource location without whitespace.
        in: path
        name: location
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckNameAvailabilityParameters'
        description: Parameters supplied to check the Data Lake Store account name
          availability.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NameAvailabilityInformation'
          description: Successfully retrieved the Data Lake Store account name availability
            information.
      tags:
      - Accounts
      x-ms-examples:
        Checks whether the specified account name is available or taken:
          parameters:
            api-version: 2016-11-01
            location: EastUS2
            parameters:
              name: contosoadla
              type: Microsoft.DataLakeStore/accounts
            subscriptionId: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
          responses:
            "200":
              body:
                message: An account named 'abc' already exists.
                nameAvailable: false
                reason: AlreadyExists
      x-codegen-request-body-name: parameters
      x-content-type: application/json
      x-accepts:
      - application/json
  /subscriptions/{subscriptionId}/providers/Microsoft.DataLakeStore/locations/{location}/usages:
    get:
      description: Gets the current usage count and the limit for the resources of
        the location under the subscription.
      operationId: Locations_GetUsage
      parameters:
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: The resource location without whitespace.
        in: path
        name: location
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsageListResult'
          description: OK -- current usage count and limit retrieved and returned
            successfully.
      tags:
      - LocationUsage
      x-ms-examples:
        UsageList:
          parameters:
            api-version: 2016-11-01
            location: WestUS
            subscriptionId: "{subscription-id}"
          responses:
            "200":
              body:
                value:
                - currentValue: 69
                  id: /subscriptions/0f936178-0d48-4777-a7ab-47860b604941/providers/Microsoft.DataLakeStore/locations/WestUS/usages/DataLakeStoreAccounts
                  limit: -1
                  name:
                    localizedValue: Data Lake Store Accounts
                    value: DataLakeStoreAccounts
                  unit: Count
      x-ms-pageable: {}
      x-accepts:
      - application/json
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts:
    get:
      description: "Lists the Data Lake Store accounts within a specific resource\
        \ group. The response includes a link to the next page of results, if any."
      operationId: Accounts_ListByResourceGroup
      parameters:
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: The name of the Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: OData filter. Optional.
        in: query
        name: $filter
        schema:
          type: string
      - description: The number of items to return. Optional.
        in: query
        name: $top
        schema:
          format: int32
          minimum: 1
          type: integer
      - description: The number of items to skip over before returning elements. Optional.
        in: query
        name: $skip
        schema:
          format: int32
          minimum: 1
          type: integer
      - description: "OData Select statement. Limits the properties on each entry\
          \ to just those requested, e.g. Categories?$select=CategoryName,Description.\
          \ Optional."
        in: query
        name: $select
        schema:
          type: string
      - description: "OrderBy clause. One or more comma-separated expressions with\
          \ an optional \"asc\" (the default) or \"desc\" depending on the order you'd\
          \ like the values sorted, e.g. Categories?$orderby=CategoryName desc. Optional."
        in: query
        name: $orderby
        schema:
          type: string
      - description: "A Boolean value of true or false to request a count of the matching\
          \ resources included with the resources in the response, e.g. Categories?$count=true.\
          \ Optional."
        in: query
        name: $count
        schema:
          type: boolean
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataLakeStoreAccountListResult'
          description: Successfully retrieved the list of accounts in the specified
            resource group.
      tags:
      - Accounts
      x-ms-examples:
        Lists the Data Lake Store accounts within a specific resource group:
          parameters:
            $count: false
            $filter: test_filter
            $orderby: test_orderby
            $select: test_select
            $skip: 1
            $top: 1
            api-version: 2016-11-01
            resourceGroupName: contosorg
            subscriptionId: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
          responses:
            "200":
              body:
                nextLink: https://management.azure.com/subscriptions/34adfa4f-cedf-4dc0-ba29-b6d1a69ab345/resourceGroups/contosorg/providers/Microsoft.DataLakeStore/accounts/contosoadla/jobPolicies?api-version=2016-11-01&%24skiptoken=<token>
                value:
                - id: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
                  location: eastus2
                  name: contosoadla
                  properties:
                    accountId: 94f4bf5d-78a9-4c31-8aa7-b34d07bad898
                    creationTime: 2017-04-14T13:21:56.6819037-07:00
                    endpoint: testadlfs17607.azuredatalakestore.net
                    lastModifiedTime: 2017-04-14T13:21:56.6819037-07:00
                    provisioningState: Succeeded
                    state: Active
                  tags:
                    test_key: test_value
                  type: test_type
      x-ms-odata: '#/definitions/DataLakeStoreAccountBasic'
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}:
    delete:
      description: Deletes the specified Data Lake Store account.
      operationId: Accounts_Delete
      parameters:
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: The name of the Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the Data Lake Store account.
        in: path
        name: accountName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successfully deleted the specified account.
        "202":
          content: {}
          description: Successfully initiated the deletion of the specified account.
        "204":
          content: {}
          description: The specified account was not found.
      tags:
      - Accounts
      x-ms-examples:
        Deletes the specified Data Lake Store account:
          parameters:
            accountName: contosoadla
            api-version: 2016-11-01
            resourceGroupName: contosorg
            subscriptionId: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
          responses:
            "200": {}
            "202": {}
            "204": {}
      x-ms-long-running-operation: true
      x-accepts:
      - application/json
    get:
      description: Gets the specified Data Lake Store account.
      operationId: Accounts_Get
      parameters:
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: The name of the Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the Data Lake Store account.
        in: path
        name: accountName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataLakeStoreAccount'
          description: Successfully retrieved details of the specified account.
      tags:
      - Accounts
      x-ms-examples:
        Gets the specified Data Lake Store account:
          parameters:
            accountName: contosoadla
            api-version: 2016-11-01
            resourceGroupName: contosorg
            subscriptionId: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
          responses:
            "200":
              body:
                id: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
                identity:
                  principalId: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
                  tenantId: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab346
                  type: SystemAssigned
                location: eastus2
                name: contosoadla
                properties:
                  accountId: 94f4bf5d-78a9-4c31-8aa7-b34d07bad898
                  creationTime: 2017-04-14T13:21:56.6819037-07:00
                  currentTier: Consumption
                  defaultGroup: test_default_group
                  encryptionConfig:
                    keyVaultMetaInfo:
                      encryptionKeyName: test_encryption_key_name
                      encryptionKeyVersion: encryption_key_version
                      keyVaultResourceId: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
                    type: UserManaged
                  encryptionProvisioningState: Succeeded
                  encryptionState: Enabled
                  endpoint: testadlfs17607.azuredatalakestore.net
                  firewallAllowAzureIps: Enabled
                  firewallRules:
                  - id: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
                    name: test_rule
                    properties:
                      endIpAddress: 2.2.2.2
                      startIpAddress: 1.1.1.1
                    type: test_type
                  firewallState: Enabled
                  lastModifiedTime: 2017-04-14T13:21:56.6819037-07:00
                  newTier: Consumption
                  provisioningState: Succeeded
                  state: Active
                  trustedIdProviderState: Enabled
                  trustedIdProviders:
                  - id: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
                    name: test_trusted_id_provider_name
                    properties:
                      idProvider: https://sts.windows.net/ea9ec534-a3e3-4e45-ad36-3afc5bb291c1
                    type: test_type
                tags:
                  test_key: test_value
                type: test_type
      x-accepts:
      - application/json
    patch:
      description: Updates the specified Data Lake Store account information.
      operationId: Accounts_Update
      parameters:
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: The name of the Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the Data Lake Store account.
        in: path
        name: accountName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDataLakeStoreAccountParameters'
        description: Parameters supplied to update the Data Lake Store account.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataLakeStoreAccount'
          description: Successfully updated the account details.
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataLakeStoreAccount'
          description: Successfully initiated the update of the account details.
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataLakeStoreAccount'
          description: Successfully initiated the update of the account details.
      tags:
      - Accounts
      x-ms-examples:
        Updates the specified Data Lake Store account information:
          parameters:
            accountName: contosoadla
            api-version: 2016-11-01
            parameters:
              properties:
                defaultGroup: test_default_group
                encryptionConfig:
                  keyVaultMetaInfo:
                    encryptionKeyVersion: encryption_key_version
                firewallAllowAzureIps: Enabled
                firewallState: Enabled
                newTier: Consumption
                trustedIdProviderState: Enabled
              tags:
                test_key: test_value
            resourceGroupName: contosorg
            subscriptionId: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
          responses:
            "200":
              body:
                id: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
                identity:
                  principalId: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
                  tenantId: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab346
                  type: SystemAssigned
                location: eastus2
                name: contosoadla
                properties:
                  accountId: 94f4bf5d-78a9-4c31-8aa7-b34d07bad898
                  creationTime: 2017-04-14T13:21:56.6819037-07:00
                  currentTier: Consumption
                  defaultGroup: test_default_group
                  encryptionConfig:
                    keyVaultMetaInfo:
                      encryptionKeyName: test_encryption_key_name
                      encryptionKeyVersion: encryption_key_version
                      keyVaultResourceId: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
                    type: UserManaged
                  encryptionProvisioningState: Succeeded
                  encryptionState: Enabled
                  endpoint: testadlfs17607.azuredatalakestore.net
                  firewallAllowAzureIps: Enabled
                  firewallRules:
                  - id: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
                    name: test_rule
                    properties:
                      endIpAddress: 2.2.2.2
                      startIpAddress: 1.1.1.1
                    type: test_type
                  firewallState: Enabled
                  lastModifiedTime: 2017-04-14T13:21:56.6819037-07:00
                  newTier: Consumption
                  provisioningState: Succeeded
                  state: Active
                  trustedIdProviderState: Enabled
                  trustedIdProviders:
                  - id: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
                    name: test_trusted_id_provider_name
                    properties:
                      idProvider: https://sts.windows.net/ea9ec534-a3e3-4e45-ad36-3afc5bb291c1
                    type: test_type
                tags:
                  test_key: test_value
                type: test_type
            "201":
              body:
                id: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
                identity:
                  principalId: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
                  tenantId: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab346
                  type: SystemAssigned
                location: eastus2
                name: contosoadla
                properties:
                  accountId: 94f4bf5d-78a9-4c31-8aa7-b34d07bad898
                  creationTime: 2017-04-14T13:21:56.6819037-07:00
                  currentTier: Consumption
                  defaultGroup: test_default_group
                  encryptionConfig:
                    keyVaultMetaInfo:
                      encryptionKeyName: test_encryption_key_name
                      encryptionKeyVersion: encryption_key_version
                      keyVaultResourceId: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
                    type: UserManaged
                  encryptionProvisioningState: Succeeded
                  encryptionState: Enabled
                  endpoint: testadlfs17607.azuredatalakestore.net
                  firewallAllowAzureIps: Enabled
                  firewallRules:
                  - id: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
                    name: test_rule
                    properties:
                      endIpAddress: 2.2.2.2
                      startIpAddress: 1.1.1.1
                    type: test_type
                  firewallState: Enabled
                  lastModifiedTime: 2017-04-14T13:21:56.6819037-07:00
                  newTier: Consumption
                  provisioningState: Succeeded
                  state: Active
                  trustedIdProviderState: Enabled
                  trustedIdProviders:
                  - id: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
                    name: test_trusted_id_provider_name
                    properties:
                      idProvider: https://sts.windows.net/ea9ec534-a3e3-4e45-ad36-3afc5bb291c1
                    type: test_type
                tags:
                  test_key: test_value
                type: test_type
            "202":
              body:
                id: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
                identity:
                  principalId: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
                  tenantId: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab346
                  type: SystemAssigned
                location: eastus2
                name: contosoadla
                properties:
                  accountId: 94f4bf5d-78a9-4c31-8aa7-b34d07bad898
                  creationTime: 2017-04-14T13:21:56.6819037-07:00
                  currentTier: Consumption
                  defaultGroup: test_default_group
                  encryptionConfig:
                    keyVaultMetaInfo:
                      encryptionKeyName: test_encryption_key_name
                      encryptionKeyVersion: encryption_key_version
                      keyVaultResourceId: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
                    type: UserManaged
                  encryptionProvisioningState: Succeeded
                  encryptionState: Enabled
                  endpoint: testadlfs17607.azuredatalakestore.net
                  firewallAllowAzureIps: Enabled
                  firewallRules:
                  - id: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
                    name: test_rule
                    properties:
                      endIpAddress: 2.2.2.2
                      startIpAddress: 1.1.1.1
                    type: test_type
                  firewallState: Enabled
                  lastModifiedTime: 2017-04-14T13:21:56.6819037-07:00
                  newTier: Consumption
                  provisioningState: Succeeded
                  state: Active
                  trustedIdProviderState: Enabled
                  trustedIdProviders:
                  - id: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
                    name: test_trusted_id_provider_name
                    properties:
                      idProvider: https://sts.windows.net/ea9ec534-a3e3-4e45-ad36-3afc5bb291c1
                    type: test_type
                tags:
                  test_key: test_value
                type: test_type
      x-ms-long-running-operation: true
      x-codegen-request-body-name: parameters
      x-content-type: application/json
      x-accepts:
      - application/json
    put:
      description: Creates the specified Data Lake Store account.
      operationId: Accounts_Create
      parameters:
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: The name of the Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the Data Lake Store account.
        in: path
        name: accountName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDataLakeStoreAccountParameters'
        description: Parameters supplied to create the Data Lake Store account.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataLakeStoreAccount'
          description: Successfully created the account.
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataLakeStoreAccount'
          description: Successfully initiated creation of the account.
      tags:
      - Accounts
      x-ms-examples:
        Creates the specified Data Lake Store account:
          parameters:
            accountName: contosoadla
            api-version: 2016-11-01
            parameters:
              identity:
                type: SystemAssigned
              location: eastus2
              properties:
                defaultGroup: test_default_group
                encryptionConfig:
                  keyVaultMetaInfo:
                    encryptionKeyName: test_encryption_key_name
                    encryptionKeyVersion: encryption_key_version
                    keyVaultResourceId: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
                  type: UserManaged
                encryptionState: Enabled
                firewallAllowAzureIps: Enabled
                firewallRules:
                - name: test_rule
                  properties:
                    endIpAddress: 2.2.2.2
                    startIpAddress: 1.1.1.1
                firewallState: Enabled
                newTier: Consumption
                trustedIdProviderState: Enabled
                trustedIdProviders:
                - name: test_trusted_id_provider_name
                  properties:
                    idProvider: https://sts.windows.net/ea9ec534-a3e3-4e45-ad36-3afc5bb291c1
              tags:
                test_key: test_value
            resourceGroupName: contosorg
            subscriptionId: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
          responses:
            "200":
              body:
                id: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
                identity:
                  principalId: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
                  tenantId: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab346
                  type: SystemAssigned
                location: eastus2
                name: contosoadla
                properties:
                  accountId: 94f4bf5d-78a9-4c31-8aa7-b34d07bad898
                  creationTime: 2017-04-14T13:21:56.6819037-07:00
                  currentTier: Consumption
                  defaultGroup: test_default_group
                  encryptionConfig:
                    keyVaultMetaInfo:
                      encryptionKeyName: test_encryption_key_name
                      encryptionKeyVersion: encryption_key_version
                      keyVaultResourceId: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
                    type: UserManaged
                  encryptionProvisioningState: Succeeded
                  encryptionState: Enabled
                  endpoint: testadlfs17607.azuredatalakestore.net
                  firewallAllowAzureIps: Enabled
                  firewallRules:
                  - id: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
                    name: test_rule
                    properties:
                      endIpAddress: 2.2.2.2
                      startIpAddress: 1.1.1.1
                    type: test_type
                  firewallState: Enabled
                  lastModifiedTime: 2017-04-14T13:21:56.6819037-07:00
                  newTier: Consumption
                  provisioningState: Succeeded
                  state: Active
                  trustedIdProviderState: Enabled
                  trustedIdProviders:
                  - id: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
                    name: test_trusted_id_provider_name
                    properties:
                      idProvider: https://sts.windows.net/ea9ec534-a3e3-4e45-ad36-3afc5bb291c1
                    type: test_type
                tags:
                  test_key: test_value
                type: test_type
            "201":
              body:
                id: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
                identity:
                  principalId: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
                  tenantId: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab346
                  type: SystemAssigned
                location: eastus2
                name: contosoadla
                properties:
                  accountId: 94f4bf5d-78a9-4c31-8aa7-b34d07bad898
                  creationTime: 2017-04-14T13:21:56.6819037-07:00
                  currentTier: Consumption
                  defaultGroup: test_default_group
                  encryptionConfig:
                    keyVaultMetaInfo:
                      encryptionKeyName: test_encryption_key_name
                      encryptionKeyVersion: encryption_key_version
                      keyVaultResourceId: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
                    type: UserManaged
                  encryptionProvisioningState: Succeeded
                  encryptionState: Enabled
                  endpoint: testadlfs17607.azuredatalakestore.net
                  firewallAllowAzureIps: Enabled
                  firewallRules:
                  - id: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
                    name: test_rule
                    properties:
                      endIpAddress: 2.2.2.2
                      startIpAddress: 1.1.1.1
                    type: test_type
                  firewallState: Enabled
                  lastModifiedTime: 2017-04-14T13:21:56.6819037-07:00
                  newTier: Consumption
                  provisioningState: Succeeded
                  state: Active
                  trustedIdProviderState: Enabled
                  trustedIdProviders:
                  - id: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
                    name: test_trusted_id_provider_name
                    properties:
                      idProvider: https://sts.windows.net/ea9ec534-a3e3-4e45-ad36-3afc5bb291c1
                    type: test_type
                tags:
                  test_key: test_value
                type: test_type
      x-ms-long-running-operation: true
      x-codegen-request-body-name: parameters
      x-content-type: application/json
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/enableKeyVault
  : post:
      description: Attempts to enable a user managed Key Vault for encryption of the
        specified Data Lake Store account.
      operationId: Accounts_EnableKeyVault
      parameters:
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: The name of the Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the Data Lake Store account.
        in: path
        name: accountName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successfully enabled the user-managed Key Vault settings used
            for encrypting this Data Lake Store account.
      tags:
      - Accounts
      x-ms-examples:
        Attempts to enable a user managed Key Vault for encryption of the specified Data Lake Store account:
          parameters:
            accountName: contosoadla
            api-version: 2016-11-01
            resourceGroupName: contosorg
            subscriptionId: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
          responses:
            "200": {}
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/firewallRules
  : get:
      description: Lists the Data Lake Store firewall rules within the specified Data
        Lake Store account.
      operationId: FirewallRules_ListByAccount
      parameters:
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: The name of the Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the Data Lake Store account.
        in: path
        name: accountName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirewallRuleListResult'
          description: Successfully retrieved the list of firewall rules.
      tags:
      - FirewallRules
      x-ms-examples:
        Lists the Data Lake Store firewall rules within the specified Data Lake Store account.:
          parameters:
            accountName: contosoadla
            api-version: 2016-11-01
            resourceGroupName: contosorg
            subscriptionId: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
          responses:
            "200":
              body:
                nextLink: https://management.azure.com/subscriptions/34adfa4f-cedf-4dc0-ba29-b6d1a69ab345/resourceGroups/contosorg/providers/Microsoft.DataLakeStore/accounts/contosoadla/jobPolicies?api-version=2016-11-01&%24skiptoken=<token>
                value:
                - id: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
                  name: test_rule
                  properties:
                    endIpAddress: 2.2.2.2
                    startIpAddress: 1.1.1.1
                  type: test_type
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/firewallRules/{firewallRuleName}
  : delete:
      description: Deletes the specified firewall rule from the specified Data Lake
        Store account.
      operationId: FirewallRules_Delete
      parameters:
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: The name of the Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the Data Lake Store account.
        in: path
        name: accountName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the firewall rule to delete.
        in: path
        name: firewallRuleName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successfully deleted the specified firewall rule.
        "204":
          content: {}
          description: The specified firewall rule does not exist or was already deleted.
      tags:
      - FirewallRules
      x-ms-examples:
        Deletes the specified firewall rule from the specified Data Lake Store account.:
          parameters:
            accountName: contosoadla
            api-version: 2016-11-01
            firewallRuleName: test_rule
            resourceGroupName: contosorg
            subscriptionId: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
          responses:
            "200": {}
            "204": {}
      x-accepts:
      - application/json
    get:
      description: Gets the specified Data Lake Store firewall rule.
      operationId: FirewallRules_Get
      parameters:
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: The name of the Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the Data Lake Store account.
        in: path
        name: accountName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the firewall rule to retrieve.
        in: path
        name: firewallRuleName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirewallRule'
          description: Successfully retrieved the firewall rule.
      tags:
      - FirewallRules
      x-ms-examples:
        Gets the specified Data Lake Store firewall rule.:
          parameters:
            accountName: contosoadla
            api-version: 2016-11-01
            firewallRuleName: test_rule
            resourceGroupName: contosorg
            subscriptionId: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
          responses:
            "200":
              body:
                id: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
                name: test_rule
                properties:
                  endIpAddress: 2.2.2.2
                  startIpAddress: 1.1.1.1
                type: test_type
      x-accepts:
      - application/json
    patch:
      description: Updates the specified firewall rule.
      operationId: FirewallRules_Update
      parameters:
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: The name of the Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the Data Lake Store account.
        in: path
        name: accountName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the firewall rule to update.
        in: path
        name: firewallRuleName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFirewallRuleParameters'
        description: Parameters supplied to update the firewall rule.
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirewallRule'
          description: Successfully updated the specified firewall rule.
      tags:
      - FirewallRules
      x-ms-examples:
        Updates the specified firewall rule.:
          parameters:
            accountName: contosoadla
            api-version: 2016-11-01
            firewallRuleName: test_rule
            parameters:
              properties:
                endIpAddress: 2.2.2.2
                startIpAddress: 1.1.1.1
            resourceGroupName: contosorg
            subscriptionId: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
          responses:
            "200":
              body:
                id: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
                name: test_rule
                properties:
                  endIpAddress: 2.2.2.2
                  startIpAddress: 1.1.1.1
                type: test_type
      x-codegen-request-body-name: parameters
      x-content-type: application/json
      x-accepts:
      - application/json
    put:
      description: "Creates or updates the specified firewall rule. During update,\
        \ the firewall rule with the specified name will be replaced with this new\
        \ firewall rule."
      operationId: FirewallRules_CreateOrUpdate
      parameters:
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: The name of the Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the Data Lake Store account.
        in: path
        name: accountName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the firewall rule to create or update.
        in: path
        name: firewallRuleName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateFirewallRuleParameters'
        description: Parameters supplied to create or update the firewall rule.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirewallRule'
          description: Successfully created or updated the specified firewall rule.
      tags:
      - FirewallRules
      x-ms-examples:
        ? Creates or updates the specified firewall rule. During update, the firewall
          rule with the specified name will be replaced with this new firewall rule
        : parameters:
            accountName: contosoadla
            api-version: 2016-11-01
            firewallRuleName: test_rule
            parameters:
              properties:
                endIpAddress: 2.2.2.2
                startIpAddress: 1.1.1.1
            resourceGroupName: contosorg
            subscriptionId: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
          responses:
            "200":
              body:
                id: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
                name: test_rule
                properties:
                  endIpAddress: 2.2.2.2
                  startIpAddress: 1.1.1.1
                type: test_type
      x-codegen-request-body-name: parameters
      x-content-type: application/json
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/trustedIdProviders
  : get:
      description: Lists the Data Lake Store trusted identity providers within the
        specified Data Lake Store account.
      operationId: TrustedIdProviders_ListByAccount
      parameters:
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: The name of the Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the Data Lake Store account.
        in: path
        name: accountName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrustedIdProviderListResult'
          description: Successfully retrieved the list of trusted identity providers.
      tags:
      - TrustedIdProviders
      x-ms-examples:
        Lists the Data Lake Store trusted identity providers within the specified Data Lake Store account:
          parameters:
            accountName: contosoadla
            api-version: 2016-11-01
            resourceGroupName: contosorg
            subscriptionId: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
          responses:
            "200":
              body:
                nextLink: https://management.azure.com/subscriptions/34adfa4f-cedf-4dc0-ba29-b6d1a69ab345/resourceGroups/contosorg/providers/Microsoft.DataLakeStore/accounts/contosoadla/jobPolicies?api-version=2016-11-01&%24skiptoken=<token>
                value:
                - id: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
                  name: test_trusted_id_provider_name
                  properties:
                    idProvider: https://sts.windows.net/ea9ec534-a3e3-4e45-ad36-3afc5bb291c1
                  type: test_type
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/trustedIdProviders/{trustedIdProviderName}
  : delete:
      description: Deletes the specified trusted identity provider from the specified
        Data Lake Store account
      operationId: TrustedIdProviders_Delete
      parameters:
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: The name of the Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the Data Lake Store account.
        in: path
        name: accountName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the trusted identity provider to delete.
        in: path
        name: trustedIdProviderName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successfully deleted the specified trusted identity provider
            details.
        "204":
          content: {}
          description: The specified trusted identity provider was not found.
      tags:
      - TrustedIdProviders
      x-ms-examples:
        Deletes the specified trusted identity provider from the specified Data Lake Store account:
          parameters:
            accountName: contosoadla
            api-version: 2016-11-01
            resourceGroupName: contosorg
            subscriptionId: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
            trustedIdProviderName: test_trusted_id_provider_name
          responses:
            "200": {}
            "204": {}
      x-accepts:
      - application/json
    get:
      description: Gets the specified Data Lake Store trusted identity provider.
      operationId: TrustedIdProviders_Get
      parameters:
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: The name of the Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the Data Lake Store account.
        in: path
        name: accountName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the trusted identity provider to retrieve.
        in: path
        name: trustedIdProviderName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrustedIdProvider'
          description: Successfully retrieved details of the specified trusted identity
            provider.
      tags:
      - TrustedIdProviders
      x-ms-examples:
        Gets the specified Data Lake Store trusted identity provider:
          parameters:
            accountName: contosoadla
            api-version: 2016-11-01
            resourceGroupName: contosorg
            subscriptionId: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
            trustedIdProviderName: test_trusted_id_provider_name
          responses:
            "200":
              body:
                id: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
                name: test_trusted_id_provider_name
                properties:
                  idProvider: https://sts.windows.net/ea9ec534-a3e3-4e45-ad36-3afc5bb291c1
                type: test_type
      x-accepts:
      - application/json
    patch:
      description: Updates the specified trusted identity provider.
      operationId: TrustedIdProviders_Update
      parameters:
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: The name of the Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the Data Lake Store account.
        in: path
        name: accountName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the trusted identity provider. This is used for differentiation
          of providers in the account.
        in: path
        name: trustedIdProviderName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTrustedIdProviderParameters'
        description: Parameters supplied to update the trusted identity provider.
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrustedIdProvider'
          description: Successfully added the trusted identity provider.
      tags:
      - TrustedIdProviders
      x-ms-examples:
        Updates the specified trusted identity provider:
          parameters:
            accountName: contosoadla
            api-version: 2016-11-01
            parameters:
              properties:
                idProvider: https://sts.windows.net/ea9ec534-a3e3-4e45-ad36-3afc5bb291c1
            resourceGroupName: contosorg
            subscriptionId: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
            trustedIdProviderName: test_trusted_id_provider_name
          responses:
            "200":
              body:
                id: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
                name: test_trusted_id_provider_name
                properties:
                  idProvider: https://sts.windows.net/ea9ec534-a3e3-4e45-ad36-3afc5bb291c1
                type: test_type
      x-codegen-request-body-name: parameters
      x-content-type: application/json
      x-accepts:
      - application/json
    put:
      description: "Creates or updates the specified trusted identity provider. During\
        \ update, the trusted identity provider with the specified name will be replaced\
        \ with this new provider"
      operationId: TrustedIdProviders_CreateOrUpdate
      parameters:
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: The name of the Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the Data Lake Store account.
        in: path
        name: accountName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the trusted identity provider. This is used for differentiation
          of providers in the account.
        in: path
        name: trustedIdProviderName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateTrustedIdProviderParameters'
        description: Parameters supplied to create or replace the trusted identity
          provider.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrustedIdProvider'
          description: Successfully added the trusted identity provider.
      tags:
      - TrustedIdProviders
      x-ms-examples:
        ? Creates or updates the specified trusted identity provider. During update,
          the trusted identity provider with the specified name will be replaced with
          this new provider
        : parameters:
            accountName: contosoadla
            api-version: 2016-11-01
            parameters:
              properties:
                idProvider: https://sts.windows.net/ea9ec534-a3e3-4e45-ad36-3afc5bb291c1
            resourceGroupName: contosorg
            subscriptionId: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
            trustedIdProviderName: test_trusted_id_provider_name
          responses:
            "200":
              body:
                id: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
                name: test_trusted_id_provider_name
                properties:
                  idProvider: https://sts.windows.net/ea9ec534-a3e3-4e45-ad36-3afc5bb291c1
                type: test_type
      x-codegen-request-body-name: parameters
      x-content-type: application/json
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/virtualNetworkRules
  : get:
      description: Lists the Data Lake Store virtual network rules within the specified
        Data Lake Store account.
      operationId: VirtualNetworkRules_ListByAccount
      parameters:
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: The name of the Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the Data Lake Store account.
        in: path
        name: accountName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetworkRuleListResult'
          description: Successfully retrieved the list of virtual network rules.
      tags:
      - VirtualNetworkRules
      x-ms-examples:
        Lists the Data Lake Store virtual network rules within the specified Data Lake Store account.:
          parameters:
            accountName: contosoadla
            api-version: 2016-11-01
            resourceGroupName: contosorg
            subscriptionId: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
          responses:
            "200":
              body:
                nextLink: https://management.azure.com/subscriptions/34adfa4f-cedf-4dc0-ba29-b6d1a69ab345/resourceGroups/contosorg/providers/Microsoft.DataLakeStore/accounts/contosoadla/jobPolicies?api-version=2016-11-01&%24skiptoken=<token>
                value:
                - id: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
                  name: test_virtual_network_rules_name
                  properties:
                    subnetId: test_subnetId
                  type: test_type
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/virtualNetworkRules/{virtualNetworkRuleName}
  : delete:
      description: Deletes the specified virtual network rule from the specified Data
        Lake Store account.
      operationId: VirtualNetworkRules_Delete
      parameters:
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: The name of the Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the Data Lake Store account.
        in: path
        name: accountName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the virtual network rule to delete.
        in: path
        name: virtualNetworkRuleName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successfully deleted the specified virtual network rule.
        "204":
          content: {}
          description: The specified virtual network rule does not exist or was already
            deleted.
      tags:
      - VirtualNetworkRules
      x-ms-examples:
        Deletes the specified virtual network rule from the specified Data Lake Store account.:
          parameters:
            accountName: contosoadla
            api-version: 2016-11-01
            resourceGroupName: contosorg
            subscriptionId: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
            virtualNetworkRuleName: test_virtual_network_rules_name
          responses:
            "200": {}
            "204": {}
      x-accepts:
      - application/json
    get:
      description: Gets the specified Data Lake Store virtual network rule.
      operationId: VirtualNetworkRules_Get
      parameters:
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: The name of the Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the Data Lake Store account.
        in: path
        name: accountName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the virtual network rule to retrieve.
        in: path
        name: virtualNetworkRuleName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetworkRule'
          description: Successfully retrieved the virtual network rule.
      tags:
      - VirtualNetworkRules
      x-ms-examples:
        Gets the specified Data Lake Store virtual network rule.:
          parameters:
            accountName: contosoadla
            api-version: 2016-11-01
            resourceGroupName: contosorg
            subscriptionId: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
            virtualNetworkRuleName: test_virtual_network_rules_name
          responses:
            "200":
              body:
                id: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
                name: test_virtual_network_rules_name
                properties:
                  subnetId: test_subnetId
                type: test_type
      x-accepts:
      - application/json
    patch:
      description: Updates the specified virtual network rule.
      operationId: VirtualNetworkRules_Update
      parameters:
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: The name of the Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the Data Lake Store account.
        in: path
        name: accountName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the virtual network rule to update.
        in: path
        name: virtualNetworkRuleName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateVirtualNetworkRuleParameters'
        description: Parameters supplied to update the virtual network rule.
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetworkRule'
          description: Successfully updated the specified virtual network rule.
      tags:
      - VirtualNetworkRules
      x-ms-examples:
        Updates the specified virtual network rule.:
          parameters:
            accountName: contosoadla
            api-version: 2016-11-01
            parameters:
              properties:
                subnetId: test_subnetId
            resourceGroupName: contosorg
            subscriptionId: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
            virtualNetworkRuleName: test_virtual_network_rules_name
          responses:
            "200":
              body:
                id: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
                name: test_virtual_network_rules_name
                properties:
                  subnetId: test_subnetId
                type: test_type
      x-codegen-request-body-name: parameters
      x-content-type: application/json
      x-accepts:
      - application/json
    put:
      description: "Creates or updates the specified virtual network rule. During\
        \ update, the virtual network rule with the specified name will be replaced\
        \ with this new virtual network rule."
      operationId: VirtualNetworkRules_CreateOrUpdate
      parameters:
      - description: Gets subscription credentials which uniquely identify Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: The name of the Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the Data Lake Store account.
        in: path
        name: accountName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the virtual network rule to create or update.
        in: path
        name: virtualNetworkRuleName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateVirtualNetworkRuleParameters'
        description: Parameters supplied to create or update the virtual network rule.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetworkRule'
          description: Successfully created or updated the specified virtual network
            rule.
      tags:
      - VirtualNetworkRules
      x-ms-examples:
        ? Creates or updates the specified virtual network rule. During update, the
          virtual network rule with the specified name will be replaced with this
          new virtual network rule.
        : parameters:
            accountName: contosoadla
            api-version: 2016-11-01
            parameters:
              properties:
                subnetId: test_subnetId
            resourceGroupName: contosorg
            subscriptionId: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
            virtualNetworkRuleName: test_virtual_network_rules_name
          responses:
            "200":
              body:
                id: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
                name: test_virtual_network_rules_name
                properties:
                  subnetId: test_subnetId
                type: test_type
      x-codegen-request-body-name: parameters
      x-content-type: application/json
      x-accepts:
      - application/json
components:
  parameters:
    AccountNameParameter:
      description: The name of the Data Lake Store account.
      in: path
      name: accountName
      required: true
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    ApiVersionParameter:
      description: Client Api Version.
      in: query
      name: api-version
      required: true
      schema:
        type: string
    ResourceGroupNameParameter:
      description: The name of the Azure resource group.
      in: path
      name: resourceGroupName
      required: true
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    SubscriptionIdParameter:
      description: Gets subscription credentials which uniquely identify Microsoft
        Azure subscription. The subscription ID forms part of the URI for every service
        call.
      in: path
      name: subscriptionId
      required: true
      schema:
        type: string
  schemas:
    CapabilityInformation:
      description: Subscription-level properties and limits for Data Lake Store.
      example:
        accountCount: 0
        maxAccountCount: 6
        state: Registered
        migrationState: true
        subscriptionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        accountCount:
          description: The current number of accounts under this subscription.
          format: int32
          readOnly: true
          type: integer
        maxAccountCount:
          description: The maximum supported number of accounts under this subscription.
          format: int32
          readOnly: true
          type: integer
        migrationState:
          description: The Boolean value of true or false to indicate the maintenance
            state.
          readOnly: true
          type: boolean
        state:
          description: The subscription state.
          enum:
          - Registered
          - Suspended
          - Deleted
          - Unregistered
          - Warned
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: SubscriptionState
        subscriptionId:
          description: The subscription credentials that uniquely identifies the subscription.
          format: uuid
          readOnly: true
          type: string
      type: object
    CheckNameAvailabilityParameters:
      description: Data Lake Store account name availability check parameters.
      example:
        name: name
        type: Microsoft.DataLakeStore/accounts
      properties:
        name:
          description: The Data Lake Store name to check availability for.
          type: string
        type:
          description: "The resource type. Note: This should not be set by the user,\
            \ as the constant value is Microsoft.DataLakeStore/accounts"
          enum:
          - Microsoft.DataLakeStore/accounts
          type: string
      required:
      - name
      - type
      type: object
    CreateDataLakeStoreAccountParameters:
      example:
        identity:
          tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          principalId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: SystemAssigned
        location: location
        properties:
          encryptionConfig:
            keyVaultMetaInfo:
              encryptionKeyName: encryptionKeyName
              encryptionKeyVersion: encryptionKeyVersion
              keyVaultResourceId: keyVaultResourceId
            type: UserManaged
          encryptionState: Enabled
          defaultGroup: defaultGroup
          trustedIdProviders:
          - name: name
            properties:
              idProvider: idProvider
          - name: name
            properties:
              idProvider: idProvider
          firewallState: Enabled
          newTier: Consumption
          virtualNetworkRules:
          - name: name
            properties:
              subnetId: subnetId
          - name: name
            properties:
              subnetId: subnetId
          trustedIdProviderState: Enabled
          firewallRules:
          - name: name
            properties:
              endIpAddress: endIpAddress
              startIpAddress: startIpAddress
          - name: name
            properties:
              endIpAddress: endIpAddress
              startIpAddress: startIpAddress
          firewallAllowAzureIps: Enabled
        tags:
          key: tags
      properties:
        identity:
          $ref: '#/components/schemas/EncryptionIdentity'
        location:
          description: The resource location.
          type: string
        properties:
          $ref: '#/components/schemas/CreateDataLakeStoreAccountProperties'
        tags:
          additionalProperties:
            type: string
          description: The resource tags.
          type: object
      required:
      - location
      type: object
    CreateDataLakeStoreAccountProperties:
      example:
        encryptionConfig:
          keyVaultMetaInfo:
            encryptionKeyName: encryptionKeyName
            encryptionKeyVersion: encryptionKeyVersion
            keyVaultResourceId: keyVaultResourceId
          type: UserManaged
        encryptionState: Enabled
        defaultGroup: defaultGroup
        trustedIdProviders:
        - name: name
          properties:
            idProvider: idProvider
        - name: name
          properties:
            idProvider: idProvider
        firewallState: Enabled
        newTier: Consumption
        virtualNetworkRules:
        - name: name
          properties:
            subnetId: subnetId
        - name: name
          properties:
            subnetId: subnetId
        trustedIdProviderState: Enabled
        firewallRules:
        - name: name
          properties:
            endIpAddress: endIpAddress
            startIpAddress: startIpAddress
        - name: name
          properties:
            endIpAddress: endIpAddress
            startIpAddress: startIpAddress
        firewallAllowAzureIps: Enabled
      properties:
        defaultGroup:
          description: The default owner group for all new folders and files created
            in the Data Lake Store account.
          type: string
        encryptionConfig:
          $ref: '#/components/schemas/EncryptionConfig'
        encryptionState:
          description: The current state of encryption for this Data Lake Store account.
          enum:
          - Enabled
          - Disabled
          type: string
          x-ms-enum:
            modelAsString: false
            name: EncryptionState
        firewallAllowAzureIps:
          description: "The current state of allowing or disallowing IPs originating\
            \ within Azure through the firewall. If the firewall is disabled, this\
            \ is not enforced."
          enum:
          - Enabled
          - Disabled
          type: string
          x-ms-enum:
            modelAsString: false
            name: FirewallAllowAzureIpsState
        firewallRules:
          description: The list of firewall rules associated with this Data Lake Store
            account.
          items:
            $ref: '#/components/schemas/CreateFirewallRuleWithAccountParameters'
          type: array
        firewallState:
          description: The current state of the IP address firewall for this Data
            Lake Store account.
          enum:
          - Enabled
          - Disabled
          type: string
          x-ms-enum:
            modelAsString: false
            name: FirewallState
        newTier:
          description: The commitment tier to use for next month.
          enum:
          - Consumption
          - Commitment_1TB
          - Commitment_10TB
          - Commitment_100TB
          - Commitment_500TB
          - Commitment_1PB
          - Commitment_5PB
          type: string
          x-ms-enum:
            modelAsString: false
            name: TierType
        trustedIdProviderState:
          description: The current state of the trusted identity provider feature
            for this Data Lake Store account.
          enum:
          - Enabled
          - Disabled
          type: string
          x-ms-enum:
            modelAsString: false
            name: TrustedIdProviderState
        trustedIdProviders:
          description: The list of trusted identity providers associated with this
            Data Lake Store account.
          items:
            $ref: '#/components/schemas/CreateTrustedIdProviderWithAccountParameters'
          type: array
        virtualNetworkRules:
          description: The list of virtual network rules associated with this Data
            Lake Store account.
          items:
            $ref: '#/components/schemas/CreateVirtualNetworkRuleWithAccountParameters'
          type: array
      type: object
    CreateFirewallRuleWithAccountParameters:
      description: The parameters used to create a new firewall rule while creating
        a new Data Lake Store account.
      example:
        name: name
        properties:
          endIpAddress: endIpAddress
          startIpAddress: startIpAddress
      properties:
        name:
          description: The unique name of the firewall rule to create.
          type: string
        properties:
          $ref: '#/components/schemas/CreateOrUpdateFirewallRuleProperties'
      required:
      - name
      - properties
      type: object
    CreateOrUpdateFirewallRuleParameters:
      description: The parameters used to create a new firewall rule.
      example:
        properties:
          endIpAddress: endIpAddress
          startIpAddress: startIpAddress
      properties:
        properties:
          $ref: '#/components/schemas/CreateOrUpdateFirewallRuleProperties'
      required:
      - properties
      type: object
    CreateOrUpdateFirewallRuleProperties:
      description: The firewall rule properties to use when creating a new firewall
        rule.
      example:
        endIpAddress: endIpAddress
        startIpAddress: startIpAddress
      properties:
        endIpAddress:
          description: The end IP address for the firewall rule. This can be either
            ipv4 or ipv6. Start and End should be in the same protocol.
          type: string
        startIpAddress:
          description: The start IP address for the firewall rule. This can be either
            ipv4 or ipv6. Start and End should be in the same protocol.
          type: string
      required:
      - endIpAddress
      - startIpAddress
      type: object
    CreateOrUpdateTrustedIdProviderParameters:
      description: The parameters used to create a new trusted identity provider.
      example:
        properties:
          idProvider: idProvider
      properties:
        properties:
          $ref: '#/components/schemas/CreateOrUpdateTrustedIdProviderProperties'
      required:
      - properties
      type: object
    CreateOrUpdateTrustedIdProviderProperties:
      description: The trusted identity provider properties to use when creating a
        new trusted identity provider.
      example:
        idProvider: idProvider
      properties:
        idProvider:
          description: The URL of this trusted identity provider.
          type: string
      required:
      - idProvider
      type: object
    CreateOrUpdateVirtualNetworkRuleParameters:
      description: The parameters used to create a new virtual network rule.
      example:
        properties:
          subnetId: subnetId
      properties:
        properties:
          $ref: '#/components/schemas/CreateOrUpdateVirtualNetworkRuleProperties'
      required:
      - properties
      type: object
    CreateOrUpdateVirtualNetworkRuleProperties:
      description: The virtual network rule properties to use when creating a new
        virtual network rule.
      example:
        subnetId: subnetId
      properties:
        subnetId:
          description: The resource identifier for the subnet.
          type: string
      required:
      - subnetId
      type: object
    CreateTrustedIdProviderWithAccountParameters:
      description: The parameters used to create a new trusted identity provider while
        creating a new Data Lake Store account.
      example:
        name: name
        properties:
          idProvider: idProvider
      properties:
        name:
          description: The unique name of the trusted identity provider to create.
          type: string
        properties:
          $ref: '#/components/schemas/CreateOrUpdateTrustedIdProviderProperties'
      required:
      - name
      - properties
      type: object
    CreateVirtualNetworkRuleWithAccountParameters:
      description: The parameters used to create a new virtual network rule while
        creating a new Data Lake Store account.
      example:
        name: name
        properties:
          subnetId: subnetId
      properties:
        name:
          description: The unique name of the virtual network rule to create.
          type: string
        properties:
          $ref: '#/components/schemas/CreateOrUpdateVirtualNetworkRuleProperties'
      required:
      - name
      - properties
      type: object
    DataLakeStoreAccount:
      allOf:
      - $ref: '#/components/schemas/Resource'
      description: Data Lake Store account information.
      example:
        identity:
          tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          principalId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: SystemAssigned
        properties:
          encryptionConfig:
            keyVaultMetaInfo:
              encryptionKeyName: encryptionKeyName
              encryptionKeyVersion: encryptionKeyVersion
              keyVaultResourceId: keyVaultResourceId
            type: UserManaged
          encryptionProvisioningState: Creating
          encryptionState: Enabled
          defaultGroup: defaultGroup
          trustedIdProviders:
          - properties:
              idProvider: idProvider
          - properties:
              idProvider: idProvider
          firewallState: Enabled
          newTier: Consumption
          virtualNetworkRules:
          - properties:
              subnetId: subnetId
          - properties:
              subnetId: subnetId
          trustedIdProviderState: Enabled
          currentTier: Consumption
          firewallRules:
          - properties:
              endIpAddress: endIpAddress
              startIpAddress: startIpAddress
          - properties:
              endIpAddress: endIpAddress
              startIpAddress: startIpAddress
          firewallAllowAzureIps: Enabled
      properties:
        identity:
          $ref: '#/components/schemas/EncryptionIdentity'
        properties:
          $ref: '#/components/schemas/DataLakeStoreAccountProperties'
    DataLakeStoreAccountBasic:
      allOf:
      - $ref: '#/components/schemas/Resource'
      description: "Basic Data Lake Store account information, returned on list calls."
      example:
        properties:
          accountId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          endpoint: endpoint
          lastModifiedTime: 2000-01-23T04:56:07.000+00:00
          creationTime: 2000-01-23T04:56:07.000+00:00
          provisioningState: Failed
          state: Active
      properties:
        properties:
          $ref: '#/components/schemas/DataLakeStoreAccountPropertiesBasic'
    DataLakeStoreAccountListResult:
      description: Data Lake Store account list information response.
      example:
        value:
        - properties:
            accountId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            endpoint: endpoint
            lastModifiedTime: 2000-01-23T04:56:07.000+00:00
            creationTime: 2000-01-23T04:56:07.000+00:00
            provisioningState: Failed
            state: Active
        - properties:
            accountId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            endpoint: endpoint
            lastModifiedTime: 2000-01-23T04:56:07.000+00:00
            creationTime: 2000-01-23T04:56:07.000+00:00
            provisioningState: Failed
            state: Active
        nextLink: nextLink
      properties:
        nextLink:
          description: The link (url) to the next page of results.
          readOnly: true
          type: string
        value:
          description: The results of the list operation.
          items:
            $ref: '#/components/schemas/DataLakeStoreAccountBasic'
          readOnly: true
          type: array
      type: object
    DataLakeStoreAccountProperties:
      allOf:
      - $ref: '#/components/schemas/DataLakeStoreAccountPropertiesBasic'
      description: Data Lake Store account properties information.
      example:
        encryptionConfig:
          keyVaultMetaInfo:
            encryptionKeyName: encryptionKeyName
            encryptionKeyVersion: encryptionKeyVersion
            keyVaultResourceId: keyVaultResourceId
          type: UserManaged
        encryptionProvisioningState: Creating
        encryptionState: Enabled
        defaultGroup: defaultGroup
        trustedIdProviders:
        - properties:
            idProvider: idProvider
        - properties:
            idProvider: idProvider
        firewallState: Enabled
        newTier: Consumption
        virtualNetworkRules:
        - properties:
            subnetId: subnetId
        - properties:
            subnetId: subnetId
        trustedIdProviderState: Enabled
        currentTier: Consumption
        firewallRules:
        - properties:
            endIpAddress: endIpAddress
            startIpAddress: startIpAddress
        - properties:
            endIpAddress: endIpAddress
            startIpAddress: startIpAddress
        firewallAllowAzureIps: Enabled
      properties:
        currentTier:
          description: The commitment tier in use for the current month.
          enum:
          - Consumption
          - Commitment_1TB
          - Commitment_10TB
          - Commitment_100TB
          - Commitment_500TB
          - Commitment_1PB
          - Commitment_5PB
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: false
            name: TierType
        defaultGroup:
          description: The default owner group for all new folders and files created
            in the Data Lake Store account.
          readOnly: true
          type: string
        encryptionConfig:
          $ref: '#/components/schemas/EncryptionConfig'
        encryptionProvisioningState:
          description: The current state of encryption provisioning for this Data
            Lake Store account.
          enum:
          - Creating
          - Succeeded
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: false
            name: EncryptionProvisioningState
        encryptionState:
          description: The current state of encryption for this Data Lake Store account.
          enum:
          - Enabled
          - Disabled
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: false
            name: EncryptionState
        firewallAllowAzureIps:
          description: "The current state of allowing or disallowing IPs originating\
            \ within Azure through the firewall. If the firewall is disabled, this\
            \ is not enforced."
          enum:
          - Enabled
          - Disabled
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: false
            name: FirewallAllowAzureIpsState
        firewallRules:
          description: The list of firewall rules associated with this Data Lake Store
            account.
          items:
            $ref: '#/components/schemas/FirewallRule'
          readOnly: true
          type: array
        firewallState:
          description: The current state of the IP address firewall for this Data
            Lake Store account.
          enum:
          - Enabled
          - Disabled
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: false
            name: FirewallState
        newTier:
          description: The commitment tier to use for next month.
          enum:
          - Consumption
          - Commitment_1TB
          - Commitment_10TB
          - Commitment_100TB
          - Commitment_500TB
          - Commitment_1PB
          - Commitment_5PB
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: false
            name: TierType
        trustedIdProviderState:
          description: The current state of the trusted identity provider feature
            for this Data Lake Store account.
          enum:
          - Enabled
          - Disabled
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: false
            name: TrustedIdProviderState
        trustedIdProviders:
          description: The list of trusted identity providers associated with this
            Data Lake Store account.
          items:
            $ref: '#/components/schemas/TrustedIdProvider'
          readOnly: true
          type: array
        virtualNetworkRules:
          description: The list of virtual network rules associated with this Data
            Lake Store account.
          items:
            $ref: '#/components/schemas/VirtualNetworkRule'
          readOnly: true
          type: array
    DataLakeStoreAccountPropertiesBasic:
      description: The basic account specific properties that are associated with
        an underlying Data Lake Store account.
      example:
        accountId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        endpoint: endpoint
        lastModifiedTime: 2000-01-23T04:56:07.000+00:00
        creationTime: 2000-01-23T04:56:07.000+00:00
        provisioningState: Failed
        state: Active
      properties:
        accountId:
          description: The unique identifier associated with this Data Lake Store
            account.
          format: uuid
          readOnly: true
          type: string
        creationTime:
          description: The account creation time.
          format: date-time
          readOnly: true
          type: string
        endpoint:
          description: The full CName endpoint for this account.
          readOnly: true
          type: string
        lastModifiedTime:
          description: The account last modified time.
          format: date-time
          readOnly: true
          type: string
        provisioningState:
          description: The provisioning status of the Data Lake Store account.
          enum:
          - Failed
          - Creating
          - Running
          - Succeeded
          - Patching
          - Suspending
          - Resuming
          - Deleting
          - Deleted
          - Undeleting
          - Canceled
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: false
            name: DataLakeStoreAccountStatus
        state:
          description: The state of the Data Lake Store account.
          enum:
          - Active
          - Suspended
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: false
            name: DataLakeStoreAccountState
      type: object
    EncryptionConfig:
      description: The encryption configuration for the account.
      example:
        keyVaultMetaInfo:
          encryptionKeyName: encryptionKeyName
          encryptionKeyVersion: encryptionKeyVersion
          keyVaultResourceId: keyVaultResourceId
        type: UserManaged
      properties:
        keyVaultMetaInfo:
          $ref: '#/components/schemas/KeyVaultMetaInfo'
        type:
          description: The type of encryption configuration being used. Currently
            the only supported types are 'UserManaged' and 'ServiceManaged'.
          enum:
          - UserManaged
          - ServiceManaged
          type: string
          x-ms-enum:
            modelAsString: false
            name: EncryptionConfigType
      required:
      - type
      type: object
    EncryptionIdentity:
      description: The encryption identity properties.
      example:
        tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        principalId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        type: SystemAssigned
      properties:
        principalId:
          description: The principal identifier associated with the encryption.
          format: uuid
          readOnly: true
          type: string
        tenantId:
          description: The tenant identifier associated with the encryption.
          format: uuid
          readOnly: true
          type: string
        type:
          description: The type of encryption being used. Currently the only supported
            type is 'SystemAssigned'.
          enum:
          - SystemAssigned
          type: string
          x-ms-enum:
            modelAsString: false
            name: EncryptionIdentityType
      required:
      - type
      type: object
    FirewallRule:
      allOf:
      - $ref: '#/components/schemas/SubResource'
      description: Data Lake Store firewall rule information.
      example:
        properties:
          endIpAddress: endIpAddress
          startIpAddress: startIpAddress
      properties:
        properties:
          $ref: '#/components/schemas/FirewallRuleProperties'
    FirewallRuleListResult:
      description: Data Lake Store firewall rule list information.
      example:
        value:
        - properties:
            endIpAddress: endIpAddress
            startIpAddress: startIpAddress
        - properties:
            endIpAddress: endIpAddress
            startIpAddress: startIpAddress
        nextLink: nextLink
      properties:
        nextLink:
          description: The link (url) to the next page of results.
          readOnly: true
          type: string
        value:
          description: The results of the list operation.
          items:
            $ref: '#/components/schemas/FirewallRule'
          readOnly: true
          type: array
      type: object
    FirewallRuleProperties:
      description: The firewall rule properties.
      example:
        endIpAddress: endIpAddress
        startIpAddress: startIpAddress
      properties:
        endIpAddress:
          description: The end IP address for the firewall rule. This can be either
            ipv4 or ipv6. Start and End should be in the same protocol.
          readOnly: true
          type: string
        startIpAddress:
          description: The start IP address for the firewall rule. This can be either
            ipv4 or ipv6. Start and End should be in the same protocol.
          readOnly: true
          type: string
      type: object
    KeyVaultMetaInfo:
      description: Metadata information used by account encryption.
      example:
        encryptionKeyName: encryptionKeyName
        encryptionKeyVersion: encryptionKeyVersion
        keyVaultResourceId: keyVaultResourceId
      properties:
        encryptionKeyName:
          description: The name of the user managed encryption key.
          type: string
        encryptionKeyVersion:
          description: The version of the user managed encryption key.
          type: string
        keyVaultResourceId:
          description: The resource identifier for the user managed Key Vault being
            used to encrypt.
          type: string
      required:
      - encryptionKeyName
      - encryptionKeyVersion
      - keyVaultResourceId
      type: object
    NameAvailabilityInformation:
      description: Data Lake Store account name availability result information.
      example:
        reason: reason
        nameAvailable: true
        message: message
      properties:
        message:
          description: "The message describing why the Data Lake Store account name\
            \ is not available, if nameAvailable is false."
          readOnly: true
          type: string
        nameAvailable:
          description: The Boolean value of true or false to indicate whether the
            Data Lake Store account name is available or not.
          readOnly: true
          type: boolean
        reason:
          description: "The reason why the Data Lake Store account name is not available,\
            \ if nameAvailable is false."
          readOnly: true
          type: string
      type: object
    Operation:
      description: An available operation for Data Lake Store.
      example:
        display:
          provider: provider
          resource: resource
          description: description
          operation: operation
        origin: user
        name: name
      properties:
        display:
          $ref: '#/components/schemas/OperationDisplay'
        name:
          description: The name of the operation.
          readOnly: true
          type: string
        origin:
          description: The intended executor of the operation.
          enum:
          - user
          - system
          - "user,system"
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: OperationOrigin
      type: object
    OperationDisplay:
      description: The display information for a particular operation.
      example:
        provider: provider
        resource: resource
        description: description
        operation: operation
      properties:
        description:
          description: A friendly description of the operation.
          readOnly: true
          type: string
        operation:
          description: A friendly name of the operation.
          readOnly: true
          type: string
        provider:
          description: The resource provider of the operation.
          readOnly: true
          type: string
        resource:
          description: The resource type of the operation.
          readOnly: true
          type: string
      type: object
    OperationListResult:
      description: The list of available operations for Data Lake Store.
      example:
        value:
        - display:
            provider: provider
            resource: resource
            description: description
            operation: operation
          origin: user
          name: name
        - display:
            provider: provider
            resource: resource
            description: description
            operation: operation
          origin: user
          name: name
        nextLink: nextLink
      properties:
        nextLink:
          description: The link (url) to the next page of results.
          readOnly: true
          type: string
        value:
          description: The results of the list operation.
          items:
            $ref: '#/components/schemas/Operation'
          readOnly: true
          type: array
      type: object
    Resource:
      description: The resource model definition.
      properties:
        id:
          description: The resource identifier.
          readOnly: true
          type: string
        location:
          description: The resource location.
          readOnly: true
          type: string
        name:
          description: The resource name.
          readOnly: true
          type: string
        tags:
          additionalProperties:
            type: string
          description: The resource tags.
          readOnly: true
          type: object
        type:
          description: The resource type.
          readOnly: true
          type: string
      type: object
      x-ms-azure-resource: true
    SubResource:
      description: The resource model definition for a nested resource.
      properties:
        id:
          description: The resource identifier.
          readOnly: true
          type: string
        name:
          description: The resource name.
          readOnly: true
          type: string
        type:
          description: The resource type.
          readOnly: true
          type: string
      type: object
      x-ms-azure-resource: true
    TrustedIdProvider:
      allOf:
      - $ref: '#/components/schemas/SubResource'
      description: Data Lake Store trusted identity provider information.
      example:
        properties:
          idProvider: idProvider
      properties:
        properties:
          $ref: '#/components/schemas/TrustedIdProviderProperties'
    TrustedIdProviderListResult:
      description: Data Lake Store trusted identity provider list information.
      example:
        value:
        - properties:
            idProvider: idProvider
        - properties:
            idProvider: idProvider
        nextLink: nextLink
      properties:
        nextLink:
          description: The link (url) to the next page of results.
          readOnly: true
          type: string
        value:
          description: The results of the list operation.
          items:
            $ref: '#/components/schemas/TrustedIdProvider'
          readOnly: true
          type: array
      type: object
    TrustedIdProviderProperties:
      description: The trusted identity provider properties.
      example:
        idProvider: idProvider
      properties:
        idProvider:
          description: The URL of this trusted identity provider.
          readOnly: true
          type: string
      type: object
    UpdateDataLakeStoreAccountParameters:
      description: Data Lake Store account information to update.
      example:
        properties:
          encryptionConfig:
            keyVaultMetaInfo:
              encryptionKeyVersion: encryptionKeyVersion
          defaultGroup: defaultGroup
          trustedIdProviders:
          - name: name
            properties:
              idProvider: idProvider
          - name: name
            properties:
              idProvider: idProvider
          firewallState: Enabled
          newTier: Consumption
          virtualNetworkRules:
          - name: name
            properties:
              subnetId: subnetId
          - name: name
            properties:
              subnetId: subnetId
          trustedIdProviderState: Enabled
          firewallRules:
          - name: name
            properties:
              endIpAddress: endIpAddress
              startIpAddress: startIpAddress
          - name: name
            properties:
              endIpAddress: endIpAddress
              startIpAddress: startIpAddress
          firewallAllowAzureIps: Enabled
        tags:
          key: tags
      properties:
        properties:
          $ref: '#/components/schemas/UpdateDataLakeStoreAccountProperties'
        tags:
          additionalProperties:
            type: string
          description: Resource tags
          type: object
      type: object
    UpdateDataLakeStoreAccountProperties:
      description: Data Lake Store account properties information to be updated.
      example:
        encryptionConfig:
          keyVaultMetaInfo:
            encryptionKeyVersion: encryptionKeyVersion
        defaultGroup: defaultGroup
        trustedIdProviders:
        - name: name
          properties:
            idProvider: idProvider
        - name: name
          properties:
            idProvider: idProvider
        firewallState: Enabled
        newTier: Consumption
        virtualNetworkRules:
        - name: name
          properties:
            subnetId: subnetId
        - name: name
          properties:
            subnetId: subnetId
        trustedIdProviderState: Enabled
        firewallRules:
        - name: name
          properties:
            endIpAddress: endIpAddress
            startIpAddress: startIpAddress
        - name: name
          properties:
            endIpAddress: endIpAddress
            startIpAddress: startIpAddress
        firewallAllowAzureIps: Enabled
      properties:
        defaultGroup:
          description: The default owner group for all new folders and files created
            in the Data Lake Store account.
          type: string
        encryptionConfig:
          $ref: '#/components/schemas/UpdateEncryptionConfig'
        firewallAllowAzureIps:
          description: "The current state of allowing or disallowing IPs originating\
            \ within Azure through the firewall. If the firewall is disabled, this\
            \ is not enforced."
          enum:
          - Enabled
          - Disabled
          type: string
          x-ms-enum:
            modelAsString: false
            name: FirewallAllowAzureIpsState
        firewallRules:
          description: The list of firewall rules associated with this Data Lake Store
            account.
          items:
            $ref: '#/components/schemas/UpdateFirewallRuleWithAccountParameters'
          type: array
        firewallState:
          description: "The current state of the IP address firewall for this Data\
            \ Lake Store account. Disabling the firewall does not remove existing\
            \ rules, they will just be ignored until the firewall is re-enabled."
          enum:
          - Enabled
          - Disabled
          type: string
          x-ms-enum:
            modelAsString: false
            name: FirewallState
        newTier:
          description: The commitment tier to use for next month.
          enum:
          - Consumption
          - Commitment_1TB
          - Commitment_10TB
          - Commitment_100TB
          - Commitment_500TB
          - Commitment_1PB
          - Commitment_5PB
          type: string
          x-ms-enum:
            modelAsString: false
            name: TierType
        trustedIdProviderState:
          description: "The current state of the trusted identity provider feature\
            \ for this Data Lake Store account. Disabling trusted identity provider\
            \ functionality does not remove the providers, they will just be ignored\
            \ until this feature is re-enabled."
          enum:
          - Enabled
          - Disabled
          type: string
          x-ms-enum:
            modelAsString: false
            name: TrustedIdProviderState
        trustedIdProviders:
          description: The list of trusted identity providers associated with this
            Data Lake Store account.
          items:
            $ref: '#/components/schemas/UpdateTrustedIdProviderWithAccountParameters'
          type: array
        virtualNetworkRules:
          description: The list of virtual network rules associated with this Data
            Lake Store account.
          items:
            $ref: '#/components/schemas/UpdateVirtualNetworkRuleWithAccountParameters'
          type: array
      type: object
    UpdateEncryptionConfig:
      description: The encryption configuration used to update a user managed Key
        Vault key.
      example:
        keyVaultMetaInfo:
          encryptionKeyVersion: encryptionKeyVersion
      properties:
        keyVaultMetaInfo:
          $ref: '#/components/schemas/UpdateKeyVaultMetaInfo'
      type: object
    UpdateFirewallRuleParameters:
      description: The parameters used to update a firewall rule.
      example:
        properties:
          endIpAddress: endIpAddress
          startIpAddress: startIpAddress
      properties:
        properties:
          $ref: '#/components/schemas/UpdateFirewallRuleProperties'
      type: object
    UpdateFirewallRuleProperties:
      description: The firewall rule properties to use when updating a firewall rule.
      example:
        endIpAddress: endIpAddress
        startIpAddress: startIpAddress
      properties:
        endIpAddress:
          description: The end IP address for the firewall rule. This can be either
            ipv4 or ipv6. Start and End should be in the same protocol.
          type: string
        startIpAddress:
          description: The start IP address for the firewall rule. This can be either
            ipv4 or ipv6. Start and End should be in the same protocol.
          type: string
      type: object
    UpdateFirewallRuleWithAccountParameters:
      description: The parameters used to update a firewall rule while updating a
        Data Lake Store account.
      example:
        name: name
        properties:
          endIpAddress: endIpAddress
          startIpAddress: startIpAddress
      properties:
        name:
          description: The unique name of the firewall rule to update.
          type: string
        properties:
          $ref: '#/components/schemas/UpdateFirewallRuleProperties'
      required:
      - name
      type: object
    UpdateKeyVaultMetaInfo:
      description: The Key Vault update information used for user managed key rotation.
      example:
        encryptionKeyVersion: encryptionKeyVersion
      properties:
        encryptionKeyVersion:
          description: The version of the user managed encryption key to update through
            a key rotation.
          type: string
      type: object
    UpdateTrustedIdProviderParameters:
      description: The parameters used to update a trusted identity provider.
      example:
        properties:
          idProvider: idProvider
      properties:
        properties:
          $ref: '#/components/schemas/UpdateTrustedIdProviderProperties'
      type: object
    UpdateTrustedIdProviderProperties:
      description: The trusted identity provider properties to use when updating a
        trusted identity provider.
      example:
        idProvider: idProvider
      properties:
        idProvider:
          description: The URL of this trusted identity provider.
          type: string
      type: object
    UpdateTrustedIdProviderWithAccountParameters:
      description: The parameters used to update a trusted identity provider while
        updating a Data Lake Store account.
      example:
        name: name
        properties:
          idProvider: idProvider
      properties:
        name:
          description: The unique name of the trusted identity provider to update.
          type: string
        properties:
          $ref: '#/components/schemas/UpdateTrustedIdProviderProperties'
      required:
      - name
      type: object
    UpdateVirtualNetworkRuleParameters:
      description: The parameters used to update a virtual network rule.
      example:
        properties:
          subnetId: subnetId
      properties:
        properties:
          $ref: '#/components/schemas/UpdateVirtualNetworkRuleProperties'
      type: object
    UpdateVirtualNetworkRuleProperties:
      description: The virtual network rule properties to use when updating a virtual
        network rule.
      example:
        subnetId: subnetId
      properties:
        subnetId:
          description: The resource identifier for the subnet.
          type: string
      type: object
    UpdateVirtualNetworkRuleWithAccountParameters:
      description: The parameters used to update a virtual network rule while updating
        a Data Lake Store account.
      example:
        name: name
        properties:
          subnetId: subnetId
      properties:
        name:
          description: The unique name of the virtual network rule to update.
          type: string
        properties:
          $ref: '#/components/schemas/UpdateVirtualNetworkRuleProperties'
      required:
      - name
      type: object
    Usage:
      description: Describes the Resource Usage.
      example:
        unit: Count
        limit: 6
        name:
          localizedValue: localizedValue
          value: value
        id: id
        currentValue: 0
      properties:
        currentValue:
          description: Gets the current count of the allocated resources in the subscription.
          format: int32
          readOnly: true
          type: integer
        id:
          description: Resource identifier.
          readOnly: true
          type: string
        limit:
          description: Gets the maximum count of the resources that can be allocated
            in the subscription.
          format: int32
          readOnly: true
          type: integer
        name:
          $ref: '#/components/schemas/UsageName'
        unit:
          description: Gets the unit of measurement.
          enum:
          - Count
          - Bytes
          - Seconds
          - Percent
          - CountsPerSecond
          - BytesPerSecond
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: false
            name: UsageUnit
      type: object
    UsageListResult:
      description: The response from the List Usages operation.
      example:
        value:
        - unit: Count
          limit: 6
          name:
            localizedValue: localizedValue
            value: value
          id: id
          currentValue: 0
        - unit: Count
          limit: 6
          name:
            localizedValue: localizedValue
            value: value
          id: id
          currentValue: 0
      properties:
        value:
          description: Gets or sets the list of Storage Resource Usages.
          items:
            $ref: '#/components/schemas/Usage'
          type: array
      type: object
    UsageName:
      description: The usage names that can be used.
      example:
        localizedValue: localizedValue
        value: value
      properties:
        localizedValue:
          description: Gets a localized string describing the resource name.
          readOnly: true
          type: string
        value:
          description: Gets a string describing the resource name.
          readOnly: true
          type: string
      type: object
    VirtualNetworkRule:
      allOf:
      - $ref: '#/components/schemas/SubResource'
      description: Data Lake Store virtual network rule information.
      example:
        properties:
          subnetId: subnetId
      properties:
        properties:
          $ref: '#/components/schemas/VirtualNetworkRuleProperties'
    VirtualNetworkRuleListResult:
      description: Data Lake Store virtual network rule list information.
      example:
        value:
        - properties:
            subnetId: subnetId
        - properties:
            subnetId: subnetId
        nextLink: nextLink
      properties:
        nextLink:
          description: The link (url) to the next page of results.
          readOnly: true
          type: string
        value:
          description: The results of the list operation.
          items:
            $ref: '#/components/schemas/VirtualNetworkRule'
          readOnly: true
          type: array
      type: object
    VirtualNetworkRuleProperties:
      description: The virtual network rule properties.
      example:
        subnetId: subnetId
      properties:
        subnetId:
          description: The resource identifier for the subnet.
          readOnly: true
          type: string
      type: object
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
      type: oauth2
x-original-swagger-version: "2.0"

