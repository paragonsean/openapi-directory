/*
 * DataLakeStoreAccountManagementClient
 * Creates an Azure Data Lake Store account management client.
 *
 * The version of the OpenAPI document: 2015-10-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.DataLakeStoreAccount;
import org.openapitools.client.model.DataLakeStoreAccountListResult;
import org.openapitools.client.model.DataLakeStoreFirewallRuleListResult;
import org.openapitools.client.model.FirewallRule;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AccountApi
 */
@Disabled
public class AccountApiTest {

    private final AccountApi api = new AccountApi();

    /**
     * Creates the specified Data Lake Store account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void accountCreateTest() throws ApiException {
        String resourceGroupName = null;
        String name = null;
        String apiVersion = null;
        String subscriptionId = null;
        DataLakeStoreAccount parameters = null;
        DataLakeStoreAccount response = api.accountCreate(resourceGroupName, name, apiVersion, subscriptionId, parameters);
        // TODO: test validations
    }

    /**
     * Creates or updates the specified firewall rule.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void accountCreateOrUpdateFirewallRuleTest() throws ApiException {
        String resourceGroupName = null;
        String accountName = null;
        String name = null;
        String apiVersion = null;
        String subscriptionId = null;
        FirewallRule parameters = null;
        FirewallRule response = api.accountCreateOrUpdateFirewallRule(resourceGroupName, accountName, name, apiVersion, subscriptionId, parameters);
        // TODO: test validations
    }

    /**
     * Deletes the specified Data Lake Store account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void accountDeleteTest() throws ApiException {
        String resourceGroupName = null;
        String accountName = null;
        String apiVersion = null;
        String subscriptionId = null;
        api.accountDelete(resourceGroupName, accountName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Deletes the specified firewall rule from the specified Data Lake Store account
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void accountDeleteFirewallRuleTest() throws ApiException {
        String resourceGroupName = null;
        String accountName = null;
        String firewallRuleName = null;
        String apiVersion = null;
        String subscriptionId = null;
        api.accountDeleteFirewallRule(resourceGroupName, accountName, firewallRuleName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Attempts to enable a user managed key vault for encryption of the specified Data Lake Store account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void accountEnableKeyVaultTest() throws ApiException {
        String resourceGroupName = null;
        String accountName = null;
        String apiVersion = null;
        String subscriptionId = null;
        api.accountEnableKeyVault(resourceGroupName, accountName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Gets the specified Data Lake Store account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void accountGetTest() throws ApiException {
        String resourceGroupName = null;
        String accountName = null;
        String apiVersion = null;
        String subscriptionId = null;
        DataLakeStoreAccount response = api.accountGet(resourceGroupName, accountName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Gets the specified Data Lake Store firewall rule.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void accountGetFirewallRuleTest() throws ApiException {
        String resourceGroupName = null;
        String accountName = null;
        String firewallRuleName = null;
        String apiVersion = null;
        String subscriptionId = null;
        FirewallRule response = api.accountGetFirewallRule(resourceGroupName, accountName, firewallRuleName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Lists the Data Lake Store accounts within the subscription. The response includes a link to the next page of results, if any.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void accountListTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String $filter = null;
        Integer $top = null;
        Integer $skip = null;
        String $expand = null;
        String $select = null;
        String $orderby = null;
        Boolean $count = null;
        String $search = null;
        String $format = null;
        DataLakeStoreAccountListResult response = api.accountList(apiVersion, subscriptionId, $filter, $top, $skip, $expand, $select, $orderby, $count, $search, $format);
        // TODO: test validations
    }

    /**
     * Lists the Data Lake Store accounts within a specific resource group. The response includes a link to the next page of results, if any.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void accountListByResourceGroupTest() throws ApiException {
        String resourceGroupName = null;
        String apiVersion = null;
        String subscriptionId = null;
        String $filter = null;
        Integer $top = null;
        Integer $skip = null;
        String $expand = null;
        String $select = null;
        String $orderby = null;
        Boolean $count = null;
        String $search = null;
        String $format = null;
        DataLakeStoreAccountListResult response = api.accountListByResourceGroup(resourceGroupName, apiVersion, subscriptionId, $filter, $top, $skip, $expand, $select, $orderby, $count, $search, $format);
        // TODO: test validations
    }

    /**
     * Lists the Data Lake Store firewall rules within the specified Data Lake Store account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void accountListFirewallRulesTest() throws ApiException {
        String resourceGroupName = null;
        String accountName = null;
        String apiVersion = null;
        String subscriptionId = null;
        DataLakeStoreFirewallRuleListResult response = api.accountListFirewallRules(resourceGroupName, accountName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Updates the specified Data Lake Store account information.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void accountUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String name = null;
        String apiVersion = null;
        String subscriptionId = null;
        DataLakeStoreAccount parameters = null;
        DataLakeStoreAccount response = api.accountUpdate(resourceGroupName, name, apiVersion, subscriptionId, parameters);
        // TODO: test validations
    }

}
