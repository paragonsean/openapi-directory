# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class InnerError(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, context: str=None, trace: str=None):
        """InnerError - a model defined in OpenAPI

        :param context: The context of this InnerError.
        :param trace: The trace of this InnerError.
        """
        self.openapi_types = {
            'context': str,
            'trace': str
        }

        self.attribute_map = {
            'context': 'context',
            'trace': 'trace'
        }

        self._context = context
        self._trace = trace

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InnerError':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InnerError of this InnerError.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def context(self):
        """Gets the context of this InnerError.

        the context for the error message

        :return: The context of this InnerError.
        :rtype: str
        """
        return self._context

    @context.setter
    def context(self, context):
        """Sets the context of this InnerError.

        the context for the error message

        :param context: The context of this InnerError.
        :type context: str
        """

        self._context = context

    @property
    def trace(self):
        """Gets the trace of this InnerError.

        the stack trace for the error

        :return: The trace of this InnerError.
        :rtype: str
        """
        return self._trace

    @trace.setter
    def trace(self, trace):
        """Sets the trace of this InnerError.

        the stack trace for the error

        :param trace: The trace of this InnerError.
        :type trace: str
        """

        self._trace = trace
