/**
 * HybridDataManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AvailableProviderOperation from './model/AvailableProviderOperation';
import AvailableProviderOperationDisplay from './model/AvailableProviderOperationDisplay';
import AvailableProviderOperations from './model/AvailableProviderOperations';
import CustomerSecret from './model/CustomerSecret';
import DataManager from './model/DataManager';
import DataManagerList from './model/DataManagerList';
import DataManagerUpdateParameter from './model/DataManagerUpdateParameter';
import DataService from './model/DataService';
import DataServiceList from './model/DataServiceList';
import DataServiceProperties from './model/DataServiceProperties';
import DataStore from './model/DataStore';
import DataStoreFilter from './model/DataStoreFilter';
import DataStoreList from './model/DataStoreList';
import DataStoreProperties from './model/DataStoreProperties';
import DataStoreType from './model/DataStoreType';
import DataStoreTypeList from './model/DataStoreTypeList';
import DataStoreTypeProperties from './model/DataStoreTypeProperties';
import DmsBaseObject from './model/DmsBaseObject';
import Error from './model/Error';
import ErrorDetails from './model/ErrorDetails';
import Job from './model/Job';
import JobDefinition from './model/JobDefinition';
import JobDefinitionFilter from './model/JobDefinitionFilter';
import JobDefinitionList from './model/JobDefinitionList';
import JobDefinitionProperties from './model/JobDefinitionProperties';
import JobDetails from './model/JobDetails';
import JobFilter from './model/JobFilter';
import JobList from './model/JobList';
import JobProperties from './model/JobProperties';
import JobStages from './model/JobStages';
import Key from './model/Key';
import PublicKey from './model/PublicKey';
import PublicKeyList from './model/PublicKeyList';
import PublicKeyProperties from './model/PublicKeyProperties';
import Resource from './model/Resource';
import RunParameters from './model/RunParameters';
import Schedule from './model/Schedule';
import Sku from './model/Sku';
import DataManagersApi from './api/DataManagersApi';
import DataServicesApi from './api/DataServicesApi';
import DataStoreTypesApi from './api/DataStoreTypesApi';
import DataStoresApi from './api/DataStoresApi';
import JobDefinitionsApi from './api/JobDefinitionsApi';
import JobsApi from './api/JobsApi';
import OperationsApi from './api/OperationsApi';
import PublicKeysApi from './api/PublicKeysApi';


/**
* JS API client generated by OpenAPI Generator.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var HybridDataManagementClient = require('index'); // See note below*.
* var xxxSvc = new HybridDataManagementClient.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new HybridDataManagementClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new HybridDataManagementClient.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new HybridDataManagementClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2016-06-01
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AvailableProviderOperation model constructor.
     * @property {module:model/AvailableProviderOperation}
     */
    AvailableProviderOperation,

    /**
     * The AvailableProviderOperationDisplay model constructor.
     * @property {module:model/AvailableProviderOperationDisplay}
     */
    AvailableProviderOperationDisplay,

    /**
     * The AvailableProviderOperations model constructor.
     * @property {module:model/AvailableProviderOperations}
     */
    AvailableProviderOperations,

    /**
     * The CustomerSecret model constructor.
     * @property {module:model/CustomerSecret}
     */
    CustomerSecret,

    /**
     * The DataManager model constructor.
     * @property {module:model/DataManager}
     */
    DataManager,

    /**
     * The DataManagerList model constructor.
     * @property {module:model/DataManagerList}
     */
    DataManagerList,

    /**
     * The DataManagerUpdateParameter model constructor.
     * @property {module:model/DataManagerUpdateParameter}
     */
    DataManagerUpdateParameter,

    /**
     * The DataService model constructor.
     * @property {module:model/DataService}
     */
    DataService,

    /**
     * The DataServiceList model constructor.
     * @property {module:model/DataServiceList}
     */
    DataServiceList,

    /**
     * The DataServiceProperties model constructor.
     * @property {module:model/DataServiceProperties}
     */
    DataServiceProperties,

    /**
     * The DataStore model constructor.
     * @property {module:model/DataStore}
     */
    DataStore,

    /**
     * The DataStoreFilter model constructor.
     * @property {module:model/DataStoreFilter}
     */
    DataStoreFilter,

    /**
     * The DataStoreList model constructor.
     * @property {module:model/DataStoreList}
     */
    DataStoreList,

    /**
     * The DataStoreProperties model constructor.
     * @property {module:model/DataStoreProperties}
     */
    DataStoreProperties,

    /**
     * The DataStoreType model constructor.
     * @property {module:model/DataStoreType}
     */
    DataStoreType,

    /**
     * The DataStoreTypeList model constructor.
     * @property {module:model/DataStoreTypeList}
     */
    DataStoreTypeList,

    /**
     * The DataStoreTypeProperties model constructor.
     * @property {module:model/DataStoreTypeProperties}
     */
    DataStoreTypeProperties,

    /**
     * The DmsBaseObject model constructor.
     * @property {module:model/DmsBaseObject}
     */
    DmsBaseObject,

    /**
     * The Error model constructor.
     * @property {module:model/Error}
     */
    Error,

    /**
     * The ErrorDetails model constructor.
     * @property {module:model/ErrorDetails}
     */
    ErrorDetails,

    /**
     * The Job model constructor.
     * @property {module:model/Job}
     */
    Job,

    /**
     * The JobDefinition model constructor.
     * @property {module:model/JobDefinition}
     */
    JobDefinition,

    /**
     * The JobDefinitionFilter model constructor.
     * @property {module:model/JobDefinitionFilter}
     */
    JobDefinitionFilter,

    /**
     * The JobDefinitionList model constructor.
     * @property {module:model/JobDefinitionList}
     */
    JobDefinitionList,

    /**
     * The JobDefinitionProperties model constructor.
     * @property {module:model/JobDefinitionProperties}
     */
    JobDefinitionProperties,

    /**
     * The JobDetails model constructor.
     * @property {module:model/JobDetails}
     */
    JobDetails,

    /**
     * The JobFilter model constructor.
     * @property {module:model/JobFilter}
     */
    JobFilter,

    /**
     * The JobList model constructor.
     * @property {module:model/JobList}
     */
    JobList,

    /**
     * The JobProperties model constructor.
     * @property {module:model/JobProperties}
     */
    JobProperties,

    /**
     * The JobStages model constructor.
     * @property {module:model/JobStages}
     */
    JobStages,

    /**
     * The Key model constructor.
     * @property {module:model/Key}
     */
    Key,

    /**
     * The PublicKey model constructor.
     * @property {module:model/PublicKey}
     */
    PublicKey,

    /**
     * The PublicKeyList model constructor.
     * @property {module:model/PublicKeyList}
     */
    PublicKeyList,

    /**
     * The PublicKeyProperties model constructor.
     * @property {module:model/PublicKeyProperties}
     */
    PublicKeyProperties,

    /**
     * The Resource model constructor.
     * @property {module:model/Resource}
     */
    Resource,

    /**
     * The RunParameters model constructor.
     * @property {module:model/RunParameters}
     */
    RunParameters,

    /**
     * The Schedule model constructor.
     * @property {module:model/Schedule}
     */
    Schedule,

    /**
     * The Sku model constructor.
     * @property {module:model/Sku}
     */
    Sku,

    /**
    * The DataManagersApi service constructor.
    * @property {module:api/DataManagersApi}
    */
    DataManagersApi,

    /**
    * The DataServicesApi service constructor.
    * @property {module:api/DataServicesApi}
    */
    DataServicesApi,

    /**
    * The DataStoreTypesApi service constructor.
    * @property {module:api/DataStoreTypesApi}
    */
    DataStoreTypesApi,

    /**
    * The DataStoresApi service constructor.
    * @property {module:api/DataStoresApi}
    */
    DataStoresApi,

    /**
    * The JobDefinitionsApi service constructor.
    * @property {module:api/JobDefinitionsApi}
    */
    JobDefinitionsApi,

    /**
    * The JobsApi service constructor.
    * @property {module:api/JobsApi}
    */
    JobsApi,

    /**
    * The OperationsApi service constructor.
    * @property {module:api/OperationsApi}
    */
    OperationsApi,

    /**
    * The PublicKeysApi service constructor.
    * @property {module:api/PublicKeysApi}
    */
    PublicKeysApi
};
