/**
 * HybridDataManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ErrorDetails from './ErrorDetails';

/**
 * The JobStages model module.
 * @module model/JobStages
 * @version 2016-06-01
 */
class JobStages {
    /**
     * Constructs a new <code>JobStages</code>.
     * Job stages.
     * @alias module:model/JobStages
     * @param stageStatus {module:model/JobStages.StageStatusEnum} Status of the job stage.
     */
    constructor(stageStatus) { 
        
        JobStages.initialize(this, stageStatus);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, stageStatus) { 
        obj['stageStatus'] = stageStatus;
    }

    /**
     * Constructs a <code>JobStages</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/JobStages} obj Optional instance to populate.
     * @return {module:model/JobStages} The populated <code>JobStages</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new JobStages();

            if (data.hasOwnProperty('errorDetails')) {
                obj['errorDetails'] = ApiClient.convertToType(data['errorDetails'], [ErrorDetails]);
            }
            if (data.hasOwnProperty('jobStageDetails')) {
                obj['jobStageDetails'] = ApiClient.convertToType(data['jobStageDetails'], Object);
            }
            if (data.hasOwnProperty('stageName')) {
                obj['stageName'] = ApiClient.convertToType(data['stageName'], 'String');
            }
            if (data.hasOwnProperty('stageStatus')) {
                obj['stageStatus'] = ApiClient.convertToType(data['stageStatus'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>JobStages</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>JobStages</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of JobStages.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['errorDetails']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['errorDetails'])) {
                throw new Error("Expected the field `errorDetails` to be an array in the JSON data but got " + data['errorDetails']);
            }
            // validate the optional field `errorDetails` (array)
            for (const item of data['errorDetails']) {
                ErrorDetails.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['stageName'] && !(typeof data['stageName'] === 'string' || data['stageName'] instanceof String)) {
            throw new Error("Expected the field `stageName` to be a primitive type in the JSON string but got " + data['stageName']);
        }
        // ensure the json data is a string
        if (data['stageStatus'] && !(typeof data['stageStatus'] === 'string' || data['stageStatus'] instanceof String)) {
            throw new Error("Expected the field `stageStatus` to be a primitive type in the JSON string but got " + data['stageStatus']);
        }

        return true;
    }


}

JobStages.RequiredProperties = ["stageStatus"];

/**
 * Error details for the stage. This is optional
 * @member {Array.<module:model/ErrorDetails>} errorDetails
 */
JobStages.prototype['errorDetails'] = undefined;

/**
 * Job Stage Details
 * @member {Object} jobStageDetails
 */
JobStages.prototype['jobStageDetails'] = undefined;

/**
 * Name of the job stage.
 * @member {String} stageName
 */
JobStages.prototype['stageName'] = undefined;

/**
 * Status of the job stage.
 * @member {module:model/JobStages.StageStatusEnum} stageStatus
 */
JobStages.prototype['stageStatus'] = undefined;





/**
 * Allowed values for the <code>stageStatus</code> property.
 * @enum {String}
 * @readonly
 */
JobStages['StageStatusEnum'] = {

    /**
     * value: "None"
     * @const
     */
    "None": "None",

    /**
     * value: "InProgress"
     * @const
     */
    "InProgress": "InProgress",

    /**
     * value: "Succeeded"
     * @const
     */
    "Succeeded": "Succeeded",

    /**
     * value: "WaitingForAction"
     * @const
     */
    "WaitingForAction": "WaitingForAction",

    /**
     * value: "Failed"
     * @const
     */
    "Failed": "Failed",

    /**
     * value: "Cancelled"
     * @const
     */
    "Cancelled": "Cancelled",

    /**
     * value: "Cancelling"
     * @const
     */
    "Cancelling": "Cancelling"
};



export default JobStages;

