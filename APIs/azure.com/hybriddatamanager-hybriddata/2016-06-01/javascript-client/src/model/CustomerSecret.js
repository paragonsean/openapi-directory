/**
 * HybridDataManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CustomerSecret model module.
 * @module model/CustomerSecret
 * @version 2016-06-01
 */
class CustomerSecret {
    /**
     * Constructs a new <code>CustomerSecret</code>.
     * The pair of customer secret.
     * @alias module:model/CustomerSecret
     * @param algorithm {module:model/CustomerSecret.AlgorithmEnum} The encryption algorithm used to encrypt data.
     * @param keyIdentifier {String} The identifier to the data service input object which this secret corresponds to.
     * @param keyValue {String} It contains the encrypted customer secret.
     */
    constructor(algorithm, keyIdentifier, keyValue) { 
        
        CustomerSecret.initialize(this, algorithm, keyIdentifier, keyValue);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, algorithm, keyIdentifier, keyValue) { 
        obj['algorithm'] = algorithm;
        obj['keyIdentifier'] = keyIdentifier;
        obj['keyValue'] = keyValue;
    }

    /**
     * Constructs a <code>CustomerSecret</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CustomerSecret} obj Optional instance to populate.
     * @return {module:model/CustomerSecret} The populated <code>CustomerSecret</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CustomerSecret();

            if (data.hasOwnProperty('algorithm')) {
                obj['algorithm'] = ApiClient.convertToType(data['algorithm'], 'String');
            }
            if (data.hasOwnProperty('keyIdentifier')) {
                obj['keyIdentifier'] = ApiClient.convertToType(data['keyIdentifier'], 'String');
            }
            if (data.hasOwnProperty('keyValue')) {
                obj['keyValue'] = ApiClient.convertToType(data['keyValue'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CustomerSecret</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CustomerSecret</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CustomerSecret.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['algorithm'] && !(typeof data['algorithm'] === 'string' || data['algorithm'] instanceof String)) {
            throw new Error("Expected the field `algorithm` to be a primitive type in the JSON string but got " + data['algorithm']);
        }
        // ensure the json data is a string
        if (data['keyIdentifier'] && !(typeof data['keyIdentifier'] === 'string' || data['keyIdentifier'] instanceof String)) {
            throw new Error("Expected the field `keyIdentifier` to be a primitive type in the JSON string but got " + data['keyIdentifier']);
        }
        // ensure the json data is a string
        if (data['keyValue'] && !(typeof data['keyValue'] === 'string' || data['keyValue'] instanceof String)) {
            throw new Error("Expected the field `keyValue` to be a primitive type in the JSON string but got " + data['keyValue']);
        }

        return true;
    }


}

CustomerSecret.RequiredProperties = ["algorithm", "keyIdentifier", "keyValue"];

/**
 * The encryption algorithm used to encrypt data.
 * @member {module:model/CustomerSecret.AlgorithmEnum} algorithm
 */
CustomerSecret.prototype['algorithm'] = undefined;

/**
 * The identifier to the data service input object which this secret corresponds to.
 * @member {String} keyIdentifier
 */
CustomerSecret.prototype['keyIdentifier'] = undefined;

/**
 * It contains the encrypted customer secret.
 * @member {String} keyValue
 */
CustomerSecret.prototype['keyValue'] = undefined;





/**
 * Allowed values for the <code>algorithm</code> property.
 * @enum {String}
 * @readonly
 */
CustomerSecret['AlgorithmEnum'] = {

    /**
     * value: "None"
     * @const
     */
    "None": "None",

    /**
     * value: "RSA1_5"
     * @const
     */
    "RSA1_5": "RSA1_5",

    /**
     * value: "RSA_OAEP"
     * @const
     */
    "RSA_OAEP": "RSA_OAEP",

    /**
     * value: "PlainText"
     * @const
     */
    "PlainText": "PlainText"
};



export default CustomerSecret;

