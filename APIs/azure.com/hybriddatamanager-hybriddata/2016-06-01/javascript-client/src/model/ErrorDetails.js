/**
 * HybridDataManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ErrorDetails model module.
 * @module model/ErrorDetails
 * @version 2016-06-01
 */
class ErrorDetails {
    /**
     * Constructs a new <code>ErrorDetails</code>.
     * Error Details
     * @alias module:model/ErrorDetails
     */
    constructor() { 
        
        ErrorDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ErrorDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ErrorDetails} obj Optional instance to populate.
     * @return {module:model/ErrorDetails} The populated <code>ErrorDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ErrorDetails();

            if (data.hasOwnProperty('errorCode')) {
                obj['errorCode'] = ApiClient.convertToType(data['errorCode'], 'Number');
            }
            if (data.hasOwnProperty('errorMessage')) {
                obj['errorMessage'] = ApiClient.convertToType(data['errorMessage'], 'String');
            }
            if (data.hasOwnProperty('exceptionMessage')) {
                obj['exceptionMessage'] = ApiClient.convertToType(data['exceptionMessage'], 'String');
            }
            if (data.hasOwnProperty('recommendedAction')) {
                obj['recommendedAction'] = ApiClient.convertToType(data['recommendedAction'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ErrorDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ErrorDetails</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['errorMessage'] && !(typeof data['errorMessage'] === 'string' || data['errorMessage'] instanceof String)) {
            throw new Error("Expected the field `errorMessage` to be a primitive type in the JSON string but got " + data['errorMessage']);
        }
        // ensure the json data is a string
        if (data['exceptionMessage'] && !(typeof data['exceptionMessage'] === 'string' || data['exceptionMessage'] instanceof String)) {
            throw new Error("Expected the field `exceptionMessage` to be a primitive type in the JSON string but got " + data['exceptionMessage']);
        }
        // ensure the json data is a string
        if (data['recommendedAction'] && !(typeof data['recommendedAction'] === 'string' || data['recommendedAction'] instanceof String)) {
            throw new Error("Expected the field `recommendedAction` to be a primitive type in the JSON string but got " + data['recommendedAction']);
        }

        return true;
    }


}



/**
 * Error code.
 * @member {Number} errorCode
 */
ErrorDetails.prototype['errorCode'] = undefined;

/**
 * Error message.
 * @member {String} errorMessage
 */
ErrorDetails.prototype['errorMessage'] = undefined;

/**
 * Contains the non localized exception message
 * @member {String} exceptionMessage
 */
ErrorDetails.prototype['exceptionMessage'] = undefined;

/**
 * Recommended action for the error.
 * @member {String} recommendedAction
 */
ErrorDetails.prototype['recommendedAction'] = undefined;






export default ErrorDetails;

