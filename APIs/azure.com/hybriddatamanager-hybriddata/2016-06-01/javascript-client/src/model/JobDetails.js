/**
 * HybridDataManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ErrorDetails from './ErrorDetails';
import JobDefinition from './JobDefinition';
import JobStages from './JobStages';

/**
 * The JobDetails model module.
 * @module model/JobDetails
 * @version 2016-06-01
 */
class JobDetails {
    /**
     * Constructs a new <code>JobDetails</code>.
     * Job details.
     * @alias module:model/JobDetails
     */
    constructor() { 
        
        JobDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>JobDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/JobDetails} obj Optional instance to populate.
     * @return {module:model/JobDetails} The populated <code>JobDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new JobDetails();

            if (data.hasOwnProperty('errorDetails')) {
                obj['errorDetails'] = ApiClient.convertToType(data['errorDetails'], [ErrorDetails]);
            }
            if (data.hasOwnProperty('itemDetailsLink')) {
                obj['itemDetailsLink'] = ApiClient.convertToType(data['itemDetailsLink'], 'String');
            }
            if (data.hasOwnProperty('jobDefinition')) {
                obj['jobDefinition'] = JobDefinition.constructFromObject(data['jobDefinition']);
            }
            if (data.hasOwnProperty('jobStages')) {
                obj['jobStages'] = ApiClient.convertToType(data['jobStages'], [JobStages]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>JobDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>JobDetails</code>.
     */
    static validateJSON(data) {
        if (data['errorDetails']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['errorDetails'])) {
                throw new Error("Expected the field `errorDetails` to be an array in the JSON data but got " + data['errorDetails']);
            }
            // validate the optional field `errorDetails` (array)
            for (const item of data['errorDetails']) {
                ErrorDetails.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['itemDetailsLink'] && !(typeof data['itemDetailsLink'] === 'string' || data['itemDetailsLink'] instanceof String)) {
            throw new Error("Expected the field `itemDetailsLink` to be a primitive type in the JSON string but got " + data['itemDetailsLink']);
        }
        // validate the optional field `jobDefinition`
        if (data['jobDefinition']) { // data not null
          JobDefinition.validateJSON(data['jobDefinition']);
        }
        if (data['jobStages']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['jobStages'])) {
                throw new Error("Expected the field `jobStages` to be an array in the JSON data but got " + data['jobStages']);
            }
            // validate the optional field `jobStages` (array)
            for (const item of data['jobStages']) {
                JobStages.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Error details for failure. This is optional.
 * @member {Array.<module:model/ErrorDetails>} errorDetails
 */
JobDetails.prototype['errorDetails'] = undefined;

/**
 * Item Details Link to download files or see details
 * @member {String} itemDetailsLink
 */
JobDetails.prototype['itemDetailsLink'] = undefined;

/**
 * @member {module:model/JobDefinition} jobDefinition
 */
JobDetails.prototype['jobDefinition'] = undefined;

/**
 * List of stages that ran in the job
 * @member {Array.<module:model/JobStages>} jobStages
 */
JobDetails.prototype['jobStages'] = undefined;






export default JobDetails;

