/**
 * HybridDataManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-06-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIJobProperties.h
 *
 * Job Properties
 */

#ifndef OAIJobProperties_H
#define OAIJobProperties_H

#include <QJsonObject>

#include "OAIJobDetails.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIJobDetails;

class OAIJobProperties : public OAIObject {
public:
    OAIJobProperties();
    OAIJobProperties(QString json);
    ~OAIJobProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint64 getBytesProcessed() const;
    void setBytesProcessed(const qint64 &bytes_processed);
    bool is_bytes_processed_Set() const;
    bool is_bytes_processed_Valid() const;

    QString getDataSinkName() const;
    void setDataSinkName(const QString &data_sink_name);
    bool is_data_sink_name_Set() const;
    bool is_data_sink_name_Valid() const;

    QString getDataSourceName() const;
    void setDataSourceName(const QString &data_source_name);
    bool is_data_source_name_Set() const;
    bool is_data_source_name_Valid() const;

    OAIJobDetails getDetails() const;
    void setDetails(const OAIJobDetails &details);
    bool is_details_Set() const;
    bool is_details_Valid() const;

    QString getIsCancellable() const;
    void setIsCancellable(const QString &is_cancellable);
    bool is_is_cancellable_Set() const;
    bool is_is_cancellable_Valid() const;

    qint64 getItemsProcessed() const;
    void setItemsProcessed(const qint64 &items_processed);
    bool is_items_processed_Set() const;
    bool is_items_processed_Valid() const;

    qint64 getTotalBytesToProcess() const;
    void setTotalBytesToProcess(const qint64 &total_bytes_to_process);
    bool is_total_bytes_to_process_Set() const;
    bool is_total_bytes_to_process_Valid() const;

    qint64 getTotalItemsToProcess() const;
    void setTotalItemsToProcess(const qint64 &total_items_to_process);
    bool is_total_items_to_process_Set() const;
    bool is_total_items_to_process_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint64 m_bytes_processed;
    bool m_bytes_processed_isSet;
    bool m_bytes_processed_isValid;

    QString m_data_sink_name;
    bool m_data_sink_name_isSet;
    bool m_data_sink_name_isValid;

    QString m_data_source_name;
    bool m_data_source_name_isSet;
    bool m_data_source_name_isValid;

    OAIJobDetails m_details;
    bool m_details_isSet;
    bool m_details_isValid;

    QString m_is_cancellable;
    bool m_is_cancellable_isSet;
    bool m_is_cancellable_isValid;

    qint64 m_items_processed;
    bool m_items_processed_isSet;
    bool m_items_processed_isValid;

    qint64 m_total_bytes_to_process;
    bool m_total_bytes_to_process_isSet;
    bool m_total_bytes_to_process_isValid;

    qint64 m_total_items_to_process;
    bool m_total_items_to_process_isSet;
    bool m_total_items_to_process_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIJobProperties)

#endif // OAIJobProperties_H
