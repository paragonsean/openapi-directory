/**
 * HybridDataManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-06-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPublicKeyProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPublicKeyProperties::OAIPublicKeyProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPublicKeyProperties::OAIPublicKeyProperties() {
    this->initializeModel();
}

OAIPublicKeyProperties::~OAIPublicKeyProperties() {}

void OAIPublicKeyProperties::initializeModel() {

    m_data_service_level1_key_isSet = false;
    m_data_service_level1_key_isValid = false;

    m_data_service_level2_key_isSet = false;
    m_data_service_level2_key_isValid = false;
}

void OAIPublicKeyProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPublicKeyProperties::fromJsonObject(QJsonObject json) {

    m_data_service_level1_key_isValid = ::OpenAPI::fromJsonValue(m_data_service_level1_key, json[QString("dataServiceLevel1Key")]);
    m_data_service_level1_key_isSet = !json[QString("dataServiceLevel1Key")].isNull() && m_data_service_level1_key_isValid;

    m_data_service_level2_key_isValid = ::OpenAPI::fromJsonValue(m_data_service_level2_key, json[QString("dataServiceLevel2Key")]);
    m_data_service_level2_key_isSet = !json[QString("dataServiceLevel2Key")].isNull() && m_data_service_level2_key_isValid;
}

QString OAIPublicKeyProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPublicKeyProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_data_service_level1_key.isSet()) {
        obj.insert(QString("dataServiceLevel1Key"), ::OpenAPI::toJsonValue(m_data_service_level1_key));
    }
    if (m_data_service_level2_key.isSet()) {
        obj.insert(QString("dataServiceLevel2Key"), ::OpenAPI::toJsonValue(m_data_service_level2_key));
    }
    return obj;
}

OAIKey OAIPublicKeyProperties::getDataServiceLevel1Key() const {
    return m_data_service_level1_key;
}
void OAIPublicKeyProperties::setDataServiceLevel1Key(const OAIKey &data_service_level1_key) {
    m_data_service_level1_key = data_service_level1_key;
    m_data_service_level1_key_isSet = true;
}

bool OAIPublicKeyProperties::is_data_service_level1_key_Set() const{
    return m_data_service_level1_key_isSet;
}

bool OAIPublicKeyProperties::is_data_service_level1_key_Valid() const{
    return m_data_service_level1_key_isValid;
}

OAIKey OAIPublicKeyProperties::getDataServiceLevel2Key() const {
    return m_data_service_level2_key;
}
void OAIPublicKeyProperties::setDataServiceLevel2Key(const OAIKey &data_service_level2_key) {
    m_data_service_level2_key = data_service_level2_key;
    m_data_service_level2_key_isSet = true;
}

bool OAIPublicKeyProperties::is_data_service_level2_key_Set() const{
    return m_data_service_level2_key_isSet;
}

bool OAIPublicKeyProperties::is_data_service_level2_key_Valid() const{
    return m_data_service_level2_key_isValid;
}

bool OAIPublicKeyProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_data_service_level1_key.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_data_service_level2_key.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPublicKeyProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_data_service_level1_key_isValid && m_data_service_level2_key_isValid && true;
}

} // namespace OpenAPI
