/**
 * HybridDataManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-06-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIJobDetails.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIJobDetails::OAIJobDetails(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIJobDetails::OAIJobDetails() {
    this->initializeModel();
}

OAIJobDetails::~OAIJobDetails() {}

void OAIJobDetails::initializeModel() {

    m_error_details_isSet = false;
    m_error_details_isValid = false;

    m_item_details_link_isSet = false;
    m_item_details_link_isValid = false;

    m_job_definition_isSet = false;
    m_job_definition_isValid = false;

    m_job_stages_isSet = false;
    m_job_stages_isValid = false;
}

void OAIJobDetails::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIJobDetails::fromJsonObject(QJsonObject json) {

    m_error_details_isValid = ::OpenAPI::fromJsonValue(m_error_details, json[QString("errorDetails")]);
    m_error_details_isSet = !json[QString("errorDetails")].isNull() && m_error_details_isValid;

    m_item_details_link_isValid = ::OpenAPI::fromJsonValue(m_item_details_link, json[QString("itemDetailsLink")]);
    m_item_details_link_isSet = !json[QString("itemDetailsLink")].isNull() && m_item_details_link_isValid;

    m_job_definition_isValid = ::OpenAPI::fromJsonValue(m_job_definition, json[QString("jobDefinition")]);
    m_job_definition_isSet = !json[QString("jobDefinition")].isNull() && m_job_definition_isValid;

    m_job_stages_isValid = ::OpenAPI::fromJsonValue(m_job_stages, json[QString("jobStages")]);
    m_job_stages_isSet = !json[QString("jobStages")].isNull() && m_job_stages_isValid;
}

QString OAIJobDetails::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIJobDetails::asJsonObject() const {
    QJsonObject obj;
    if (m_error_details.size() > 0) {
        obj.insert(QString("errorDetails"), ::OpenAPI::toJsonValue(m_error_details));
    }
    if (m_item_details_link_isSet) {
        obj.insert(QString("itemDetailsLink"), ::OpenAPI::toJsonValue(m_item_details_link));
    }
    if (m_job_definition.isSet()) {
        obj.insert(QString("jobDefinition"), ::OpenAPI::toJsonValue(m_job_definition));
    }
    if (m_job_stages.size() > 0) {
        obj.insert(QString("jobStages"), ::OpenAPI::toJsonValue(m_job_stages));
    }
    return obj;
}

QList<OAIErrorDetails> OAIJobDetails::getErrorDetails() const {
    return m_error_details;
}
void OAIJobDetails::setErrorDetails(const QList<OAIErrorDetails> &error_details) {
    m_error_details = error_details;
    m_error_details_isSet = true;
}

bool OAIJobDetails::is_error_details_Set() const{
    return m_error_details_isSet;
}

bool OAIJobDetails::is_error_details_Valid() const{
    return m_error_details_isValid;
}

QString OAIJobDetails::getItemDetailsLink() const {
    return m_item_details_link;
}
void OAIJobDetails::setItemDetailsLink(const QString &item_details_link) {
    m_item_details_link = item_details_link;
    m_item_details_link_isSet = true;
}

bool OAIJobDetails::is_item_details_link_Set() const{
    return m_item_details_link_isSet;
}

bool OAIJobDetails::is_item_details_link_Valid() const{
    return m_item_details_link_isValid;
}

OAIJobDefinition OAIJobDetails::getJobDefinition() const {
    return m_job_definition;
}
void OAIJobDetails::setJobDefinition(const OAIJobDefinition &job_definition) {
    m_job_definition = job_definition;
    m_job_definition_isSet = true;
}

bool OAIJobDetails::is_job_definition_Set() const{
    return m_job_definition_isSet;
}

bool OAIJobDetails::is_job_definition_Valid() const{
    return m_job_definition_isValid;
}

QList<OAIJobStages> OAIJobDetails::getJobStages() const {
    return m_job_stages;
}
void OAIJobDetails::setJobStages(const QList<OAIJobStages> &job_stages) {
    m_job_stages = job_stages;
    m_job_stages_isSet = true;
}

bool OAIJobDetails::is_job_stages_Set() const{
    return m_job_stages_isSet;
}

bool OAIJobDetails::is_job_stages_Valid() const{
    return m_job_stages_isValid;
}

bool OAIJobDetails::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_error_details.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_item_details_link_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_job_definition.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_job_stages.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIJobDetails::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
