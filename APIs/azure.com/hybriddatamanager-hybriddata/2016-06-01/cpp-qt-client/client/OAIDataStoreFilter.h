/**
 * HybridDataManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-06-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDataStoreFilter.h
 *
 * Contains the information about the filters for the DataStore.
 */

#ifndef OAIDataStoreFilter_H
#define OAIDataStoreFilter_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDataStoreFilter : public OAIObject {
public:
    OAIDataStoreFilter();
    OAIDataStoreFilter(QString json);
    ~OAIDataStoreFilter() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDataStoreTypeId() const;
    void setDataStoreTypeId(const QString &data_store_type_id);
    bool is_data_store_type_id_Set() const;
    bool is_data_store_type_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_data_store_type_id;
    bool m_data_store_type_id_isSet;
    bool m_data_store_type_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDataStoreFilter)

#endif // OAIDataStoreFilter_H
