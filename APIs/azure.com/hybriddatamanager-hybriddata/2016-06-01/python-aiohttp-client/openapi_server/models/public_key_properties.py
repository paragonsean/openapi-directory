# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.key import Key
from openapi_server import util


class PublicKeyProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, data_service_level1_key: Key=None, data_service_level2_key: Key=None):
        """PublicKeyProperties - a model defined in OpenAPI

        :param data_service_level1_key: The data_service_level1_key of this PublicKeyProperties.
        :param data_service_level2_key: The data_service_level2_key of this PublicKeyProperties.
        """
        self.openapi_types = {
            'data_service_level1_key': Key,
            'data_service_level2_key': Key
        }

        self.attribute_map = {
            'data_service_level1_key': 'dataServiceLevel1Key',
            'data_service_level2_key': 'dataServiceLevel2Key'
        }

        self._data_service_level1_key = data_service_level1_key
        self._data_service_level2_key = data_service_level2_key

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PublicKeyProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PublicKeyProperties of this PublicKeyProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def data_service_level1_key(self):
        """Gets the data_service_level1_key of this PublicKeyProperties.


        :return: The data_service_level1_key of this PublicKeyProperties.
        :rtype: Key
        """
        return self._data_service_level1_key

    @data_service_level1_key.setter
    def data_service_level1_key(self, data_service_level1_key):
        """Sets the data_service_level1_key of this PublicKeyProperties.


        :param data_service_level1_key: The data_service_level1_key of this PublicKeyProperties.
        :type data_service_level1_key: Key
        """
        if data_service_level1_key is None:
            raise ValueError("Invalid value for `data_service_level1_key`, must not be `None`")

        self._data_service_level1_key = data_service_level1_key

    @property
    def data_service_level2_key(self):
        """Gets the data_service_level2_key of this PublicKeyProperties.


        :return: The data_service_level2_key of this PublicKeyProperties.
        :rtype: Key
        """
        return self._data_service_level2_key

    @data_service_level2_key.setter
    def data_service_level2_key(self, data_service_level2_key):
        """Sets the data_service_level2_key of this PublicKeyProperties.


        :param data_service_level2_key: The data_service_level2_key of this PublicKeyProperties.
        :type data_service_level2_key: Key
        """
        if data_service_level2_key is None:
            raise ValueError("Invalid value for `data_service_level2_key`, must not be `None`")

        self._data_service_level2_key = data_service_level2_key
