/*
 * HybridDataManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.DataStore;
import org.openapitools.client.model.DataStoreList;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DataStoresApi
 */
@Disabled
public class DataStoresApiTest {

    private final DataStoresApi api = new DataStoresApi();

    /**
     * Creates or updates the data store/repository in the data manager.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dataStoresCreateOrUpdateTest() throws ApiException {
        String dataStoreName = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String dataManagerName = null;
        String apiVersion = null;
        DataStore dataStore = null;
        DataStore response = api.dataStoresCreateOrUpdate(dataStoreName, subscriptionId, resourceGroupName, dataManagerName, apiVersion, dataStore);
        // TODO: test validations
    }

    /**
     * This method deletes the given data store/repository.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dataStoresDeleteTest() throws ApiException {
        String dataStoreName = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String dataManagerName = null;
        String apiVersion = null;
        api.dataStoresDelete(dataStoreName, subscriptionId, resourceGroupName, dataManagerName, apiVersion);
        // TODO: test validations
    }

    /**
     * This method gets the data store/repository by name.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dataStoresGetTest() throws ApiException {
        String dataStoreName = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String dataManagerName = null;
        String apiVersion = null;
        DataStore response = api.dataStoresGet(dataStoreName, subscriptionId, resourceGroupName, dataManagerName, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets all the data stores/repositories in the given resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dataStoresListByDataManagerTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String dataManagerName = null;
        String apiVersion = null;
        String $filter = null;
        DataStoreList response = api.dataStoresListByDataManager(subscriptionId, resourceGroupName, dataManagerName, apiVersion, $filter);
        // TODO: test validations
    }

}
