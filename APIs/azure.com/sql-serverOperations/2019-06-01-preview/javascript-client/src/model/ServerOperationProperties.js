/**
 * SqlManagementClient
 * The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.
 *
 * The version of the OpenAPI document: 2019-06-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ServerOperationProperties model module.
 * @module model/ServerOperationProperties
 * @version 2019-06-01-preview
 */
class ServerOperationProperties {
    /**
     * Constructs a new <code>ServerOperationProperties</code>.
     * The properties of a server operation.
     * @alias module:model/ServerOperationProperties
     */
    constructor() { 
        
        ServerOperationProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ServerOperationProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ServerOperationProperties} obj Optional instance to populate.
     * @return {module:model/ServerOperationProperties} The populated <code>ServerOperationProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ServerOperationProperties();

            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('errorCode')) {
                obj['errorCode'] = ApiClient.convertToType(data['errorCode'], 'Number');
            }
            if (data.hasOwnProperty('errorDescription')) {
                obj['errorDescription'] = ApiClient.convertToType(data['errorDescription'], 'String');
            }
            if (data.hasOwnProperty('errorSeverity')) {
                obj['errorSeverity'] = ApiClient.convertToType(data['errorSeverity'], 'Number');
            }
            if (data.hasOwnProperty('estimatedCompletionTime')) {
                obj['estimatedCompletionTime'] = ApiClient.convertToType(data['estimatedCompletionTime'], 'Date');
            }
            if (data.hasOwnProperty('isCancellable')) {
                obj['isCancellable'] = ApiClient.convertToType(data['isCancellable'], 'Boolean');
            }
            if (data.hasOwnProperty('isUserError')) {
                obj['isUserError'] = ApiClient.convertToType(data['isUserError'], 'Boolean');
            }
            if (data.hasOwnProperty('operation')) {
                obj['operation'] = ApiClient.convertToType(data['operation'], 'String');
            }
            if (data.hasOwnProperty('operationFriendlyName')) {
                obj['operationFriendlyName'] = ApiClient.convertToType(data['operationFriendlyName'], 'String');
            }
            if (data.hasOwnProperty('percentComplete')) {
                obj['percentComplete'] = ApiClient.convertToType(data['percentComplete'], 'Number');
            }
            if (data.hasOwnProperty('serverName')) {
                obj['serverName'] = ApiClient.convertToType(data['serverName'], 'String');
            }
            if (data.hasOwnProperty('startTime')) {
                obj['startTime'] = ApiClient.convertToType(data['startTime'], 'Date');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ServerOperationProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ServerOperationProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['errorDescription'] && !(typeof data['errorDescription'] === 'string' || data['errorDescription'] instanceof String)) {
            throw new Error("Expected the field `errorDescription` to be a primitive type in the JSON string but got " + data['errorDescription']);
        }
        // ensure the json data is a string
        if (data['operation'] && !(typeof data['operation'] === 'string' || data['operation'] instanceof String)) {
            throw new Error("Expected the field `operation` to be a primitive type in the JSON string but got " + data['operation']);
        }
        // ensure the json data is a string
        if (data['operationFriendlyName'] && !(typeof data['operationFriendlyName'] === 'string' || data['operationFriendlyName'] instanceof String)) {
            throw new Error("Expected the field `operationFriendlyName` to be a primitive type in the JSON string but got " + data['operationFriendlyName']);
        }
        // ensure the json data is a string
        if (data['serverName'] && !(typeof data['serverName'] === 'string' || data['serverName'] instanceof String)) {
            throw new Error("Expected the field `serverName` to be a primitive type in the JSON string but got " + data['serverName']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }

        return true;
    }


}



/**
 * The operation description.
 * @member {String} description
 */
ServerOperationProperties.prototype['description'] = undefined;

/**
 * The operation error code.
 * @member {Number} errorCode
 */
ServerOperationProperties.prototype['errorCode'] = undefined;

/**
 * The operation error description.
 * @member {String} errorDescription
 */
ServerOperationProperties.prototype['errorDescription'] = undefined;

/**
 * The operation error severity.
 * @member {Number} errorSeverity
 */
ServerOperationProperties.prototype['errorSeverity'] = undefined;

/**
 * The estimated completion time of the operation.
 * @member {Date} estimatedCompletionTime
 */
ServerOperationProperties.prototype['estimatedCompletionTime'] = undefined;

/**
 * Whether the operation can be cancelled.
 * @member {Boolean} isCancellable
 */
ServerOperationProperties.prototype['isCancellable'] = undefined;

/**
 * Whether or not the error is a user error.
 * @member {Boolean} isUserError
 */
ServerOperationProperties.prototype['isUserError'] = undefined;

/**
 * The name of operation.
 * @member {String} operation
 */
ServerOperationProperties.prototype['operation'] = undefined;

/**
 * The friendly name of operation.
 * @member {String} operationFriendlyName
 */
ServerOperationProperties.prototype['operationFriendlyName'] = undefined;

/**
 * The percentage of the operation completed.
 * @member {Number} percentComplete
 */
ServerOperationProperties.prototype['percentComplete'] = undefined;

/**
 * The name of the server.
 * @member {String} serverName
 */
ServerOperationProperties.prototype['serverName'] = undefined;

/**
 * The operation start time.
 * @member {Date} startTime
 */
ServerOperationProperties.prototype['startTime'] = undefined;

/**
 * The operation state.
 * @member {module:model/ServerOperationProperties.StateEnum} state
 */
ServerOperationProperties.prototype['state'] = undefined;





/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
ServerOperationProperties['StateEnum'] = {

    /**
     * value: "Pending"
     * @const
     */
    "Pending": "Pending",

    /**
     * value: "InProgress"
     * @const
     */
    "InProgress": "InProgress",

    /**
     * value: "Succeeded"
     * @const
     */
    "Succeeded": "Succeeded",

    /**
     * value: "Failed"
     * @const
     */
    "Failed": "Failed",

    /**
     * value: "CancelInProgress"
     * @const
     */
    "CancelInProgress": "CancelInProgress",

    /**
     * value: "Cancelled"
     * @const
     */
    "Cancelled": "Cancelled"
};



export default ServerOperationProperties;

