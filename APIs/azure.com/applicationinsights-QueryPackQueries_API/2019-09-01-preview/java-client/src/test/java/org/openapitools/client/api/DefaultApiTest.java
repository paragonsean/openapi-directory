/*
 * Azure Log Analytics Query Packs
 * Azure Log Analytics API reference for management of saved Queries within Query Packs.
 *
 * The version of the OpenAPI document: 2019-09-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ErrorResponse;
import org.openapitools.client.model.LogAnalyticsQueryPackQuery;
import org.openapitools.client.model.LogAnalyticsQueryPackQueryListResult;
import org.openapitools.client.model.LogAnalyticsQueryPackQuerySearchProperties;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Disabled
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    /**
     * Deletes a specific Query defined within an Log Analytics QueryPack.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void queriesDeleteTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String queryPackName = null;
        String queryId = null;
        String apiVersion = null;
        api.queriesDelete(subscriptionId, resourceGroupName, queryPackName, queryId, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets a specific Log Analytics Query defined within a Log Analytics QueryPack.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void queriesGetTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String queryPackName = null;
        String queryId = null;
        String apiVersion = null;
        LogAnalyticsQueryPackQuery response = api.queriesGet(subscriptionId, resourceGroupName, queryPackName, queryId, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets a list of Queries defined within a Log Analytics QueryPack.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void queriesListTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String queryPackName = null;
        String apiVersion = null;
        Integer $top = null;
        Boolean includeBody = null;
        String $skipToken = null;
        LogAnalyticsQueryPackQueryListResult response = api.queriesList(subscriptionId, resourceGroupName, queryPackName, apiVersion, $top, includeBody, $skipToken);
        // TODO: test validations
    }

    /**
     * Adds or Updates a specific Query within a Log Analytics QueryPack.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void queriesPutTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String queryPackName = null;
        String queryId = null;
        String apiVersion = null;
        LogAnalyticsQueryPackQuery queryPayload = null;
        LogAnalyticsQueryPackQuery response = api.queriesPut(subscriptionId, resourceGroupName, queryPackName, queryId, apiVersion, queryPayload);
        // TODO: test validations
    }

    /**
     * Search a list of Queries defined within a Log Analytics QueryPack according to given search properties.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void queriesSearchTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String queryPackName = null;
        String apiVersion = null;
        LogAnalyticsQueryPackQuerySearchProperties querySearchProperties = null;
        Integer $top = null;
        Boolean includeBody = null;
        String $skipToken = null;
        LogAnalyticsQueryPackQueryListResult response = api.queriesSearch(subscriptionId, resourceGroupName, queryPackName, apiVersion, querySearchProperties, $top, includeBody, $skipToken);
        // TODO: test validations
    }

}
