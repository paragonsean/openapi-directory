/**
 * Azure Log Analytics Query Packs
 * Azure Log Analytics API reference for management of saved Queries within Query Packs.
 *
 * The version of the OpenAPI document: 2019-09-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The LogAnalyticsQueryPackQuerySearchProperties model module.
 * @module model/LogAnalyticsQueryPackQuerySearchProperties
 * @version 2019-09-01-preview
 */
class LogAnalyticsQueryPackQuerySearchProperties {
    /**
     * Constructs a new <code>LogAnalyticsQueryPackQuerySearchProperties</code>.
     * Properties that define an Log Analytics QueryPack-Query search properties.
     * @alias module:model/LogAnalyticsQueryPackQuerySearchProperties
     */
    constructor() { 
        
        LogAnalyticsQueryPackQuerySearchProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LogAnalyticsQueryPackQuerySearchProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LogAnalyticsQueryPackQuerySearchProperties} obj Optional instance to populate.
     * @return {module:model/LogAnalyticsQueryPackQuerySearchProperties} The populated <code>LogAnalyticsQueryPackQuerySearchProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LogAnalyticsQueryPackQuerySearchProperties();

            if (data.hasOwnProperty('categories')) {
                obj['categories'] = ApiClient.convertToType(data['categories'], ['String']);
            }
            if (data.hasOwnProperty('labels')) {
                obj['labels'] = ApiClient.convertToType(data['labels'], ['String']);
            }
            if (data.hasOwnProperty('resourceTypes')) {
                obj['resourceTypes'] = ApiClient.convertToType(data['resourceTypes'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LogAnalyticsQueryPackQuerySearchProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LogAnalyticsQueryPackQuerySearchProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['categories'])) {
            throw new Error("Expected the field `categories` to be an array in the JSON data but got " + data['categories']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['labels'])) {
            throw new Error("Expected the field `labels` to be an array in the JSON data but got " + data['labels']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['resourceTypes'])) {
            throw new Error("Expected the field `resourceTypes` to be an array in the JSON data but got " + data['resourceTypes']);
        }

        return true;
    }


}



/**
 * Categories associated with the query.
 * @member {Array.<String>} categories
 */
LogAnalyticsQueryPackQuerySearchProperties.prototype['categories'] = undefined;

/**
 * Labels associated with the query.
 * @member {Array.<String>} labels
 */
LogAnalyticsQueryPackQuerySearchProperties.prototype['labels'] = undefined;

/**
 * Resource Types associated with the query.
 * @member {Array.<String>} resourceTypes
 */
LogAnalyticsQueryPackQuerySearchProperties.prototype['resourceTypes'] = undefined;






export default LogAnalyticsQueryPackQuerySearchProperties;

