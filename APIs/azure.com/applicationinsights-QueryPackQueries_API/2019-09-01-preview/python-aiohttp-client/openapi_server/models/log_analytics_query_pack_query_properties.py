# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class LogAnalyticsQueryPackQueryProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, author: str=None, body: str=None, categories: List[str]=None, description: str=None, display_name: str=None, labels: List[str]=None, linked_resource_id: str=None, query_id: str=None, resource_types: List[str]=None, time_created: datetime=None, time_modified: datetime=None):
        """LogAnalyticsQueryPackQueryProperties - a model defined in OpenAPI

        :param author: The author of this LogAnalyticsQueryPackQueryProperties.
        :param body: The body of this LogAnalyticsQueryPackQueryProperties.
        :param categories: The categories of this LogAnalyticsQueryPackQueryProperties.
        :param description: The description of this LogAnalyticsQueryPackQueryProperties.
        :param display_name: The display_name of this LogAnalyticsQueryPackQueryProperties.
        :param labels: The labels of this LogAnalyticsQueryPackQueryProperties.
        :param linked_resource_id: The linked_resource_id of this LogAnalyticsQueryPackQueryProperties.
        :param query_id: The query_id of this LogAnalyticsQueryPackQueryProperties.
        :param resource_types: The resource_types of this LogAnalyticsQueryPackQueryProperties.
        :param time_created: The time_created of this LogAnalyticsQueryPackQueryProperties.
        :param time_modified: The time_modified of this LogAnalyticsQueryPackQueryProperties.
        """
        self.openapi_types = {
            'author': str,
            'body': str,
            'categories': List[str],
            'description': str,
            'display_name': str,
            'labels': List[str],
            'linked_resource_id': str,
            'query_id': str,
            'resource_types': List[str],
            'time_created': datetime,
            'time_modified': datetime
        }

        self.attribute_map = {
            'author': 'author',
            'body': 'body',
            'categories': 'categories',
            'description': 'description',
            'display_name': 'displayName',
            'labels': 'labels',
            'linked_resource_id': 'linkedResourceId',
            'query_id': 'queryId',
            'resource_types': 'resourceTypes',
            'time_created': 'timeCreated',
            'time_modified': 'timeModified'
        }

        self._author = author
        self._body = body
        self._categories = categories
        self._description = description
        self._display_name = display_name
        self._labels = labels
        self._linked_resource_id = linked_resource_id
        self._query_id = query_id
        self._resource_types = resource_types
        self._time_created = time_created
        self._time_modified = time_modified

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LogAnalyticsQueryPackQueryProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LogAnalyticsQueryPackQueryProperties of this LogAnalyticsQueryPackQueryProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def author(self):
        """Gets the author of this LogAnalyticsQueryPackQueryProperties.

        Object Id of user creating the query.

        :return: The author of this LogAnalyticsQueryPackQueryProperties.
        :rtype: str
        """
        return self._author

    @author.setter
    def author(self, author):
        """Sets the author of this LogAnalyticsQueryPackQueryProperties.

        Object Id of user creating the query.

        :param author: The author of this LogAnalyticsQueryPackQueryProperties.
        :type author: str
        """

        self._author = author

    @property
    def body(self):
        """Gets the body of this LogAnalyticsQueryPackQueryProperties.

        Body of the query.

        :return: The body of this LogAnalyticsQueryPackQueryProperties.
        :rtype: str
        """
        return self._body

    @body.setter
    def body(self, body):
        """Sets the body of this LogAnalyticsQueryPackQueryProperties.

        Body of the query.

        :param body: The body of this LogAnalyticsQueryPackQueryProperties.
        :type body: str
        """
        if body is None:
            raise ValueError("Invalid value for `body`, must not be `None`")

        self._body = body

    @property
    def categories(self):
        """Gets the categories of this LogAnalyticsQueryPackQueryProperties.

        Categories associated with the query.

        :return: The categories of this LogAnalyticsQueryPackQueryProperties.
        :rtype: List[str]
        """
        return self._categories

    @categories.setter
    def categories(self, categories):
        """Sets the categories of this LogAnalyticsQueryPackQueryProperties.

        Categories associated with the query.

        :param categories: The categories of this LogAnalyticsQueryPackQueryProperties.
        :type categories: List[str]
        """

        self._categories = categories

    @property
    def description(self):
        """Gets the description of this LogAnalyticsQueryPackQueryProperties.

        Description of the query.

        :return: The description of this LogAnalyticsQueryPackQueryProperties.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this LogAnalyticsQueryPackQueryProperties.

        Description of the query.

        :param description: The description of this LogAnalyticsQueryPackQueryProperties.
        :type description: str
        """

        self._description = description

    @property
    def display_name(self):
        """Gets the display_name of this LogAnalyticsQueryPackQueryProperties.

        Unique display name for your query within the Query Pack.

        :return: The display_name of this LogAnalyticsQueryPackQueryProperties.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this LogAnalyticsQueryPackQueryProperties.

        Unique display name for your query within the Query Pack.

        :param display_name: The display_name of this LogAnalyticsQueryPackQueryProperties.
        :type display_name: str
        """
        if display_name is None:
            raise ValueError("Invalid value for `display_name`, must not be `None`")

        self._display_name = display_name

    @property
    def labels(self):
        """Gets the labels of this LogAnalyticsQueryPackQueryProperties.

        Labels associated with the query.

        :return: The labels of this LogAnalyticsQueryPackQueryProperties.
        :rtype: List[str]
        """
        return self._labels

    @labels.setter
    def labels(self, labels):
        """Sets the labels of this LogAnalyticsQueryPackQueryProperties.

        Labels associated with the query.

        :param labels: The labels of this LogAnalyticsQueryPackQueryProperties.
        :type labels: List[str]
        """

        self._labels = labels

    @property
    def linked_resource_id(self):
        """Gets the linked_resource_id of this LogAnalyticsQueryPackQueryProperties.

        Resource id associated with the query.

        :return: The linked_resource_id of this LogAnalyticsQueryPackQueryProperties.
        :rtype: str
        """
        return self._linked_resource_id

    @linked_resource_id.setter
    def linked_resource_id(self, linked_resource_id):
        """Sets the linked_resource_id of this LogAnalyticsQueryPackQueryProperties.

        Resource id associated with the query.

        :param linked_resource_id: The linked_resource_id of this LogAnalyticsQueryPackQueryProperties.
        :type linked_resource_id: str
        """

        self._linked_resource_id = linked_resource_id

    @property
    def query_id(self):
        """Gets the query_id of this LogAnalyticsQueryPackQueryProperties.

        The unique ID of your application. This field cannot be changed.

        :return: The query_id of this LogAnalyticsQueryPackQueryProperties.
        :rtype: str
        """
        return self._query_id

    @query_id.setter
    def query_id(self, query_id):
        """Sets the query_id of this LogAnalyticsQueryPackQueryProperties.

        The unique ID of your application. This field cannot be changed.

        :param query_id: The query_id of this LogAnalyticsQueryPackQueryProperties.
        :type query_id: str
        """

        self._query_id = query_id

    @property
    def resource_types(self):
        """Gets the resource_types of this LogAnalyticsQueryPackQueryProperties.

        Resource Types associated with the query.

        :return: The resource_types of this LogAnalyticsQueryPackQueryProperties.
        :rtype: List[str]
        """
        return self._resource_types

    @resource_types.setter
    def resource_types(self, resource_types):
        """Sets the resource_types of this LogAnalyticsQueryPackQueryProperties.

        Resource Types associated with the query.

        :param resource_types: The resource_types of this LogAnalyticsQueryPackQueryProperties.
        :type resource_types: List[str]
        """

        self._resource_types = resource_types

    @property
    def time_created(self):
        """Gets the time_created of this LogAnalyticsQueryPackQueryProperties.

        Creation Date for the Log Analytics Query, in ISO 8601 format.

        :return: The time_created of this LogAnalyticsQueryPackQueryProperties.
        :rtype: datetime
        """
        return self._time_created

    @time_created.setter
    def time_created(self, time_created):
        """Sets the time_created of this LogAnalyticsQueryPackQueryProperties.

        Creation Date for the Log Analytics Query, in ISO 8601 format.

        :param time_created: The time_created of this LogAnalyticsQueryPackQueryProperties.
        :type time_created: datetime
        """

        self._time_created = time_created

    @property
    def time_modified(self):
        """Gets the time_modified of this LogAnalyticsQueryPackQueryProperties.

        Last modified date of the Log Analytics Query, in ISO 8601 format.

        :return: The time_modified of this LogAnalyticsQueryPackQueryProperties.
        :rtype: datetime
        """
        return self._time_modified

    @time_modified.setter
    def time_modified(self, time_modified):
        """Sets the time_modified of this LogAnalyticsQueryPackQueryProperties.

        Last modified date of the Log Analytics Query, in ISO 8601 format.

        :param time_modified: The time_modified of this LogAnalyticsQueryPackQueryProperties.
        :type time_modified: datetime
        """

        self._time_modified = time_modified
