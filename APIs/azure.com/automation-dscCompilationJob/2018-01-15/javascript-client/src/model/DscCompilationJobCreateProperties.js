/**
 * AutomationManagement
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-01-15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DscConfigurationAssociationProperty from './DscConfigurationAssociationProperty';

/**
 * The DscCompilationJobCreateProperties model module.
 * @module model/DscCompilationJobCreateProperties
 * @version 2018-01-15
 */
class DscCompilationJobCreateProperties {
    /**
     * Constructs a new <code>DscCompilationJobCreateProperties</code>.
     * The parameters supplied to the create compilation job operation.
     * @alias module:model/DscCompilationJobCreateProperties
     * @param configuration {module:model/DscConfigurationAssociationProperty} 
     */
    constructor(configuration) { 
        
        DscCompilationJobCreateProperties.initialize(this, configuration);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, configuration) { 
        obj['configuration'] = configuration;
    }

    /**
     * Constructs a <code>DscCompilationJobCreateProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DscCompilationJobCreateProperties} obj Optional instance to populate.
     * @return {module:model/DscCompilationJobCreateProperties} The populated <code>DscCompilationJobCreateProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DscCompilationJobCreateProperties();

            if (data.hasOwnProperty('configuration')) {
                obj['configuration'] = DscConfigurationAssociationProperty.constructFromObject(data['configuration']);
            }
            if (data.hasOwnProperty('incrementNodeConfigurationBuild')) {
                obj['incrementNodeConfigurationBuild'] = ApiClient.convertToType(data['incrementNodeConfigurationBuild'], 'Boolean');
            }
            if (data.hasOwnProperty('parameters')) {
                obj['parameters'] = ApiClient.convertToType(data['parameters'], {'String': 'String'});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DscCompilationJobCreateProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DscCompilationJobCreateProperties</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DscCompilationJobCreateProperties.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `configuration`
        if (data['configuration']) { // data not null
          DscConfigurationAssociationProperty.validateJSON(data['configuration']);
        }

        return true;
    }


}

DscCompilationJobCreateProperties.RequiredProperties = ["configuration"];

/**
 * @member {module:model/DscConfigurationAssociationProperty} configuration
 */
DscCompilationJobCreateProperties.prototype['configuration'] = undefined;

/**
 * If a new build version of NodeConfiguration is required.
 * @member {Boolean} incrementNodeConfigurationBuild
 */
DscCompilationJobCreateProperties.prototype['incrementNodeConfigurationBuild'] = undefined;

/**
 * Gets or sets the parameters of the job.
 * @member {Object.<String, String>} parameters
 */
DscCompilationJobCreateProperties.prototype['parameters'] = undefined;






export default DscCompilationJobCreateProperties;

