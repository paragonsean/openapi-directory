# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DscCompilationJobStreamListByJob200ResponseValueInnerProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, job_stream_id: str=None, stream_text: str=None, stream_type: str=None, summary: str=None, time: datetime=None, value: Dict[str, object]=None):
        """DscCompilationJobStreamListByJob200ResponseValueInnerProperties - a model defined in OpenAPI

        :param job_stream_id: The job_stream_id of this DscCompilationJobStreamListByJob200ResponseValueInnerProperties.
        :param stream_text: The stream_text of this DscCompilationJobStreamListByJob200ResponseValueInnerProperties.
        :param stream_type: The stream_type of this DscCompilationJobStreamListByJob200ResponseValueInnerProperties.
        :param summary: The summary of this DscCompilationJobStreamListByJob200ResponseValueInnerProperties.
        :param time: The time of this DscCompilationJobStreamListByJob200ResponseValueInnerProperties.
        :param value: The value of this DscCompilationJobStreamListByJob200ResponseValueInnerProperties.
        """
        self.openapi_types = {
            'job_stream_id': str,
            'stream_text': str,
            'stream_type': str,
            'summary': str,
            'time': datetime,
            'value': Dict[str, object]
        }

        self.attribute_map = {
            'job_stream_id': 'jobStreamId',
            'stream_text': 'streamText',
            'stream_type': 'streamType',
            'summary': 'summary',
            'time': 'time',
            'value': 'value'
        }

        self._job_stream_id = job_stream_id
        self._stream_text = stream_text
        self._stream_type = stream_type
        self._summary = summary
        self._time = time
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DscCompilationJobStreamListByJob200ResponseValueInnerProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DscCompilationJobStream_ListByJob_200_response_value_inner_properties of this DscCompilationJobStreamListByJob200ResponseValueInnerProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def job_stream_id(self):
        """Gets the job_stream_id of this DscCompilationJobStreamListByJob200ResponseValueInnerProperties.

        Gets or sets the id of the job stream.

        :return: The job_stream_id of this DscCompilationJobStreamListByJob200ResponseValueInnerProperties.
        :rtype: str
        """
        return self._job_stream_id

    @job_stream_id.setter
    def job_stream_id(self, job_stream_id):
        """Sets the job_stream_id of this DscCompilationJobStreamListByJob200ResponseValueInnerProperties.

        Gets or sets the id of the job stream.

        :param job_stream_id: The job_stream_id of this DscCompilationJobStreamListByJob200ResponseValueInnerProperties.
        :type job_stream_id: str
        """

        self._job_stream_id = job_stream_id

    @property
    def stream_text(self):
        """Gets the stream_text of this DscCompilationJobStreamListByJob200ResponseValueInnerProperties.

        Gets or sets the stream text.

        :return: The stream_text of this DscCompilationJobStreamListByJob200ResponseValueInnerProperties.
        :rtype: str
        """
        return self._stream_text

    @stream_text.setter
    def stream_text(self, stream_text):
        """Sets the stream_text of this DscCompilationJobStreamListByJob200ResponseValueInnerProperties.

        Gets or sets the stream text.

        :param stream_text: The stream_text of this DscCompilationJobStreamListByJob200ResponseValueInnerProperties.
        :type stream_text: str
        """

        self._stream_text = stream_text

    @property
    def stream_type(self):
        """Gets the stream_type of this DscCompilationJobStreamListByJob200ResponseValueInnerProperties.

        Gets or sets the stream type.

        :return: The stream_type of this DscCompilationJobStreamListByJob200ResponseValueInnerProperties.
        :rtype: str
        """
        return self._stream_type

    @stream_type.setter
    def stream_type(self, stream_type):
        """Sets the stream_type of this DscCompilationJobStreamListByJob200ResponseValueInnerProperties.

        Gets or sets the stream type.

        :param stream_type: The stream_type of this DscCompilationJobStreamListByJob200ResponseValueInnerProperties.
        :type stream_type: str
        """
        allowed_values = ["Progress", "Output", "Warning", "Error", "Debug", "Verbose", "Any"]  # noqa: E501
        if stream_type not in allowed_values:
            raise ValueError(
                "Invalid value for `stream_type` ({0}), must be one of {1}"
                .format(stream_type, allowed_values)
            )

        self._stream_type = stream_type

    @property
    def summary(self):
        """Gets the summary of this DscCompilationJobStreamListByJob200ResponseValueInnerProperties.

        Gets or sets the summary.

        :return: The summary of this DscCompilationJobStreamListByJob200ResponseValueInnerProperties.
        :rtype: str
        """
        return self._summary

    @summary.setter
    def summary(self, summary):
        """Sets the summary of this DscCompilationJobStreamListByJob200ResponseValueInnerProperties.

        Gets or sets the summary.

        :param summary: The summary of this DscCompilationJobStreamListByJob200ResponseValueInnerProperties.
        :type summary: str
        """

        self._summary = summary

    @property
    def time(self):
        """Gets the time of this DscCompilationJobStreamListByJob200ResponseValueInnerProperties.

        Gets or sets the creation time of the job.

        :return: The time of this DscCompilationJobStreamListByJob200ResponseValueInnerProperties.
        :rtype: datetime
        """
        return self._time

    @time.setter
    def time(self, time):
        """Sets the time of this DscCompilationJobStreamListByJob200ResponseValueInnerProperties.

        Gets or sets the creation time of the job.

        :param time: The time of this DscCompilationJobStreamListByJob200ResponseValueInnerProperties.
        :type time: datetime
        """

        self._time = time

    @property
    def value(self):
        """Gets the value of this DscCompilationJobStreamListByJob200ResponseValueInnerProperties.

        Gets or sets the values of the job stream.

        :return: The value of this DscCompilationJobStreamListByJob200ResponseValueInnerProperties.
        :rtype: Dict[str, object]
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this DscCompilationJobStreamListByJob200ResponseValueInnerProperties.

        Gets or sets the values of the job stream.

        :param value: The value of this DscCompilationJobStreamListByJob200ResponseValueInnerProperties.
        :type value: Dict[str, object]
        """

        self._value = value
