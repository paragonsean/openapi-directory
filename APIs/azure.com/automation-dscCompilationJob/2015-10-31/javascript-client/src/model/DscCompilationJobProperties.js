/**
 * AutomationManagement
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2015-10-31
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DscConfigurationAssociationProperty from './DscConfigurationAssociationProperty';
import JobProvisioningStateProperty from './JobProvisioningStateProperty';

/**
 * The DscCompilationJobProperties model module.
 * @module model/DscCompilationJobProperties
 * @version 2015-10-31
 */
class DscCompilationJobProperties {
    /**
     * Constructs a new <code>DscCompilationJobProperties</code>.
     * Definition of Dsc Compilation job properties.
     * @alias module:model/DscCompilationJobProperties
     */
    constructor() { 
        
        DscCompilationJobProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DscCompilationJobProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DscCompilationJobProperties} obj Optional instance to populate.
     * @return {module:model/DscCompilationJobProperties} The populated <code>DscCompilationJobProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DscCompilationJobProperties();

            if (data.hasOwnProperty('configuration')) {
                obj['configuration'] = DscConfigurationAssociationProperty.constructFromObject(data['configuration']);
            }
            if (data.hasOwnProperty('creationTime')) {
                obj['creationTime'] = ApiClient.convertToType(data['creationTime'], 'Date');
            }
            if (data.hasOwnProperty('endTime')) {
                obj['endTime'] = ApiClient.convertToType(data['endTime'], 'Date');
            }
            if (data.hasOwnProperty('exception')) {
                obj['exception'] = ApiClient.convertToType(data['exception'], 'String');
            }
            if (data.hasOwnProperty('jobId')) {
                obj['jobId'] = ApiClient.convertToType(data['jobId'], 'String');
            }
            if (data.hasOwnProperty('lastModifiedTime')) {
                obj['lastModifiedTime'] = ApiClient.convertToType(data['lastModifiedTime'], 'Date');
            }
            if (data.hasOwnProperty('lastStatusModifiedTime')) {
                obj['lastStatusModifiedTime'] = ApiClient.convertToType(data['lastStatusModifiedTime'], 'Date');
            }
            if (data.hasOwnProperty('parameters')) {
                obj['parameters'] = ApiClient.convertToType(data['parameters'], {'String': 'String'});
            }
            if (data.hasOwnProperty('provisioningState')) {
                obj['provisioningState'] = JobProvisioningStateProperty.constructFromObject(data['provisioningState']);
            }
            if (data.hasOwnProperty('runOn')) {
                obj['runOn'] = ApiClient.convertToType(data['runOn'], 'String');
            }
            if (data.hasOwnProperty('startTime')) {
                obj['startTime'] = ApiClient.convertToType(data['startTime'], 'Date');
            }
            if (data.hasOwnProperty('startedBy')) {
                obj['startedBy'] = ApiClient.convertToType(data['startedBy'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('statusDetails')) {
                obj['statusDetails'] = ApiClient.convertToType(data['statusDetails'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DscCompilationJobProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DscCompilationJobProperties</code>.
     */
    static validateJSON(data) {
        // validate the optional field `configuration`
        if (data['configuration']) { // data not null
          DscConfigurationAssociationProperty.validateJSON(data['configuration']);
        }
        // ensure the json data is a string
        if (data['exception'] && !(typeof data['exception'] === 'string' || data['exception'] instanceof String)) {
            throw new Error("Expected the field `exception` to be a primitive type in the JSON string but got " + data['exception']);
        }
        // ensure the json data is a string
        if (data['jobId'] && !(typeof data['jobId'] === 'string' || data['jobId'] instanceof String)) {
            throw new Error("Expected the field `jobId` to be a primitive type in the JSON string but got " + data['jobId']);
        }
        // ensure the json data is a string
        if (data['runOn'] && !(typeof data['runOn'] === 'string' || data['runOn'] instanceof String)) {
            throw new Error("Expected the field `runOn` to be a primitive type in the JSON string but got " + data['runOn']);
        }
        // ensure the json data is a string
        if (data['startedBy'] && !(typeof data['startedBy'] === 'string' || data['startedBy'] instanceof String)) {
            throw new Error("Expected the field `startedBy` to be a primitive type in the JSON string but got " + data['startedBy']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is a string
        if (data['statusDetails'] && !(typeof data['statusDetails'] === 'string' || data['statusDetails'] instanceof String)) {
            throw new Error("Expected the field `statusDetails` to be a primitive type in the JSON string but got " + data['statusDetails']);
        }

        return true;
    }


}



/**
 * @member {module:model/DscConfigurationAssociationProperty} configuration
 */
DscCompilationJobProperties.prototype['configuration'] = undefined;

/**
 * Gets the creation time of the job.
 * @member {Date} creationTime
 */
DscCompilationJobProperties.prototype['creationTime'] = undefined;

/**
 * Gets the end time of the job.
 * @member {Date} endTime
 */
DscCompilationJobProperties.prototype['endTime'] = undefined;

/**
 * Gets the exception of the job.
 * @member {String} exception
 */
DscCompilationJobProperties.prototype['exception'] = undefined;

/**
 * Gets the id of the job.
 * @member {String} jobId
 */
DscCompilationJobProperties.prototype['jobId'] = undefined;

/**
 * Gets the last modified time of the job.
 * @member {Date} lastModifiedTime
 */
DscCompilationJobProperties.prototype['lastModifiedTime'] = undefined;

/**
 * Gets the last status modified time of the job.
 * @member {Date} lastStatusModifiedTime
 */
DscCompilationJobProperties.prototype['lastStatusModifiedTime'] = undefined;

/**
 * Gets or sets the parameters of the job.
 * @member {Object.<String, String>} parameters
 */
DscCompilationJobProperties.prototype['parameters'] = undefined;

/**
 * @member {module:model/JobProvisioningStateProperty} provisioningState
 */
DscCompilationJobProperties.prototype['provisioningState'] = undefined;

/**
 * Gets or sets the runOn which specifies the group name where the job is to be executed.
 * @member {String} runOn
 */
DscCompilationJobProperties.prototype['runOn'] = undefined;

/**
 * Gets the start time of the job.
 * @member {Date} startTime
 */
DscCompilationJobProperties.prototype['startTime'] = undefined;

/**
 * Gets the compilation job started by.
 * @member {String} startedBy
 */
DscCompilationJobProperties.prototype['startedBy'] = undefined;

/**
 * Gets or sets the status of the job.
 * @member {module:model/DscCompilationJobProperties.StatusEnum} status
 */
DscCompilationJobProperties.prototype['status'] = undefined;

/**
 * Gets or sets the status details of the job.
 * @member {String} statusDetails
 */
DscCompilationJobProperties.prototype['statusDetails'] = undefined;





/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
DscCompilationJobProperties['StatusEnum'] = {

    /**
     * value: "New"
     * @const
     */
    "New": "New",

    /**
     * value: "Activating"
     * @const
     */
    "Activating": "Activating",

    /**
     * value: "Running"
     * @const
     */
    "Running": "Running",

    /**
     * value: "Completed"
     * @const
     */
    "Completed": "Completed",

    /**
     * value: "Failed"
     * @const
     */
    "Failed": "Failed",

    /**
     * value: "Stopped"
     * @const
     */
    "Stopped": "Stopped",

    /**
     * value: "Blocked"
     * @const
     */
    "Blocked": "Blocked",

    /**
     * value: "Suspended"
     * @const
     */
    "Suspended": "Suspended",

    /**
     * value: "Disconnected"
     * @const
     */
    "Disconnected": "Disconnected",

    /**
     * value: "Suspending"
     * @const
     */
    "Suspending": "Suspending",

    /**
     * value: "Stopping"
     * @const
     */
    "Stopping": "Stopping",

    /**
     * value: "Resuming"
     * @const
     */
    "Resuming": "Resuming",

    /**
     * value: "Removing"
     * @const
     */
    "Removing": "Removing"
};



export default DscCompilationJobProperties;

