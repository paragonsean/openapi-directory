# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.form_document_report import FormDocumentReport
from openapi_server.models.form_operation_error import FormOperationError
from openapi_server import util


class TrainResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, errors: List[FormOperationError]=None, model_id: str=None, training_documents: List[FormDocumentReport]=None):
        """TrainResult - a model defined in OpenAPI

        :param errors: The errors of this TrainResult.
        :param model_id: The model_id of this TrainResult.
        :param training_documents: The training_documents of this TrainResult.
        """
        self.openapi_types = {
            'errors': List[FormOperationError],
            'model_id': str,
            'training_documents': List[FormDocumentReport]
        }

        self.attribute_map = {
            'errors': 'errors',
            'model_id': 'modelId',
            'training_documents': 'trainingDocuments'
        }

        self._errors = errors
        self._model_id = model_id
        self._training_documents = training_documents

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TrainResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TrainResult of this TrainResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def errors(self):
        """Gets the errors of this TrainResult.

        Errors returned during the training operation.

        :return: The errors of this TrainResult.
        :rtype: List[FormOperationError]
        """
        return self._errors

    @errors.setter
    def errors(self, errors):
        """Sets the errors of this TrainResult.

        Errors returned during the training operation.

        :param errors: The errors of this TrainResult.
        :type errors: List[FormOperationError]
        """

        self._errors = errors

    @property
    def model_id(self):
        """Gets the model_id of this TrainResult.

        Identifier of the model.

        :return: The model_id of this TrainResult.
        :rtype: str
        """
        return self._model_id

    @model_id.setter
    def model_id(self, model_id):
        """Sets the model_id of this TrainResult.

        Identifier of the model.

        :param model_id: The model_id of this TrainResult.
        :type model_id: str
        """

        self._model_id = model_id

    @property
    def training_documents(self):
        """Gets the training_documents of this TrainResult.

        List of documents used to train the model and the  train operation error reported by each.

        :return: The training_documents of this TrainResult.
        :rtype: List[FormDocumentReport]
        """
        return self._training_documents

    @training_documents.setter
    def training_documents(self, training_documents):
        """Sets the training_documents of this TrainResult.

        List of documents used to train the model and the  train operation error reported by each.

        :param training_documents: The training_documents of this TrainResult.
        :type training_documents: List[FormDocumentReport]
        """

        self._training_documents = training_documents
