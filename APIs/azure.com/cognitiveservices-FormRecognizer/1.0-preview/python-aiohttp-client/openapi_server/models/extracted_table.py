# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.extracted_table_column import ExtractedTableColumn
from openapi_server import util


class ExtractedTable(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, columns: List[ExtractedTableColumn]=None, id: str=None):
        """ExtractedTable - a model defined in OpenAPI

        :param columns: The columns of this ExtractedTable.
        :param id: The id of this ExtractedTable.
        """
        self.openapi_types = {
            'columns': List[ExtractedTableColumn],
            'id': str
        }

        self.attribute_map = {
            'columns': 'columns',
            'id': 'id'
        }

        self._columns = columns
        self._id = id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ExtractedTable':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ExtractedTable of this ExtractedTable.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def columns(self):
        """Gets the columns of this ExtractedTable.

        List of columns contained in the table.

        :return: The columns of this ExtractedTable.
        :rtype: List[ExtractedTableColumn]
        """
        return self._columns

    @columns.setter
    def columns(self, columns):
        """Sets the columns of this ExtractedTable.

        List of columns contained in the table.

        :param columns: The columns of this ExtractedTable.
        :type columns: List[ExtractedTableColumn]
        """

        self._columns = columns

    @property
    def id(self):
        """Gets the id of this ExtractedTable.

        Table identifier.

        :return: The id of this ExtractedTable.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ExtractedTable.

        Table identifier.

        :param id: The id of this ExtractedTable.
        :type id: str
        """

        self._id = id
