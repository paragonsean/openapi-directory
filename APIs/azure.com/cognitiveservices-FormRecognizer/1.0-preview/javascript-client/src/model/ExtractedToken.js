/**
 * Form Recognizer Client
 * Extracts information from forms and images into structured data based on a model created by a set of representative training forms.
 *
 * The version of the OpenAPI document: 1.0-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ExtractedToken model module.
 * @module model/ExtractedToken
 * @version 1.0-preview
 */
class ExtractedToken {
    /**
     * Constructs a new <code>ExtractedToken</code>.
     * Canonical representation of single extracted text.
     * @alias module:model/ExtractedToken
     */
    constructor() { 
        
        ExtractedToken.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ExtractedToken</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ExtractedToken} obj Optional instance to populate.
     * @return {module:model/ExtractedToken} The populated <code>ExtractedToken</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ExtractedToken();

            if (data.hasOwnProperty('boundingBox')) {
                obj['boundingBox'] = ApiClient.convertToType(data['boundingBox'], ['Number']);
            }
            if (data.hasOwnProperty('confidence')) {
                obj['confidence'] = ApiClient.convertToType(data['confidence'], 'Number');
            }
            if (data.hasOwnProperty('text')) {
                obj['text'] = ApiClient.convertToType(data['text'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ExtractedToken</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ExtractedToken</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['boundingBox'])) {
            throw new Error("Expected the field `boundingBox` to be an array in the JSON data but got " + data['boundingBox']);
        }
        // ensure the json data is a string
        if (data['text'] && !(typeof data['text'] === 'string' || data['text'] instanceof String)) {
            throw new Error("Expected the field `text` to be a primitive type in the JSON string but got " + data['text']);
        }

        return true;
    }


}



/**
 * Bounding box of the extracted text. Represents the  location of the extracted text as a pair of  cartesian co-ordinates. The co-ordinate pairs are arranged by  top-left, top-right, bottom-right and bottom-left endpoints box  with origin reference from the bottom-left of the page.
 * @member {Array.<Number>} boundingBox
 */
ExtractedToken.prototype['boundingBox'] = undefined;

/**
 * A measure of accuracy of the extracted text.
 * @member {Number} confidence
 */
ExtractedToken.prototype['confidence'] = undefined;

/**
 * String value of the extracted text.
 * @member {String} text
 */
ExtractedToken.prototype['text'] = undefined;






export default ExtractedToken;

