/**
 * Form Recognizer Client
 * Extracts information from forms and images into structured data based on a model created by a set of representative training forms.
 *
 * The version of the OpenAPI document: 1.0-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ExtractedToken from './ExtractedToken';

/**
 * The ExtractedKeyValuePair model module.
 * @module model/ExtractedKeyValuePair
 * @version 1.0-preview
 */
class ExtractedKeyValuePair {
    /**
     * Constructs a new <code>ExtractedKeyValuePair</code>.
     * Representation of a key-value pair as a list  of key and value tokens.
     * @alias module:model/ExtractedKeyValuePair
     */
    constructor() { 
        
        ExtractedKeyValuePair.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ExtractedKeyValuePair</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ExtractedKeyValuePair} obj Optional instance to populate.
     * @return {module:model/ExtractedKeyValuePair} The populated <code>ExtractedKeyValuePair</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ExtractedKeyValuePair();

            if (data.hasOwnProperty('key')) {
                obj['key'] = ApiClient.convertToType(data['key'], [ExtractedToken]);
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], [ExtractedToken]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ExtractedKeyValuePair</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ExtractedKeyValuePair</code>.
     */
    static validateJSON(data) {
        if (data['key']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['key'])) {
                throw new Error("Expected the field `key` to be an array in the JSON data but got " + data['key']);
            }
            // validate the optional field `key` (array)
            for (const item of data['key']) {
                ExtractedToken.validateJSON(item);
            };
        }
        if (data['value']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['value'])) {
                throw new Error("Expected the field `value` to be an array in the JSON data but got " + data['value']);
            }
            // validate the optional field `value` (array)
            for (const item of data['value']) {
                ExtractedToken.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * List of tokens for the extracted key in a key-value pair.
 * @member {Array.<module:model/ExtractedToken>} key
 */
ExtractedKeyValuePair.prototype['key'] = undefined;

/**
 * List of tokens for the extracted value in a key-value pair.
 * @member {Array.<module:model/ExtractedToken>} value
 */
ExtractedKeyValuePair.prototype['value'] = undefined;






export default ExtractedKeyValuePair;

