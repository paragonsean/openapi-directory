/**
 * Form Recognizer Client
 * Extracts information from forms and images into structured data based on a model created by a set of representative training forms.
 *
 * The version of the OpenAPI document: 1.0-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ModelResult model module.
 * @module model/ModelResult
 * @version 1.0-preview
 */
class ModelResult {
    /**
     * Constructs a new <code>ModelResult</code>.
     * Result of a model status query operation.
     * @alias module:model/ModelResult
     */
    constructor() { 
        
        ModelResult.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ModelResult</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ModelResult} obj Optional instance to populate.
     * @return {module:model/ModelResult} The populated <code>ModelResult</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ModelResult();

            if (data.hasOwnProperty('createdDateTime')) {
                obj['createdDateTime'] = ApiClient.convertToType(data['createdDateTime'], 'Date');
            }
            if (data.hasOwnProperty('lastUpdatedDateTime')) {
                obj['lastUpdatedDateTime'] = ApiClient.convertToType(data['lastUpdatedDateTime'], 'Date');
            }
            if (data.hasOwnProperty('modelId')) {
                obj['modelId'] = ApiClient.convertToType(data['modelId'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ModelResult</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ModelResult</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['modelId'] && !(typeof data['modelId'] === 'string' || data['modelId'] instanceof String)) {
            throw new Error("Expected the field `modelId` to be a primitive type in the JSON string but got " + data['modelId']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }

        return true;
    }


}



/**
 * Get or set the created date time of the model.
 * @member {Date} createdDateTime
 */
ModelResult.prototype['createdDateTime'] = undefined;

/**
 * Get or set the model last updated datetime.
 * @member {Date} lastUpdatedDateTime
 */
ModelResult.prototype['lastUpdatedDateTime'] = undefined;

/**
 * Get or set model identifier.
 * @member {String} modelId
 */
ModelResult.prototype['modelId'] = undefined;

/**
 * Get or set the status of model.
 * @member {module:model/ModelResult.StatusEnum} status
 */
ModelResult.prototype['status'] = undefined;





/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
ModelResult['StatusEnum'] = {

    /**
     * value: "created"
     * @const
     */
    "created": "created",

    /**
     * value: "ready"
     * @const
     */
    "ready": "ready",

    /**
     * value: "invalid"
     * @const
     */
    "invalid": "invalid"
};



export default ModelResult;

