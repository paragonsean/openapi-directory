/**
 * Form Recognizer Client
 * Extracts information from forms and images into structured data based on a model created by a set of representative training forms.
 *
 * The version of the OpenAPI document: 1.0-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIModelResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIModelResult::OAIModelResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIModelResult::OAIModelResult() {
    this->initializeModel();
}

OAIModelResult::~OAIModelResult() {}

void OAIModelResult::initializeModel() {

    m_created_date_time_isSet = false;
    m_created_date_time_isValid = false;

    m_last_updated_date_time_isSet = false;
    m_last_updated_date_time_isValid = false;

    m_model_id_isSet = false;
    m_model_id_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAIModelResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIModelResult::fromJsonObject(QJsonObject json) {

    m_created_date_time_isValid = ::OpenAPI::fromJsonValue(m_created_date_time, json[QString("createdDateTime")]);
    m_created_date_time_isSet = !json[QString("createdDateTime")].isNull() && m_created_date_time_isValid;

    m_last_updated_date_time_isValid = ::OpenAPI::fromJsonValue(m_last_updated_date_time, json[QString("lastUpdatedDateTime")]);
    m_last_updated_date_time_isSet = !json[QString("lastUpdatedDateTime")].isNull() && m_last_updated_date_time_isValid;

    m_model_id_isValid = ::OpenAPI::fromJsonValue(m_model_id, json[QString("modelId")]);
    m_model_id_isSet = !json[QString("modelId")].isNull() && m_model_id_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;
}

QString OAIModelResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIModelResult::asJsonObject() const {
    QJsonObject obj;
    if (m_created_date_time_isSet) {
        obj.insert(QString("createdDateTime"), ::OpenAPI::toJsonValue(m_created_date_time));
    }
    if (m_last_updated_date_time_isSet) {
        obj.insert(QString("lastUpdatedDateTime"), ::OpenAPI::toJsonValue(m_last_updated_date_time));
    }
    if (m_model_id_isSet) {
        obj.insert(QString("modelId"), ::OpenAPI::toJsonValue(m_model_id));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    return obj;
}

QDateTime OAIModelResult::getCreatedDateTime() const {
    return m_created_date_time;
}
void OAIModelResult::setCreatedDateTime(const QDateTime &created_date_time) {
    m_created_date_time = created_date_time;
    m_created_date_time_isSet = true;
}

bool OAIModelResult::is_created_date_time_Set() const{
    return m_created_date_time_isSet;
}

bool OAIModelResult::is_created_date_time_Valid() const{
    return m_created_date_time_isValid;
}

QDateTime OAIModelResult::getLastUpdatedDateTime() const {
    return m_last_updated_date_time;
}
void OAIModelResult::setLastUpdatedDateTime(const QDateTime &last_updated_date_time) {
    m_last_updated_date_time = last_updated_date_time;
    m_last_updated_date_time_isSet = true;
}

bool OAIModelResult::is_last_updated_date_time_Set() const{
    return m_last_updated_date_time_isSet;
}

bool OAIModelResult::is_last_updated_date_time_Valid() const{
    return m_last_updated_date_time_isValid;
}

QString OAIModelResult::getModelId() const {
    return m_model_id;
}
void OAIModelResult::setModelId(const QString &model_id) {
    m_model_id = model_id;
    m_model_id_isSet = true;
}

bool OAIModelResult::is_model_id_Set() const{
    return m_model_id_isSet;
}

bool OAIModelResult::is_model_id_Valid() const{
    return m_model_id_isValid;
}

QString OAIModelResult::getStatus() const {
    return m_status;
}
void OAIModelResult::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIModelResult::is_status_Set() const{
    return m_status_isSet;
}

bool OAIModelResult::is_status_Valid() const{
    return m_status_isValid;
}

bool OAIModelResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_created_date_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_updated_date_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_model_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIModelResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
