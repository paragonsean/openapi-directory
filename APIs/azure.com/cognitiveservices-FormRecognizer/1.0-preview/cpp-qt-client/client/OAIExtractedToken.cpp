/**
 * Form Recognizer Client
 * Extracts information from forms and images into structured data based on a model created by a set of representative training forms.
 *
 * The version of the OpenAPI document: 1.0-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIExtractedToken.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIExtractedToken::OAIExtractedToken(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIExtractedToken::OAIExtractedToken() {
    this->initializeModel();
}

OAIExtractedToken::~OAIExtractedToken() {}

void OAIExtractedToken::initializeModel() {

    m_bounding_box_isSet = false;
    m_bounding_box_isValid = false;

    m_confidence_isSet = false;
    m_confidence_isValid = false;

    m_text_isSet = false;
    m_text_isValid = false;
}

void OAIExtractedToken::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIExtractedToken::fromJsonObject(QJsonObject json) {

    m_bounding_box_isValid = ::OpenAPI::fromJsonValue(m_bounding_box, json[QString("boundingBox")]);
    m_bounding_box_isSet = !json[QString("boundingBox")].isNull() && m_bounding_box_isValid;

    m_confidence_isValid = ::OpenAPI::fromJsonValue(m_confidence, json[QString("confidence")]);
    m_confidence_isSet = !json[QString("confidence")].isNull() && m_confidence_isValid;

    m_text_isValid = ::OpenAPI::fromJsonValue(m_text, json[QString("text")]);
    m_text_isSet = !json[QString("text")].isNull() && m_text_isValid;
}

QString OAIExtractedToken::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIExtractedToken::asJsonObject() const {
    QJsonObject obj;
    if (m_bounding_box.size() > 0) {
        obj.insert(QString("boundingBox"), ::OpenAPI::toJsonValue(m_bounding_box));
    }
    if (m_confidence_isSet) {
        obj.insert(QString("confidence"), ::OpenAPI::toJsonValue(m_confidence));
    }
    if (m_text_isSet) {
        obj.insert(QString("text"), ::OpenAPI::toJsonValue(m_text));
    }
    return obj;
}

QList<double> OAIExtractedToken::getBoundingBox() const {
    return m_bounding_box;
}
void OAIExtractedToken::setBoundingBox(const QList<double> &bounding_box) {
    m_bounding_box = bounding_box;
    m_bounding_box_isSet = true;
}

bool OAIExtractedToken::is_bounding_box_Set() const{
    return m_bounding_box_isSet;
}

bool OAIExtractedToken::is_bounding_box_Valid() const{
    return m_bounding_box_isValid;
}

double OAIExtractedToken::getConfidence() const {
    return m_confidence;
}
void OAIExtractedToken::setConfidence(const double &confidence) {
    m_confidence = confidence;
    m_confidence_isSet = true;
}

bool OAIExtractedToken::is_confidence_Set() const{
    return m_confidence_isSet;
}

bool OAIExtractedToken::is_confidence_Valid() const{
    return m_confidence_isValid;
}

QString OAIExtractedToken::getText() const {
    return m_text;
}
void OAIExtractedToken::setText(const QString &text) {
    m_text = text;
    m_text_isSet = true;
}

bool OAIExtractedToken::is_text_Set() const{
    return m_text_isSet;
}

bool OAIExtractedToken::is_text_Valid() const{
    return m_text_isValid;
}

bool OAIExtractedToken::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_bounding_box.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_confidence_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_text_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIExtractedToken::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
