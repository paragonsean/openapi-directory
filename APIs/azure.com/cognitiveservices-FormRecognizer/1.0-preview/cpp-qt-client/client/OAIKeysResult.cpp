/**
 * Form Recognizer Client
 * Extracts information from forms and images into structured data based on a model created by a set of representative training forms.
 *
 * The version of the OpenAPI document: 1.0-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIKeysResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIKeysResult::OAIKeysResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIKeysResult::OAIKeysResult() {
    this->initializeModel();
}

OAIKeysResult::~OAIKeysResult() {}

void OAIKeysResult::initializeModel() {

    m_clusters_isSet = false;
    m_clusters_isValid = false;
}

void OAIKeysResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIKeysResult::fromJsonObject(QJsonObject json) {

    if(json["clusters"].isObject()){
        auto varmap = json["clusters"].toObject().toVariantMap();
        m_clusters_isValid = true;
        if(varmap.count() > 0){
            for(auto val : varmap.keys()){
                QList<QString> item;
                auto jval = QJsonValue::fromVariant(varmap.value(val));
                m_clusters_isValid &= ::OpenAPI::fromJsonValue(item, jval);
                m_clusters_isSet &= !jval.isNull() && m_clusters_isValid;
                m_clusters.insert(m_clusters.end(), val, item);
            }
        }
    }
}

QString OAIKeysResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIKeysResult::asJsonObject() const {
    QJsonObject obj;
    if (m_clusters.size() > 0) {
        
        obj.insert(QString("clusters"), toJsonValue(m_clusters));
    }
    return obj;
}

QMap<QString, QList<QString>> OAIKeysResult::getClusters() const {
    return m_clusters;
}
void OAIKeysResult::setClusters(const QMap<QString, QList<QString>> &clusters) {
    m_clusters = clusters;
    m_clusters_isSet = true;
}

bool OAIKeysResult::is_clusters_Set() const{
    return m_clusters_isSet;
}

bool OAIKeysResult::is_clusters_Valid() const{
    return m_clusters_isValid;
}

bool OAIKeysResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_clusters.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIKeysResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
