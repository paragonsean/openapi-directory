# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.keys_result import KeysResult
from openapi_server.models.model_info import ModelInfo
from openapi_server.models.train_result import TrainResult
from openapi_server import util


class Model(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, keys: KeysResult=None, model_info: ModelInfo=None, train_result: TrainResult=None):
        """Model - a model defined in OpenAPI

        :param keys: The keys of this Model.
        :param model_info: The model_info of this Model.
        :param train_result: The train_result of this Model.
        """
        self.openapi_types = {
            'keys': KeysResult,
            'model_info': ModelInfo,
            'train_result': TrainResult
        }

        self.attribute_map = {
            'keys': 'keys',
            'model_info': 'modelInfo',
            'train_result': 'trainResult'
        }

        self._keys = keys
        self._model_info = model_info
        self._train_result = train_result

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Model':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Model of this Model.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def keys(self):
        """Gets the keys of this Model.


        :return: The keys of this Model.
        :rtype: KeysResult
        """
        return self._keys

    @keys.setter
    def keys(self, keys):
        """Sets the keys of this Model.


        :param keys: The keys of this Model.
        :type keys: KeysResult
        """

        self._keys = keys

    @property
    def model_info(self):
        """Gets the model_info of this Model.


        :return: The model_info of this Model.
        :rtype: ModelInfo
        """
        return self._model_info

    @model_info.setter
    def model_info(self, model_info):
        """Sets the model_info of this Model.


        :param model_info: The model_info of this Model.
        :type model_info: ModelInfo
        """
        if model_info is None:
            raise ValueError("Invalid value for `model_info`, must not be `None`")

        self._model_info = model_info

    @property
    def train_result(self):
        """Gets the train_result of this Model.


        :return: The train_result of this Model.
        :rtype: TrainResult
        """
        return self._train_result

    @train_result.setter
    def train_result(self, train_result):
        """Sets the train_result of this Model.


        :param train_result: The train_result of this Model.
        :type train_result: TrainResult
        """

        self._train_result = train_result
