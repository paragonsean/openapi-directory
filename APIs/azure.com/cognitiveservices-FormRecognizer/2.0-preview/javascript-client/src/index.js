/**
 * Form Recognizer Client
 * Extracts information from forms and images into structured data.
 *
 * The version of the OpenAPI document: 2.0-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AnalyzeOperationResult from './model/AnalyzeOperationResult';
import AnalyzeResult from './model/AnalyzeResult';
import DataTable from './model/DataTable';
import DataTableCell from './model/DataTableCell';
import DocumentResult from './model/DocumentResult';
import ErrorInformation from './model/ErrorInformation';
import ErrorResponse from './model/ErrorResponse';
import FieldValue from './model/FieldValue';
import FieldValueType from './model/FieldValueType';
import FormFieldsReport from './model/FormFieldsReport';
import KeyValueElement from './model/KeyValueElement';
import KeyValuePair from './model/KeyValuePair';
import KeysResult from './model/KeysResult';
import Language from './model/Language';
import Model from './model/Model';
import ModelInfo from './model/ModelInfo';
import Models from './model/Models';
import ModelsSummary from './model/ModelsSummary';
import OperationStatus from './model/OperationStatus';
import PageResult from './model/PageResult';
import ReadResult from './model/ReadResult';
import SourcePath from './model/SourcePath';
import TextLine from './model/TextLine';
import TextWord from './model/TextWord';
import TrainRequest from './model/TrainRequest';
import TrainResult from './model/TrainResult';
import TrainSourceFilter from './model/TrainSourceFilter';
import TrainingDocumentInfo from './model/TrainingDocumentInfo';
import DefaultApi from './api/DefaultApi';


/**
* Extracts information from forms and images into structured data..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var FormRecognizerClient = require('index'); // See note below*.
* var xxxSvc = new FormRecognizerClient.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new FormRecognizerClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new FormRecognizerClient.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new FormRecognizerClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2.0-preview
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AnalyzeOperationResult model constructor.
     * @property {module:model/AnalyzeOperationResult}
     */
    AnalyzeOperationResult,

    /**
     * The AnalyzeResult model constructor.
     * @property {module:model/AnalyzeResult}
     */
    AnalyzeResult,

    /**
     * The DataTable model constructor.
     * @property {module:model/DataTable}
     */
    DataTable,

    /**
     * The DataTableCell model constructor.
     * @property {module:model/DataTableCell}
     */
    DataTableCell,

    /**
     * The DocumentResult model constructor.
     * @property {module:model/DocumentResult}
     */
    DocumentResult,

    /**
     * The ErrorInformation model constructor.
     * @property {module:model/ErrorInformation}
     */
    ErrorInformation,

    /**
     * The ErrorResponse model constructor.
     * @property {module:model/ErrorResponse}
     */
    ErrorResponse,

    /**
     * The FieldValue model constructor.
     * @property {module:model/FieldValue}
     */
    FieldValue,

    /**
     * The FieldValueType model constructor.
     * @property {module:model/FieldValueType}
     */
    FieldValueType,

    /**
     * The FormFieldsReport model constructor.
     * @property {module:model/FormFieldsReport}
     */
    FormFieldsReport,

    /**
     * The KeyValueElement model constructor.
     * @property {module:model/KeyValueElement}
     */
    KeyValueElement,

    /**
     * The KeyValuePair model constructor.
     * @property {module:model/KeyValuePair}
     */
    KeyValuePair,

    /**
     * The KeysResult model constructor.
     * @property {module:model/KeysResult}
     */
    KeysResult,

    /**
     * The Language model constructor.
     * @property {module:model/Language}
     */
    Language,

    /**
     * The Model model constructor.
     * @property {module:model/Model}
     */
    Model,

    /**
     * The ModelInfo model constructor.
     * @property {module:model/ModelInfo}
     */
    ModelInfo,

    /**
     * The Models model constructor.
     * @property {module:model/Models}
     */
    Models,

    /**
     * The ModelsSummary model constructor.
     * @property {module:model/ModelsSummary}
     */
    ModelsSummary,

    /**
     * The OperationStatus model constructor.
     * @property {module:model/OperationStatus}
     */
    OperationStatus,

    /**
     * The PageResult model constructor.
     * @property {module:model/PageResult}
     */
    PageResult,

    /**
     * The ReadResult model constructor.
     * @property {module:model/ReadResult}
     */
    ReadResult,

    /**
     * The SourcePath model constructor.
     * @property {module:model/SourcePath}
     */
    SourcePath,

    /**
     * The TextLine model constructor.
     * @property {module:model/TextLine}
     */
    TextLine,

    /**
     * The TextWord model constructor.
     * @property {module:model/TextWord}
     */
    TextWord,

    /**
     * The TrainRequest model constructor.
     * @property {module:model/TrainRequest}
     */
    TrainRequest,

    /**
     * The TrainResult model constructor.
     * @property {module:model/TrainResult}
     */
    TrainResult,

    /**
     * The TrainSourceFilter model constructor.
     * @property {module:model/TrainSourceFilter}
     */
    TrainSourceFilter,

    /**
     * The TrainingDocumentInfo model constructor.
     * @property {module:model/TrainingDocumentInfo}
     */
    TrainingDocumentInfo,

    /**
    * The DefaultApi service constructor.
    * @property {module:api/DefaultApi}
    */
    DefaultApi
};
