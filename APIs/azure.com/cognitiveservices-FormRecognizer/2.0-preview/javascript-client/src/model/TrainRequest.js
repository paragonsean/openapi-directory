/**
 * Form Recognizer Client
 * Extracts information from forms and images into structured data.
 *
 * The version of the OpenAPI document: 2.0-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TrainSourceFilter from './TrainSourceFilter';

/**
 * The TrainRequest model module.
 * @module model/TrainRequest
 * @version 2.0-preview
 */
class TrainRequest {
    /**
     * Constructs a new <code>TrainRequest</code>.
     * Request parameter to train a new custom model.
     * @alias module:model/TrainRequest
     * @param source {String} Source path containing the training documents.
     */
    constructor(source) { 
        
        TrainRequest.initialize(this, source);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, source) { 
        obj['source'] = source;
        obj['useLabelFile'] = false;
    }

    /**
     * Constructs a <code>TrainRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TrainRequest} obj Optional instance to populate.
     * @return {module:model/TrainRequest} The populated <code>TrainRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TrainRequest();

            if (data.hasOwnProperty('source')) {
                obj['source'] = ApiClient.convertToType(data['source'], 'String');
            }
            if (data.hasOwnProperty('sourceFilter')) {
                obj['sourceFilter'] = TrainSourceFilter.constructFromObject(data['sourceFilter']);
            }
            if (data.hasOwnProperty('useLabelFile')) {
                obj['useLabelFile'] = ApiClient.convertToType(data['useLabelFile'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TrainRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TrainRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of TrainRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['source'] && !(typeof data['source'] === 'string' || data['source'] instanceof String)) {
            throw new Error("Expected the field `source` to be a primitive type in the JSON string but got " + data['source']);
        }
        // validate the optional field `sourceFilter`
        if (data['sourceFilter']) { // data not null
          TrainSourceFilter.validateJSON(data['sourceFilter']);
        }

        return true;
    }


}

TrainRequest.RequiredProperties = ["source"];

/**
 * Source path containing the training documents.
 * @member {String} source
 */
TrainRequest.prototype['source'] = undefined;

/**
 * @member {module:model/TrainSourceFilter} sourceFilter
 */
TrainRequest.prototype['sourceFilter'] = undefined;

/**
 * Use label file for training a model.
 * @member {Boolean} useLabelFile
 * @default false
 */
TrainRequest.prototype['useLabelFile'] = false;






export default TrainRequest;

