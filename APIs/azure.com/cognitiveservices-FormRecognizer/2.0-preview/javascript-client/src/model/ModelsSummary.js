/**
 * Form Recognizer Client
 * Extracts information from forms and images into structured data.
 *
 * The version of the OpenAPI document: 2.0-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ModelsSummary model module.
 * @module model/ModelsSummary
 * @version 2.0-preview
 */
class ModelsSummary {
    /**
     * Constructs a new <code>ModelsSummary</code>.
     * Summary of all trained custom models.
     * @alias module:model/ModelsSummary
     * @param count {Number} Current count of trained custom models.
     * @param lastUpdatedDateTime {Date} Date and time (UTC) when the summary was last updated.
     * @param limit {Number} Max number of models that can be trained for this subscription.
     */
    constructor(count, lastUpdatedDateTime, limit) { 
        
        ModelsSummary.initialize(this, count, lastUpdatedDateTime, limit);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, count, lastUpdatedDateTime, limit) { 
        obj['count'] = count;
        obj['lastUpdatedDateTime'] = lastUpdatedDateTime;
        obj['limit'] = limit;
    }

    /**
     * Constructs a <code>ModelsSummary</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ModelsSummary} obj Optional instance to populate.
     * @return {module:model/ModelsSummary} The populated <code>ModelsSummary</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ModelsSummary();

            if (data.hasOwnProperty('count')) {
                obj['count'] = ApiClient.convertToType(data['count'], 'Number');
            }
            if (data.hasOwnProperty('lastUpdatedDateTime')) {
                obj['lastUpdatedDateTime'] = ApiClient.convertToType(data['lastUpdatedDateTime'], 'Date');
            }
            if (data.hasOwnProperty('limit')) {
                obj['limit'] = ApiClient.convertToType(data['limit'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ModelsSummary</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ModelsSummary</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ModelsSummary.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

ModelsSummary.RequiredProperties = ["count", "lastUpdatedDateTime", "limit"];

/**
 * Current count of trained custom models.
 * @member {Number} count
 */
ModelsSummary.prototype['count'] = undefined;

/**
 * Date and time (UTC) when the summary was last updated.
 * @member {Date} lastUpdatedDateTime
 */
ModelsSummary.prototype['lastUpdatedDateTime'] = undefined;

/**
 * Max number of models that can be trained for this subscription.
 * @member {Number} limit
 */
ModelsSummary.prototype['limit'] = undefined;






export default ModelsSummary;

