/**
 * Form Recognizer Client
 * Extracts information from forms and images into structured data.
 *
 * The version of the OpenAPI document: 2.0-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ModelInfo model module.
 * @module model/ModelInfo
 * @version 2.0-preview
 */
class ModelInfo {
    /**
     * Constructs a new <code>ModelInfo</code>.
     * Basic custom model information.
     * @alias module:model/ModelInfo
     * @param createdDateTime {Date} Date and time (UTC) when the model was created.
     * @param lastUpdatedDateTime {Date} Date and time (UTC) when the status was last updated.
     * @param modelId {String} Model identifier.
     * @param status {module:model/ModelInfo.StatusEnum} Status of the model.
     */
    constructor(createdDateTime, lastUpdatedDateTime, modelId, status) { 
        
        ModelInfo.initialize(this, createdDateTime, lastUpdatedDateTime, modelId, status);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, createdDateTime, lastUpdatedDateTime, modelId, status) { 
        obj['createdDateTime'] = createdDateTime;
        obj['lastUpdatedDateTime'] = lastUpdatedDateTime;
        obj['modelId'] = modelId;
        obj['status'] = status;
    }

    /**
     * Constructs a <code>ModelInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ModelInfo} obj Optional instance to populate.
     * @return {module:model/ModelInfo} The populated <code>ModelInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ModelInfo();

            if (data.hasOwnProperty('createdDateTime')) {
                obj['createdDateTime'] = ApiClient.convertToType(data['createdDateTime'], 'Date');
            }
            if (data.hasOwnProperty('lastUpdatedDateTime')) {
                obj['lastUpdatedDateTime'] = ApiClient.convertToType(data['lastUpdatedDateTime'], 'Date');
            }
            if (data.hasOwnProperty('modelId')) {
                obj['modelId'] = ApiClient.convertToType(data['modelId'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ModelInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ModelInfo</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ModelInfo.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['modelId'] && !(typeof data['modelId'] === 'string' || data['modelId'] instanceof String)) {
            throw new Error("Expected the field `modelId` to be a primitive type in the JSON string but got " + data['modelId']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }

        return true;
    }


}

ModelInfo.RequiredProperties = ["createdDateTime", "lastUpdatedDateTime", "modelId", "status"];

/**
 * Date and time (UTC) when the model was created.
 * @member {Date} createdDateTime
 */
ModelInfo.prototype['createdDateTime'] = undefined;

/**
 * Date and time (UTC) when the status was last updated.
 * @member {Date} lastUpdatedDateTime
 */
ModelInfo.prototype['lastUpdatedDateTime'] = undefined;

/**
 * Model identifier.
 * @member {String} modelId
 */
ModelInfo.prototype['modelId'] = undefined;

/**
 * Status of the model.
 * @member {module:model/ModelInfo.StatusEnum} status
 */
ModelInfo.prototype['status'] = undefined;





/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
ModelInfo['StatusEnum'] = {

    /**
     * value: "creating"
     * @const
     */
    "creating": "creating",

    /**
     * value: "ready"
     * @const
     */
    "ready": "ready",

    /**
     * value: "invalid"
     * @const
     */
    "invalid": "invalid"
};



export default ModelInfo;

