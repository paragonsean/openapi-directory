/**
 * Form Recognizer Client
 * Extracts information from forms and images into structured data.
 *
 * The version of the OpenAPI document: 2.0-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIKeyValueElement.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIKeyValueElement::OAIKeyValueElement(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIKeyValueElement::OAIKeyValueElement() {
    this->initializeModel();
}

OAIKeyValueElement::~OAIKeyValueElement() {}

void OAIKeyValueElement::initializeModel() {

    m_bounding_box_isSet = false;
    m_bounding_box_isValid = false;

    m_elements_isSet = false;
    m_elements_isValid = false;

    m_text_isSet = false;
    m_text_isValid = false;
}

void OAIKeyValueElement::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIKeyValueElement::fromJsonObject(QJsonObject json) {

    m_bounding_box_isValid = ::OpenAPI::fromJsonValue(m_bounding_box, json[QString("boundingBox")]);
    m_bounding_box_isSet = !json[QString("boundingBox")].isNull() && m_bounding_box_isValid;

    m_elements_isValid = ::OpenAPI::fromJsonValue(m_elements, json[QString("elements")]);
    m_elements_isSet = !json[QString("elements")].isNull() && m_elements_isValid;

    m_text_isValid = ::OpenAPI::fromJsonValue(m_text, json[QString("text")]);
    m_text_isSet = !json[QString("text")].isNull() && m_text_isValid;
}

QString OAIKeyValueElement::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIKeyValueElement::asJsonObject() const {
    QJsonObject obj;
    if (m_bounding_box.size() > 0) {
        obj.insert(QString("boundingBox"), ::OpenAPI::toJsonValue(m_bounding_box));
    }
    if (m_elements.size() > 0) {
        obj.insert(QString("elements"), ::OpenAPI::toJsonValue(m_elements));
    }
    if (m_text_isSet) {
        obj.insert(QString("text"), ::OpenAPI::toJsonValue(m_text));
    }
    return obj;
}

QList<double> OAIKeyValueElement::getBoundingBox() const {
    return m_bounding_box;
}
void OAIKeyValueElement::setBoundingBox(const QList<double> &bounding_box) {
    m_bounding_box = bounding_box;
    m_bounding_box_isSet = true;
}

bool OAIKeyValueElement::is_bounding_box_Set() const{
    return m_bounding_box_isSet;
}

bool OAIKeyValueElement::is_bounding_box_Valid() const{
    return m_bounding_box_isValid;
}

QList<QString> OAIKeyValueElement::getElements() const {
    return m_elements;
}
void OAIKeyValueElement::setElements(const QList<QString> &elements) {
    m_elements = elements;
    m_elements_isSet = true;
}

bool OAIKeyValueElement::is_elements_Set() const{
    return m_elements_isSet;
}

bool OAIKeyValueElement::is_elements_Valid() const{
    return m_elements_isValid;
}

QString OAIKeyValueElement::getText() const {
    return m_text;
}
void OAIKeyValueElement::setText(const QString &text) {
    m_text = text;
    m_text_isSet = true;
}

bool OAIKeyValueElement::is_text_Set() const{
    return m_text_isSet;
}

bool OAIKeyValueElement::is_text_Valid() const{
    return m_text_isValid;
}

bool OAIKeyValueElement::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_bounding_box.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_elements.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_text_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIKeyValueElement::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_text_isValid && true;
}

} // namespace OpenAPI
