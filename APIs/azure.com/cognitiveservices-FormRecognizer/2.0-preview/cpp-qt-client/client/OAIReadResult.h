/**
 * Form Recognizer Client
 * Extracts information from forms and images into structured data.
 *
 * The version of the OpenAPI document: 2.0-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIReadResult.h
 *
 * Text extracted from a page in the input document.
 */

#ifndef OAIReadResult_H
#define OAIReadResult_H

#include <QJsonObject>

#include "OAILanguage.h"
#include "OAITextLine.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITextLine;

class OAIReadResult : public OAIObject {
public:
    OAIReadResult();
    OAIReadResult(QString json);
    ~OAIReadResult() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getAngle() const;
    void setAngle(const double &angle);
    bool is_angle_Set() const;
    bool is_angle_Valid() const;

    double getHeight() const;
    void setHeight(const double &height);
    bool is_height_Set() const;
    bool is_height_Valid() const;

    OAILanguage getLanguage() const;
    void setLanguage(const OAILanguage &language);
    bool is_language_Set() const;
    bool is_language_Valid() const;

    QList<OAITextLine> getLines() const;
    void setLines(const QList<OAITextLine> &lines);
    bool is_lines_Set() const;
    bool is_lines_Valid() const;

    qint32 getPage() const;
    void setPage(const qint32 &page);
    bool is_page_Set() const;
    bool is_page_Valid() const;

    QString getUnit() const;
    void setUnit(const QString &unit);
    bool is_unit_Set() const;
    bool is_unit_Valid() const;

    double getWidth() const;
    void setWidth(const double &width);
    bool is_width_Set() const;
    bool is_width_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_angle;
    bool m_angle_isSet;
    bool m_angle_isValid;

    double m_height;
    bool m_height_isSet;
    bool m_height_isValid;

    OAILanguage m_language;
    bool m_language_isSet;
    bool m_language_isValid;

    QList<OAITextLine> m_lines;
    bool m_lines_isSet;
    bool m_lines_isValid;

    qint32 m_page;
    bool m_page_isSet;
    bool m_page_isValid;

    QString m_unit;
    bool m_unit_isSet;
    bool m_unit_isValid;

    double m_width;
    bool m_width_isSet;
    bool m_width_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIReadResult)

#endif // OAIReadResult_H
