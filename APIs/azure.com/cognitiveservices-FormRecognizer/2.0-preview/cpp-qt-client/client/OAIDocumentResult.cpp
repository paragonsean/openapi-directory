/**
 * Form Recognizer Client
 * Extracts information from forms and images into structured data.
 *
 * The version of the OpenAPI document: 2.0-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDocumentResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDocumentResult::OAIDocumentResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDocumentResult::OAIDocumentResult() {
    this->initializeModel();
}

OAIDocumentResult::~OAIDocumentResult() {}

void OAIDocumentResult::initializeModel() {

    m_doc_type_isSet = false;
    m_doc_type_isValid = false;

    m_fields_isSet = false;
    m_fields_isValid = false;

    m_page_range_isSet = false;
    m_page_range_isValid = false;
}

void OAIDocumentResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDocumentResult::fromJsonObject(QJsonObject json) {

    m_doc_type_isValid = ::OpenAPI::fromJsonValue(m_doc_type, json[QString("docType")]);
    m_doc_type_isSet = !json[QString("docType")].isNull() && m_doc_type_isValid;

    m_fields_isValid = ::OpenAPI::fromJsonValue(m_fields, json[QString("fields")]);
    m_fields_isSet = !json[QString("fields")].isNull() && m_fields_isValid;

    m_page_range_isValid = ::OpenAPI::fromJsonValue(m_page_range, json[QString("pageRange")]);
    m_page_range_isSet = !json[QString("pageRange")].isNull() && m_page_range_isValid;
}

QString OAIDocumentResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDocumentResult::asJsonObject() const {
    QJsonObject obj;
    if (m_doc_type_isSet) {
        obj.insert(QString("docType"), ::OpenAPI::toJsonValue(m_doc_type));
    }
    if (m_fields.size() > 0) {
        obj.insert(QString("fields"), ::OpenAPI::toJsonValue(m_fields));
    }
    if (m_page_range.size() > 0) {
        obj.insert(QString("pageRange"), ::OpenAPI::toJsonValue(m_page_range));
    }
    return obj;
}

QString OAIDocumentResult::getDocType() const {
    return m_doc_type;
}
void OAIDocumentResult::setDocType(const QString &doc_type) {
    m_doc_type = doc_type;
    m_doc_type_isSet = true;
}

bool OAIDocumentResult::is_doc_type_Set() const{
    return m_doc_type_isSet;
}

bool OAIDocumentResult::is_doc_type_Valid() const{
    return m_doc_type_isValid;
}

QMap<QString, OAIFieldValue> OAIDocumentResult::getFields() const {
    return m_fields;
}
void OAIDocumentResult::setFields(const QMap<QString, OAIFieldValue> &fields) {
    m_fields = fields;
    m_fields_isSet = true;
}

bool OAIDocumentResult::is_fields_Set() const{
    return m_fields_isSet;
}

bool OAIDocumentResult::is_fields_Valid() const{
    return m_fields_isValid;
}

QList<qint32> OAIDocumentResult::getPageRange() const {
    return m_page_range;
}
void OAIDocumentResult::setPageRange(const QList<qint32> &page_range) {
    m_page_range = page_range;
    m_page_range_isSet = true;
}

bool OAIDocumentResult::is_page_range_Set() const{
    return m_page_range_isSet;
}

bool OAIDocumentResult::is_page_range_Valid() const{
    return m_page_range_isValid;
}

bool OAIDocumentResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_doc_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fields.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_page_range.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDocumentResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_doc_type_isValid && m_fields_isValid && m_page_range_isValid && true;
}

} // namespace OpenAPI
