/**
 * Form Recognizer Client
 * Extracts information from forms and images into structured data.
 *
 * The version of the OpenAPI document: 2.0-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITrainResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITrainResult::OAITrainResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITrainResult::OAITrainResult() {
    this->initializeModel();
}

OAITrainResult::~OAITrainResult() {}

void OAITrainResult::initializeModel() {

    m_average_model_accuracy_isSet = false;
    m_average_model_accuracy_isValid = false;

    m_errors_isSet = false;
    m_errors_isValid = false;

    m_fields_isSet = false;
    m_fields_isValid = false;

    m_training_documents_isSet = false;
    m_training_documents_isValid = false;
}

void OAITrainResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITrainResult::fromJsonObject(QJsonObject json) {

    m_average_model_accuracy_isValid = ::OpenAPI::fromJsonValue(m_average_model_accuracy, json[QString("averageModelAccuracy")]);
    m_average_model_accuracy_isSet = !json[QString("averageModelAccuracy")].isNull() && m_average_model_accuracy_isValid;

    m_errors_isValid = ::OpenAPI::fromJsonValue(m_errors, json[QString("errors")]);
    m_errors_isSet = !json[QString("errors")].isNull() && m_errors_isValid;

    m_fields_isValid = ::OpenAPI::fromJsonValue(m_fields, json[QString("fields")]);
    m_fields_isSet = !json[QString("fields")].isNull() && m_fields_isValid;

    m_training_documents_isValid = ::OpenAPI::fromJsonValue(m_training_documents, json[QString("trainingDocuments")]);
    m_training_documents_isSet = !json[QString("trainingDocuments")].isNull() && m_training_documents_isValid;
}

QString OAITrainResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITrainResult::asJsonObject() const {
    QJsonObject obj;
    if (m_average_model_accuracy_isSet) {
        obj.insert(QString("averageModelAccuracy"), ::OpenAPI::toJsonValue(m_average_model_accuracy));
    }
    if (m_errors.size() > 0) {
        obj.insert(QString("errors"), ::OpenAPI::toJsonValue(m_errors));
    }
    if (m_fields.size() > 0) {
        obj.insert(QString("fields"), ::OpenAPI::toJsonValue(m_fields));
    }
    if (m_training_documents.size() > 0) {
        obj.insert(QString("trainingDocuments"), ::OpenAPI::toJsonValue(m_training_documents));
    }
    return obj;
}

double OAITrainResult::getAverageModelAccuracy() const {
    return m_average_model_accuracy;
}
void OAITrainResult::setAverageModelAccuracy(const double &average_model_accuracy) {
    m_average_model_accuracy = average_model_accuracy;
    m_average_model_accuracy_isSet = true;
}

bool OAITrainResult::is_average_model_accuracy_Set() const{
    return m_average_model_accuracy_isSet;
}

bool OAITrainResult::is_average_model_accuracy_Valid() const{
    return m_average_model_accuracy_isValid;
}

QList<OAIErrorInformation> OAITrainResult::getErrors() const {
    return m_errors;
}
void OAITrainResult::setErrors(const QList<OAIErrorInformation> &errors) {
    m_errors = errors;
    m_errors_isSet = true;
}

bool OAITrainResult::is_errors_Set() const{
    return m_errors_isSet;
}

bool OAITrainResult::is_errors_Valid() const{
    return m_errors_isValid;
}

QList<OAIFormFieldsReport> OAITrainResult::getFields() const {
    return m_fields;
}
void OAITrainResult::setFields(const QList<OAIFormFieldsReport> &fields) {
    m_fields = fields;
    m_fields_isSet = true;
}

bool OAITrainResult::is_fields_Set() const{
    return m_fields_isSet;
}

bool OAITrainResult::is_fields_Valid() const{
    return m_fields_isValid;
}

QList<OAITrainingDocumentInfo> OAITrainResult::getTrainingDocuments() const {
    return m_training_documents;
}
void OAITrainResult::setTrainingDocuments(const QList<OAITrainingDocumentInfo> &training_documents) {
    m_training_documents = training_documents;
    m_training_documents_isSet = true;
}

bool OAITrainResult::is_training_documents_Set() const{
    return m_training_documents_isSet;
}

bool OAITrainResult::is_training_documents_Valid() const{
    return m_training_documents_isValid;
}

bool OAITrainResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_average_model_accuracy_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_errors.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_fields.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_training_documents.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITrainResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_training_documents_isValid && true;
}

} // namespace OpenAPI
