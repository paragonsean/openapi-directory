/**
 * MonitorManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-05-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErrorResponse from '../model/ErrorResponse';
import SubscriptionDiagnosticSettingsResource from '../model/SubscriptionDiagnosticSettingsResource';
import SubscriptionDiagnosticSettingsResourceCollection from '../model/SubscriptionDiagnosticSettingsResourceCollection';

/**
* SubscriptionDiagnosticSettings service.
* @module api/SubscriptionDiagnosticSettingsApi
* @version 2017-05-01-preview
*/
export default class SubscriptionDiagnosticSettingsApi {

    /**
    * Constructs a new SubscriptionDiagnosticSettingsApi. 
    * @alias module:api/SubscriptionDiagnosticSettingsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the subscriptionDiagnosticSettingsCreateOrUpdate operation.
     * @callback module:api/SubscriptionDiagnosticSettingsApi~subscriptionDiagnosticSettingsCreateOrUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SubscriptionDiagnosticSettingsResource} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates or updates subscription diagnostic settings for the specified resource.
     * @param {String} subscriptionId The subscription id.
     * @param {String} apiVersion Client Api Version.
     * @param {String} name The name of the diagnostic setting.
     * @param {module:model/SubscriptionDiagnosticSettingsResource} parameters Parameters supplied to the operation.
     * @param {module:api/SubscriptionDiagnosticSettingsApi~subscriptionDiagnosticSettingsCreateOrUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SubscriptionDiagnosticSettingsResource}
     */
    subscriptionDiagnosticSettingsCreateOrUpdate(subscriptionId, apiVersion, name, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling subscriptionDiagnosticSettingsCreateOrUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling subscriptionDiagnosticSettingsCreateOrUpdate");
      }
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling subscriptionDiagnosticSettingsCreateOrUpdate");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling subscriptionDiagnosticSettingsCreateOrUpdate");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'name': name
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = SubscriptionDiagnosticSettingsResource;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/microsoft.insights/diagnosticSettings/{name}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the subscriptionDiagnosticSettingsDelete operation.
     * @callback module:api/SubscriptionDiagnosticSettingsApi~subscriptionDiagnosticSettingsDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes existing subscription diagnostic settings for the specified resource.
     * @param {String} subscriptionId The subscription id.
     * @param {String} apiVersion Client Api Version.
     * @param {String} name The name of the diagnostic setting.
     * @param {module:api/SubscriptionDiagnosticSettingsApi~subscriptionDiagnosticSettingsDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    subscriptionDiagnosticSettingsDelete(subscriptionId, apiVersion, name, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling subscriptionDiagnosticSettingsDelete");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling subscriptionDiagnosticSettingsDelete");
      }
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling subscriptionDiagnosticSettingsDelete");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'name': name
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/microsoft.insights/diagnosticSettings/{name}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the subscriptionDiagnosticSettingsGet operation.
     * @callback module:api/SubscriptionDiagnosticSettingsApi~subscriptionDiagnosticSettingsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SubscriptionDiagnosticSettingsResource} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the active subscription diagnostic settings for the specified resource.
     * @param {String} subscriptionId The subscription id.
     * @param {String} apiVersion Client Api Version.
     * @param {String} name The name of the diagnostic setting.
     * @param {module:api/SubscriptionDiagnosticSettingsApi~subscriptionDiagnosticSettingsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SubscriptionDiagnosticSettingsResource}
     */
    subscriptionDiagnosticSettingsGet(subscriptionId, apiVersion, name, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling subscriptionDiagnosticSettingsGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling subscriptionDiagnosticSettingsGet");
      }
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling subscriptionDiagnosticSettingsGet");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'name': name
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = SubscriptionDiagnosticSettingsResource;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/microsoft.insights/diagnosticSettings/{name}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the subscriptionDiagnosticSettingsList operation.
     * @callback module:api/SubscriptionDiagnosticSettingsApi~subscriptionDiagnosticSettingsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SubscriptionDiagnosticSettingsResourceCollection} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the active subscription diagnostic settings list for the specified subscriptionId.
     * @param {String} subscriptionId The subscription id.
     * @param {String} apiVersion Client Api Version.
     * @param {module:api/SubscriptionDiagnosticSettingsApi~subscriptionDiagnosticSettingsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SubscriptionDiagnosticSettingsResourceCollection}
     */
    subscriptionDiagnosticSettingsList(subscriptionId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling subscriptionDiagnosticSettingsList");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling subscriptionDiagnosticSettingsList");
      }

      let pathParams = {
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = SubscriptionDiagnosticSettingsResourceCollection;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/microsoft.insights/diagnosticSettings', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
