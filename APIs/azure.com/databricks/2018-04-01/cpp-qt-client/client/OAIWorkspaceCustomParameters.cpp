/**
 * DatabricksClient
 * ARM Databricks
 *
 * The version of the OpenAPI document: 2018-04-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIWorkspaceCustomParameters.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIWorkspaceCustomParameters::OAIWorkspaceCustomParameters(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIWorkspaceCustomParameters::OAIWorkspaceCustomParameters() {
    this->initializeModel();
}

OAIWorkspaceCustomParameters::~OAIWorkspaceCustomParameters() {}

void OAIWorkspaceCustomParameters::initializeModel() {

    m_aml_workspace_id_isSet = false;
    m_aml_workspace_id_isValid = false;

    m_custom_private_subnet_name_isSet = false;
    m_custom_private_subnet_name_isValid = false;

    m_custom_public_subnet_name_isSet = false;
    m_custom_public_subnet_name_isValid = false;

    m_custom_virtual_network_id_isSet = false;
    m_custom_virtual_network_id_isValid = false;

    m_enable_no_public_ip_isSet = false;
    m_enable_no_public_ip_isValid = false;

    m_load_balancer_backend_pool_name_isSet = false;
    m_load_balancer_backend_pool_name_isValid = false;

    m_load_balancer_id_isSet = false;
    m_load_balancer_id_isValid = false;

    m_relay_namespace_name_isSet = false;
    m_relay_namespace_name_isValid = false;

    m_resource_tags_isSet = false;
    m_resource_tags_isValid = false;

    m_storage_account_name_isSet = false;
    m_storage_account_name_isValid = false;

    m_storage_account_sku_name_isSet = false;
    m_storage_account_sku_name_isValid = false;

    m_vnet_address_prefix_isSet = false;
    m_vnet_address_prefix_isValid = false;
}

void OAIWorkspaceCustomParameters::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIWorkspaceCustomParameters::fromJsonObject(QJsonObject json) {

    m_aml_workspace_id_isValid = ::OpenAPI::fromJsonValue(m_aml_workspace_id, json[QString("amlWorkspaceId")]);
    m_aml_workspace_id_isSet = !json[QString("amlWorkspaceId")].isNull() && m_aml_workspace_id_isValid;

    m_custom_private_subnet_name_isValid = ::OpenAPI::fromJsonValue(m_custom_private_subnet_name, json[QString("customPrivateSubnetName")]);
    m_custom_private_subnet_name_isSet = !json[QString("customPrivateSubnetName")].isNull() && m_custom_private_subnet_name_isValid;

    m_custom_public_subnet_name_isValid = ::OpenAPI::fromJsonValue(m_custom_public_subnet_name, json[QString("customPublicSubnetName")]);
    m_custom_public_subnet_name_isSet = !json[QString("customPublicSubnetName")].isNull() && m_custom_public_subnet_name_isValid;

    m_custom_virtual_network_id_isValid = ::OpenAPI::fromJsonValue(m_custom_virtual_network_id, json[QString("customVirtualNetworkId")]);
    m_custom_virtual_network_id_isSet = !json[QString("customVirtualNetworkId")].isNull() && m_custom_virtual_network_id_isValid;

    m_enable_no_public_ip_isValid = ::OpenAPI::fromJsonValue(m_enable_no_public_ip, json[QString("enableNoPublicIp")]);
    m_enable_no_public_ip_isSet = !json[QString("enableNoPublicIp")].isNull() && m_enable_no_public_ip_isValid;

    m_load_balancer_backend_pool_name_isValid = ::OpenAPI::fromJsonValue(m_load_balancer_backend_pool_name, json[QString("loadBalancerBackendPoolName")]);
    m_load_balancer_backend_pool_name_isSet = !json[QString("loadBalancerBackendPoolName")].isNull() && m_load_balancer_backend_pool_name_isValid;

    m_load_balancer_id_isValid = ::OpenAPI::fromJsonValue(m_load_balancer_id, json[QString("loadBalancerId")]);
    m_load_balancer_id_isSet = !json[QString("loadBalancerId")].isNull() && m_load_balancer_id_isValid;

    m_relay_namespace_name_isValid = ::OpenAPI::fromJsonValue(m_relay_namespace_name, json[QString("relayNamespaceName")]);
    m_relay_namespace_name_isSet = !json[QString("relayNamespaceName")].isNull() && m_relay_namespace_name_isValid;

    m_resource_tags_isValid = ::OpenAPI::fromJsonValue(m_resource_tags, json[QString("resourceTags")]);
    m_resource_tags_isSet = !json[QString("resourceTags")].isNull() && m_resource_tags_isValid;

    m_storage_account_name_isValid = ::OpenAPI::fromJsonValue(m_storage_account_name, json[QString("storageAccountName")]);
    m_storage_account_name_isSet = !json[QString("storageAccountName")].isNull() && m_storage_account_name_isValid;

    m_storage_account_sku_name_isValid = ::OpenAPI::fromJsonValue(m_storage_account_sku_name, json[QString("storageAccountSkuName")]);
    m_storage_account_sku_name_isSet = !json[QString("storageAccountSkuName")].isNull() && m_storage_account_sku_name_isValid;

    m_vnet_address_prefix_isValid = ::OpenAPI::fromJsonValue(m_vnet_address_prefix, json[QString("vnetAddressPrefix")]);
    m_vnet_address_prefix_isSet = !json[QString("vnetAddressPrefix")].isNull() && m_vnet_address_prefix_isValid;
}

QString OAIWorkspaceCustomParameters::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIWorkspaceCustomParameters::asJsonObject() const {
    QJsonObject obj;
    if (m_aml_workspace_id.isSet()) {
        obj.insert(QString("amlWorkspaceId"), ::OpenAPI::toJsonValue(m_aml_workspace_id));
    }
    if (m_custom_private_subnet_name.isSet()) {
        obj.insert(QString("customPrivateSubnetName"), ::OpenAPI::toJsonValue(m_custom_private_subnet_name));
    }
    if (m_custom_public_subnet_name.isSet()) {
        obj.insert(QString("customPublicSubnetName"), ::OpenAPI::toJsonValue(m_custom_public_subnet_name));
    }
    if (m_custom_virtual_network_id.isSet()) {
        obj.insert(QString("customVirtualNetworkId"), ::OpenAPI::toJsonValue(m_custom_virtual_network_id));
    }
    if (m_enable_no_public_ip.isSet()) {
        obj.insert(QString("enableNoPublicIp"), ::OpenAPI::toJsonValue(m_enable_no_public_ip));
    }
    if (m_load_balancer_backend_pool_name.isSet()) {
        obj.insert(QString("loadBalancerBackendPoolName"), ::OpenAPI::toJsonValue(m_load_balancer_backend_pool_name));
    }
    if (m_load_balancer_id.isSet()) {
        obj.insert(QString("loadBalancerId"), ::OpenAPI::toJsonValue(m_load_balancer_id));
    }
    if (m_relay_namespace_name.isSet()) {
        obj.insert(QString("relayNamespaceName"), ::OpenAPI::toJsonValue(m_relay_namespace_name));
    }
    if (m_resource_tags.isSet()) {
        obj.insert(QString("resourceTags"), ::OpenAPI::toJsonValue(m_resource_tags));
    }
    if (m_storage_account_name.isSet()) {
        obj.insert(QString("storageAccountName"), ::OpenAPI::toJsonValue(m_storage_account_name));
    }
    if (m_storage_account_sku_name.isSet()) {
        obj.insert(QString("storageAccountSkuName"), ::OpenAPI::toJsonValue(m_storage_account_sku_name));
    }
    if (m_vnet_address_prefix.isSet()) {
        obj.insert(QString("vnetAddressPrefix"), ::OpenAPI::toJsonValue(m_vnet_address_prefix));
    }
    return obj;
}

OAIWorkspaceCustomStringParameter OAIWorkspaceCustomParameters::getAmlWorkspaceId() const {
    return m_aml_workspace_id;
}
void OAIWorkspaceCustomParameters::setAmlWorkspaceId(const OAIWorkspaceCustomStringParameter &aml_workspace_id) {
    m_aml_workspace_id = aml_workspace_id;
    m_aml_workspace_id_isSet = true;
}

bool OAIWorkspaceCustomParameters::is_aml_workspace_id_Set() const{
    return m_aml_workspace_id_isSet;
}

bool OAIWorkspaceCustomParameters::is_aml_workspace_id_Valid() const{
    return m_aml_workspace_id_isValid;
}

OAIWorkspaceCustomStringParameter OAIWorkspaceCustomParameters::getCustomPrivateSubnetName() const {
    return m_custom_private_subnet_name;
}
void OAIWorkspaceCustomParameters::setCustomPrivateSubnetName(const OAIWorkspaceCustomStringParameter &custom_private_subnet_name) {
    m_custom_private_subnet_name = custom_private_subnet_name;
    m_custom_private_subnet_name_isSet = true;
}

bool OAIWorkspaceCustomParameters::is_custom_private_subnet_name_Set() const{
    return m_custom_private_subnet_name_isSet;
}

bool OAIWorkspaceCustomParameters::is_custom_private_subnet_name_Valid() const{
    return m_custom_private_subnet_name_isValid;
}

OAIWorkspaceCustomStringParameter OAIWorkspaceCustomParameters::getCustomPublicSubnetName() const {
    return m_custom_public_subnet_name;
}
void OAIWorkspaceCustomParameters::setCustomPublicSubnetName(const OAIWorkspaceCustomStringParameter &custom_public_subnet_name) {
    m_custom_public_subnet_name = custom_public_subnet_name;
    m_custom_public_subnet_name_isSet = true;
}

bool OAIWorkspaceCustomParameters::is_custom_public_subnet_name_Set() const{
    return m_custom_public_subnet_name_isSet;
}

bool OAIWorkspaceCustomParameters::is_custom_public_subnet_name_Valid() const{
    return m_custom_public_subnet_name_isValid;
}

OAIWorkspaceCustomStringParameter OAIWorkspaceCustomParameters::getCustomVirtualNetworkId() const {
    return m_custom_virtual_network_id;
}
void OAIWorkspaceCustomParameters::setCustomVirtualNetworkId(const OAIWorkspaceCustomStringParameter &custom_virtual_network_id) {
    m_custom_virtual_network_id = custom_virtual_network_id;
    m_custom_virtual_network_id_isSet = true;
}

bool OAIWorkspaceCustomParameters::is_custom_virtual_network_id_Set() const{
    return m_custom_virtual_network_id_isSet;
}

bool OAIWorkspaceCustomParameters::is_custom_virtual_network_id_Valid() const{
    return m_custom_virtual_network_id_isValid;
}

OAIWorkspaceCustomBooleanParameter OAIWorkspaceCustomParameters::getEnableNoPublicIp() const {
    return m_enable_no_public_ip;
}
void OAIWorkspaceCustomParameters::setEnableNoPublicIp(const OAIWorkspaceCustomBooleanParameter &enable_no_public_ip) {
    m_enable_no_public_ip = enable_no_public_ip;
    m_enable_no_public_ip_isSet = true;
}

bool OAIWorkspaceCustomParameters::is_enable_no_public_ip_Set() const{
    return m_enable_no_public_ip_isSet;
}

bool OAIWorkspaceCustomParameters::is_enable_no_public_ip_Valid() const{
    return m_enable_no_public_ip_isValid;
}

OAIWorkspaceCustomStringParameter OAIWorkspaceCustomParameters::getLoadBalancerBackendPoolName() const {
    return m_load_balancer_backend_pool_name;
}
void OAIWorkspaceCustomParameters::setLoadBalancerBackendPoolName(const OAIWorkspaceCustomStringParameter &load_balancer_backend_pool_name) {
    m_load_balancer_backend_pool_name = load_balancer_backend_pool_name;
    m_load_balancer_backend_pool_name_isSet = true;
}

bool OAIWorkspaceCustomParameters::is_load_balancer_backend_pool_name_Set() const{
    return m_load_balancer_backend_pool_name_isSet;
}

bool OAIWorkspaceCustomParameters::is_load_balancer_backend_pool_name_Valid() const{
    return m_load_balancer_backend_pool_name_isValid;
}

OAIWorkspaceCustomStringParameter OAIWorkspaceCustomParameters::getLoadBalancerId() const {
    return m_load_balancer_id;
}
void OAIWorkspaceCustomParameters::setLoadBalancerId(const OAIWorkspaceCustomStringParameter &load_balancer_id) {
    m_load_balancer_id = load_balancer_id;
    m_load_balancer_id_isSet = true;
}

bool OAIWorkspaceCustomParameters::is_load_balancer_id_Set() const{
    return m_load_balancer_id_isSet;
}

bool OAIWorkspaceCustomParameters::is_load_balancer_id_Valid() const{
    return m_load_balancer_id_isValid;
}

OAIWorkspaceCustomStringParameter OAIWorkspaceCustomParameters::getRelayNamespaceName() const {
    return m_relay_namespace_name;
}
void OAIWorkspaceCustomParameters::setRelayNamespaceName(const OAIWorkspaceCustomStringParameter &relay_namespace_name) {
    m_relay_namespace_name = relay_namespace_name;
    m_relay_namespace_name_isSet = true;
}

bool OAIWorkspaceCustomParameters::is_relay_namespace_name_Set() const{
    return m_relay_namespace_name_isSet;
}

bool OAIWorkspaceCustomParameters::is_relay_namespace_name_Valid() const{
    return m_relay_namespace_name_isValid;
}

OAIWorkspaceCustomObjectParameter OAIWorkspaceCustomParameters::getResourceTags() const {
    return m_resource_tags;
}
void OAIWorkspaceCustomParameters::setResourceTags(const OAIWorkspaceCustomObjectParameter &resource_tags) {
    m_resource_tags = resource_tags;
    m_resource_tags_isSet = true;
}

bool OAIWorkspaceCustomParameters::is_resource_tags_Set() const{
    return m_resource_tags_isSet;
}

bool OAIWorkspaceCustomParameters::is_resource_tags_Valid() const{
    return m_resource_tags_isValid;
}

OAIWorkspaceCustomStringParameter OAIWorkspaceCustomParameters::getStorageAccountName() const {
    return m_storage_account_name;
}
void OAIWorkspaceCustomParameters::setStorageAccountName(const OAIWorkspaceCustomStringParameter &storage_account_name) {
    m_storage_account_name = storage_account_name;
    m_storage_account_name_isSet = true;
}

bool OAIWorkspaceCustomParameters::is_storage_account_name_Set() const{
    return m_storage_account_name_isSet;
}

bool OAIWorkspaceCustomParameters::is_storage_account_name_Valid() const{
    return m_storage_account_name_isValid;
}

OAIWorkspaceCustomStringParameter OAIWorkspaceCustomParameters::getStorageAccountSkuName() const {
    return m_storage_account_sku_name;
}
void OAIWorkspaceCustomParameters::setStorageAccountSkuName(const OAIWorkspaceCustomStringParameter &storage_account_sku_name) {
    m_storage_account_sku_name = storage_account_sku_name;
    m_storage_account_sku_name_isSet = true;
}

bool OAIWorkspaceCustomParameters::is_storage_account_sku_name_Set() const{
    return m_storage_account_sku_name_isSet;
}

bool OAIWorkspaceCustomParameters::is_storage_account_sku_name_Valid() const{
    return m_storage_account_sku_name_isValid;
}

OAIWorkspaceCustomStringParameter OAIWorkspaceCustomParameters::getVnetAddressPrefix() const {
    return m_vnet_address_prefix;
}
void OAIWorkspaceCustomParameters::setVnetAddressPrefix(const OAIWorkspaceCustomStringParameter &vnet_address_prefix) {
    m_vnet_address_prefix = vnet_address_prefix;
    m_vnet_address_prefix_isSet = true;
}

bool OAIWorkspaceCustomParameters::is_vnet_address_prefix_Set() const{
    return m_vnet_address_prefix_isSet;
}

bool OAIWorkspaceCustomParameters::is_vnet_address_prefix_Valid() const{
    return m_vnet_address_prefix_isValid;
}

bool OAIWorkspaceCustomParameters::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_aml_workspace_id.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_custom_private_subnet_name.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_custom_public_subnet_name.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_custom_virtual_network_id.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_enable_no_public_ip.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_load_balancer_backend_pool_name.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_load_balancer_id.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_relay_namespace_name.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_tags.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_storage_account_name.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_storage_account_sku_name.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_vnet_address_prefix.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIWorkspaceCustomParameters::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
