/**
 * iotDpsClient
 * API for using the Azure IoT Hub Device Provisioning Service features.
 *
 * The version of the OpenAPI document: 2018-01-22
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIVerificationCodeRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIVerificationCodeRequest::OAIVerificationCodeRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIVerificationCodeRequest::OAIVerificationCodeRequest() {
    this->initializeModel();
}

OAIVerificationCodeRequest::~OAIVerificationCodeRequest() {}

void OAIVerificationCodeRequest::initializeModel() {

    m_certificate_isSet = false;
    m_certificate_isValid = false;
}

void OAIVerificationCodeRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIVerificationCodeRequest::fromJsonObject(QJsonObject json) {

    m_certificate_isValid = ::OpenAPI::fromJsonValue(m_certificate, json[QString("certificate")]);
    m_certificate_isSet = !json[QString("certificate")].isNull() && m_certificate_isValid;
}

QString OAIVerificationCodeRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIVerificationCodeRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_certificate_isSet) {
        obj.insert(QString("certificate"), ::OpenAPI::toJsonValue(m_certificate));
    }
    return obj;
}

QString OAIVerificationCodeRequest::getCertificate() const {
    return m_certificate;
}
void OAIVerificationCodeRequest::setCertificate(const QString &certificate) {
    m_certificate = certificate;
    m_certificate_isSet = true;
}

bool OAIVerificationCodeRequest::is_certificate_Set() const{
    return m_certificate_isSet;
}

bool OAIVerificationCodeRequest::is_certificate_Valid() const{
    return m_certificate_isValid;
}

bool OAIVerificationCodeRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_certificate_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIVerificationCodeRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
