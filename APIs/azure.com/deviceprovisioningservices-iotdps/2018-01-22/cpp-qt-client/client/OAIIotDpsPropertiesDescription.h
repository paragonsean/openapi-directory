/**
 * iotDpsClient
 * API for using the Azure IoT Hub Device Provisioning Service features.
 *
 * The version of the OpenAPI document: 2018-01-22
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIIotDpsPropertiesDescription.h
 *
 * the service specific properties of a provisioning service, including keys, linked iot hubs, current state, and system generated properties such as hostname and idScope
 */

#ifndef OAIIotDpsPropertiesDescription_H
#define OAIIotDpsPropertiesDescription_H

#include <QJsonObject>

#include "OAIIotHubDefinitionDescription.h"
#include "OAISharedAccessSignatureAuthorizationRule_AccessRightsDescription.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISharedAccessSignatureAuthorizationRule_AccessRightsDescription;
class OAIIotHubDefinitionDescription;

class OAIIotDpsPropertiesDescription : public OAIObject {
public:
    OAIIotDpsPropertiesDescription();
    OAIIotDpsPropertiesDescription(QString json);
    ~OAIIotDpsPropertiesDescription() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAllocationPolicy() const;
    void setAllocationPolicy(const QString &allocation_policy);
    bool is_allocation_policy_Set() const;
    bool is_allocation_policy_Valid() const;

    QList<OAISharedAccessSignatureAuthorizationRule_AccessRightsDescription> getAuthorizationPolicies() const;
    void setAuthorizationPolicies(const QList<OAISharedAccessSignatureAuthorizationRule_AccessRightsDescription> &authorization_policies);
    bool is_authorization_policies_Set() const;
    bool is_authorization_policies_Valid() const;

    QString getDeviceProvisioningHostName() const;
    void setDeviceProvisioningHostName(const QString &device_provisioning_host_name);
    bool is_device_provisioning_host_name_Set() const;
    bool is_device_provisioning_host_name_Valid() const;

    QString getIdScope() const;
    void setIdScope(const QString &id_scope);
    bool is_id_scope_Set() const;
    bool is_id_scope_Valid() const;

    QList<OAIIotHubDefinitionDescription> getIotHubs() const;
    void setIotHubs(const QList<OAIIotHubDefinitionDescription> &iot_hubs);
    bool is_iot_hubs_Set() const;
    bool is_iot_hubs_Valid() const;

    QString getProvisioningState() const;
    void setProvisioningState(const QString &provisioning_state);
    bool is_provisioning_state_Set() const;
    bool is_provisioning_state_Valid() const;

    QString getServiceOperationsHostName() const;
    void setServiceOperationsHostName(const QString &service_operations_host_name);
    bool is_service_operations_host_name_Set() const;
    bool is_service_operations_host_name_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_allocation_policy;
    bool m_allocation_policy_isSet;
    bool m_allocation_policy_isValid;

    QList<OAISharedAccessSignatureAuthorizationRule_AccessRightsDescription> m_authorization_policies;
    bool m_authorization_policies_isSet;
    bool m_authorization_policies_isValid;

    QString m_device_provisioning_host_name;
    bool m_device_provisioning_host_name_isSet;
    bool m_device_provisioning_host_name_isValid;

    QString m_id_scope;
    bool m_id_scope_isSet;
    bool m_id_scope_isValid;

    QList<OAIIotHubDefinitionDescription> m_iot_hubs;
    bool m_iot_hubs_isSet;
    bool m_iot_hubs_isValid;

    QString m_provisioning_state;
    bool m_provisioning_state_isSet;
    bool m_provisioning_state_isValid;

    QString m_service_operations_host_name;
    bool m_service_operations_host_name_isSet;
    bool m_service_operations_host_name_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIIotDpsPropertiesDescription)

#endif // OAIIotDpsPropertiesDescription_H
