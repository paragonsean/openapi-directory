/**
 * iotDpsClient
 * API for using the Azure IoT Hub Device Provisioning Service features.
 *
 * The version of the OpenAPI document: 2018-01-22
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.IotDpsClient);
  }
}(this, function(expect, IotDpsClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new IotDpsClient.IotDpsPropertiesDescription();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('IotDpsPropertiesDescription', function() {
    it('should create an instance of IotDpsPropertiesDescription', function() {
      // uncomment below and update the code to test IotDpsPropertiesDescription
      //var instance = new IotDpsClient.IotDpsPropertiesDescription();
      //expect(instance).to.be.a(IotDpsClient.IotDpsPropertiesDescription);
    });

    it('should have the property allocationPolicy (base name: "allocationPolicy")', function() {
      // uncomment below and update the code to test the property allocationPolicy
      //var instance = new IotDpsClient.IotDpsPropertiesDescription();
      //expect(instance).to.be();
    });

    it('should have the property authorizationPolicies (base name: "authorizationPolicies")', function() {
      // uncomment below and update the code to test the property authorizationPolicies
      //var instance = new IotDpsClient.IotDpsPropertiesDescription();
      //expect(instance).to.be();
    });

    it('should have the property deviceProvisioningHostName (base name: "deviceProvisioningHostName")', function() {
      // uncomment below and update the code to test the property deviceProvisioningHostName
      //var instance = new IotDpsClient.IotDpsPropertiesDescription();
      //expect(instance).to.be();
    });

    it('should have the property idScope (base name: "idScope")', function() {
      // uncomment below and update the code to test the property idScope
      //var instance = new IotDpsClient.IotDpsPropertiesDescription();
      //expect(instance).to.be();
    });

    it('should have the property iotHubs (base name: "iotHubs")', function() {
      // uncomment below and update the code to test the property iotHubs
      //var instance = new IotDpsClient.IotDpsPropertiesDescription();
      //expect(instance).to.be();
    });

    it('should have the property provisioningState (base name: "provisioningState")', function() {
      // uncomment below and update the code to test the property provisioningState
      //var instance = new IotDpsClient.IotDpsPropertiesDescription();
      //expect(instance).to.be();
    });

    it('should have the property serviceOperationsHostName (base name: "serviceOperationsHostName")', function() {
      // uncomment below and update the code to test the property serviceOperationsHostName
      //var instance = new IotDpsClient.IotDpsPropertiesDescription();
      //expect(instance).to.be();
    });

    it('should have the property state (base name: "state")', function() {
      // uncomment below and update the code to test the property state
      //var instance = new IotDpsClient.IotDpsPropertiesDescription();
      //expect(instance).to.be();
    });

  });

}));
