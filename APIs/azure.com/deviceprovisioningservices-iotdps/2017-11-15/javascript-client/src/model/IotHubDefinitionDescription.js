/**
 * iotDpsClient
 * API for using the Azure IoT Hub Device Provisioning Service features.
 *
 * The version of the OpenAPI document: 2017-11-15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The IotHubDefinitionDescription model module.
 * @module model/IotHubDefinitionDescription
 * @version 2017-11-15
 */
class IotHubDefinitionDescription {
    /**
     * Constructs a new <code>IotHubDefinitionDescription</code>.
     * Description of the IoT hub.
     * @alias module:model/IotHubDefinitionDescription
     * @param connectionString {String} Connection string of the IoT hub.
     * @param location {String} ARM region of the IoT hub.
     */
    constructor(connectionString, location) { 
        
        IotHubDefinitionDescription.initialize(this, connectionString, location);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, connectionString, location) { 
        obj['connectionString'] = connectionString;
        obj['location'] = location;
    }

    /**
     * Constructs a <code>IotHubDefinitionDescription</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IotHubDefinitionDescription} obj Optional instance to populate.
     * @return {module:model/IotHubDefinitionDescription} The populated <code>IotHubDefinitionDescription</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IotHubDefinitionDescription();

            if (data.hasOwnProperty('allocationWeight')) {
                obj['allocationWeight'] = ApiClient.convertToType(data['allocationWeight'], 'Number');
            }
            if (data.hasOwnProperty('applyAllocationPolicy')) {
                obj['applyAllocationPolicy'] = ApiClient.convertToType(data['applyAllocationPolicy'], 'Boolean');
            }
            if (data.hasOwnProperty('connectionString')) {
                obj['connectionString'] = ApiClient.convertToType(data['connectionString'], 'String');
            }
            if (data.hasOwnProperty('location')) {
                obj['location'] = ApiClient.convertToType(data['location'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IotHubDefinitionDescription</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IotHubDefinitionDescription</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of IotHubDefinitionDescription.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['connectionString'] && !(typeof data['connectionString'] === 'string' || data['connectionString'] instanceof String)) {
            throw new Error("Expected the field `connectionString` to be a primitive type in the JSON string but got " + data['connectionString']);
        }
        // ensure the json data is a string
        if (data['location'] && !(typeof data['location'] === 'string' || data['location'] instanceof String)) {
            throw new Error("Expected the field `location` to be a primitive type in the JSON string but got " + data['location']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}

IotHubDefinitionDescription.RequiredProperties = ["connectionString", "location"];

/**
 * Weight to apply for a given IoT hub.
 * @member {Number} allocationWeight
 */
IotHubDefinitionDescription.prototype['allocationWeight'] = undefined;

/**
 * Flag for applying allocationPolicy or not for a given IoT hub.
 * @member {Boolean} applyAllocationPolicy
 */
IotHubDefinitionDescription.prototype['applyAllocationPolicy'] = undefined;

/**
 * Connection string of the IoT hub.
 * @member {String} connectionString
 */
IotHubDefinitionDescription.prototype['connectionString'] = undefined;

/**
 * ARM region of the IoT hub.
 * @member {String} location
 */
IotHubDefinitionDescription.prototype['location'] = undefined;

/**
 * Host name of the IoT hub.
 * @member {String} name
 */
IotHubDefinitionDescription.prototype['name'] = undefined;






export default IotHubDefinitionDescription;

