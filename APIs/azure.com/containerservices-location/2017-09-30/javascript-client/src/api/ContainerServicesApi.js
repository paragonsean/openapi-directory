/**
 * ContainerServiceClient
 * The Container Service Client.
 *
 * The version of the OpenAPI document: 2017-09-30
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import OrchestratorVersionProfileListResult from '../model/OrchestratorVersionProfileListResult';

/**
* ContainerServices service.
* @module api/ContainerServicesApi
* @version 2017-09-30
*/
export default class ContainerServicesApi {

    /**
    * Constructs a new ContainerServicesApi. 
    * @alias module:api/ContainerServicesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the containerServicesListOrchestrators operation.
     * @callback module:api/ContainerServicesApi~containerServicesListOrchestratorsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OrchestratorVersionProfileListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets a list of supported orchestrators in the specified subscription.
     * Gets a list of supported orchestrators in the specified subscription. The operation returns properties of each orchestrator including version and available upgrades.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} location The name of a supported Azure region.
     * @param {Object} opts Optional parameters
     * @param {String} [resourceType] resource type for which the list of orchestrators needs to be returned
     * @param {module:api/ContainerServicesApi~containerServicesListOrchestratorsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OrchestratorVersionProfileListResult}
     */
    containerServicesListOrchestrators(apiVersion, subscriptionId, location, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling containerServicesListOrchestrators");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling containerServicesListOrchestrators");
      }
      // verify the required parameter 'location' is set
      if (location === undefined || location === null) {
        throw new Error("Missing the required parameter 'location' when calling containerServicesListOrchestrators");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'location': location
      };
      let queryParams = {
        'api-version': apiVersion,
        'resource-type': opts['resourceType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = OrchestratorVersionProfileListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.ContainerService/locations/{location}/orchestrators', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
