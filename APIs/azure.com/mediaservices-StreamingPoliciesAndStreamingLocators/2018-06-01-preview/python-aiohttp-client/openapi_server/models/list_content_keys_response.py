# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.streaming_locator_content_key import StreamingLocatorContentKey
from openapi_server import util


class ListContentKeysResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, content_keys: List[StreamingLocatorContentKey]=None):
        """ListContentKeysResponse - a model defined in OpenAPI

        :param content_keys: The content_keys of this ListContentKeysResponse.
        """
        self.openapi_types = {
            'content_keys': List[StreamingLocatorContentKey]
        }

        self.attribute_map = {
            'content_keys': 'contentKeys'
        }

        self._content_keys = content_keys

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListContentKeysResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListContentKeysResponse of this ListContentKeysResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def content_keys(self):
        """Gets the content_keys of this ListContentKeysResponse.

        ContentKeys used by current Streaming Locator

        :return: The content_keys of this ListContentKeysResponse.
        :rtype: List[StreamingLocatorContentKey]
        """
        return self._content_keys

    @content_keys.setter
    def content_keys(self, content_keys):
        """Sets the content_keys of this ListContentKeysResponse.

        ContentKeys used by current Streaming Locator

        :param content_keys: The content_keys of this ListContentKeysResponse.
        :type content_keys: List[StreamingLocatorContentKey]
        """

        self._content_keys = content_keys
