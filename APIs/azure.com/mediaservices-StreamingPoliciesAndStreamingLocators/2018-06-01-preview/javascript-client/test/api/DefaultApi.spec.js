/**
 * Azure Media Services
 * This Swagger was generated by the API Framework.
 *
 * The version of the OpenAPI document: 2018-06-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AzureMediaServices);
  }
}(this, function(expect, AzureMediaServices) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AzureMediaServices.DefaultApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DefaultApi', function() {
    describe('streamingLocatorsCreate', function() {
      it('should call streamingLocatorsCreate successfully', function(done) {
        //uncomment below and update the code to test streamingLocatorsCreate
        //instance.streamingLocatorsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('streamingLocatorsDelete', function() {
      it('should call streamingLocatorsDelete successfully', function(done) {
        //uncomment below and update the code to test streamingLocatorsDelete
        //instance.streamingLocatorsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('streamingLocatorsGet', function() {
      it('should call streamingLocatorsGet successfully', function(done) {
        //uncomment below and update the code to test streamingLocatorsGet
        //instance.streamingLocatorsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('streamingLocatorsList', function() {
      it('should call streamingLocatorsList successfully', function(done) {
        //uncomment below and update the code to test streamingLocatorsList
        //instance.streamingLocatorsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('streamingLocatorsListContentKeys', function() {
      it('should call streamingLocatorsListContentKeys successfully', function(done) {
        //uncomment below and update the code to test streamingLocatorsListContentKeys
        //instance.streamingLocatorsListContentKeys(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('streamingLocatorsListPaths', function() {
      it('should call streamingLocatorsListPaths successfully', function(done) {
        //uncomment below and update the code to test streamingLocatorsListPaths
        //instance.streamingLocatorsListPaths(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('streamingPoliciesCreate', function() {
      it('should call streamingPoliciesCreate successfully', function(done) {
        //uncomment below and update the code to test streamingPoliciesCreate
        //instance.streamingPoliciesCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('streamingPoliciesDelete', function() {
      it('should call streamingPoliciesDelete successfully', function(done) {
        //uncomment below and update the code to test streamingPoliciesDelete
        //instance.streamingPoliciesDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('streamingPoliciesGet', function() {
      it('should call streamingPoliciesGet successfully', function(done) {
        //uncomment below and update the code to test streamingPoliciesGet
        //instance.streamingPoliciesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('streamingPoliciesList', function() {
      it('should call streamingPoliciesList successfully', function(done) {
        //uncomment below and update the code to test streamingPoliciesList
        //instance.streamingPoliciesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
