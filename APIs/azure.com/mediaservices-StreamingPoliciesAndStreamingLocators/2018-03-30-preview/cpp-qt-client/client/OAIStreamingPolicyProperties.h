/**
 * Azure Media Services
 * This Swagger was generated by the API Framework.
 *
 * The version of the OpenAPI document: 2018-03-30-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStreamingPolicyProperties.h
 *
 * Class to specify properties of Streaming Policy
 */

#ifndef OAIStreamingPolicyProperties_H
#define OAIStreamingPolicyProperties_H

#include <QJsonObject>

#include "OAICommonEncryptionCbcs.h"
#include "OAICommonEncryptionCenc.h"
#include "OAIEnvelopeEncryption.h"
#include "OAINoEncryption.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICommonEncryptionCbcs;
class OAICommonEncryptionCenc;
class OAIEnvelopeEncryption;
class OAINoEncryption;

class OAIStreamingPolicyProperties : public OAIObject {
public:
    OAIStreamingPolicyProperties();
    OAIStreamingPolicyProperties(QString json);
    ~OAIStreamingPolicyProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICommonEncryptionCbcs getCommonEncryptionCbcs() const;
    void setCommonEncryptionCbcs(const OAICommonEncryptionCbcs &common_encryption_cbcs);
    bool is_common_encryption_cbcs_Set() const;
    bool is_common_encryption_cbcs_Valid() const;

    OAICommonEncryptionCenc getCommonEncryptionCenc() const;
    void setCommonEncryptionCenc(const OAICommonEncryptionCenc &common_encryption_cenc);
    bool is_common_encryption_cenc_Set() const;
    bool is_common_encryption_cenc_Valid() const;

    QDateTime getCreated() const;
    void setCreated(const QDateTime &created);
    bool is_created_Set() const;
    bool is_created_Valid() const;

    QString getDefaultContentKeyPolicyName() const;
    void setDefaultContentKeyPolicyName(const QString &default_content_key_policy_name);
    bool is_default_content_key_policy_name_Set() const;
    bool is_default_content_key_policy_name_Valid() const;

    OAIEnvelopeEncryption getEnvelopeEncryption() const;
    void setEnvelopeEncryption(const OAIEnvelopeEncryption &envelope_encryption);
    bool is_envelope_encryption_Set() const;
    bool is_envelope_encryption_Valid() const;

    OAINoEncryption getNoEncryption() const;
    void setNoEncryption(const OAINoEncryption &no_encryption);
    bool is_no_encryption_Set() const;
    bool is_no_encryption_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICommonEncryptionCbcs m_common_encryption_cbcs;
    bool m_common_encryption_cbcs_isSet;
    bool m_common_encryption_cbcs_isValid;

    OAICommonEncryptionCenc m_common_encryption_cenc;
    bool m_common_encryption_cenc_isSet;
    bool m_common_encryption_cenc_isValid;

    QDateTime m_created;
    bool m_created_isSet;
    bool m_created_isValid;

    QString m_default_content_key_policy_name;
    bool m_default_content_key_policy_name_isSet;
    bool m_default_content_key_policy_name_isValid;

    OAIEnvelopeEncryption m_envelope_encryption;
    bool m_envelope_encryption_isSet;
    bool m_envelope_encryption_isValid;

    OAINoEncryption m_no_encryption;
    bool m_no_encryption_isSet;
    bool m_no_encryption_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStreamingPolicyProperties)

#endif // OAIStreamingPolicyProperties_H
