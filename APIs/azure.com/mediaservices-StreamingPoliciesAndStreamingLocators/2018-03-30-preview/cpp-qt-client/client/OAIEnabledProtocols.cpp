/**
 * Azure Media Services
 * This Swagger was generated by the API Framework.
 *
 * The version of the OpenAPI document: 2018-03-30-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEnabledProtocols.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEnabledProtocols::OAIEnabledProtocols(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEnabledProtocols::OAIEnabledProtocols() {
    this->initializeModel();
}

OAIEnabledProtocols::~OAIEnabledProtocols() {}

void OAIEnabledProtocols::initializeModel() {

    m_dash_isSet = false;
    m_dash_isValid = false;

    m_download_isSet = false;
    m_download_isValid = false;

    m_hls_isSet = false;
    m_hls_isValid = false;

    m_smooth_streaming_isSet = false;
    m_smooth_streaming_isValid = false;
}

void OAIEnabledProtocols::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEnabledProtocols::fromJsonObject(QJsonObject json) {

    m_dash_isValid = ::OpenAPI::fromJsonValue(m_dash, json[QString("dash")]);
    m_dash_isSet = !json[QString("dash")].isNull() && m_dash_isValid;

    m_download_isValid = ::OpenAPI::fromJsonValue(m_download, json[QString("download")]);
    m_download_isSet = !json[QString("download")].isNull() && m_download_isValid;

    m_hls_isValid = ::OpenAPI::fromJsonValue(m_hls, json[QString("hls")]);
    m_hls_isSet = !json[QString("hls")].isNull() && m_hls_isValid;

    m_smooth_streaming_isValid = ::OpenAPI::fromJsonValue(m_smooth_streaming, json[QString("smoothStreaming")]);
    m_smooth_streaming_isSet = !json[QString("smoothStreaming")].isNull() && m_smooth_streaming_isValid;
}

QString OAIEnabledProtocols::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEnabledProtocols::asJsonObject() const {
    QJsonObject obj;
    if (m_dash_isSet) {
        obj.insert(QString("dash"), ::OpenAPI::toJsonValue(m_dash));
    }
    if (m_download_isSet) {
        obj.insert(QString("download"), ::OpenAPI::toJsonValue(m_download));
    }
    if (m_hls_isSet) {
        obj.insert(QString("hls"), ::OpenAPI::toJsonValue(m_hls));
    }
    if (m_smooth_streaming_isSet) {
        obj.insert(QString("smoothStreaming"), ::OpenAPI::toJsonValue(m_smooth_streaming));
    }
    return obj;
}

bool OAIEnabledProtocols::isDash() const {
    return m_dash;
}
void OAIEnabledProtocols::setDash(const bool &dash) {
    m_dash = dash;
    m_dash_isSet = true;
}

bool OAIEnabledProtocols::is_dash_Set() const{
    return m_dash_isSet;
}

bool OAIEnabledProtocols::is_dash_Valid() const{
    return m_dash_isValid;
}

bool OAIEnabledProtocols::isDownload() const {
    return m_download;
}
void OAIEnabledProtocols::setDownload(const bool &download) {
    m_download = download;
    m_download_isSet = true;
}

bool OAIEnabledProtocols::is_download_Set() const{
    return m_download_isSet;
}

bool OAIEnabledProtocols::is_download_Valid() const{
    return m_download_isValid;
}

bool OAIEnabledProtocols::isHls() const {
    return m_hls;
}
void OAIEnabledProtocols::setHls(const bool &hls) {
    m_hls = hls;
    m_hls_isSet = true;
}

bool OAIEnabledProtocols::is_hls_Set() const{
    return m_hls_isSet;
}

bool OAIEnabledProtocols::is_hls_Valid() const{
    return m_hls_isValid;
}

bool OAIEnabledProtocols::isSmoothStreaming() const {
    return m_smooth_streaming;
}
void OAIEnabledProtocols::setSmoothStreaming(const bool &smooth_streaming) {
    m_smooth_streaming = smooth_streaming;
    m_smooth_streaming_isSet = true;
}

bool OAIEnabledProtocols::is_smooth_streaming_Set() const{
    return m_smooth_streaming_isSet;
}

bool OAIEnabledProtocols::is_smooth_streaming_Valid() const{
    return m_smooth_streaming_isValid;
}

bool OAIEnabledProtocols::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_dash_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_download_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_hls_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_smooth_streaming_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEnabledProtocols::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_dash_isValid && m_download_isValid && m_hls_isValid && m_smooth_streaming_isValid && true;
}

} // namespace OpenAPI
