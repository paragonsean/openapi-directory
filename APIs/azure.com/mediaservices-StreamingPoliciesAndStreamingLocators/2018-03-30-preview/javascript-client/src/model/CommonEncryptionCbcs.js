/**
 * Azure Media Services
 * This Swagger was generated by the API Framework.
 *
 * The version of the OpenAPI document: 2018-03-30-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CbcsDrmConfiguration from './CbcsDrmConfiguration';
import EnabledProtocols from './EnabledProtocols';
import StreamingPolicyContentKeys from './StreamingPolicyContentKeys';
import TrackSelection from './TrackSelection';

/**
 * The CommonEncryptionCbcs model module.
 * @module model/CommonEncryptionCbcs
 * @version 2018-03-30-preview
 */
class CommonEncryptionCbcs {
    /**
     * Constructs a new <code>CommonEncryptionCbcs</code>.
     * Class for CommonEncryptionCbcs encryption scheme
     * @alias module:model/CommonEncryptionCbcs
     */
    constructor() { 
        
        CommonEncryptionCbcs.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CommonEncryptionCbcs</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CommonEncryptionCbcs} obj Optional instance to populate.
     * @return {module:model/CommonEncryptionCbcs} The populated <code>CommonEncryptionCbcs</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CommonEncryptionCbcs();

            if (data.hasOwnProperty('clearTracks')) {
                obj['clearTracks'] = ApiClient.convertToType(data['clearTracks'], [TrackSelection]);
            }
            if (data.hasOwnProperty('contentKeys')) {
                obj['contentKeys'] = StreamingPolicyContentKeys.constructFromObject(data['contentKeys']);
            }
            if (data.hasOwnProperty('drm')) {
                obj['drm'] = CbcsDrmConfiguration.constructFromObject(data['drm']);
            }
            if (data.hasOwnProperty('enabledProtocols')) {
                obj['enabledProtocols'] = EnabledProtocols.constructFromObject(data['enabledProtocols']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CommonEncryptionCbcs</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CommonEncryptionCbcs</code>.
     */
    static validateJSON(data) {
        if (data['clearTracks']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['clearTracks'])) {
                throw new Error("Expected the field `clearTracks` to be an array in the JSON data but got " + data['clearTracks']);
            }
            // validate the optional field `clearTracks` (array)
            for (const item of data['clearTracks']) {
                TrackSelection.validateJSON(item);
            };
        }
        // validate the optional field `contentKeys`
        if (data['contentKeys']) { // data not null
          StreamingPolicyContentKeys.validateJSON(data['contentKeys']);
        }
        // validate the optional field `drm`
        if (data['drm']) { // data not null
          CbcsDrmConfiguration.validateJSON(data['drm']);
        }
        // validate the optional field `enabledProtocols`
        if (data['enabledProtocols']) { // data not null
          EnabledProtocols.validateJSON(data['enabledProtocols']);
        }

        return true;
    }


}



/**
 * Representing which tracks should not be encrypted
 * @member {Array.<module:model/TrackSelection>} clearTracks
 */
CommonEncryptionCbcs.prototype['clearTracks'] = undefined;

/**
 * @member {module:model/StreamingPolicyContentKeys} contentKeys
 */
CommonEncryptionCbcs.prototype['contentKeys'] = undefined;

/**
 * @member {module:model/CbcsDrmConfiguration} drm
 */
CommonEncryptionCbcs.prototype['drm'] = undefined;

/**
 * @member {module:model/EnabledProtocols} enabledProtocols
 */
CommonEncryptionCbcs.prototype['enabledProtocols'] = undefined;






export default CommonEncryptionCbcs;

