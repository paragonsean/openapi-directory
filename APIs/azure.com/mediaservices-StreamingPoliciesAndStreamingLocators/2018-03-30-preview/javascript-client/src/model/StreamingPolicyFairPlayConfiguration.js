/**
 * Azure Media Services
 * This Swagger was generated by the API Framework.
 *
 * The version of the OpenAPI document: 2018-03-30-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The StreamingPolicyFairPlayConfiguration model module.
 * @module model/StreamingPolicyFairPlayConfiguration
 * @version 2018-03-30-preview
 */
class StreamingPolicyFairPlayConfiguration {
    /**
     * Constructs a new <code>StreamingPolicyFairPlayConfiguration</code>.
     * Class to specify configurations of FairPlay in Streaming Policy
     * @alias module:model/StreamingPolicyFairPlayConfiguration
     * @param allowPersistentLicense {Boolean} All license to be persistent or not
     */
    constructor(allowPersistentLicense) { 
        
        StreamingPolicyFairPlayConfiguration.initialize(this, allowPersistentLicense);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, allowPersistentLicense) { 
        obj['allowPersistentLicense'] = allowPersistentLicense;
    }

    /**
     * Constructs a <code>StreamingPolicyFairPlayConfiguration</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/StreamingPolicyFairPlayConfiguration} obj Optional instance to populate.
     * @return {module:model/StreamingPolicyFairPlayConfiguration} The populated <code>StreamingPolicyFairPlayConfiguration</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StreamingPolicyFairPlayConfiguration();

            if (data.hasOwnProperty('allowPersistentLicense')) {
                obj['allowPersistentLicense'] = ApiClient.convertToType(data['allowPersistentLicense'], 'Boolean');
            }
            if (data.hasOwnProperty('customLicenseAcquisitionUrlTemplate')) {
                obj['customLicenseAcquisitionUrlTemplate'] = ApiClient.convertToType(data['customLicenseAcquisitionUrlTemplate'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>StreamingPolicyFairPlayConfiguration</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>StreamingPolicyFairPlayConfiguration</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of StreamingPolicyFairPlayConfiguration.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['customLicenseAcquisitionUrlTemplate'] && !(typeof data['customLicenseAcquisitionUrlTemplate'] === 'string' || data['customLicenseAcquisitionUrlTemplate'] instanceof String)) {
            throw new Error("Expected the field `customLicenseAcquisitionUrlTemplate` to be a primitive type in the JSON string but got " + data['customLicenseAcquisitionUrlTemplate']);
        }

        return true;
    }


}

StreamingPolicyFairPlayConfiguration.RequiredProperties = ["allowPersistentLicense"];

/**
 * All license to be persistent or not
 * @member {Boolean} allowPersistentLicense
 */
StreamingPolicyFairPlayConfiguration.prototype['allowPersistentLicense'] = undefined;

/**
 * The template for a customer service to deliver keys to end users.  Not needed when using Azure Media Services for issuing keys.
 * @member {String} customLicenseAcquisitionUrlTemplate
 */
StreamingPolicyFairPlayConfiguration.prototype['customLicenseAcquisitionUrlTemplate'] = undefined;






export default StreamingPolicyFairPlayConfiguration;

