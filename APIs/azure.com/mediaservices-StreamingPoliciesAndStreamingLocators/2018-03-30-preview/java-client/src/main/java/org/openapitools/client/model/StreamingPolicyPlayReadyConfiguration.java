/*
 * Azure Media Services
 * This Swagger was generated by the API Framework.
 *
 * The version of the OpenAPI document: 2018-03-30-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Class to specify configurations of PlayReady in Streaming Policy
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:31:59.042062-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class StreamingPolicyPlayReadyConfiguration {
  public static final String SERIALIZED_NAME_CUSTOM_LICENSE_ACQUISITION_URL_TEMPLATE = "customLicenseAcquisitionUrlTemplate";
  @SerializedName(SERIALIZED_NAME_CUSTOM_LICENSE_ACQUISITION_URL_TEMPLATE)
  private String customLicenseAcquisitionUrlTemplate;

  public static final String SERIALIZED_NAME_PLAY_READY_CUSTOM_ATTRIBUTES = "playReadyCustomAttributes";
  @SerializedName(SERIALIZED_NAME_PLAY_READY_CUSTOM_ATTRIBUTES)
  private String playReadyCustomAttributes;

  public StreamingPolicyPlayReadyConfiguration() {
  }

  public StreamingPolicyPlayReadyConfiguration customLicenseAcquisitionUrlTemplate(String customLicenseAcquisitionUrlTemplate) {
    this.customLicenseAcquisitionUrlTemplate = customLicenseAcquisitionUrlTemplate;
    return this;
  }

  /**
   * The template for a customer service to deliver keys to end users.  Not needed when using Azure Media Services for issuing keys.
   * @return customLicenseAcquisitionUrlTemplate
   */
  @javax.annotation.Nullable
  public String getCustomLicenseAcquisitionUrlTemplate() {
    return customLicenseAcquisitionUrlTemplate;
  }

  public void setCustomLicenseAcquisitionUrlTemplate(String customLicenseAcquisitionUrlTemplate) {
    this.customLicenseAcquisitionUrlTemplate = customLicenseAcquisitionUrlTemplate;
  }


  public StreamingPolicyPlayReadyConfiguration playReadyCustomAttributes(String playReadyCustomAttributes) {
    this.playReadyCustomAttributes = playReadyCustomAttributes;
    return this;
  }

  /**
   * Custom attributes for PlayReady
   * @return playReadyCustomAttributes
   */
  @javax.annotation.Nullable
  public String getPlayReadyCustomAttributes() {
    return playReadyCustomAttributes;
  }

  public void setPlayReadyCustomAttributes(String playReadyCustomAttributes) {
    this.playReadyCustomAttributes = playReadyCustomAttributes;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StreamingPolicyPlayReadyConfiguration streamingPolicyPlayReadyConfiguration = (StreamingPolicyPlayReadyConfiguration) o;
    return Objects.equals(this.customLicenseAcquisitionUrlTemplate, streamingPolicyPlayReadyConfiguration.customLicenseAcquisitionUrlTemplate) &&
        Objects.equals(this.playReadyCustomAttributes, streamingPolicyPlayReadyConfiguration.playReadyCustomAttributes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(customLicenseAcquisitionUrlTemplate, playReadyCustomAttributes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StreamingPolicyPlayReadyConfiguration {\n");
    sb.append("    customLicenseAcquisitionUrlTemplate: ").append(toIndentedString(customLicenseAcquisitionUrlTemplate)).append("\n");
    sb.append("    playReadyCustomAttributes: ").append(toIndentedString(playReadyCustomAttributes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("customLicenseAcquisitionUrlTemplate");
    openapiFields.add("playReadyCustomAttributes");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to StreamingPolicyPlayReadyConfiguration
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!StreamingPolicyPlayReadyConfiguration.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in StreamingPolicyPlayReadyConfiguration is not found in the empty JSON string", StreamingPolicyPlayReadyConfiguration.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!StreamingPolicyPlayReadyConfiguration.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `StreamingPolicyPlayReadyConfiguration` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("customLicenseAcquisitionUrlTemplate") != null && !jsonObj.get("customLicenseAcquisitionUrlTemplate").isJsonNull()) && !jsonObj.get("customLicenseAcquisitionUrlTemplate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customLicenseAcquisitionUrlTemplate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customLicenseAcquisitionUrlTemplate").toString()));
      }
      if ((jsonObj.get("playReadyCustomAttributes") != null && !jsonObj.get("playReadyCustomAttributes").isJsonNull()) && !jsonObj.get("playReadyCustomAttributes").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `playReadyCustomAttributes` to be a primitive type in the JSON string but got `%s`", jsonObj.get("playReadyCustomAttributes").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!StreamingPolicyPlayReadyConfiguration.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'StreamingPolicyPlayReadyConfiguration' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<StreamingPolicyPlayReadyConfiguration> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(StreamingPolicyPlayReadyConfiguration.class));

       return (TypeAdapter<T>) new TypeAdapter<StreamingPolicyPlayReadyConfiguration>() {
           @Override
           public void write(JsonWriter out, StreamingPolicyPlayReadyConfiguration value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public StreamingPolicyPlayReadyConfiguration read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of StreamingPolicyPlayReadyConfiguration given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of StreamingPolicyPlayReadyConfiguration
   * @throws IOException if the JSON string is invalid with respect to StreamingPolicyPlayReadyConfiguration
   */
  public static StreamingPolicyPlayReadyConfiguration fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, StreamingPolicyPlayReadyConfiguration.class);
  }

  /**
   * Convert an instance of StreamingPolicyPlayReadyConfiguration to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

