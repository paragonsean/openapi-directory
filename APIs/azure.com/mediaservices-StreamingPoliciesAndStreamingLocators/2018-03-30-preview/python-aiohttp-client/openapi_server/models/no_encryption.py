# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.enabled_protocols import EnabledProtocols
from openapi_server import util


class NoEncryption(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, enabled_protocols: EnabledProtocols=None):
        """NoEncryption - a model defined in OpenAPI

        :param enabled_protocols: The enabled_protocols of this NoEncryption.
        """
        self.openapi_types = {
            'enabled_protocols': EnabledProtocols
        }

        self.attribute_map = {
            'enabled_protocols': 'enabledProtocols'
        }

        self._enabled_protocols = enabled_protocols

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NoEncryption':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NoEncryption of this NoEncryption.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def enabled_protocols(self):
        """Gets the enabled_protocols of this NoEncryption.


        :return: The enabled_protocols of this NoEncryption.
        :rtype: EnabledProtocols
        """
        return self._enabled_protocols

    @enabled_protocols.setter
    def enabled_protocols(self, enabled_protocols):
        """Sets the enabled_protocols of this NoEncryption.


        :param enabled_protocols: The enabled_protocols of this NoEncryption.
        :type enabled_protocols: EnabledProtocols
        """

        self._enabled_protocols = enabled_protocols
