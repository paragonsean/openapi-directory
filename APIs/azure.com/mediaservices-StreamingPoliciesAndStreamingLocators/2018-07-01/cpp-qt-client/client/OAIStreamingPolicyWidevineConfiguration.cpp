/**
 * Azure Media Services
 * This Swagger was generated by the API Framework.
 *
 * The version of the OpenAPI document: 2018-07-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIStreamingPolicyWidevineConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIStreamingPolicyWidevineConfiguration::OAIStreamingPolicyWidevineConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIStreamingPolicyWidevineConfiguration::OAIStreamingPolicyWidevineConfiguration() {
    this->initializeModel();
}

OAIStreamingPolicyWidevineConfiguration::~OAIStreamingPolicyWidevineConfiguration() {}

void OAIStreamingPolicyWidevineConfiguration::initializeModel() {

    m_custom_license_acquisition_url_template_isSet = false;
    m_custom_license_acquisition_url_template_isValid = false;
}

void OAIStreamingPolicyWidevineConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIStreamingPolicyWidevineConfiguration::fromJsonObject(QJsonObject json) {

    m_custom_license_acquisition_url_template_isValid = ::OpenAPI::fromJsonValue(m_custom_license_acquisition_url_template, json[QString("customLicenseAcquisitionUrlTemplate")]);
    m_custom_license_acquisition_url_template_isSet = !json[QString("customLicenseAcquisitionUrlTemplate")].isNull() && m_custom_license_acquisition_url_template_isValid;
}

QString OAIStreamingPolicyWidevineConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIStreamingPolicyWidevineConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_custom_license_acquisition_url_template_isSet) {
        obj.insert(QString("customLicenseAcquisitionUrlTemplate"), ::OpenAPI::toJsonValue(m_custom_license_acquisition_url_template));
    }
    return obj;
}

QString OAIStreamingPolicyWidevineConfiguration::getCustomLicenseAcquisitionUrlTemplate() const {
    return m_custom_license_acquisition_url_template;
}
void OAIStreamingPolicyWidevineConfiguration::setCustomLicenseAcquisitionUrlTemplate(const QString &custom_license_acquisition_url_template) {
    m_custom_license_acquisition_url_template = custom_license_acquisition_url_template;
    m_custom_license_acquisition_url_template_isSet = true;
}

bool OAIStreamingPolicyWidevineConfiguration::is_custom_license_acquisition_url_template_Set() const{
    return m_custom_license_acquisition_url_template_isSet;
}

bool OAIStreamingPolicyWidevineConfiguration::is_custom_license_acquisition_url_template_Valid() const{
    return m_custom_license_acquisition_url_template_isValid;
}

bool OAIStreamingPolicyWidevineConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_custom_license_acquisition_url_template_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIStreamingPolicyWidevineConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
