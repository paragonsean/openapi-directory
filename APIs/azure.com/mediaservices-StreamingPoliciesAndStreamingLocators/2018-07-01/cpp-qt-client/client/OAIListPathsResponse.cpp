/**
 * Azure Media Services
 * This Swagger was generated by the API Framework.
 *
 * The version of the OpenAPI document: 2018-07-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListPathsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListPathsResponse::OAIListPathsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListPathsResponse::OAIListPathsResponse() {
    this->initializeModel();
}

OAIListPathsResponse::~OAIListPathsResponse() {}

void OAIListPathsResponse::initializeModel() {

    m_download_paths_isSet = false;
    m_download_paths_isValid = false;

    m_streaming_paths_isSet = false;
    m_streaming_paths_isValid = false;
}

void OAIListPathsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListPathsResponse::fromJsonObject(QJsonObject json) {

    m_download_paths_isValid = ::OpenAPI::fromJsonValue(m_download_paths, json[QString("downloadPaths")]);
    m_download_paths_isSet = !json[QString("downloadPaths")].isNull() && m_download_paths_isValid;

    m_streaming_paths_isValid = ::OpenAPI::fromJsonValue(m_streaming_paths, json[QString("streamingPaths")]);
    m_streaming_paths_isSet = !json[QString("streamingPaths")].isNull() && m_streaming_paths_isValid;
}

QString OAIListPathsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListPathsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_download_paths.size() > 0) {
        obj.insert(QString("downloadPaths"), ::OpenAPI::toJsonValue(m_download_paths));
    }
    if (m_streaming_paths.size() > 0) {
        obj.insert(QString("streamingPaths"), ::OpenAPI::toJsonValue(m_streaming_paths));
    }
    return obj;
}

QList<QString> OAIListPathsResponse::getDownloadPaths() const {
    return m_download_paths;
}
void OAIListPathsResponse::setDownloadPaths(const QList<QString> &download_paths) {
    m_download_paths = download_paths;
    m_download_paths_isSet = true;
}

bool OAIListPathsResponse::is_download_paths_Set() const{
    return m_download_paths_isSet;
}

bool OAIListPathsResponse::is_download_paths_Valid() const{
    return m_download_paths_isValid;
}

QList<OAIStreamingPath> OAIListPathsResponse::getStreamingPaths() const {
    return m_streaming_paths;
}
void OAIListPathsResponse::setStreamingPaths(const QList<OAIStreamingPath> &streaming_paths) {
    m_streaming_paths = streaming_paths;
    m_streaming_paths_isSet = true;
}

bool OAIListPathsResponse::is_streaming_paths_Set() const{
    return m_streaming_paths_isSet;
}

bool OAIListPathsResponse::is_streaming_paths_Valid() const{
    return m_streaming_paths_isValid;
}

bool OAIListPathsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_download_paths.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_streaming_paths.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListPathsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
