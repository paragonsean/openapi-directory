/**
 * Azure Media Services
 * This Swagger was generated by the API Framework.
 *
 * The version of the OpenAPI document: 2018-07-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICencDrmConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICencDrmConfiguration::OAICencDrmConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICencDrmConfiguration::OAICencDrmConfiguration() {
    this->initializeModel();
}

OAICencDrmConfiguration::~OAICencDrmConfiguration() {}

void OAICencDrmConfiguration::initializeModel() {

    m_play_ready_isSet = false;
    m_play_ready_isValid = false;

    m_widevine_isSet = false;
    m_widevine_isValid = false;
}

void OAICencDrmConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICencDrmConfiguration::fromJsonObject(QJsonObject json) {

    m_play_ready_isValid = ::OpenAPI::fromJsonValue(m_play_ready, json[QString("playReady")]);
    m_play_ready_isSet = !json[QString("playReady")].isNull() && m_play_ready_isValid;

    m_widevine_isValid = ::OpenAPI::fromJsonValue(m_widevine, json[QString("widevine")]);
    m_widevine_isSet = !json[QString("widevine")].isNull() && m_widevine_isValid;
}

QString OAICencDrmConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICencDrmConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_play_ready.isSet()) {
        obj.insert(QString("playReady"), ::OpenAPI::toJsonValue(m_play_ready));
    }
    if (m_widevine.isSet()) {
        obj.insert(QString("widevine"), ::OpenAPI::toJsonValue(m_widevine));
    }
    return obj;
}

OAIStreamingPolicyPlayReadyConfiguration OAICencDrmConfiguration::getPlayReady() const {
    return m_play_ready;
}
void OAICencDrmConfiguration::setPlayReady(const OAIStreamingPolicyPlayReadyConfiguration &play_ready) {
    m_play_ready = play_ready;
    m_play_ready_isSet = true;
}

bool OAICencDrmConfiguration::is_play_ready_Set() const{
    return m_play_ready_isSet;
}

bool OAICencDrmConfiguration::is_play_ready_Valid() const{
    return m_play_ready_isValid;
}

OAIStreamingPolicyWidevineConfiguration OAICencDrmConfiguration::getWidevine() const {
    return m_widevine;
}
void OAICencDrmConfiguration::setWidevine(const OAIStreamingPolicyWidevineConfiguration &widevine) {
    m_widevine = widevine;
    m_widevine_isSet = true;
}

bool OAICencDrmConfiguration::is_widevine_Set() const{
    return m_widevine_isSet;
}

bool OAICencDrmConfiguration::is_widevine_Valid() const{
    return m_widevine_isValid;
}

bool OAICencDrmConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_play_ready.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_widevine.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICencDrmConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
