/**
 * Azure Media Services
 * This Swagger was generated by the API Framework.
 *
 * The version of the OpenAPI document: 2018-07-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The EnabledProtocols model module.
 * @module model/EnabledProtocols
 * @version 2018-07-01
 */
class EnabledProtocols {
    /**
     * Constructs a new <code>EnabledProtocols</code>.
     * Class to specify which protocols are enabled
     * @alias module:model/EnabledProtocols
     * @param dash {Boolean} Enable DASH protocol or not
     * @param download {Boolean} Enable Download protocol or not
     * @param hls {Boolean} Enable HLS protocol or not
     * @param smoothStreaming {Boolean} Enable SmoothStreaming protocol or not
     */
    constructor(dash, download, hls, smoothStreaming) { 
        
        EnabledProtocols.initialize(this, dash, download, hls, smoothStreaming);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, dash, download, hls, smoothStreaming) { 
        obj['dash'] = dash;
        obj['download'] = download;
        obj['hls'] = hls;
        obj['smoothStreaming'] = smoothStreaming;
    }

    /**
     * Constructs a <code>EnabledProtocols</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EnabledProtocols} obj Optional instance to populate.
     * @return {module:model/EnabledProtocols} The populated <code>EnabledProtocols</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EnabledProtocols();

            if (data.hasOwnProperty('dash')) {
                obj['dash'] = ApiClient.convertToType(data['dash'], 'Boolean');
            }
            if (data.hasOwnProperty('download')) {
                obj['download'] = ApiClient.convertToType(data['download'], 'Boolean');
            }
            if (data.hasOwnProperty('hls')) {
                obj['hls'] = ApiClient.convertToType(data['hls'], 'Boolean');
            }
            if (data.hasOwnProperty('smoothStreaming')) {
                obj['smoothStreaming'] = ApiClient.convertToType(data['smoothStreaming'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EnabledProtocols</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EnabledProtocols</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of EnabledProtocols.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

EnabledProtocols.RequiredProperties = ["dash", "download", "hls", "smoothStreaming"];

/**
 * Enable DASH protocol or not
 * @member {Boolean} dash
 */
EnabledProtocols.prototype['dash'] = undefined;

/**
 * Enable Download protocol or not
 * @member {Boolean} download
 */
EnabledProtocols.prototype['download'] = undefined;

/**
 * Enable HLS protocol or not
 * @member {Boolean} hls
 */
EnabledProtocols.prototype['hls'] = undefined;

/**
 * Enable SmoothStreaming protocol or not
 * @member {Boolean} smoothStreaming
 */
EnabledProtocols.prototype['smoothStreaming'] = undefined;






export default EnabledProtocols;

