# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.default_key import DefaultKey
from openapi_server.models.streaming_policy_content_key import StreamingPolicyContentKey
from openapi_server import util


class StreamingPolicyContentKeys(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, default_key: DefaultKey=None, key_to_track_mappings: List[StreamingPolicyContentKey]=None):
        """StreamingPolicyContentKeys - a model defined in OpenAPI

        :param default_key: The default_key of this StreamingPolicyContentKeys.
        :param key_to_track_mappings: The key_to_track_mappings of this StreamingPolicyContentKeys.
        """
        self.openapi_types = {
            'default_key': DefaultKey,
            'key_to_track_mappings': List[StreamingPolicyContentKey]
        }

        self.attribute_map = {
            'default_key': 'defaultKey',
            'key_to_track_mappings': 'keyToTrackMappings'
        }

        self._default_key = default_key
        self._key_to_track_mappings = key_to_track_mappings

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StreamingPolicyContentKeys':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StreamingPolicyContentKeys of this StreamingPolicyContentKeys.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def default_key(self):
        """Gets the default_key of this StreamingPolicyContentKeys.


        :return: The default_key of this StreamingPolicyContentKeys.
        :rtype: DefaultKey
        """
        return self._default_key

    @default_key.setter
    def default_key(self, default_key):
        """Sets the default_key of this StreamingPolicyContentKeys.


        :param default_key: The default_key of this StreamingPolicyContentKeys.
        :type default_key: DefaultKey
        """

        self._default_key = default_key

    @property
    def key_to_track_mappings(self):
        """Gets the key_to_track_mappings of this StreamingPolicyContentKeys.

        Representing tracks needs separate content key

        :return: The key_to_track_mappings of this StreamingPolicyContentKeys.
        :rtype: List[StreamingPolicyContentKey]
        """
        return self._key_to_track_mappings

    @key_to_track_mappings.setter
    def key_to_track_mappings(self, key_to_track_mappings):
        """Sets the key_to_track_mappings of this StreamingPolicyContentKeys.

        Representing tracks needs separate content key

        :param key_to_track_mappings: The key_to_track_mappings of this StreamingPolicyContentKeys.
        :type key_to_track_mappings: List[StreamingPolicyContentKey]
        """

        self._key_to_track_mappings = key_to_track_mappings
