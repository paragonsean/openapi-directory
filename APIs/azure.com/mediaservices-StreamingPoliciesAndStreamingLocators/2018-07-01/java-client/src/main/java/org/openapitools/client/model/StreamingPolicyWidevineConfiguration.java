/*
 * Azure Media Services
 * This Swagger was generated by the API Framework.
 *
 * The version of the OpenAPI document: 2018-07-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Class to specify configurations of Widevine in Streaming Policy
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:31:59.446924-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class StreamingPolicyWidevineConfiguration {
  public static final String SERIALIZED_NAME_CUSTOM_LICENSE_ACQUISITION_URL_TEMPLATE = "customLicenseAcquisitionUrlTemplate";
  @SerializedName(SERIALIZED_NAME_CUSTOM_LICENSE_ACQUISITION_URL_TEMPLATE)
  private String customLicenseAcquisitionUrlTemplate;

  public StreamingPolicyWidevineConfiguration() {
  }

  public StreamingPolicyWidevineConfiguration customLicenseAcquisitionUrlTemplate(String customLicenseAcquisitionUrlTemplate) {
    this.customLicenseAcquisitionUrlTemplate = customLicenseAcquisitionUrlTemplate;
    return this;
  }

  /**
   * Template for the URL of the custom service delivering licenses to end user players.  Not required when using Azure Media Services for issuing licenses.  The template supports replaceable tokens that the service will update at runtime with the value specific to the request.  The currently supported token values are {AlternativeMediaId}, which is replaced with the value of StreamingLocatorId.AlternativeMediaId, and {ContentKeyId}, which is replaced with the value of identifier of the key being requested.
   * @return customLicenseAcquisitionUrlTemplate
   */
  @javax.annotation.Nullable
  public String getCustomLicenseAcquisitionUrlTemplate() {
    return customLicenseAcquisitionUrlTemplate;
  }

  public void setCustomLicenseAcquisitionUrlTemplate(String customLicenseAcquisitionUrlTemplate) {
    this.customLicenseAcquisitionUrlTemplate = customLicenseAcquisitionUrlTemplate;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StreamingPolicyWidevineConfiguration streamingPolicyWidevineConfiguration = (StreamingPolicyWidevineConfiguration) o;
    return Objects.equals(this.customLicenseAcquisitionUrlTemplate, streamingPolicyWidevineConfiguration.customLicenseAcquisitionUrlTemplate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(customLicenseAcquisitionUrlTemplate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StreamingPolicyWidevineConfiguration {\n");
    sb.append("    customLicenseAcquisitionUrlTemplate: ").append(toIndentedString(customLicenseAcquisitionUrlTemplate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("customLicenseAcquisitionUrlTemplate");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to StreamingPolicyWidevineConfiguration
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!StreamingPolicyWidevineConfiguration.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in StreamingPolicyWidevineConfiguration is not found in the empty JSON string", StreamingPolicyWidevineConfiguration.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!StreamingPolicyWidevineConfiguration.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `StreamingPolicyWidevineConfiguration` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("customLicenseAcquisitionUrlTemplate") != null && !jsonObj.get("customLicenseAcquisitionUrlTemplate").isJsonNull()) && !jsonObj.get("customLicenseAcquisitionUrlTemplate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customLicenseAcquisitionUrlTemplate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customLicenseAcquisitionUrlTemplate").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!StreamingPolicyWidevineConfiguration.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'StreamingPolicyWidevineConfiguration' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<StreamingPolicyWidevineConfiguration> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(StreamingPolicyWidevineConfiguration.class));

       return (TypeAdapter<T>) new TypeAdapter<StreamingPolicyWidevineConfiguration>() {
           @Override
           public void write(JsonWriter out, StreamingPolicyWidevineConfiguration value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public StreamingPolicyWidevineConfiguration read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of StreamingPolicyWidevineConfiguration given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of StreamingPolicyWidevineConfiguration
   * @throws IOException if the JSON string is invalid with respect to StreamingPolicyWidevineConfiguration
   */
  public static StreamingPolicyWidevineConfiguration fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, StreamingPolicyWidevineConfiguration.class);
  }

  /**
   * Convert an instance of StreamingPolicyWidevineConfiguration to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

