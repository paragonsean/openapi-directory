# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CacheUpdateRequestProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, connection_string: str=None, description: str=None, resource_id: str=None):
        """CacheUpdateRequestProperties - a model defined in OpenAPI

        :param connection_string: The connection_string of this CacheUpdateRequestProperties.
        :param description: The description of this CacheUpdateRequestProperties.
        :param resource_id: The resource_id of this CacheUpdateRequestProperties.
        """
        self.openapi_types = {
            'connection_string': str,
            'description': str,
            'resource_id': str
        }

        self.attribute_map = {
            'connection_string': 'connectionString',
            'description': 'description',
            'resource_id': 'resourceId'
        }

        self._connection_string = connection_string
        self._description = description
        self._resource_id = resource_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CacheUpdateRequestProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Cache_Update_request_properties of this CacheUpdateRequestProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def connection_string(self):
        """Gets the connection_string of this CacheUpdateRequestProperties.

        Runtime connection string to cache

        :return: The connection_string of this CacheUpdateRequestProperties.
        :rtype: str
        """
        return self._connection_string

    @connection_string.setter
    def connection_string(self, connection_string):
        """Sets the connection_string of this CacheUpdateRequestProperties.

        Runtime connection string to cache

        :param connection_string: The connection_string of this CacheUpdateRequestProperties.
        :type connection_string: str
        """
        if connection_string is not None and len(connection_string) > 300:
            raise ValueError("Invalid value for `connection_string`, length must be less than or equal to `300`")

        self._connection_string = connection_string

    @property
    def description(self):
        """Gets the description of this CacheUpdateRequestProperties.

        Cache description

        :return: The description of this CacheUpdateRequestProperties.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this CacheUpdateRequestProperties.

        Cache description

        :param description: The description of this CacheUpdateRequestProperties.
        :type description: str
        """
        if description is not None and len(description) > 2000:
            raise ValueError("Invalid value for `description`, length must be less than or equal to `2000`")

        self._description = description

    @property
    def resource_id(self):
        """Gets the resource_id of this CacheUpdateRequestProperties.

        Original uri of entity in external system cache points to

        :return: The resource_id of this CacheUpdateRequestProperties.
        :rtype: str
        """
        return self._resource_id

    @resource_id.setter
    def resource_id(self, resource_id):
        """Sets the resource_id of this CacheUpdateRequestProperties.

        Original uri of entity in external system cache points to

        :param resource_id: The resource_id of this CacheUpdateRequestProperties.
        :type resource_id: str
        """
        if resource_id is not None and len(resource_id) > 2000:
            raise ValueError("Invalid value for `resource_id`, length must be less than or equal to `2000`")

        self._resource_id = resource_id
