/**
 * ApiManagementClient
 * Use these REST APIs for performing operations on Cache entity in your Azure API Management deployment. Azure API Management also allows for caching responses in an external Azure Cache for Redis. For more information refer to [External Redis Cache in ApiManagement](https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-cache-external).
 *
 * The version of the OpenAPI document: 2019-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import CacheGet200Response from './model/CacheGet200Response';
import CacheListByService200Response from './model/CacheListByService200Response';
import CacheListByService200ResponseValueInner from './model/CacheListByService200ResponseValueInner';
import CacheListByService200ResponseValueInnerProperties from './model/CacheListByService200ResponseValueInnerProperties';
import CacheListByServiceDefaultResponse from './model/CacheListByServiceDefaultResponse';
import CacheListByServiceDefaultResponseError from './model/CacheListByServiceDefaultResponseError';
import CacheListByServiceDefaultResponseErrorDetailsInner from './model/CacheListByServiceDefaultResponseErrorDetailsInner';
import CacheUpdateRequest from './model/CacheUpdateRequest';
import CacheUpdateRequestProperties from './model/CacheUpdateRequestProperties';
import CacheApi from './api/CacheApi';


/**
* Use these REST APIs for performing operations on Cache entity in your Azure API Management deployment. Azure API Management also allows for caching responses in an external Azure Cache for Redis. For more information refer to [External Redis Cache in ApiManagement](https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-cache-external)..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var ApiManagementClient = require('index'); // See note below*.
* var xxxSvc = new ApiManagementClient.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new ApiManagementClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new ApiManagementClient.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new ApiManagementClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2019-01-01
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The CacheGet200Response model constructor.
     * @property {module:model/CacheGet200Response}
     */
    CacheGet200Response,

    /**
     * The CacheListByService200Response model constructor.
     * @property {module:model/CacheListByService200Response}
     */
    CacheListByService200Response,

    /**
     * The CacheListByService200ResponseValueInner model constructor.
     * @property {module:model/CacheListByService200ResponseValueInner}
     */
    CacheListByService200ResponseValueInner,

    /**
     * The CacheListByService200ResponseValueInnerProperties model constructor.
     * @property {module:model/CacheListByService200ResponseValueInnerProperties}
     */
    CacheListByService200ResponseValueInnerProperties,

    /**
     * The CacheListByServiceDefaultResponse model constructor.
     * @property {module:model/CacheListByServiceDefaultResponse}
     */
    CacheListByServiceDefaultResponse,

    /**
     * The CacheListByServiceDefaultResponseError model constructor.
     * @property {module:model/CacheListByServiceDefaultResponseError}
     */
    CacheListByServiceDefaultResponseError,

    /**
     * The CacheListByServiceDefaultResponseErrorDetailsInner model constructor.
     * @property {module:model/CacheListByServiceDefaultResponseErrorDetailsInner}
     */
    CacheListByServiceDefaultResponseErrorDetailsInner,

    /**
     * The CacheUpdateRequest model constructor.
     * @property {module:model/CacheUpdateRequest}
     */
    CacheUpdateRequest,

    /**
     * The CacheUpdateRequestProperties model constructor.
     * @property {module:model/CacheUpdateRequestProperties}
     */
    CacheUpdateRequestProperties,

    /**
    * The CacheApi service constructor.
    * @property {module:api/CacheApi}
    */
    CacheApi
};
