/*
 * SqlManagementClient
 * The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.
 *
 * The version of the OpenAPI document: 2018-06-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.DatabaseTable;
import org.openapitools.client.model.DatabaseTableListResult;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DatabaseTablesApi
 */
@Disabled
public class DatabaseTablesApiTest {

    private final DatabaseTablesApi api = new DatabaseTablesApi();

    /**
     * Get database table
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void databaseTablesGetTest() throws ApiException {
        String resourceGroupName = null;
        String serverName = null;
        String databaseName = null;
        String schemaName = null;
        String tableName = null;
        String subscriptionId = null;
        String apiVersion = null;
        DatabaseTable response = api.databaseTablesGet(resourceGroupName, serverName, databaseName, schemaName, tableName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * List database tables
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void databaseTablesListBySchemaTest() throws ApiException {
        String resourceGroupName = null;
        String serverName = null;
        String databaseName = null;
        String schemaName = null;
        String subscriptionId = null;
        String apiVersion = null;
        String $filter = null;
        DatabaseTableListResult response = api.databaseTablesListBySchema(resourceGroupName, serverName, databaseName, schemaName, subscriptionId, apiVersion, $filter);
        // TODO: test validations
    }

}
