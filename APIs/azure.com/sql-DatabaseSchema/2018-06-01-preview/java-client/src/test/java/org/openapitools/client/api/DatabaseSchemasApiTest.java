/*
 * SqlManagementClient
 * The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.
 *
 * The version of the OpenAPI document: 2018-06-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.DatabaseSchema;
import org.openapitools.client.model.DatabaseSchemaListResult;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DatabaseSchemasApi
 */
@Disabled
public class DatabaseSchemasApiTest {

    private final DatabaseSchemasApi api = new DatabaseSchemasApi();

    /**
     * Get database schema
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void databaseSchemasGetTest() throws ApiException {
        String resourceGroupName = null;
        String serverName = null;
        String databaseName = null;
        String schemaName = null;
        String subscriptionId = null;
        String apiVersion = null;
        DatabaseSchema response = api.databaseSchemasGet(resourceGroupName, serverName, databaseName, schemaName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * List database schemas
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void databaseSchemasListByDatabaseTest() throws ApiException {
        String resourceGroupName = null;
        String serverName = null;
        String databaseName = null;
        String subscriptionId = null;
        String apiVersion = null;
        String $filter = null;
        DatabaseSchemaListResult response = api.databaseSchemasListByDatabase(resourceGroupName, serverName, databaseName, subscriptionId, apiVersion, $filter);
        // TODO: test validations
    }

}
