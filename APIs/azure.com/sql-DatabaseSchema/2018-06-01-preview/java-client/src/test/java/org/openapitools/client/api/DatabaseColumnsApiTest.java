/*
 * SqlManagementClient
 * The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.
 *
 * The version of the OpenAPI document: 2018-06-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.DatabaseColumn;
import org.openapitools.client.model.DatabaseColumnListResult;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DatabaseColumnsApi
 */
@Disabled
public class DatabaseColumnsApiTest {

    private final DatabaseColumnsApi api = new DatabaseColumnsApi();

    /**
     * Get database column
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void databaseColumnsGetTest() throws ApiException {
        String resourceGroupName = null;
        String serverName = null;
        String databaseName = null;
        String schemaName = null;
        String tableName = null;
        String columnName = null;
        String subscriptionId = null;
        String apiVersion = null;
        DatabaseColumn response = api.databaseColumnsGet(resourceGroupName, serverName, databaseName, schemaName, tableName, columnName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * List database columns
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void databaseColumnsListByTableTest() throws ApiException {
        String resourceGroupName = null;
        String serverName = null;
        String databaseName = null;
        String schemaName = null;
        String tableName = null;
        String subscriptionId = null;
        String apiVersion = null;
        String $filter = null;
        DatabaseColumnListResult response = api.databaseColumnsListByTable(resourceGroupName, serverName, databaseName, schemaName, tableName, subscriptionId, apiVersion, $filter);
        // TODO: test validations
    }

}
