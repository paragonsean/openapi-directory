/**
 * SqlManagementClient
 * The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.
 *
 * The version of the OpenAPI document: 2018-06-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDatabaseColumnProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDatabaseColumnProperties::OAIDatabaseColumnProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDatabaseColumnProperties::OAIDatabaseColumnProperties() {
    this->initializeModel();
}

OAIDatabaseColumnProperties::~OAIDatabaseColumnProperties() {}

void OAIDatabaseColumnProperties::initializeModel() {

    m_column_type_isSet = false;
    m_column_type_isValid = false;
}

void OAIDatabaseColumnProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDatabaseColumnProperties::fromJsonObject(QJsonObject json) {

    m_column_type_isValid = ::OpenAPI::fromJsonValue(m_column_type, json[QString("columnType")]);
    m_column_type_isSet = !json[QString("columnType")].isNull() && m_column_type_isValid;
}

QString OAIDatabaseColumnProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDatabaseColumnProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_column_type_isSet) {
        obj.insert(QString("columnType"), ::OpenAPI::toJsonValue(m_column_type));
    }
    return obj;
}

QString OAIDatabaseColumnProperties::getColumnType() const {
    return m_column_type;
}
void OAIDatabaseColumnProperties::setColumnType(const QString &column_type) {
    m_column_type = column_type;
    m_column_type_isSet = true;
}

bool OAIDatabaseColumnProperties::is_column_type_Set() const{
    return m_column_type_isSet;
}

bool OAIDatabaseColumnProperties::is_column_type_Valid() const{
    return m_column_type_isValid;
}

bool OAIDatabaseColumnProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_column_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDatabaseColumnProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
