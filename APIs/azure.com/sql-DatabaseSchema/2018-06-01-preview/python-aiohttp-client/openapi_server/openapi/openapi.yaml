openapi: 3.0.1
info:
  description: "The Azure SQL Database management API provides a RESTful set of web\
    \ APIs that interact with Azure SQL Database services to manage your databases.\
    \ The API enables users to create, retrieve, update, and delete databases, servers,\
    \ and other entities."
  title: SqlManagementClient
  version: 2018-06-01-preview
  x-apisguru-categories:
  - cloud
  x-logo:
    url: https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png
  x-origin:
  - format: swagger
    url: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/sql/resource-manager/Microsoft.Sql/preview/2018-06-01-preview/DatabaseSchema.json
    version: "2.0"
  x-providerName: azure.com
  x-serviceName: sql-DatabaseSchema
  x-tags:
  - Azure
  - Microsoft
servers:
- url: https://management.azure.com/
paths:
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/schemas
  : get:
      description: List database schemas
      operationId: database_schemas_list_by_database
      parameters:
      - description: The name of the resource group that contains the resource. You
          can obtain this value from the Azure Resource Manager API or the portal.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the server.
        in: path
        name: serverName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the database.
        in: path
        name: databaseName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: An OData filter expression that filters elements in the collection.
        in: query
        name: $filter
        schema:
          type: string
      - description: The subscription ID that identifies an Azure subscription.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The API version to use for the request.
        in: query
        name: api-version
        required: true
        schema:
          type: string
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseSchemaListResult'
          description: Successfully retrieved database schemas.
        default:
          content: {}
          description: |-
            *** Error Responses: ***

             * 404 SubscriptionDoesNotHaveServer - The requested server was not found

             * 404 SourceDatabaseNotFound - The source database does not exist.

             * 404 DatabaseDoesNotExist - User has specified a database name that does not exist on this server instance.

             * 404 InvalidDatabaseSchema - Schema is missing in database.

             * 404 InvalidDatabaseTable - Table is missing in database.

             * 404 InvalidDatabaseColumn - Column is missing in table.
      tags:
      - DatabaseSchemas
      x-ms-examples:
        List database schemas:
          parameters:
            api-version: 2018-06-01-preview
            databaseName: myDatabase
            resourceGroupName: myRG
            serverName: serverName
            subscriptionId: 00000000-1111-2222-3333-444444444444
          responses:
            "200":
              body:
                value:
                - id: /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/myRG/providers/Microsoft.Sql/servers/serverName/databases/myDatabase/schemas/dbo
                  name: dbo
                  type: Microsoft.Sql/servers/databases/schemas
                - id: /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/myRG/providers/Microsoft.Sql/servers/serverName/databases/myDatabase/schemas/schema2
                  name: schema2
                  type: Microsoft.Sql/servers/databases/schemas
      x-ms-odata: '#/definitions/DatabaseSchema'
      x-ms-pageable:
        nextLinkName: nextLink
      x-openapi-router-controller: openapi_server.controllers.database_schemas_controller
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/schemas/{schemaName}
  : get:
      description: Get database schema
      operationId: database_schemas_get
      parameters:
      - description: The name of the resource group that contains the resource. You
          can obtain this value from the Azure Resource Manager API or the portal.
        in: path
        name: resource_group_name
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the server.
        in: path
        name: server_name
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the database.
        in: path
        name: database_name
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the schema.
        in: path
        name: schemaName
        required: true
        schema:
          type: string
      - description: The subscription ID that identifies an Azure subscription.
        in: path
        name: subscription_id
        required: true
        schema:
          type: string
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The API version to use for the request.
        in: query
        name: api_version
        required: true
        schema:
          type: string
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseSchema'
          description: Successfully retrieved database schema.
        default:
          content: {}
          description: |-
            *** Error Responses: ***

             * 404 SubscriptionDoesNotHaveServer - The requested server was not found

             * 404 SourceDatabaseNotFound - The source database does not exist.

             * 404 DatabaseDoesNotExist - User has specified a database name that does not exist on this server instance.

             * 404 InvalidDatabaseSchema - Schema is missing in database.

             * 404 InvalidDatabaseTable - Table is missing in database.

             * 404 InvalidDatabaseColumn - Column is missing in table.
      tags:
      - DatabaseSchemas
      x-ms-examples:
        Get database schema:
          parameters:
            api-version: 2018-06-01-preview
            databaseName: myDatabase
            resourceGroupName: myRG
            schemaName: dbo
            serverName: serverName
            subscriptionId: 00000000-1111-2222-3333-444444444444
          responses:
            "200":
              body:
                id: /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/myRG/providers/Microsoft.Sql/servers/serverName/databases/myDatabase/schemas/dbo
                name: dbo
                type: Microsoft.Sql/servers/databases/schemas
      x-openapi-router-controller: openapi_server.controllers.database_schemas_controller
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/schemas/{schemaName}/tables
  : get:
      description: List database tables
      operationId: database_tables_list_by_schema
      parameters:
      - description: The name of the resource group that contains the resource. You
          can obtain this value from the Azure Resource Manager API or the portal.
        in: path
        name: resource_group_name
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the server.
        in: path
        name: server_name
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the database.
        in: path
        name: database_name
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the schema.
        in: path
        name: schemaName
        required: true
        schema:
          type: string
      - description: An OData filter expression that filters elements in the collection.
        in: query
        name: $filter
        schema:
          type: string
      - description: The subscription ID that identifies an Azure subscription.
        in: path
        name: subscription_id
        required: true
        schema:
          type: string
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The API version to use for the request.
        in: query
        name: api_version
        required: true
        schema:
          type: string
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTableListResult'
          description: Successfully retrieved database tables.
        default:
          content: {}
          description: |-
            *** Error Responses: ***

             * 404 SubscriptionDoesNotHaveServer - The requested server was not found

             * 404 SourceDatabaseNotFound - The source database does not exist.

             * 404 DatabaseDoesNotExist - User has specified a database name that does not exist on this server instance.

             * 404 InvalidDatabaseSchema - Schema is missing in database.

             * 404 InvalidDatabaseTable - Table is missing in database.

             * 404 InvalidDatabaseColumn - Column is missing in table.
      tags:
      - DatabaseTables
      x-ms-examples:
        List  database tables:
          parameters:
            api-version: 2018-06-01-preview
            databaseName: myDatabase
            resourceGroupName: myRG
            schemaName: dbo
            serverName: serverName
            subscriptionId: 00000000-1111-2222-3333-444444444444
          responses:
            "200":
              body:
                value:
                - id: /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/myRG/providers/Microsoft.Sql/servers/serverName/databases/myDatabase/schemas/dbo/tables/table1
                  name: table1
                  type: Microsoft.Sql/servers/databases/schemas/tables
                - id: /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/myRG/providers/Microsoft.Sql/servers/serverName/databases/myDatabase/schemas/dbo/tables/table2
                  name: table2
                  type: Microsoft.Sql/servers/databases/schemas/tables
      x-ms-odata: '#/definitions/DatabaseTable'
      x-ms-pageable:
        nextLinkName: nextLink
      x-openapi-router-controller: openapi_server.controllers.database_tables_controller
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/schemas/{schemaName}/tables/{tableName}
  : get:
      description: Get database table
      operationId: database_tables_get
      parameters:
      - description: The name of the resource group that contains the resource. You
          can obtain this value from the Azure Resource Manager API or the portal.
        in: path
        name: resource_group_name
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the server.
        in: path
        name: server_name
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the database.
        in: path
        name: database_name
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the schema.
        in: path
        name: schemaName
        required: true
        schema:
          type: string
      - description: The name of the table.
        in: path
        name: tableName
        required: true
        schema:
          type: string
      - description: The subscription ID that identifies an Azure subscription.
        in: path
        name: subscription_id
        required: true
        schema:
          type: string
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The API version to use for the request.
        in: query
        name: api_version
        required: true
        schema:
          type: string
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTable'
          description: Successfully retrieved database table.
        default:
          content: {}
          description: |-
            *** Error Responses: ***

             * 404 SubscriptionDoesNotHaveServer - The requested server was not found

             * 404 SourceDatabaseNotFound - The source database does not exist.

             * 404 DatabaseDoesNotExist - User has specified a database name that does not exist on this server instance.

             * 404 InvalidDatabaseSchema - Schema is missing in database.

             * 404 InvalidDatabaseTable - Table is missing in database.

             * 404 InvalidDatabaseColumn - Column is missing in table.
      tags:
      - DatabaseTables
      x-ms-examples:
        Get database table:
          parameters:
            api-version: 2018-06-01-preview
            databaseName: myDatabase
            resourceGroupName: myRG
            schemaName: dbo
            serverName: serverName
            subscriptionId: 00000000-1111-2222-3333-444444444444
            tableName: table1
          responses:
            "200":
              body:
                id: /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/myRG/providers/Microsoft.Sql/servers/serverName/databases/myDatabase/schemas/dbo/tables/table1
                name: table1
                type: Microsoft.Sql/servers/databases/schemas/tables
      x-openapi-router-controller: openapi_server.controllers.database_tables_controller
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/schemas/{schemaName}/tables/{tableName}/columns
  : get:
      description: List database columns
      operationId: database_columns_list_by_table
      parameters:
      - description: The name of the resource group that contains the resource. You
          can obtain this value from the Azure Resource Manager API or the portal.
        in: path
        name: resource_group_name
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the server.
        in: path
        name: server_name
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the database.
        in: path
        name: database_name
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the schema.
        in: path
        name: schemaName
        required: true
        schema:
          type: string
      - description: The name of the table.
        in: path
        name: tableName
        required: true
        schema:
          type: string
      - description: An OData filter expression that filters elements in the collection.
        in: query
        name: $filter
        schema:
          type: string
      - description: The subscription ID that identifies an Azure subscription.
        in: path
        name: subscription_id
        required: true
        schema:
          type: string
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The API version to use for the request.
        in: query
        name: api_version
        required: true
        schema:
          type: string
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseColumnListResult'
          description: Successfully retrieved database columns.
        default:
          content: {}
          description: |-
            *** Error Responses: ***

             * 404 SubscriptionDoesNotHaveServer - The requested server was not found

             * 404 SourceDatabaseNotFound - The source database does not exist.

             * 404 DatabaseDoesNotExist - User has specified a database name that does not exist on this server instance.

             * 404 InvalidDatabaseSchema - Schema is missing in database.

             * 404 InvalidDatabaseTable - Table is missing in database.

             * 404 InvalidDatabaseColumn - Column is missing in table.
      tags:
      - DatabaseColumns
      x-ms-examples:
        List database columns:
          parameters:
            api-version: 2018-06-01-preview
            databaseName: myDatabase
            resourceGroupName: myRG
            schemaName: dbo
            serverName: serverName
            subscriptionId: 00000000-1111-2222-3333-444444444444
            tableName: table1
          responses:
            "200":
              body:
                value:
                - id: /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/myRG/providers/Microsoft.Sql/servers/serverName/databases/myDatabase/schemas/dbo/tables/table1/columns/col1
                  name: col1
                  properties:
                    columnType: nvarchar
                  type: Microsoft.Sql/servers/databases/schemas/tables/columns
                - id: /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/myRG/providers/Microsoft.Sql/servers/serverName/databases/myDatabase/schemas/dbo/tables/table1/columns/col2
                  name: col2
                  properties:
                    columnType: bit
                  type: Microsoft.Sql/servers/databases/schemas/tables/columns
      x-ms-odata: '#/definitions/DatabaseColumn'
      x-ms-pageable:
        nextLinkName: nextLink
      x-openapi-router-controller: openapi_server.controllers.database_columns_controller
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/schemas/{schemaName}/tables/{tableName}/columns/{columnName}
  : get:
      description: Get database column
      operationId: database_columns_get
      parameters:
      - description: The name of the resource group that contains the resource. You
          can obtain this value from the Azure Resource Manager API or the portal.
        in: path
        name: resource_group_name
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the server.
        in: path
        name: server_name
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the database.
        in: path
        name: database_name
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the schema.
        in: path
        name: schemaName
        required: true
        schema:
          type: string
      - description: The name of the table.
        in: path
        name: tableName
        required: true
        schema:
          type: string
      - description: The name of the column.
        in: path
        name: columnName
        required: true
        schema:
          type: string
      - description: The subscription ID that identifies an Azure subscription.
        in: path
        name: subscription_id
        required: true
        schema:
          type: string
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The API version to use for the request.
        in: query
        name: api_version
        required: true
        schema:
          type: string
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseColumn'
          description: Successfully retrieved database column.
        default:
          content: {}
          description: |-
            *** Error Responses: ***

             * 404 SubscriptionDoesNotHaveServer - The requested server was not found

             * 404 SourceDatabaseNotFound - The source database does not exist.

             * 404 DatabaseDoesNotExist - User has specified a database name that does not exist on this server instance.

             * 404 InvalidDatabaseSchema - Schema is missing in database.

             * 404 InvalidDatabaseTable - Table is missing in database.

             * 404 InvalidDatabaseColumn - Column is missing in table.
      tags:
      - DatabaseColumns
      x-ms-examples:
        Get database column:
          parameters:
            api-version: 2018-06-01-preview
            columnName: column1
            databaseName: myDatabase
            resourceGroupName: myRG
            schemaName: dbo
            serverName: serverName
            subscriptionId: 00000000-1111-2222-3333-444444444444
            tableName: table1
          responses:
            "200":
              body:
                id: /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/myRG/providers/Microsoft.Sql/servers/serverName/databases/myDatabase/schemas/dbo/tables/table1/columns/column1
                name: column1
                properties:
                  columnType: bit
                type: Microsoft.Sql/servers/databases/schemas/tables/columns
      x-openapi-router-controller: openapi_server.controllers.database_columns_controller
components:
  parameters:
    ApiVersionParameter:
      description: The API version to use for the request.
      in: query
      name: api-version
      required: true
      schema:
        type: string
        x-ms-parameter-location: client
      x-ms-parameter-location: client
    DatabaseNameParameter:
      description: The name of the database.
      in: path
      name: databaseName
      required: true
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    ResourceGroupParameter:
      description: The name of the resource group that contains the resource. You
        can obtain this value from the Azure Resource Manager API or the portal.
      in: path
      name: resourceGroupName
      required: true
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    ServerNameParameter:
      description: The name of the server.
      in: path
      name: serverName
      required: true
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    SqlVirtualMachineContainerNameParameter:
      description: The name of the SqlVirtualMachineContainer.
      in: path
      name: sqlVirtualMachineContainerName
      required: true
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    SqlVirtualMachineInstanceNameParameter:
      description: The name of the SqlVirtualMachineInstance.
      in: path
      name: sqlVirtualMachineInstanceName
      required: true
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    SubscriptionIdParameter:
      description: The subscription ID that identifies an Azure subscription.
      in: path
      name: subscriptionId
      required: true
      schema:
        type: string
        x-ms-parameter-location: client
      x-ms-parameter-location: client
    VirtualClusterNameParameter:
      description: The name of the virtual cluster.
      in: path
      name: virtualClusterName
      required: true
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
  schemas:
    DatabaseColumn:
      allOf:
      - $ref: '#/components/schemas/ProxyResource'
      description: A database column resource.
      example:
        properties:
          columnType: image
      properties:
        properties:
          $ref: '#/components/schemas/DatabaseColumnProperties'
      title: DatabaseColumn
    DatabaseColumnListResult:
      description: A list of database columns.
      example:
        value:
        - properties:
            columnType: image
        - properties:
            columnType: image
        nextLink: nextLink
      properties:
        nextLink:
          description: Link to retrieve next page of results.
          readOnly: true
          title: nextLink
          type: string
        value:
          description: Array of results.
          items:
            $ref: '#/components/schemas/DatabaseColumn'
          readOnly: true
          title: value
          type: array
      title: DatabaseColumnListResult
      type: object
    DatabaseColumnProperties:
      description: Database column properties.
      example:
        columnType: image
      properties:
        columnType:
          description: The column data type.
          enum:
          - image
          - text
          - uniqueidentifier
          - date
          - time
          - datetime2
          - datetimeoffset
          - tinyint
          - smallint
          - int
          - smalldatetime
          - real
          - money
          - datetime
          - float
          - sql_variant
          - ntext
          - bit
          - decimal
          - numeric
          - smallmoney
          - bigint
          - hierarchyid
          - geometry
          - geography
          - varbinary
          - varchar
          - binary
          - char
          - timestamp
          - nvarchar
          - nchar
          - xml
          - sysname
          title: columnType
          type: string
          x-ms-enum:
            modelAsString: true
            name: ColumnDataType
      title: DatabaseColumnProperties
      type: object
    DatabaseSchema:
      allOf:
      - $ref: '#/components/schemas/ProxyResource'
      description: A database schema resource.
      example:
        name: name
        id: id
        type: type
      title: DatabaseSchema
    DatabaseSchemaListResult:
      description: A list of database schemas.
      example:
        value:
        - name: name
          id: id
          type: type
        - name: name
          id: id
          type: type
        nextLink: nextLink
      properties:
        nextLink:
          description: Link to retrieve next page of results.
          readOnly: true
          title: nextLink
          type: string
        value:
          description: Array of results.
          items:
            $ref: '#/components/schemas/DatabaseSchema'
          readOnly: true
          title: value
          type: array
      title: DatabaseSchemaListResult
      type: object
    DatabaseTable:
      allOf:
      - $ref: '#/components/schemas/ProxyResource'
      description: A database table resource.
      example:
        name: name
        id: id
        type: type
      title: DatabaseTable
    DatabaseTableListResult:
      description: A list of database tables.
      example:
        value:
        - name: name
          id: id
          type: type
        - name: name
          id: id
          type: type
        nextLink: nextLink
      properties:
        nextLink:
          description: Link to retrieve next page of results.
          readOnly: true
          title: nextLink
          type: string
        value:
          description: Array of results.
          items:
            $ref: '#/components/schemas/DatabaseTable'
          readOnly: true
          title: value
          type: array
      title: DatabaseTableListResult
      type: object
    ProxyResource:
      allOf:
      - $ref: '#/components/schemas/Resource'
      description: ARM proxy resource.
      title: ProxyResource
    Resource:
      description: ARM resource.
      properties:
        id:
          description: Resource ID.
          readOnly: true
          title: id
          type: string
        name:
          description: Resource name.
          readOnly: true
          title: name
          type: string
        type:
          description: Resource type.
          readOnly: true
          title: type
          type: string
      title: Resource
      type: object
      x-ms-azure-resource: true
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
      type: oauth2
      x-tokenInfoFunc: openapi_server.controllers.security_controller.info_from_azure_auth
      x-scopeValidateFunc: openapi_server.controllers.security_controller.validate_scope_azure_auth
x-original-swagger-version: "2.0"
