/**
 * ContainerRegistryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-05-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import GenerateCredentialsParameters from './model/GenerateCredentialsParameters';
import GenerateCredentialsResult from './model/GenerateCredentialsResult';
import ProxyResource from './model/ProxyResource';
import ScopeMap from './model/ScopeMap';
import ScopeMapListResult from './model/ScopeMapListResult';
import ScopeMapProperties from './model/ScopeMapProperties';
import ScopeMapPropertiesUpdateParameters from './model/ScopeMapPropertiesUpdateParameters';
import ScopeMapUpdateParameters from './model/ScopeMapUpdateParameters';
import Token from './model/Token';
import TokenCertificate from './model/TokenCertificate';
import TokenCredentialsProperties from './model/TokenCredentialsProperties';
import TokenListResult from './model/TokenListResult';
import TokenPassword from './model/TokenPassword';
import TokenProperties from './model/TokenProperties';
import TokenUpdateParameters from './model/TokenUpdateParameters';
import TokenUpdateProperties from './model/TokenUpdateProperties';
import RegistriesApi from './api/RegistriesApi';
import ScopeMapsApi from './api/ScopeMapsApi';
import TokensApi from './api/TokensApi';


/**
* JS API client generated by OpenAPI Generator.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var ContainerRegistryManagementClient = require('index'); // See note below*.
* var xxxSvc = new ContainerRegistryManagementClient.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new ContainerRegistryManagementClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new ContainerRegistryManagementClient.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new ContainerRegistryManagementClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2019-05-01-preview
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The GenerateCredentialsParameters model constructor.
     * @property {module:model/GenerateCredentialsParameters}
     */
    GenerateCredentialsParameters,

    /**
     * The GenerateCredentialsResult model constructor.
     * @property {module:model/GenerateCredentialsResult}
     */
    GenerateCredentialsResult,

    /**
     * The ProxyResource model constructor.
     * @property {module:model/ProxyResource}
     */
    ProxyResource,

    /**
     * The ScopeMap model constructor.
     * @property {module:model/ScopeMap}
     */
    ScopeMap,

    /**
     * The ScopeMapListResult model constructor.
     * @property {module:model/ScopeMapListResult}
     */
    ScopeMapListResult,

    /**
     * The ScopeMapProperties model constructor.
     * @property {module:model/ScopeMapProperties}
     */
    ScopeMapProperties,

    /**
     * The ScopeMapPropertiesUpdateParameters model constructor.
     * @property {module:model/ScopeMapPropertiesUpdateParameters}
     */
    ScopeMapPropertiesUpdateParameters,

    /**
     * The ScopeMapUpdateParameters model constructor.
     * @property {module:model/ScopeMapUpdateParameters}
     */
    ScopeMapUpdateParameters,

    /**
     * The Token model constructor.
     * @property {module:model/Token}
     */
    Token,

    /**
     * The TokenCertificate model constructor.
     * @property {module:model/TokenCertificate}
     */
    TokenCertificate,

    /**
     * The TokenCredentialsProperties model constructor.
     * @property {module:model/TokenCredentialsProperties}
     */
    TokenCredentialsProperties,

    /**
     * The TokenListResult model constructor.
     * @property {module:model/TokenListResult}
     */
    TokenListResult,

    /**
     * The TokenPassword model constructor.
     * @property {module:model/TokenPassword}
     */
    TokenPassword,

    /**
     * The TokenProperties model constructor.
     * @property {module:model/TokenProperties}
     */
    TokenProperties,

    /**
     * The TokenUpdateParameters model constructor.
     * @property {module:model/TokenUpdateParameters}
     */
    TokenUpdateParameters,

    /**
     * The TokenUpdateProperties model constructor.
     * @property {module:model/TokenUpdateProperties}
     */
    TokenUpdateProperties,

    /**
    * The RegistriesApi service constructor.
    * @property {module:api/RegistriesApi}
    */
    RegistriesApi,

    /**
    * The ScopeMapsApi service constructor.
    * @property {module:api/ScopeMapsApi}
    */
    ScopeMapsApi,

    /**
    * The TokensApi service constructor.
    * @property {module:api/TokensApi}
    */
    TokensApi
};
