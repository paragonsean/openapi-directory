# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.scope_map import ScopeMap
from openapi_server import util


class ScopeMapListResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, next_link: str=None, value: List[ScopeMap]=None):
        """ScopeMapListResult - a model defined in OpenAPI

        :param next_link: The next_link of this ScopeMapListResult.
        :param value: The value of this ScopeMapListResult.
        """
        self.openapi_types = {
            'next_link': str,
            'value': List[ScopeMap]
        }

        self.attribute_map = {
            'next_link': 'nextLink',
            'value': 'value'
        }

        self._next_link = next_link
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ScopeMapListResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ScopeMapListResult of this ScopeMapListResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def next_link(self):
        """Gets the next_link of this ScopeMapListResult.

        The URI that can be used to request the next list of scope maps.

        :return: The next_link of this ScopeMapListResult.
        :rtype: str
        """
        return self._next_link

    @next_link.setter
    def next_link(self, next_link):
        """Sets the next_link of this ScopeMapListResult.

        The URI that can be used to request the next list of scope maps.

        :param next_link: The next_link of this ScopeMapListResult.
        :type next_link: str
        """

        self._next_link = next_link

    @property
    def value(self):
        """Gets the value of this ScopeMapListResult.

        The list of scope maps. Since this list may be incomplete, the nextLink field should be used to request the next list of scope maps.

        :return: The value of this ScopeMapListResult.
        :rtype: List[ScopeMap]
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this ScopeMapListResult.

        The list of scope maps. Since this list may be incomplete, the nextLink field should be used to request the next list of scope maps.

        :param value: The value of this ScopeMapListResult.
        :type value: List[ScopeMap]
        """

        self._value = value
