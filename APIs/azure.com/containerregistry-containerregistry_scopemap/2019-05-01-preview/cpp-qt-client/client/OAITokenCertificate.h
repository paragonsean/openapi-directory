/**
 * ContainerRegistryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-05-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITokenCertificate.h
 *
 * The properties of a certificate used for authenticating a token.
 */

#ifndef OAITokenCertificate_H
#define OAITokenCertificate_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITokenCertificate : public OAIObject {
public:
    OAITokenCertificate();
    OAITokenCertificate(QString json);
    ~OAITokenCertificate() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getEncodedPemCertificate() const;
    void setEncodedPemCertificate(const QString &encoded_pem_certificate);
    bool is_encoded_pem_certificate_Set() const;
    bool is_encoded_pem_certificate_Valid() const;

    QDateTime getExpiry() const;
    void setExpiry(const QDateTime &expiry);
    bool is_expiry_Set() const;
    bool is_expiry_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getThumbprint() const;
    void setThumbprint(const QString &thumbprint);
    bool is_thumbprint_Set() const;
    bool is_thumbprint_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_encoded_pem_certificate;
    bool m_encoded_pem_certificate_isSet;
    bool m_encoded_pem_certificate_isValid;

    QDateTime m_expiry;
    bool m_expiry_isSet;
    bool m_expiry_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_thumbprint;
    bool m_thumbprint_isSet;
    bool m_thumbprint_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITokenCertificate)

#endif // OAITokenCertificate_H
