openapi: 3.0.1
info:
  title: ContainerRegistryManagementClient
  version: 2019-05-01-preview
  x-apisguru-categories:
  - cloud
  x-logo:
    url: https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png
  x-origin:
  - format: swagger
    url: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/containerregistry/resource-manager/Microsoft.ContainerRegistry/preview/2019-05-01-preview/containerregistry_scopemap.json
    version: "2.0"
  x-providerName: azure.com
  x-serviceName: containerregistry-containerregistry_scopemap
  x-tags:
  - Azure
  - Microsoft
servers:
- url: https://management.azure.com/
security:
- azure_auth:
  - user_impersonation
paths:
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/generateCredentials
  : post:
      description: Generate keys for a token of a specified container registry.
      operationId: Registries_GenerateCredentials
      parameters:
      - description: The client API version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The Microsoft Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: The name of the resource group to which the container registry
          belongs.
        in: path
        name: resourceGroupName
        required: true
        schema:
          minLength: 1
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the container registry.
        in: path
        name: registryName
        required: true
        schema:
          maxLength: 50
          minLength: 5
          pattern: "^[a-zA-Z0-9]*$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateCredentialsParameters'
        description: The parameters for generating credentials.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateCredentialsResult'
          description: The request was successful; the request was well-formed and
            received properly.
        "202":
          content: {}
          description: The request was successful; the operation will complete asynchronously.
      tags:
      - Registries
      x-ms-examples:
        RegistryGenerateCredentials:
          parameters:
            api-version: 2019-05-01-preview
            generateCredentialsParameters:
              expiry: 2020-12-31T15:59:59.0707808Z
              tokenId: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/tokens/myToken
            registryName: myRegistry
            resourceGroupName: myResourceGroup
            subscriptionId: 00000000-0000-0000-0000-000000000000
          responses:
            "200":
              body:
                passwords:
                - expiry: 2020-12-31T15:59:59.0707808Z
                  name: password1
                  value: "00000000000000000000000000000000"
                - expiry: 2020-12-31T15:59:59.0707808Z
                  name: password2
                  value: "00000000000000000000000000000000"
                username: myToken
            "202": {}
      x-ms-long-running-operation: true
      x-codegen-request-body-name: generateCredentialsParameters
      x-content-type: application/json
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/scopeMaps
  : get:
      description: Lists all the scope maps for the specified container registry.
      operationId: ScopeMaps_List
      parameters:
      - description: The client API version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The Microsoft Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: The name of the resource group to which the container registry
          belongs.
        in: path
        name: resourceGroupName
        required: true
        schema:
          minLength: 1
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the container registry.
        in: path
        name: registryName
        required: true
        schema:
          maxLength: 50
          minLength: 5
          pattern: "^[a-zA-Z0-9]*$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScopeMapListResult'
          description: The request was successful; the request was well-formed and
            received properly.
      tags:
      - ScopeMaps
      x-ms-examples:
        ScopeMapList:
          parameters:
            api-version: 2019-05-01-preview
            registryName: myRegistry
            resourceGroupName: myResourceGroup
            subscriptionId: 00000000-0000-0000-0000-000000000000
          responses:
            "200":
              body:
                value:
                - id: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/scopeMaps/myScopeMap
                  name: myScopeMap
                  properties:
                    actions:
                    - repositories/myrepository/contentWrite
                    - repositories/myrepository/delete
                    creationDate: 2017-03-01T23:14:37.0707808Z
                    provisioningState: Succeeded
                    type: IsUserDefined
                  type: Microsoft.ContainerRegistry/registries/scopeMaps
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/scopeMaps/{scopeMapName}
  : delete:
      description: Deletes a scope map from a container registry.
      operationId: ScopeMaps_Delete
      parameters:
      - description: The client API version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The Microsoft Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: The name of the resource group to which the container registry
          belongs.
        in: path
        name: resourceGroupName
        required: true
        schema:
          minLength: 1
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the container registry.
        in: path
        name: registryName
        required: true
        schema:
          maxLength: 50
          minLength: 5
          pattern: "^[a-zA-Z0-9]*$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the scope map.
        in: path
        name: scopeMapName
        required: true
        schema:
          maxLength: 50
          minLength: 5
          pattern: "^[a-zA-Z0-9-_]*$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content: {}
          description: The request was successful; the request was well-formed and
            received properly.
        "202":
          content: {}
          description: The request was successful; the operation will complete asynchronously.
        "204":
          content: {}
          description: The scopemap does not exist in the subscription.
      tags:
      - ScopeMaps
      x-ms-examples:
        ScopeMapDelete:
          parameters:
            api-version: 2019-05-01-preview
            registryName: myRegistry
            resourceGroupName: myResourceGroup
            scopeMapName: myScopeMap
            subscriptionId: 00000000-0000-0000-0000-000000000000
          responses:
            "200": {}
            "202": {}
            "204": {}
      x-ms-long-running-operation: true
      x-accepts:
      - application/json
    get:
      description: Gets the properties of the specified scope map.
      operationId: ScopeMaps_Get
      parameters:
      - description: The client API version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The Microsoft Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: The name of the resource group to which the container registry
          belongs.
        in: path
        name: resourceGroupName
        required: true
        schema:
          minLength: 1
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the container registry.
        in: path
        name: registryName
        required: true
        schema:
          maxLength: 50
          minLength: 5
          pattern: "^[a-zA-Z0-9]*$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the scope map.
        in: path
        name: scopeMapName
        required: true
        schema:
          maxLength: 50
          minLength: 5
          pattern: "^[a-zA-Z0-9-_]*$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScopeMap'
          description: The request was successful; the request was well-formed and
            received properly.
      tags:
      - ScopeMaps
      x-ms-examples:
        ScopeMapGet:
          parameters:
            api-version: 2019-05-01-preview
            registryName: myRegistry
            resourceGroupName: myResourceGroup
            scopeMapName: myScopeMap
            subscriptionId: 00000000-0000-0000-0000-000000000000
          responses:
            "200":
              body:
                id: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/scopeMaps/myScopeMap
                name: myScopeMap
                properties:
                  actions:
                  - repositories/myrepository/contentWrite
                  - repositories/myrepository/delete
                  creationDate: 2017-03-01T23:14:37.0707808Z
                  provisioningState: Succeeded
                  type: IsUserDefined
                type: Microsoft.ContainerRegistry/registries/scopeMaps
      x-accepts:
      - application/json
    patch:
      description: Updates a scope map with the specified parameters.
      operationId: ScopeMaps_Update
      parameters:
      - description: The client API version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The Microsoft Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: The name of the resource group to which the container registry
          belongs.
        in: path
        name: resourceGroupName
        required: true
        schema:
          minLength: 1
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the container registry.
        in: path
        name: registryName
        required: true
        schema:
          maxLength: 50
          minLength: 5
          pattern: "^[a-zA-Z0-9]*$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the scope map.
        in: path
        name: scopeMapName
        required: true
        schema:
          maxLength: 50
          minLength: 5
          pattern: "^[a-zA-Z0-9-_]*$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScopeMapUpdateParameters'
        description: The parameters for updating a scope map.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScopeMap'
          description: The request was successful; the request was well-formed and
            received properly.
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScopeMap'
          description: The request was successful; the operation will complete asynchronously.
      tags:
      - ScopeMaps
      x-ms-examples:
        ScopeMapUpdate:
          parameters:
            api-version: 2019-05-01-preview
            registryName: myRegistry
            resourceGroupName: myResourceGroup
            scopeMapName: myScopeMap
            scopeMapUpdateParameters:
              properties:
                actions:
                - repositories/myrepository/contentWrite
                - repositories/myrepository/contentRead
                description: Developer Scopes
            subscriptionId: 00000000-0000-0000-0000-000000000000
          responses:
            "200":
              body:
                id: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/scopeMaps/myScopeMap
                name: myScopeMap
                properties:
                  actions:
                  - repositories/myrepository/contentWrite
                  - repositories/myrepository/contentRead
                  creationDate: 2017-03-01T23:14:37.0707808Z
                  provisioningState: Succeeded
                  type: IsUserDefined
                type: Microsoft.ContainerRegistry/registries/scopeMaps
            "201":
              body:
                id: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/scopeMaps/myScopeMap
                name: myScopeMap
                properties:
                  actions:
                  - repositories/myrepository/contentWrite
                  - repositories/myrepository/contentRead
                  creationDate: 2017-03-01T23:14:37.0707808Z
                  provisioningState: Succeeded
                  type: IsUserDefined
                type: Microsoft.ContainerRegistry/registries/scopeMaps
      x-ms-long-running-operation: true
      x-codegen-request-body-name: scopeMapUpdateParameters
      x-content-type: application/json
      x-accepts:
      - application/json
    put:
      description: Creates a scope map for a container registry with the specified
        parameters.
      operationId: ScopeMaps_Create
      parameters:
      - description: The client API version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The Microsoft Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: The name of the resource group to which the container registry
          belongs.
        in: path
        name: resourceGroupName
        required: true
        schema:
          minLength: 1
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the container registry.
        in: path
        name: registryName
        required: true
        schema:
          maxLength: 50
          minLength: 5
          pattern: "^[a-zA-Z0-9]*$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the scope map.
        in: path
        name: scopeMapName
        required: true
        schema:
          maxLength: 50
          minLength: 5
          pattern: "^[a-zA-Z0-9-_]*$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScopeMap'
        description: The parameters for creating a scope map.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScopeMap'
          description: The request was successful; the request was well-formed and
            received properly.
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScopeMap'
          description: The request was successful; the operation will complete asynchronously.
      tags:
      - ScopeMaps
      x-ms-examples:
        ScopeMapCreate:
          parameters:
            api-version: 2019-05-01-preview
            registryName: myRegistry
            resourceGroupName: myResourceGroup
            scopeMapCreateParameters:
              properties:
                actions:
                - repositories/myrepository/contentWrite
                - repositories/myrepository/delete
                description: Developer Scopes
            scopeMapName: myScopeMap
            subscriptionId: 00000000-0000-0000-0000-000000000000
          responses:
            "200":
              body:
                id: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/scopeMaps/myScopeMap
                name: myScopeMap
                properties:
                  actions:
                  - repositories/myrepository/contentWrite
                  - repositories/myrepository/delete
                  creationDate: 2017-03-01T23:14:37.0707808Z
                  provisioningState: Succeeded
                  type: IsUserDefined
                type: Microsoft.ContainerRegistry/registries/scopeMaps
            "201":
              body:
                id: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/scopeMaps/myScopeMap
                name: myScopeMap
                properties:
                  actions:
                  - repositories/myrepository/contentWrite
                  - repositories/myrepository/delete
                  creationDate: 2017-03-01T23:14:37.0707808Z
                  provisioningState: Succeeded
                  type: IsUserDefined
                type: Microsoft.ContainerRegistry/registries/scopeMaps
      x-ms-long-running-operation: true
      x-codegen-request-body-name: scopeMapCreateParameters
      x-content-type: application/json
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/tokens
  : get:
      description: Lists all the tokens for the specified container registry.
      operationId: Tokens_List
      parameters:
      - description: The client API version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The Microsoft Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: The name of the resource group to which the container registry
          belongs.
        in: path
        name: resourceGroupName
        required: true
        schema:
          minLength: 1
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the container registry.
        in: path
        name: registryName
        required: true
        schema:
          maxLength: 50
          minLength: 5
          pattern: "^[a-zA-Z0-9]*$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenListResult'
          description: The request was successful; the request was well-formed and
            received properly.
      tags:
      - Tokens
      x-ms-examples:
        TokenList:
          parameters:
            api-version: 2019-05-01-preview
            registryName: myRegistry
            resourceGroupName: myResourceGroup
            subscriptionId: 00000000-0000-0000-0000-000000000000
          responses:
            "200":
              body:
                value:
                - id: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/tokens/myToken
                  name: myToken
                  properties:
                    creationDate: 2017-03-01T23:14:37.0707808Z
                    provisioningState: Succeeded
                    scopeMapId: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/scopeMaps/myScopeMap
                    status: enabled
                  type: Microsoft.ContainerRegistry/registries/tokens
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/tokens/{tokenName}
  : delete:
      description: Deletes a token from a container registry.
      operationId: Tokens_Delete
      parameters:
      - description: The client API version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The Microsoft Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: The name of the resource group to which the container registry
          belongs.
        in: path
        name: resourceGroupName
        required: true
        schema:
          minLength: 1
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the container registry.
        in: path
        name: registryName
        required: true
        schema:
          maxLength: 50
          minLength: 5
          pattern: "^[a-zA-Z0-9]*$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the token.
        in: path
        name: tokenName
        required: true
        schema:
          maxLength: 50
          minLength: 5
          pattern: "^[a-zA-Z0-9-]*$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content: {}
          description: The request was successful; the request was well-formed and
            received properly.
        "202":
          content: {}
          description: The request was successful; the operation will complete asynchronously.
        "204":
          content: {}
          description: The token does not exist in the subscription.
      tags:
      - Tokens
      x-ms-examples:
        TokenDelete:
          parameters:
            api-version: 2019-05-01-preview
            registryName: myRegistry
            resourceGroupName: myResourceGroup
            subscriptionId: 00000000-0000-0000-0000-000000000000
            tokenName: myToken
          responses:
            "200": {}
            "202": {}
            "204": {}
      x-ms-long-running-operation: true
      x-accepts:
      - application/json
    get:
      description: Gets the properties of the specified token.
      operationId: Tokens_Get
      parameters:
      - description: The client API version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The Microsoft Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: The name of the resource group to which the container registry
          belongs.
        in: path
        name: resourceGroupName
        required: true
        schema:
          minLength: 1
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the container registry.
        in: path
        name: registryName
        required: true
        schema:
          maxLength: 50
          minLength: 5
          pattern: "^[a-zA-Z0-9]*$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the token.
        in: path
        name: tokenName
        required: true
        schema:
          maxLength: 50
          minLength: 5
          pattern: "^[a-zA-Z0-9-]*$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: The request was successful; the request was well-formed and
            received properly.
      tags:
      - Tokens
      x-ms-examples:
        TokenGet:
          parameters:
            api-version: 2019-05-01-preview
            registryName: myRegistry
            resourceGroupName: myResourceGroup
            subscriptionId: 00000000-0000-0000-0000-000000000000
            tokenName: myToken
          responses:
            "200":
              body:
                id: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/tokens/myToken
                name: myToken
                properties:
                  creationDate: 2017-03-01T23:14:37.0707808Z
                  provisioningState: Succeeded
                  scopeMapId: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/scopeMaps/myScopeMap
                  status: enabled
                type: Microsoft.ContainerRegistry/registries/tokens
      x-accepts:
      - application/json
    patch:
      description: Updates a token with the specified parameters.
      operationId: Tokens_Update
      parameters:
      - description: The client API version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The Microsoft Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: The name of the resource group to which the container registry
          belongs.
        in: path
        name: resourceGroupName
        required: true
        schema:
          minLength: 1
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the container registry.
        in: path
        name: registryName
        required: true
        schema:
          maxLength: 50
          minLength: 5
          pattern: "^[a-zA-Z0-9]*$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the token.
        in: path
        name: tokenName
        required: true
        schema:
          maxLength: 50
          minLength: 5
          pattern: "^[a-zA-Z0-9-]*$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenUpdateParameters'
        description: The parameters for updating a token.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: The request was successful; the request was well-formed and
            received properly.
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: The request was successful; the operation will complete asynchronously.
      tags:
      - Tokens
      x-ms-examples:
        TokenUpdate:
          parameters:
            api-version: 2019-05-01-preview
            registryName: myRegistry
            resourceGroupName: myResourceGroup
            subscriptionId: 00000000-0000-0000-0000-000000000000
            tokenName: myToken
            tokenUpdateParameters:
              properties:
                credentials:
                  certificates:
                  - encodedPemCertificate: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUc3akNDQk5hZ0F3SUJBZ0lURmdBQlR3UVpyZGdmdmhxdzBnQUFBQUZQQkRBTkJna3Foa2lHOXcwQkFRc0YKQURDQml6RUxNQWtHQTFVRUJoTUNWVk14RXpBUkJnTlZCQWdUQ2xkaGMyaHBibWQwYjI0eEVEQU9CZ05WQkFjVApCMUpsWkcxdmJtUXhIakFjQmdOVkJBb1RGVTFwWTNKdmMyOW1kQ0JEYjNKd2IzSmhkR2x2YmpFVk1CTUdBMVVFCkN4TU1UV2xqY205emIyWjBJRWxVTVI0d0hBWURWUVFERXhWTmFXTnliM052Wm5RZ1NWUWdWRXhUSUVOQklEUXcKSGhjTk1UZ3dOREV5TWpJek1qUTRXaGNOTWpBd05ERXlNakl6TWpRNFdqQTVNVGN3TlFZRFZRUURFeTV6WlhKMgphV05sWTJ4cFpXNTBZMlZ5ZEMxd1lYSjBibVZ5TG0xaGJtRm5aVzFsYm5RdVlYcDFjbVV1WTI5dE1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTBSYjdJcHpxMmR4emhhbVpyS1ZDakMzeTQyYlYKUnNIY2pCUTFuSDBHZ1puUDhXeDZDSE1mWThybkVJQzRLeVRRYkJXVzhnNXlmc3NSQ0ZXbFpxYjR6SkRXS0pmTgpGSmNMUm9LNnhwTktZYVZVTkVlT25IdUxHYTM0ZlA0VjBFRjZybzdvbkRLME5zanhjY1dZVzRNVXVzc0xrQS94CkUrM2RwU1REdk1KcjJoWUpsVnFDcVR6blQvbmZaVUZzQUVEQnp5MUpOOHZiZDlIR2czc2Myd0x4dk95cFJOc0gKT1V3V2pmN2xzWWZleEVlcWkzY29EeHc2alpLVWEyVkdsUnBpTkowMjhBQitYSi9TU1FVNVBsd0JBbU9TT3ovRApGY0NKdGpPZlBqU1NKckFIQVV3SHU3RzlSV05JTFBwYU9zQ1J5eitETE5zNGpvNlEvUUg4d1lManJRSURBUUFCCm80SUNtakNDQXBZd0N3WURWUjBQQkFRREFnU3dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01DQmdnckJnRUYKQlFjREFUQWRCZ05WSFE0RUZnUVVlbEdkVVJrZzJoSFFOWEQ4WUc4L3drdjJVT0F3SHdZRFZSMGpCQmd3Rm9BVQplbnVNd2Mvbm9Nb2MxR3Y2KytFend3OGFvcDB3Z2F3R0ExVWRId1NCcERDQm9UQ0JucUNCbTZDQm1JWkxhSFIwCmNEb3ZMMjF6WTNKc0xtMXBZM0p2YzI5bWRDNWpiMjB2Y0d0cEwyMXpZMjl5Y0M5amNtd3ZUV2xqY205emIyWjAKSlRJd1NWUWxNakJVVEZNbE1qQkRRU1V5TURRdVkzSnNoa2xvZEhSd09pOHZZM0pzTG0xcFkzSnZjMjltZEM1agpiMjB2Y0d0cEwyMXpZMjl5Y0M5amNtd3ZUV2xqY205emIyWjBKVEl3U1ZRbE1qQlVURk1sTWpCRFFTVXlNRFF1ClkzSnNNSUdGQmdnckJnRUZCUWNCQVFSNU1IY3dVUVlJS3dZQkJRVUhNQUtHUldoMGRIQTZMeTkzZDNjdWJXbGoKY205emIyWjBMbU52YlM5d2Eya3ZiWE5qYjNKd0wwMXBZM0p2YzI5bWRDVXlNRWxVSlRJd1ZFeFRKVEl3UTBFbApNakEwTG1OeWREQWlCZ2dyQmdFRkJRY3dBWVlXYUhSMGNEb3ZMMjlqYzNBdWJYTnZZM053TG1OdmJUQStCZ2tyCkJnRUVBWUkzRlFjRU1UQXZCaWNyQmdFRUFZSTNGUWlIMm9aMWcrN1pBWUxKaFJ1QnRaNWhoZlRyWUlGZGhOTGYKUW9Mbmszb0NBV1FDQVIwd1RRWURWUjBnQkVZd1JEQkNCZ2tyQmdFRUFZSTNLZ0V3TlRBekJnZ3JCZ0VGQlFjQwpBUlluYUhSMGNEb3ZMM2QzZHk1dGFXTnliM052Wm5RdVkyOXRMM0JyYVM5dGMyTnZjbkF2WTNCek1DY0dDU3NHCkFRUUJnamNWQ2dRYU1CZ3dDZ1lJS3dZQkJRVUhBd0l3Q2dZSUt3WUJCUVVIQXdFd09RWURWUjBSQkRJd01JSXUKYzJWeWRtbGpaV05zYVdWdWRHTmxjblF0Y0dGeWRHNWxjaTV0WVc1aFoyVnRaVzUwTG1GNmRYSmxMbU52YlRBTgpCZ2txaGtpRzl3MEJBUXNGQUFPQ0FnRUFIVXIzbk1vdUI5WWdDUlRWYndUTllIS2RkWGJkSW1GUXNDYys4T1g1CjE5c0N6dFFSR05iSXEwVW1Ba01MbFVvWTIxckh4ZXdxU2hWczFhL2RwaFh5Tk1pcUdaU2QzU1BtYzZscitqUFQKNXVEREs0MUlWeXN0K2VUNlpyazFvcCtMVmdkeS9EU2lyNzVqcWZFY016bS82bU8rNnFNeWRLTWtVYmM5K3JHVwphUkpUcjRWUUdIRmEwNEIwZVZpNUd4MG9pL2RpZDNSaXg2aXJMMjFJSGEwYjN6c1hzZHpHU0R2K3hqL2Q2S0l4Ckdrd2FhYmZvU1NoQnFqaFNlQ0VyZXFlb1RpYjljdGw0MGRVdUp3THl4bjhHS2N6K3AvMEJUOEIxU3lYK01OQ2wKY0pkMjVtMjhLajY2TGUxOEVyeFlJYXZJVGVGa3Y2eGZjdkEvcHladDdPaU41QTlGQk1IUmpQK1kyZ2tvdjMrcQpISFRUZG4xNnlRajduNit3YlFHNGVleXc0YisyQkRLcUxNVFU2ZmlSQ3ZPM2FPZVBLSFVNN3R4b1FidWl6Z3NzCkNiMzl3QnJOTEZsMkJLQ1RkSCtkSU9oZVJiSkZvbmlwOGRPOUVFZWdSSG9lQW54ZUlYTFBrdXMzTzEvZjRhNkIKWHQ3RG5BUm8xSzJmeEp3VXRaU2MvR3dFSjU5NzlnRXlEa3pDZEVsLzdpWE9QZXVjTXhlM2xVM2pweUtsNERUaApjSkJqQytqNGpLWTFrK1U4b040aGdqYnJISUx6Vnd2eU15OU5KS290U3BMSjQxeHdPOHlGangxalFTT3Bxc0N1ClFhUFUvTjhSZ0hxWjBGTkFzS3dNUmZ6WmdXanRCNzRzYUVEdk5jVmNuNFhCQnFNSG0ydHo2Uzk3d3kxZGt0cTgKSE5BPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
                    name: certificate1
                scopeMapId: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/scopeMaps/myNewScopeMap
          responses:
            "200":
              body:
                id: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/tokens/myToken
                name: myToken
                properties:
                  creationDate: 2017-03-01T23:14:37.0707808Z
                  credentials:
                    certificates:
                    - encodedPemCertificate: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUc3akNDQk5hZ0F3SUJBZ0lURmdBQlR3UVpyZGdmdmhxdzBnQUFBQUZQQkRBTkJna3Foa2lHOXcwQkFRc0YKQURDQml6RUxNQWtHQTFVRUJoTUNWVk14RXpBUkJnTlZCQWdUQ2xkaGMyaHBibWQwYjI0eEVEQU9CZ05WQkFjVApCMUpsWkcxdmJtUXhIakFjQmdOVkJBb1RGVTFwWTNKdmMyOW1kQ0JEYjNKd2IzSmhkR2x2YmpFVk1CTUdBMVVFCkN4TU1UV2xqY205emIyWjBJRWxVTVI0d0hBWURWUVFERXhWTmFXTnliM052Wm5RZ1NWUWdWRXhUSUVOQklEUXcKSGhjTk1UZ3dOREV5TWpJek1qUTRXaGNOTWpBd05ERXlNakl6TWpRNFdqQTVNVGN3TlFZRFZRUURFeTV6WlhKMgphV05sWTJ4cFpXNTBZMlZ5ZEMxd1lYSjBibVZ5TG0xaGJtRm5aVzFsYm5RdVlYcDFjbVV1WTI5dE1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTBSYjdJcHpxMmR4emhhbVpyS1ZDakMzeTQyYlYKUnNIY2pCUTFuSDBHZ1puUDhXeDZDSE1mWThybkVJQzRLeVRRYkJXVzhnNXlmc3NSQ0ZXbFpxYjR6SkRXS0pmTgpGSmNMUm9LNnhwTktZYVZVTkVlT25IdUxHYTM0ZlA0VjBFRjZybzdvbkRLME5zanhjY1dZVzRNVXVzc0xrQS94CkUrM2RwU1REdk1KcjJoWUpsVnFDcVR6blQvbmZaVUZzQUVEQnp5MUpOOHZiZDlIR2czc2Myd0x4dk95cFJOc0gKT1V3V2pmN2xzWWZleEVlcWkzY29EeHc2alpLVWEyVkdsUnBpTkowMjhBQitYSi9TU1FVNVBsd0JBbU9TT3ovRApGY0NKdGpPZlBqU1NKckFIQVV3SHU3RzlSV05JTFBwYU9zQ1J5eitETE5zNGpvNlEvUUg4d1lManJRSURBUUFCCm80SUNtakNDQXBZd0N3WURWUjBQQkFRREFnU3dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01DQmdnckJnRUYKQlFjREFUQWRCZ05WSFE0RUZnUVVlbEdkVVJrZzJoSFFOWEQ4WUc4L3drdjJVT0F3SHdZRFZSMGpCQmd3Rm9BVQplbnVNd2Mvbm9Nb2MxR3Y2KytFend3OGFvcDB3Z2F3R0ExVWRId1NCcERDQm9UQ0JucUNCbTZDQm1JWkxhSFIwCmNEb3ZMMjF6WTNKc0xtMXBZM0p2YzI5bWRDNWpiMjB2Y0d0cEwyMXpZMjl5Y0M5amNtd3ZUV2xqY205emIyWjAKSlRJd1NWUWxNakJVVEZNbE1qQkRRU1V5TURRdVkzSnNoa2xvZEhSd09pOHZZM0pzTG0xcFkzSnZjMjltZEM1agpiMjB2Y0d0cEwyMXpZMjl5Y0M5amNtd3ZUV2xqY205emIyWjBKVEl3U1ZRbE1qQlVURk1sTWpCRFFTVXlNRFF1ClkzSnNNSUdGQmdnckJnRUZCUWNCQVFSNU1IY3dVUVlJS3dZQkJRVUhNQUtHUldoMGRIQTZMeTkzZDNjdWJXbGoKY205emIyWjBMbU52YlM5d2Eya3ZiWE5qYjNKd0wwMXBZM0p2YzI5bWRDVXlNRWxVSlRJd1ZFeFRKVEl3UTBFbApNakEwTG1OeWREQWlCZ2dyQmdFRkJRY3dBWVlXYUhSMGNEb3ZMMjlqYzNBdWJYTnZZM053TG1OdmJUQStCZ2tyCkJnRUVBWUkzRlFjRU1UQXZCaWNyQmdFRUFZSTNGUWlIMm9aMWcrN1pBWUxKaFJ1QnRaNWhoZlRyWUlGZGhOTGYKUW9Mbmszb0NBV1FDQVIwd1RRWURWUjBnQkVZd1JEQkNCZ2tyQmdFRUFZSTNLZ0V3TlRBekJnZ3JCZ0VGQlFjQwpBUlluYUhSMGNEb3ZMM2QzZHk1dGFXTnliM052Wm5RdVkyOXRMM0JyYVM5dGMyTnZjbkF2WTNCek1DY0dDU3NHCkFRUUJnamNWQ2dRYU1CZ3dDZ1lJS3dZQkJRVUhBd0l3Q2dZSUt3WUJCUVVIQXdFd09RWURWUjBSQkRJd01JSXUKYzJWeWRtbGpaV05zYVdWdWRHTmxjblF0Y0dGeWRHNWxjaTV0WVc1aFoyVnRaVzUwTG1GNmRYSmxMbU52YlRBTgpCZ2txaGtpRzl3MEJBUXNGQUFPQ0FnRUFIVXIzbk1vdUI5WWdDUlRWYndUTllIS2RkWGJkSW1GUXNDYys4T1g1CjE5c0N6dFFSR05iSXEwVW1Ba01MbFVvWTIxckh4ZXdxU2hWczFhL2RwaFh5Tk1pcUdaU2QzU1BtYzZscitqUFQKNXVEREs0MUlWeXN0K2VUNlpyazFvcCtMVmdkeS9EU2lyNzVqcWZFY016bS82bU8rNnFNeWRLTWtVYmM5K3JHVwphUkpUcjRWUUdIRmEwNEIwZVZpNUd4MG9pL2RpZDNSaXg2aXJMMjFJSGEwYjN6c1hzZHpHU0R2K3hqL2Q2S0l4Ckdrd2FhYmZvU1NoQnFqaFNlQ0VyZXFlb1RpYjljdGw0MGRVdUp3THl4bjhHS2N6K3AvMEJUOEIxU3lYK01OQ2wKY0pkMjVtMjhLajY2TGUxOEVyeFlJYXZJVGVGa3Y2eGZjdkEvcHladDdPaU41QTlGQk1IUmpQK1kyZ2tvdjMrcQpISFRUZG4xNnlRajduNit3YlFHNGVleXc0YisyQkRLcUxNVFU2ZmlSQ3ZPM2FPZVBLSFVNN3R4b1FidWl6Z3NzCkNiMzl3QnJOTEZsMkJLQ1RkSCtkSU9oZVJiSkZvbmlwOGRPOUVFZWdSSG9lQW54ZUlYTFBrdXMzTzEvZjRhNkIKWHQ3RG5BUm8xSzJmeEp3VXRaU2MvR3dFSjU5NzlnRXlEa3pDZEVsLzdpWE9QZXVjTXhlM2xVM2pweUtsNERUaApjSkJqQytqNGpLWTFrK1U4b040aGdqYnJISUx6Vnd2eU15OU5KS290U3BMSjQxeHdPOHlGangxalFTT3Bxc0N1ClFhUFUvTjhSZ0hxWjBGTkFzS3dNUmZ6WmdXanRCNzRzYUVEdk5jVmNuNFhCQnFNSG0ydHo2Uzk3d3kxZGt0cTgKSE5BPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
                      name: certificate1
                  provisioningState: Succeeded
                  scopeMapId: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/scopeMaps/myNewScopeMap
                  status: enabled
                type: Microsoft.ContainerRegistry/registries/tokens
            "201":
              body:
                id: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/tokens/myToken
                name: myToken
                properties:
                  creationDate: 2017-03-01T23:14:37.0707808Z
                  credentials:
                    certificates:
                    - encodedPemCertificate: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUc3akNDQk5hZ0F3SUJBZ0lURmdBQlR3UVpyZGdmdmhxdzBnQUFBQUZQQkRBTkJna3Foa2lHOXcwQkFRc0YKQURDQml6RUxNQWtHQTFVRUJoTUNWVk14RXpBUkJnTlZCQWdUQ2xkaGMyaHBibWQwYjI0eEVEQU9CZ05WQkFjVApCMUpsWkcxdmJtUXhIakFjQmdOVkJBb1RGVTFwWTNKdmMyOW1kQ0JEYjNKd2IzSmhkR2x2YmpFVk1CTUdBMVVFCkN4TU1UV2xqY205emIyWjBJRWxVTVI0d0hBWURWUVFERXhWTmFXTnliM052Wm5RZ1NWUWdWRXhUSUVOQklEUXcKSGhjTk1UZ3dOREV5TWpJek1qUTRXaGNOTWpBd05ERXlNakl6TWpRNFdqQTVNVGN3TlFZRFZRUURFeTV6WlhKMgphV05sWTJ4cFpXNTBZMlZ5ZEMxd1lYSjBibVZ5TG0xaGJtRm5aVzFsYm5RdVlYcDFjbVV1WTI5dE1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTBSYjdJcHpxMmR4emhhbVpyS1ZDakMzeTQyYlYKUnNIY2pCUTFuSDBHZ1puUDhXeDZDSE1mWThybkVJQzRLeVRRYkJXVzhnNXlmc3NSQ0ZXbFpxYjR6SkRXS0pmTgpGSmNMUm9LNnhwTktZYVZVTkVlT25IdUxHYTM0ZlA0VjBFRjZybzdvbkRLME5zanhjY1dZVzRNVXVzc0xrQS94CkUrM2RwU1REdk1KcjJoWUpsVnFDcVR6blQvbmZaVUZzQUVEQnp5MUpOOHZiZDlIR2czc2Myd0x4dk95cFJOc0gKT1V3V2pmN2xzWWZleEVlcWkzY29EeHc2alpLVWEyVkdsUnBpTkowMjhBQitYSi9TU1FVNVBsd0JBbU9TT3ovRApGY0NKdGpPZlBqU1NKckFIQVV3SHU3RzlSV05JTFBwYU9zQ1J5eitETE5zNGpvNlEvUUg4d1lManJRSURBUUFCCm80SUNtakNDQXBZd0N3WURWUjBQQkFRREFnU3dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01DQmdnckJnRUYKQlFjREFUQWRCZ05WSFE0RUZnUVVlbEdkVVJrZzJoSFFOWEQ4WUc4L3drdjJVT0F3SHdZRFZSMGpCQmd3Rm9BVQplbnVNd2Mvbm9Nb2MxR3Y2KytFend3OGFvcDB3Z2F3R0ExVWRId1NCcERDQm9UQ0JucUNCbTZDQm1JWkxhSFIwCmNEb3ZMMjF6WTNKc0xtMXBZM0p2YzI5bWRDNWpiMjB2Y0d0cEwyMXpZMjl5Y0M5amNtd3ZUV2xqY205emIyWjAKSlRJd1NWUWxNakJVVEZNbE1qQkRRU1V5TURRdVkzSnNoa2xvZEhSd09pOHZZM0pzTG0xcFkzSnZjMjltZEM1agpiMjB2Y0d0cEwyMXpZMjl5Y0M5amNtd3ZUV2xqY205emIyWjBKVEl3U1ZRbE1qQlVURk1sTWpCRFFTVXlNRFF1ClkzSnNNSUdGQmdnckJnRUZCUWNCQVFSNU1IY3dVUVlJS3dZQkJRVUhNQUtHUldoMGRIQTZMeTkzZDNjdWJXbGoKY205emIyWjBMbU52YlM5d2Eya3ZiWE5qYjNKd0wwMXBZM0p2YzI5bWRDVXlNRWxVSlRJd1ZFeFRKVEl3UTBFbApNakEwTG1OeWREQWlCZ2dyQmdFRkJRY3dBWVlXYUhSMGNEb3ZMMjlqYzNBdWJYTnZZM053TG1OdmJUQStCZ2tyCkJnRUVBWUkzRlFjRU1UQXZCaWNyQmdFRUFZSTNGUWlIMm9aMWcrN1pBWUxKaFJ1QnRaNWhoZlRyWUlGZGhOTGYKUW9Mbmszb0NBV1FDQVIwd1RRWURWUjBnQkVZd1JEQkNCZ2tyQmdFRUFZSTNLZ0V3TlRBekJnZ3JCZ0VGQlFjQwpBUlluYUhSMGNEb3ZMM2QzZHk1dGFXTnliM052Wm5RdVkyOXRMM0JyYVM5dGMyTnZjbkF2WTNCek1DY0dDU3NHCkFRUUJnamNWQ2dRYU1CZ3dDZ1lJS3dZQkJRVUhBd0l3Q2dZSUt3WUJCUVVIQXdFd09RWURWUjBSQkRJd01JSXUKYzJWeWRtbGpaV05zYVdWdWRHTmxjblF0Y0dGeWRHNWxjaTV0WVc1aFoyVnRaVzUwTG1GNmRYSmxMbU52YlRBTgpCZ2txaGtpRzl3MEJBUXNGQUFPQ0FnRUFIVXIzbk1vdUI5WWdDUlRWYndUTllIS2RkWGJkSW1GUXNDYys4T1g1CjE5c0N6dFFSR05iSXEwVW1Ba01MbFVvWTIxckh4ZXdxU2hWczFhL2RwaFh5Tk1pcUdaU2QzU1BtYzZscitqUFQKNXVEREs0MUlWeXN0K2VUNlpyazFvcCtMVmdkeS9EU2lyNzVqcWZFY016bS82bU8rNnFNeWRLTWtVYmM5K3JHVwphUkpUcjRWUUdIRmEwNEIwZVZpNUd4MG9pL2RpZDNSaXg2aXJMMjFJSGEwYjN6c1hzZHpHU0R2K3hqL2Q2S0l4Ckdrd2FhYmZvU1NoQnFqaFNlQ0VyZXFlb1RpYjljdGw0MGRVdUp3THl4bjhHS2N6K3AvMEJUOEIxU3lYK01OQ2wKY0pkMjVtMjhLajY2TGUxOEVyeFlJYXZJVGVGa3Y2eGZjdkEvcHladDdPaU41QTlGQk1IUmpQK1kyZ2tvdjMrcQpISFRUZG4xNnlRajduNit3YlFHNGVleXc0YisyQkRLcUxNVFU2ZmlSQ3ZPM2FPZVBLSFVNN3R4b1FidWl6Z3NzCkNiMzl3QnJOTEZsMkJLQ1RkSCtkSU9oZVJiSkZvbmlwOGRPOUVFZWdSSG9lQW54ZUlYTFBrdXMzTzEvZjRhNkIKWHQ3RG5BUm8xSzJmeEp3VXRaU2MvR3dFSjU5NzlnRXlEa3pDZEVsLzdpWE9QZXVjTXhlM2xVM2pweUtsNERUaApjSkJqQytqNGpLWTFrK1U4b040aGdqYnJISUx6Vnd2eU15OU5KS290U3BMSjQxeHdPOHlGangxalFTT3Bxc0N1ClFhUFUvTjhSZ0hxWjBGTkFzS3dNUmZ6WmdXanRCNzRzYUVEdk5jVmNuNFhCQnFNSG0ydHo2Uzk3d3kxZGt0cTgKSE5BPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
                      name: certificate1
                  provisioningState: Succeeded
                  scopeMapId: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/scopeMaps/myNewScopeMap
                  status: enabled
                type: Microsoft.ContainerRegistry/registries/tokens
      x-ms-long-running-operation: true
      x-codegen-request-body-name: tokenUpdateParameters
      x-content-type: application/json
      x-accepts:
      - application/json
    put:
      description: Creates a token for a container registry with the specified parameters.
      operationId: Tokens_Create
      parameters:
      - description: The client API version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The Microsoft Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: The name of the resource group to which the container registry
          belongs.
        in: path
        name: resourceGroupName
        required: true
        schema:
          minLength: 1
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the container registry.
        in: path
        name: registryName
        required: true
        schema:
          maxLength: 50
          minLength: 5
          pattern: "^[a-zA-Z0-9]*$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the token.
        in: path
        name: tokenName
        required: true
        schema:
          maxLength: 50
          minLength: 5
          pattern: "^[a-zA-Z0-9-]*$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Token'
        description: The parameters for creating a token.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: The request was successful; the request was well-formed and
            received properly.
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: The request was successful; the operation will complete asynchronously.
      tags:
      - Tokens
      x-ms-examples:
        TokenCreate:
          parameters:
            api-version: 2019-05-01-preview
            registryName: myRegistry
            resourceGroupName: myResourceGroup
            subscriptionId: 00000000-0000-0000-0000-000000000000
            tokenCreateParameters:
              properties:
                credentials:
                  certificates:
                  - encodedPemCertificate: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUc3akNDQk5hZ0F3SUJBZ0lURmdBQlR3UVpyZGdmdmhxdzBnQUFBQUZQQkRBTkJna3Foa2lHOXcwQkFRc0YKQURDQml6RUxNQWtHQTFVRUJoTUNWVk14RXpBUkJnTlZCQWdUQ2xkaGMyaHBibWQwYjI0eEVEQU9CZ05WQkFjVApCMUpsWkcxdmJtUXhIakFjQmdOVkJBb1RGVTFwWTNKdmMyOW1kQ0JEYjNKd2IzSmhkR2x2YmpFVk1CTUdBMVVFCkN4TU1UV2xqY205emIyWjBJRWxVTVI0d0hBWURWUVFERXhWTmFXTnliM052Wm5RZ1NWUWdWRXhUSUVOQklEUXcKSGhjTk1UZ3dOREV5TWpJek1qUTRXaGNOTWpBd05ERXlNakl6TWpRNFdqQTVNVGN3TlFZRFZRUURFeTV6WlhKMgphV05sWTJ4cFpXNTBZMlZ5ZEMxd1lYSjBibVZ5TG0xaGJtRm5aVzFsYm5RdVlYcDFjbVV1WTI5dE1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTBSYjdJcHpxMmR4emhhbVpyS1ZDakMzeTQyYlYKUnNIY2pCUTFuSDBHZ1puUDhXeDZDSE1mWThybkVJQzRLeVRRYkJXVzhnNXlmc3NSQ0ZXbFpxYjR6SkRXS0pmTgpGSmNMUm9LNnhwTktZYVZVTkVlT25IdUxHYTM0ZlA0VjBFRjZybzdvbkRLME5zanhjY1dZVzRNVXVzc0xrQS94CkUrM2RwU1REdk1KcjJoWUpsVnFDcVR6blQvbmZaVUZzQUVEQnp5MUpOOHZiZDlIR2czc2Myd0x4dk95cFJOc0gKT1V3V2pmN2xzWWZleEVlcWkzY29EeHc2alpLVWEyVkdsUnBpTkowMjhBQitYSi9TU1FVNVBsd0JBbU9TT3ovRApGY0NKdGpPZlBqU1NKckFIQVV3SHU3RzlSV05JTFBwYU9zQ1J5eitETE5zNGpvNlEvUUg4d1lManJRSURBUUFCCm80SUNtakNDQXBZd0N3WURWUjBQQkFRREFnU3dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01DQmdnckJnRUYKQlFjREFUQWRCZ05WSFE0RUZnUVVlbEdkVVJrZzJoSFFOWEQ4WUc4L3drdjJVT0F3SHdZRFZSMGpCQmd3Rm9BVQplbnVNd2Mvbm9Nb2MxR3Y2KytFend3OGFvcDB3Z2F3R0ExVWRId1NCcERDQm9UQ0JucUNCbTZDQm1JWkxhSFIwCmNEb3ZMMjF6WTNKc0xtMXBZM0p2YzI5bWRDNWpiMjB2Y0d0cEwyMXpZMjl5Y0M5amNtd3ZUV2xqY205emIyWjAKSlRJd1NWUWxNakJVVEZNbE1qQkRRU1V5TURRdVkzSnNoa2xvZEhSd09pOHZZM0pzTG0xcFkzSnZjMjltZEM1agpiMjB2Y0d0cEwyMXpZMjl5Y0M5amNtd3ZUV2xqY205emIyWjBKVEl3U1ZRbE1qQlVURk1sTWpCRFFTVXlNRFF1ClkzSnNNSUdGQmdnckJnRUZCUWNCQVFSNU1IY3dVUVlJS3dZQkJRVUhNQUtHUldoMGRIQTZMeTkzZDNjdWJXbGoKY205emIyWjBMbU52YlM5d2Eya3ZiWE5qYjNKd0wwMXBZM0p2YzI5bWRDVXlNRWxVSlRJd1ZFeFRKVEl3UTBFbApNakEwTG1OeWREQWlCZ2dyQmdFRkJRY3dBWVlXYUhSMGNEb3ZMMjlqYzNBdWJYTnZZM053TG1OdmJUQStCZ2tyCkJnRUVBWUkzRlFjRU1UQXZCaWNyQmdFRUFZSTNGUWlIMm9aMWcrN1pBWUxKaFJ1QnRaNWhoZlRyWUlGZGhOTGYKUW9Mbmszb0NBV1FDQVIwd1RRWURWUjBnQkVZd1JEQkNCZ2tyQmdFRUFZSTNLZ0V3TlRBekJnZ3JCZ0VGQlFjQwpBUlluYUhSMGNEb3ZMM2QzZHk1dGFXTnliM052Wm5RdVkyOXRMM0JyYVM5dGMyTnZjbkF2WTNCek1DY0dDU3NHCkFRUUJnamNWQ2dRYU1CZ3dDZ1lJS3dZQkJRVUhBd0l3Q2dZSUt3WUJCUVVIQXdFd09RWURWUjBSQkRJd01JSXUKYzJWeWRtbGpaV05zYVdWdWRHTmxjblF0Y0dGeWRHNWxjaTV0WVc1aFoyVnRaVzUwTG1GNmRYSmxMbU52YlRBTgpCZ2txaGtpRzl3MEJBUXNGQUFPQ0FnRUFIVXIzbk1vdUI5WWdDUlRWYndUTllIS2RkWGJkSW1GUXNDYys4T1g1CjE5c0N6dFFSR05iSXEwVW1Ba01MbFVvWTIxckh4ZXdxU2hWczFhL2RwaFh5Tk1pcUdaU2QzU1BtYzZscitqUFQKNXVEREs0MUlWeXN0K2VUNlpyazFvcCtMVmdkeS9EU2lyNzVqcWZFY016bS82bU8rNnFNeWRLTWtVYmM5K3JHVwphUkpUcjRWUUdIRmEwNEIwZVZpNUd4MG9pL2RpZDNSaXg2aXJMMjFJSGEwYjN6c1hzZHpHU0R2K3hqL2Q2S0l4Ckdrd2FhYmZvU1NoQnFqaFNlQ0VyZXFlb1RpYjljdGw0MGRVdUp3THl4bjhHS2N6K3AvMEJUOEIxU3lYK01OQ2wKY0pkMjVtMjhLajY2TGUxOEVyeFlJYXZJVGVGa3Y2eGZjdkEvcHladDdPaU41QTlGQk1IUmpQK1kyZ2tvdjMrcQpISFRUZG4xNnlRajduNit3YlFHNGVleXc0YisyQkRLcUxNVFU2ZmlSQ3ZPM2FPZVBLSFVNN3R4b1FidWl6Z3NzCkNiMzl3QnJOTEZsMkJLQ1RkSCtkSU9oZVJiSkZvbmlwOGRPOUVFZWdSSG9lQW54ZUlYTFBrdXMzTzEvZjRhNkIKWHQ3RG5BUm8xSzJmeEp3VXRaU2MvR3dFSjU5NzlnRXlEa3pDZEVsLzdpWE9QZXVjTXhlM2xVM2pweUtsNERUaApjSkJqQytqNGpLWTFrK1U4b040aGdqYnJISUx6Vnd2eU15OU5KS290U3BMSjQxeHdPOHlGangxalFTT3Bxc0N1ClFhUFUvTjhSZ0hxWjBGTkFzS3dNUmZ6WmdXanRCNzRzYUVEdk5jVmNuNFhCQnFNSG0ydHo2Uzk3d3kxZGt0cTgKSE5BPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
                    name: certificate1
                scopeMapId: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/scopeMaps/myScopeMap
                status: disabled
            tokenName: myToken
          responses:
            "200":
              body:
                id: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/tokens/myToken
                name: myToken
                properties:
                  creationDate: 2017-03-01T23:14:37.0707808Z
                  credentials:
                    certificates:
                    - expiry: 2020-12-04T15:32:48.0707808Z
                      name: certificate1
                      thumbprint: feeb79a888bf1415f8e17c4965a2a5bb5c8a2ff7
                  provisioningState: Succeeded
                  scopeMapId: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/scopeMaps/myScopeMap
                  status: disabled
                type: Microsoft.ContainerRegistry/registries/tokens
            "201":
              body:
                id: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/tokens/myToken
                name: myToken
                properties:
                  creationDate: 2017-03-01T23:14:37.0707808Z
                  credentials:
                    certificates:
                    - expiry: 2020-12-04T15:32:48.0707808Z
                      name: certificate1
                      thumbprint: feeb79a888bf1415f8e17c4965a2a5bb5c8a2ff7
                  provisioningState: Succeeded
                  scopeMapId: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/scopeMaps/myScopeMap
                  status: disabled
                type: Microsoft.ContainerRegistry/registries/tokens
      x-ms-long-running-operation: true
      x-codegen-request-body-name: tokenCreateParameters
      x-content-type: application/json
      x-accepts:
      - application/json
components:
  parameters:
    ApiVersionParameter:
      description: The client API version.
      in: query
      name: api-version
      required: true
      schema:
        type: string
    RegistryNameParameter:
      description: The name of the container registry.
      in: path
      name: registryName
      required: true
      schema:
        maxLength: 50
        minLength: 5
        pattern: "^[a-zA-Z0-9]*$"
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    ResourceGroupParameter:
      description: The name of the resource group to which the container registry
        belongs.
      in: path
      name: resourceGroupName
      required: true
      schema:
        minLength: 1
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    ScopeMapNameParameter:
      description: The name of the scope map.
      in: path
      name: scopeMapName
      required: true
      schema:
        maxLength: 50
        minLength: 5
        pattern: "^[a-zA-Z0-9-_]*$"
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    SubscriptionIdParameter:
      description: The Microsoft Azure subscription ID.
      in: path
      name: subscriptionId
      required: true
      schema:
        type: string
    TokenNameParameter:
      description: The name of the token.
      in: path
      name: tokenName
      required: true
      schema:
        maxLength: 50
        minLength: 5
        pattern: "^[a-zA-Z0-9-]*$"
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
  schemas:
    GenerateCredentialsParameters:
      description: The parameters used to generate credentials for a specified token
        or user of a container registry.
      example:
        tokenId: tokenId
        name: password1
        expiry: 2000-01-23T04:56:07.000+00:00
      properties:
        expiry:
          description: The expiry date of the generated credentials after which the
            credentials become invalid.
          format: date-time
          type: string
        name:
          description: Specifies name of the password which should be regenerated
            if any -- password1 or password2.
          enum:
          - password1
          - password2
          type: string
          x-ms-enum:
            modelAsString: true
            name: TokenPasswordName
        tokenId:
          description: The resource ID of the token for which credentials have to
            be generated.
          type: string
      type: object
    GenerateCredentialsResult:
      description: The response from the GenerateCredentials operation.
      example:
        passwords:
        - creationTime: 2000-01-23T04:56:07.000+00:00
          name: password1
          expiry: 2000-01-23T04:56:07.000+00:00
          value: value
        - creationTime: 2000-01-23T04:56:07.000+00:00
          name: password1
          expiry: 2000-01-23T04:56:07.000+00:00
          value: value
        username: username
      properties:
        passwords:
          description: The list of passwords for a container registry.
          items:
            $ref: '#/components/schemas/TokenPassword'
          type: array
        username:
          description: The username for a container registry.
          type: string
      type: object
    ProxyResource:
      description: The resource model definition for a ARM proxy resource. It will
        have everything other than required location and tags.
      properties:
        id:
          description: The resource ID.
          readOnly: true
          type: string
        name:
          description: The name of the resource.
          readOnly: true
          type: string
        type:
          description: The type of the resource.
          readOnly: true
          type: string
      type: object
      x-ms-azure-resource: true
    ScopeMap:
      allOf:
      - $ref: '#/components/schemas/ProxyResource'
      description: An object that represents a scope map for a container registry.
      example:
        properties:
          description: description
          provisioningState: Creating
          creationDate: 2000-01-23T04:56:07.000+00:00
          type: type
          actions:
          - actions
          - actions
      properties:
        properties:
          $ref: '#/components/schemas/ScopeMapProperties'
    ScopeMapListResult:
      description: The result of a request to list scope maps for a container registry.
      example:
        value:
        - properties:
            description: description
            provisioningState: Creating
            creationDate: 2000-01-23T04:56:07.000+00:00
            type: type
            actions:
            - actions
            - actions
        - properties:
            description: description
            provisioningState: Creating
            creationDate: 2000-01-23T04:56:07.000+00:00
            type: type
            actions:
            - actions
            - actions
        nextLink: nextLink
      properties:
        nextLink:
          description: The URI that can be used to request the next list of scope
            maps.
          type: string
        value:
          description: "The list of scope maps. Since this list may be incomplete,\
            \ the nextLink field should be used to request the next list of scope\
            \ maps."
          items:
            $ref: '#/components/schemas/ScopeMap'
          type: array
      type: object
    ScopeMapProperties:
      description: The properties of a scope map.
      example:
        description: description
        provisioningState: Creating
        creationDate: 2000-01-23T04:56:07.000+00:00
        type: type
        actions:
        - actions
        - actions
      properties:
        actions:
          description: "The list of scoped permissions for registry artifacts.\r\n\
            E.g. repositories/repository-name/content/read,\r\nrepositories/repository-name/metadata/write"
          items:
            type: string
          type: array
        creationDate:
          description: The creation date of scope map.
          format: date-time
          readOnly: true
          type: string
        description:
          description: The user friendly description of the scope map.
          type: string
        provisioningState:
          description: Provisioning state of the resource.
          enum:
          - Creating
          - Updating
          - Deleting
          - Succeeded
          - Failed
          - Canceled
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: ProvisioningState
        type:
          description: The type of the scope map. E.g. BuildIn scope map.
          readOnly: true
          type: string
      required:
      - actions
      type: object
    ScopeMapPropertiesUpdateParameters:
      description: The update parameters for scope map properties.
      example:
        description: description
        actions:
        - actions
        - actions
      properties:
        actions:
          description: "The list of scope permissions for registry artifacts.\r\n\
            E.g. repositories/repository-name/pull, \r\nrepositories/repository-name/delete"
          items:
            type: string
          type: array
        description:
          description: The user friendly description of the scope map.
          type: string
      type: object
    ScopeMapUpdateParameters:
      description: The properties for updating the scope map.
      example:
        properties:
          description: description
          actions:
          - actions
          - actions
      properties:
        properties:
          $ref: '#/components/schemas/ScopeMapPropertiesUpdateParameters'
      type: object
    Token:
      allOf:
      - $ref: '#/components/schemas/ProxyResource'
      description: An object that represents a token for a container registry.
      example:
        properties:
          credentials:
            certificates:
            - name: certificate1
              thumbprint: thumbprint
              expiry: 2000-01-23T04:56:07.000+00:00
              encodedPemCertificate: encodedPemCertificate
            - name: certificate1
              thumbprint: thumbprint
              expiry: 2000-01-23T04:56:07.000+00:00
              encodedPemCertificate: encodedPemCertificate
            passwords:
            - creationTime: 2000-01-23T04:56:07.000+00:00
              name: password1
              expiry: 2000-01-23T04:56:07.000+00:00
              value: value
            - creationTime: 2000-01-23T04:56:07.000+00:00
              name: password1
              expiry: 2000-01-23T04:56:07.000+00:00
              value: value
          scopeMapId: scopeMapId
          provisioningState: Creating
          creationDate: 2000-01-23T04:56:07.000+00:00
          objectId: objectId
          status: enabled
      properties:
        properties:
          $ref: '#/components/schemas/TokenProperties'
    TokenCertificate:
      description: The properties of a certificate used for authenticating a token.
      example:
        name: certificate1
        thumbprint: thumbprint
        expiry: 2000-01-23T04:56:07.000+00:00
        encodedPemCertificate: encodedPemCertificate
      properties:
        encodedPemCertificate:
          description: Base 64 encoded string of the public certificate1 in PEM format
            that will be used for authenticating the token.
          type: string
        expiry:
          description: The expiry datetime of the certificate.
          format: date-time
          type: string
        name:
          enum:
          - certificate1
          - certificate2
          type: string
          x-ms-enum:
            modelAsString: true
            name: TokenCertificateName
        thumbprint:
          description: The thumbprint of the certificate.
          type: string
      type: object
    TokenCredentialsProperties:
      description: The properties of the credentials that can be used for authenticating
        the token.
      example:
        certificates:
        - name: certificate1
          thumbprint: thumbprint
          expiry: 2000-01-23T04:56:07.000+00:00
          encodedPemCertificate: encodedPemCertificate
        - name: certificate1
          thumbprint: thumbprint
          expiry: 2000-01-23T04:56:07.000+00:00
          encodedPemCertificate: encodedPemCertificate
        passwords:
        - creationTime: 2000-01-23T04:56:07.000+00:00
          name: password1
          expiry: 2000-01-23T04:56:07.000+00:00
          value: value
        - creationTime: 2000-01-23T04:56:07.000+00:00
          name: password1
          expiry: 2000-01-23T04:56:07.000+00:00
          value: value
      properties:
        certificates:
          items:
            $ref: '#/components/schemas/TokenCertificate'
          type: array
        passwords:
          items:
            $ref: '#/components/schemas/TokenPassword'
          type: array
      type: object
    TokenListResult:
      description: The result of a request to list tokens for a container registry.
      example:
        value:
        - properties:
            credentials:
              certificates:
              - name: certificate1
                thumbprint: thumbprint
                expiry: 2000-01-23T04:56:07.000+00:00
                encodedPemCertificate: encodedPemCertificate
              - name: certificate1
                thumbprint: thumbprint
                expiry: 2000-01-23T04:56:07.000+00:00
                encodedPemCertificate: encodedPemCertificate
              passwords:
              - creationTime: 2000-01-23T04:56:07.000+00:00
                name: password1
                expiry: 2000-01-23T04:56:07.000+00:00
                value: value
              - creationTime: 2000-01-23T04:56:07.000+00:00
                name: password1
                expiry: 2000-01-23T04:56:07.000+00:00
                value: value
            scopeMapId: scopeMapId
            provisioningState: Creating
            creationDate: 2000-01-23T04:56:07.000+00:00
            objectId: objectId
            status: enabled
        - properties:
            credentials:
              certificates:
              - name: certificate1
                thumbprint: thumbprint
                expiry: 2000-01-23T04:56:07.000+00:00
                encodedPemCertificate: encodedPemCertificate
              - name: certificate1
                thumbprint: thumbprint
                expiry: 2000-01-23T04:56:07.000+00:00
                encodedPemCertificate: encodedPemCertificate
              passwords:
              - creationTime: 2000-01-23T04:56:07.000+00:00
                name: password1
                expiry: 2000-01-23T04:56:07.000+00:00
                value: value
              - creationTime: 2000-01-23T04:56:07.000+00:00
                name: password1
                expiry: 2000-01-23T04:56:07.000+00:00
                value: value
            scopeMapId: scopeMapId
            provisioningState: Creating
            creationDate: 2000-01-23T04:56:07.000+00:00
            objectId: objectId
            status: enabled
        nextLink: nextLink
      properties:
        nextLink:
          description: The URI that can be used to request the next list of tokens.
          type: string
        value:
          description: "The list of tokens. Since this list may be incomplete, the\
            \ nextLink field should be used to request the next list of tokens."
          items:
            $ref: '#/components/schemas/Token'
          type: array
      type: object
    TokenPassword:
      description: The password that will be used for authenticating the token of
        a container registry.
      example:
        creationTime: 2000-01-23T04:56:07.000+00:00
        name: password1
        expiry: 2000-01-23T04:56:07.000+00:00
        value: value
      properties:
        creationTime:
          description: The creation datetime of the password.
          format: date-time
          type: string
        expiry:
          description: The expiry datetime of the password.
          format: date-time
          type: string
        name:
          description: The password name "password1" or "password2"
          enum:
          - password1
          - password2
          type: string
          x-ms-enum:
            modelAsString: true
            name: TokenPasswordName
        value:
          description: The password value.
          readOnly: true
          type: string
      type: object
    TokenProperties:
      description: The properties of a token.
      example:
        credentials:
          certificates:
          - name: certificate1
            thumbprint: thumbprint
            expiry: 2000-01-23T04:56:07.000+00:00
            encodedPemCertificate: encodedPemCertificate
          - name: certificate1
            thumbprint: thumbprint
            expiry: 2000-01-23T04:56:07.000+00:00
            encodedPemCertificate: encodedPemCertificate
          passwords:
          - creationTime: 2000-01-23T04:56:07.000+00:00
            name: password1
            expiry: 2000-01-23T04:56:07.000+00:00
            value: value
          - creationTime: 2000-01-23T04:56:07.000+00:00
            name: password1
            expiry: 2000-01-23T04:56:07.000+00:00
            value: value
        scopeMapId: scopeMapId
        provisioningState: Creating
        creationDate: 2000-01-23T04:56:07.000+00:00
        objectId: objectId
        status: enabled
      properties:
        creationDate:
          description: The creation date of scope map.
          format: date-time
          readOnly: true
          type: string
        credentials:
          $ref: '#/components/schemas/TokenCredentialsProperties'
        objectId:
          description: The user/group/application object ID for which the token has
            to be created.
          type: string
        provisioningState:
          description: Provisioning state of the resource.
          enum:
          - Creating
          - Updating
          - Deleting
          - Succeeded
          - Failed
          - Canceled
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: ProvisioningState
        scopeMapId:
          description: The resource ID of the scope map to which the token will be
            associated with.
          type: string
        status:
          description: The status of the token example enabled or disabled.
          enum:
          - enabled
          - disabled
          type: string
          x-ms-enum:
            modelAsString: true
            name: TokenStatus
      type: object
    TokenUpdateParameters:
      description: The parameters for updating a token.
      example:
        properties:
          credentials:
            certificates:
            - name: certificate1
              thumbprint: thumbprint
              expiry: 2000-01-23T04:56:07.000+00:00
              encodedPemCertificate: encodedPemCertificate
            - name: certificate1
              thumbprint: thumbprint
              expiry: 2000-01-23T04:56:07.000+00:00
              encodedPemCertificate: encodedPemCertificate
            passwords:
            - creationTime: 2000-01-23T04:56:07.000+00:00
              name: password1
              expiry: 2000-01-23T04:56:07.000+00:00
              value: value
            - creationTime: 2000-01-23T04:56:07.000+00:00
              name: password1
              expiry: 2000-01-23T04:56:07.000+00:00
              value: value
          scopeMapId: scopeMapId
          status: enabled
      properties:
        properties:
          $ref: '#/components/schemas/TokenUpdateProperties'
      type: object
    TokenUpdateProperties:
      description: The parameters for updating token properties.
      example:
        credentials:
          certificates:
          - name: certificate1
            thumbprint: thumbprint
            expiry: 2000-01-23T04:56:07.000+00:00
            encodedPemCertificate: encodedPemCertificate
          - name: certificate1
            thumbprint: thumbprint
            expiry: 2000-01-23T04:56:07.000+00:00
            encodedPemCertificate: encodedPemCertificate
          passwords:
          - creationTime: 2000-01-23T04:56:07.000+00:00
            name: password1
            expiry: 2000-01-23T04:56:07.000+00:00
            value: value
          - creationTime: 2000-01-23T04:56:07.000+00:00
            name: password1
            expiry: 2000-01-23T04:56:07.000+00:00
            value: value
        scopeMapId: scopeMapId
        status: enabled
      properties:
        credentials:
          $ref: '#/components/schemas/TokenCredentialsProperties'
        scopeMapId:
          description: The resource ID of the scope map to which the token will be
            associated with.
          type: string
        status:
          description: The status of the token example enabled or disabled.
          enum:
          - enabled
          - disabled
          type: string
          x-ms-enum:
            modelAsString: true
            name: TokenStatus
      type: object
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
      type: oauth2
x-original-swagger-version: "2.0"

