/*
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2018-10-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.PublicIPAddressesGetVirtualMachineScaleSetPublicIPAddress200Response;
import org.openapitools.client.model.PublicIPAddressesListVirtualMachineScaleSetPublicIPAddresses200Response;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class DefaultApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public DefaultApi() {
        this(Configuration.getDefaultApiClient());
    }

    public DefaultApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for publicIPAddressesGetVirtualMachineScaleSetPublicIPAddress
     * @param resourceGroupName The name of the resource group. (required)
     * @param virtualMachineScaleSetName The name of the virtual machine scale set. (required)
     * @param virtualmachineIndex The virtual machine index. (required)
     * @param networkInterfaceName The name of the network interface. (required)
     * @param ipConfigurationName The name of the IP configuration. (required)
     * @param publicIpAddressName The name of the public IP Address. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param $expand Expands referenced resources. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Request successful. The operation returns the resulting PublicIPAddress resource. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call publicIPAddressesGetVirtualMachineScaleSetPublicIPAddressCall(String resourceGroupName, String virtualMachineScaleSetName, String virtualmachineIndex, String networkInterfaceName, String ipConfigurationName, String publicIpAddressName, String apiVersion, String subscriptionId, String $expand, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{virtualMachineScaleSetName}/virtualMachines/{virtualmachineIndex}/networkInterfaces/{networkInterfaceName}/ipconfigurations/{ipConfigurationName}/publicipaddresses/{publicIpAddressName}"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "virtualMachineScaleSetName" + "}", localVarApiClient.escapeString(virtualMachineScaleSetName.toString()))
            .replace("{" + "virtualmachineIndex" + "}", localVarApiClient.escapeString(virtualmachineIndex.toString()))
            .replace("{" + "networkInterfaceName" + "}", localVarApiClient.escapeString(networkInterfaceName.toString()))
            .replace("{" + "ipConfigurationName" + "}", localVarApiClient.escapeString(ipConfigurationName.toString()))
            .replace("{" + "publicIpAddressName" + "}", localVarApiClient.escapeString(publicIpAddressName.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        if ($expand != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$expand", $expand));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call publicIPAddressesGetVirtualMachineScaleSetPublicIPAddressValidateBeforeCall(String resourceGroupName, String virtualMachineScaleSetName, String virtualmachineIndex, String networkInterfaceName, String ipConfigurationName, String publicIpAddressName, String apiVersion, String subscriptionId, String $expand, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling publicIPAddressesGetVirtualMachineScaleSetPublicIPAddress(Async)");
        }

        // verify the required parameter 'virtualMachineScaleSetName' is set
        if (virtualMachineScaleSetName == null) {
            throw new ApiException("Missing the required parameter 'virtualMachineScaleSetName' when calling publicIPAddressesGetVirtualMachineScaleSetPublicIPAddress(Async)");
        }

        // verify the required parameter 'virtualmachineIndex' is set
        if (virtualmachineIndex == null) {
            throw new ApiException("Missing the required parameter 'virtualmachineIndex' when calling publicIPAddressesGetVirtualMachineScaleSetPublicIPAddress(Async)");
        }

        // verify the required parameter 'networkInterfaceName' is set
        if (networkInterfaceName == null) {
            throw new ApiException("Missing the required parameter 'networkInterfaceName' when calling publicIPAddressesGetVirtualMachineScaleSetPublicIPAddress(Async)");
        }

        // verify the required parameter 'ipConfigurationName' is set
        if (ipConfigurationName == null) {
            throw new ApiException("Missing the required parameter 'ipConfigurationName' when calling publicIPAddressesGetVirtualMachineScaleSetPublicIPAddress(Async)");
        }

        // verify the required parameter 'publicIpAddressName' is set
        if (publicIpAddressName == null) {
            throw new ApiException("Missing the required parameter 'publicIpAddressName' when calling publicIPAddressesGetVirtualMachineScaleSetPublicIPAddress(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling publicIPAddressesGetVirtualMachineScaleSetPublicIPAddress(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling publicIPAddressesGetVirtualMachineScaleSetPublicIPAddress(Async)");
        }

        return publicIPAddressesGetVirtualMachineScaleSetPublicIPAddressCall(resourceGroupName, virtualMachineScaleSetName, virtualmachineIndex, networkInterfaceName, ipConfigurationName, publicIpAddressName, apiVersion, subscriptionId, $expand, _callback);

    }

    /**
     * 
     * Get the specified public IP address in a virtual machine scale set.
     * @param resourceGroupName The name of the resource group. (required)
     * @param virtualMachineScaleSetName The name of the virtual machine scale set. (required)
     * @param virtualmachineIndex The virtual machine index. (required)
     * @param networkInterfaceName The name of the network interface. (required)
     * @param ipConfigurationName The name of the IP configuration. (required)
     * @param publicIpAddressName The name of the public IP Address. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param $expand Expands referenced resources. (optional)
     * @return PublicIPAddressesGetVirtualMachineScaleSetPublicIPAddress200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Request successful. The operation returns the resulting PublicIPAddress resource. </td><td>  -  </td></tr>
     </table>
     */
    public PublicIPAddressesGetVirtualMachineScaleSetPublicIPAddress200Response publicIPAddressesGetVirtualMachineScaleSetPublicIPAddress(String resourceGroupName, String virtualMachineScaleSetName, String virtualmachineIndex, String networkInterfaceName, String ipConfigurationName, String publicIpAddressName, String apiVersion, String subscriptionId, String $expand) throws ApiException {
        ApiResponse<PublicIPAddressesGetVirtualMachineScaleSetPublicIPAddress200Response> localVarResp = publicIPAddressesGetVirtualMachineScaleSetPublicIPAddressWithHttpInfo(resourceGroupName, virtualMachineScaleSetName, virtualmachineIndex, networkInterfaceName, ipConfigurationName, publicIpAddressName, apiVersion, subscriptionId, $expand);
        return localVarResp.getData();
    }

    /**
     * 
     * Get the specified public IP address in a virtual machine scale set.
     * @param resourceGroupName The name of the resource group. (required)
     * @param virtualMachineScaleSetName The name of the virtual machine scale set. (required)
     * @param virtualmachineIndex The virtual machine index. (required)
     * @param networkInterfaceName The name of the network interface. (required)
     * @param ipConfigurationName The name of the IP configuration. (required)
     * @param publicIpAddressName The name of the public IP Address. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param $expand Expands referenced resources. (optional)
     * @return ApiResponse&lt;PublicIPAddressesGetVirtualMachineScaleSetPublicIPAddress200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Request successful. The operation returns the resulting PublicIPAddress resource. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<PublicIPAddressesGetVirtualMachineScaleSetPublicIPAddress200Response> publicIPAddressesGetVirtualMachineScaleSetPublicIPAddressWithHttpInfo(String resourceGroupName, String virtualMachineScaleSetName, String virtualmachineIndex, String networkInterfaceName, String ipConfigurationName, String publicIpAddressName, String apiVersion, String subscriptionId, String $expand) throws ApiException {
        okhttp3.Call localVarCall = publicIPAddressesGetVirtualMachineScaleSetPublicIPAddressValidateBeforeCall(resourceGroupName, virtualMachineScaleSetName, virtualmachineIndex, networkInterfaceName, ipConfigurationName, publicIpAddressName, apiVersion, subscriptionId, $expand, null);
        Type localVarReturnType = new TypeToken<PublicIPAddressesGetVirtualMachineScaleSetPublicIPAddress200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Get the specified public IP address in a virtual machine scale set.
     * @param resourceGroupName The name of the resource group. (required)
     * @param virtualMachineScaleSetName The name of the virtual machine scale set. (required)
     * @param virtualmachineIndex The virtual machine index. (required)
     * @param networkInterfaceName The name of the network interface. (required)
     * @param ipConfigurationName The name of the IP configuration. (required)
     * @param publicIpAddressName The name of the public IP Address. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param $expand Expands referenced resources. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Request successful. The operation returns the resulting PublicIPAddress resource. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call publicIPAddressesGetVirtualMachineScaleSetPublicIPAddressAsync(String resourceGroupName, String virtualMachineScaleSetName, String virtualmachineIndex, String networkInterfaceName, String ipConfigurationName, String publicIpAddressName, String apiVersion, String subscriptionId, String $expand, final ApiCallback<PublicIPAddressesGetVirtualMachineScaleSetPublicIPAddress200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = publicIPAddressesGetVirtualMachineScaleSetPublicIPAddressValidateBeforeCall(resourceGroupName, virtualMachineScaleSetName, virtualmachineIndex, networkInterfaceName, ipConfigurationName, publicIpAddressName, apiVersion, subscriptionId, $expand, _callback);
        Type localVarReturnType = new TypeToken<PublicIPAddressesGetVirtualMachineScaleSetPublicIPAddress200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for publicIPAddressesListVirtualMachineScaleSetPublicIPAddresses
     * @param resourceGroupName The name of the resource group. (required)
     * @param virtualMachineScaleSetName The name of the virtual machine scale set. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Request successful. The operation returns a list of PublicIPInterface resources. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call publicIPAddressesListVirtualMachineScaleSetPublicIPAddressesCall(String resourceGroupName, String virtualMachineScaleSetName, String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{virtualMachineScaleSetName}/publicipaddresses"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "virtualMachineScaleSetName" + "}", localVarApiClient.escapeString(virtualMachineScaleSetName.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call publicIPAddressesListVirtualMachineScaleSetPublicIPAddressesValidateBeforeCall(String resourceGroupName, String virtualMachineScaleSetName, String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling publicIPAddressesListVirtualMachineScaleSetPublicIPAddresses(Async)");
        }

        // verify the required parameter 'virtualMachineScaleSetName' is set
        if (virtualMachineScaleSetName == null) {
            throw new ApiException("Missing the required parameter 'virtualMachineScaleSetName' when calling publicIPAddressesListVirtualMachineScaleSetPublicIPAddresses(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling publicIPAddressesListVirtualMachineScaleSetPublicIPAddresses(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling publicIPAddressesListVirtualMachineScaleSetPublicIPAddresses(Async)");
        }

        return publicIPAddressesListVirtualMachineScaleSetPublicIPAddressesCall(resourceGroupName, virtualMachineScaleSetName, apiVersion, subscriptionId, _callback);

    }

    /**
     * 
     * Gets information about all public IP addresses on a virtual machine scale set level.
     * @param resourceGroupName The name of the resource group. (required)
     * @param virtualMachineScaleSetName The name of the virtual machine scale set. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @return PublicIPAddressesListVirtualMachineScaleSetPublicIPAddresses200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Request successful. The operation returns a list of PublicIPInterface resources. </td><td>  -  </td></tr>
     </table>
     */
    public PublicIPAddressesListVirtualMachineScaleSetPublicIPAddresses200Response publicIPAddressesListVirtualMachineScaleSetPublicIPAddresses(String resourceGroupName, String virtualMachineScaleSetName, String apiVersion, String subscriptionId) throws ApiException {
        ApiResponse<PublicIPAddressesListVirtualMachineScaleSetPublicIPAddresses200Response> localVarResp = publicIPAddressesListVirtualMachineScaleSetPublicIPAddressesWithHttpInfo(resourceGroupName, virtualMachineScaleSetName, apiVersion, subscriptionId);
        return localVarResp.getData();
    }

    /**
     * 
     * Gets information about all public IP addresses on a virtual machine scale set level.
     * @param resourceGroupName The name of the resource group. (required)
     * @param virtualMachineScaleSetName The name of the virtual machine scale set. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @return ApiResponse&lt;PublicIPAddressesListVirtualMachineScaleSetPublicIPAddresses200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Request successful. The operation returns a list of PublicIPInterface resources. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<PublicIPAddressesListVirtualMachineScaleSetPublicIPAddresses200Response> publicIPAddressesListVirtualMachineScaleSetPublicIPAddressesWithHttpInfo(String resourceGroupName, String virtualMachineScaleSetName, String apiVersion, String subscriptionId) throws ApiException {
        okhttp3.Call localVarCall = publicIPAddressesListVirtualMachineScaleSetPublicIPAddressesValidateBeforeCall(resourceGroupName, virtualMachineScaleSetName, apiVersion, subscriptionId, null);
        Type localVarReturnType = new TypeToken<PublicIPAddressesListVirtualMachineScaleSetPublicIPAddresses200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Gets information about all public IP addresses on a virtual machine scale set level.
     * @param resourceGroupName The name of the resource group. (required)
     * @param virtualMachineScaleSetName The name of the virtual machine scale set. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Request successful. The operation returns a list of PublicIPInterface resources. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call publicIPAddressesListVirtualMachineScaleSetPublicIPAddressesAsync(String resourceGroupName, String virtualMachineScaleSetName, String apiVersion, String subscriptionId, final ApiCallback<PublicIPAddressesListVirtualMachineScaleSetPublicIPAddresses200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = publicIPAddressesListVirtualMachineScaleSetPublicIPAddressesValidateBeforeCall(resourceGroupName, virtualMachineScaleSetName, apiVersion, subscriptionId, _callback);
        Type localVarReturnType = new TypeToken<PublicIPAddressesListVirtualMachineScaleSetPublicIPAddresses200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for publicIPAddressesListVirtualMachineScaleSetVMPublicIPAddresses
     * @param resourceGroupName The name of the resource group. (required)
     * @param virtualMachineScaleSetName The name of the virtual machine scale set. (required)
     * @param virtualmachineIndex The virtual machine index. (required)
     * @param networkInterfaceName The network interface name. (required)
     * @param ipConfigurationName The IP configuration name. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Request successful. The operation returns a list of PublicIPAddress resources. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call publicIPAddressesListVirtualMachineScaleSetVMPublicIPAddressesCall(String resourceGroupName, String virtualMachineScaleSetName, String virtualmachineIndex, String networkInterfaceName, String ipConfigurationName, String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{virtualMachineScaleSetName}/virtualMachines/{virtualmachineIndex}/networkInterfaces/{networkInterfaceName}/ipconfigurations/{ipConfigurationName}/publicipaddresses"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "virtualMachineScaleSetName" + "}", localVarApiClient.escapeString(virtualMachineScaleSetName.toString()))
            .replace("{" + "virtualmachineIndex" + "}", localVarApiClient.escapeString(virtualmachineIndex.toString()))
            .replace("{" + "networkInterfaceName" + "}", localVarApiClient.escapeString(networkInterfaceName.toString()))
            .replace("{" + "ipConfigurationName" + "}", localVarApiClient.escapeString(ipConfigurationName.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call publicIPAddressesListVirtualMachineScaleSetVMPublicIPAddressesValidateBeforeCall(String resourceGroupName, String virtualMachineScaleSetName, String virtualmachineIndex, String networkInterfaceName, String ipConfigurationName, String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling publicIPAddressesListVirtualMachineScaleSetVMPublicIPAddresses(Async)");
        }

        // verify the required parameter 'virtualMachineScaleSetName' is set
        if (virtualMachineScaleSetName == null) {
            throw new ApiException("Missing the required parameter 'virtualMachineScaleSetName' when calling publicIPAddressesListVirtualMachineScaleSetVMPublicIPAddresses(Async)");
        }

        // verify the required parameter 'virtualmachineIndex' is set
        if (virtualmachineIndex == null) {
            throw new ApiException("Missing the required parameter 'virtualmachineIndex' when calling publicIPAddressesListVirtualMachineScaleSetVMPublicIPAddresses(Async)");
        }

        // verify the required parameter 'networkInterfaceName' is set
        if (networkInterfaceName == null) {
            throw new ApiException("Missing the required parameter 'networkInterfaceName' when calling publicIPAddressesListVirtualMachineScaleSetVMPublicIPAddresses(Async)");
        }

        // verify the required parameter 'ipConfigurationName' is set
        if (ipConfigurationName == null) {
            throw new ApiException("Missing the required parameter 'ipConfigurationName' when calling publicIPAddressesListVirtualMachineScaleSetVMPublicIPAddresses(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling publicIPAddressesListVirtualMachineScaleSetVMPublicIPAddresses(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling publicIPAddressesListVirtualMachineScaleSetVMPublicIPAddresses(Async)");
        }

        return publicIPAddressesListVirtualMachineScaleSetVMPublicIPAddressesCall(resourceGroupName, virtualMachineScaleSetName, virtualmachineIndex, networkInterfaceName, ipConfigurationName, apiVersion, subscriptionId, _callback);

    }

    /**
     * 
     * Gets information about all public IP addresses in a virtual machine IP configuration in a virtual machine scale set.
     * @param resourceGroupName The name of the resource group. (required)
     * @param virtualMachineScaleSetName The name of the virtual machine scale set. (required)
     * @param virtualmachineIndex The virtual machine index. (required)
     * @param networkInterfaceName The network interface name. (required)
     * @param ipConfigurationName The IP configuration name. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @return PublicIPAddressesListVirtualMachineScaleSetPublicIPAddresses200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Request successful. The operation returns a list of PublicIPAddress resources. </td><td>  -  </td></tr>
     </table>
     */
    public PublicIPAddressesListVirtualMachineScaleSetPublicIPAddresses200Response publicIPAddressesListVirtualMachineScaleSetVMPublicIPAddresses(String resourceGroupName, String virtualMachineScaleSetName, String virtualmachineIndex, String networkInterfaceName, String ipConfigurationName, String apiVersion, String subscriptionId) throws ApiException {
        ApiResponse<PublicIPAddressesListVirtualMachineScaleSetPublicIPAddresses200Response> localVarResp = publicIPAddressesListVirtualMachineScaleSetVMPublicIPAddressesWithHttpInfo(resourceGroupName, virtualMachineScaleSetName, virtualmachineIndex, networkInterfaceName, ipConfigurationName, apiVersion, subscriptionId);
        return localVarResp.getData();
    }

    /**
     * 
     * Gets information about all public IP addresses in a virtual machine IP configuration in a virtual machine scale set.
     * @param resourceGroupName The name of the resource group. (required)
     * @param virtualMachineScaleSetName The name of the virtual machine scale set. (required)
     * @param virtualmachineIndex The virtual machine index. (required)
     * @param networkInterfaceName The network interface name. (required)
     * @param ipConfigurationName The IP configuration name. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @return ApiResponse&lt;PublicIPAddressesListVirtualMachineScaleSetPublicIPAddresses200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Request successful. The operation returns a list of PublicIPAddress resources. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<PublicIPAddressesListVirtualMachineScaleSetPublicIPAddresses200Response> publicIPAddressesListVirtualMachineScaleSetVMPublicIPAddressesWithHttpInfo(String resourceGroupName, String virtualMachineScaleSetName, String virtualmachineIndex, String networkInterfaceName, String ipConfigurationName, String apiVersion, String subscriptionId) throws ApiException {
        okhttp3.Call localVarCall = publicIPAddressesListVirtualMachineScaleSetVMPublicIPAddressesValidateBeforeCall(resourceGroupName, virtualMachineScaleSetName, virtualmachineIndex, networkInterfaceName, ipConfigurationName, apiVersion, subscriptionId, null);
        Type localVarReturnType = new TypeToken<PublicIPAddressesListVirtualMachineScaleSetPublicIPAddresses200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Gets information about all public IP addresses in a virtual machine IP configuration in a virtual machine scale set.
     * @param resourceGroupName The name of the resource group. (required)
     * @param virtualMachineScaleSetName The name of the virtual machine scale set. (required)
     * @param virtualmachineIndex The virtual machine index. (required)
     * @param networkInterfaceName The network interface name. (required)
     * @param ipConfigurationName The IP configuration name. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Request successful. The operation returns a list of PublicIPAddress resources. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call publicIPAddressesListVirtualMachineScaleSetVMPublicIPAddressesAsync(String resourceGroupName, String virtualMachineScaleSetName, String virtualmachineIndex, String networkInterfaceName, String ipConfigurationName, String apiVersion, String subscriptionId, final ApiCallback<PublicIPAddressesListVirtualMachineScaleSetPublicIPAddresses200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = publicIPAddressesListVirtualMachineScaleSetVMPublicIPAddressesValidateBeforeCall(resourceGroupName, virtualMachineScaleSetName, virtualmachineIndex, networkInterfaceName, ipConfigurationName, apiVersion, subscriptionId, _callback);
        Type localVarReturnType = new TypeToken<PublicIPAddressesListVirtualMachineScaleSetPublicIPAddresses200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
