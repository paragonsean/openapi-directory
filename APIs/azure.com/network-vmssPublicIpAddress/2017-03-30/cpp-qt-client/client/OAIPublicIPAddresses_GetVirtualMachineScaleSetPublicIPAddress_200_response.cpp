/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2017-03-30
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPublicIPAddresses_GetVirtualMachineScaleSetPublicIPAddress_200_response.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPublicIPAddresses_GetVirtualMachineScaleSetPublicIPAddress_200_response::OAIPublicIPAddresses_GetVirtualMachineScaleSetPublicIPAddress_200_response(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPublicIPAddresses_GetVirtualMachineScaleSetPublicIPAddress_200_response::OAIPublicIPAddresses_GetVirtualMachineScaleSetPublicIPAddress_200_response() {
    this->initializeModel();
}

OAIPublicIPAddresses_GetVirtualMachineScaleSetPublicIPAddress_200_response::~OAIPublicIPAddresses_GetVirtualMachineScaleSetPublicIPAddress_200_response() {}

void OAIPublicIPAddresses_GetVirtualMachineScaleSetPublicIPAddress_200_response::initializeModel() {

    m_etag_isSet = false;
    m_etag_isValid = false;

    m_properties_isSet = false;
    m_properties_isValid = false;

    m_sku_isSet = false;
    m_sku_isValid = false;

    m_zones_isSet = false;
    m_zones_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_location_isSet = false;
    m_location_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_tags_isSet = false;
    m_tags_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAIPublicIPAddresses_GetVirtualMachineScaleSetPublicIPAddress_200_response::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPublicIPAddresses_GetVirtualMachineScaleSetPublicIPAddress_200_response::fromJsonObject(QJsonObject json) {

    m_etag_isValid = ::OpenAPI::fromJsonValue(m_etag, json[QString("etag")]);
    m_etag_isSet = !json[QString("etag")].isNull() && m_etag_isValid;

    m_properties_isValid = ::OpenAPI::fromJsonValue(m_properties, json[QString("properties")]);
    m_properties_isSet = !json[QString("properties")].isNull() && m_properties_isValid;

    m_sku_isValid = ::OpenAPI::fromJsonValue(m_sku, json[QString("sku")]);
    m_sku_isSet = !json[QString("sku")].isNull() && m_sku_isValid;

    m_zones_isValid = ::OpenAPI::fromJsonValue(m_zones, json[QString("zones")]);
    m_zones_isSet = !json[QString("zones")].isNull() && m_zones_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_location_isValid = ::OpenAPI::fromJsonValue(m_location, json[QString("location")]);
    m_location_isSet = !json[QString("location")].isNull() && m_location_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_tags_isValid = ::OpenAPI::fromJsonValue(m_tags, json[QString("tags")]);
    m_tags_isSet = !json[QString("tags")].isNull() && m_tags_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAIPublicIPAddresses_GetVirtualMachineScaleSetPublicIPAddress_200_response::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPublicIPAddresses_GetVirtualMachineScaleSetPublicIPAddress_200_response::asJsonObject() const {
    QJsonObject obj;
    if (m_etag_isSet) {
        obj.insert(QString("etag"), ::OpenAPI::toJsonValue(m_etag));
    }
    if (m_properties_isSet) {
        obj.insert(QString("properties"), ::OpenAPI::toJsonValue(m_properties));
    }
    if (m_sku.isSet()) {
        obj.insert(QString("sku"), ::OpenAPI::toJsonValue(m_sku));
    }
    if (m_zones.size() > 0) {
        obj.insert(QString("zones"), ::OpenAPI::toJsonValue(m_zones));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_location_isSet) {
        obj.insert(QString("location"), ::OpenAPI::toJsonValue(m_location));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_tags.size() > 0) {
        obj.insert(QString("tags"), ::OpenAPI::toJsonValue(m_tags));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

QString OAIPublicIPAddresses_GetVirtualMachineScaleSetPublicIPAddress_200_response::getEtag() const {
    return m_etag;
}
void OAIPublicIPAddresses_GetVirtualMachineScaleSetPublicIPAddress_200_response::setEtag(const QString &etag) {
    m_etag = etag;
    m_etag_isSet = true;
}

bool OAIPublicIPAddresses_GetVirtualMachineScaleSetPublicIPAddress_200_response::is_etag_Set() const{
    return m_etag_isSet;
}

bool OAIPublicIPAddresses_GetVirtualMachineScaleSetPublicIPAddress_200_response::is_etag_Valid() const{
    return m_etag_isValid;
}

OAIObject OAIPublicIPAddresses_GetVirtualMachineScaleSetPublicIPAddress_200_response::getProperties() const {
    return m_properties;
}
void OAIPublicIPAddresses_GetVirtualMachineScaleSetPublicIPAddress_200_response::setProperties(const OAIObject &properties) {
    m_properties = properties;
    m_properties_isSet = true;
}

bool OAIPublicIPAddresses_GetVirtualMachineScaleSetPublicIPAddress_200_response::is_properties_Set() const{
    return m_properties_isSet;
}

bool OAIPublicIPAddresses_GetVirtualMachineScaleSetPublicIPAddress_200_response::is_properties_Valid() const{
    return m_properties_isValid;
}

OAIPublicIPAddresses_ListVirtualMachineScaleSetPublicIPAddresses_200_response_value_inner_sku OAIPublicIPAddresses_GetVirtualMachineScaleSetPublicIPAddress_200_response::getSku() const {
    return m_sku;
}
void OAIPublicIPAddresses_GetVirtualMachineScaleSetPublicIPAddress_200_response::setSku(const OAIPublicIPAddresses_ListVirtualMachineScaleSetPublicIPAddresses_200_response_value_inner_sku &sku) {
    m_sku = sku;
    m_sku_isSet = true;
}

bool OAIPublicIPAddresses_GetVirtualMachineScaleSetPublicIPAddress_200_response::is_sku_Set() const{
    return m_sku_isSet;
}

bool OAIPublicIPAddresses_GetVirtualMachineScaleSetPublicIPAddress_200_response::is_sku_Valid() const{
    return m_sku_isValid;
}

QList<QString> OAIPublicIPAddresses_GetVirtualMachineScaleSetPublicIPAddress_200_response::getZones() const {
    return m_zones;
}
void OAIPublicIPAddresses_GetVirtualMachineScaleSetPublicIPAddress_200_response::setZones(const QList<QString> &zones) {
    m_zones = zones;
    m_zones_isSet = true;
}

bool OAIPublicIPAddresses_GetVirtualMachineScaleSetPublicIPAddress_200_response::is_zones_Set() const{
    return m_zones_isSet;
}

bool OAIPublicIPAddresses_GetVirtualMachineScaleSetPublicIPAddress_200_response::is_zones_Valid() const{
    return m_zones_isValid;
}

QString OAIPublicIPAddresses_GetVirtualMachineScaleSetPublicIPAddress_200_response::getId() const {
    return m_id;
}
void OAIPublicIPAddresses_GetVirtualMachineScaleSetPublicIPAddress_200_response::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIPublicIPAddresses_GetVirtualMachineScaleSetPublicIPAddress_200_response::is_id_Set() const{
    return m_id_isSet;
}

bool OAIPublicIPAddresses_GetVirtualMachineScaleSetPublicIPAddress_200_response::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIPublicIPAddresses_GetVirtualMachineScaleSetPublicIPAddress_200_response::getLocation() const {
    return m_location;
}
void OAIPublicIPAddresses_GetVirtualMachineScaleSetPublicIPAddress_200_response::setLocation(const QString &location) {
    m_location = location;
    m_location_isSet = true;
}

bool OAIPublicIPAddresses_GetVirtualMachineScaleSetPublicIPAddress_200_response::is_location_Set() const{
    return m_location_isSet;
}

bool OAIPublicIPAddresses_GetVirtualMachineScaleSetPublicIPAddress_200_response::is_location_Valid() const{
    return m_location_isValid;
}

QString OAIPublicIPAddresses_GetVirtualMachineScaleSetPublicIPAddress_200_response::getName() const {
    return m_name;
}
void OAIPublicIPAddresses_GetVirtualMachineScaleSetPublicIPAddress_200_response::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIPublicIPAddresses_GetVirtualMachineScaleSetPublicIPAddress_200_response::is_name_Set() const{
    return m_name_isSet;
}

bool OAIPublicIPAddresses_GetVirtualMachineScaleSetPublicIPAddress_200_response::is_name_Valid() const{
    return m_name_isValid;
}

QMap<QString, QString> OAIPublicIPAddresses_GetVirtualMachineScaleSetPublicIPAddress_200_response::getTags() const {
    return m_tags;
}
void OAIPublicIPAddresses_GetVirtualMachineScaleSetPublicIPAddress_200_response::setTags(const QMap<QString, QString> &tags) {
    m_tags = tags;
    m_tags_isSet = true;
}

bool OAIPublicIPAddresses_GetVirtualMachineScaleSetPublicIPAddress_200_response::is_tags_Set() const{
    return m_tags_isSet;
}

bool OAIPublicIPAddresses_GetVirtualMachineScaleSetPublicIPAddress_200_response::is_tags_Valid() const{
    return m_tags_isValid;
}

QString OAIPublicIPAddresses_GetVirtualMachineScaleSetPublicIPAddress_200_response::getType() const {
    return m_type;
}
void OAIPublicIPAddresses_GetVirtualMachineScaleSetPublicIPAddress_200_response::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIPublicIPAddresses_GetVirtualMachineScaleSetPublicIPAddress_200_response::is_type_Set() const{
    return m_type_isSet;
}

bool OAIPublicIPAddresses_GetVirtualMachineScaleSetPublicIPAddress_200_response::is_type_Valid() const{
    return m_type_isValid;
}

bool OAIPublicIPAddresses_GetVirtualMachineScaleSetPublicIPAddress_200_response::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_etag_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_properties_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sku.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_zones.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_location_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tags.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPublicIPAddresses_GetVirtualMachineScaleSetPublicIPAddress_200_response::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
