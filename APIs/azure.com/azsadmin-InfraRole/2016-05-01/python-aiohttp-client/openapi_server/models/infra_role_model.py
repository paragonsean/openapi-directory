# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class InfraRoleModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, display_name: str=None, instances: List[str]=None, restartable: bool=None):
        """InfraRoleModel - a model defined in OpenAPI

        :param display_name: The display_name of this InfraRoleModel.
        :param instances: The instances of this InfraRoleModel.
        :param restartable: The restartable of this InfraRoleModel.
        """
        self.openapi_types = {
            'display_name': str,
            'instances': List[str],
            'restartable': bool
        }

        self.attribute_map = {
            'display_name': 'displayName',
            'instances': 'instances',
            'restartable': 'restartable'
        }

        self._display_name = display_name
        self._instances = instances
        self._restartable = restartable

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InfraRoleModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InfraRoleModel of this InfraRoleModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def display_name(self):
        """Gets the display_name of this InfraRoleModel.

        Display name for the infrastructure role.

        :return: The display_name of this InfraRoleModel.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this InfraRoleModel.

        Display name for the infrastructure role.

        :param display_name: The display_name of this InfraRoleModel.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def instances(self):
        """Gets the instances of this InfraRoleModel.

        List of infrastructure role instances.

        :return: The instances of this InfraRoleModel.
        :rtype: List[str]
        """
        return self._instances

    @instances.setter
    def instances(self, instances):
        """Sets the instances of this InfraRoleModel.

        List of infrastructure role instances.

        :param instances: The instances of this InfraRoleModel.
        :type instances: List[str]
        """

        self._instances = instances

    @property
    def restartable(self):
        """Gets the restartable of this InfraRoleModel.

        Value indicating whether the infrastructure role can be restarted.

        :return: The restartable of this InfraRoleModel.
        :rtype: bool
        """
        return self._restartable

    @restartable.setter
    def restartable(self, restartable):
        """Sets the restartable of this InfraRoleModel.

        Value indicating whether the infrastructure role can be restarted.

        :param restartable: The restartable of this InfraRoleModel.
        :type restartable: bool
        """

        self._restartable = restartable
