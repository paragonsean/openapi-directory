/**
 * AutomationManagement
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-06-30
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ContentLink from './ContentLink';
import ModuleErrorInfo from './ModuleErrorInfo';

/**
 * The ModuleProperties model module.
 * @module model/ModuleProperties
 * @version 2018-06-30
 */
class ModuleProperties {
    /**
     * Constructs a new <code>ModuleProperties</code>.
     * Definition of the module property type.
     * @alias module:model/ModuleProperties
     */
    constructor() { 
        
        ModuleProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ModuleProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ModuleProperties} obj Optional instance to populate.
     * @return {module:model/ModuleProperties} The populated <code>ModuleProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ModuleProperties();

            if (data.hasOwnProperty('activityCount')) {
                obj['activityCount'] = ApiClient.convertToType(data['activityCount'], 'Number');
            }
            if (data.hasOwnProperty('contentLink')) {
                obj['contentLink'] = ContentLink.constructFromObject(data['contentLink']);
            }
            if (data.hasOwnProperty('creationTime')) {
                obj['creationTime'] = ApiClient.convertToType(data['creationTime'], 'Date');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('error')) {
                obj['error'] = ModuleErrorInfo.constructFromObject(data['error']);
            }
            if (data.hasOwnProperty('isComposite')) {
                obj['isComposite'] = ApiClient.convertToType(data['isComposite'], 'Boolean');
            }
            if (data.hasOwnProperty('isGlobal')) {
                obj['isGlobal'] = ApiClient.convertToType(data['isGlobal'], 'Boolean');
            }
            if (data.hasOwnProperty('lastModifiedTime')) {
                obj['lastModifiedTime'] = ApiClient.convertToType(data['lastModifiedTime'], 'Date');
            }
            if (data.hasOwnProperty('provisioningState')) {
                obj['provisioningState'] = ApiClient.convertToType(data['provisioningState'], 'String');
            }
            if (data.hasOwnProperty('sizeInBytes')) {
                obj['sizeInBytes'] = ApiClient.convertToType(data['sizeInBytes'], 'Number');
            }
            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ModuleProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ModuleProperties</code>.
     */
    static validateJSON(data) {
        // validate the optional field `contentLink`
        if (data['contentLink']) { // data not null
          ContentLink.validateJSON(data['contentLink']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // validate the optional field `error`
        if (data['error']) { // data not null
          ModuleErrorInfo.validateJSON(data['error']);
        }
        // ensure the json data is a string
        if (data['provisioningState'] && !(typeof data['provisioningState'] === 'string' || data['provisioningState'] instanceof String)) {
            throw new Error("Expected the field `provisioningState` to be a primitive type in the JSON string but got " + data['provisioningState']);
        }
        // ensure the json data is a string
        if (data['version'] && !(typeof data['version'] === 'string' || data['version'] instanceof String)) {
            throw new Error("Expected the field `version` to be a primitive type in the JSON string but got " + data['version']);
        }

        return true;
    }


}



/**
 * Gets or sets the activity count of the module.
 * @member {Number} activityCount
 */
ModuleProperties.prototype['activityCount'] = undefined;

/**
 * @member {module:model/ContentLink} contentLink
 */
ModuleProperties.prototype['contentLink'] = undefined;

/**
 * Gets or sets the creation time.
 * @member {Date} creationTime
 */
ModuleProperties.prototype['creationTime'] = undefined;

/**
 * Gets or sets the description.
 * @member {String} description
 */
ModuleProperties.prototype['description'] = undefined;

/**
 * @member {module:model/ModuleErrorInfo} error
 */
ModuleProperties.prototype['error'] = undefined;

/**
 * Gets or sets type of module, if its composite or not.
 * @member {Boolean} isComposite
 */
ModuleProperties.prototype['isComposite'] = undefined;

/**
 * Gets or sets the isGlobal flag of the module.
 * @member {Boolean} isGlobal
 */
ModuleProperties.prototype['isGlobal'] = undefined;

/**
 * Gets or sets the last modified time.
 * @member {Date} lastModifiedTime
 */
ModuleProperties.prototype['lastModifiedTime'] = undefined;

/**
 * Gets or sets the provisioning state of the module.
 * @member {module:model/ModuleProperties.ProvisioningStateEnum} provisioningState
 */
ModuleProperties.prototype['provisioningState'] = undefined;

/**
 * Gets or sets the size in bytes of the module.
 * @member {Number} sizeInBytes
 */
ModuleProperties.prototype['sizeInBytes'] = undefined;

/**
 * Gets or sets the version of the module.
 * @member {String} version
 */
ModuleProperties.prototype['version'] = undefined;





/**
 * Allowed values for the <code>provisioningState</code> property.
 * @enum {String}
 * @readonly
 */
ModuleProperties['ProvisioningStateEnum'] = {

    /**
     * value: "Created"
     * @const
     */
    "Created": "Created",

    /**
     * value: "Creating"
     * @const
     */
    "Creating": "Creating",

    /**
     * value: "StartingImportModuleRunbook"
     * @const
     */
    "StartingImportModuleRunbook": "StartingImportModuleRunbook",

    /**
     * value: "RunningImportModuleRunbook"
     * @const
     */
    "RunningImportModuleRunbook": "RunningImportModuleRunbook",

    /**
     * value: "ContentRetrieved"
     * @const
     */
    "ContentRetrieved": "ContentRetrieved",

    /**
     * value: "ContentDownloaded"
     * @const
     */
    "ContentDownloaded": "ContentDownloaded",

    /**
     * value: "ContentValidated"
     * @const
     */
    "ContentValidated": "ContentValidated",

    /**
     * value: "ConnectionTypeImported"
     * @const
     */
    "ConnectionTypeImported": "ConnectionTypeImported",

    /**
     * value: "ContentStored"
     * @const
     */
    "ContentStored": "ContentStored",

    /**
     * value: "ModuleDataStored"
     * @const
     */
    "ModuleDataStored": "ModuleDataStored",

    /**
     * value: "ActivitiesStored"
     * @const
     */
    "ActivitiesStored": "ActivitiesStored",

    /**
     * value: "ModuleImportRunbookComplete"
     * @const
     */
    "ModuleImportRunbookComplete": "ModuleImportRunbookComplete",

    /**
     * value: "Succeeded"
     * @const
     */
    "Succeeded": "Succeeded",

    /**
     * value: "Failed"
     * @const
     */
    "Failed": "Failed",

    /**
     * value: "Cancelled"
     * @const
     */
    "Cancelled": "Cancelled",

    /**
     * value: "Updating"
     * @const
     */
    "Updating": "Updating"
};



export default ModuleProperties;

