/**
 * AutomationManagement
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-06-30
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Module from '../model/Module';
import ModuleListResult from '../model/ModuleListResult';
import Python2PackageListByAutomationAccountDefaultResponse from '../model/Python2PackageListByAutomationAccountDefaultResponse';
import PythonPackageCreateParameters from '../model/PythonPackageCreateParameters';
import PythonPackageUpdateParameters from '../model/PythonPackageUpdateParameters';

/**
* Python2Package service.
* @module api/Python2PackageApi
* @version 2018-06-30
*/
export default class Python2PackageApi {

    /**
    * Constructs a new Python2PackageApi. 
    * @alias module:api/Python2PackageApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the python2PackageCreateOrUpdate operation.
     * @callback module:api/Python2PackageApi~python2PackageCreateOrUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Module} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create or Update the python 2 package identified by package name.
     * @param {String} resourceGroupName Name of an Azure Resource group.
     * @param {String} automationAccountName The name of the automation account.
     * @param {String} packageName The name of python package.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} apiVersion Client Api Version.
     * @param {module:model/PythonPackageCreateParameters} parameters The create or update parameters for python package.
     * @param {module:api/Python2PackageApi~python2PackageCreateOrUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Module}
     */
    python2PackageCreateOrUpdate(resourceGroupName, automationAccountName, packageName, subscriptionId, apiVersion, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling python2PackageCreateOrUpdate");
      }
      // verify the required parameter 'automationAccountName' is set
      if (automationAccountName === undefined || automationAccountName === null) {
        throw new Error("Missing the required parameter 'automationAccountName' when calling python2PackageCreateOrUpdate");
      }
      // verify the required parameter 'packageName' is set
      if (packageName === undefined || packageName === null) {
        throw new Error("Missing the required parameter 'packageName' when calling python2PackageCreateOrUpdate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling python2PackageCreateOrUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling python2PackageCreateOrUpdate");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling python2PackageCreateOrUpdate");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'automationAccountName': automationAccountName,
        'packageName': packageName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Module;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/python2Packages/{packageName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the python2PackageDelete operation.
     * @callback module:api/Python2PackageApi~python2PackageDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete the python 2 package by name.
     * @param {String} resourceGroupName Name of an Azure Resource group.
     * @param {String} automationAccountName The name of the automation account.
     * @param {String} packageName The python package name.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} apiVersion Client Api Version.
     * @param {module:api/Python2PackageApi~python2PackageDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    python2PackageDelete(resourceGroupName, automationAccountName, packageName, subscriptionId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling python2PackageDelete");
      }
      // verify the required parameter 'automationAccountName' is set
      if (automationAccountName === undefined || automationAccountName === null) {
        throw new Error("Missing the required parameter 'automationAccountName' when calling python2PackageDelete");
      }
      // verify the required parameter 'packageName' is set
      if (packageName === undefined || packageName === null) {
        throw new Error("Missing the required parameter 'packageName' when calling python2PackageDelete");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling python2PackageDelete");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling python2PackageDelete");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'automationAccountName': automationAccountName,
        'packageName': packageName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/python2Packages/{packageName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the python2PackageGet operation.
     * @callback module:api/Python2PackageApi~python2PackageGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Module} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve the python 2 package identified by package name.
     * @param {String} resourceGroupName Name of an Azure Resource group.
     * @param {String} automationAccountName The name of the automation account.
     * @param {String} packageName The python package name.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} apiVersion Client Api Version.
     * @param {module:api/Python2PackageApi~python2PackageGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Module}
     */
    python2PackageGet(resourceGroupName, automationAccountName, packageName, subscriptionId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling python2PackageGet");
      }
      // verify the required parameter 'automationAccountName' is set
      if (automationAccountName === undefined || automationAccountName === null) {
        throw new Error("Missing the required parameter 'automationAccountName' when calling python2PackageGet");
      }
      // verify the required parameter 'packageName' is set
      if (packageName === undefined || packageName === null) {
        throw new Error("Missing the required parameter 'packageName' when calling python2PackageGet");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling python2PackageGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling python2PackageGet");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'automationAccountName': automationAccountName,
        'packageName': packageName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Module;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/python2Packages/{packageName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the python2PackageListByAutomationAccount operation.
     * @callback module:api/Python2PackageApi~python2PackageListByAutomationAccountCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ModuleListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve a list of python 2 packages.
     * @param {String} resourceGroupName Name of an Azure Resource group.
     * @param {String} automationAccountName The name of the automation account.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} apiVersion Client Api Version.
     * @param {module:api/Python2PackageApi~python2PackageListByAutomationAccountCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ModuleListResult}
     */
    python2PackageListByAutomationAccount(resourceGroupName, automationAccountName, subscriptionId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling python2PackageListByAutomationAccount");
      }
      // verify the required parameter 'automationAccountName' is set
      if (automationAccountName === undefined || automationAccountName === null) {
        throw new Error("Missing the required parameter 'automationAccountName' when calling python2PackageListByAutomationAccount");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling python2PackageListByAutomationAccount");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling python2PackageListByAutomationAccount");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'automationAccountName': automationAccountName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ModuleListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/python2Packages', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the python2PackageUpdate operation.
     * @callback module:api/Python2PackageApi~python2PackageUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Module} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update the python 2 package identified by package name.
     * @param {String} resourceGroupName Name of an Azure Resource group.
     * @param {String} automationAccountName The name of the automation account.
     * @param {String} packageName The name of python package.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} apiVersion Client Api Version.
     * @param {module:model/PythonPackageUpdateParameters} parameters The update parameters for python package.
     * @param {module:api/Python2PackageApi~python2PackageUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Module}
     */
    python2PackageUpdate(resourceGroupName, automationAccountName, packageName, subscriptionId, apiVersion, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling python2PackageUpdate");
      }
      // verify the required parameter 'automationAccountName' is set
      if (automationAccountName === undefined || automationAccountName === null) {
        throw new Error("Missing the required parameter 'automationAccountName' when calling python2PackageUpdate");
      }
      // verify the required parameter 'packageName' is set
      if (packageName === undefined || packageName === null) {
        throw new Error("Missing the required parameter 'packageName' when calling python2PackageUpdate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling python2PackageUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling python2PackageUpdate");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling python2PackageUpdate");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'automationAccountName': automationAccountName,
        'packageName': packageName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Module;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/python2Packages/{packageName}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
