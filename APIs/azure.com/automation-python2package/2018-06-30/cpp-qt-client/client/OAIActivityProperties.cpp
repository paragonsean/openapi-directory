/**
 * AutomationManagement
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-06-30
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIActivityProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIActivityProperties::OAIActivityProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIActivityProperties::OAIActivityProperties() {
    this->initializeModel();
}

OAIActivityProperties::~OAIActivityProperties() {}

void OAIActivityProperties::initializeModel() {

    m_creation_time_isSet = false;
    m_creation_time_isValid = false;

    m_definition_isSet = false;
    m_definition_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_last_modified_time_isSet = false;
    m_last_modified_time_isValid = false;

    m_output_types_isSet = false;
    m_output_types_isValid = false;

    m_parameter_sets_isSet = false;
    m_parameter_sets_isValid = false;
}

void OAIActivityProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIActivityProperties::fromJsonObject(QJsonObject json) {

    m_creation_time_isValid = ::OpenAPI::fromJsonValue(m_creation_time, json[QString("creationTime")]);
    m_creation_time_isSet = !json[QString("creationTime")].isNull() && m_creation_time_isValid;

    m_definition_isValid = ::OpenAPI::fromJsonValue(m_definition, json[QString("definition")]);
    m_definition_isSet = !json[QString("definition")].isNull() && m_definition_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_last_modified_time_isValid = ::OpenAPI::fromJsonValue(m_last_modified_time, json[QString("lastModifiedTime")]);
    m_last_modified_time_isSet = !json[QString("lastModifiedTime")].isNull() && m_last_modified_time_isValid;

    m_output_types_isValid = ::OpenAPI::fromJsonValue(m_output_types, json[QString("outputTypes")]);
    m_output_types_isSet = !json[QString("outputTypes")].isNull() && m_output_types_isValid;

    m_parameter_sets_isValid = ::OpenAPI::fromJsonValue(m_parameter_sets, json[QString("parameterSets")]);
    m_parameter_sets_isSet = !json[QString("parameterSets")].isNull() && m_parameter_sets_isValid;
}

QString OAIActivityProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIActivityProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_creation_time_isSet) {
        obj.insert(QString("creationTime"), ::OpenAPI::toJsonValue(m_creation_time));
    }
    if (m_definition_isSet) {
        obj.insert(QString("definition"), ::OpenAPI::toJsonValue(m_definition));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_last_modified_time_isSet) {
        obj.insert(QString("lastModifiedTime"), ::OpenAPI::toJsonValue(m_last_modified_time));
    }
    if (m_output_types.size() > 0) {
        obj.insert(QString("outputTypes"), ::OpenAPI::toJsonValue(m_output_types));
    }
    if (m_parameter_sets.size() > 0) {
        obj.insert(QString("parameterSets"), ::OpenAPI::toJsonValue(m_parameter_sets));
    }
    return obj;
}

QDateTime OAIActivityProperties::getCreationTime() const {
    return m_creation_time;
}
void OAIActivityProperties::setCreationTime(const QDateTime &creation_time) {
    m_creation_time = creation_time;
    m_creation_time_isSet = true;
}

bool OAIActivityProperties::is_creation_time_Set() const{
    return m_creation_time_isSet;
}

bool OAIActivityProperties::is_creation_time_Valid() const{
    return m_creation_time_isValid;
}

QString OAIActivityProperties::getDefinition() const {
    return m_definition;
}
void OAIActivityProperties::setDefinition(const QString &definition) {
    m_definition = definition;
    m_definition_isSet = true;
}

bool OAIActivityProperties::is_definition_Set() const{
    return m_definition_isSet;
}

bool OAIActivityProperties::is_definition_Valid() const{
    return m_definition_isValid;
}

QString OAIActivityProperties::getDescription() const {
    return m_description;
}
void OAIActivityProperties::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIActivityProperties::is_description_Set() const{
    return m_description_isSet;
}

bool OAIActivityProperties::is_description_Valid() const{
    return m_description_isValid;
}

QDateTime OAIActivityProperties::getLastModifiedTime() const {
    return m_last_modified_time;
}
void OAIActivityProperties::setLastModifiedTime(const QDateTime &last_modified_time) {
    m_last_modified_time = last_modified_time;
    m_last_modified_time_isSet = true;
}

bool OAIActivityProperties::is_last_modified_time_Set() const{
    return m_last_modified_time_isSet;
}

bool OAIActivityProperties::is_last_modified_time_Valid() const{
    return m_last_modified_time_isValid;
}

QList<OAIActivityOutputType> OAIActivityProperties::getOutputTypes() const {
    return m_output_types;
}
void OAIActivityProperties::setOutputTypes(const QList<OAIActivityOutputType> &output_types) {
    m_output_types = output_types;
    m_output_types_isSet = true;
}

bool OAIActivityProperties::is_output_types_Set() const{
    return m_output_types_isSet;
}

bool OAIActivityProperties::is_output_types_Valid() const{
    return m_output_types_isValid;
}

QList<OAIActivityParameterSet> OAIActivityProperties::getParameterSets() const {
    return m_parameter_sets;
}
void OAIActivityProperties::setParameterSets(const QList<OAIActivityParameterSet> &parameter_sets) {
    m_parameter_sets = parameter_sets;
    m_parameter_sets_isSet = true;
}

bool OAIActivityProperties::is_parameter_sets_Set() const{
    return m_parameter_sets_isSet;
}

bool OAIActivityProperties::is_parameter_sets_Valid() const{
    return m_parameter_sets_isValid;
}

bool OAIActivityProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_creation_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_definition_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_output_types.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_parameter_sets.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIActivityProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
