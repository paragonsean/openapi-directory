/**
 * AutomationManagement
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2015-10-31
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The WatcherProperties model module.
 * @module model/WatcherProperties
 * @version 2015-10-31
 */
class WatcherProperties {
    /**
     * Constructs a new <code>WatcherProperties</code>.
     * Definition of the watcher properties
     * @alias module:model/WatcherProperties
     */
    constructor() { 
        
        WatcherProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>WatcherProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WatcherProperties} obj Optional instance to populate.
     * @return {module:model/WatcherProperties} The populated <code>WatcherProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WatcherProperties();

            if (data.hasOwnProperty('creationTime')) {
                obj['creationTime'] = ApiClient.convertToType(data['creationTime'], 'Date');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('executionFrequencyInSeconds')) {
                obj['executionFrequencyInSeconds'] = ApiClient.convertToType(data['executionFrequencyInSeconds'], 'Number');
            }
            if (data.hasOwnProperty('lastModifiedBy')) {
                obj['lastModifiedBy'] = ApiClient.convertToType(data['lastModifiedBy'], 'String');
            }
            if (data.hasOwnProperty('lastModifiedTime')) {
                obj['lastModifiedTime'] = ApiClient.convertToType(data['lastModifiedTime'], 'Date');
            }
            if (data.hasOwnProperty('scriptName')) {
                obj['scriptName'] = ApiClient.convertToType(data['scriptName'], 'String');
            }
            if (data.hasOwnProperty('scriptParameters')) {
                obj['scriptParameters'] = ApiClient.convertToType(data['scriptParameters'], {'String': 'String'});
            }
            if (data.hasOwnProperty('scriptRunOn')) {
                obj['scriptRunOn'] = ApiClient.convertToType(data['scriptRunOn'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WatcherProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WatcherProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['lastModifiedBy'] && !(typeof data['lastModifiedBy'] === 'string' || data['lastModifiedBy'] instanceof String)) {
            throw new Error("Expected the field `lastModifiedBy` to be a primitive type in the JSON string but got " + data['lastModifiedBy']);
        }
        // ensure the json data is a string
        if (data['scriptName'] && !(typeof data['scriptName'] === 'string' || data['scriptName'] instanceof String)) {
            throw new Error("Expected the field `scriptName` to be a primitive type in the JSON string but got " + data['scriptName']);
        }
        // ensure the json data is a string
        if (data['scriptRunOn'] && !(typeof data['scriptRunOn'] === 'string' || data['scriptRunOn'] instanceof String)) {
            throw new Error("Expected the field `scriptRunOn` to be a primitive type in the JSON string but got " + data['scriptRunOn']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }

        return true;
    }


}



/**
 * Gets or sets the creation time.
 * @member {Date} creationTime
 */
WatcherProperties.prototype['creationTime'] = undefined;

/**
 * Gets or sets the description.
 * @member {String} description
 */
WatcherProperties.prototype['description'] = undefined;

/**
 * Gets or sets the frequency at which the watcher is invoked.
 * @member {Number} executionFrequencyInSeconds
 */
WatcherProperties.prototype['executionFrequencyInSeconds'] = undefined;

/**
 * Details of the user who last modified the watcher.
 * @member {String} lastModifiedBy
 */
WatcherProperties.prototype['lastModifiedBy'] = undefined;

/**
 * Gets or sets the last modified time.
 * @member {Date} lastModifiedTime
 */
WatcherProperties.prototype['lastModifiedTime'] = undefined;

/**
 * Gets or sets the name of the script the watcher is attached to, i.e. the name of an existing runbook.
 * @member {String} scriptName
 */
WatcherProperties.prototype['scriptName'] = undefined;

/**
 * Gets or sets the parameters of the script.
 * @member {Object.<String, String>} scriptParameters
 */
WatcherProperties.prototype['scriptParameters'] = undefined;

/**
 * Gets or sets the name of the hybrid worker group the watcher will run on.
 * @member {String} scriptRunOn
 */
WatcherProperties.prototype['scriptRunOn'] = undefined;

/**
 * Gets the current status of the watcher.
 * @member {String} status
 */
WatcherProperties.prototype['status'] = undefined;






export default WatcherProperties;

