/*
 * AutomationManagement
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2015-10-31
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Watcher;
import org.openapitools.client.model.WatcherListByAutomationAccountDefaultResponse;
import org.openapitools.client.model.WatcherListResult;
import org.openapitools.client.model.WatcherUpdateParameters;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for WatcherApi
 */
@Disabled
public class WatcherApiTest {

    private final WatcherApi api = new WatcherApi();

    /**
     * Create the watcher identified by watcher name.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void watcherCreateOrUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String automationAccountName = null;
        String watcherName = null;
        String subscriptionId = null;
        String apiVersion = null;
        Watcher parameters = null;
        Watcher response = api.watcherCreateOrUpdate(resourceGroupName, automationAccountName, watcherName, subscriptionId, apiVersion, parameters);
        // TODO: test validations
    }

    /**
     * Delete the watcher by name.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void watcherDeleteTest() throws ApiException {
        String resourceGroupName = null;
        String automationAccountName = null;
        String watcherName = null;
        String subscriptionId = null;
        String apiVersion = null;
        api.watcherDelete(resourceGroupName, automationAccountName, watcherName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Retrieve the watcher identified by watcher name.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void watcherGetTest() throws ApiException {
        String resourceGroupName = null;
        String automationAccountName = null;
        String watcherName = null;
        String subscriptionId = null;
        String apiVersion = null;
        Watcher response = api.watcherGet(resourceGroupName, automationAccountName, watcherName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Retrieve a list of watchers.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void watcherListByAutomationAccountTest() throws ApiException {
        String resourceGroupName = null;
        String automationAccountName = null;
        String subscriptionId = null;
        String apiVersion = null;
        String $filter = null;
        WatcherListResult response = api.watcherListByAutomationAccount(resourceGroupName, automationAccountName, subscriptionId, apiVersion, $filter);
        // TODO: test validations
    }

    /**
     * Resume the watcher identified by watcher name.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void watcherStartTest() throws ApiException {
        String resourceGroupName = null;
        String automationAccountName = null;
        String watcherName = null;
        String subscriptionId = null;
        String apiVersion = null;
        api.watcherStart(resourceGroupName, automationAccountName, watcherName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Resume the watcher identified by watcher name.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void watcherStopTest() throws ApiException {
        String resourceGroupName = null;
        String automationAccountName = null;
        String watcherName = null;
        String subscriptionId = null;
        String apiVersion = null;
        api.watcherStop(resourceGroupName, automationAccountName, watcherName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Update the watcher identified by watcher name.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void watcherUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String automationAccountName = null;
        String watcherName = null;
        String subscriptionId = null;
        String apiVersion = null;
        WatcherUpdateParameters parameters = null;
        Watcher response = api.watcherUpdate(resourceGroupName, automationAccountName, watcherName, subscriptionId, apiVersion, parameters);
        // TODO: test validations
    }

}
