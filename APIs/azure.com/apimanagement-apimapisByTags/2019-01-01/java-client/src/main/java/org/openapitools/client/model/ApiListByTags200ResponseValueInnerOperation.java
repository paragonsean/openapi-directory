/*
 * ApiManagementClient
 * Use these REST APIs for performing retrieve a collection of Apis associated with a tag in Azure API Management deployment.
 *
 * The version of the OpenAPI document: 2019-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Operation Entity contract Properties.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:23:11.069693-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ApiListByTags200ResponseValueInnerOperation {
  public static final String SERIALIZED_NAME_API_NAME = "apiName";
  @SerializedName(SERIALIZED_NAME_API_NAME)
  private String apiName;

  public static final String SERIALIZED_NAME_API_REVISION = "apiRevision";
  @SerializedName(SERIALIZED_NAME_API_REVISION)
  private String apiRevision;

  public static final String SERIALIZED_NAME_API_VERSION = "apiVersion";
  @SerializedName(SERIALIZED_NAME_API_VERSION)
  private String apiVersion;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_METHOD = "method";
  @SerializedName(SERIALIZED_NAME_METHOD)
  private String method;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_URL_TEMPLATE = "urlTemplate";
  @SerializedName(SERIALIZED_NAME_URL_TEMPLATE)
  private String urlTemplate;

  public ApiListByTags200ResponseValueInnerOperation() {
  }

  public ApiListByTags200ResponseValueInnerOperation(
     String apiName, 
     String apiRevision, 
     String apiVersion, 
     String description, 
     String method, 
     String name, 
     String urlTemplate
  ) {
    this();
    this.apiName = apiName;
    this.apiRevision = apiRevision;
    this.apiVersion = apiVersion;
    this.description = description;
    this.method = method;
    this.name = name;
    this.urlTemplate = urlTemplate;
  }

  /**
   * Api Name.
   * @return apiName
   */
  @javax.annotation.Nullable
  public String getApiName() {
    return apiName;
  }



  /**
   * Api Revision.
   * @return apiRevision
   */
  @javax.annotation.Nullable
  public String getApiRevision() {
    return apiRevision;
  }



  /**
   * Api Version.
   * @return apiVersion
   */
  @javax.annotation.Nullable
  public String getApiVersion() {
    return apiVersion;
  }



  /**
   * Operation Description.
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }



  public ApiListByTags200ResponseValueInnerOperation id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Identifier of the operation in form /operations/{operationId}.
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  /**
   * A Valid HTTP Operation Method. Typical Http Methods like GET, PUT, POST but not limited by only them.
   * @return method
   */
  @javax.annotation.Nullable
  public String getMethod() {
    return method;
  }



  /**
   * Operation name.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }



  /**
   * Relative URL template identifying the target resource for this operation. May include parameters. Example: /customers/{cid}/orders/{oid}/?date&#x3D;{date}
   * @return urlTemplate
   */
  @javax.annotation.Nullable
  public String getUrlTemplate() {
    return urlTemplate;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApiListByTags200ResponseValueInnerOperation apiListByTags200ResponseValueInnerOperation = (ApiListByTags200ResponseValueInnerOperation) o;
    return Objects.equals(this.apiName, apiListByTags200ResponseValueInnerOperation.apiName) &&
        Objects.equals(this.apiRevision, apiListByTags200ResponseValueInnerOperation.apiRevision) &&
        Objects.equals(this.apiVersion, apiListByTags200ResponseValueInnerOperation.apiVersion) &&
        Objects.equals(this.description, apiListByTags200ResponseValueInnerOperation.description) &&
        Objects.equals(this.id, apiListByTags200ResponseValueInnerOperation.id) &&
        Objects.equals(this.method, apiListByTags200ResponseValueInnerOperation.method) &&
        Objects.equals(this.name, apiListByTags200ResponseValueInnerOperation.name) &&
        Objects.equals(this.urlTemplate, apiListByTags200ResponseValueInnerOperation.urlTemplate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(apiName, apiRevision, apiVersion, description, id, method, name, urlTemplate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApiListByTags200ResponseValueInnerOperation {\n");
    sb.append("    apiName: ").append(toIndentedString(apiName)).append("\n");
    sb.append("    apiRevision: ").append(toIndentedString(apiRevision)).append("\n");
    sb.append("    apiVersion: ").append(toIndentedString(apiVersion)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    method: ").append(toIndentedString(method)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    urlTemplate: ").append(toIndentedString(urlTemplate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("apiName");
    openapiFields.add("apiRevision");
    openapiFields.add("apiVersion");
    openapiFields.add("description");
    openapiFields.add("id");
    openapiFields.add("method");
    openapiFields.add("name");
    openapiFields.add("urlTemplate");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ApiListByTags200ResponseValueInnerOperation
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ApiListByTags200ResponseValueInnerOperation.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ApiListByTags200ResponseValueInnerOperation is not found in the empty JSON string", ApiListByTags200ResponseValueInnerOperation.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ApiListByTags200ResponseValueInnerOperation.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ApiListByTags200ResponseValueInnerOperation` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("apiName") != null && !jsonObj.get("apiName").isJsonNull()) && !jsonObj.get("apiName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `apiName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("apiName").toString()));
      }
      if ((jsonObj.get("apiRevision") != null && !jsonObj.get("apiRevision").isJsonNull()) && !jsonObj.get("apiRevision").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `apiRevision` to be a primitive type in the JSON string but got `%s`", jsonObj.get("apiRevision").toString()));
      }
      if ((jsonObj.get("apiVersion") != null && !jsonObj.get("apiVersion").isJsonNull()) && !jsonObj.get("apiVersion").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `apiVersion` to be a primitive type in the JSON string but got `%s`", jsonObj.get("apiVersion").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("method") != null && !jsonObj.get("method").isJsonNull()) && !jsonObj.get("method").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `method` to be a primitive type in the JSON string but got `%s`", jsonObj.get("method").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("urlTemplate") != null && !jsonObj.get("urlTemplate").isJsonNull()) && !jsonObj.get("urlTemplate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `urlTemplate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("urlTemplate").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ApiListByTags200ResponseValueInnerOperation.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ApiListByTags200ResponseValueInnerOperation' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ApiListByTags200ResponseValueInnerOperation> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ApiListByTags200ResponseValueInnerOperation.class));

       return (TypeAdapter<T>) new TypeAdapter<ApiListByTags200ResponseValueInnerOperation>() {
           @Override
           public void write(JsonWriter out, ApiListByTags200ResponseValueInnerOperation value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ApiListByTags200ResponseValueInnerOperation read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ApiListByTags200ResponseValueInnerOperation given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ApiListByTags200ResponseValueInnerOperation
   * @throws IOException if the JSON string is invalid with respect to ApiListByTags200ResponseValueInnerOperation
   */
  public static ApiListByTags200ResponseValueInnerOperation fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ApiListByTags200ResponseValueInnerOperation.class);
  }

  /**
   * Convert an instance of ApiListByTags200ResponseValueInnerOperation to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

