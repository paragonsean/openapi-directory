# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.api_list_by_tags200_response_value_inner_api import ApiListByTags200ResponseValueInnerApi
from openapi_server.models.api_list_by_tags200_response_value_inner_operation import ApiListByTags200ResponseValueInnerOperation
from openapi_server.models.api_list_by_tags200_response_value_inner_product import ApiListByTags200ResponseValueInnerProduct
from openapi_server.models.api_list_by_tags200_response_value_inner_tag import ApiListByTags200ResponseValueInnerTag
from openapi_server import util


class ApiListByTags200ResponseValueInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, api: ApiListByTags200ResponseValueInnerApi=None, operation: ApiListByTags200ResponseValueInnerOperation=None, product: ApiListByTags200ResponseValueInnerProduct=None, tag: ApiListByTags200ResponseValueInnerTag=None):
        """ApiListByTags200ResponseValueInner - a model defined in OpenAPI

        :param api: The api of this ApiListByTags200ResponseValueInner.
        :param operation: The operation of this ApiListByTags200ResponseValueInner.
        :param product: The product of this ApiListByTags200ResponseValueInner.
        :param tag: The tag of this ApiListByTags200ResponseValueInner.
        """
        self.openapi_types = {
            'api': ApiListByTags200ResponseValueInnerApi,
            'operation': ApiListByTags200ResponseValueInnerOperation,
            'product': ApiListByTags200ResponseValueInnerProduct,
            'tag': ApiListByTags200ResponseValueInnerTag
        }

        self.attribute_map = {
            'api': 'api',
            'operation': 'operation',
            'product': 'product',
            'tag': 'tag'
        }

        self._api = api
        self._operation = operation
        self._product = product
        self._tag = tag

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApiListByTags200ResponseValueInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Api_ListByTags_200_response_value_inner of this ApiListByTags200ResponseValueInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def api(self):
        """Gets the api of this ApiListByTags200ResponseValueInner.


        :return: The api of this ApiListByTags200ResponseValueInner.
        :rtype: ApiListByTags200ResponseValueInnerApi
        """
        return self._api

    @api.setter
    def api(self, api):
        """Sets the api of this ApiListByTags200ResponseValueInner.


        :param api: The api of this ApiListByTags200ResponseValueInner.
        :type api: ApiListByTags200ResponseValueInnerApi
        """

        self._api = api

    @property
    def operation(self):
        """Gets the operation of this ApiListByTags200ResponseValueInner.


        :return: The operation of this ApiListByTags200ResponseValueInner.
        :rtype: ApiListByTags200ResponseValueInnerOperation
        """
        return self._operation

    @operation.setter
    def operation(self, operation):
        """Sets the operation of this ApiListByTags200ResponseValueInner.


        :param operation: The operation of this ApiListByTags200ResponseValueInner.
        :type operation: ApiListByTags200ResponseValueInnerOperation
        """

        self._operation = operation

    @property
    def product(self):
        """Gets the product of this ApiListByTags200ResponseValueInner.


        :return: The product of this ApiListByTags200ResponseValueInner.
        :rtype: ApiListByTags200ResponseValueInnerProduct
        """
        return self._product

    @product.setter
    def product(self, product):
        """Sets the product of this ApiListByTags200ResponseValueInner.


        :param product: The product of this ApiListByTags200ResponseValueInner.
        :type product: ApiListByTags200ResponseValueInnerProduct
        """

        self._product = product

    @property
    def tag(self):
        """Gets the tag of this ApiListByTags200ResponseValueInner.


        :return: The tag of this ApiListByTags200ResponseValueInner.
        :rtype: ApiListByTags200ResponseValueInnerTag
        """
        return self._tag

    @tag.setter
    def tag(self, tag):
        """Sets the tag of this ApiListByTags200ResponseValueInner.


        :param tag: The tag of this ApiListByTags200ResponseValueInner.
        :type tag: ApiListByTags200ResponseValueInnerTag
        """
        if tag is None:
            raise ValueError("Invalid value for `tag`, must not be `None`")

        self._tag = tag
