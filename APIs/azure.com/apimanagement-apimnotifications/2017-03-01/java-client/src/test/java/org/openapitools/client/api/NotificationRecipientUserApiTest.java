/*
 * ApiManagementClient
 * Use these REST APIs for performing operations on who is going to receive notifications associated with your Azure API Management deployment.
 *
 * The version of the OpenAPI document: 2017-03-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.NotificationGetDefaultResponse;
import org.openapitools.client.model.RecipientUserContract;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for NotificationRecipientUserApi
 */
@Disabled
public class NotificationRecipientUserApiTest {

    private final NotificationRecipientUserApi api = new NotificationRecipientUserApi();

    /**
     * Adds the API Management User to the list of Recipients for the Notification.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void notificationRecipientUserCreateOrUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String serviceName = null;
        String notificationName = null;
        String uid = null;
        String apiVersion = null;
        String subscriptionId = null;
        RecipientUserContract response = api.notificationRecipientUserCreateOrUpdate(resourceGroupName, serviceName, notificationName, uid, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Removes the API Management user from the list of Notification.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void notificationRecipientUserDeleteTest() throws ApiException {
        String resourceGroupName = null;
        String serviceName = null;
        String notificationName = null;
        String uid = null;
        String apiVersion = null;
        String subscriptionId = null;
        api.notificationRecipientUserDelete(resourceGroupName, serviceName, notificationName, uid, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Determine if the Notification Recipient User is subscribed to the notification.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void notificationRecipientUserGetTest() throws ApiException {
        String resourceGroupName = null;
        String serviceName = null;
        String notificationName = null;
        String uid = null;
        String apiVersion = null;
        String subscriptionId = null;
        api.notificationRecipientUserGet(resourceGroupName, serviceName, notificationName, uid, apiVersion, subscriptionId);
        // TODO: test validations
    }

}
