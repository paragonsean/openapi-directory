/*
 * ApiManagementClient
 * Use these REST APIs for performing operations on who is going to receive notifications associated with your Azure API Management deployment.
 *
 * The version of the OpenAPI document: 2019-12-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.NotificationListByServiceDefaultResponse;
import org.openapitools.client.model.NotificationRecipientEmailCreateOrUpdate200Response;
import org.openapitools.client.model.NotificationRecipientEmailListByNotification200Response;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for NotificationRecipientEmailApi
 */
@Disabled
public class NotificationRecipientEmailApiTest {

    private final NotificationRecipientEmailApi api = new NotificationRecipientEmailApi();

    /**
     * Determine if Notification Recipient Email subscribed to the notification.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void notificationRecipientEmailCheckEntityExistsTest() throws ApiException {
        String resourceGroupName = null;
        String serviceName = null;
        String notificationName = null;
        String email = null;
        String apiVersion = null;
        String subscriptionId = null;
        api.notificationRecipientEmailCheckEntityExists(resourceGroupName, serviceName, notificationName, email, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Adds the Email address to the list of Recipients for the Notification.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void notificationRecipientEmailCreateOrUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String serviceName = null;
        String notificationName = null;
        String email = null;
        String apiVersion = null;
        String subscriptionId = null;
        NotificationRecipientEmailCreateOrUpdate200Response response = api.notificationRecipientEmailCreateOrUpdate(resourceGroupName, serviceName, notificationName, email, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Removes the email from the list of Notification.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void notificationRecipientEmailDeleteTest() throws ApiException {
        String resourceGroupName = null;
        String serviceName = null;
        String notificationName = null;
        String email = null;
        String apiVersion = null;
        String subscriptionId = null;
        api.notificationRecipientEmailDelete(resourceGroupName, serviceName, notificationName, email, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Gets the list of the Notification Recipient Emails subscribed to a notification.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void notificationRecipientEmailListByNotificationTest() throws ApiException {
        String resourceGroupName = null;
        String serviceName = null;
        String notificationName = null;
        String apiVersion = null;
        String subscriptionId = null;
        NotificationRecipientEmailListByNotification200Response response = api.notificationRecipientEmailListByNotification(resourceGroupName, serviceName, notificationName, apiVersion, subscriptionId);
        // TODO: test validations
    }

}
