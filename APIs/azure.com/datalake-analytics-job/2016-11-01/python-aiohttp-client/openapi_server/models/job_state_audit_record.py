# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class JobStateAuditRecord(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, details: str=None, new_state: str=None, requested_by_user: str=None, time_stamp: datetime=None):
        """JobStateAuditRecord - a model defined in OpenAPI

        :param details: The details of this JobStateAuditRecord.
        :param new_state: The new_state of this JobStateAuditRecord.
        :param requested_by_user: The requested_by_user of this JobStateAuditRecord.
        :param time_stamp: The time_stamp of this JobStateAuditRecord.
        """
        self.openapi_types = {
            'details': str,
            'new_state': str,
            'requested_by_user': str,
            'time_stamp': datetime
        }

        self.attribute_map = {
            'details': 'details',
            'new_state': 'newState',
            'requested_by_user': 'requestedByUser',
            'time_stamp': 'timeStamp'
        }

        self._details = details
        self._new_state = new_state
        self._requested_by_user = requested_by_user
        self._time_stamp = time_stamp

    @classmethod
    def from_dict(cls, dikt: dict) -> 'JobStateAuditRecord':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The JobStateAuditRecord of this JobStateAuditRecord.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def details(self):
        """Gets the details of this JobStateAuditRecord.

        the details of the audit log.

        :return: The details of this JobStateAuditRecord.
        :rtype: str
        """
        return self._details

    @details.setter
    def details(self, details):
        """Sets the details of this JobStateAuditRecord.

        the details of the audit log.

        :param details: The details of this JobStateAuditRecord.
        :type details: str
        """

        self._details = details

    @property
    def new_state(self):
        """Gets the new_state of this JobStateAuditRecord.

        the new state the job is in.

        :return: The new_state of this JobStateAuditRecord.
        :rtype: str
        """
        return self._new_state

    @new_state.setter
    def new_state(self, new_state):
        """Sets the new_state of this JobStateAuditRecord.

        the new state the job is in.

        :param new_state: The new_state of this JobStateAuditRecord.
        :type new_state: str
        """

        self._new_state = new_state

    @property
    def requested_by_user(self):
        """Gets the requested_by_user of this JobStateAuditRecord.

        the user who requests the change.

        :return: The requested_by_user of this JobStateAuditRecord.
        :rtype: str
        """
        return self._requested_by_user

    @requested_by_user.setter
    def requested_by_user(self, requested_by_user):
        """Sets the requested_by_user of this JobStateAuditRecord.

        the user who requests the change.

        :param requested_by_user: The requested_by_user of this JobStateAuditRecord.
        :type requested_by_user: str
        """

        self._requested_by_user = requested_by_user

    @property
    def time_stamp(self):
        """Gets the time_stamp of this JobStateAuditRecord.

        the time stamp that the state change took place.

        :return: The time_stamp of this JobStateAuditRecord.
        :rtype: datetime
        """
        return self._time_stamp

    @time_stamp.setter
    def time_stamp(self, time_stamp):
        """Sets the time_stamp of this JobStateAuditRecord.

        the time stamp that the state change took place.

        :param time_stamp: The time_stamp of this JobStateAuditRecord.
        :type time_stamp: datetime
        """

        self._time_stamp = time_stamp
