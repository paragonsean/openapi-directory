# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class JobRecurrenceInformation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, au_hours_canceled: float=None, au_hours_failed: float=None, au_hours_succeeded: float=None, last_submit_time: datetime=None, num_jobs_canceled: int=None, num_jobs_failed: int=None, num_jobs_succeeded: int=None, recurrence_id: str=None, recurrence_name: str=None):
        """JobRecurrenceInformation - a model defined in OpenAPI

        :param au_hours_canceled: The au_hours_canceled of this JobRecurrenceInformation.
        :param au_hours_failed: The au_hours_failed of this JobRecurrenceInformation.
        :param au_hours_succeeded: The au_hours_succeeded of this JobRecurrenceInformation.
        :param last_submit_time: The last_submit_time of this JobRecurrenceInformation.
        :param num_jobs_canceled: The num_jobs_canceled of this JobRecurrenceInformation.
        :param num_jobs_failed: The num_jobs_failed of this JobRecurrenceInformation.
        :param num_jobs_succeeded: The num_jobs_succeeded of this JobRecurrenceInformation.
        :param recurrence_id: The recurrence_id of this JobRecurrenceInformation.
        :param recurrence_name: The recurrence_name of this JobRecurrenceInformation.
        """
        self.openapi_types = {
            'au_hours_canceled': float,
            'au_hours_failed': float,
            'au_hours_succeeded': float,
            'last_submit_time': datetime,
            'num_jobs_canceled': int,
            'num_jobs_failed': int,
            'num_jobs_succeeded': int,
            'recurrence_id': str,
            'recurrence_name': str
        }

        self.attribute_map = {
            'au_hours_canceled': 'auHoursCanceled',
            'au_hours_failed': 'auHoursFailed',
            'au_hours_succeeded': 'auHoursSucceeded',
            'last_submit_time': 'lastSubmitTime',
            'num_jobs_canceled': 'numJobsCanceled',
            'num_jobs_failed': 'numJobsFailed',
            'num_jobs_succeeded': 'numJobsSucceeded',
            'recurrence_id': 'recurrenceId',
            'recurrence_name': 'recurrenceName'
        }

        self._au_hours_canceled = au_hours_canceled
        self._au_hours_failed = au_hours_failed
        self._au_hours_succeeded = au_hours_succeeded
        self._last_submit_time = last_submit_time
        self._num_jobs_canceled = num_jobs_canceled
        self._num_jobs_failed = num_jobs_failed
        self._num_jobs_succeeded = num_jobs_succeeded
        self._recurrence_id = recurrence_id
        self._recurrence_name = recurrence_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'JobRecurrenceInformation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The JobRecurrenceInformation of this JobRecurrenceInformation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def au_hours_canceled(self):
        """Gets the au_hours_canceled of this JobRecurrenceInformation.

        the number of job execution hours that resulted in canceled jobs.

        :return: The au_hours_canceled of this JobRecurrenceInformation.
        :rtype: float
        """
        return self._au_hours_canceled

    @au_hours_canceled.setter
    def au_hours_canceled(self, au_hours_canceled):
        """Sets the au_hours_canceled of this JobRecurrenceInformation.

        the number of job execution hours that resulted in canceled jobs.

        :param au_hours_canceled: The au_hours_canceled of this JobRecurrenceInformation.
        :type au_hours_canceled: float
        """

        self._au_hours_canceled = au_hours_canceled

    @property
    def au_hours_failed(self):
        """Gets the au_hours_failed of this JobRecurrenceInformation.

        the number of job execution hours that resulted in failed jobs.

        :return: The au_hours_failed of this JobRecurrenceInformation.
        :rtype: float
        """
        return self._au_hours_failed

    @au_hours_failed.setter
    def au_hours_failed(self, au_hours_failed):
        """Sets the au_hours_failed of this JobRecurrenceInformation.

        the number of job execution hours that resulted in failed jobs.

        :param au_hours_failed: The au_hours_failed of this JobRecurrenceInformation.
        :type au_hours_failed: float
        """

        self._au_hours_failed = au_hours_failed

    @property
    def au_hours_succeeded(self):
        """Gets the au_hours_succeeded of this JobRecurrenceInformation.

        the number of job execution hours that resulted in successful jobs.

        :return: The au_hours_succeeded of this JobRecurrenceInformation.
        :rtype: float
        """
        return self._au_hours_succeeded

    @au_hours_succeeded.setter
    def au_hours_succeeded(self, au_hours_succeeded):
        """Sets the au_hours_succeeded of this JobRecurrenceInformation.

        the number of job execution hours that resulted in successful jobs.

        :param au_hours_succeeded: The au_hours_succeeded of this JobRecurrenceInformation.
        :type au_hours_succeeded: float
        """

        self._au_hours_succeeded = au_hours_succeeded

    @property
    def last_submit_time(self):
        """Gets the last_submit_time of this JobRecurrenceInformation.

        the last time a job in this recurrence was submitted.

        :return: The last_submit_time of this JobRecurrenceInformation.
        :rtype: datetime
        """
        return self._last_submit_time

    @last_submit_time.setter
    def last_submit_time(self, last_submit_time):
        """Sets the last_submit_time of this JobRecurrenceInformation.

        the last time a job in this recurrence was submitted.

        :param last_submit_time: The last_submit_time of this JobRecurrenceInformation.
        :type last_submit_time: datetime
        """

        self._last_submit_time = last_submit_time

    @property
    def num_jobs_canceled(self):
        """Gets the num_jobs_canceled of this JobRecurrenceInformation.

        the number of jobs in this recurrence that have been canceled.

        :return: The num_jobs_canceled of this JobRecurrenceInformation.
        :rtype: int
        """
        return self._num_jobs_canceled

    @num_jobs_canceled.setter
    def num_jobs_canceled(self, num_jobs_canceled):
        """Sets the num_jobs_canceled of this JobRecurrenceInformation.

        the number of jobs in this recurrence that have been canceled.

        :param num_jobs_canceled: The num_jobs_canceled of this JobRecurrenceInformation.
        :type num_jobs_canceled: int
        """

        self._num_jobs_canceled = num_jobs_canceled

    @property
    def num_jobs_failed(self):
        """Gets the num_jobs_failed of this JobRecurrenceInformation.

        the number of jobs in this recurrence that have failed.

        :return: The num_jobs_failed of this JobRecurrenceInformation.
        :rtype: int
        """
        return self._num_jobs_failed

    @num_jobs_failed.setter
    def num_jobs_failed(self, num_jobs_failed):
        """Sets the num_jobs_failed of this JobRecurrenceInformation.

        the number of jobs in this recurrence that have failed.

        :param num_jobs_failed: The num_jobs_failed of this JobRecurrenceInformation.
        :type num_jobs_failed: int
        """

        self._num_jobs_failed = num_jobs_failed

    @property
    def num_jobs_succeeded(self):
        """Gets the num_jobs_succeeded of this JobRecurrenceInformation.

        the number of jobs in this recurrence that have succeeded.

        :return: The num_jobs_succeeded of this JobRecurrenceInformation.
        :rtype: int
        """
        return self._num_jobs_succeeded

    @num_jobs_succeeded.setter
    def num_jobs_succeeded(self, num_jobs_succeeded):
        """Sets the num_jobs_succeeded of this JobRecurrenceInformation.

        the number of jobs in this recurrence that have succeeded.

        :param num_jobs_succeeded: The num_jobs_succeeded of this JobRecurrenceInformation.
        :type num_jobs_succeeded: int
        """

        self._num_jobs_succeeded = num_jobs_succeeded

    @property
    def recurrence_id(self):
        """Gets the recurrence_id of this JobRecurrenceInformation.

        the recurrence identifier (a GUID), unique per activity/script, regardless of iterations. This is something to link different occurrences of the same job together.

        :return: The recurrence_id of this JobRecurrenceInformation.
        :rtype: str
        """
        return self._recurrence_id

    @recurrence_id.setter
    def recurrence_id(self, recurrence_id):
        """Sets the recurrence_id of this JobRecurrenceInformation.

        the recurrence identifier (a GUID), unique per activity/script, regardless of iterations. This is something to link different occurrences of the same job together.

        :param recurrence_id: The recurrence_id of this JobRecurrenceInformation.
        :type recurrence_id: str
        """

        self._recurrence_id = recurrence_id

    @property
    def recurrence_name(self):
        """Gets the recurrence_name of this JobRecurrenceInformation.

        the recurrence name, user friendly name for the correlation between jobs.

        :return: The recurrence_name of this JobRecurrenceInformation.
        :rtype: str
        """
        return self._recurrence_name

    @recurrence_name.setter
    def recurrence_name(self, recurrence_name):
        """Sets the recurrence_name of this JobRecurrenceInformation.

        the recurrence name, user friendly name for the correlation between jobs.

        :param recurrence_name: The recurrence_name of this JobRecurrenceInformation.
        :type recurrence_name: str
        """

        self._recurrence_name = recurrence_name
