/*
 * Azure Stack Azure Bridge Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ActivationKeyResult;
import org.openapitools.client.model.Registration;
import org.openapitools.client.model.RegistrationList;
import org.openapitools.client.model.RegistrationParameter;
import org.openapitools.client.model.RegistrationsListDefaultResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for RegistrationsApi
 */
@Disabled
public class RegistrationsApiTest {

    private final RegistrationsApi api = new RegistrationsApi();

    /**
     * Create or update an Azure Stack registration.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void registrationsCreateOrUpdateTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroup = null;
        String registrationName = null;
        String apiVersion = null;
        RegistrationParameter token = null;
        Registration response = api.registrationsCreateOrUpdate(subscriptionId, resourceGroup, registrationName, apiVersion, token);
        // TODO: test validations
    }

    /**
     * Delete the requested Azure Stack registration.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void registrationsDeleteTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroup = null;
        String registrationName = null;
        String apiVersion = null;
        api.registrationsDelete(subscriptionId, resourceGroup, registrationName, apiVersion);
        // TODO: test validations
    }

    /**
     * Returns the properties of an Azure Stack registration.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void registrationsGetTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroup = null;
        String registrationName = null;
        String apiVersion = null;
        Registration response = api.registrationsGet(subscriptionId, resourceGroup, registrationName, apiVersion);
        // TODO: test validations
    }

    /**
     * Returns Azure Stack Activation Key.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void registrationsGetActivationKeyTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroup = null;
        String registrationName = null;
        String apiVersion = null;
        ActivationKeyResult response = api.registrationsGetActivationKey(subscriptionId, resourceGroup, registrationName, apiVersion);
        // TODO: test validations
    }

    /**
     * Returns a list of all registrations.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void registrationsListTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroup = null;
        String apiVersion = null;
        RegistrationList response = api.registrationsList(subscriptionId, resourceGroup, apiVersion);
        // TODO: test validations
    }

    /**
     * Patch an Azure Stack registration.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void registrationsUpdateTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroup = null;
        String registrationName = null;
        String apiVersion = null;
        RegistrationParameter token = null;
        Registration response = api.registrationsUpdate(subscriptionId, resourceGroup, registrationName, apiVersion, token);
        // TODO: test validations
    }

}
