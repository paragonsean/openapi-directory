# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RegistrationParameterProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, registration_token: str=None):
        """RegistrationParameterProperties - a model defined in OpenAPI

        :param registration_token: The registration_token of this RegistrationParameterProperties.
        """
        self.openapi_types = {
            'registration_token': str
        }

        self.attribute_map = {
            'registration_token': 'registrationToken'
        }

        self._registration_token = registration_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RegistrationParameterProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RegistrationParameterProperties of this RegistrationParameterProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def registration_token(self):
        """Gets the registration_token of this RegistrationParameterProperties.

        The token identifying registered Azure Stack

        :return: The registration_token of this RegistrationParameterProperties.
        :rtype: str
        """
        return self._registration_token

    @registration_token.setter
    def registration_token(self, registration_token):
        """Sets the registration_token of this RegistrationParameterProperties.

        The token identifying registered Azure Stack

        :param registration_token: The registration_token of this RegistrationParameterProperties.
        :type registration_token: str
        """
        if registration_token is None:
            raise ValueError("Invalid value for `registration_token`, must not be `None`")

        self._registration_token = registration_token
