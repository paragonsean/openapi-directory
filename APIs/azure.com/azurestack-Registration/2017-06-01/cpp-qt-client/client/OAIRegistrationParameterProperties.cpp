/**
 * Azure Stack Azure Bridge Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-06-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRegistrationParameterProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRegistrationParameterProperties::OAIRegistrationParameterProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRegistrationParameterProperties::OAIRegistrationParameterProperties() {
    this->initializeModel();
}

OAIRegistrationParameterProperties::~OAIRegistrationParameterProperties() {}

void OAIRegistrationParameterProperties::initializeModel() {

    m_registration_token_isSet = false;
    m_registration_token_isValid = false;
}

void OAIRegistrationParameterProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRegistrationParameterProperties::fromJsonObject(QJsonObject json) {

    m_registration_token_isValid = ::OpenAPI::fromJsonValue(m_registration_token, json[QString("registrationToken")]);
    m_registration_token_isSet = !json[QString("registrationToken")].isNull() && m_registration_token_isValid;
}

QString OAIRegistrationParameterProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRegistrationParameterProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_registration_token_isSet) {
        obj.insert(QString("registrationToken"), ::OpenAPI::toJsonValue(m_registration_token));
    }
    return obj;
}

QString OAIRegistrationParameterProperties::getRegistrationToken() const {
    return m_registration_token;
}
void OAIRegistrationParameterProperties::setRegistrationToken(const QString &registration_token) {
    m_registration_token = registration_token;
    m_registration_token_isSet = true;
}

bool OAIRegistrationParameterProperties::is_registration_token_Set() const{
    return m_registration_token_isSet;
}

bool OAIRegistrationParameterProperties::is_registration_token_Valid() const{
    return m_registration_token_isValid;
}

bool OAIRegistrationParameterProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_registration_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRegistrationParameterProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_registration_token_isValid && true;
}

} // namespace OpenAPI
