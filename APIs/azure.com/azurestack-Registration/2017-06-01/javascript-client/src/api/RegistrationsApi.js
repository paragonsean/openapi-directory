/**
 * Azure Stack Azure Bridge Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ActivationKeyResult from '../model/ActivationKeyResult';
import Registration from '../model/Registration';
import RegistrationList from '../model/RegistrationList';
import RegistrationParameter from '../model/RegistrationParameter';
import RegistrationsListDefaultResponse from '../model/RegistrationsListDefaultResponse';

/**
* Registrations service.
* @module api/RegistrationsApi
* @version 2017-06-01
*/
export default class RegistrationsApi {

    /**
    * Constructs a new RegistrationsApi. 
    * @alias module:api/RegistrationsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the registrationsCreateOrUpdate operation.
     * @callback module:api/RegistrationsApi~registrationsCreateOrUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Registration} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create or update an Azure Stack registration.
     * @param {String} subscriptionId Subscription credentials that uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroup Name of the resource group.
     * @param {String} registrationName Name of the Azure Stack registration.
     * @param {String} apiVersion Client API Version.
     * @param {module:model/RegistrationParameter} token Registration token
     * @param {module:api/RegistrationsApi~registrationsCreateOrUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Registration}
     */
    registrationsCreateOrUpdate(subscriptionId, resourceGroup, registrationName, apiVersion, token, callback) {
      let postBody = token;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling registrationsCreateOrUpdate");
      }
      // verify the required parameter 'resourceGroup' is set
      if (resourceGroup === undefined || resourceGroup === null) {
        throw new Error("Missing the required parameter 'resourceGroup' when calling registrationsCreateOrUpdate");
      }
      // verify the required parameter 'registrationName' is set
      if (registrationName === undefined || registrationName === null) {
        throw new Error("Missing the required parameter 'registrationName' when calling registrationsCreateOrUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling registrationsCreateOrUpdate");
      }
      // verify the required parameter 'token' is set
      if (token === undefined || token === null) {
        throw new Error("Missing the required parameter 'token' when calling registrationsCreateOrUpdate");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroup': resourceGroup,
        'registrationName': registrationName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Registration;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.AzureStack/registrations/{registrationName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the registrationsDelete operation.
     * @callback module:api/RegistrationsApi~registrationsDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete the requested Azure Stack registration.
     * @param {String} subscriptionId Subscription credentials that uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroup Name of the resource group.
     * @param {String} registrationName Name of the Azure Stack registration.
     * @param {String} apiVersion Client API Version.
     * @param {module:api/RegistrationsApi~registrationsDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    registrationsDelete(subscriptionId, resourceGroup, registrationName, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling registrationsDelete");
      }
      // verify the required parameter 'resourceGroup' is set
      if (resourceGroup === undefined || resourceGroup === null) {
        throw new Error("Missing the required parameter 'resourceGroup' when calling registrationsDelete");
      }
      // verify the required parameter 'registrationName' is set
      if (registrationName === undefined || registrationName === null) {
        throw new Error("Missing the required parameter 'registrationName' when calling registrationsDelete");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling registrationsDelete");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroup': resourceGroup,
        'registrationName': registrationName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.AzureStack/registrations/{registrationName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the registrationsGet operation.
     * @callback module:api/RegistrationsApi~registrationsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Registration} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns the properties of an Azure Stack registration.
     * @param {String} subscriptionId Subscription credentials that uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroup Name of the resource group.
     * @param {String} registrationName Name of the Azure Stack registration.
     * @param {String} apiVersion Client API Version.
     * @param {module:api/RegistrationsApi~registrationsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Registration}
     */
    registrationsGet(subscriptionId, resourceGroup, registrationName, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling registrationsGet");
      }
      // verify the required parameter 'resourceGroup' is set
      if (resourceGroup === undefined || resourceGroup === null) {
        throw new Error("Missing the required parameter 'resourceGroup' when calling registrationsGet");
      }
      // verify the required parameter 'registrationName' is set
      if (registrationName === undefined || registrationName === null) {
        throw new Error("Missing the required parameter 'registrationName' when calling registrationsGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling registrationsGet");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroup': resourceGroup,
        'registrationName': registrationName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Registration;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.AzureStack/registrations/{registrationName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the registrationsGetActivationKey operation.
     * @callback module:api/RegistrationsApi~registrationsGetActivationKeyCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ActivationKeyResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns Azure Stack Activation Key.
     * @param {String} subscriptionId Subscription credentials that uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroup Name of the resource group.
     * @param {String} registrationName Name of the Azure Stack registration.
     * @param {String} apiVersion Client API Version.
     * @param {module:api/RegistrationsApi~registrationsGetActivationKeyCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ActivationKeyResult}
     */
    registrationsGetActivationKey(subscriptionId, resourceGroup, registrationName, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling registrationsGetActivationKey");
      }
      // verify the required parameter 'resourceGroup' is set
      if (resourceGroup === undefined || resourceGroup === null) {
        throw new Error("Missing the required parameter 'resourceGroup' when calling registrationsGetActivationKey");
      }
      // verify the required parameter 'registrationName' is set
      if (registrationName === undefined || registrationName === null) {
        throw new Error("Missing the required parameter 'registrationName' when calling registrationsGetActivationKey");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling registrationsGetActivationKey");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroup': resourceGroup,
        'registrationName': registrationName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ActivationKeyResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.AzureStack/registrations/{registrationName}/getactivationkey', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the registrationsList operation.
     * @callback module:api/RegistrationsApi~registrationsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RegistrationList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns a list of all registrations.
     * @param {String} subscriptionId Subscription credentials that uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroup Name of the resource group.
     * @param {String} apiVersion Client API Version.
     * @param {module:api/RegistrationsApi~registrationsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RegistrationList}
     */
    registrationsList(subscriptionId, resourceGroup, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling registrationsList");
      }
      // verify the required parameter 'resourceGroup' is set
      if (resourceGroup === undefined || resourceGroup === null) {
        throw new Error("Missing the required parameter 'resourceGroup' when calling registrationsList");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling registrationsList");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroup': resourceGroup
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = RegistrationList;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.AzureStack/registrations', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the registrationsUpdate operation.
     * @callback module:api/RegistrationsApi~registrationsUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Registration} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Patch an Azure Stack registration.
     * @param {String} subscriptionId Subscription credentials that uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroup Name of the resource group.
     * @param {String} registrationName Name of the Azure Stack registration.
     * @param {String} apiVersion Client API Version.
     * @param {module:model/RegistrationParameter} token Registration token
     * @param {module:api/RegistrationsApi~registrationsUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Registration}
     */
    registrationsUpdate(subscriptionId, resourceGroup, registrationName, apiVersion, token, callback) {
      let postBody = token;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling registrationsUpdate");
      }
      // verify the required parameter 'resourceGroup' is set
      if (resourceGroup === undefined || resourceGroup === null) {
        throw new Error("Missing the required parameter 'resourceGroup' when calling registrationsUpdate");
      }
      // verify the required parameter 'registrationName' is set
      if (registrationName === undefined || registrationName === null) {
        throw new Error("Missing the required parameter 'registrationName' when calling registrationsUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling registrationsUpdate");
      }
      // verify the required parameter 'token' is set
      if (token === undefined || token === null) {
        throw new Error("Missing the required parameter 'token' when calling registrationsUpdate");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroup': resourceGroup,
        'registrationName': registrationName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Registration;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.AzureStack/registrations/{registrationName}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
