/**
 * ApiManagementClient
 * Use these REST APIs for performing operations on Global Policies in Azure API Management deployment.
 *
 * The version of the OpenAPI document: 2018-06-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import PolicyGet200Response from './model/PolicyGet200Response';
import PolicyListByService200Response from './model/PolicyListByService200Response';
import PolicyListByService200ResponseValueInner from './model/PolicyListByService200ResponseValueInner';
import PolicyListByService200ResponseValueInnerProperties from './model/PolicyListByService200ResponseValueInnerProperties';
import PolicyListByServiceDefaultResponse from './model/PolicyListByServiceDefaultResponse';
import PolicyListByServiceDefaultResponseError from './model/PolicyListByServiceDefaultResponseError';
import PolicyListByServiceDefaultResponseErrorDetailsInner from './model/PolicyListByServiceDefaultResponseErrorDetailsInner';
import PolicyApi from './api/PolicyApi';


/**
* Use these REST APIs for performing operations on Global Policies in Azure API Management deployment..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var ApiManagementClient = require('index'); // See note below*.
* var xxxSvc = new ApiManagementClient.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new ApiManagementClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new ApiManagementClient.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new ApiManagementClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2018-06-01-preview
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The PolicyGet200Response model constructor.
     * @property {module:model/PolicyGet200Response}
     */
    PolicyGet200Response,

    /**
     * The PolicyListByService200Response model constructor.
     * @property {module:model/PolicyListByService200Response}
     */
    PolicyListByService200Response,

    /**
     * The PolicyListByService200ResponseValueInner model constructor.
     * @property {module:model/PolicyListByService200ResponseValueInner}
     */
    PolicyListByService200ResponseValueInner,

    /**
     * The PolicyListByService200ResponseValueInnerProperties model constructor.
     * @property {module:model/PolicyListByService200ResponseValueInnerProperties}
     */
    PolicyListByService200ResponseValueInnerProperties,

    /**
     * The PolicyListByServiceDefaultResponse model constructor.
     * @property {module:model/PolicyListByServiceDefaultResponse}
     */
    PolicyListByServiceDefaultResponse,

    /**
     * The PolicyListByServiceDefaultResponseError model constructor.
     * @property {module:model/PolicyListByServiceDefaultResponseError}
     */
    PolicyListByServiceDefaultResponseError,

    /**
     * The PolicyListByServiceDefaultResponseErrorDetailsInner model constructor.
     * @property {module:model/PolicyListByServiceDefaultResponseErrorDetailsInner}
     */
    PolicyListByServiceDefaultResponseErrorDetailsInner,

    /**
    * The PolicyApi service constructor.
    * @property {module:api/PolicyApi}
    */
    PolicyApi
};
