/**
 * Mixed Reality
 * Mixed Reality Resource Provider Spatial Anchors Resource API
 *
 * The version of the OpenAPI document: 2019-12-02-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import SpatialAnchorsAccount from '../model/SpatialAnchorsAccount';
import SpatialAnchorsAccountPage from '../model/SpatialAnchorsAccountPage';
import SpatialAnchorsAccountsListBySubscriptionDefaultResponse from '../model/SpatialAnchorsAccountsListBySubscriptionDefaultResponse';

/**
* Resource service.
* @module api/ResourceApi
* @version 2019-12-02-preview
*/
export default class ResourceApi {

    /**
    * Constructs a new ResourceApi. 
    * @alias module:api/ResourceApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the spatialAnchorsAccountsCreate operation.
     * @callback module:api/ResourceApi~spatialAnchorsAccountsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SpatialAnchorsAccount} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creating or Updating a Spatial Anchors Account.
     * @param {String} subscriptionId Azure subscription ID.
     * @param {String} resourceGroupName Name of an Azure resource group.
     * @param {String} accountName Name of an Mixed Reality Account.
     * @param {String} apiVersion Version of the API to be used with the client request.
     * @param {module:model/SpatialAnchorsAccount} spatialAnchorsAccount Spatial Anchors Account parameter.
     * @param {module:api/ResourceApi~spatialAnchorsAccountsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SpatialAnchorsAccount}
     */
    spatialAnchorsAccountsCreate(subscriptionId, resourceGroupName, accountName, apiVersion, spatialAnchorsAccount, callback) {
      let postBody = spatialAnchorsAccount;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling spatialAnchorsAccountsCreate");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling spatialAnchorsAccountsCreate");
      }
      // verify the required parameter 'accountName' is set
      if (accountName === undefined || accountName === null) {
        throw new Error("Missing the required parameter 'accountName' when calling spatialAnchorsAccountsCreate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling spatialAnchorsAccountsCreate");
      }
      // verify the required parameter 'spatialAnchorsAccount' is set
      if (spatialAnchorsAccount === undefined || spatialAnchorsAccount === null) {
        throw new Error("Missing the required parameter 'spatialAnchorsAccount' when calling spatialAnchorsAccountsCreate");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'accountName': accountName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = SpatialAnchorsAccount;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MixedReality/spatialAnchorsAccounts/{accountName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the spatialAnchorsAccountsDelete operation.
     * @callback module:api/ResourceApi~spatialAnchorsAccountsDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete a Spatial Anchors Account.
     * @param {String} subscriptionId Azure subscription ID.
     * @param {String} resourceGroupName Name of an Azure resource group.
     * @param {String} accountName Name of an Mixed Reality Account.
     * @param {String} apiVersion Version of the API to be used with the client request.
     * @param {module:api/ResourceApi~spatialAnchorsAccountsDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    spatialAnchorsAccountsDelete(subscriptionId, resourceGroupName, accountName, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling spatialAnchorsAccountsDelete");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling spatialAnchorsAccountsDelete");
      }
      // verify the required parameter 'accountName' is set
      if (accountName === undefined || accountName === null) {
        throw new Error("Missing the required parameter 'accountName' when calling spatialAnchorsAccountsDelete");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling spatialAnchorsAccountsDelete");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'accountName': accountName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MixedReality/spatialAnchorsAccounts/{accountName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the spatialAnchorsAccountsGet operation.
     * @callback module:api/ResourceApi~spatialAnchorsAccountsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SpatialAnchorsAccount} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve a Spatial Anchors Account.
     * @param {String} subscriptionId Azure subscription ID.
     * @param {String} resourceGroupName Name of an Azure resource group.
     * @param {String} accountName Name of an Mixed Reality Account.
     * @param {String} apiVersion Version of the API to be used with the client request.
     * @param {module:api/ResourceApi~spatialAnchorsAccountsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SpatialAnchorsAccount}
     */
    spatialAnchorsAccountsGet(subscriptionId, resourceGroupName, accountName, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling spatialAnchorsAccountsGet");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling spatialAnchorsAccountsGet");
      }
      // verify the required parameter 'accountName' is set
      if (accountName === undefined || accountName === null) {
        throw new Error("Missing the required parameter 'accountName' when calling spatialAnchorsAccountsGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling spatialAnchorsAccountsGet");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'accountName': accountName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = SpatialAnchorsAccount;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MixedReality/spatialAnchorsAccounts/{accountName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the spatialAnchorsAccountsListByResourceGroup operation.
     * @callback module:api/ResourceApi~spatialAnchorsAccountsListByResourceGroupCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SpatialAnchorsAccountPage} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List Resources by Resource Group
     * @param {String} subscriptionId Azure subscription ID.
     * @param {String} resourceGroupName Name of an Azure resource group.
     * @param {String} apiVersion Version of the API to be used with the client request.
     * @param {module:api/ResourceApi~spatialAnchorsAccountsListByResourceGroupCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SpatialAnchorsAccountPage}
     */
    spatialAnchorsAccountsListByResourceGroup(subscriptionId, resourceGroupName, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling spatialAnchorsAccountsListByResourceGroup");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling spatialAnchorsAccountsListByResourceGroup");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling spatialAnchorsAccountsListByResourceGroup");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = SpatialAnchorsAccountPage;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MixedReality/spatialAnchorsAccounts', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the spatialAnchorsAccountsListBySubscription operation.
     * @callback module:api/ResourceApi~spatialAnchorsAccountsListBySubscriptionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SpatialAnchorsAccountPage} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List Spatial Anchors Accounts by Subscription
     * @param {String} subscriptionId Azure subscription ID.
     * @param {String} apiVersion Version of the API to be used with the client request.
     * @param {module:api/ResourceApi~spatialAnchorsAccountsListBySubscriptionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SpatialAnchorsAccountPage}
     */
    spatialAnchorsAccountsListBySubscription(subscriptionId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling spatialAnchorsAccountsListBySubscription");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling spatialAnchorsAccountsListBySubscription");
      }

      let pathParams = {
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = SpatialAnchorsAccountPage;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.MixedReality/spatialAnchorsAccounts', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the spatialAnchorsAccountsUpdate operation.
     * @callback module:api/ResourceApi~spatialAnchorsAccountsUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SpatialAnchorsAccount} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updating a Spatial Anchors Account
     * @param {String} subscriptionId Azure subscription ID.
     * @param {String} resourceGroupName Name of an Azure resource group.
     * @param {String} accountName Name of an Mixed Reality Account.
     * @param {String} apiVersion Version of the API to be used with the client request.
     * @param {module:model/SpatialAnchorsAccount} spatialAnchorsAccount Spatial Anchors Account parameter.
     * @param {module:api/ResourceApi~spatialAnchorsAccountsUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SpatialAnchorsAccount}
     */
    spatialAnchorsAccountsUpdate(subscriptionId, resourceGroupName, accountName, apiVersion, spatialAnchorsAccount, callback) {
      let postBody = spatialAnchorsAccount;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling spatialAnchorsAccountsUpdate");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling spatialAnchorsAccountsUpdate");
      }
      // verify the required parameter 'accountName' is set
      if (accountName === undefined || accountName === null) {
        throw new Error("Missing the required parameter 'accountName' when calling spatialAnchorsAccountsUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling spatialAnchorsAccountsUpdate");
      }
      // verify the required parameter 'spatialAnchorsAccount' is set
      if (spatialAnchorsAccount === undefined || spatialAnchorsAccount === null) {
        throw new Error("Missing the required parameter 'spatialAnchorsAccount' when calling spatialAnchorsAccountsUpdate");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'accountName': accountName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = SpatialAnchorsAccount;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MixedReality/spatialAnchorsAccounts/{accountName}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
