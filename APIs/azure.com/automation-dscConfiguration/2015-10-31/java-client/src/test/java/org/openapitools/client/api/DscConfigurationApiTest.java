/*
 * AutomationManagement
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2015-10-31
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.DscConfiguration;
import org.openapitools.client.model.DscConfigurationCreateOrUpdateParameters;
import org.openapitools.client.model.DscConfigurationListByAutomationAccountDefaultResponse;
import org.openapitools.client.model.DscConfigurationListResult;
import org.openapitools.client.model.DscConfigurationUpdateParameters;
import java.io.File;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DscConfigurationApi
 */
@Disabled
public class DscConfigurationApiTest {

    private final DscConfigurationApi api = new DscConfigurationApi();

    /**
     * Create the configuration identified by configuration name.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dscConfigurationCreateOrUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String automationAccountName = null;
        String configurationName = null;
        String subscriptionId = null;
        String apiVersion = null;
        DscConfigurationCreateOrUpdateParameters parameters = null;
        DscConfiguration response = api.dscConfigurationCreateOrUpdate(resourceGroupName, automationAccountName, configurationName, subscriptionId, apiVersion, parameters);
        // TODO: test validations
    }

    /**
     * Delete the dsc configuration identified by configuration name.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dscConfigurationDeleteTest() throws ApiException {
        String resourceGroupName = null;
        String automationAccountName = null;
        String configurationName = null;
        String subscriptionId = null;
        String apiVersion = null;
        api.dscConfigurationDelete(resourceGroupName, automationAccountName, configurationName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Retrieve the configuration identified by configuration name.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dscConfigurationGetTest() throws ApiException {
        String resourceGroupName = null;
        String automationAccountName = null;
        String configurationName = null;
        String subscriptionId = null;
        String apiVersion = null;
        DscConfiguration response = api.dscConfigurationGet(resourceGroupName, automationAccountName, configurationName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Retrieve the configuration script identified by configuration name.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dscConfigurationGetContentTest() throws ApiException {
        String resourceGroupName = null;
        String automationAccountName = null;
        String configurationName = null;
        String subscriptionId = null;
        String apiVersion = null;
        File response = api.dscConfigurationGetContent(resourceGroupName, automationAccountName, configurationName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Retrieve a list of configurations.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dscConfigurationListByAutomationAccountTest() throws ApiException {
        String resourceGroupName = null;
        String automationAccountName = null;
        String subscriptionId = null;
        String apiVersion = null;
        String $filter = null;
        Integer $skip = null;
        Integer $top = null;
        String $inlinecount = null;
        DscConfigurationListResult response = api.dscConfigurationListByAutomationAccount(resourceGroupName, automationAccountName, subscriptionId, apiVersion, $filter, $skip, $top, $inlinecount);
        // TODO: test validations
    }

    /**
     * Create the configuration identified by configuration name.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dscConfigurationUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String automationAccountName = null;
        String configurationName = null;
        String subscriptionId = null;
        String apiVersion = null;
        DscConfigurationUpdateParameters parameters = null;
        DscConfiguration response = api.dscConfigurationUpdate(resourceGroupName, automationAccountName, configurationName, subscriptionId, apiVersion, parameters);
        // TODO: test validations
    }

}
