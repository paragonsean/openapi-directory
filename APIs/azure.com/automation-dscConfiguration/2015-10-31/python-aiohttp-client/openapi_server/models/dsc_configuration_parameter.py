# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DscConfigurationParameter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, default_value: str=None, is_mandatory: bool=None, position: int=None, type: str=None):
        """DscConfigurationParameter - a model defined in OpenAPI

        :param default_value: The default_value of this DscConfigurationParameter.
        :param is_mandatory: The is_mandatory of this DscConfigurationParameter.
        :param position: The position of this DscConfigurationParameter.
        :param type: The type of this DscConfigurationParameter.
        """
        self.openapi_types = {
            'default_value': str,
            'is_mandatory': bool,
            'position': int,
            'type': str
        }

        self.attribute_map = {
            'default_value': 'defaultValue',
            'is_mandatory': 'isMandatory',
            'position': 'position',
            'type': 'type'
        }

        self._default_value = default_value
        self._is_mandatory = is_mandatory
        self._position = position
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DscConfigurationParameter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DscConfigurationParameter of this DscConfigurationParameter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def default_value(self):
        """Gets the default_value of this DscConfigurationParameter.

        Gets or sets the default value of parameter.

        :return: The default_value of this DscConfigurationParameter.
        :rtype: str
        """
        return self._default_value

    @default_value.setter
    def default_value(self, default_value):
        """Sets the default_value of this DscConfigurationParameter.

        Gets or sets the default value of parameter.

        :param default_value: The default_value of this DscConfigurationParameter.
        :type default_value: str
        """

        self._default_value = default_value

    @property
    def is_mandatory(self):
        """Gets the is_mandatory of this DscConfigurationParameter.

        Gets or sets a Boolean value to indicate whether the parameter is mandatory or not.

        :return: The is_mandatory of this DscConfigurationParameter.
        :rtype: bool
        """
        return self._is_mandatory

    @is_mandatory.setter
    def is_mandatory(self, is_mandatory):
        """Sets the is_mandatory of this DscConfigurationParameter.

        Gets or sets a Boolean value to indicate whether the parameter is mandatory or not.

        :param is_mandatory: The is_mandatory of this DscConfigurationParameter.
        :type is_mandatory: bool
        """

        self._is_mandatory = is_mandatory

    @property
    def position(self):
        """Gets the position of this DscConfigurationParameter.

        Get or sets the position of the parameter.

        :return: The position of this DscConfigurationParameter.
        :rtype: int
        """
        return self._position

    @position.setter
    def position(self, position):
        """Sets the position of this DscConfigurationParameter.

        Get or sets the position of the parameter.

        :param position: The position of this DscConfigurationParameter.
        :type position: int
        """

        self._position = position

    @property
    def type(self):
        """Gets the type of this DscConfigurationParameter.

        Gets or sets the type of the parameter.

        :return: The type of this DscConfigurationParameter.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this DscConfigurationParameter.

        Gets or sets the type of the parameter.

        :param type: The type of this DscConfigurationParameter.
        :type type: str
        """

        self._type = type
