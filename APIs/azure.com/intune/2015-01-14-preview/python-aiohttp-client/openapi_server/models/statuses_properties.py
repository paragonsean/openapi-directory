# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class StatusesProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, deployed_policies: int=None, enrolled_users: int=None, flagged_users: int=None, last_modified_time: datetime=None, policy_applied_users: int=None, status: str=None, wipe_failed_apps: int=None, wipe_pending_apps: int=None, wipe_succeeded_apps: int=None):
        """StatusesProperties - a model defined in OpenAPI

        :param deployed_policies: The deployed_policies of this StatusesProperties.
        :param enrolled_users: The enrolled_users of this StatusesProperties.
        :param flagged_users: The flagged_users of this StatusesProperties.
        :param last_modified_time: The last_modified_time of this StatusesProperties.
        :param policy_applied_users: The policy_applied_users of this StatusesProperties.
        :param status: The status of this StatusesProperties.
        :param wipe_failed_apps: The wipe_failed_apps of this StatusesProperties.
        :param wipe_pending_apps: The wipe_pending_apps of this StatusesProperties.
        :param wipe_succeeded_apps: The wipe_succeeded_apps of this StatusesProperties.
        """
        self.openapi_types = {
            'deployed_policies': int,
            'enrolled_users': int,
            'flagged_users': int,
            'last_modified_time': datetime,
            'policy_applied_users': int,
            'status': str,
            'wipe_failed_apps': int,
            'wipe_pending_apps': int,
            'wipe_succeeded_apps': int
        }

        self.attribute_map = {
            'deployed_policies': 'deployedPolicies',
            'enrolled_users': 'enrolledUsers',
            'flagged_users': 'flaggedUsers',
            'last_modified_time': 'lastModifiedTime',
            'policy_applied_users': 'policyAppliedUsers',
            'status': 'status',
            'wipe_failed_apps': 'wipeFailedApps',
            'wipe_pending_apps': 'wipePendingApps',
            'wipe_succeeded_apps': 'wipeSucceededApps'
        }

        self._deployed_policies = deployed_policies
        self._enrolled_users = enrolled_users
        self._flagged_users = flagged_users
        self._last_modified_time = last_modified_time
        self._policy_applied_users = policy_applied_users
        self._status = status
        self._wipe_failed_apps = wipe_failed_apps
        self._wipe_pending_apps = wipe_pending_apps
        self._wipe_succeeded_apps = wipe_succeeded_apps

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StatusesProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StatusesProperties of this StatusesProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def deployed_policies(self):
        """Gets the deployed_policies of this StatusesProperties.


        :return: The deployed_policies of this StatusesProperties.
        :rtype: int
        """
        return self._deployed_policies

    @deployed_policies.setter
    def deployed_policies(self, deployed_policies):
        """Sets the deployed_policies of this StatusesProperties.


        :param deployed_policies: The deployed_policies of this StatusesProperties.
        :type deployed_policies: int
        """

        self._deployed_policies = deployed_policies

    @property
    def enrolled_users(self):
        """Gets the enrolled_users of this StatusesProperties.


        :return: The enrolled_users of this StatusesProperties.
        :rtype: int
        """
        return self._enrolled_users

    @enrolled_users.setter
    def enrolled_users(self, enrolled_users):
        """Sets the enrolled_users of this StatusesProperties.


        :param enrolled_users: The enrolled_users of this StatusesProperties.
        :type enrolled_users: int
        """

        self._enrolled_users = enrolled_users

    @property
    def flagged_users(self):
        """Gets the flagged_users of this StatusesProperties.


        :return: The flagged_users of this StatusesProperties.
        :rtype: int
        """
        return self._flagged_users

    @flagged_users.setter
    def flagged_users(self, flagged_users):
        """Sets the flagged_users of this StatusesProperties.


        :param flagged_users: The flagged_users of this StatusesProperties.
        :type flagged_users: int
        """

        self._flagged_users = flagged_users

    @property
    def last_modified_time(self):
        """Gets the last_modified_time of this StatusesProperties.


        :return: The last_modified_time of this StatusesProperties.
        :rtype: datetime
        """
        return self._last_modified_time

    @last_modified_time.setter
    def last_modified_time(self, last_modified_time):
        """Sets the last_modified_time of this StatusesProperties.


        :param last_modified_time: The last_modified_time of this StatusesProperties.
        :type last_modified_time: datetime
        """

        self._last_modified_time = last_modified_time

    @property
    def policy_applied_users(self):
        """Gets the policy_applied_users of this StatusesProperties.


        :return: The policy_applied_users of this StatusesProperties.
        :rtype: int
        """
        return self._policy_applied_users

    @policy_applied_users.setter
    def policy_applied_users(self, policy_applied_users):
        """Sets the policy_applied_users of this StatusesProperties.


        :param policy_applied_users: The policy_applied_users of this StatusesProperties.
        :type policy_applied_users: int
        """

        self._policy_applied_users = policy_applied_users

    @property
    def status(self):
        """Gets the status of this StatusesProperties.


        :return: The status of this StatusesProperties.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this StatusesProperties.


        :param status: The status of this StatusesProperties.
        :type status: str
        """

        self._status = status

    @property
    def wipe_failed_apps(self):
        """Gets the wipe_failed_apps of this StatusesProperties.


        :return: The wipe_failed_apps of this StatusesProperties.
        :rtype: int
        """
        return self._wipe_failed_apps

    @wipe_failed_apps.setter
    def wipe_failed_apps(self, wipe_failed_apps):
        """Sets the wipe_failed_apps of this StatusesProperties.


        :param wipe_failed_apps: The wipe_failed_apps of this StatusesProperties.
        :type wipe_failed_apps: int
        """

        self._wipe_failed_apps = wipe_failed_apps

    @property
    def wipe_pending_apps(self):
        """Gets the wipe_pending_apps of this StatusesProperties.


        :return: The wipe_pending_apps of this StatusesProperties.
        :rtype: int
        """
        return self._wipe_pending_apps

    @wipe_pending_apps.setter
    def wipe_pending_apps(self, wipe_pending_apps):
        """Sets the wipe_pending_apps of this StatusesProperties.


        :param wipe_pending_apps: The wipe_pending_apps of this StatusesProperties.
        :type wipe_pending_apps: int
        """

        self._wipe_pending_apps = wipe_pending_apps

    @property
    def wipe_succeeded_apps(self):
        """Gets the wipe_succeeded_apps of this StatusesProperties.


        :return: The wipe_succeeded_apps of this StatusesProperties.
        :rtype: int
        """
        return self._wipe_succeeded_apps

    @wipe_succeeded_apps.setter
    def wipe_succeeded_apps(self, wipe_succeeded_apps):
        """Sets the wipe_succeeded_apps of this StatusesProperties.


        :param wipe_succeeded_apps: The wipe_succeeded_apps of this StatusesProperties.
        :type wipe_succeeded_apps: int
        """

        self._wipe_succeeded_apps = wipe_succeeded_apps
