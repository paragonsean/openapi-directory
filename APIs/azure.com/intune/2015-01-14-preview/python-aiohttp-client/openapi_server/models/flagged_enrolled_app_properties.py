# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.flagged_enrolled_app_error import FlaggedEnrolledAppError
from openapi_server import util


class FlaggedEnrolledAppProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, device_type: str=None, errors: List[FlaggedEnrolledAppError]=None, friendly_name: str=None, last_modified_time: str=None, platform: str=None):
        """FlaggedEnrolledAppProperties - a model defined in OpenAPI

        :param device_type: The device_type of this FlaggedEnrolledAppProperties.
        :param errors: The errors of this FlaggedEnrolledAppProperties.
        :param friendly_name: The friendly_name of this FlaggedEnrolledAppProperties.
        :param last_modified_time: The last_modified_time of this FlaggedEnrolledAppProperties.
        :param platform: The platform of this FlaggedEnrolledAppProperties.
        """
        self.openapi_types = {
            'device_type': str,
            'errors': List[FlaggedEnrolledAppError],
            'friendly_name': str,
            'last_modified_time': str,
            'platform': str
        }

        self.attribute_map = {
            'device_type': 'deviceType',
            'errors': 'errors',
            'friendly_name': 'friendlyName',
            'last_modified_time': 'lastModifiedTime',
            'platform': 'platform'
        }

        self._device_type = device_type
        self._errors = errors
        self._friendly_name = friendly_name
        self._last_modified_time = last_modified_time
        self._platform = platform

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FlaggedEnrolledAppProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FlaggedEnrolledAppProperties of this FlaggedEnrolledAppProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def device_type(self):
        """Gets the device_type of this FlaggedEnrolledAppProperties.


        :return: The device_type of this FlaggedEnrolledAppProperties.
        :rtype: str
        """
        return self._device_type

    @device_type.setter
    def device_type(self, device_type):
        """Sets the device_type of this FlaggedEnrolledAppProperties.


        :param device_type: The device_type of this FlaggedEnrolledAppProperties.
        :type device_type: str
        """

        self._device_type = device_type

    @property
    def errors(self):
        """Gets the errors of this FlaggedEnrolledAppProperties.


        :return: The errors of this FlaggedEnrolledAppProperties.
        :rtype: List[FlaggedEnrolledAppError]
        """
        return self._errors

    @errors.setter
    def errors(self, errors):
        """Sets the errors of this FlaggedEnrolledAppProperties.


        :param errors: The errors of this FlaggedEnrolledAppProperties.
        :type errors: List[FlaggedEnrolledAppError]
        """

        self._errors = errors

    @property
    def friendly_name(self):
        """Gets the friendly_name of this FlaggedEnrolledAppProperties.


        :return: The friendly_name of this FlaggedEnrolledAppProperties.
        :rtype: str
        """
        return self._friendly_name

    @friendly_name.setter
    def friendly_name(self, friendly_name):
        """Sets the friendly_name of this FlaggedEnrolledAppProperties.


        :param friendly_name: The friendly_name of this FlaggedEnrolledAppProperties.
        :type friendly_name: str
        """

        self._friendly_name = friendly_name

    @property
    def last_modified_time(self):
        """Gets the last_modified_time of this FlaggedEnrolledAppProperties.


        :return: The last_modified_time of this FlaggedEnrolledAppProperties.
        :rtype: str
        """
        return self._last_modified_time

    @last_modified_time.setter
    def last_modified_time(self, last_modified_time):
        """Sets the last_modified_time of this FlaggedEnrolledAppProperties.


        :param last_modified_time: The last_modified_time of this FlaggedEnrolledAppProperties.
        :type last_modified_time: str
        """

        self._last_modified_time = last_modified_time

    @property
    def platform(self):
        """Gets the platform of this FlaggedEnrolledAppProperties.


        :return: The platform of this FlaggedEnrolledAppProperties.
        :rtype: str
        """
        return self._platform

    @platform.setter
    def platform(self, platform):
        """Sets the platform of this FlaggedEnrolledAppProperties.


        :param platform: The platform of this FlaggedEnrolledAppProperties.
        :type platform: str
        """

        self._platform = platform
