# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class FlaggedUserProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, error_count: int=None, friendly_name: str=None):
        """FlaggedUserProperties - a model defined in OpenAPI

        :param error_count: The error_count of this FlaggedUserProperties.
        :param friendly_name: The friendly_name of this FlaggedUserProperties.
        """
        self.openapi_types = {
            'error_count': int,
            'friendly_name': str
        }

        self.attribute_map = {
            'error_count': 'errorCount',
            'friendly_name': 'friendlyName'
        }

        self._error_count = error_count
        self._friendly_name = friendly_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FlaggedUserProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FlaggedUserProperties of this FlaggedUserProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def error_count(self):
        """Gets the error_count of this FlaggedUserProperties.


        :return: The error_count of this FlaggedUserProperties.
        :rtype: int
        """
        return self._error_count

    @error_count.setter
    def error_count(self, error_count):
        """Sets the error_count of this FlaggedUserProperties.


        :param error_count: The error_count of this FlaggedUserProperties.
        :type error_count: int
        """

        self._error_count = error_count

    @property
    def friendly_name(self):
        """Gets the friendly_name of this FlaggedUserProperties.


        :return: The friendly_name of this FlaggedUserProperties.
        :rtype: str
        """
        return self._friendly_name

    @friendly_name.setter
    def friendly_name(self, friendly_name):
        """Sets the friendly_name of this FlaggedUserProperties.


        :param friendly_name: The friendly_name of this FlaggedUserProperties.
        :type friendly_name: str
        """

        self._friendly_name = friendly_name
