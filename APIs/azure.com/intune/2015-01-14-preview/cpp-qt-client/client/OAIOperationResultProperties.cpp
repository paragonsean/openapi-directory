/**
 * IntuneResourceManagementClient
 * Microsoft.Intune Resource provider Api features in the swagger-2.0 specification
 *
 * The version of the OpenAPI document: 2015-01-14-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOperationResultProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOperationResultProperties::OAIOperationResultProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOperationResultProperties::OAIOperationResultProperties() {
    this->initializeModel();
}

OAIOperationResultProperties::~OAIOperationResultProperties() {}

void OAIOperationResultProperties::initializeModel() {

    m_category_isSet = false;
    m_category_isValid = false;

    m_friendly_name_isSet = false;
    m_friendly_name_isValid = false;

    m_last_modified_time_isSet = false;
    m_last_modified_time_isValid = false;

    m_operation_metadata_isSet = false;
    m_operation_metadata_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;
}

void OAIOperationResultProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOperationResultProperties::fromJsonObject(QJsonObject json) {

    m_category_isValid = ::OpenAPI::fromJsonValue(m_category, json[QString("category")]);
    m_category_isSet = !json[QString("category")].isNull() && m_category_isValid;

    m_friendly_name_isValid = ::OpenAPI::fromJsonValue(m_friendly_name, json[QString("friendlyName")]);
    m_friendly_name_isSet = !json[QString("friendlyName")].isNull() && m_friendly_name_isValid;

    m_last_modified_time_isValid = ::OpenAPI::fromJsonValue(m_last_modified_time, json[QString("lastModifiedTime")]);
    m_last_modified_time_isSet = !json[QString("lastModifiedTime")].isNull() && m_last_modified_time_isValid;

    m_operation_metadata_isValid = ::OpenAPI::fromJsonValue(m_operation_metadata, json[QString("operationMetadata")]);
    m_operation_metadata_isSet = !json[QString("operationMetadata")].isNull() && m_operation_metadata_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("state")]);
    m_state_isSet = !json[QString("state")].isNull() && m_state_isValid;
}

QString OAIOperationResultProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOperationResultProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_category_isSet) {
        obj.insert(QString("category"), ::OpenAPI::toJsonValue(m_category));
    }
    if (m_friendly_name_isSet) {
        obj.insert(QString("friendlyName"), ::OpenAPI::toJsonValue(m_friendly_name));
    }
    if (m_last_modified_time_isSet) {
        obj.insert(QString("lastModifiedTime"), ::OpenAPI::toJsonValue(m_last_modified_time));
    }
    if (m_operation_metadata.size() > 0) {
        obj.insert(QString("operationMetadata"), ::OpenAPI::toJsonValue(m_operation_metadata));
    }
    if (m_state_isSet) {
        obj.insert(QString("state"), ::OpenAPI::toJsonValue(m_state));
    }
    return obj;
}

QString OAIOperationResultProperties::getCategory() const {
    return m_category;
}
void OAIOperationResultProperties::setCategory(const QString &category) {
    m_category = category;
    m_category_isSet = true;
}

bool OAIOperationResultProperties::is_category_Set() const{
    return m_category_isSet;
}

bool OAIOperationResultProperties::is_category_Valid() const{
    return m_category_isValid;
}

QString OAIOperationResultProperties::getFriendlyName() const {
    return m_friendly_name;
}
void OAIOperationResultProperties::setFriendlyName(const QString &friendly_name) {
    m_friendly_name = friendly_name;
    m_friendly_name_isSet = true;
}

bool OAIOperationResultProperties::is_friendly_name_Set() const{
    return m_friendly_name_isSet;
}

bool OAIOperationResultProperties::is_friendly_name_Valid() const{
    return m_friendly_name_isValid;
}

QString OAIOperationResultProperties::getLastModifiedTime() const {
    return m_last_modified_time;
}
void OAIOperationResultProperties::setLastModifiedTime(const QString &last_modified_time) {
    m_last_modified_time = last_modified_time;
    m_last_modified_time_isSet = true;
}

bool OAIOperationResultProperties::is_last_modified_time_Set() const{
    return m_last_modified_time_isSet;
}

bool OAIOperationResultProperties::is_last_modified_time_Valid() const{
    return m_last_modified_time_isValid;
}

QList<OAIOperationMetadataProperties> OAIOperationResultProperties::getOperationMetadata() const {
    return m_operation_metadata;
}
void OAIOperationResultProperties::setOperationMetadata(const QList<OAIOperationMetadataProperties> &operation_metadata) {
    m_operation_metadata = operation_metadata;
    m_operation_metadata_isSet = true;
}

bool OAIOperationResultProperties::is_operation_metadata_Set() const{
    return m_operation_metadata_isSet;
}

bool OAIOperationResultProperties::is_operation_metadata_Valid() const{
    return m_operation_metadata_isValid;
}

QString OAIOperationResultProperties::getState() const {
    return m_state;
}
void OAIOperationResultProperties::setState(const QString &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAIOperationResultProperties::is_state_Set() const{
    return m_state_isSet;
}

bool OAIOperationResultProperties::is_state_Valid() const{
    return m_state_isValid;
}

bool OAIOperationResultProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_category_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_friendly_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_operation_metadata.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOperationResultProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_friendly_name_isValid && m_operation_metadata_isValid && true;
}

} // namespace OpenAPI
