/**
 * IntuneResourceManagementClient
 * Microsoft.Intune Resource provider Api features in the swagger-2.0 specification
 *
 * The version of the OpenAPI document: 2015-01-14-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILocationCollection.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILocationCollection::OAILocationCollection(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILocationCollection::OAILocationCollection() {
    this->initializeModel();
}

OAILocationCollection::~OAILocationCollection() {}

void OAILocationCollection::initializeModel() {

    m_nextlink_isSet = false;
    m_nextlink_isValid = false;

    m_value_isSet = false;
    m_value_isValid = false;
}

void OAILocationCollection::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILocationCollection::fromJsonObject(QJsonObject json) {

    m_nextlink_isValid = ::OpenAPI::fromJsonValue(m_nextlink, json[QString("nextlink")]);
    m_nextlink_isSet = !json[QString("nextlink")].isNull() && m_nextlink_isValid;

    m_value_isValid = ::OpenAPI::fromJsonValue(m_value, json[QString("value")]);
    m_value_isSet = !json[QString("value")].isNull() && m_value_isValid;
}

QString OAILocationCollection::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILocationCollection::asJsonObject() const {
    QJsonObject obj;
    if (m_nextlink_isSet) {
        obj.insert(QString("nextlink"), ::OpenAPI::toJsonValue(m_nextlink));
    }
    if (m_value.size() > 0) {
        obj.insert(QString("value"), ::OpenAPI::toJsonValue(m_value));
    }
    return obj;
}

QString OAILocationCollection::getNextlink() const {
    return m_nextlink;
}
void OAILocationCollection::setNextlink(const QString &nextlink) {
    m_nextlink = nextlink;
    m_nextlink_isSet = true;
}

bool OAILocationCollection::is_nextlink_Set() const{
    return m_nextlink_isSet;
}

bool OAILocationCollection::is_nextlink_Valid() const{
    return m_nextlink_isValid;
}

QList<OAILocation> OAILocationCollection::getValue() const {
    return m_value;
}
void OAILocationCollection::setValue(const QList<OAILocation> &value) {
    m_value = value;
    m_value_isSet = true;
}

bool OAILocationCollection::is_value_Set() const{
    return m_value_isSet;
}

bool OAILocationCollection::is_value_Valid() const{
    return m_value_isValid;
}

bool OAILocationCollection::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_nextlink_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_value.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILocationCollection::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid && true;
}

} // namespace OpenAPI
