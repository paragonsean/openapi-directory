# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.iosmam_policy import IOSMAMPolicy
from openapi_server import util


class IOSMAMPolicyCollection(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, nextlink: str=None, value: List[IOSMAMPolicy]=None):
        """IOSMAMPolicyCollection - a model defined in OpenAPI

        :param nextlink: The nextlink of this IOSMAMPolicyCollection.
        :param value: The value of this IOSMAMPolicyCollection.
        """
        self.openapi_types = {
            'nextlink': str,
            'value': List[IOSMAMPolicy]
        }

        self.attribute_map = {
            'nextlink': 'nextlink',
            'value': 'value'
        }

        self._nextlink = nextlink
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IOSMAMPolicyCollection':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IOSMAMPolicyCollection of this IOSMAMPolicyCollection.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def nextlink(self):
        """Gets the nextlink of this IOSMAMPolicyCollection.

        Gets the URL to get the next set of results.

        :return: The nextlink of this IOSMAMPolicyCollection.
        :rtype: str
        """
        return self._nextlink

    @nextlink.setter
    def nextlink(self, nextlink):
        """Sets the nextlink of this IOSMAMPolicyCollection.

        Gets the URL to get the next set of results.

        :param nextlink: The nextlink of this IOSMAMPolicyCollection.
        :type nextlink: str
        """

        self._nextlink = nextlink

    @property
    def value(self):
        """Gets the value of this IOSMAMPolicyCollection.


        :return: The value of this IOSMAMPolicyCollection.
        :rtype: List[IOSMAMPolicy]
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this IOSMAMPolicyCollection.


        :param value: The value of this IOSMAMPolicyCollection.
        :type value: List[IOSMAMPolicy]
        """
        if value is None:
            raise ValueError("Invalid value for `value`, must not be `None`")

        self._value = value
