# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class FlaggedEnrolledAppError(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, error_code: str=None, severity: str=None):
        """FlaggedEnrolledAppError - a model defined in OpenAPI

        :param error_code: The error_code of this FlaggedEnrolledAppError.
        :param severity: The severity of this FlaggedEnrolledAppError.
        """
        self.openapi_types = {
            'error_code': str,
            'severity': str
        }

        self.attribute_map = {
            'error_code': 'errorCode',
            'severity': 'severity'
        }

        self._error_code = error_code
        self._severity = severity

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FlaggedEnrolledAppError':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FlaggedEnrolledAppError of this FlaggedEnrolledAppError.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def error_code(self):
        """Gets the error_code of this FlaggedEnrolledAppError.


        :return: The error_code of this FlaggedEnrolledAppError.
        :rtype: str
        """
        return self._error_code

    @error_code.setter
    def error_code(self, error_code):
        """Sets the error_code of this FlaggedEnrolledAppError.


        :param error_code: The error_code of this FlaggedEnrolledAppError.
        :type error_code: str
        """

        self._error_code = error_code

    @property
    def severity(self):
        """Gets the severity of this FlaggedEnrolledAppError.


        :return: The severity of this FlaggedEnrolledAppError.
        :rtype: str
        """
        return self._severity

    @severity.setter
    def severity(self, severity):
        """Sets the severity of this FlaggedEnrolledAppError.


        :param severity: The severity of this FlaggedEnrolledAppError.
        :type severity: str
        """

        self._severity = severity
