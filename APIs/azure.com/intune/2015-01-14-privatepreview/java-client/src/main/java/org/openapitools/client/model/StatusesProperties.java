/*
 * IntuneResourceManagementClient
 * Microsoft.Intune Resource provider Api features in the swagger-2.0 specification
 *
 * The version of the OpenAPI document: 2015-01-14-privatepreview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * StatusesProperties
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:17:26.953185-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class StatusesProperties {
  public static final String SERIALIZED_NAME_DEPLOYED_POLICIES = "deployedPolicies";
  @SerializedName(SERIALIZED_NAME_DEPLOYED_POLICIES)
  private Integer deployedPolicies;

  public static final String SERIALIZED_NAME_ENROLLED_USERS = "enrolledUsers";
  @SerializedName(SERIALIZED_NAME_ENROLLED_USERS)
  private Integer enrolledUsers;

  public static final String SERIALIZED_NAME_FLAGGED_USERS = "flaggedUsers";
  @SerializedName(SERIALIZED_NAME_FLAGGED_USERS)
  private Integer flaggedUsers;

  public static final String SERIALIZED_NAME_LAST_MODIFIED_TIME = "lastModifiedTime";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED_TIME)
  private OffsetDateTime lastModifiedTime;

  public static final String SERIALIZED_NAME_POLICY_APPLIED_USERS = "policyAppliedUsers";
  @SerializedName(SERIALIZED_NAME_POLICY_APPLIED_USERS)
  private Integer policyAppliedUsers;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_WIPE_FAILED_APPS = "wipeFailedApps";
  @SerializedName(SERIALIZED_NAME_WIPE_FAILED_APPS)
  private Integer wipeFailedApps;

  public static final String SERIALIZED_NAME_WIPE_PENDING_APPS = "wipePendingApps";
  @SerializedName(SERIALIZED_NAME_WIPE_PENDING_APPS)
  private Integer wipePendingApps;

  public static final String SERIALIZED_NAME_WIPE_SUCCEEDED_APPS = "wipeSucceededApps";
  @SerializedName(SERIALIZED_NAME_WIPE_SUCCEEDED_APPS)
  private Integer wipeSucceededApps;

  public StatusesProperties() {
  }

  public StatusesProperties(
     Integer deployedPolicies, 
     Integer enrolledUsers, 
     Integer flaggedUsers, 
     OffsetDateTime lastModifiedTime, 
     Integer policyAppliedUsers, 
     String status, 
     Integer wipeFailedApps, 
     Integer wipePendingApps, 
     Integer wipeSucceededApps
  ) {
    this();
    this.deployedPolicies = deployedPolicies;
    this.enrolledUsers = enrolledUsers;
    this.flaggedUsers = flaggedUsers;
    this.lastModifiedTime = lastModifiedTime;
    this.policyAppliedUsers = policyAppliedUsers;
    this.status = status;
    this.wipeFailedApps = wipeFailedApps;
    this.wipePendingApps = wipePendingApps;
    this.wipeSucceededApps = wipeSucceededApps;
  }

  /**
   * Get deployedPolicies
   * @return deployedPolicies
   */
  @javax.annotation.Nullable
  public Integer getDeployedPolicies() {
    return deployedPolicies;
  }



  /**
   * Get enrolledUsers
   * @return enrolledUsers
   */
  @javax.annotation.Nullable
  public Integer getEnrolledUsers() {
    return enrolledUsers;
  }



  /**
   * Get flaggedUsers
   * @return flaggedUsers
   */
  @javax.annotation.Nullable
  public Integer getFlaggedUsers() {
    return flaggedUsers;
  }



  /**
   * Get lastModifiedTime
   * @return lastModifiedTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastModifiedTime() {
    return lastModifiedTime;
  }



  /**
   * Get policyAppliedUsers
   * @return policyAppliedUsers
   */
  @javax.annotation.Nullable
  public Integer getPolicyAppliedUsers() {
    return policyAppliedUsers;
  }



  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public String getStatus() {
    return status;
  }



  /**
   * Get wipeFailedApps
   * @return wipeFailedApps
   */
  @javax.annotation.Nullable
  public Integer getWipeFailedApps() {
    return wipeFailedApps;
  }



  /**
   * Get wipePendingApps
   * @return wipePendingApps
   */
  @javax.annotation.Nullable
  public Integer getWipePendingApps() {
    return wipePendingApps;
  }



  /**
   * Get wipeSucceededApps
   * @return wipeSucceededApps
   */
  @javax.annotation.Nullable
  public Integer getWipeSucceededApps() {
    return wipeSucceededApps;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StatusesProperties statusesProperties = (StatusesProperties) o;
    return Objects.equals(this.deployedPolicies, statusesProperties.deployedPolicies) &&
        Objects.equals(this.enrolledUsers, statusesProperties.enrolledUsers) &&
        Objects.equals(this.flaggedUsers, statusesProperties.flaggedUsers) &&
        Objects.equals(this.lastModifiedTime, statusesProperties.lastModifiedTime) &&
        Objects.equals(this.policyAppliedUsers, statusesProperties.policyAppliedUsers) &&
        Objects.equals(this.status, statusesProperties.status) &&
        Objects.equals(this.wipeFailedApps, statusesProperties.wipeFailedApps) &&
        Objects.equals(this.wipePendingApps, statusesProperties.wipePendingApps) &&
        Objects.equals(this.wipeSucceededApps, statusesProperties.wipeSucceededApps);
  }

  @Override
  public int hashCode() {
    return Objects.hash(deployedPolicies, enrolledUsers, flaggedUsers, lastModifiedTime, policyAppliedUsers, status, wipeFailedApps, wipePendingApps, wipeSucceededApps);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StatusesProperties {\n");
    sb.append("    deployedPolicies: ").append(toIndentedString(deployedPolicies)).append("\n");
    sb.append("    enrolledUsers: ").append(toIndentedString(enrolledUsers)).append("\n");
    sb.append("    flaggedUsers: ").append(toIndentedString(flaggedUsers)).append("\n");
    sb.append("    lastModifiedTime: ").append(toIndentedString(lastModifiedTime)).append("\n");
    sb.append("    policyAppliedUsers: ").append(toIndentedString(policyAppliedUsers)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    wipeFailedApps: ").append(toIndentedString(wipeFailedApps)).append("\n");
    sb.append("    wipePendingApps: ").append(toIndentedString(wipePendingApps)).append("\n");
    sb.append("    wipeSucceededApps: ").append(toIndentedString(wipeSucceededApps)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("deployedPolicies");
    openapiFields.add("enrolledUsers");
    openapiFields.add("flaggedUsers");
    openapiFields.add("lastModifiedTime");
    openapiFields.add("policyAppliedUsers");
    openapiFields.add("status");
    openapiFields.add("wipeFailedApps");
    openapiFields.add("wipePendingApps");
    openapiFields.add("wipeSucceededApps");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to StatusesProperties
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!StatusesProperties.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in StatusesProperties is not found in the empty JSON string", StatusesProperties.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!StatusesProperties.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `StatusesProperties` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!StatusesProperties.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'StatusesProperties' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<StatusesProperties> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(StatusesProperties.class));

       return (TypeAdapter<T>) new TypeAdapter<StatusesProperties>() {
           @Override
           public void write(JsonWriter out, StatusesProperties value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public StatusesProperties read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of StatusesProperties given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of StatusesProperties
   * @throws IOException if the JSON string is invalid with respect to StatusesProperties
   */
  public static StatusesProperties fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, StatusesProperties.class);
  }

  /**
   * Convert an instance of StatusesProperties to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

