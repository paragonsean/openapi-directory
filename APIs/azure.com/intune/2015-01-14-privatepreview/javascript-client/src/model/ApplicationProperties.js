/**
 * IntuneResourceManagementClient
 * Microsoft.Intune Resource provider Api features in the swagger-2.0 specification
 *
 * The version of the OpenAPI document: 2015-01-14-privatepreview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ApplicationProperties model module.
 * @module model/ApplicationProperties
 * @version 2015-01-14-privatepreview
 */
class ApplicationProperties {
    /**
     * Constructs a new <code>ApplicationProperties</code>.
     * @alias module:model/ApplicationProperties
     * @param friendlyName {String} 
     * @param platform {module:model/ApplicationProperties.PlatformEnum} 
     */
    constructor(friendlyName, platform) { 
        
        ApplicationProperties.initialize(this, friendlyName, platform);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, friendlyName, platform) { 
        obj['friendlyName'] = friendlyName;
        obj['platform'] = platform || 'ios';
    }

    /**
     * Constructs a <code>ApplicationProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApplicationProperties} obj Optional instance to populate.
     * @return {module:model/ApplicationProperties} The populated <code>ApplicationProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApplicationProperties();

            if (data.hasOwnProperty('appId')) {
                obj['appId'] = ApiClient.convertToType(data['appId'], 'String');
            }
            if (data.hasOwnProperty('friendlyName')) {
                obj['friendlyName'] = ApiClient.convertToType(data['friendlyName'], 'String');
            }
            if (data.hasOwnProperty('platform')) {
                obj['platform'] = ApiClient.convertToType(data['platform'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ApplicationProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ApplicationProperties</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ApplicationProperties.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['appId'] && !(typeof data['appId'] === 'string' || data['appId'] instanceof String)) {
            throw new Error("Expected the field `appId` to be a primitive type in the JSON string but got " + data['appId']);
        }
        // ensure the json data is a string
        if (data['friendlyName'] && !(typeof data['friendlyName'] === 'string' || data['friendlyName'] instanceof String)) {
            throw new Error("Expected the field `friendlyName` to be a primitive type in the JSON string but got " + data['friendlyName']);
        }
        // ensure the json data is a string
        if (data['platform'] && !(typeof data['platform'] === 'string' || data['platform'] instanceof String)) {
            throw new Error("Expected the field `platform` to be a primitive type in the JSON string but got " + data['platform']);
        }

        return true;
    }


}

ApplicationProperties.RequiredProperties = ["friendlyName", "platform"];

/**
 * @member {String} appId
 */
ApplicationProperties.prototype['appId'] = undefined;

/**
 * @member {String} friendlyName
 */
ApplicationProperties.prototype['friendlyName'] = undefined;

/**
 * @member {module:model/ApplicationProperties.PlatformEnum} platform
 * @default 'ios'
 */
ApplicationProperties.prototype['platform'] = 'ios';





/**
 * Allowed values for the <code>platform</code> property.
 * @enum {String}
 * @readonly
 */
ApplicationProperties['PlatformEnum'] = {

    /**
     * value: "ios"
     * @const
     */
    "ios": "ios",

    /**
     * value: "android"
     * @const
     */
    "android": "android",

    /**
     * value: "windows"
     * @const
     */
    "windows": "windows"
};



export default ApplicationProperties;

