/**
 * AzureBridgeAdminClient
 * AzureBridge Admin Client.
 *
 * The version of the OpenAPI document: 2016-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Activation from '../model/Activation';
import ActivationResource from '../model/ActivationResource';
import ActivationResourcesPage from '../model/ActivationResourcesPage';

/**
* Activations service.
* @module api/ActivationsApi
* @version 2016-01-01
*/
export default class ActivationsApi {

    /**
    * Constructs a new ActivationsApi. 
    * @alias module:api/ActivationsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the activationsCreateOrUpdate operation.
     * @callback module:api/ActivationsApi~activationsCreateOrUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ActivationResource} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a new activation.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription.The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroup The resource group the resource is located under.
     * @param {String} activationName Name of the activation.
     * @param {String} apiVersion Client Api Version.
     * @param {module:model/Activation} activation new activation.
     * @param {module:api/ActivationsApi~activationsCreateOrUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ActivationResource}
     */
    activationsCreateOrUpdate(subscriptionId, resourceGroup, activationName, apiVersion, activation, callback) {
      let postBody = activation;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling activationsCreateOrUpdate");
      }
      // verify the required parameter 'resourceGroup' is set
      if (resourceGroup === undefined || resourceGroup === null) {
        throw new Error("Missing the required parameter 'resourceGroup' when calling activationsCreateOrUpdate");
      }
      // verify the required parameter 'activationName' is set
      if (activationName === undefined || activationName === null) {
        throw new Error("Missing the required parameter 'activationName' when calling activationsCreateOrUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling activationsCreateOrUpdate");
      }
      // verify the required parameter 'activation' is set
      if (activation === undefined || activation === null) {
        throw new Error("Missing the required parameter 'activation' when calling activationsCreateOrUpdate");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroup': resourceGroup,
        'activationName': activationName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ActivationResource;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourcegroups/{resourceGroup}/providers/Microsoft.AzureBridge.Admin/activations/{activationName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the activationsDelete operation.
     * @callback module:api/ActivationsApi~activationsDeleteCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ActivationResource} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete an activation.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription.The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroup The resource group the resource is located under.
     * @param {String} activationName Name of the activation.
     * @param {String} apiVersion Client Api Version.
     * @param {module:api/ActivationsApi~activationsDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ActivationResource}
     */
    activationsDelete(subscriptionId, resourceGroup, activationName, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling activationsDelete");
      }
      // verify the required parameter 'resourceGroup' is set
      if (resourceGroup === undefined || resourceGroup === null) {
        throw new Error("Missing the required parameter 'resourceGroup' when calling activationsDelete");
      }
      // verify the required parameter 'activationName' is set
      if (activationName === undefined || activationName === null) {
        throw new Error("Missing the required parameter 'activationName' when calling activationsDelete");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling activationsDelete");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroup': resourceGroup,
        'activationName': activationName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ActivationResource;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourcegroups/{resourceGroup}/providers/Microsoft.AzureBridge.Admin/activations/{activationName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the activationsGet operation.
     * @callback module:api/ActivationsApi~activationsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ActivationResource} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns activation name.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription.The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroup The resource group the resource is located under.
     * @param {String} activationName Name of the activation.
     * @param {String} apiVersion Client Api Version.
     * @param {module:api/ActivationsApi~activationsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ActivationResource}
     */
    activationsGet(subscriptionId, resourceGroup, activationName, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling activationsGet");
      }
      // verify the required parameter 'resourceGroup' is set
      if (resourceGroup === undefined || resourceGroup === null) {
        throw new Error("Missing the required parameter 'resourceGroup' when calling activationsGet");
      }
      // verify the required parameter 'activationName' is set
      if (activationName === undefined || activationName === null) {
        throw new Error("Missing the required parameter 'activationName' when calling activationsGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling activationsGet");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroup': resourceGroup,
        'activationName': activationName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ActivationResource;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourcegroups/{resourceGroup}/providers/Microsoft.AzureBridge.Admin/activations/{activationName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the activationsList operation.
     * @callback module:api/ActivationsApi~activationsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ActivationResourcesPage} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns the list of activations.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription.The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroup The resource group the resource is located under.
     * @param {String} apiVersion Client Api Version.
     * @param {module:api/ActivationsApi~activationsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ActivationResourcesPage}
     */
    activationsList(subscriptionId, resourceGroup, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling activationsList");
      }
      // verify the required parameter 'resourceGroup' is set
      if (resourceGroup === undefined || resourceGroup === null) {
        throw new Error("Missing the required parameter 'resourceGroup' when calling activationsList");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling activationsList");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroup': resourceGroup
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ActivationResourcesPage;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourcegroups/{resourceGroup}/providers/Microsoft.AzureBridge.Admin/activations', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
