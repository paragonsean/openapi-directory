/**
 * PolicyClient
 * To manage and control access to your resources, you can define customized policies and assign them at a scope.
 *
 * The version of the OpenAPI document: 2019-06-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPolicyAssignmentProperties.h
 *
 * The policy assignment properties.
 */

#ifndef OAIPolicyAssignmentProperties_H
#define OAIPolicyAssignmentProperties_H

#include <QJsonObject>

#include "OAIObject.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPolicyAssignmentProperties : public OAIObject {
public:
    OAIPolicyAssignmentProperties();
    OAIPolicyAssignmentProperties(QString json);
    ~OAIPolicyAssignmentProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    QString getEnforcementMode() const;
    void setEnforcementMode(const QString &enforcement_mode);
    bool is_enforcement_mode_Set() const;
    bool is_enforcement_mode_Valid() const;

    OAIObject getMetadata() const;
    void setMetadata(const OAIObject &metadata);
    bool is_metadata_Set() const;
    bool is_metadata_Valid() const;

    QList<QString> getNotScopes() const;
    void setNotScopes(const QList<QString> &not_scopes);
    bool is_not_scopes_Set() const;
    bool is_not_scopes_Valid() const;

    OAIObject getParameters() const;
    void setParameters(const OAIObject &parameters);
    bool is_parameters_Set() const;
    bool is_parameters_Valid() const;

    QString getPolicyDefinitionId() const;
    void setPolicyDefinitionId(const QString &policy_definition_id);
    bool is_policy_definition_id_Set() const;
    bool is_policy_definition_id_Valid() const;

    QString getScope() const;
    void setScope(const QString &scope);
    bool is_scope_Set() const;
    bool is_scope_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    QString m_enforcement_mode;
    bool m_enforcement_mode_isSet;
    bool m_enforcement_mode_isValid;

    OAIObject m_metadata;
    bool m_metadata_isSet;
    bool m_metadata_isValid;

    QList<QString> m_not_scopes;
    bool m_not_scopes_isSet;
    bool m_not_scopes_isValid;

    OAIObject m_parameters;
    bool m_parameters_isSet;
    bool m_parameters_isValid;

    QString m_policy_definition_id;
    bool m_policy_definition_id_isSet;
    bool m_policy_definition_id_isValid;

    QString m_scope;
    bool m_scope_isSet;
    bool m_scope_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPolicyAssignmentProperties)

#endif // OAIPolicyAssignmentProperties_H
