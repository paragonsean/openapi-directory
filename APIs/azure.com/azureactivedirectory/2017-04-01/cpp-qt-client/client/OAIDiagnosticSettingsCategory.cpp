/**
 * azureactivedirectory
 * Azure Active Directory Client.
 *
 * The version of the OpenAPI document: 2017-04-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDiagnosticSettingsCategory.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDiagnosticSettingsCategory::OAIDiagnosticSettingsCategory(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDiagnosticSettingsCategory::OAIDiagnosticSettingsCategory() {
    this->initializeModel();
}

OAIDiagnosticSettingsCategory::~OAIDiagnosticSettingsCategory() {}

void OAIDiagnosticSettingsCategory::initializeModel() {

    m_category_type_isSet = false;
    m_category_type_isValid = false;
}

void OAIDiagnosticSettingsCategory::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDiagnosticSettingsCategory::fromJsonObject(QJsonObject json) {

    m_category_type_isValid = ::OpenAPI::fromJsonValue(m_category_type, json[QString("categoryType")]);
    m_category_type_isSet = !json[QString("categoryType")].isNull() && m_category_type_isValid;
}

QString OAIDiagnosticSettingsCategory::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDiagnosticSettingsCategory::asJsonObject() const {
    QJsonObject obj;
    if (m_category_type_isSet) {
        obj.insert(QString("categoryType"), ::OpenAPI::toJsonValue(m_category_type));
    }
    return obj;
}

QString OAIDiagnosticSettingsCategory::getCategoryType() const {
    return m_category_type;
}
void OAIDiagnosticSettingsCategory::setCategoryType(const QString &category_type) {
    m_category_type = category_type;
    m_category_type_isSet = true;
}

bool OAIDiagnosticSettingsCategory::is_category_type_Set() const{
    return m_category_type_isSet;
}

bool OAIDiagnosticSettingsCategory::is_category_type_Valid() const{
    return m_category_type_isValid;
}

bool OAIDiagnosticSettingsCategory::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_category_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDiagnosticSettingsCategory::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
