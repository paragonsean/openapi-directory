/**
 * Azure SQL Database
 * Provides create, read, update and delete functionality for Azure SQL Database resources including servers, databases, elastic pools, recommendations, and operations.
 *
 * The version of the OpenAPI document: 2014-04-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CheckNameAvailabilityRequest from '../model/CheckNameAvailabilityRequest';
import CheckNameAvailabilityResponse from '../model/CheckNameAvailabilityResponse';

/**
* Servers service.
* @module api/ServersApi
* @version 2014-04-01
*/
export default class ServersApi {

    /**
    * Constructs a new ServersApi. 
    * @alias module:api/ServersApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the serversCheckNameAvailability operation.
     * @callback module:api/ServersApi~serversCheckNameAvailabilityCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CheckNameAvailabilityResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Determines whether a resource can be created with the specified name.
     * @param {String} apiVersion The API version to use for the request.
     * @param {String} subscriptionId The subscription ID that identifies an Azure subscription.
     * @param {module:model/CheckNameAvailabilityRequest} parameters The parameters to request for name availability.
     * @param {module:api/ServersApi~serversCheckNameAvailabilityCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CheckNameAvailabilityResponse}
     */
    serversCheckNameAvailability(apiVersion, subscriptionId, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling serversCheckNameAvailability");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling serversCheckNameAvailability");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling serversCheckNameAvailability");
      }

      let pathParams = {
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CheckNameAvailabilityResponse;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.Sql/checkNameAvailability', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
