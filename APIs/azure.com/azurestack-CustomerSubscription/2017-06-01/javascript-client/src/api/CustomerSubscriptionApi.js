/**
 * AzureStack Azure Bridge Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CustomerSubscription from '../model/CustomerSubscription';
import CustomerSubscriptionList from '../model/CustomerSubscriptionList';
import CustomerSubscriptionsListDefaultResponse from '../model/CustomerSubscriptionsListDefaultResponse';

/**
* CustomerSubscription service.
* @module api/CustomerSubscriptionApi
* @version 2017-06-01
*/
export default class CustomerSubscriptionApi {

    /**
    * Constructs a new CustomerSubscriptionApi. 
    * @alias module:api/CustomerSubscriptionApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the customerSubscriptionsCreate operation.
     * @callback module:api/CustomerSubscriptionApi~customerSubscriptionsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CustomerSubscription} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a new customer subscription under a registration.
     * @param {String} subscriptionId Subscription credentials that uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroup Name of the resource group.
     * @param {String} registrationName Name of the Azure Stack registration.
     * @param {String} customerSubscriptionName Name of the product.
     * @param {String} apiVersion Client API Version.
     * @param {module:model/CustomerSubscription} customerCreationParameters Parameters use to create a customer subscription.
     * @param {module:api/CustomerSubscriptionApi~customerSubscriptionsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CustomerSubscription}
     */
    customerSubscriptionsCreate(subscriptionId, resourceGroup, registrationName, customerSubscriptionName, apiVersion, customerCreationParameters, callback) {
      let postBody = customerCreationParameters;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling customerSubscriptionsCreate");
      }
      // verify the required parameter 'resourceGroup' is set
      if (resourceGroup === undefined || resourceGroup === null) {
        throw new Error("Missing the required parameter 'resourceGroup' when calling customerSubscriptionsCreate");
      }
      // verify the required parameter 'registrationName' is set
      if (registrationName === undefined || registrationName === null) {
        throw new Error("Missing the required parameter 'registrationName' when calling customerSubscriptionsCreate");
      }
      // verify the required parameter 'customerSubscriptionName' is set
      if (customerSubscriptionName === undefined || customerSubscriptionName === null) {
        throw new Error("Missing the required parameter 'customerSubscriptionName' when calling customerSubscriptionsCreate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling customerSubscriptionsCreate");
      }
      // verify the required parameter 'customerCreationParameters' is set
      if (customerCreationParameters === undefined || customerCreationParameters === null) {
        throw new Error("Missing the required parameter 'customerCreationParameters' when calling customerSubscriptionsCreate");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroup': resourceGroup,
        'registrationName': registrationName,
        'customerSubscriptionName': customerSubscriptionName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CustomerSubscription;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.AzureStack/registrations/{registrationName}/customerSubscriptions/{customerSubscriptionName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the customerSubscriptionsDelete operation.
     * @callback module:api/CustomerSubscriptionApi~customerSubscriptionsDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes a customer subscription under a registration.
     * @param {String} subscriptionId Subscription credentials that uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroup Name of the resource group.
     * @param {String} registrationName Name of the Azure Stack registration.
     * @param {String} customerSubscriptionName Name of the product.
     * @param {String} apiVersion Client API Version.
     * @param {module:api/CustomerSubscriptionApi~customerSubscriptionsDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    customerSubscriptionsDelete(subscriptionId, resourceGroup, registrationName, customerSubscriptionName, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling customerSubscriptionsDelete");
      }
      // verify the required parameter 'resourceGroup' is set
      if (resourceGroup === undefined || resourceGroup === null) {
        throw new Error("Missing the required parameter 'resourceGroup' when calling customerSubscriptionsDelete");
      }
      // verify the required parameter 'registrationName' is set
      if (registrationName === undefined || registrationName === null) {
        throw new Error("Missing the required parameter 'registrationName' when calling customerSubscriptionsDelete");
      }
      // verify the required parameter 'customerSubscriptionName' is set
      if (customerSubscriptionName === undefined || customerSubscriptionName === null) {
        throw new Error("Missing the required parameter 'customerSubscriptionName' when calling customerSubscriptionsDelete");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling customerSubscriptionsDelete");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroup': resourceGroup,
        'registrationName': registrationName,
        'customerSubscriptionName': customerSubscriptionName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.AzureStack/registrations/{registrationName}/customerSubscriptions/{customerSubscriptionName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the customerSubscriptionsGet operation.
     * @callback module:api/CustomerSubscriptionApi~customerSubscriptionsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CustomerSubscription} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns the specified product.
     * @param {String} subscriptionId Subscription credentials that uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroup Name of the resource group.
     * @param {String} registrationName Name of the Azure Stack registration.
     * @param {String} customerSubscriptionName Name of the product.
     * @param {String} apiVersion Client API Version.
     * @param {module:api/CustomerSubscriptionApi~customerSubscriptionsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CustomerSubscription}
     */
    customerSubscriptionsGet(subscriptionId, resourceGroup, registrationName, customerSubscriptionName, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling customerSubscriptionsGet");
      }
      // verify the required parameter 'resourceGroup' is set
      if (resourceGroup === undefined || resourceGroup === null) {
        throw new Error("Missing the required parameter 'resourceGroup' when calling customerSubscriptionsGet");
      }
      // verify the required parameter 'registrationName' is set
      if (registrationName === undefined || registrationName === null) {
        throw new Error("Missing the required parameter 'registrationName' when calling customerSubscriptionsGet");
      }
      // verify the required parameter 'customerSubscriptionName' is set
      if (customerSubscriptionName === undefined || customerSubscriptionName === null) {
        throw new Error("Missing the required parameter 'customerSubscriptionName' when calling customerSubscriptionsGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling customerSubscriptionsGet");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroup': resourceGroup,
        'registrationName': registrationName,
        'customerSubscriptionName': customerSubscriptionName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = CustomerSubscription;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.AzureStack/registrations/{registrationName}/customerSubscriptions/{customerSubscriptionName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the customerSubscriptionsList operation.
     * @callback module:api/CustomerSubscriptionApi~customerSubscriptionsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CustomerSubscriptionList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns a list of products.
     * @param {String} subscriptionId Subscription credentials that uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroup Name of the resource group.
     * @param {String} registrationName Name of the Azure Stack registration.
     * @param {String} apiVersion Client API Version.
     * @param {module:api/CustomerSubscriptionApi~customerSubscriptionsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CustomerSubscriptionList}
     */
    customerSubscriptionsList(subscriptionId, resourceGroup, registrationName, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling customerSubscriptionsList");
      }
      // verify the required parameter 'resourceGroup' is set
      if (resourceGroup === undefined || resourceGroup === null) {
        throw new Error("Missing the required parameter 'resourceGroup' when calling customerSubscriptionsList");
      }
      // verify the required parameter 'registrationName' is set
      if (registrationName === undefined || registrationName === null) {
        throw new Error("Missing the required parameter 'registrationName' when calling customerSubscriptionsList");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling customerSubscriptionsList");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroup': resourceGroup,
        'registrationName': registrationName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = CustomerSubscriptionList;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.AzureStack/registrations/{registrationName}/customerSubscriptions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
