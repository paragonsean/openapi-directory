/*
 * SqlManagementClient
 * The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.
 *
 * The version of the OpenAPI document: 2017-10-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.ElasticPool;
import org.openapitools.client.model.ElasticPoolListResult;
import org.openapitools.client.model.ElasticPoolUpdate;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ElasticPoolsApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public ElasticPoolsApi() {
        this(Configuration.getDefaultApiClient());
    }

    public ElasticPoolsApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for elasticPoolsCreateOrUpdate
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. (required)
     * @param serverName The name of the server. (required)
     * @param elasticPoolName The name of the elastic pool. (required)
     * @param subscriptionId The subscription ID that identifies an Azure subscription. (required)
     * @param apiVersion The API version to use for the request. (required)
     * @param parameters The elastic pool parameters. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Updated the elastic pool </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Created the elastic pool </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> *** Error Responses: ***   * 400 ElasticPoolStorageBelowLimitMB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ProvisioningDisabled - Displays error message from resources operation authorizer as is, without changes   * 400 ElasticPoolStorageNotAllowedMB - Attempting to set the elastic pool storage limit in mb which doesn&#39;t match the allowed values.   * 400 ElasticPoolStorageAboveLimitMB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ElasticPoolUpdateHkNotAllowed - The elastic pool cannot lower its service tier from Premium to Standard or Basic since one or more of its databases use memory-optimized objects.   * 400 ElasticPoolOverFileSpace - Insufficient file space in the elastic pool.   * 400 InvalidTier - The user specified an invalid tier.   * 400 ServerQuotaExceeded - Server cannot be added to a subscription because it will exceed quota.   * 400 ElasticPoolAlreadyExists - The server already contains an elastic pool with the specified name.   * 400 InvalidInputValueForEdition - Specified edition is not supported for elastic pool provisioning.   * 400 ElasticPoolDtuBelowLimit - The requested DTU value is too low for the requested elastic pool service tier.   * 400 ElasticPoolDtuAboveLimit - The requested DTU value is too high for the requested elastic pool service tier.   * 400 ElasticPoolDbDtuMaxBelowLimit - The requested per database DTU max is too low for the requested elastic pool service tier.   * 400 ElasticPoolDbDtuMaxAboveLimit - The requested per database DTU max is too high for the requested elastic pool service tier.   * 400 InvalidInputValueForDatabaseDtuMax - Attempting to set the DTU max per database for the Resource Pool which doesn&#39;t match the allowed values.   * 400 ElasticPoolDbDtuMinAboveLimit - The requested DTU min per database is too high for the requested service tier.   * 400 InvalidInputValueForDatabaseDtuMin - Attempting to set the DTU min per database for the Resource Pool which doesn&#39;t match the allowed values.   * 400 ElasticPoolStorageAboveLimitGB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ElasticPoolOverStorageUsage - Attempting to write data to a database when the storage limit of the elastic pool has been reached.   * 400 ElasticPoolsNotEnabled - Elastic pools have not been enabled in this region.   * 400 ElasticPoolNotEmpty - Request to delete an elastic pool that is not empty.   * 400 ElasticPoolStorageBelowLimitGB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ElasticPoolStorageNotAllowedGB - Attempting to set the elastic pool storage limit in gb which doesn&#39;t match the allowed values.   * 400 ElasticPoolDatabaseLimit - The elastic pool has reached its limit for number of databases.   * 400 ElasticPoolStorageDecreasePrecondition - There was an attempt to decrease the storage limit of the elastic pool below its storage usage.   * 400 ElasticPoolBusy - A management operation was attempted on an elastic pool which is busy.   * 400 InvalidInputValueDatabaseDtuMinLargerThanMax - Attempting to set the DTU min per database higher than the DTU max per database.   * 400 InvalidResourceRequestBody - The resource or resource properties in the request body is empty or invalid.   * 400 InvalidSkuName - Invalid SKU name.   * 400 MismatchedSkuNameAndCapacity - Mismatch between SKU name and capacity.   * 400 MismatchedSkuNameAndTier - Mismatch between SKU name and tier.   * 400 MismatchedSkuNameAndFamily - Mismatch between SKU name and family.   * 400 ElasticPoolStorageBelowLimitMB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ProvisioningDisabled - Displays error message from resources operation authorizer as is, without changes   * 400 ElasticPoolStorageNotAllowedMB - Attempting to set the elastic pool storage limit in mb which doesn&#39;t match the allowed values.   * 400 ElasticPoolStorageAboveLimitMB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ElasticPoolUpdateHkNotAllowed - The elastic pool cannot lower its service tier from Premium to Standard or Basic since one or more of its databases use memory-optimized objects.   * 400 ElasticPoolOverFileSpace - Insufficient file space in the elastic pool.   * 400 InvalidTier - The user specified an invalid tier.   * 400 ServerQuotaExceeded - Server cannot be added to a subscription because it will exceed quota.   * 400 ElasticPoolAlreadyExists - The server already contains an elastic pool with the specified name.   * 400 InvalidInputValueForEdition - Specified edition is not supported for elastic pool provisioning.   * 400 ElasticPoolDtuBelowLimit - The requested DTU value is too low for the requested elastic pool service tier.   * 400 ElasticPoolDtuAboveLimit - The requested DTU value is too high for the requested elastic pool service tier.   * 400 ElasticPoolDbDtuMaxBelowLimit - The requested per database DTU max is too low for the requested elastic pool service tier.   * 400 ElasticPoolDbDtuMaxAboveLimit - The requested per database DTU max is too high for the requested elastic pool service tier.   * 400 InvalidInputValueForDatabaseDtuMax - Attempting to set the DTU max per database for the Resource Pool which doesn&#39;t match the allowed values.   * 400 ElasticPoolDbDtuMinAboveLimit - The requested DTU min per database is too high for the requested service tier.   * 400 InvalidInputValueForDatabaseDtuMin - Attempting to set the DTU min per database for the Resource Pool which doesn&#39;t match the allowed values.   * 400 ElasticPoolStorageAboveLimitGB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ElasticPoolOverStorageUsage - Attempting to write data to a database when the storage limit of the elastic pool has been reached.   * 400 ElasticPoolsNotEnabled - Elastic pools have not been enabled in this region.   * 400 ElasticPoolNotEmpty - Request to delete an elastic pool that is not empty.   * 400 ElasticPoolStorageBelowLimitGB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ElasticPoolStorageNotAllowedGB - Attempting to set the elastic pool storage limit in gb which doesn&#39;t match the allowed values.   * 400 ElasticPoolDatabaseLimit - The elastic pool has reached its limit for number of databases.   * 400 ElasticPoolStorageDecreasePrecondition - There was an attempt to decrease the storage limit of the elastic pool below its storage usage.   * 400 ElasticPoolBusy - A management operation was attempted on an elastic pool which is busy.   * 400 InvalidInputValueDatabaseDtuMinLargerThanMax - Attempting to set the DTU min per database higher than the DTU max per database.   * 404 SubscriptionDoesNotHaveServer - The requested server was not found   * 404 ElasticPoolNotFound - The specified elastic pool does not exist for the specified server.   * 404 OperationIdNotFound - The operation with Id does not exist.   * 404 ElasticPoolNotFound - The specified elastic pool does not exist for the specified server.   * 405 NotSupported - This functionality is not supported.   * 405 NotSupported - This functionality is not supported.   * 409 ServerDisabled - Server is disabled.   * 409 OperationCancelled - The operation has been cancelled by user.   * 409 OperationInterrupted - The operation on the resource could not be completed because it was interrupted by another operation on the same resource.   * 409 ServerDisabled - Server is disabled.   * 500 OperationTimedOut - The operation timed out and automatically rolled back. Please retry the operation.   * 503 ServiceTemporarilyUnavailable - Feature temporarily unavailable.   * 503 ServiceTemporarilyUnavailable - Feature temporarily unavailable. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call elasticPoolsCreateOrUpdateCall(String resourceGroupName, String serverName, String elasticPoolName, String subscriptionId, String apiVersion, ElasticPool parameters, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = parameters;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/elasticPools/{elasticPoolName}"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "serverName" + "}", localVarApiClient.escapeString(serverName.toString()))
            .replace("{" + "elasticPoolName" + "}", localVarApiClient.escapeString(elasticPoolName.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call elasticPoolsCreateOrUpdateValidateBeforeCall(String resourceGroupName, String serverName, String elasticPoolName, String subscriptionId, String apiVersion, ElasticPool parameters, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling elasticPoolsCreateOrUpdate(Async)");
        }

        // verify the required parameter 'serverName' is set
        if (serverName == null) {
            throw new ApiException("Missing the required parameter 'serverName' when calling elasticPoolsCreateOrUpdate(Async)");
        }

        // verify the required parameter 'elasticPoolName' is set
        if (elasticPoolName == null) {
            throw new ApiException("Missing the required parameter 'elasticPoolName' when calling elasticPoolsCreateOrUpdate(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling elasticPoolsCreateOrUpdate(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling elasticPoolsCreateOrUpdate(Async)");
        }

        // verify the required parameter 'parameters' is set
        if (parameters == null) {
            throw new ApiException("Missing the required parameter 'parameters' when calling elasticPoolsCreateOrUpdate(Async)");
        }

        return elasticPoolsCreateOrUpdateCall(resourceGroupName, serverName, elasticPoolName, subscriptionId, apiVersion, parameters, _callback);

    }

    /**
     * 
     * Creates or updates an elastic pool.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. (required)
     * @param serverName The name of the server. (required)
     * @param elasticPoolName The name of the elastic pool. (required)
     * @param subscriptionId The subscription ID that identifies an Azure subscription. (required)
     * @param apiVersion The API version to use for the request. (required)
     * @param parameters The elastic pool parameters. (required)
     * @return ElasticPool
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Updated the elastic pool </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Created the elastic pool </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> *** Error Responses: ***   * 400 ElasticPoolStorageBelowLimitMB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ProvisioningDisabled - Displays error message from resources operation authorizer as is, without changes   * 400 ElasticPoolStorageNotAllowedMB - Attempting to set the elastic pool storage limit in mb which doesn&#39;t match the allowed values.   * 400 ElasticPoolStorageAboveLimitMB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ElasticPoolUpdateHkNotAllowed - The elastic pool cannot lower its service tier from Premium to Standard or Basic since one or more of its databases use memory-optimized objects.   * 400 ElasticPoolOverFileSpace - Insufficient file space in the elastic pool.   * 400 InvalidTier - The user specified an invalid tier.   * 400 ServerQuotaExceeded - Server cannot be added to a subscription because it will exceed quota.   * 400 ElasticPoolAlreadyExists - The server already contains an elastic pool with the specified name.   * 400 InvalidInputValueForEdition - Specified edition is not supported for elastic pool provisioning.   * 400 ElasticPoolDtuBelowLimit - The requested DTU value is too low for the requested elastic pool service tier.   * 400 ElasticPoolDtuAboveLimit - The requested DTU value is too high for the requested elastic pool service tier.   * 400 ElasticPoolDbDtuMaxBelowLimit - The requested per database DTU max is too low for the requested elastic pool service tier.   * 400 ElasticPoolDbDtuMaxAboveLimit - The requested per database DTU max is too high for the requested elastic pool service tier.   * 400 InvalidInputValueForDatabaseDtuMax - Attempting to set the DTU max per database for the Resource Pool which doesn&#39;t match the allowed values.   * 400 ElasticPoolDbDtuMinAboveLimit - The requested DTU min per database is too high for the requested service tier.   * 400 InvalidInputValueForDatabaseDtuMin - Attempting to set the DTU min per database for the Resource Pool which doesn&#39;t match the allowed values.   * 400 ElasticPoolStorageAboveLimitGB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ElasticPoolOverStorageUsage - Attempting to write data to a database when the storage limit of the elastic pool has been reached.   * 400 ElasticPoolsNotEnabled - Elastic pools have not been enabled in this region.   * 400 ElasticPoolNotEmpty - Request to delete an elastic pool that is not empty.   * 400 ElasticPoolStorageBelowLimitGB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ElasticPoolStorageNotAllowedGB - Attempting to set the elastic pool storage limit in gb which doesn&#39;t match the allowed values.   * 400 ElasticPoolDatabaseLimit - The elastic pool has reached its limit for number of databases.   * 400 ElasticPoolStorageDecreasePrecondition - There was an attempt to decrease the storage limit of the elastic pool below its storage usage.   * 400 ElasticPoolBusy - A management operation was attempted on an elastic pool which is busy.   * 400 InvalidInputValueDatabaseDtuMinLargerThanMax - Attempting to set the DTU min per database higher than the DTU max per database.   * 400 InvalidResourceRequestBody - The resource or resource properties in the request body is empty or invalid.   * 400 InvalidSkuName - Invalid SKU name.   * 400 MismatchedSkuNameAndCapacity - Mismatch between SKU name and capacity.   * 400 MismatchedSkuNameAndTier - Mismatch between SKU name and tier.   * 400 MismatchedSkuNameAndFamily - Mismatch between SKU name and family.   * 400 ElasticPoolStorageBelowLimitMB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ProvisioningDisabled - Displays error message from resources operation authorizer as is, without changes   * 400 ElasticPoolStorageNotAllowedMB - Attempting to set the elastic pool storage limit in mb which doesn&#39;t match the allowed values.   * 400 ElasticPoolStorageAboveLimitMB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ElasticPoolUpdateHkNotAllowed - The elastic pool cannot lower its service tier from Premium to Standard or Basic since one or more of its databases use memory-optimized objects.   * 400 ElasticPoolOverFileSpace - Insufficient file space in the elastic pool.   * 400 InvalidTier - The user specified an invalid tier.   * 400 ServerQuotaExceeded - Server cannot be added to a subscription because it will exceed quota.   * 400 ElasticPoolAlreadyExists - The server already contains an elastic pool with the specified name.   * 400 InvalidInputValueForEdition - Specified edition is not supported for elastic pool provisioning.   * 400 ElasticPoolDtuBelowLimit - The requested DTU value is too low for the requested elastic pool service tier.   * 400 ElasticPoolDtuAboveLimit - The requested DTU value is too high for the requested elastic pool service tier.   * 400 ElasticPoolDbDtuMaxBelowLimit - The requested per database DTU max is too low for the requested elastic pool service tier.   * 400 ElasticPoolDbDtuMaxAboveLimit - The requested per database DTU max is too high for the requested elastic pool service tier.   * 400 InvalidInputValueForDatabaseDtuMax - Attempting to set the DTU max per database for the Resource Pool which doesn&#39;t match the allowed values.   * 400 ElasticPoolDbDtuMinAboveLimit - The requested DTU min per database is too high for the requested service tier.   * 400 InvalidInputValueForDatabaseDtuMin - Attempting to set the DTU min per database for the Resource Pool which doesn&#39;t match the allowed values.   * 400 ElasticPoolStorageAboveLimitGB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ElasticPoolOverStorageUsage - Attempting to write data to a database when the storage limit of the elastic pool has been reached.   * 400 ElasticPoolsNotEnabled - Elastic pools have not been enabled in this region.   * 400 ElasticPoolNotEmpty - Request to delete an elastic pool that is not empty.   * 400 ElasticPoolStorageBelowLimitGB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ElasticPoolStorageNotAllowedGB - Attempting to set the elastic pool storage limit in gb which doesn&#39;t match the allowed values.   * 400 ElasticPoolDatabaseLimit - The elastic pool has reached its limit for number of databases.   * 400 ElasticPoolStorageDecreasePrecondition - There was an attempt to decrease the storage limit of the elastic pool below its storage usage.   * 400 ElasticPoolBusy - A management operation was attempted on an elastic pool which is busy.   * 400 InvalidInputValueDatabaseDtuMinLargerThanMax - Attempting to set the DTU min per database higher than the DTU max per database.   * 404 SubscriptionDoesNotHaveServer - The requested server was not found   * 404 ElasticPoolNotFound - The specified elastic pool does not exist for the specified server.   * 404 OperationIdNotFound - The operation with Id does not exist.   * 404 ElasticPoolNotFound - The specified elastic pool does not exist for the specified server.   * 405 NotSupported - This functionality is not supported.   * 405 NotSupported - This functionality is not supported.   * 409 ServerDisabled - Server is disabled.   * 409 OperationCancelled - The operation has been cancelled by user.   * 409 OperationInterrupted - The operation on the resource could not be completed because it was interrupted by another operation on the same resource.   * 409 ServerDisabled - Server is disabled.   * 500 OperationTimedOut - The operation timed out and automatically rolled back. Please retry the operation.   * 503 ServiceTemporarilyUnavailable - Feature temporarily unavailable.   * 503 ServiceTemporarilyUnavailable - Feature temporarily unavailable. </td><td>  -  </td></tr>
     </table>
     */
    public ElasticPool elasticPoolsCreateOrUpdate(String resourceGroupName, String serverName, String elasticPoolName, String subscriptionId, String apiVersion, ElasticPool parameters) throws ApiException {
        ApiResponse<ElasticPool> localVarResp = elasticPoolsCreateOrUpdateWithHttpInfo(resourceGroupName, serverName, elasticPoolName, subscriptionId, apiVersion, parameters);
        return localVarResp.getData();
    }

    /**
     * 
     * Creates or updates an elastic pool.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. (required)
     * @param serverName The name of the server. (required)
     * @param elasticPoolName The name of the elastic pool. (required)
     * @param subscriptionId The subscription ID that identifies an Azure subscription. (required)
     * @param apiVersion The API version to use for the request. (required)
     * @param parameters The elastic pool parameters. (required)
     * @return ApiResponse&lt;ElasticPool&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Updated the elastic pool </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Created the elastic pool </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> *** Error Responses: ***   * 400 ElasticPoolStorageBelowLimitMB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ProvisioningDisabled - Displays error message from resources operation authorizer as is, without changes   * 400 ElasticPoolStorageNotAllowedMB - Attempting to set the elastic pool storage limit in mb which doesn&#39;t match the allowed values.   * 400 ElasticPoolStorageAboveLimitMB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ElasticPoolUpdateHkNotAllowed - The elastic pool cannot lower its service tier from Premium to Standard or Basic since one or more of its databases use memory-optimized objects.   * 400 ElasticPoolOverFileSpace - Insufficient file space in the elastic pool.   * 400 InvalidTier - The user specified an invalid tier.   * 400 ServerQuotaExceeded - Server cannot be added to a subscription because it will exceed quota.   * 400 ElasticPoolAlreadyExists - The server already contains an elastic pool with the specified name.   * 400 InvalidInputValueForEdition - Specified edition is not supported for elastic pool provisioning.   * 400 ElasticPoolDtuBelowLimit - The requested DTU value is too low for the requested elastic pool service tier.   * 400 ElasticPoolDtuAboveLimit - The requested DTU value is too high for the requested elastic pool service tier.   * 400 ElasticPoolDbDtuMaxBelowLimit - The requested per database DTU max is too low for the requested elastic pool service tier.   * 400 ElasticPoolDbDtuMaxAboveLimit - The requested per database DTU max is too high for the requested elastic pool service tier.   * 400 InvalidInputValueForDatabaseDtuMax - Attempting to set the DTU max per database for the Resource Pool which doesn&#39;t match the allowed values.   * 400 ElasticPoolDbDtuMinAboveLimit - The requested DTU min per database is too high for the requested service tier.   * 400 InvalidInputValueForDatabaseDtuMin - Attempting to set the DTU min per database for the Resource Pool which doesn&#39;t match the allowed values.   * 400 ElasticPoolStorageAboveLimitGB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ElasticPoolOverStorageUsage - Attempting to write data to a database when the storage limit of the elastic pool has been reached.   * 400 ElasticPoolsNotEnabled - Elastic pools have not been enabled in this region.   * 400 ElasticPoolNotEmpty - Request to delete an elastic pool that is not empty.   * 400 ElasticPoolStorageBelowLimitGB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ElasticPoolStorageNotAllowedGB - Attempting to set the elastic pool storage limit in gb which doesn&#39;t match the allowed values.   * 400 ElasticPoolDatabaseLimit - The elastic pool has reached its limit for number of databases.   * 400 ElasticPoolStorageDecreasePrecondition - There was an attempt to decrease the storage limit of the elastic pool below its storage usage.   * 400 ElasticPoolBusy - A management operation was attempted on an elastic pool which is busy.   * 400 InvalidInputValueDatabaseDtuMinLargerThanMax - Attempting to set the DTU min per database higher than the DTU max per database.   * 400 InvalidResourceRequestBody - The resource or resource properties in the request body is empty or invalid.   * 400 InvalidSkuName - Invalid SKU name.   * 400 MismatchedSkuNameAndCapacity - Mismatch between SKU name and capacity.   * 400 MismatchedSkuNameAndTier - Mismatch between SKU name and tier.   * 400 MismatchedSkuNameAndFamily - Mismatch between SKU name and family.   * 400 ElasticPoolStorageBelowLimitMB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ProvisioningDisabled - Displays error message from resources operation authorizer as is, without changes   * 400 ElasticPoolStorageNotAllowedMB - Attempting to set the elastic pool storage limit in mb which doesn&#39;t match the allowed values.   * 400 ElasticPoolStorageAboveLimitMB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ElasticPoolUpdateHkNotAllowed - The elastic pool cannot lower its service tier from Premium to Standard or Basic since one or more of its databases use memory-optimized objects.   * 400 ElasticPoolOverFileSpace - Insufficient file space in the elastic pool.   * 400 InvalidTier - The user specified an invalid tier.   * 400 ServerQuotaExceeded - Server cannot be added to a subscription because it will exceed quota.   * 400 ElasticPoolAlreadyExists - The server already contains an elastic pool with the specified name.   * 400 InvalidInputValueForEdition - Specified edition is not supported for elastic pool provisioning.   * 400 ElasticPoolDtuBelowLimit - The requested DTU value is too low for the requested elastic pool service tier.   * 400 ElasticPoolDtuAboveLimit - The requested DTU value is too high for the requested elastic pool service tier.   * 400 ElasticPoolDbDtuMaxBelowLimit - The requested per database DTU max is too low for the requested elastic pool service tier.   * 400 ElasticPoolDbDtuMaxAboveLimit - The requested per database DTU max is too high for the requested elastic pool service tier.   * 400 InvalidInputValueForDatabaseDtuMax - Attempting to set the DTU max per database for the Resource Pool which doesn&#39;t match the allowed values.   * 400 ElasticPoolDbDtuMinAboveLimit - The requested DTU min per database is too high for the requested service tier.   * 400 InvalidInputValueForDatabaseDtuMin - Attempting to set the DTU min per database for the Resource Pool which doesn&#39;t match the allowed values.   * 400 ElasticPoolStorageAboveLimitGB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ElasticPoolOverStorageUsage - Attempting to write data to a database when the storage limit of the elastic pool has been reached.   * 400 ElasticPoolsNotEnabled - Elastic pools have not been enabled in this region.   * 400 ElasticPoolNotEmpty - Request to delete an elastic pool that is not empty.   * 400 ElasticPoolStorageBelowLimitGB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ElasticPoolStorageNotAllowedGB - Attempting to set the elastic pool storage limit in gb which doesn&#39;t match the allowed values.   * 400 ElasticPoolDatabaseLimit - The elastic pool has reached its limit for number of databases.   * 400 ElasticPoolStorageDecreasePrecondition - There was an attempt to decrease the storage limit of the elastic pool below its storage usage.   * 400 ElasticPoolBusy - A management operation was attempted on an elastic pool which is busy.   * 400 InvalidInputValueDatabaseDtuMinLargerThanMax - Attempting to set the DTU min per database higher than the DTU max per database.   * 404 SubscriptionDoesNotHaveServer - The requested server was not found   * 404 ElasticPoolNotFound - The specified elastic pool does not exist for the specified server.   * 404 OperationIdNotFound - The operation with Id does not exist.   * 404 ElasticPoolNotFound - The specified elastic pool does not exist for the specified server.   * 405 NotSupported - This functionality is not supported.   * 405 NotSupported - This functionality is not supported.   * 409 ServerDisabled - Server is disabled.   * 409 OperationCancelled - The operation has been cancelled by user.   * 409 OperationInterrupted - The operation on the resource could not be completed because it was interrupted by another operation on the same resource.   * 409 ServerDisabled - Server is disabled.   * 500 OperationTimedOut - The operation timed out and automatically rolled back. Please retry the operation.   * 503 ServiceTemporarilyUnavailable - Feature temporarily unavailable.   * 503 ServiceTemporarilyUnavailable - Feature temporarily unavailable. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ElasticPool> elasticPoolsCreateOrUpdateWithHttpInfo(String resourceGroupName, String serverName, String elasticPoolName, String subscriptionId, String apiVersion, ElasticPool parameters) throws ApiException {
        okhttp3.Call localVarCall = elasticPoolsCreateOrUpdateValidateBeforeCall(resourceGroupName, serverName, elasticPoolName, subscriptionId, apiVersion, parameters, null);
        Type localVarReturnType = new TypeToken<ElasticPool>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Creates or updates an elastic pool.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. (required)
     * @param serverName The name of the server. (required)
     * @param elasticPoolName The name of the elastic pool. (required)
     * @param subscriptionId The subscription ID that identifies an Azure subscription. (required)
     * @param apiVersion The API version to use for the request. (required)
     * @param parameters The elastic pool parameters. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Updated the elastic pool </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Created the elastic pool </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> *** Error Responses: ***   * 400 ElasticPoolStorageBelowLimitMB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ProvisioningDisabled - Displays error message from resources operation authorizer as is, without changes   * 400 ElasticPoolStorageNotAllowedMB - Attempting to set the elastic pool storage limit in mb which doesn&#39;t match the allowed values.   * 400 ElasticPoolStorageAboveLimitMB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ElasticPoolUpdateHkNotAllowed - The elastic pool cannot lower its service tier from Premium to Standard or Basic since one or more of its databases use memory-optimized objects.   * 400 ElasticPoolOverFileSpace - Insufficient file space in the elastic pool.   * 400 InvalidTier - The user specified an invalid tier.   * 400 ServerQuotaExceeded - Server cannot be added to a subscription because it will exceed quota.   * 400 ElasticPoolAlreadyExists - The server already contains an elastic pool with the specified name.   * 400 InvalidInputValueForEdition - Specified edition is not supported for elastic pool provisioning.   * 400 ElasticPoolDtuBelowLimit - The requested DTU value is too low for the requested elastic pool service tier.   * 400 ElasticPoolDtuAboveLimit - The requested DTU value is too high for the requested elastic pool service tier.   * 400 ElasticPoolDbDtuMaxBelowLimit - The requested per database DTU max is too low for the requested elastic pool service tier.   * 400 ElasticPoolDbDtuMaxAboveLimit - The requested per database DTU max is too high for the requested elastic pool service tier.   * 400 InvalidInputValueForDatabaseDtuMax - Attempting to set the DTU max per database for the Resource Pool which doesn&#39;t match the allowed values.   * 400 ElasticPoolDbDtuMinAboveLimit - The requested DTU min per database is too high for the requested service tier.   * 400 InvalidInputValueForDatabaseDtuMin - Attempting to set the DTU min per database for the Resource Pool which doesn&#39;t match the allowed values.   * 400 ElasticPoolStorageAboveLimitGB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ElasticPoolOverStorageUsage - Attempting to write data to a database when the storage limit of the elastic pool has been reached.   * 400 ElasticPoolsNotEnabled - Elastic pools have not been enabled in this region.   * 400 ElasticPoolNotEmpty - Request to delete an elastic pool that is not empty.   * 400 ElasticPoolStorageBelowLimitGB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ElasticPoolStorageNotAllowedGB - Attempting to set the elastic pool storage limit in gb which doesn&#39;t match the allowed values.   * 400 ElasticPoolDatabaseLimit - The elastic pool has reached its limit for number of databases.   * 400 ElasticPoolStorageDecreasePrecondition - There was an attempt to decrease the storage limit of the elastic pool below its storage usage.   * 400 ElasticPoolBusy - A management operation was attempted on an elastic pool which is busy.   * 400 InvalidInputValueDatabaseDtuMinLargerThanMax - Attempting to set the DTU min per database higher than the DTU max per database.   * 400 InvalidResourceRequestBody - The resource or resource properties in the request body is empty or invalid.   * 400 InvalidSkuName - Invalid SKU name.   * 400 MismatchedSkuNameAndCapacity - Mismatch between SKU name and capacity.   * 400 MismatchedSkuNameAndTier - Mismatch between SKU name and tier.   * 400 MismatchedSkuNameAndFamily - Mismatch between SKU name and family.   * 400 ElasticPoolStorageBelowLimitMB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ProvisioningDisabled - Displays error message from resources operation authorizer as is, without changes   * 400 ElasticPoolStorageNotAllowedMB - Attempting to set the elastic pool storage limit in mb which doesn&#39;t match the allowed values.   * 400 ElasticPoolStorageAboveLimitMB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ElasticPoolUpdateHkNotAllowed - The elastic pool cannot lower its service tier from Premium to Standard or Basic since one or more of its databases use memory-optimized objects.   * 400 ElasticPoolOverFileSpace - Insufficient file space in the elastic pool.   * 400 InvalidTier - The user specified an invalid tier.   * 400 ServerQuotaExceeded - Server cannot be added to a subscription because it will exceed quota.   * 400 ElasticPoolAlreadyExists - The server already contains an elastic pool with the specified name.   * 400 InvalidInputValueForEdition - Specified edition is not supported for elastic pool provisioning.   * 400 ElasticPoolDtuBelowLimit - The requested DTU value is too low for the requested elastic pool service tier.   * 400 ElasticPoolDtuAboveLimit - The requested DTU value is too high for the requested elastic pool service tier.   * 400 ElasticPoolDbDtuMaxBelowLimit - The requested per database DTU max is too low for the requested elastic pool service tier.   * 400 ElasticPoolDbDtuMaxAboveLimit - The requested per database DTU max is too high for the requested elastic pool service tier.   * 400 InvalidInputValueForDatabaseDtuMax - Attempting to set the DTU max per database for the Resource Pool which doesn&#39;t match the allowed values.   * 400 ElasticPoolDbDtuMinAboveLimit - The requested DTU min per database is too high for the requested service tier.   * 400 InvalidInputValueForDatabaseDtuMin - Attempting to set the DTU min per database for the Resource Pool which doesn&#39;t match the allowed values.   * 400 ElasticPoolStorageAboveLimitGB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ElasticPoolOverStorageUsage - Attempting to write data to a database when the storage limit of the elastic pool has been reached.   * 400 ElasticPoolsNotEnabled - Elastic pools have not been enabled in this region.   * 400 ElasticPoolNotEmpty - Request to delete an elastic pool that is not empty.   * 400 ElasticPoolStorageBelowLimitGB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ElasticPoolStorageNotAllowedGB - Attempting to set the elastic pool storage limit in gb which doesn&#39;t match the allowed values.   * 400 ElasticPoolDatabaseLimit - The elastic pool has reached its limit for number of databases.   * 400 ElasticPoolStorageDecreasePrecondition - There was an attempt to decrease the storage limit of the elastic pool below its storage usage.   * 400 ElasticPoolBusy - A management operation was attempted on an elastic pool which is busy.   * 400 InvalidInputValueDatabaseDtuMinLargerThanMax - Attempting to set the DTU min per database higher than the DTU max per database.   * 404 SubscriptionDoesNotHaveServer - The requested server was not found   * 404 ElasticPoolNotFound - The specified elastic pool does not exist for the specified server.   * 404 OperationIdNotFound - The operation with Id does not exist.   * 404 ElasticPoolNotFound - The specified elastic pool does not exist for the specified server.   * 405 NotSupported - This functionality is not supported.   * 405 NotSupported - This functionality is not supported.   * 409 ServerDisabled - Server is disabled.   * 409 OperationCancelled - The operation has been cancelled by user.   * 409 OperationInterrupted - The operation on the resource could not be completed because it was interrupted by another operation on the same resource.   * 409 ServerDisabled - Server is disabled.   * 500 OperationTimedOut - The operation timed out and automatically rolled back. Please retry the operation.   * 503 ServiceTemporarilyUnavailable - Feature temporarily unavailable.   * 503 ServiceTemporarilyUnavailable - Feature temporarily unavailable. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call elasticPoolsCreateOrUpdateAsync(String resourceGroupName, String serverName, String elasticPoolName, String subscriptionId, String apiVersion, ElasticPool parameters, final ApiCallback<ElasticPool> _callback) throws ApiException {

        okhttp3.Call localVarCall = elasticPoolsCreateOrUpdateValidateBeforeCall(resourceGroupName, serverName, elasticPoolName, subscriptionId, apiVersion, parameters, _callback);
        Type localVarReturnType = new TypeToken<ElasticPool>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for elasticPoolsDelete
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. (required)
     * @param serverName The name of the server. (required)
     * @param elasticPoolName The name of the elastic pool. (required)
     * @param subscriptionId The subscription ID that identifies an Azure subscription. (required)
     * @param apiVersion The API version to use for the request. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Deleted the elastic pool </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> Elastic pool did not exist </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> *** Error Responses: ***   * 400 ElasticPoolStorageBelowLimitMB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ProvisioningDisabled - Displays error message from resources operation authorizer as is, without changes   * 400 ElasticPoolStorageNotAllowedMB - Attempting to set the elastic pool storage limit in mb which doesn&#39;t match the allowed values.   * 400 ElasticPoolStorageAboveLimitMB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ElasticPoolUpdateHkNotAllowed - The elastic pool cannot lower its service tier from Premium to Standard or Basic since one or more of its databases use memory-optimized objects.   * 400 ElasticPoolOverFileSpace - Insufficient file space in the elastic pool.   * 400 InvalidTier - The user specified an invalid tier.   * 400 ServerQuotaExceeded - Server cannot be added to a subscription because it will exceed quota.   * 400 ElasticPoolAlreadyExists - The server already contains an elastic pool with the specified name.   * 400 InvalidInputValueForEdition - Specified edition is not supported for elastic pool provisioning.   * 400 ElasticPoolDtuBelowLimit - The requested DTU value is too low for the requested elastic pool service tier.   * 400 ElasticPoolDtuAboveLimit - The requested DTU value is too high for the requested elastic pool service tier.   * 400 ElasticPoolDbDtuMaxBelowLimit - The requested per database DTU max is too low for the requested elastic pool service tier.   * 400 ElasticPoolDbDtuMaxAboveLimit - The requested per database DTU max is too high for the requested elastic pool service tier.   * 400 InvalidInputValueForDatabaseDtuMax - Attempting to set the DTU max per database for the Resource Pool which doesn&#39;t match the allowed values.   * 400 ElasticPoolDbDtuMinAboveLimit - The requested DTU min per database is too high for the requested service tier.   * 400 InvalidInputValueForDatabaseDtuMin - Attempting to set the DTU min per database for the Resource Pool which doesn&#39;t match the allowed values.   * 400 ElasticPoolStorageAboveLimitGB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ElasticPoolOverStorageUsage - Attempting to write data to a database when the storage limit of the elastic pool has been reached.   * 400 ElasticPoolsNotEnabled - Elastic pools have not been enabled in this region.   * 400 ElasticPoolNotEmpty - Request to delete an elastic pool that is not empty.   * 400 ElasticPoolStorageBelowLimitGB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ElasticPoolStorageNotAllowedGB - Attempting to set the elastic pool storage limit in gb which doesn&#39;t match the allowed values.   * 400 ElasticPoolDatabaseLimit - The elastic pool has reached its limit for number of databases.   * 400 ElasticPoolStorageDecreasePrecondition - There was an attempt to decrease the storage limit of the elastic pool below its storage usage.   * 400 ElasticPoolBusy - A management operation was attempted on an elastic pool which is busy.   * 400 InvalidInputValueDatabaseDtuMinLargerThanMax - Attempting to set the DTU min per database higher than the DTU max per database.   * 404 SubscriptionDoesNotHaveServer - The requested server was not found   * 404 ElasticPoolNotFound - The specified elastic pool does not exist for the specified server.   * 404 OperationIdNotFound - The operation with Id does not exist.   * 405 NotSupported - This functionality is not supported.   * 409 ServerDisabled - Server is disabled.   * 409 OperationCancelled - The operation has been cancelled by user.   * 409 OperationInterrupted - The operation on the resource could not be completed because it was interrupted by another operation on the same resource.   * 500 OperationTimedOut - The operation timed out and automatically rolled back. Please retry the operation.   * 503 ServiceTemporarilyUnavailable - Feature temporarily unavailable. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call elasticPoolsDeleteCall(String resourceGroupName, String serverName, String elasticPoolName, String subscriptionId, String apiVersion, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/elasticPools/{elasticPoolName}"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "serverName" + "}", localVarApiClient.escapeString(serverName.toString()))
            .replace("{" + "elasticPoolName" + "}", localVarApiClient.escapeString(elasticPoolName.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call elasticPoolsDeleteValidateBeforeCall(String resourceGroupName, String serverName, String elasticPoolName, String subscriptionId, String apiVersion, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling elasticPoolsDelete(Async)");
        }

        // verify the required parameter 'serverName' is set
        if (serverName == null) {
            throw new ApiException("Missing the required parameter 'serverName' when calling elasticPoolsDelete(Async)");
        }

        // verify the required parameter 'elasticPoolName' is set
        if (elasticPoolName == null) {
            throw new ApiException("Missing the required parameter 'elasticPoolName' when calling elasticPoolsDelete(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling elasticPoolsDelete(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling elasticPoolsDelete(Async)");
        }

        return elasticPoolsDeleteCall(resourceGroupName, serverName, elasticPoolName, subscriptionId, apiVersion, _callback);

    }

    /**
     * 
     * Deletes an elastic pool.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. (required)
     * @param serverName The name of the server. (required)
     * @param elasticPoolName The name of the elastic pool. (required)
     * @param subscriptionId The subscription ID that identifies an Azure subscription. (required)
     * @param apiVersion The API version to use for the request. (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Deleted the elastic pool </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> Elastic pool did not exist </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> *** Error Responses: ***   * 400 ElasticPoolStorageBelowLimitMB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ProvisioningDisabled - Displays error message from resources operation authorizer as is, without changes   * 400 ElasticPoolStorageNotAllowedMB - Attempting to set the elastic pool storage limit in mb which doesn&#39;t match the allowed values.   * 400 ElasticPoolStorageAboveLimitMB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ElasticPoolUpdateHkNotAllowed - The elastic pool cannot lower its service tier from Premium to Standard or Basic since one or more of its databases use memory-optimized objects.   * 400 ElasticPoolOverFileSpace - Insufficient file space in the elastic pool.   * 400 InvalidTier - The user specified an invalid tier.   * 400 ServerQuotaExceeded - Server cannot be added to a subscription because it will exceed quota.   * 400 ElasticPoolAlreadyExists - The server already contains an elastic pool with the specified name.   * 400 InvalidInputValueForEdition - Specified edition is not supported for elastic pool provisioning.   * 400 ElasticPoolDtuBelowLimit - The requested DTU value is too low for the requested elastic pool service tier.   * 400 ElasticPoolDtuAboveLimit - The requested DTU value is too high for the requested elastic pool service tier.   * 400 ElasticPoolDbDtuMaxBelowLimit - The requested per database DTU max is too low for the requested elastic pool service tier.   * 400 ElasticPoolDbDtuMaxAboveLimit - The requested per database DTU max is too high for the requested elastic pool service tier.   * 400 InvalidInputValueForDatabaseDtuMax - Attempting to set the DTU max per database for the Resource Pool which doesn&#39;t match the allowed values.   * 400 ElasticPoolDbDtuMinAboveLimit - The requested DTU min per database is too high for the requested service tier.   * 400 InvalidInputValueForDatabaseDtuMin - Attempting to set the DTU min per database for the Resource Pool which doesn&#39;t match the allowed values.   * 400 ElasticPoolStorageAboveLimitGB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ElasticPoolOverStorageUsage - Attempting to write data to a database when the storage limit of the elastic pool has been reached.   * 400 ElasticPoolsNotEnabled - Elastic pools have not been enabled in this region.   * 400 ElasticPoolNotEmpty - Request to delete an elastic pool that is not empty.   * 400 ElasticPoolStorageBelowLimitGB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ElasticPoolStorageNotAllowedGB - Attempting to set the elastic pool storage limit in gb which doesn&#39;t match the allowed values.   * 400 ElasticPoolDatabaseLimit - The elastic pool has reached its limit for number of databases.   * 400 ElasticPoolStorageDecreasePrecondition - There was an attempt to decrease the storage limit of the elastic pool below its storage usage.   * 400 ElasticPoolBusy - A management operation was attempted on an elastic pool which is busy.   * 400 InvalidInputValueDatabaseDtuMinLargerThanMax - Attempting to set the DTU min per database higher than the DTU max per database.   * 404 SubscriptionDoesNotHaveServer - The requested server was not found   * 404 ElasticPoolNotFound - The specified elastic pool does not exist for the specified server.   * 404 OperationIdNotFound - The operation with Id does not exist.   * 405 NotSupported - This functionality is not supported.   * 409 ServerDisabled - Server is disabled.   * 409 OperationCancelled - The operation has been cancelled by user.   * 409 OperationInterrupted - The operation on the resource could not be completed because it was interrupted by another operation on the same resource.   * 500 OperationTimedOut - The operation timed out and automatically rolled back. Please retry the operation.   * 503 ServiceTemporarilyUnavailable - Feature temporarily unavailable. </td><td>  -  </td></tr>
     </table>
     */
    public void elasticPoolsDelete(String resourceGroupName, String serverName, String elasticPoolName, String subscriptionId, String apiVersion) throws ApiException {
        elasticPoolsDeleteWithHttpInfo(resourceGroupName, serverName, elasticPoolName, subscriptionId, apiVersion);
    }

    /**
     * 
     * Deletes an elastic pool.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. (required)
     * @param serverName The name of the server. (required)
     * @param elasticPoolName The name of the elastic pool. (required)
     * @param subscriptionId The subscription ID that identifies an Azure subscription. (required)
     * @param apiVersion The API version to use for the request. (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Deleted the elastic pool </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> Elastic pool did not exist </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> *** Error Responses: ***   * 400 ElasticPoolStorageBelowLimitMB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ProvisioningDisabled - Displays error message from resources operation authorizer as is, without changes   * 400 ElasticPoolStorageNotAllowedMB - Attempting to set the elastic pool storage limit in mb which doesn&#39;t match the allowed values.   * 400 ElasticPoolStorageAboveLimitMB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ElasticPoolUpdateHkNotAllowed - The elastic pool cannot lower its service tier from Premium to Standard or Basic since one or more of its databases use memory-optimized objects.   * 400 ElasticPoolOverFileSpace - Insufficient file space in the elastic pool.   * 400 InvalidTier - The user specified an invalid tier.   * 400 ServerQuotaExceeded - Server cannot be added to a subscription because it will exceed quota.   * 400 ElasticPoolAlreadyExists - The server already contains an elastic pool with the specified name.   * 400 InvalidInputValueForEdition - Specified edition is not supported for elastic pool provisioning.   * 400 ElasticPoolDtuBelowLimit - The requested DTU value is too low for the requested elastic pool service tier.   * 400 ElasticPoolDtuAboveLimit - The requested DTU value is too high for the requested elastic pool service tier.   * 400 ElasticPoolDbDtuMaxBelowLimit - The requested per database DTU max is too low for the requested elastic pool service tier.   * 400 ElasticPoolDbDtuMaxAboveLimit - The requested per database DTU max is too high for the requested elastic pool service tier.   * 400 InvalidInputValueForDatabaseDtuMax - Attempting to set the DTU max per database for the Resource Pool which doesn&#39;t match the allowed values.   * 400 ElasticPoolDbDtuMinAboveLimit - The requested DTU min per database is too high for the requested service tier.   * 400 InvalidInputValueForDatabaseDtuMin - Attempting to set the DTU min per database for the Resource Pool which doesn&#39;t match the allowed values.   * 400 ElasticPoolStorageAboveLimitGB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ElasticPoolOverStorageUsage - Attempting to write data to a database when the storage limit of the elastic pool has been reached.   * 400 ElasticPoolsNotEnabled - Elastic pools have not been enabled in this region.   * 400 ElasticPoolNotEmpty - Request to delete an elastic pool that is not empty.   * 400 ElasticPoolStorageBelowLimitGB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ElasticPoolStorageNotAllowedGB - Attempting to set the elastic pool storage limit in gb which doesn&#39;t match the allowed values.   * 400 ElasticPoolDatabaseLimit - The elastic pool has reached its limit for number of databases.   * 400 ElasticPoolStorageDecreasePrecondition - There was an attempt to decrease the storage limit of the elastic pool below its storage usage.   * 400 ElasticPoolBusy - A management operation was attempted on an elastic pool which is busy.   * 400 InvalidInputValueDatabaseDtuMinLargerThanMax - Attempting to set the DTU min per database higher than the DTU max per database.   * 404 SubscriptionDoesNotHaveServer - The requested server was not found   * 404 ElasticPoolNotFound - The specified elastic pool does not exist for the specified server.   * 404 OperationIdNotFound - The operation with Id does not exist.   * 405 NotSupported - This functionality is not supported.   * 409 ServerDisabled - Server is disabled.   * 409 OperationCancelled - The operation has been cancelled by user.   * 409 OperationInterrupted - The operation on the resource could not be completed because it was interrupted by another operation on the same resource.   * 500 OperationTimedOut - The operation timed out and automatically rolled back. Please retry the operation.   * 503 ServiceTemporarilyUnavailable - Feature temporarily unavailable. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> elasticPoolsDeleteWithHttpInfo(String resourceGroupName, String serverName, String elasticPoolName, String subscriptionId, String apiVersion) throws ApiException {
        okhttp3.Call localVarCall = elasticPoolsDeleteValidateBeforeCall(resourceGroupName, serverName, elasticPoolName, subscriptionId, apiVersion, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     *  (asynchronously)
     * Deletes an elastic pool.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. (required)
     * @param serverName The name of the server. (required)
     * @param elasticPoolName The name of the elastic pool. (required)
     * @param subscriptionId The subscription ID that identifies an Azure subscription. (required)
     * @param apiVersion The API version to use for the request. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Deleted the elastic pool </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> Elastic pool did not exist </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> *** Error Responses: ***   * 400 ElasticPoolStorageBelowLimitMB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ProvisioningDisabled - Displays error message from resources operation authorizer as is, without changes   * 400 ElasticPoolStorageNotAllowedMB - Attempting to set the elastic pool storage limit in mb which doesn&#39;t match the allowed values.   * 400 ElasticPoolStorageAboveLimitMB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ElasticPoolUpdateHkNotAllowed - The elastic pool cannot lower its service tier from Premium to Standard or Basic since one or more of its databases use memory-optimized objects.   * 400 ElasticPoolOverFileSpace - Insufficient file space in the elastic pool.   * 400 InvalidTier - The user specified an invalid tier.   * 400 ServerQuotaExceeded - Server cannot be added to a subscription because it will exceed quota.   * 400 ElasticPoolAlreadyExists - The server already contains an elastic pool with the specified name.   * 400 InvalidInputValueForEdition - Specified edition is not supported for elastic pool provisioning.   * 400 ElasticPoolDtuBelowLimit - The requested DTU value is too low for the requested elastic pool service tier.   * 400 ElasticPoolDtuAboveLimit - The requested DTU value is too high for the requested elastic pool service tier.   * 400 ElasticPoolDbDtuMaxBelowLimit - The requested per database DTU max is too low for the requested elastic pool service tier.   * 400 ElasticPoolDbDtuMaxAboveLimit - The requested per database DTU max is too high for the requested elastic pool service tier.   * 400 InvalidInputValueForDatabaseDtuMax - Attempting to set the DTU max per database for the Resource Pool which doesn&#39;t match the allowed values.   * 400 ElasticPoolDbDtuMinAboveLimit - The requested DTU min per database is too high for the requested service tier.   * 400 InvalidInputValueForDatabaseDtuMin - Attempting to set the DTU min per database for the Resource Pool which doesn&#39;t match the allowed values.   * 400 ElasticPoolStorageAboveLimitGB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ElasticPoolOverStorageUsage - Attempting to write data to a database when the storage limit of the elastic pool has been reached.   * 400 ElasticPoolsNotEnabled - Elastic pools have not been enabled in this region.   * 400 ElasticPoolNotEmpty - Request to delete an elastic pool that is not empty.   * 400 ElasticPoolStorageBelowLimitGB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ElasticPoolStorageNotAllowedGB - Attempting to set the elastic pool storage limit in gb which doesn&#39;t match the allowed values.   * 400 ElasticPoolDatabaseLimit - The elastic pool has reached its limit for number of databases.   * 400 ElasticPoolStorageDecreasePrecondition - There was an attempt to decrease the storage limit of the elastic pool below its storage usage.   * 400 ElasticPoolBusy - A management operation was attempted on an elastic pool which is busy.   * 400 InvalidInputValueDatabaseDtuMinLargerThanMax - Attempting to set the DTU min per database higher than the DTU max per database.   * 404 SubscriptionDoesNotHaveServer - The requested server was not found   * 404 ElasticPoolNotFound - The specified elastic pool does not exist for the specified server.   * 404 OperationIdNotFound - The operation with Id does not exist.   * 405 NotSupported - This functionality is not supported.   * 409 ServerDisabled - Server is disabled.   * 409 OperationCancelled - The operation has been cancelled by user.   * 409 OperationInterrupted - The operation on the resource could not be completed because it was interrupted by another operation on the same resource.   * 500 OperationTimedOut - The operation timed out and automatically rolled back. Please retry the operation.   * 503 ServiceTemporarilyUnavailable - Feature temporarily unavailable. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call elasticPoolsDeleteAsync(String resourceGroupName, String serverName, String elasticPoolName, String subscriptionId, String apiVersion, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = elasticPoolsDeleteValidateBeforeCall(resourceGroupName, serverName, elasticPoolName, subscriptionId, apiVersion, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for elasticPoolsGet
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. (required)
     * @param serverName The name of the server. (required)
     * @param elasticPoolName The name of the elastic pool. (required)
     * @param subscriptionId The subscription ID that identifies an Azure subscription. (required)
     * @param apiVersion The API version to use for the request. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Succeeded </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> *** Error Responses: ***   * 400 ElasticPoolStorageBelowLimitMB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ProvisioningDisabled - Displays error message from resources operation authorizer as is, without changes   * 400 ElasticPoolStorageNotAllowedMB - Attempting to set the elastic pool storage limit in mb which doesn&#39;t match the allowed values.   * 400 ElasticPoolStorageAboveLimitMB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ElasticPoolUpdateHkNotAllowed - The elastic pool cannot lower its service tier from Premium to Standard or Basic since one or more of its databases use memory-optimized objects.   * 400 ElasticPoolOverFileSpace - Insufficient file space in the elastic pool.   * 400 InvalidTier - The user specified an invalid tier.   * 400 ServerQuotaExceeded - Server cannot be added to a subscription because it will exceed quota.   * 400 ElasticPoolAlreadyExists - The server already contains an elastic pool with the specified name.   * 400 InvalidInputValueForEdition - Specified edition is not supported for elastic pool provisioning.   * 400 ElasticPoolDtuBelowLimit - The requested DTU value is too low for the requested elastic pool service tier.   * 400 ElasticPoolDtuAboveLimit - The requested DTU value is too high for the requested elastic pool service tier.   * 400 ElasticPoolDbDtuMaxBelowLimit - The requested per database DTU max is too low for the requested elastic pool service tier.   * 400 ElasticPoolDbDtuMaxAboveLimit - The requested per database DTU max is too high for the requested elastic pool service tier.   * 400 InvalidInputValueForDatabaseDtuMax - Attempting to set the DTU max per database for the Resource Pool which doesn&#39;t match the allowed values.   * 400 ElasticPoolDbDtuMinAboveLimit - The requested DTU min per database is too high for the requested service tier.   * 400 InvalidInputValueForDatabaseDtuMin - Attempting to set the DTU min per database for the Resource Pool which doesn&#39;t match the allowed values.   * 400 ElasticPoolStorageAboveLimitGB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ElasticPoolOverStorageUsage - Attempting to write data to a database when the storage limit of the elastic pool has been reached.   * 400 ElasticPoolsNotEnabled - Elastic pools have not been enabled in this region.   * 400 ElasticPoolNotEmpty - Request to delete an elastic pool that is not empty.   * 400 ElasticPoolStorageBelowLimitGB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ElasticPoolStorageNotAllowedGB - Attempting to set the elastic pool storage limit in gb which doesn&#39;t match the allowed values.   * 400 ElasticPoolDatabaseLimit - The elastic pool has reached its limit for number of databases.   * 400 ElasticPoolStorageDecreasePrecondition - There was an attempt to decrease the storage limit of the elastic pool below its storage usage.   * 400 ElasticPoolBusy - A management operation was attempted on an elastic pool which is busy.   * 400 InvalidInputValueDatabaseDtuMinLargerThanMax - Attempting to set the DTU min per database higher than the DTU max per database.   * 404 SubscriptionDoesNotHaveServer - The requested server was not found   * 404 ElasticPoolNotFound - The specified elastic pool does not exist for the specified server.   * 404 OperationIdNotFound - The operation with Id does not exist.   * 404 ResourceNotFound - The requested resource was not found.   * 405 NotSupported - This functionality is not supported.   * 409 ServerDisabled - Server is disabled.   * 409 OperationCancelled - The operation has been cancelled by user.   * 409 OperationInterrupted - The operation on the resource could not be completed because it was interrupted by another operation on the same resource.   * 500 OperationTimedOut - The operation timed out and automatically rolled back. Please retry the operation.   * 503 ServiceTemporarilyUnavailable - Feature temporarily unavailable. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call elasticPoolsGetCall(String resourceGroupName, String serverName, String elasticPoolName, String subscriptionId, String apiVersion, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/elasticPools/{elasticPoolName}"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "serverName" + "}", localVarApiClient.escapeString(serverName.toString()))
            .replace("{" + "elasticPoolName" + "}", localVarApiClient.escapeString(elasticPoolName.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call elasticPoolsGetValidateBeforeCall(String resourceGroupName, String serverName, String elasticPoolName, String subscriptionId, String apiVersion, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling elasticPoolsGet(Async)");
        }

        // verify the required parameter 'serverName' is set
        if (serverName == null) {
            throw new ApiException("Missing the required parameter 'serverName' when calling elasticPoolsGet(Async)");
        }

        // verify the required parameter 'elasticPoolName' is set
        if (elasticPoolName == null) {
            throw new ApiException("Missing the required parameter 'elasticPoolName' when calling elasticPoolsGet(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling elasticPoolsGet(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling elasticPoolsGet(Async)");
        }

        return elasticPoolsGetCall(resourceGroupName, serverName, elasticPoolName, subscriptionId, apiVersion, _callback);

    }

    /**
     * 
     * Gets an elastic pool.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. (required)
     * @param serverName The name of the server. (required)
     * @param elasticPoolName The name of the elastic pool. (required)
     * @param subscriptionId The subscription ID that identifies an Azure subscription. (required)
     * @param apiVersion The API version to use for the request. (required)
     * @return ElasticPool
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Succeeded </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> *** Error Responses: ***   * 400 ElasticPoolStorageBelowLimitMB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ProvisioningDisabled - Displays error message from resources operation authorizer as is, without changes   * 400 ElasticPoolStorageNotAllowedMB - Attempting to set the elastic pool storage limit in mb which doesn&#39;t match the allowed values.   * 400 ElasticPoolStorageAboveLimitMB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ElasticPoolUpdateHkNotAllowed - The elastic pool cannot lower its service tier from Premium to Standard or Basic since one or more of its databases use memory-optimized objects.   * 400 ElasticPoolOverFileSpace - Insufficient file space in the elastic pool.   * 400 InvalidTier - The user specified an invalid tier.   * 400 ServerQuotaExceeded - Server cannot be added to a subscription because it will exceed quota.   * 400 ElasticPoolAlreadyExists - The server already contains an elastic pool with the specified name.   * 400 InvalidInputValueForEdition - Specified edition is not supported for elastic pool provisioning.   * 400 ElasticPoolDtuBelowLimit - The requested DTU value is too low for the requested elastic pool service tier.   * 400 ElasticPoolDtuAboveLimit - The requested DTU value is too high for the requested elastic pool service tier.   * 400 ElasticPoolDbDtuMaxBelowLimit - The requested per database DTU max is too low for the requested elastic pool service tier.   * 400 ElasticPoolDbDtuMaxAboveLimit - The requested per database DTU max is too high for the requested elastic pool service tier.   * 400 InvalidInputValueForDatabaseDtuMax - Attempting to set the DTU max per database for the Resource Pool which doesn&#39;t match the allowed values.   * 400 ElasticPoolDbDtuMinAboveLimit - The requested DTU min per database is too high for the requested service tier.   * 400 InvalidInputValueForDatabaseDtuMin - Attempting to set the DTU min per database for the Resource Pool which doesn&#39;t match the allowed values.   * 400 ElasticPoolStorageAboveLimitGB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ElasticPoolOverStorageUsage - Attempting to write data to a database when the storage limit of the elastic pool has been reached.   * 400 ElasticPoolsNotEnabled - Elastic pools have not been enabled in this region.   * 400 ElasticPoolNotEmpty - Request to delete an elastic pool that is not empty.   * 400 ElasticPoolStorageBelowLimitGB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ElasticPoolStorageNotAllowedGB - Attempting to set the elastic pool storage limit in gb which doesn&#39;t match the allowed values.   * 400 ElasticPoolDatabaseLimit - The elastic pool has reached its limit for number of databases.   * 400 ElasticPoolStorageDecreasePrecondition - There was an attempt to decrease the storage limit of the elastic pool below its storage usage.   * 400 ElasticPoolBusy - A management operation was attempted on an elastic pool which is busy.   * 400 InvalidInputValueDatabaseDtuMinLargerThanMax - Attempting to set the DTU min per database higher than the DTU max per database.   * 404 SubscriptionDoesNotHaveServer - The requested server was not found   * 404 ElasticPoolNotFound - The specified elastic pool does not exist for the specified server.   * 404 OperationIdNotFound - The operation with Id does not exist.   * 404 ResourceNotFound - The requested resource was not found.   * 405 NotSupported - This functionality is not supported.   * 409 ServerDisabled - Server is disabled.   * 409 OperationCancelled - The operation has been cancelled by user.   * 409 OperationInterrupted - The operation on the resource could not be completed because it was interrupted by another operation on the same resource.   * 500 OperationTimedOut - The operation timed out and automatically rolled back. Please retry the operation.   * 503 ServiceTemporarilyUnavailable - Feature temporarily unavailable. </td><td>  -  </td></tr>
     </table>
     */
    public ElasticPool elasticPoolsGet(String resourceGroupName, String serverName, String elasticPoolName, String subscriptionId, String apiVersion) throws ApiException {
        ApiResponse<ElasticPool> localVarResp = elasticPoolsGetWithHttpInfo(resourceGroupName, serverName, elasticPoolName, subscriptionId, apiVersion);
        return localVarResp.getData();
    }

    /**
     * 
     * Gets an elastic pool.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. (required)
     * @param serverName The name of the server. (required)
     * @param elasticPoolName The name of the elastic pool. (required)
     * @param subscriptionId The subscription ID that identifies an Azure subscription. (required)
     * @param apiVersion The API version to use for the request. (required)
     * @return ApiResponse&lt;ElasticPool&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Succeeded </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> *** Error Responses: ***   * 400 ElasticPoolStorageBelowLimitMB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ProvisioningDisabled - Displays error message from resources operation authorizer as is, without changes   * 400 ElasticPoolStorageNotAllowedMB - Attempting to set the elastic pool storage limit in mb which doesn&#39;t match the allowed values.   * 400 ElasticPoolStorageAboveLimitMB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ElasticPoolUpdateHkNotAllowed - The elastic pool cannot lower its service tier from Premium to Standard or Basic since one or more of its databases use memory-optimized objects.   * 400 ElasticPoolOverFileSpace - Insufficient file space in the elastic pool.   * 400 InvalidTier - The user specified an invalid tier.   * 400 ServerQuotaExceeded - Server cannot be added to a subscription because it will exceed quota.   * 400 ElasticPoolAlreadyExists - The server already contains an elastic pool with the specified name.   * 400 InvalidInputValueForEdition - Specified edition is not supported for elastic pool provisioning.   * 400 ElasticPoolDtuBelowLimit - The requested DTU value is too low for the requested elastic pool service tier.   * 400 ElasticPoolDtuAboveLimit - The requested DTU value is too high for the requested elastic pool service tier.   * 400 ElasticPoolDbDtuMaxBelowLimit - The requested per database DTU max is too low for the requested elastic pool service tier.   * 400 ElasticPoolDbDtuMaxAboveLimit - The requested per database DTU max is too high for the requested elastic pool service tier.   * 400 InvalidInputValueForDatabaseDtuMax - Attempting to set the DTU max per database for the Resource Pool which doesn&#39;t match the allowed values.   * 400 ElasticPoolDbDtuMinAboveLimit - The requested DTU min per database is too high for the requested service tier.   * 400 InvalidInputValueForDatabaseDtuMin - Attempting to set the DTU min per database for the Resource Pool which doesn&#39;t match the allowed values.   * 400 ElasticPoolStorageAboveLimitGB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ElasticPoolOverStorageUsage - Attempting to write data to a database when the storage limit of the elastic pool has been reached.   * 400 ElasticPoolsNotEnabled - Elastic pools have not been enabled in this region.   * 400 ElasticPoolNotEmpty - Request to delete an elastic pool that is not empty.   * 400 ElasticPoolStorageBelowLimitGB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ElasticPoolStorageNotAllowedGB - Attempting to set the elastic pool storage limit in gb which doesn&#39;t match the allowed values.   * 400 ElasticPoolDatabaseLimit - The elastic pool has reached its limit for number of databases.   * 400 ElasticPoolStorageDecreasePrecondition - There was an attempt to decrease the storage limit of the elastic pool below its storage usage.   * 400 ElasticPoolBusy - A management operation was attempted on an elastic pool which is busy.   * 400 InvalidInputValueDatabaseDtuMinLargerThanMax - Attempting to set the DTU min per database higher than the DTU max per database.   * 404 SubscriptionDoesNotHaveServer - The requested server was not found   * 404 ElasticPoolNotFound - The specified elastic pool does not exist for the specified server.   * 404 OperationIdNotFound - The operation with Id does not exist.   * 404 ResourceNotFound - The requested resource was not found.   * 405 NotSupported - This functionality is not supported.   * 409 ServerDisabled - Server is disabled.   * 409 OperationCancelled - The operation has been cancelled by user.   * 409 OperationInterrupted - The operation on the resource could not be completed because it was interrupted by another operation on the same resource.   * 500 OperationTimedOut - The operation timed out and automatically rolled back. Please retry the operation.   * 503 ServiceTemporarilyUnavailable - Feature temporarily unavailable. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ElasticPool> elasticPoolsGetWithHttpInfo(String resourceGroupName, String serverName, String elasticPoolName, String subscriptionId, String apiVersion) throws ApiException {
        okhttp3.Call localVarCall = elasticPoolsGetValidateBeforeCall(resourceGroupName, serverName, elasticPoolName, subscriptionId, apiVersion, null);
        Type localVarReturnType = new TypeToken<ElasticPool>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Gets an elastic pool.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. (required)
     * @param serverName The name of the server. (required)
     * @param elasticPoolName The name of the elastic pool. (required)
     * @param subscriptionId The subscription ID that identifies an Azure subscription. (required)
     * @param apiVersion The API version to use for the request. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Succeeded </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> *** Error Responses: ***   * 400 ElasticPoolStorageBelowLimitMB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ProvisioningDisabled - Displays error message from resources operation authorizer as is, without changes   * 400 ElasticPoolStorageNotAllowedMB - Attempting to set the elastic pool storage limit in mb which doesn&#39;t match the allowed values.   * 400 ElasticPoolStorageAboveLimitMB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ElasticPoolUpdateHkNotAllowed - The elastic pool cannot lower its service tier from Premium to Standard or Basic since one or more of its databases use memory-optimized objects.   * 400 ElasticPoolOverFileSpace - Insufficient file space in the elastic pool.   * 400 InvalidTier - The user specified an invalid tier.   * 400 ServerQuotaExceeded - Server cannot be added to a subscription because it will exceed quota.   * 400 ElasticPoolAlreadyExists - The server already contains an elastic pool with the specified name.   * 400 InvalidInputValueForEdition - Specified edition is not supported for elastic pool provisioning.   * 400 ElasticPoolDtuBelowLimit - The requested DTU value is too low for the requested elastic pool service tier.   * 400 ElasticPoolDtuAboveLimit - The requested DTU value is too high for the requested elastic pool service tier.   * 400 ElasticPoolDbDtuMaxBelowLimit - The requested per database DTU max is too low for the requested elastic pool service tier.   * 400 ElasticPoolDbDtuMaxAboveLimit - The requested per database DTU max is too high for the requested elastic pool service tier.   * 400 InvalidInputValueForDatabaseDtuMax - Attempting to set the DTU max per database for the Resource Pool which doesn&#39;t match the allowed values.   * 400 ElasticPoolDbDtuMinAboveLimit - The requested DTU min per database is too high for the requested service tier.   * 400 InvalidInputValueForDatabaseDtuMin - Attempting to set the DTU min per database for the Resource Pool which doesn&#39;t match the allowed values.   * 400 ElasticPoolStorageAboveLimitGB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ElasticPoolOverStorageUsage - Attempting to write data to a database when the storage limit of the elastic pool has been reached.   * 400 ElasticPoolsNotEnabled - Elastic pools have not been enabled in this region.   * 400 ElasticPoolNotEmpty - Request to delete an elastic pool that is not empty.   * 400 ElasticPoolStorageBelowLimitGB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ElasticPoolStorageNotAllowedGB - Attempting to set the elastic pool storage limit in gb which doesn&#39;t match the allowed values.   * 400 ElasticPoolDatabaseLimit - The elastic pool has reached its limit for number of databases.   * 400 ElasticPoolStorageDecreasePrecondition - There was an attempt to decrease the storage limit of the elastic pool below its storage usage.   * 400 ElasticPoolBusy - A management operation was attempted on an elastic pool which is busy.   * 400 InvalidInputValueDatabaseDtuMinLargerThanMax - Attempting to set the DTU min per database higher than the DTU max per database.   * 404 SubscriptionDoesNotHaveServer - The requested server was not found   * 404 ElasticPoolNotFound - The specified elastic pool does not exist for the specified server.   * 404 OperationIdNotFound - The operation with Id does not exist.   * 404 ResourceNotFound - The requested resource was not found.   * 405 NotSupported - This functionality is not supported.   * 409 ServerDisabled - Server is disabled.   * 409 OperationCancelled - The operation has been cancelled by user.   * 409 OperationInterrupted - The operation on the resource could not be completed because it was interrupted by another operation on the same resource.   * 500 OperationTimedOut - The operation timed out and automatically rolled back. Please retry the operation.   * 503 ServiceTemporarilyUnavailable - Feature temporarily unavailable. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call elasticPoolsGetAsync(String resourceGroupName, String serverName, String elasticPoolName, String subscriptionId, String apiVersion, final ApiCallback<ElasticPool> _callback) throws ApiException {

        okhttp3.Call localVarCall = elasticPoolsGetValidateBeforeCall(resourceGroupName, serverName, elasticPoolName, subscriptionId, apiVersion, _callback);
        Type localVarReturnType = new TypeToken<ElasticPool>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for elasticPoolsListByServer
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. (required)
     * @param serverName The name of the server. (required)
     * @param subscriptionId The subscription ID that identifies an Azure subscription. (required)
     * @param apiVersion The API version to use for the request. (required)
     * @param $skip The number of elements in the collection to skip. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Succeeded </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> *** Error Responses: ***   * 400 ElasticPoolStorageBelowLimitMB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ProvisioningDisabled - Displays error message from resources operation authorizer as is, without changes   * 400 ElasticPoolStorageNotAllowedMB - Attempting to set the elastic pool storage limit in mb which doesn&#39;t match the allowed values.   * 400 ElasticPoolStorageAboveLimitMB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ElasticPoolUpdateHkNotAllowed - The elastic pool cannot lower its service tier from Premium to Standard or Basic since one or more of its databases use memory-optimized objects.   * 400 ElasticPoolOverFileSpace - Insufficient file space in the elastic pool.   * 400 InvalidTier - The user specified an invalid tier.   * 400 ServerQuotaExceeded - Server cannot be added to a subscription because it will exceed quota.   * 400 ElasticPoolAlreadyExists - The server already contains an elastic pool with the specified name.   * 400 InvalidInputValueForEdition - Specified edition is not supported for elastic pool provisioning.   * 400 ElasticPoolDtuBelowLimit - The requested DTU value is too low for the requested elastic pool service tier.   * 400 ElasticPoolDtuAboveLimit - The requested DTU value is too high for the requested elastic pool service tier.   * 400 ElasticPoolDbDtuMaxBelowLimit - The requested per database DTU max is too low for the requested elastic pool service tier.   * 400 ElasticPoolDbDtuMaxAboveLimit - The requested per database DTU max is too high for the requested elastic pool service tier.   * 400 InvalidInputValueForDatabaseDtuMax - Attempting to set the DTU max per database for the Resource Pool which doesn&#39;t match the allowed values.   * 400 ElasticPoolDbDtuMinAboveLimit - The requested DTU min per database is too high for the requested service tier.   * 400 InvalidInputValueForDatabaseDtuMin - Attempting to set the DTU min per database for the Resource Pool which doesn&#39;t match the allowed values.   * 400 ElasticPoolStorageAboveLimitGB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ElasticPoolOverStorageUsage - Attempting to write data to a database when the storage limit of the elastic pool has been reached.   * 400 ElasticPoolsNotEnabled - Elastic pools have not been enabled in this region.   * 400 ElasticPoolNotEmpty - Request to delete an elastic pool that is not empty.   * 400 ElasticPoolStorageBelowLimitGB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ElasticPoolStorageNotAllowedGB - Attempting to set the elastic pool storage limit in gb which doesn&#39;t match the allowed values.   * 400 ElasticPoolDatabaseLimit - The elastic pool has reached its limit for number of databases.   * 400 ElasticPoolStorageDecreasePrecondition - There was an attempt to decrease the storage limit of the elastic pool below its storage usage.   * 400 ElasticPoolBusy - A management operation was attempted on an elastic pool which is busy.   * 400 InvalidInputValueDatabaseDtuMinLargerThanMax - Attempting to set the DTU min per database higher than the DTU max per database.   * 404 SubscriptionDoesNotHaveServer - The requested server was not found   * 404 ElasticPoolNotFound - The specified elastic pool does not exist for the specified server.   * 404 OperationIdNotFound - The operation with Id does not exist.   * 405 NotSupported - This functionality is not supported.   * 409 ServerDisabled - Server is disabled.   * 409 OperationCancelled - The operation has been cancelled by user.   * 409 OperationInterrupted - The operation on the resource could not be completed because it was interrupted by another operation on the same resource.   * 500 OperationTimedOut - The operation timed out and automatically rolled back. Please retry the operation.   * 503 ServiceTemporarilyUnavailable - Feature temporarily unavailable. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call elasticPoolsListByServerCall(String resourceGroupName, String serverName, String subscriptionId, String apiVersion, Integer $skip, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/elasticPools"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "serverName" + "}", localVarApiClient.escapeString(serverName.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if ($skip != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$skip", $skip));
        }

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call elasticPoolsListByServerValidateBeforeCall(String resourceGroupName, String serverName, String subscriptionId, String apiVersion, Integer $skip, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling elasticPoolsListByServer(Async)");
        }

        // verify the required parameter 'serverName' is set
        if (serverName == null) {
            throw new ApiException("Missing the required parameter 'serverName' when calling elasticPoolsListByServer(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling elasticPoolsListByServer(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling elasticPoolsListByServer(Async)");
        }

        return elasticPoolsListByServerCall(resourceGroupName, serverName, subscriptionId, apiVersion, $skip, _callback);

    }

    /**
     * 
     * Gets all elastic pools in a server.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. (required)
     * @param serverName The name of the server. (required)
     * @param subscriptionId The subscription ID that identifies an Azure subscription. (required)
     * @param apiVersion The API version to use for the request. (required)
     * @param $skip The number of elements in the collection to skip. (optional)
     * @return ElasticPoolListResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Succeeded </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> *** Error Responses: ***   * 400 ElasticPoolStorageBelowLimitMB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ProvisioningDisabled - Displays error message from resources operation authorizer as is, without changes   * 400 ElasticPoolStorageNotAllowedMB - Attempting to set the elastic pool storage limit in mb which doesn&#39;t match the allowed values.   * 400 ElasticPoolStorageAboveLimitMB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ElasticPoolUpdateHkNotAllowed - The elastic pool cannot lower its service tier from Premium to Standard or Basic since one or more of its databases use memory-optimized objects.   * 400 ElasticPoolOverFileSpace - Insufficient file space in the elastic pool.   * 400 InvalidTier - The user specified an invalid tier.   * 400 ServerQuotaExceeded - Server cannot be added to a subscription because it will exceed quota.   * 400 ElasticPoolAlreadyExists - The server already contains an elastic pool with the specified name.   * 400 InvalidInputValueForEdition - Specified edition is not supported for elastic pool provisioning.   * 400 ElasticPoolDtuBelowLimit - The requested DTU value is too low for the requested elastic pool service tier.   * 400 ElasticPoolDtuAboveLimit - The requested DTU value is too high for the requested elastic pool service tier.   * 400 ElasticPoolDbDtuMaxBelowLimit - The requested per database DTU max is too low for the requested elastic pool service tier.   * 400 ElasticPoolDbDtuMaxAboveLimit - The requested per database DTU max is too high for the requested elastic pool service tier.   * 400 InvalidInputValueForDatabaseDtuMax - Attempting to set the DTU max per database for the Resource Pool which doesn&#39;t match the allowed values.   * 400 ElasticPoolDbDtuMinAboveLimit - The requested DTU min per database is too high for the requested service tier.   * 400 InvalidInputValueForDatabaseDtuMin - Attempting to set the DTU min per database for the Resource Pool which doesn&#39;t match the allowed values.   * 400 ElasticPoolStorageAboveLimitGB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ElasticPoolOverStorageUsage - Attempting to write data to a database when the storage limit of the elastic pool has been reached.   * 400 ElasticPoolsNotEnabled - Elastic pools have not been enabled in this region.   * 400 ElasticPoolNotEmpty - Request to delete an elastic pool that is not empty.   * 400 ElasticPoolStorageBelowLimitGB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ElasticPoolStorageNotAllowedGB - Attempting to set the elastic pool storage limit in gb which doesn&#39;t match the allowed values.   * 400 ElasticPoolDatabaseLimit - The elastic pool has reached its limit for number of databases.   * 400 ElasticPoolStorageDecreasePrecondition - There was an attempt to decrease the storage limit of the elastic pool below its storage usage.   * 400 ElasticPoolBusy - A management operation was attempted on an elastic pool which is busy.   * 400 InvalidInputValueDatabaseDtuMinLargerThanMax - Attempting to set the DTU min per database higher than the DTU max per database.   * 404 SubscriptionDoesNotHaveServer - The requested server was not found   * 404 ElasticPoolNotFound - The specified elastic pool does not exist for the specified server.   * 404 OperationIdNotFound - The operation with Id does not exist.   * 405 NotSupported - This functionality is not supported.   * 409 ServerDisabled - Server is disabled.   * 409 OperationCancelled - The operation has been cancelled by user.   * 409 OperationInterrupted - The operation on the resource could not be completed because it was interrupted by another operation on the same resource.   * 500 OperationTimedOut - The operation timed out and automatically rolled back. Please retry the operation.   * 503 ServiceTemporarilyUnavailable - Feature temporarily unavailable. </td><td>  -  </td></tr>
     </table>
     */
    public ElasticPoolListResult elasticPoolsListByServer(String resourceGroupName, String serverName, String subscriptionId, String apiVersion, Integer $skip) throws ApiException {
        ApiResponse<ElasticPoolListResult> localVarResp = elasticPoolsListByServerWithHttpInfo(resourceGroupName, serverName, subscriptionId, apiVersion, $skip);
        return localVarResp.getData();
    }

    /**
     * 
     * Gets all elastic pools in a server.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. (required)
     * @param serverName The name of the server. (required)
     * @param subscriptionId The subscription ID that identifies an Azure subscription. (required)
     * @param apiVersion The API version to use for the request. (required)
     * @param $skip The number of elements in the collection to skip. (optional)
     * @return ApiResponse&lt;ElasticPoolListResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Succeeded </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> *** Error Responses: ***   * 400 ElasticPoolStorageBelowLimitMB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ProvisioningDisabled - Displays error message from resources operation authorizer as is, without changes   * 400 ElasticPoolStorageNotAllowedMB - Attempting to set the elastic pool storage limit in mb which doesn&#39;t match the allowed values.   * 400 ElasticPoolStorageAboveLimitMB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ElasticPoolUpdateHkNotAllowed - The elastic pool cannot lower its service tier from Premium to Standard or Basic since one or more of its databases use memory-optimized objects.   * 400 ElasticPoolOverFileSpace - Insufficient file space in the elastic pool.   * 400 InvalidTier - The user specified an invalid tier.   * 400 ServerQuotaExceeded - Server cannot be added to a subscription because it will exceed quota.   * 400 ElasticPoolAlreadyExists - The server already contains an elastic pool with the specified name.   * 400 InvalidInputValueForEdition - Specified edition is not supported for elastic pool provisioning.   * 400 ElasticPoolDtuBelowLimit - The requested DTU value is too low for the requested elastic pool service tier.   * 400 ElasticPoolDtuAboveLimit - The requested DTU value is too high for the requested elastic pool service tier.   * 400 ElasticPoolDbDtuMaxBelowLimit - The requested per database DTU max is too low for the requested elastic pool service tier.   * 400 ElasticPoolDbDtuMaxAboveLimit - The requested per database DTU max is too high for the requested elastic pool service tier.   * 400 InvalidInputValueForDatabaseDtuMax - Attempting to set the DTU max per database for the Resource Pool which doesn&#39;t match the allowed values.   * 400 ElasticPoolDbDtuMinAboveLimit - The requested DTU min per database is too high for the requested service tier.   * 400 InvalidInputValueForDatabaseDtuMin - Attempting to set the DTU min per database for the Resource Pool which doesn&#39;t match the allowed values.   * 400 ElasticPoolStorageAboveLimitGB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ElasticPoolOverStorageUsage - Attempting to write data to a database when the storage limit of the elastic pool has been reached.   * 400 ElasticPoolsNotEnabled - Elastic pools have not been enabled in this region.   * 400 ElasticPoolNotEmpty - Request to delete an elastic pool that is not empty.   * 400 ElasticPoolStorageBelowLimitGB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ElasticPoolStorageNotAllowedGB - Attempting to set the elastic pool storage limit in gb which doesn&#39;t match the allowed values.   * 400 ElasticPoolDatabaseLimit - The elastic pool has reached its limit for number of databases.   * 400 ElasticPoolStorageDecreasePrecondition - There was an attempt to decrease the storage limit of the elastic pool below its storage usage.   * 400 ElasticPoolBusy - A management operation was attempted on an elastic pool which is busy.   * 400 InvalidInputValueDatabaseDtuMinLargerThanMax - Attempting to set the DTU min per database higher than the DTU max per database.   * 404 SubscriptionDoesNotHaveServer - The requested server was not found   * 404 ElasticPoolNotFound - The specified elastic pool does not exist for the specified server.   * 404 OperationIdNotFound - The operation with Id does not exist.   * 405 NotSupported - This functionality is not supported.   * 409 ServerDisabled - Server is disabled.   * 409 OperationCancelled - The operation has been cancelled by user.   * 409 OperationInterrupted - The operation on the resource could not be completed because it was interrupted by another operation on the same resource.   * 500 OperationTimedOut - The operation timed out and automatically rolled back. Please retry the operation.   * 503 ServiceTemporarilyUnavailable - Feature temporarily unavailable. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ElasticPoolListResult> elasticPoolsListByServerWithHttpInfo(String resourceGroupName, String serverName, String subscriptionId, String apiVersion, Integer $skip) throws ApiException {
        okhttp3.Call localVarCall = elasticPoolsListByServerValidateBeforeCall(resourceGroupName, serverName, subscriptionId, apiVersion, $skip, null);
        Type localVarReturnType = new TypeToken<ElasticPoolListResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Gets all elastic pools in a server.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. (required)
     * @param serverName The name of the server. (required)
     * @param subscriptionId The subscription ID that identifies an Azure subscription. (required)
     * @param apiVersion The API version to use for the request. (required)
     * @param $skip The number of elements in the collection to skip. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Succeeded </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> *** Error Responses: ***   * 400 ElasticPoolStorageBelowLimitMB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ProvisioningDisabled - Displays error message from resources operation authorizer as is, without changes   * 400 ElasticPoolStorageNotAllowedMB - Attempting to set the elastic pool storage limit in mb which doesn&#39;t match the allowed values.   * 400 ElasticPoolStorageAboveLimitMB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ElasticPoolUpdateHkNotAllowed - The elastic pool cannot lower its service tier from Premium to Standard or Basic since one or more of its databases use memory-optimized objects.   * 400 ElasticPoolOverFileSpace - Insufficient file space in the elastic pool.   * 400 InvalidTier - The user specified an invalid tier.   * 400 ServerQuotaExceeded - Server cannot be added to a subscription because it will exceed quota.   * 400 ElasticPoolAlreadyExists - The server already contains an elastic pool with the specified name.   * 400 InvalidInputValueForEdition - Specified edition is not supported for elastic pool provisioning.   * 400 ElasticPoolDtuBelowLimit - The requested DTU value is too low for the requested elastic pool service tier.   * 400 ElasticPoolDtuAboveLimit - The requested DTU value is too high for the requested elastic pool service tier.   * 400 ElasticPoolDbDtuMaxBelowLimit - The requested per database DTU max is too low for the requested elastic pool service tier.   * 400 ElasticPoolDbDtuMaxAboveLimit - The requested per database DTU max is too high for the requested elastic pool service tier.   * 400 InvalidInputValueForDatabaseDtuMax - Attempting to set the DTU max per database for the Resource Pool which doesn&#39;t match the allowed values.   * 400 ElasticPoolDbDtuMinAboveLimit - The requested DTU min per database is too high for the requested service tier.   * 400 InvalidInputValueForDatabaseDtuMin - Attempting to set the DTU min per database for the Resource Pool which doesn&#39;t match the allowed values.   * 400 ElasticPoolStorageAboveLimitGB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ElasticPoolOverStorageUsage - Attempting to write data to a database when the storage limit of the elastic pool has been reached.   * 400 ElasticPoolsNotEnabled - Elastic pools have not been enabled in this region.   * 400 ElasticPoolNotEmpty - Request to delete an elastic pool that is not empty.   * 400 ElasticPoolStorageBelowLimitGB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ElasticPoolStorageNotAllowedGB - Attempting to set the elastic pool storage limit in gb which doesn&#39;t match the allowed values.   * 400 ElasticPoolDatabaseLimit - The elastic pool has reached its limit for number of databases.   * 400 ElasticPoolStorageDecreasePrecondition - There was an attempt to decrease the storage limit of the elastic pool below its storage usage.   * 400 ElasticPoolBusy - A management operation was attempted on an elastic pool which is busy.   * 400 InvalidInputValueDatabaseDtuMinLargerThanMax - Attempting to set the DTU min per database higher than the DTU max per database.   * 404 SubscriptionDoesNotHaveServer - The requested server was not found   * 404 ElasticPoolNotFound - The specified elastic pool does not exist for the specified server.   * 404 OperationIdNotFound - The operation with Id does not exist.   * 405 NotSupported - This functionality is not supported.   * 409 ServerDisabled - Server is disabled.   * 409 OperationCancelled - The operation has been cancelled by user.   * 409 OperationInterrupted - The operation on the resource could not be completed because it was interrupted by another operation on the same resource.   * 500 OperationTimedOut - The operation timed out and automatically rolled back. Please retry the operation.   * 503 ServiceTemporarilyUnavailable - Feature temporarily unavailable. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call elasticPoolsListByServerAsync(String resourceGroupName, String serverName, String subscriptionId, String apiVersion, Integer $skip, final ApiCallback<ElasticPoolListResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = elasticPoolsListByServerValidateBeforeCall(resourceGroupName, serverName, subscriptionId, apiVersion, $skip, _callback);
        Type localVarReturnType = new TypeToken<ElasticPoolListResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for elasticPoolsUpdate
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. (required)
     * @param serverName The name of the server. (required)
     * @param elasticPoolName The name of the elastic pool. (required)
     * @param subscriptionId The subscription ID that identifies an Azure subscription. (required)
     * @param apiVersion The API version to use for the request. (required)
     * @param parameters The elastic pool update parameters. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Updated the elastic pool </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> *** Error Responses: ***   * 400 ElasticPoolStorageBelowLimitMB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ProvisioningDisabled - Displays error message from resources operation authorizer as is, without changes   * 400 ElasticPoolStorageNotAllowedMB - Attempting to set the elastic pool storage limit in mb which doesn&#39;t match the allowed values.   * 400 ElasticPoolStorageAboveLimitMB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ElasticPoolUpdateHkNotAllowed - The elastic pool cannot lower its service tier from Premium to Standard or Basic since one or more of its databases use memory-optimized objects.   * 400 ElasticPoolOverFileSpace - Insufficient file space in the elastic pool.   * 400 InvalidTier - The user specified an invalid tier.   * 400 ServerQuotaExceeded - Server cannot be added to a subscription because it will exceed quota.   * 400 ElasticPoolAlreadyExists - The server already contains an elastic pool with the specified name.   * 400 InvalidInputValueForEdition - Specified edition is not supported for elastic pool provisioning.   * 400 ElasticPoolDtuBelowLimit - The requested DTU value is too low for the requested elastic pool service tier.   * 400 ElasticPoolDtuAboveLimit - The requested DTU value is too high for the requested elastic pool service tier.   * 400 ElasticPoolDbDtuMaxBelowLimit - The requested per database DTU max is too low for the requested elastic pool service tier.   * 400 ElasticPoolDbDtuMaxAboveLimit - The requested per database DTU max is too high for the requested elastic pool service tier.   * 400 InvalidInputValueForDatabaseDtuMax - Attempting to set the DTU max per database for the Resource Pool which doesn&#39;t match the allowed values.   * 400 ElasticPoolDbDtuMinAboveLimit - The requested DTU min per database is too high for the requested service tier.   * 400 InvalidInputValueForDatabaseDtuMin - Attempting to set the DTU min per database for the Resource Pool which doesn&#39;t match the allowed values.   * 400 ElasticPoolStorageAboveLimitGB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ElasticPoolOverStorageUsage - Attempting to write data to a database when the storage limit of the elastic pool has been reached.   * 400 ElasticPoolsNotEnabled - Elastic pools have not been enabled in this region.   * 400 ElasticPoolNotEmpty - Request to delete an elastic pool that is not empty.   * 400 ElasticPoolStorageBelowLimitGB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ElasticPoolStorageNotAllowedGB - Attempting to set the elastic pool storage limit in gb which doesn&#39;t match the allowed values.   * 400 ElasticPoolDatabaseLimit - The elastic pool has reached its limit for number of databases.   * 400 ElasticPoolStorageDecreasePrecondition - There was an attempt to decrease the storage limit of the elastic pool below its storage usage.   * 400 ElasticPoolBusy - A management operation was attempted on an elastic pool which is busy.   * 400 InvalidInputValueDatabaseDtuMinLargerThanMax - Attempting to set the DTU min per database higher than the DTU max per database.   * 400 InvalidResourceRequestBody - The resource or resource properties in the request body is empty or invalid.   * 400 InvalidSkuName - Invalid SKU name.   * 400 MismatchedSkuNameAndCapacity - Mismatch between SKU name and capacity.   * 400 MismatchedSkuNameAndTier - Mismatch between SKU name and tier.   * 400 MismatchedSkuNameAndFamily - Mismatch between SKU name and family.   * 400 ElasticPoolStorageBelowLimitMB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ProvisioningDisabled - Displays error message from resources operation authorizer as is, without changes   * 400 ElasticPoolStorageNotAllowedMB - Attempting to set the elastic pool storage limit in mb which doesn&#39;t match the allowed values.   * 400 ElasticPoolStorageAboveLimitMB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ElasticPoolUpdateHkNotAllowed - The elastic pool cannot lower its service tier from Premium to Standard or Basic since one or more of its databases use memory-optimized objects.   * 400 ElasticPoolOverFileSpace - Insufficient file space in the elastic pool.   * 400 InvalidTier - The user specified an invalid tier.   * 400 ServerQuotaExceeded - Server cannot be added to a subscription because it will exceed quota.   * 400 ElasticPoolAlreadyExists - The server already contains an elastic pool with the specified name.   * 400 InvalidInputValueForEdition - Specified edition is not supported for elastic pool provisioning.   * 400 ElasticPoolDtuBelowLimit - The requested DTU value is too low for the requested elastic pool service tier.   * 400 ElasticPoolDtuAboveLimit - The requested DTU value is too high for the requested elastic pool service tier.   * 400 ElasticPoolDbDtuMaxBelowLimit - The requested per database DTU max is too low for the requested elastic pool service tier.   * 400 ElasticPoolDbDtuMaxAboveLimit - The requested per database DTU max is too high for the requested elastic pool service tier.   * 400 InvalidInputValueForDatabaseDtuMax - Attempting to set the DTU max per database for the Resource Pool which doesn&#39;t match the allowed values.   * 400 ElasticPoolDbDtuMinAboveLimit - The requested DTU min per database is too high for the requested service tier.   * 400 InvalidInputValueForDatabaseDtuMin - Attempting to set the DTU min per database for the Resource Pool which doesn&#39;t match the allowed values.   * 400 ElasticPoolStorageAboveLimitGB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ElasticPoolOverStorageUsage - Attempting to write data to a database when the storage limit of the elastic pool has been reached.   * 400 ElasticPoolsNotEnabled - Elastic pools have not been enabled in this region.   * 400 ElasticPoolNotEmpty - Request to delete an elastic pool that is not empty.   * 400 ElasticPoolStorageBelowLimitGB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ElasticPoolStorageNotAllowedGB - Attempting to set the elastic pool storage limit in gb which doesn&#39;t match the allowed values.   * 400 ElasticPoolDatabaseLimit - The elastic pool has reached its limit for number of databases.   * 400 ElasticPoolStorageDecreasePrecondition - There was an attempt to decrease the storage limit of the elastic pool below its storage usage.   * 400 ElasticPoolBusy - A management operation was attempted on an elastic pool which is busy.   * 400 InvalidInputValueDatabaseDtuMinLargerThanMax - Attempting to set the DTU min per database higher than the DTU max per database.   * 404 SubscriptionDoesNotHaveServer - The requested server was not found   * 404 ElasticPoolNotFound - The specified elastic pool does not exist for the specified server.   * 404 OperationIdNotFound - The operation with Id does not exist.   * 404 ElasticPoolNotFound - The specified elastic pool does not exist for the specified server.   * 405 NotSupported - This functionality is not supported.   * 405 NotSupported - This functionality is not supported.   * 409 ServerDisabled - Server is disabled.   * 409 OperationCancelled - The operation has been cancelled by user.   * 409 OperationInterrupted - The operation on the resource could not be completed because it was interrupted by another operation on the same resource.   * 409 ServerDisabled - Server is disabled.   * 500 OperationTimedOut - The operation timed out and automatically rolled back. Please retry the operation.   * 503 ServiceTemporarilyUnavailable - Feature temporarily unavailable.   * 503 ServiceTemporarilyUnavailable - Feature temporarily unavailable. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call elasticPoolsUpdateCall(String resourceGroupName, String serverName, String elasticPoolName, String subscriptionId, String apiVersion, ElasticPoolUpdate parameters, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = parameters;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/elasticPools/{elasticPoolName}"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "serverName" + "}", localVarApiClient.escapeString(serverName.toString()))
            .replace("{" + "elasticPoolName" + "}", localVarApiClient.escapeString(elasticPoolName.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "PATCH", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call elasticPoolsUpdateValidateBeforeCall(String resourceGroupName, String serverName, String elasticPoolName, String subscriptionId, String apiVersion, ElasticPoolUpdate parameters, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling elasticPoolsUpdate(Async)");
        }

        // verify the required parameter 'serverName' is set
        if (serverName == null) {
            throw new ApiException("Missing the required parameter 'serverName' when calling elasticPoolsUpdate(Async)");
        }

        // verify the required parameter 'elasticPoolName' is set
        if (elasticPoolName == null) {
            throw new ApiException("Missing the required parameter 'elasticPoolName' when calling elasticPoolsUpdate(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling elasticPoolsUpdate(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling elasticPoolsUpdate(Async)");
        }

        // verify the required parameter 'parameters' is set
        if (parameters == null) {
            throw new ApiException("Missing the required parameter 'parameters' when calling elasticPoolsUpdate(Async)");
        }

        return elasticPoolsUpdateCall(resourceGroupName, serverName, elasticPoolName, subscriptionId, apiVersion, parameters, _callback);

    }

    /**
     * 
     * Updates an elastic pool.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. (required)
     * @param serverName The name of the server. (required)
     * @param elasticPoolName The name of the elastic pool. (required)
     * @param subscriptionId The subscription ID that identifies an Azure subscription. (required)
     * @param apiVersion The API version to use for the request. (required)
     * @param parameters The elastic pool update parameters. (required)
     * @return ElasticPool
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Updated the elastic pool </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> *** Error Responses: ***   * 400 ElasticPoolStorageBelowLimitMB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ProvisioningDisabled - Displays error message from resources operation authorizer as is, without changes   * 400 ElasticPoolStorageNotAllowedMB - Attempting to set the elastic pool storage limit in mb which doesn&#39;t match the allowed values.   * 400 ElasticPoolStorageAboveLimitMB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ElasticPoolUpdateHkNotAllowed - The elastic pool cannot lower its service tier from Premium to Standard or Basic since one or more of its databases use memory-optimized objects.   * 400 ElasticPoolOverFileSpace - Insufficient file space in the elastic pool.   * 400 InvalidTier - The user specified an invalid tier.   * 400 ServerQuotaExceeded - Server cannot be added to a subscription because it will exceed quota.   * 400 ElasticPoolAlreadyExists - The server already contains an elastic pool with the specified name.   * 400 InvalidInputValueForEdition - Specified edition is not supported for elastic pool provisioning.   * 400 ElasticPoolDtuBelowLimit - The requested DTU value is too low for the requested elastic pool service tier.   * 400 ElasticPoolDtuAboveLimit - The requested DTU value is too high for the requested elastic pool service tier.   * 400 ElasticPoolDbDtuMaxBelowLimit - The requested per database DTU max is too low for the requested elastic pool service tier.   * 400 ElasticPoolDbDtuMaxAboveLimit - The requested per database DTU max is too high for the requested elastic pool service tier.   * 400 InvalidInputValueForDatabaseDtuMax - Attempting to set the DTU max per database for the Resource Pool which doesn&#39;t match the allowed values.   * 400 ElasticPoolDbDtuMinAboveLimit - The requested DTU min per database is too high for the requested service tier.   * 400 InvalidInputValueForDatabaseDtuMin - Attempting to set the DTU min per database for the Resource Pool which doesn&#39;t match the allowed values.   * 400 ElasticPoolStorageAboveLimitGB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ElasticPoolOverStorageUsage - Attempting to write data to a database when the storage limit of the elastic pool has been reached.   * 400 ElasticPoolsNotEnabled - Elastic pools have not been enabled in this region.   * 400 ElasticPoolNotEmpty - Request to delete an elastic pool that is not empty.   * 400 ElasticPoolStorageBelowLimitGB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ElasticPoolStorageNotAllowedGB - Attempting to set the elastic pool storage limit in gb which doesn&#39;t match the allowed values.   * 400 ElasticPoolDatabaseLimit - The elastic pool has reached its limit for number of databases.   * 400 ElasticPoolStorageDecreasePrecondition - There was an attempt to decrease the storage limit of the elastic pool below its storage usage.   * 400 ElasticPoolBusy - A management operation was attempted on an elastic pool which is busy.   * 400 InvalidInputValueDatabaseDtuMinLargerThanMax - Attempting to set the DTU min per database higher than the DTU max per database.   * 400 InvalidResourceRequestBody - The resource or resource properties in the request body is empty or invalid.   * 400 InvalidSkuName - Invalid SKU name.   * 400 MismatchedSkuNameAndCapacity - Mismatch between SKU name and capacity.   * 400 MismatchedSkuNameAndTier - Mismatch between SKU name and tier.   * 400 MismatchedSkuNameAndFamily - Mismatch between SKU name and family.   * 400 ElasticPoolStorageBelowLimitMB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ProvisioningDisabled - Displays error message from resources operation authorizer as is, without changes   * 400 ElasticPoolStorageNotAllowedMB - Attempting to set the elastic pool storage limit in mb which doesn&#39;t match the allowed values.   * 400 ElasticPoolStorageAboveLimitMB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ElasticPoolUpdateHkNotAllowed - The elastic pool cannot lower its service tier from Premium to Standard or Basic since one or more of its databases use memory-optimized objects.   * 400 ElasticPoolOverFileSpace - Insufficient file space in the elastic pool.   * 400 InvalidTier - The user specified an invalid tier.   * 400 ServerQuotaExceeded - Server cannot be added to a subscription because it will exceed quota.   * 400 ElasticPoolAlreadyExists - The server already contains an elastic pool with the specified name.   * 400 InvalidInputValueForEdition - Specified edition is not supported for elastic pool provisioning.   * 400 ElasticPoolDtuBelowLimit - The requested DTU value is too low for the requested elastic pool service tier.   * 400 ElasticPoolDtuAboveLimit - The requested DTU value is too high for the requested elastic pool service tier.   * 400 ElasticPoolDbDtuMaxBelowLimit - The requested per database DTU max is too low for the requested elastic pool service tier.   * 400 ElasticPoolDbDtuMaxAboveLimit - The requested per database DTU max is too high for the requested elastic pool service tier.   * 400 InvalidInputValueForDatabaseDtuMax - Attempting to set the DTU max per database for the Resource Pool which doesn&#39;t match the allowed values.   * 400 ElasticPoolDbDtuMinAboveLimit - The requested DTU min per database is too high for the requested service tier.   * 400 InvalidInputValueForDatabaseDtuMin - Attempting to set the DTU min per database for the Resource Pool which doesn&#39;t match the allowed values.   * 400 ElasticPoolStorageAboveLimitGB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ElasticPoolOverStorageUsage - Attempting to write data to a database when the storage limit of the elastic pool has been reached.   * 400 ElasticPoolsNotEnabled - Elastic pools have not been enabled in this region.   * 400 ElasticPoolNotEmpty - Request to delete an elastic pool that is not empty.   * 400 ElasticPoolStorageBelowLimitGB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ElasticPoolStorageNotAllowedGB - Attempting to set the elastic pool storage limit in gb which doesn&#39;t match the allowed values.   * 400 ElasticPoolDatabaseLimit - The elastic pool has reached its limit for number of databases.   * 400 ElasticPoolStorageDecreasePrecondition - There was an attempt to decrease the storage limit of the elastic pool below its storage usage.   * 400 ElasticPoolBusy - A management operation was attempted on an elastic pool which is busy.   * 400 InvalidInputValueDatabaseDtuMinLargerThanMax - Attempting to set the DTU min per database higher than the DTU max per database.   * 404 SubscriptionDoesNotHaveServer - The requested server was not found   * 404 ElasticPoolNotFound - The specified elastic pool does not exist for the specified server.   * 404 OperationIdNotFound - The operation with Id does not exist.   * 404 ElasticPoolNotFound - The specified elastic pool does not exist for the specified server.   * 405 NotSupported - This functionality is not supported.   * 405 NotSupported - This functionality is not supported.   * 409 ServerDisabled - Server is disabled.   * 409 OperationCancelled - The operation has been cancelled by user.   * 409 OperationInterrupted - The operation on the resource could not be completed because it was interrupted by another operation on the same resource.   * 409 ServerDisabled - Server is disabled.   * 500 OperationTimedOut - The operation timed out and automatically rolled back. Please retry the operation.   * 503 ServiceTemporarilyUnavailable - Feature temporarily unavailable.   * 503 ServiceTemporarilyUnavailable - Feature temporarily unavailable. </td><td>  -  </td></tr>
     </table>
     */
    public ElasticPool elasticPoolsUpdate(String resourceGroupName, String serverName, String elasticPoolName, String subscriptionId, String apiVersion, ElasticPoolUpdate parameters) throws ApiException {
        ApiResponse<ElasticPool> localVarResp = elasticPoolsUpdateWithHttpInfo(resourceGroupName, serverName, elasticPoolName, subscriptionId, apiVersion, parameters);
        return localVarResp.getData();
    }

    /**
     * 
     * Updates an elastic pool.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. (required)
     * @param serverName The name of the server. (required)
     * @param elasticPoolName The name of the elastic pool. (required)
     * @param subscriptionId The subscription ID that identifies an Azure subscription. (required)
     * @param apiVersion The API version to use for the request. (required)
     * @param parameters The elastic pool update parameters. (required)
     * @return ApiResponse&lt;ElasticPool&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Updated the elastic pool </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> *** Error Responses: ***   * 400 ElasticPoolStorageBelowLimitMB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ProvisioningDisabled - Displays error message from resources operation authorizer as is, without changes   * 400 ElasticPoolStorageNotAllowedMB - Attempting to set the elastic pool storage limit in mb which doesn&#39;t match the allowed values.   * 400 ElasticPoolStorageAboveLimitMB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ElasticPoolUpdateHkNotAllowed - The elastic pool cannot lower its service tier from Premium to Standard or Basic since one or more of its databases use memory-optimized objects.   * 400 ElasticPoolOverFileSpace - Insufficient file space in the elastic pool.   * 400 InvalidTier - The user specified an invalid tier.   * 400 ServerQuotaExceeded - Server cannot be added to a subscription because it will exceed quota.   * 400 ElasticPoolAlreadyExists - The server already contains an elastic pool with the specified name.   * 400 InvalidInputValueForEdition - Specified edition is not supported for elastic pool provisioning.   * 400 ElasticPoolDtuBelowLimit - The requested DTU value is too low for the requested elastic pool service tier.   * 400 ElasticPoolDtuAboveLimit - The requested DTU value is too high for the requested elastic pool service tier.   * 400 ElasticPoolDbDtuMaxBelowLimit - The requested per database DTU max is too low for the requested elastic pool service tier.   * 400 ElasticPoolDbDtuMaxAboveLimit - The requested per database DTU max is too high for the requested elastic pool service tier.   * 400 InvalidInputValueForDatabaseDtuMax - Attempting to set the DTU max per database for the Resource Pool which doesn&#39;t match the allowed values.   * 400 ElasticPoolDbDtuMinAboveLimit - The requested DTU min per database is too high for the requested service tier.   * 400 InvalidInputValueForDatabaseDtuMin - Attempting to set the DTU min per database for the Resource Pool which doesn&#39;t match the allowed values.   * 400 ElasticPoolStorageAboveLimitGB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ElasticPoolOverStorageUsage - Attempting to write data to a database when the storage limit of the elastic pool has been reached.   * 400 ElasticPoolsNotEnabled - Elastic pools have not been enabled in this region.   * 400 ElasticPoolNotEmpty - Request to delete an elastic pool that is not empty.   * 400 ElasticPoolStorageBelowLimitGB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ElasticPoolStorageNotAllowedGB - Attempting to set the elastic pool storage limit in gb which doesn&#39;t match the allowed values.   * 400 ElasticPoolDatabaseLimit - The elastic pool has reached its limit for number of databases.   * 400 ElasticPoolStorageDecreasePrecondition - There was an attempt to decrease the storage limit of the elastic pool below its storage usage.   * 400 ElasticPoolBusy - A management operation was attempted on an elastic pool which is busy.   * 400 InvalidInputValueDatabaseDtuMinLargerThanMax - Attempting to set the DTU min per database higher than the DTU max per database.   * 400 InvalidResourceRequestBody - The resource or resource properties in the request body is empty or invalid.   * 400 InvalidSkuName - Invalid SKU name.   * 400 MismatchedSkuNameAndCapacity - Mismatch between SKU name and capacity.   * 400 MismatchedSkuNameAndTier - Mismatch between SKU name and tier.   * 400 MismatchedSkuNameAndFamily - Mismatch between SKU name and family.   * 400 ElasticPoolStorageBelowLimitMB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ProvisioningDisabled - Displays error message from resources operation authorizer as is, without changes   * 400 ElasticPoolStorageNotAllowedMB - Attempting to set the elastic pool storage limit in mb which doesn&#39;t match the allowed values.   * 400 ElasticPoolStorageAboveLimitMB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ElasticPoolUpdateHkNotAllowed - The elastic pool cannot lower its service tier from Premium to Standard or Basic since one or more of its databases use memory-optimized objects.   * 400 ElasticPoolOverFileSpace - Insufficient file space in the elastic pool.   * 400 InvalidTier - The user specified an invalid tier.   * 400 ServerQuotaExceeded - Server cannot be added to a subscription because it will exceed quota.   * 400 ElasticPoolAlreadyExists - The server already contains an elastic pool with the specified name.   * 400 InvalidInputValueForEdition - Specified edition is not supported for elastic pool provisioning.   * 400 ElasticPoolDtuBelowLimit - The requested DTU value is too low for the requested elastic pool service tier.   * 400 ElasticPoolDtuAboveLimit - The requested DTU value is too high for the requested elastic pool service tier.   * 400 ElasticPoolDbDtuMaxBelowLimit - The requested per database DTU max is too low for the requested elastic pool service tier.   * 400 ElasticPoolDbDtuMaxAboveLimit - The requested per database DTU max is too high for the requested elastic pool service tier.   * 400 InvalidInputValueForDatabaseDtuMax - Attempting to set the DTU max per database for the Resource Pool which doesn&#39;t match the allowed values.   * 400 ElasticPoolDbDtuMinAboveLimit - The requested DTU min per database is too high for the requested service tier.   * 400 InvalidInputValueForDatabaseDtuMin - Attempting to set the DTU min per database for the Resource Pool which doesn&#39;t match the allowed values.   * 400 ElasticPoolStorageAboveLimitGB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ElasticPoolOverStorageUsage - Attempting to write data to a database when the storage limit of the elastic pool has been reached.   * 400 ElasticPoolsNotEnabled - Elastic pools have not been enabled in this region.   * 400 ElasticPoolNotEmpty - Request to delete an elastic pool that is not empty.   * 400 ElasticPoolStorageBelowLimitGB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ElasticPoolStorageNotAllowedGB - Attempting to set the elastic pool storage limit in gb which doesn&#39;t match the allowed values.   * 400 ElasticPoolDatabaseLimit - The elastic pool has reached its limit for number of databases.   * 400 ElasticPoolStorageDecreasePrecondition - There was an attempt to decrease the storage limit of the elastic pool below its storage usage.   * 400 ElasticPoolBusy - A management operation was attempted on an elastic pool which is busy.   * 400 InvalidInputValueDatabaseDtuMinLargerThanMax - Attempting to set the DTU min per database higher than the DTU max per database.   * 404 SubscriptionDoesNotHaveServer - The requested server was not found   * 404 ElasticPoolNotFound - The specified elastic pool does not exist for the specified server.   * 404 OperationIdNotFound - The operation with Id does not exist.   * 404 ElasticPoolNotFound - The specified elastic pool does not exist for the specified server.   * 405 NotSupported - This functionality is not supported.   * 405 NotSupported - This functionality is not supported.   * 409 ServerDisabled - Server is disabled.   * 409 OperationCancelled - The operation has been cancelled by user.   * 409 OperationInterrupted - The operation on the resource could not be completed because it was interrupted by another operation on the same resource.   * 409 ServerDisabled - Server is disabled.   * 500 OperationTimedOut - The operation timed out and automatically rolled back. Please retry the operation.   * 503 ServiceTemporarilyUnavailable - Feature temporarily unavailable.   * 503 ServiceTemporarilyUnavailable - Feature temporarily unavailable. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ElasticPool> elasticPoolsUpdateWithHttpInfo(String resourceGroupName, String serverName, String elasticPoolName, String subscriptionId, String apiVersion, ElasticPoolUpdate parameters) throws ApiException {
        okhttp3.Call localVarCall = elasticPoolsUpdateValidateBeforeCall(resourceGroupName, serverName, elasticPoolName, subscriptionId, apiVersion, parameters, null);
        Type localVarReturnType = new TypeToken<ElasticPool>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Updates an elastic pool.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. (required)
     * @param serverName The name of the server. (required)
     * @param elasticPoolName The name of the elastic pool. (required)
     * @param subscriptionId The subscription ID that identifies an Azure subscription. (required)
     * @param apiVersion The API version to use for the request. (required)
     * @param parameters The elastic pool update parameters. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Updated the elastic pool </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> *** Error Responses: ***   * 400 ElasticPoolStorageBelowLimitMB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ProvisioningDisabled - Displays error message from resources operation authorizer as is, without changes   * 400 ElasticPoolStorageNotAllowedMB - Attempting to set the elastic pool storage limit in mb which doesn&#39;t match the allowed values.   * 400 ElasticPoolStorageAboveLimitMB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ElasticPoolUpdateHkNotAllowed - The elastic pool cannot lower its service tier from Premium to Standard or Basic since one or more of its databases use memory-optimized objects.   * 400 ElasticPoolOverFileSpace - Insufficient file space in the elastic pool.   * 400 InvalidTier - The user specified an invalid tier.   * 400 ServerQuotaExceeded - Server cannot be added to a subscription because it will exceed quota.   * 400 ElasticPoolAlreadyExists - The server already contains an elastic pool with the specified name.   * 400 InvalidInputValueForEdition - Specified edition is not supported for elastic pool provisioning.   * 400 ElasticPoolDtuBelowLimit - The requested DTU value is too low for the requested elastic pool service tier.   * 400 ElasticPoolDtuAboveLimit - The requested DTU value is too high for the requested elastic pool service tier.   * 400 ElasticPoolDbDtuMaxBelowLimit - The requested per database DTU max is too low for the requested elastic pool service tier.   * 400 ElasticPoolDbDtuMaxAboveLimit - The requested per database DTU max is too high for the requested elastic pool service tier.   * 400 InvalidInputValueForDatabaseDtuMax - Attempting to set the DTU max per database for the Resource Pool which doesn&#39;t match the allowed values.   * 400 ElasticPoolDbDtuMinAboveLimit - The requested DTU min per database is too high for the requested service tier.   * 400 InvalidInputValueForDatabaseDtuMin - Attempting to set the DTU min per database for the Resource Pool which doesn&#39;t match the allowed values.   * 400 ElasticPoolStorageAboveLimitGB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ElasticPoolOverStorageUsage - Attempting to write data to a database when the storage limit of the elastic pool has been reached.   * 400 ElasticPoolsNotEnabled - Elastic pools have not been enabled in this region.   * 400 ElasticPoolNotEmpty - Request to delete an elastic pool that is not empty.   * 400 ElasticPoolStorageBelowLimitGB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ElasticPoolStorageNotAllowedGB - Attempting to set the elastic pool storage limit in gb which doesn&#39;t match the allowed values.   * 400 ElasticPoolDatabaseLimit - The elastic pool has reached its limit for number of databases.   * 400 ElasticPoolStorageDecreasePrecondition - There was an attempt to decrease the storage limit of the elastic pool below its storage usage.   * 400 ElasticPoolBusy - A management operation was attempted on an elastic pool which is busy.   * 400 InvalidInputValueDatabaseDtuMinLargerThanMax - Attempting to set the DTU min per database higher than the DTU max per database.   * 400 InvalidResourceRequestBody - The resource or resource properties in the request body is empty or invalid.   * 400 InvalidSkuName - Invalid SKU name.   * 400 MismatchedSkuNameAndCapacity - Mismatch between SKU name and capacity.   * 400 MismatchedSkuNameAndTier - Mismatch between SKU name and tier.   * 400 MismatchedSkuNameAndFamily - Mismatch between SKU name and family.   * 400 ElasticPoolStorageBelowLimitMB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ProvisioningDisabled - Displays error message from resources operation authorizer as is, without changes   * 400 ElasticPoolStorageNotAllowedMB - Attempting to set the elastic pool storage limit in mb which doesn&#39;t match the allowed values.   * 400 ElasticPoolStorageAboveLimitMB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ElasticPoolUpdateHkNotAllowed - The elastic pool cannot lower its service tier from Premium to Standard or Basic since one or more of its databases use memory-optimized objects.   * 400 ElasticPoolOverFileSpace - Insufficient file space in the elastic pool.   * 400 InvalidTier - The user specified an invalid tier.   * 400 ServerQuotaExceeded - Server cannot be added to a subscription because it will exceed quota.   * 400 ElasticPoolAlreadyExists - The server already contains an elastic pool with the specified name.   * 400 InvalidInputValueForEdition - Specified edition is not supported for elastic pool provisioning.   * 400 ElasticPoolDtuBelowLimit - The requested DTU value is too low for the requested elastic pool service tier.   * 400 ElasticPoolDtuAboveLimit - The requested DTU value is too high for the requested elastic pool service tier.   * 400 ElasticPoolDbDtuMaxBelowLimit - The requested per database DTU max is too low for the requested elastic pool service tier.   * 400 ElasticPoolDbDtuMaxAboveLimit - The requested per database DTU max is too high for the requested elastic pool service tier.   * 400 InvalidInputValueForDatabaseDtuMax - Attempting to set the DTU max per database for the Resource Pool which doesn&#39;t match the allowed values.   * 400 ElasticPoolDbDtuMinAboveLimit - The requested DTU min per database is too high for the requested service tier.   * 400 InvalidInputValueForDatabaseDtuMin - Attempting to set the DTU min per database for the Resource Pool which doesn&#39;t match the allowed values.   * 400 ElasticPoolStorageAboveLimitGB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ElasticPoolOverStorageUsage - Attempting to write data to a database when the storage limit of the elastic pool has been reached.   * 400 ElasticPoolsNotEnabled - Elastic pools have not been enabled in this region.   * 400 ElasticPoolNotEmpty - Request to delete an elastic pool that is not empty.   * 400 ElasticPoolStorageBelowLimitGB - Attempting to set the elastic pool storage limit below the supported limit.   * 400 ElasticPoolStorageNotAllowedGB - Attempting to set the elastic pool storage limit in gb which doesn&#39;t match the allowed values.   * 400 ElasticPoolDatabaseLimit - The elastic pool has reached its limit for number of databases.   * 400 ElasticPoolStorageDecreasePrecondition - There was an attempt to decrease the storage limit of the elastic pool below its storage usage.   * 400 ElasticPoolBusy - A management operation was attempted on an elastic pool which is busy.   * 400 InvalidInputValueDatabaseDtuMinLargerThanMax - Attempting to set the DTU min per database higher than the DTU max per database.   * 404 SubscriptionDoesNotHaveServer - The requested server was not found   * 404 ElasticPoolNotFound - The specified elastic pool does not exist for the specified server.   * 404 OperationIdNotFound - The operation with Id does not exist.   * 404 ElasticPoolNotFound - The specified elastic pool does not exist for the specified server.   * 405 NotSupported - This functionality is not supported.   * 405 NotSupported - This functionality is not supported.   * 409 ServerDisabled - Server is disabled.   * 409 OperationCancelled - The operation has been cancelled by user.   * 409 OperationInterrupted - The operation on the resource could not be completed because it was interrupted by another operation on the same resource.   * 409 ServerDisabled - Server is disabled.   * 500 OperationTimedOut - The operation timed out and automatically rolled back. Please retry the operation.   * 503 ServiceTemporarilyUnavailable - Feature temporarily unavailable.   * 503 ServiceTemporarilyUnavailable - Feature temporarily unavailable. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call elasticPoolsUpdateAsync(String resourceGroupName, String serverName, String elasticPoolName, String subscriptionId, String apiVersion, ElasticPoolUpdate parameters, final ApiCallback<ElasticPool> _callback) throws ApiException {

        okhttp3.Call localVarCall = elasticPoolsUpdateValidateBeforeCall(resourceGroupName, serverName, elasticPoolName, subscriptionId, apiVersion, parameters, _callback);
        Type localVarReturnType = new TypeToken<ElasticPool>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
