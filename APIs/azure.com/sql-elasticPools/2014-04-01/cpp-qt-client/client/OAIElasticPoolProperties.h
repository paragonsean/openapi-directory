/**
 * Azure SQL Database
 * Provides create, read, update and delete functionality for Azure SQL Database elastic pools.
 *
 * The version of the OpenAPI document: 2014-04-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIElasticPoolProperties.h
 *
 * Represents the properties of an elastic pool.
 */

#ifndef OAIElasticPoolProperties_H
#define OAIElasticPoolProperties_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIElasticPoolProperties : public OAIObject {
public:
    OAIElasticPoolProperties();
    OAIElasticPoolProperties(QString json);
    ~OAIElasticPoolProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getCreationDate() const;
    void setCreationDate(const QDateTime &creation_date);
    bool is_creation_date_Set() const;
    bool is_creation_date_Valid() const;

    qint32 getDatabaseDtuMax() const;
    void setDatabaseDtuMax(const qint32 &database_dtu_max);
    bool is_database_dtu_max_Set() const;
    bool is_database_dtu_max_Valid() const;

    qint32 getDatabaseDtuMin() const;
    void setDatabaseDtuMin(const qint32 &database_dtu_min);
    bool is_database_dtu_min_Set() const;
    bool is_database_dtu_min_Valid() const;

    qint32 getDtu() const;
    void setDtu(const qint32 &dtu);
    bool is_dtu_Set() const;
    bool is_dtu_Valid() const;

    QString getEdition() const;
    void setEdition(const QString &edition);
    bool is_edition_Set() const;
    bool is_edition_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    qint32 getStorageMb() const;
    void setStorageMb(const qint32 &storage_mb);
    bool is_storage_mb_Set() const;
    bool is_storage_mb_Valid() const;

    bool isZoneRedundant() const;
    void setZoneRedundant(const bool &zone_redundant);
    bool is_zone_redundant_Set() const;
    bool is_zone_redundant_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_creation_date;
    bool m_creation_date_isSet;
    bool m_creation_date_isValid;

    qint32 m_database_dtu_max;
    bool m_database_dtu_max_isSet;
    bool m_database_dtu_max_isValid;

    qint32 m_database_dtu_min;
    bool m_database_dtu_min_isSet;
    bool m_database_dtu_min_isValid;

    qint32 m_dtu;
    bool m_dtu_isSet;
    bool m_dtu_isValid;

    QString m_edition;
    bool m_edition_isSet;
    bool m_edition_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    qint32 m_storage_mb;
    bool m_storage_mb_isSet;
    bool m_storage_mb_isValid;

    bool m_zone_redundant;
    bool m_zone_redundant_isSet;
    bool m_zone_redundant_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIElasticPoolProperties)

#endif // OAIElasticPoolProperties_H
