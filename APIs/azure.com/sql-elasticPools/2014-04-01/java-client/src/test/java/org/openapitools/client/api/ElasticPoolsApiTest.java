/*
 * Azure SQL Database
 * Provides create, read, update and delete functionality for Azure SQL Database elastic pools.
 *
 * The version of the OpenAPI document: 2014-04-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ElasticPool;
import org.openapitools.client.model.ElasticPoolListResult;
import org.openapitools.client.model.ElasticPoolUpdate;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ElasticPoolsApi
 */
@Disabled
public class ElasticPoolsApiTest {

    private final ElasticPoolsApi api = new ElasticPoolsApi();

    /**
     * Creates a new elastic pool or updates an existing elastic pool.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void elasticPoolsCreateOrUpdateTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String serverName = null;
        String elasticPoolName = null;
        ElasticPool parameters = null;
        ElasticPool response = api.elasticPoolsCreateOrUpdate(apiVersion, subscriptionId, resourceGroupName, serverName, elasticPoolName, parameters);
        // TODO: test validations
    }

    /**
     * Deletes the elastic pool.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void elasticPoolsDeleteTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String serverName = null;
        String elasticPoolName = null;
        api.elasticPoolsDelete(apiVersion, subscriptionId, resourceGroupName, serverName, elasticPoolName);
        // TODO: test validations
    }

    /**
     * Gets an elastic pool.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void elasticPoolsGetTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String serverName = null;
        String elasticPoolName = null;
        ElasticPool response = api.elasticPoolsGet(apiVersion, subscriptionId, resourceGroupName, serverName, elasticPoolName);
        // TODO: test validations
    }

    /**
     * Returns a list of elastic pools in a server.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void elasticPoolsListByServerTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String serverName = null;
        ElasticPoolListResult response = api.elasticPoolsListByServer(apiVersion, subscriptionId, resourceGroupName, serverName);
        // TODO: test validations
    }

    /**
     * Updates an existing elastic pool.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void elasticPoolsUpdateTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String serverName = null;
        String elasticPoolName = null;
        ElasticPoolUpdate parameters = null;
        ElasticPool response = api.elasticPoolsUpdate(apiVersion, subscriptionId, resourceGroupName, serverName, elasticPoolName, parameters);
        // TODO: test validations
    }

}
