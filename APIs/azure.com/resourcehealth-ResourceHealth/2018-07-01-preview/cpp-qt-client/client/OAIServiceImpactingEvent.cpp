/**
 * Microsoft.ResourceHealth
 * The Resource Health Client.
 *
 * The version of the OpenAPI document: 2018-07-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIServiceImpactingEvent.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIServiceImpactingEvent::OAIServiceImpactingEvent(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIServiceImpactingEvent::OAIServiceImpactingEvent() {
    this->initializeModel();
}

OAIServiceImpactingEvent::~OAIServiceImpactingEvent() {}

void OAIServiceImpactingEvent::initializeModel() {

    m_correlation_id_isSet = false;
    m_correlation_id_isValid = false;

    m_event_start_time_isSet = false;
    m_event_start_time_isValid = false;

    m_event_status_last_modified_time_isSet = false;
    m_event_status_last_modified_time_isValid = false;

    m_incident_properties_isSet = false;
    m_incident_properties_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAIServiceImpactingEvent::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIServiceImpactingEvent::fromJsonObject(QJsonObject json) {

    m_correlation_id_isValid = ::OpenAPI::fromJsonValue(m_correlation_id, json[QString("correlationId")]);
    m_correlation_id_isSet = !json[QString("correlationId")].isNull() && m_correlation_id_isValid;

    m_event_start_time_isValid = ::OpenAPI::fromJsonValue(m_event_start_time, json[QString("eventStartTime")]);
    m_event_start_time_isSet = !json[QString("eventStartTime")].isNull() && m_event_start_time_isValid;

    m_event_status_last_modified_time_isValid = ::OpenAPI::fromJsonValue(m_event_status_last_modified_time, json[QString("eventStatusLastModifiedTime")]);
    m_event_status_last_modified_time_isSet = !json[QString("eventStatusLastModifiedTime")].isNull() && m_event_status_last_modified_time_isValid;

    m_incident_properties_isValid = ::OpenAPI::fromJsonValue(m_incident_properties, json[QString("incidentProperties")]);
    m_incident_properties_isSet = !json[QString("incidentProperties")].isNull() && m_incident_properties_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;
}

QString OAIServiceImpactingEvent::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIServiceImpactingEvent::asJsonObject() const {
    QJsonObject obj;
    if (m_correlation_id_isSet) {
        obj.insert(QString("correlationId"), ::OpenAPI::toJsonValue(m_correlation_id));
    }
    if (m_event_start_time_isSet) {
        obj.insert(QString("eventStartTime"), ::OpenAPI::toJsonValue(m_event_start_time));
    }
    if (m_event_status_last_modified_time_isSet) {
        obj.insert(QString("eventStatusLastModifiedTime"), ::OpenAPI::toJsonValue(m_event_status_last_modified_time));
    }
    if (m_incident_properties.isSet()) {
        obj.insert(QString("incidentProperties"), ::OpenAPI::toJsonValue(m_incident_properties));
    }
    if (m_status.isSet()) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    return obj;
}

QString OAIServiceImpactingEvent::getCorrelationId() const {
    return m_correlation_id;
}
void OAIServiceImpactingEvent::setCorrelationId(const QString &correlation_id) {
    m_correlation_id = correlation_id;
    m_correlation_id_isSet = true;
}

bool OAIServiceImpactingEvent::is_correlation_id_Set() const{
    return m_correlation_id_isSet;
}

bool OAIServiceImpactingEvent::is_correlation_id_Valid() const{
    return m_correlation_id_isValid;
}

QDateTime OAIServiceImpactingEvent::getEventStartTime() const {
    return m_event_start_time;
}
void OAIServiceImpactingEvent::setEventStartTime(const QDateTime &event_start_time) {
    m_event_start_time = event_start_time;
    m_event_start_time_isSet = true;
}

bool OAIServiceImpactingEvent::is_event_start_time_Set() const{
    return m_event_start_time_isSet;
}

bool OAIServiceImpactingEvent::is_event_start_time_Valid() const{
    return m_event_start_time_isValid;
}

QDateTime OAIServiceImpactingEvent::getEventStatusLastModifiedTime() const {
    return m_event_status_last_modified_time;
}
void OAIServiceImpactingEvent::setEventStatusLastModifiedTime(const QDateTime &event_status_last_modified_time) {
    m_event_status_last_modified_time = event_status_last_modified_time;
    m_event_status_last_modified_time_isSet = true;
}

bool OAIServiceImpactingEvent::is_event_status_last_modified_time_Set() const{
    return m_event_status_last_modified_time_isSet;
}

bool OAIServiceImpactingEvent::is_event_status_last_modified_time_Valid() const{
    return m_event_status_last_modified_time_isValid;
}

OAIServiceImpactingEvent_incidentProperties OAIServiceImpactingEvent::getIncidentProperties() const {
    return m_incident_properties;
}
void OAIServiceImpactingEvent::setIncidentProperties(const OAIServiceImpactingEvent_incidentProperties &incident_properties) {
    m_incident_properties = incident_properties;
    m_incident_properties_isSet = true;
}

bool OAIServiceImpactingEvent::is_incident_properties_Set() const{
    return m_incident_properties_isSet;
}

bool OAIServiceImpactingEvent::is_incident_properties_Valid() const{
    return m_incident_properties_isValid;
}

OAIServiceImpactingEvent_status OAIServiceImpactingEvent::getStatus() const {
    return m_status;
}
void OAIServiceImpactingEvent::setStatus(const OAIServiceImpactingEvent_status &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIServiceImpactingEvent::is_status_Set() const{
    return m_status_isSet;
}

bool OAIServiceImpactingEvent::is_status_Valid() const{
    return m_status_isValid;
}

bool OAIServiceImpactingEvent::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_correlation_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_event_start_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_event_status_last_modified_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_incident_properties.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIServiceImpactingEvent::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
