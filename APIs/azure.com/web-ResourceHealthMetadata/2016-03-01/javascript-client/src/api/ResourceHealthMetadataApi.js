/**
 * ResourceHealthMetadata API Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-03-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ResourceHealthMetadata from '../model/ResourceHealthMetadata';
import ResourceHealthMetadataCollection from '../model/ResourceHealthMetadataCollection';
import ResourceHealthMetadataListDefaultResponse from '../model/ResourceHealthMetadataListDefaultResponse';

/**
* ResourceHealthMetadata service.
* @module api/ResourceHealthMetadataApi
* @version 2016-03-01
*/
export default class ResourceHealthMetadataApi {

    /**
    * Constructs a new ResourceHealthMetadataApi. 
    * @alias module:api/ResourceHealthMetadataApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the resourceHealthMetadataGetBySite operation.
     * @callback module:api/ResourceHealthMetadataApi~resourceHealthMetadataGetBySiteCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ResourceHealthMetadata} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the category of ResourceHealthMetadata to use for the given site
     * Gets the category of ResourceHealthMetadata to use for the given site
     * @param {String} resourceGroupName Name of the resource group to which the resource belongs.
     * @param {String} name Name of web app
     * @param {String} subscriptionId Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).
     * @param {String} apiVersion API Version
     * @param {module:api/ResourceHealthMetadataApi~resourceHealthMetadataGetBySiteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ResourceHealthMetadata}
     */
    resourceHealthMetadataGetBySite(resourceGroupName, name, subscriptionId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling resourceHealthMetadataGetBySite");
      }
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling resourceHealthMetadataGetBySite");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling resourceHealthMetadataGetBySite");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling resourceHealthMetadataGetBySite");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'name': name,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ResourceHealthMetadata;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/resourceHealthMetadata/default', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the resourceHealthMetadataGetBySiteSlot operation.
     * @callback module:api/ResourceHealthMetadataApi~resourceHealthMetadataGetBySiteSlotCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ResourceHealthMetadata} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the category of ResourceHealthMetadata to use for the given site
     * Gets the category of ResourceHealthMetadata to use for the given site
     * @param {String} resourceGroupName Name of the resource group to which the resource belongs.
     * @param {String} name Name of web app
     * @param {String} slot Name of web app slot. If not specified then will default to production slot.
     * @param {String} subscriptionId Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).
     * @param {String} apiVersion API Version
     * @param {module:api/ResourceHealthMetadataApi~resourceHealthMetadataGetBySiteSlotCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ResourceHealthMetadata}
     */
    resourceHealthMetadataGetBySiteSlot(resourceGroupName, name, slot, subscriptionId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling resourceHealthMetadataGetBySiteSlot");
      }
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling resourceHealthMetadataGetBySiteSlot");
      }
      // verify the required parameter 'slot' is set
      if (slot === undefined || slot === null) {
        throw new Error("Missing the required parameter 'slot' when calling resourceHealthMetadataGetBySiteSlot");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling resourceHealthMetadataGetBySiteSlot");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling resourceHealthMetadataGetBySiteSlot");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'name': name,
        'slot': slot,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ResourceHealthMetadata;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/resourceHealthMetadata/default', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the resourceHealthMetadataList operation.
     * @callback module:api/ResourceHealthMetadataApi~resourceHealthMetadataListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ResourceHealthMetadataCollection} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List all ResourceHealthMetadata for all sites in the subscription.
     * List all ResourceHealthMetadata for all sites in the subscription.
     * @param {String} subscriptionId Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).
     * @param {String} apiVersion API Version
     * @param {module:api/ResourceHealthMetadataApi~resourceHealthMetadataListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ResourceHealthMetadataCollection}
     */
    resourceHealthMetadataList(subscriptionId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling resourceHealthMetadataList");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling resourceHealthMetadataList");
      }

      let pathParams = {
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ResourceHealthMetadataCollection;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.Web/resourceHealthMetadata', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the resourceHealthMetadataListByResourceGroup operation.
     * @callback module:api/ResourceHealthMetadataApi~resourceHealthMetadataListByResourceGroupCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ResourceHealthMetadataCollection} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List all ResourceHealthMetadata for all sites in the resource group in the subscription.
     * List all ResourceHealthMetadata for all sites in the resource group in the subscription.
     * @param {String} resourceGroupName Name of the resource group to which the resource belongs.
     * @param {String} subscriptionId Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).
     * @param {String} apiVersion API Version
     * @param {module:api/ResourceHealthMetadataApi~resourceHealthMetadataListByResourceGroupCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ResourceHealthMetadataCollection}
     */
    resourceHealthMetadataListByResourceGroup(resourceGroupName, subscriptionId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling resourceHealthMetadataListByResourceGroup");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling resourceHealthMetadataListByResourceGroup");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling resourceHealthMetadataListByResourceGroup");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ResourceHealthMetadataCollection;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/resourceHealthMetadata', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the resourceHealthMetadataListBySite operation.
     * @callback module:api/ResourceHealthMetadataApi~resourceHealthMetadataListBySiteCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ResourceHealthMetadataCollection} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the category of ResourceHealthMetadata to use for the given site as a collection
     * Gets the category of ResourceHealthMetadata to use for the given site as a collection
     * @param {String} resourceGroupName Name of the resource group to which the resource belongs.
     * @param {String} name Name of web app.
     * @param {String} subscriptionId Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).
     * @param {String} apiVersion API Version
     * @param {module:api/ResourceHealthMetadataApi~resourceHealthMetadataListBySiteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ResourceHealthMetadataCollection}
     */
    resourceHealthMetadataListBySite(resourceGroupName, name, subscriptionId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling resourceHealthMetadataListBySite");
      }
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling resourceHealthMetadataListBySite");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling resourceHealthMetadataListBySite");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling resourceHealthMetadataListBySite");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'name': name,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ResourceHealthMetadataCollection;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/resourceHealthMetadata', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the resourceHealthMetadataListBySiteSlot operation.
     * @callback module:api/ResourceHealthMetadataApi~resourceHealthMetadataListBySiteSlotCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ResourceHealthMetadataCollection} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the category of ResourceHealthMetadata to use for the given site as a collection
     * Gets the category of ResourceHealthMetadata to use for the given site as a collection
     * @param {String} resourceGroupName Name of the resource group to which the resource belongs.
     * @param {String} name Name of web app.
     * @param {String} slot Name of web app slot. If not specified then will default to production slot.
     * @param {String} subscriptionId Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).
     * @param {String} apiVersion API Version
     * @param {module:api/ResourceHealthMetadataApi~resourceHealthMetadataListBySiteSlotCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ResourceHealthMetadataCollection}
     */
    resourceHealthMetadataListBySiteSlot(resourceGroupName, name, slot, subscriptionId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling resourceHealthMetadataListBySiteSlot");
      }
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling resourceHealthMetadataListBySiteSlot");
      }
      // verify the required parameter 'slot' is set
      if (slot === undefined || slot === null) {
        throw new Error("Missing the required parameter 'slot' when calling resourceHealthMetadataListBySiteSlot");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling resourceHealthMetadataListBySiteSlot");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling resourceHealthMetadataListBySiteSlot");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'name': name,
        'slot': slot,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ResourceHealthMetadataCollection;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/resourceHealthMetadata', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
