/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-06-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIApplicationRuleCondition.h
 *
 * Rule condition of type application.
 */

#ifndef OAIApplicationRuleCondition_H
#define OAIApplicationRuleCondition_H

#include <QJsonObject>

#include "OAIFirewallPolicyRuleCondition.h"
#include "OAIFirewallPolicyRuleConditionApplicationProtocol.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIFirewallPolicyRuleConditionApplicationProtocol;

class OAIApplicationRuleCondition : public OAIObject {
public:
    OAIApplicationRuleCondition();
    OAIApplicationRuleCondition(QString json);
    ~OAIApplicationRuleCondition() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getDestinationAddresses() const;
    void setDestinationAddresses(const QList<QString> &destination_addresses);
    bool is_destination_addresses_Set() const;
    bool is_destination_addresses_Valid() const;

    QList<QString> getFqdnTags() const;
    void setFqdnTags(const QList<QString> &fqdn_tags);
    bool is_fqdn_tags_Set() const;
    bool is_fqdn_tags_Valid() const;

    QList<OAIFirewallPolicyRuleConditionApplicationProtocol> getProtocols() const;
    void setProtocols(const QList<OAIFirewallPolicyRuleConditionApplicationProtocol> &protocols);
    bool is_protocols_Set() const;
    bool is_protocols_Valid() const;

    QList<QString> getSourceAddresses() const;
    void setSourceAddresses(const QList<QString> &source_addresses);
    bool is_source_addresses_Set() const;
    bool is_source_addresses_Valid() const;

    QList<QString> getTargetFqdns() const;
    void setTargetFqdns(const QList<QString> &target_fqdns);
    bool is_target_fqdns_Set() const;
    bool is_target_fqdns_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getRuleConditionType() const;
    void setRuleConditionType(const QString &rule_condition_type);
    bool is_rule_condition_type_Set() const;
    bool is_rule_condition_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_destination_addresses;
    bool m_destination_addresses_isSet;
    bool m_destination_addresses_isValid;

    QList<QString> m_fqdn_tags;
    bool m_fqdn_tags_isSet;
    bool m_fqdn_tags_isValid;

    QList<OAIFirewallPolicyRuleConditionApplicationProtocol> m_protocols;
    bool m_protocols_isSet;
    bool m_protocols_isValid;

    QList<QString> m_source_addresses;
    bool m_source_addresses_isSet;
    bool m_source_addresses_isValid;

    QList<QString> m_target_fqdns;
    bool m_target_fqdns_isSet;
    bool m_target_fqdns_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_rule_condition_type;
    bool m_rule_condition_type_isSet;
    bool m_rule_condition_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIApplicationRuleCondition)

#endif // OAIApplicationRuleCondition_H
