/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-06-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFirewallPolicyFilterRuleActionType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFirewallPolicyFilterRuleActionType::OAIFirewallPolicyFilterRuleActionType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFirewallPolicyFilterRuleActionType::OAIFirewallPolicyFilterRuleActionType() {
    this->initializeModel();
}

OAIFirewallPolicyFilterRuleActionType::~OAIFirewallPolicyFilterRuleActionType() {}

void OAIFirewallPolicyFilterRuleActionType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIFirewallPolicyFilterRuleActionType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIFirewallPolicyFilterRuleActionType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("Allow", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFirewallPolicyFilterRuleActionType::ALLOW;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Deny", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFirewallPolicyFilterRuleActionType::DENY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Alert ", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFirewallPolicyFilterRuleActionType::ALERT_;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIFirewallPolicyFilterRuleActionType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIFirewallPolicyFilterRuleActionType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIFirewallPolicyFilterRuleActionType::ALLOW:
            val = "Allow";
            break;
        case eOAIFirewallPolicyFilterRuleActionType::DENY:
            val = "Deny";
            break;
        case eOAIFirewallPolicyFilterRuleActionType::ALERT_:
            val = "Alert ";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIFirewallPolicyFilterRuleActionType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIFirewallPolicyFilterRuleActionType::eOAIFirewallPolicyFilterRuleActionType OAIFirewallPolicyFilterRuleActionType::getValue() const {
    return m_value;
}

void OAIFirewallPolicyFilterRuleActionType::setValue(const OAIFirewallPolicyFilterRuleActionType::eOAIFirewallPolicyFilterRuleActionType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIFirewallPolicyFilterRuleActionType::isSet() const {
    
    return m_value_isSet;
}

bool OAIFirewallPolicyFilterRuleActionType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
