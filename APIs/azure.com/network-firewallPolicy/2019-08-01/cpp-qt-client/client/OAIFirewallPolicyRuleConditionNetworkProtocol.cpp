/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-08-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFirewallPolicyRuleConditionNetworkProtocol.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFirewallPolicyRuleConditionNetworkProtocol::OAIFirewallPolicyRuleConditionNetworkProtocol(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFirewallPolicyRuleConditionNetworkProtocol::OAIFirewallPolicyRuleConditionNetworkProtocol() {
    this->initializeModel();
}

OAIFirewallPolicyRuleConditionNetworkProtocol::~OAIFirewallPolicyRuleConditionNetworkProtocol() {}

void OAIFirewallPolicyRuleConditionNetworkProtocol::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIFirewallPolicyRuleConditionNetworkProtocol::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIFirewallPolicyRuleConditionNetworkProtocol::fromJson(QString jsonString) {
    
    if ( jsonString.compare("TCP", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFirewallPolicyRuleConditionNetworkProtocol::TCP;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("UDP", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFirewallPolicyRuleConditionNetworkProtocol::UDP;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Any", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFirewallPolicyRuleConditionNetworkProtocol::ANY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ICMP", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFirewallPolicyRuleConditionNetworkProtocol::ICMP;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIFirewallPolicyRuleConditionNetworkProtocol::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIFirewallPolicyRuleConditionNetworkProtocol::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIFirewallPolicyRuleConditionNetworkProtocol::TCP:
            val = "TCP";
            break;
        case eOAIFirewallPolicyRuleConditionNetworkProtocol::UDP:
            val = "UDP";
            break;
        case eOAIFirewallPolicyRuleConditionNetworkProtocol::ANY:
            val = "Any";
            break;
        case eOAIFirewallPolicyRuleConditionNetworkProtocol::ICMP:
            val = "ICMP";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIFirewallPolicyRuleConditionNetworkProtocol::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIFirewallPolicyRuleConditionNetworkProtocol::eOAIFirewallPolicyRuleConditionNetworkProtocol OAIFirewallPolicyRuleConditionNetworkProtocol::getValue() const {
    return m_value;
}

void OAIFirewallPolicyRuleConditionNetworkProtocol::setValue(const OAIFirewallPolicyRuleConditionNetworkProtocol::eOAIFirewallPolicyRuleConditionNetworkProtocol& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIFirewallPolicyRuleConditionNetworkProtocol::isSet() const {
    
    return m_value_isSet;
}

bool OAIFirewallPolicyRuleConditionNetworkProtocol::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
