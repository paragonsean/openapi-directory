/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-08-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFirewallPolicyRuleCondition.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFirewallPolicyRuleCondition::OAIFirewallPolicyRuleCondition(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFirewallPolicyRuleCondition::OAIFirewallPolicyRuleCondition() {
    this->initializeModel();
}

OAIFirewallPolicyRuleCondition::~OAIFirewallPolicyRuleCondition() {}

void OAIFirewallPolicyRuleCondition::initializeModel() {

    m_description_isSet = false;
    m_description_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_rule_condition_type_isSet = false;
    m_rule_condition_type_isValid = false;
}

void OAIFirewallPolicyRuleCondition::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFirewallPolicyRuleCondition::fromJsonObject(QJsonObject json) {

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_rule_condition_type_isValid = ::OpenAPI::fromJsonValue(m_rule_condition_type, json[QString("ruleConditionType")]);
    m_rule_condition_type_isSet = !json[QString("ruleConditionType")].isNull() && m_rule_condition_type_isValid;
}

QString OAIFirewallPolicyRuleCondition::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFirewallPolicyRuleCondition::asJsonObject() const {
    QJsonObject obj;
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_rule_condition_type_isSet) {
        obj.insert(QString("ruleConditionType"), ::OpenAPI::toJsonValue(m_rule_condition_type));
    }
    return obj;
}

QString OAIFirewallPolicyRuleCondition::getDescription() const {
    return m_description;
}
void OAIFirewallPolicyRuleCondition::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIFirewallPolicyRuleCondition::is_description_Set() const{
    return m_description_isSet;
}

bool OAIFirewallPolicyRuleCondition::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIFirewallPolicyRuleCondition::getName() const {
    return m_name;
}
void OAIFirewallPolicyRuleCondition::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIFirewallPolicyRuleCondition::is_name_Set() const{
    return m_name_isSet;
}

bool OAIFirewallPolicyRuleCondition::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIFirewallPolicyRuleCondition::getRuleConditionType() const {
    return m_rule_condition_type;
}
void OAIFirewallPolicyRuleCondition::setRuleConditionType(const QString &rule_condition_type) {
    m_rule_condition_type = rule_condition_type;
    m_rule_condition_type_isSet = true;
}

bool OAIFirewallPolicyRuleCondition::is_rule_condition_type_Set() const{
    return m_rule_condition_type_isSet;
}

bool OAIFirewallPolicyRuleCondition::is_rule_condition_type_Valid() const{
    return m_rule_condition_type_isValid;
}

bool OAIFirewallPolicyRuleCondition::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rule_condition_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFirewallPolicyRuleCondition::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_rule_condition_type_isValid && true;
}

} // namespace OpenAPI
