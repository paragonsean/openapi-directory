/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-08-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFirewallPolicyPropertiesFormat.h
 *
 * Firewall Policy definition.
 */

#ifndef OAIFirewallPolicyPropertiesFormat_H
#define OAIFirewallPolicyPropertiesFormat_H

#include <QJsonObject>

#include "OAIFirewallPolicyPropertiesFormat_basePolicy.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIFirewallPolicyPropertiesFormat_basePolicy;

class OAIFirewallPolicyPropertiesFormat : public OAIObject {
public:
    OAIFirewallPolicyPropertiesFormat();
    OAIFirewallPolicyPropertiesFormat(QString json);
    ~OAIFirewallPolicyPropertiesFormat() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIFirewallPolicyPropertiesFormat_basePolicy getBasePolicy() const;
    void setBasePolicy(const OAIFirewallPolicyPropertiesFormat_basePolicy &base_policy);
    bool is_base_policy_Set() const;
    bool is_base_policy_Valid() const;

    QList<OAIFirewallPolicyPropertiesFormat_basePolicy> getChildPolicies() const;
    void setChildPolicies(const QList<OAIFirewallPolicyPropertiesFormat_basePolicy> &child_policies);
    bool is_child_policies_Set() const;
    bool is_child_policies_Valid() const;

    QList<OAIFirewallPolicyPropertiesFormat_basePolicy> getFirewalls() const;
    void setFirewalls(const QList<OAIFirewallPolicyPropertiesFormat_basePolicy> &firewalls);
    bool is_firewalls_Set() const;
    bool is_firewalls_Valid() const;

    QString getProvisioningState() const;
    void setProvisioningState(const QString &provisioning_state);
    bool is_provisioning_state_Set() const;
    bool is_provisioning_state_Valid() const;

    QList<OAIFirewallPolicyPropertiesFormat_basePolicy> getRuleGroups() const;
    void setRuleGroups(const QList<OAIFirewallPolicyPropertiesFormat_basePolicy> &rule_groups);
    bool is_rule_groups_Set() const;
    bool is_rule_groups_Valid() const;

    QString getThreatIntelMode() const;
    void setThreatIntelMode(const QString &threat_intel_mode);
    bool is_threat_intel_mode_Set() const;
    bool is_threat_intel_mode_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIFirewallPolicyPropertiesFormat_basePolicy m_base_policy;
    bool m_base_policy_isSet;
    bool m_base_policy_isValid;

    QList<OAIFirewallPolicyPropertiesFormat_basePolicy> m_child_policies;
    bool m_child_policies_isSet;
    bool m_child_policies_isValid;

    QList<OAIFirewallPolicyPropertiesFormat_basePolicy> m_firewalls;
    bool m_firewalls_isSet;
    bool m_firewalls_isValid;

    QString m_provisioning_state;
    bool m_provisioning_state_isSet;
    bool m_provisioning_state_isValid;

    QList<OAIFirewallPolicyPropertiesFormat_basePolicy> m_rule_groups;
    bool m_rule_groups_isSet;
    bool m_rule_groups_isValid;

    QString m_threat_intel_mode;
    bool m_threat_intel_mode_isSet;
    bool m_threat_intel_mode_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFirewallPolicyPropertiesFormat)

#endif // OAIFirewallPolicyPropertiesFormat_H
