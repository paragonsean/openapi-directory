# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.firewall_policy_rule import FirewallPolicyRule
from openapi_server import util


class FirewallPolicyRuleGroupProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, priority: int=None, provisioning_state: str=None, rules: List[FirewallPolicyRule]=None):
        """FirewallPolicyRuleGroupProperties - a model defined in OpenAPI

        :param priority: The priority of this FirewallPolicyRuleGroupProperties.
        :param provisioning_state: The provisioning_state of this FirewallPolicyRuleGroupProperties.
        :param rules: The rules of this FirewallPolicyRuleGroupProperties.
        """
        self.openapi_types = {
            'priority': int,
            'provisioning_state': str,
            'rules': List[FirewallPolicyRule]
        }

        self.attribute_map = {
            'priority': 'priority',
            'provisioning_state': 'provisioningState',
            'rules': 'rules'
        }

        self._priority = priority
        self._provisioning_state = provisioning_state
        self._rules = rules

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FirewallPolicyRuleGroupProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FirewallPolicyRuleGroupProperties of this FirewallPolicyRuleGroupProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def priority(self):
        """Gets the priority of this FirewallPolicyRuleGroupProperties.

        Priority of the Firewall Policy Rule Group resource.

        :return: The priority of this FirewallPolicyRuleGroupProperties.
        :rtype: int
        """
        return self._priority

    @priority.setter
    def priority(self, priority):
        """Sets the priority of this FirewallPolicyRuleGroupProperties.

        Priority of the Firewall Policy Rule Group resource.

        :param priority: The priority of this FirewallPolicyRuleGroupProperties.
        :type priority: int
        """
        if priority is not None and priority > 65000:
            raise ValueError("Invalid value for `priority`, must be a value less than or equal to `65000`")
        if priority is not None and priority < 100:
            raise ValueError("Invalid value for `priority`, must be a value greater than or equal to `100`")

        self._priority = priority

    @property
    def provisioning_state(self):
        """Gets the provisioning_state of this FirewallPolicyRuleGroupProperties.

        The current provisioning state.

        :return: The provisioning_state of this FirewallPolicyRuleGroupProperties.
        :rtype: str
        """
        return self._provisioning_state

    @provisioning_state.setter
    def provisioning_state(self, provisioning_state):
        """Sets the provisioning_state of this FirewallPolicyRuleGroupProperties.

        The current provisioning state.

        :param provisioning_state: The provisioning_state of this FirewallPolicyRuleGroupProperties.
        :type provisioning_state: str
        """
        allowed_values = ["Succeeded", "Updating", "Deleting", "Failed"]  # noqa: E501
        if provisioning_state not in allowed_values:
            raise ValueError(
                "Invalid value for `provisioning_state` ({0}), must be one of {1}"
                .format(provisioning_state, allowed_values)
            )

        self._provisioning_state = provisioning_state

    @property
    def rules(self):
        """Gets the rules of this FirewallPolicyRuleGroupProperties.

        Group of Firewall Policy rules.

        :return: The rules of this FirewallPolicyRuleGroupProperties.
        :rtype: List[FirewallPolicyRule]
        """
        return self._rules

    @rules.setter
    def rules(self, rules):
        """Sets the rules of this FirewallPolicyRuleGroupProperties.

        Group of Firewall Policy rules.

        :param rules: The rules of this FirewallPolicyRuleGroupProperties.
        :type rules: List[FirewallPolicyRule]
        """

        self._rules = rules
