/*
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-08-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.FirewallPoliciesUpdateTagsDefaultResponse;
import org.openapitools.client.model.FirewallPoliciesUpdateTagsRequest;
import org.openapitools.client.model.FirewallPolicy;
import org.openapitools.client.model.FirewallPolicyListResult;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for FirewallPoliciesApi
 */
@Disabled
public class FirewallPoliciesApiTest {

    private final FirewallPoliciesApi api = new FirewallPoliciesApi();

    /**
     * Creates or updates the specified Firewall Policy.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void firewallPoliciesCreateOrUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String firewallPolicyName = null;
        String apiVersion = null;
        String subscriptionId = null;
        FirewallPolicy parameters = null;
        FirewallPolicy response = api.firewallPoliciesCreateOrUpdate(resourceGroupName, firewallPolicyName, apiVersion, subscriptionId, parameters);
        // TODO: test validations
    }

    /**
     * Deletes the specified Firewall Policy.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void firewallPoliciesDeleteTest() throws ApiException {
        String resourceGroupName = null;
        String firewallPolicyName = null;
        String apiVersion = null;
        String subscriptionId = null;
        api.firewallPoliciesDelete(resourceGroupName, firewallPolicyName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Gets the specified Firewall Policy.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void firewallPoliciesGetTest() throws ApiException {
        String resourceGroupName = null;
        String firewallPolicyName = null;
        String apiVersion = null;
        String subscriptionId = null;
        String $expand = null;
        FirewallPolicy response = api.firewallPoliciesGet(resourceGroupName, firewallPolicyName, apiVersion, subscriptionId, $expand);
        // TODO: test validations
    }

    /**
     * Lists all Firewall Policies in a resource group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void firewallPoliciesListTest() throws ApiException {
        String resourceGroupName = null;
        String apiVersion = null;
        String subscriptionId = null;
        FirewallPolicyListResult response = api.firewallPoliciesList(resourceGroupName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Gets all the Firewall Policies in a subscription.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void firewallPoliciesListAllTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        FirewallPolicyListResult response = api.firewallPoliciesListAll(apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Updates a Firewall Policy Tags.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void firewallPoliciesUpdateTagsTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String firewallPolicyName = null;
        String apiVersion = null;
        FirewallPoliciesUpdateTagsRequest firewallPolicyParameters = null;
        FirewallPolicy response = api.firewallPoliciesUpdateTags(subscriptionId, resourceGroupName, firewallPolicyName, apiVersion, firewallPolicyParameters);
        // TODO: test validations
    }

}
