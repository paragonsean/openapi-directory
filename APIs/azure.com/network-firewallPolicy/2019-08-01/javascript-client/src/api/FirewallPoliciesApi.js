/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-08-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import FirewallPoliciesUpdateTagsDefaultResponse from '../model/FirewallPoliciesUpdateTagsDefaultResponse';
import FirewallPoliciesUpdateTagsRequest from '../model/FirewallPoliciesUpdateTagsRequest';
import FirewallPolicy from '../model/FirewallPolicy';
import FirewallPolicyListResult from '../model/FirewallPolicyListResult';

/**
* FirewallPolicies service.
* @module api/FirewallPoliciesApi
* @version 2019-08-01
*/
export default class FirewallPoliciesApi {

    /**
    * Constructs a new FirewallPoliciesApi. 
    * @alias module:api/FirewallPoliciesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the firewallPoliciesCreateOrUpdate operation.
     * @callback module:api/FirewallPoliciesApi~firewallPoliciesCreateOrUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/FirewallPolicy} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates or updates the specified Firewall Policy.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} firewallPolicyName The name of the Firewall Policy.
     * @param {String} apiVersion Client API version.
     * @param {String} subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:model/FirewallPolicy} parameters Parameters supplied to the create or update Firewall Policy operation.
     * @param {module:api/FirewallPoliciesApi~firewallPoliciesCreateOrUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/FirewallPolicy}
     */
    firewallPoliciesCreateOrUpdate(resourceGroupName, firewallPolicyName, apiVersion, subscriptionId, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling firewallPoliciesCreateOrUpdate");
      }
      // verify the required parameter 'firewallPolicyName' is set
      if (firewallPolicyName === undefined || firewallPolicyName === null) {
        throw new Error("Missing the required parameter 'firewallPolicyName' when calling firewallPoliciesCreateOrUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling firewallPoliciesCreateOrUpdate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling firewallPoliciesCreateOrUpdate");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling firewallPoliciesCreateOrUpdate");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'firewallPolicyName': firewallPolicyName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = FirewallPolicy;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/firewallPolicies/{firewallPolicyName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the firewallPoliciesDelete operation.
     * @callback module:api/FirewallPoliciesApi~firewallPoliciesDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes the specified Firewall Policy.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} firewallPolicyName The name of the Firewall Policy.
     * @param {String} apiVersion Client API version.
     * @param {String} subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/FirewallPoliciesApi~firewallPoliciesDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    firewallPoliciesDelete(resourceGroupName, firewallPolicyName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling firewallPoliciesDelete");
      }
      // verify the required parameter 'firewallPolicyName' is set
      if (firewallPolicyName === undefined || firewallPolicyName === null) {
        throw new Error("Missing the required parameter 'firewallPolicyName' when calling firewallPoliciesDelete");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling firewallPoliciesDelete");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling firewallPoliciesDelete");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'firewallPolicyName': firewallPolicyName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/firewallPolicies/{firewallPolicyName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the firewallPoliciesGet operation.
     * @callback module:api/FirewallPoliciesApi~firewallPoliciesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/FirewallPolicy} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the specified Firewall Policy.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} firewallPolicyName The name of the Firewall Policy.
     * @param {String} apiVersion Client API version.
     * @param {String} subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {Object} opts Optional parameters
     * @param {String} [expand] Expands referenced resources.
     * @param {module:api/FirewallPoliciesApi~firewallPoliciesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/FirewallPolicy}
     */
    firewallPoliciesGet(resourceGroupName, firewallPolicyName, apiVersion, subscriptionId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling firewallPoliciesGet");
      }
      // verify the required parameter 'firewallPolicyName' is set
      if (firewallPolicyName === undefined || firewallPolicyName === null) {
        throw new Error("Missing the required parameter 'firewallPolicyName' when calling firewallPoliciesGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling firewallPoliciesGet");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling firewallPoliciesGet");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'firewallPolicyName': firewallPolicyName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion,
        '$expand': opts['expand']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = FirewallPolicy;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/firewallPolicies/{firewallPolicyName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the firewallPoliciesList operation.
     * @callback module:api/FirewallPoliciesApi~firewallPoliciesListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/FirewallPolicyListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists all Firewall Policies in a resource group.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} apiVersion Client API version.
     * @param {String} subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/FirewallPoliciesApi~firewallPoliciesListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/FirewallPolicyListResult}
     */
    firewallPoliciesList(resourceGroupName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling firewallPoliciesList");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling firewallPoliciesList");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling firewallPoliciesList");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = FirewallPolicyListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/firewallPolicies', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the firewallPoliciesListAll operation.
     * @callback module:api/FirewallPoliciesApi~firewallPoliciesListAllCallback
     * @param {String} error Error message, if any.
     * @param {module:model/FirewallPolicyListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets all the Firewall Policies in a subscription.
     * @param {String} apiVersion Client API version.
     * @param {String} subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/FirewallPoliciesApi~firewallPoliciesListAllCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/FirewallPolicyListResult}
     */
    firewallPoliciesListAll(apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling firewallPoliciesListAll");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling firewallPoliciesListAll");
      }

      let pathParams = {
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = FirewallPolicyListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.Network/firewallPolicies', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the firewallPoliciesUpdateTags operation.
     * @callback module:api/FirewallPoliciesApi~firewallPoliciesUpdateTagsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/FirewallPolicy} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates a Firewall Policy Tags.
     * @param {String} subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroupName The resource group name of the Firewall Policy.
     * @param {String} firewallPolicyName The name of the Firewall Policy being updated.
     * @param {String} apiVersion Client API version.
     * @param {module:model/FirewallPoliciesUpdateTagsRequest} firewallPolicyParameters Parameters supplied to Update Firewall Policy tags.
     * @param {module:api/FirewallPoliciesApi~firewallPoliciesUpdateTagsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/FirewallPolicy}
     */
    firewallPoliciesUpdateTags(subscriptionId, resourceGroupName, firewallPolicyName, apiVersion, firewallPolicyParameters, callback) {
      let postBody = firewallPolicyParameters;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling firewallPoliciesUpdateTags");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling firewallPoliciesUpdateTags");
      }
      // verify the required parameter 'firewallPolicyName' is set
      if (firewallPolicyName === undefined || firewallPolicyName === null) {
        throw new Error("Missing the required parameter 'firewallPolicyName' when calling firewallPoliciesUpdateTags");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling firewallPoliciesUpdateTags");
      }
      // verify the required parameter 'firewallPolicyParameters' is set
      if (firewallPolicyParameters === undefined || firewallPolicyParameters === null) {
        throw new Error("Missing the required parameter 'firewallPolicyParameters' when calling firewallPoliciesUpdateTags");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'firewallPolicyName': firewallPolicyName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = FirewallPolicy;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/firewallPolicies/{firewallPolicyName}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
