/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-07-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFirewallPolicyFilterRuleAction.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFirewallPolicyFilterRuleAction::OAIFirewallPolicyFilterRuleAction(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFirewallPolicyFilterRuleAction::OAIFirewallPolicyFilterRuleAction() {
    this->initializeModel();
}

OAIFirewallPolicyFilterRuleAction::~OAIFirewallPolicyFilterRuleAction() {}

void OAIFirewallPolicyFilterRuleAction::initializeModel() {

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAIFirewallPolicyFilterRuleAction::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFirewallPolicyFilterRuleAction::fromJsonObject(QJsonObject json) {

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAIFirewallPolicyFilterRuleAction::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFirewallPolicyFilterRuleAction::asJsonObject() const {
    QJsonObject obj;
    if (m_type.isSet()) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

OAIFirewallPolicyFilterRuleActionType OAIFirewallPolicyFilterRuleAction::getType() const {
    return m_type;
}
void OAIFirewallPolicyFilterRuleAction::setType(const OAIFirewallPolicyFilterRuleActionType &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIFirewallPolicyFilterRuleAction::is_type_Set() const{
    return m_type_isSet;
}

bool OAIFirewallPolicyFilterRuleAction::is_type_Valid() const{
    return m_type_isValid;
}

bool OAIFirewallPolicyFilterRuleAction::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_type.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFirewallPolicyFilterRuleAction::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
