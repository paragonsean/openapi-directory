/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-07-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFirewallPolicyNatRule.h
 *
 * Firewall Policy NAT Rule.
 */

#ifndef OAIFirewallPolicyNatRule_H
#define OAIFirewallPolicyNatRule_H

#include <QJsonObject>

#include "OAIFirewallPolicyNatRuleAction.h"
#include "OAIFirewallPolicyRule.h"
#include "OAIFirewallPolicyRuleCondition.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIFirewallPolicyNatRuleAction;
class OAIFirewallPolicyRuleCondition;

class OAIFirewallPolicyNatRule : public OAIObject {
public:
    OAIFirewallPolicyNatRule();
    OAIFirewallPolicyNatRule(QString json);
    ~OAIFirewallPolicyNatRule() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIFirewallPolicyNatRuleAction getAction() const;
    void setAction(const OAIFirewallPolicyNatRuleAction &action);
    bool is_action_Set() const;
    bool is_action_Valid() const;

    OAIFirewallPolicyRuleCondition getRuleCondition() const;
    void setRuleCondition(const OAIFirewallPolicyRuleCondition &rule_condition);
    bool is_rule_condition_Set() const;
    bool is_rule_condition_Valid() const;

    QString getTranslatedAddress() const;
    void setTranslatedAddress(const QString &translated_address);
    bool is_translated_address_Set() const;
    bool is_translated_address_Valid() const;

    QString getTranslatedPort() const;
    void setTranslatedPort(const QString &translated_port);
    bool is_translated_port_Set() const;
    bool is_translated_port_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    qint32 getPriority() const;
    void setPriority(const qint32 &priority);
    bool is_priority_Set() const;
    bool is_priority_Valid() const;

    QString getRuleType() const;
    void setRuleType(const QString &rule_type);
    bool is_rule_type_Set() const;
    bool is_rule_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIFirewallPolicyNatRuleAction m_action;
    bool m_action_isSet;
    bool m_action_isValid;

    OAIFirewallPolicyRuleCondition m_rule_condition;
    bool m_rule_condition_isSet;
    bool m_rule_condition_isValid;

    QString m_translated_address;
    bool m_translated_address_isSet;
    bool m_translated_address_isValid;

    QString m_translated_port;
    bool m_translated_port_isSet;
    bool m_translated_port_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    qint32 m_priority;
    bool m_priority_isSet;
    bool m_priority_isValid;

    QString m_rule_type;
    bool m_rule_type_isSet;
    bool m_rule_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFirewallPolicyNatRule)

#endif // OAIFirewallPolicyNatRule_H
