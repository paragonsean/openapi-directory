/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-07-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import FirewallPolicyRuleGroup from '../model/FirewallPolicyRuleGroup';
import FirewallPolicyRuleGroupListResult from '../model/FirewallPolicyRuleGroupListResult';

/**
* FirewallPolicyRuleGroups service.
* @module api/FirewallPolicyRuleGroupsApi
* @version 2019-07-01
*/
export default class FirewallPolicyRuleGroupsApi {

    /**
    * Constructs a new FirewallPolicyRuleGroupsApi. 
    * @alias module:api/FirewallPolicyRuleGroupsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the firewallPolicyRuleGroupsCreateOrUpdate operation.
     * @callback module:api/FirewallPolicyRuleGroupsApi~firewallPolicyRuleGroupsCreateOrUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/FirewallPolicyRuleGroup} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates or updates the specified FirewallPolicyRuleGroup.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} firewallPolicyName The name of the Firewall Policy.
     * @param {String} ruleGroupName The name of the FirewallPolicyRuleGroup.
     * @param {String} apiVersion Client API version.
     * @param {String} subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:model/FirewallPolicyRuleGroup} parameters Parameters supplied to the create or update FirewallPolicyRuleGroup operation.
     * @param {module:api/FirewallPolicyRuleGroupsApi~firewallPolicyRuleGroupsCreateOrUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/FirewallPolicyRuleGroup}
     */
    firewallPolicyRuleGroupsCreateOrUpdate(resourceGroupName, firewallPolicyName, ruleGroupName, apiVersion, subscriptionId, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling firewallPolicyRuleGroupsCreateOrUpdate");
      }
      // verify the required parameter 'firewallPolicyName' is set
      if (firewallPolicyName === undefined || firewallPolicyName === null) {
        throw new Error("Missing the required parameter 'firewallPolicyName' when calling firewallPolicyRuleGroupsCreateOrUpdate");
      }
      // verify the required parameter 'ruleGroupName' is set
      if (ruleGroupName === undefined || ruleGroupName === null) {
        throw new Error("Missing the required parameter 'ruleGroupName' when calling firewallPolicyRuleGroupsCreateOrUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling firewallPolicyRuleGroupsCreateOrUpdate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling firewallPolicyRuleGroupsCreateOrUpdate");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling firewallPolicyRuleGroupsCreateOrUpdate");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'firewallPolicyName': firewallPolicyName,
        'ruleGroupName': ruleGroupName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = FirewallPolicyRuleGroup;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/firewallPolicies/{firewallPolicyName}/ruleGroups/{ruleGroupName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the firewallPolicyRuleGroupsDelete operation.
     * @callback module:api/FirewallPolicyRuleGroupsApi~firewallPolicyRuleGroupsDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes the specified FirewallPolicyRuleGroup.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} firewallPolicyName The name of the Firewall Policy.
     * @param {String} ruleGroupName The name of the FirewallPolicyRuleGroup.
     * @param {String} apiVersion Client API version.
     * @param {String} subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/FirewallPolicyRuleGroupsApi~firewallPolicyRuleGroupsDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    firewallPolicyRuleGroupsDelete(resourceGroupName, firewallPolicyName, ruleGroupName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling firewallPolicyRuleGroupsDelete");
      }
      // verify the required parameter 'firewallPolicyName' is set
      if (firewallPolicyName === undefined || firewallPolicyName === null) {
        throw new Error("Missing the required parameter 'firewallPolicyName' when calling firewallPolicyRuleGroupsDelete");
      }
      // verify the required parameter 'ruleGroupName' is set
      if (ruleGroupName === undefined || ruleGroupName === null) {
        throw new Error("Missing the required parameter 'ruleGroupName' when calling firewallPolicyRuleGroupsDelete");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling firewallPolicyRuleGroupsDelete");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling firewallPolicyRuleGroupsDelete");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'firewallPolicyName': firewallPolicyName,
        'ruleGroupName': ruleGroupName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/firewallPolicies/{firewallPolicyName}/ruleGroups/{ruleGroupName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the firewallPolicyRuleGroupsGet operation.
     * @callback module:api/FirewallPolicyRuleGroupsApi~firewallPolicyRuleGroupsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/FirewallPolicyRuleGroup} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the specified FirewallPolicyRuleGroup.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} firewallPolicyName The name of the Firewall Policy.
     * @param {String} ruleGroupName The name of the FirewallPolicyRuleGroup.
     * @param {String} apiVersion Client API version.
     * @param {String} subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/FirewallPolicyRuleGroupsApi~firewallPolicyRuleGroupsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/FirewallPolicyRuleGroup}
     */
    firewallPolicyRuleGroupsGet(resourceGroupName, firewallPolicyName, ruleGroupName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling firewallPolicyRuleGroupsGet");
      }
      // verify the required parameter 'firewallPolicyName' is set
      if (firewallPolicyName === undefined || firewallPolicyName === null) {
        throw new Error("Missing the required parameter 'firewallPolicyName' when calling firewallPolicyRuleGroupsGet");
      }
      // verify the required parameter 'ruleGroupName' is set
      if (ruleGroupName === undefined || ruleGroupName === null) {
        throw new Error("Missing the required parameter 'ruleGroupName' when calling firewallPolicyRuleGroupsGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling firewallPolicyRuleGroupsGet");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling firewallPolicyRuleGroupsGet");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'firewallPolicyName': firewallPolicyName,
        'ruleGroupName': ruleGroupName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = FirewallPolicyRuleGroup;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/firewallPolicies/{firewallPolicyName}/ruleGroups/{ruleGroupName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the firewallPolicyRuleGroupsList operation.
     * @callback module:api/FirewallPolicyRuleGroupsApi~firewallPolicyRuleGroupsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/FirewallPolicyRuleGroupListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists all FirewallPolicyRuleGroups in a FirewallPolicy resource.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} firewallPolicyName The name of the Firewall Policy.
     * @param {String} apiVersion Client API version.
     * @param {String} subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/FirewallPolicyRuleGroupsApi~firewallPolicyRuleGroupsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/FirewallPolicyRuleGroupListResult}
     */
    firewallPolicyRuleGroupsList(resourceGroupName, firewallPolicyName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling firewallPolicyRuleGroupsList");
      }
      // verify the required parameter 'firewallPolicyName' is set
      if (firewallPolicyName === undefined || firewallPolicyName === null) {
        throw new Error("Missing the required parameter 'firewallPolicyName' when calling firewallPolicyRuleGroupsList");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling firewallPolicyRuleGroupsList");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling firewallPolicyRuleGroupsList");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'firewallPolicyName': firewallPolicyName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = FirewallPolicyRuleGroupListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/firewallPolicies/{firewallPolicyName}/ruleGroups', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
