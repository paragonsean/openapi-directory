/*
 * ApiManagementClient
 * Use these REST APIs to get the analytics reports associated with your Azure API Management deployment.
 *
 * The version of the OpenAPI document: 2017-03-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ReportCollection;
import org.openapitools.client.model.RequestReportCollection;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ReportsApi
 */
@Disabled
public class ReportsApiTest {

    private final ReportsApi api = new ReportsApi();

    /**
     * Lists report records by API.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void reportsListByApiTest() throws ApiException {
        String $filter = null;
        String apiVersion = null;
        Integer $top = null;
        Integer $skip = null;
        ReportCollection response = api.reportsListByApi($filter, apiVersion, $top, $skip);
        // TODO: test validations
    }

    /**
     * Lists report records by geography.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void reportsListByGeoTest() throws ApiException {
        String apiVersion = null;
        String $filter = null;
        Integer $top = null;
        Integer $skip = null;
        ReportCollection response = api.reportsListByGeo(apiVersion, $filter, $top, $skip);
        // TODO: test validations
    }

    /**
     * Lists report records by API Operations.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void reportsListByOperationTest() throws ApiException {
        String $filter = null;
        String apiVersion = null;
        Integer $top = null;
        Integer $skip = null;
        ReportCollection response = api.reportsListByOperation($filter, apiVersion, $top, $skip);
        // TODO: test validations
    }

    /**
     * Lists report records by Product.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void reportsListByProductTest() throws ApiException {
        String $filter = null;
        String apiVersion = null;
        Integer $top = null;
        Integer $skip = null;
        ReportCollection response = api.reportsListByProduct($filter, apiVersion, $top, $skip);
        // TODO: test validations
    }

    /**
     * Lists report records by Request.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void reportsListByRequestTest() throws ApiException {
        String $filter = null;
        String apiVersion = null;
        Integer $top = null;
        Integer $skip = null;
        RequestReportCollection response = api.reportsListByRequest($filter, apiVersion, $top, $skip);
        // TODO: test validations
    }

    /**
     * Lists report records by subscription.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void reportsListBySubscriptionTest() throws ApiException {
        String apiVersion = null;
        String $filter = null;
        Integer $top = null;
        Integer $skip = null;
        ReportCollection response = api.reportsListBySubscription(apiVersion, $filter, $top, $skip);
        // TODO: test validations
    }

    /**
     * Lists report records by Time.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void reportsListByTimeTest() throws ApiException {
        String interval = null;
        String apiVersion = null;
        String $filter = null;
        Integer $top = null;
        Integer $skip = null;
        ReportCollection response = api.reportsListByTime(interval, apiVersion, $filter, $top, $skip);
        // TODO: test validations
    }

    /**
     * Lists report records by User.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void reportsListByUserTest() throws ApiException {
        String $filter = null;
        String apiVersion = null;
        Integer $top = null;
        Integer $skip = null;
        ReportCollection response = api.reportsListByUser($filter, apiVersion, $top, $skip);
        // TODO: test validations
    }

}
