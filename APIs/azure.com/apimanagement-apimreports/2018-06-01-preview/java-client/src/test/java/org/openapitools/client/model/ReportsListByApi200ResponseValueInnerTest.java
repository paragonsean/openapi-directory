/*
 * ApiManagementClient
 * Use these REST APIs to get the analytics reports associated with your Azure API Management deployment.
 *
 * The version of the OpenAPI document: 2018-06-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ReportsListByApi200ResponseValueInner
 */
public class ReportsListByApi200ResponseValueInnerTest {
    private final ReportsListByApi200ResponseValueInner model = new ReportsListByApi200ResponseValueInner();

    /**
     * Model tests for ReportsListByApi200ResponseValueInner
     */
    @Test
    public void testReportsListByApi200ResponseValueInner() {
        // TODO: test ReportsListByApi200ResponseValueInner
    }

    /**
     * Test the property 'apiId'
     */
    @Test
    public void apiIdTest() {
        // TODO: test apiId
    }

    /**
     * Test the property 'apiRegion'
     */
    @Test
    public void apiRegionTest() {
        // TODO: test apiRegion
    }

    /**
     * Test the property 'apiTimeAvg'
     */
    @Test
    public void apiTimeAvgTest() {
        // TODO: test apiTimeAvg
    }

    /**
     * Test the property 'apiTimeMax'
     */
    @Test
    public void apiTimeMaxTest() {
        // TODO: test apiTimeMax
    }

    /**
     * Test the property 'apiTimeMin'
     */
    @Test
    public void apiTimeMinTest() {
        // TODO: test apiTimeMin
    }

    /**
     * Test the property 'bandwidth'
     */
    @Test
    public void bandwidthTest() {
        // TODO: test bandwidth
    }

    /**
     * Test the property 'cacheHitCount'
     */
    @Test
    public void cacheHitCountTest() {
        // TODO: test cacheHitCount
    }

    /**
     * Test the property 'cacheMissCount'
     */
    @Test
    public void cacheMissCountTest() {
        // TODO: test cacheMissCount
    }

    /**
     * Test the property 'callCountBlocked'
     */
    @Test
    public void callCountBlockedTest() {
        // TODO: test callCountBlocked
    }

    /**
     * Test the property 'callCountFailed'
     */
    @Test
    public void callCountFailedTest() {
        // TODO: test callCountFailed
    }

    /**
     * Test the property 'callCountOther'
     */
    @Test
    public void callCountOtherTest() {
        // TODO: test callCountOther
    }

    /**
     * Test the property 'callCountSuccess'
     */
    @Test
    public void callCountSuccessTest() {
        // TODO: test callCountSuccess
    }

    /**
     * Test the property 'callCountTotal'
     */
    @Test
    public void callCountTotalTest() {
        // TODO: test callCountTotal
    }

    /**
     * Test the property 'country'
     */
    @Test
    public void countryTest() {
        // TODO: test country
    }

    /**
     * Test the property 'interval'
     */
    @Test
    public void intervalTest() {
        // TODO: test interval
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'operationId'
     */
    @Test
    public void operationIdTest() {
        // TODO: test operationId
    }

    /**
     * Test the property 'productId'
     */
    @Test
    public void productIdTest() {
        // TODO: test productId
    }

    /**
     * Test the property 'region'
     */
    @Test
    public void regionTest() {
        // TODO: test region
    }

    /**
     * Test the property 'serviceTimeAvg'
     */
    @Test
    public void serviceTimeAvgTest() {
        // TODO: test serviceTimeAvg
    }

    /**
     * Test the property 'serviceTimeMax'
     */
    @Test
    public void serviceTimeMaxTest() {
        // TODO: test serviceTimeMax
    }

    /**
     * Test the property 'serviceTimeMin'
     */
    @Test
    public void serviceTimeMinTest() {
        // TODO: test serviceTimeMin
    }

    /**
     * Test the property 'subscriptionId'
     */
    @Test
    public void subscriptionIdTest() {
        // TODO: test subscriptionId
    }

    /**
     * Test the property 'timestamp'
     */
    @Test
    public void timestampTest() {
        // TODO: test timestamp
    }

    /**
     * Test the property 'userId'
     */
    @Test
    public void userIdTest() {
        // TODO: test userId
    }

    /**
     * Test the property 'zip'
     */
    @Test
    public void zipTest() {
        // TODO: test zip
    }

}
