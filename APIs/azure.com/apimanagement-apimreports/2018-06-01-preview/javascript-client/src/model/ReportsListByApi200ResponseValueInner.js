/**
 * ApiManagementClient
 * Use these REST APIs to get the analytics reports associated with your Azure API Management deployment.
 *
 * The version of the OpenAPI document: 2018-06-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ReportsListByApi200ResponseValueInner model module.
 * @module model/ReportsListByApi200ResponseValueInner
 * @version 2018-06-01-preview
 */
class ReportsListByApi200ResponseValueInner {
    /**
     * Constructs a new <code>ReportsListByApi200ResponseValueInner</code>.
     * Report data.
     * @alias module:model/ReportsListByApi200ResponseValueInner
     */
    constructor() { 
        
        ReportsListByApi200ResponseValueInner.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ReportsListByApi200ResponseValueInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ReportsListByApi200ResponseValueInner} obj Optional instance to populate.
     * @return {module:model/ReportsListByApi200ResponseValueInner} The populated <code>ReportsListByApi200ResponseValueInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ReportsListByApi200ResponseValueInner();

            if (data.hasOwnProperty('apiId')) {
                obj['apiId'] = ApiClient.convertToType(data['apiId'], 'String');
            }
            if (data.hasOwnProperty('apiRegion')) {
                obj['apiRegion'] = ApiClient.convertToType(data['apiRegion'], 'String');
            }
            if (data.hasOwnProperty('apiTimeAvg')) {
                obj['apiTimeAvg'] = ApiClient.convertToType(data['apiTimeAvg'], 'Number');
            }
            if (data.hasOwnProperty('apiTimeMax')) {
                obj['apiTimeMax'] = ApiClient.convertToType(data['apiTimeMax'], 'Number');
            }
            if (data.hasOwnProperty('apiTimeMin')) {
                obj['apiTimeMin'] = ApiClient.convertToType(data['apiTimeMin'], 'Number');
            }
            if (data.hasOwnProperty('bandwidth')) {
                obj['bandwidth'] = ApiClient.convertToType(data['bandwidth'], 'Number');
            }
            if (data.hasOwnProperty('cacheHitCount')) {
                obj['cacheHitCount'] = ApiClient.convertToType(data['cacheHitCount'], 'Number');
            }
            if (data.hasOwnProperty('cacheMissCount')) {
                obj['cacheMissCount'] = ApiClient.convertToType(data['cacheMissCount'], 'Number');
            }
            if (data.hasOwnProperty('callCountBlocked')) {
                obj['callCountBlocked'] = ApiClient.convertToType(data['callCountBlocked'], 'Number');
            }
            if (data.hasOwnProperty('callCountFailed')) {
                obj['callCountFailed'] = ApiClient.convertToType(data['callCountFailed'], 'Number');
            }
            if (data.hasOwnProperty('callCountOther')) {
                obj['callCountOther'] = ApiClient.convertToType(data['callCountOther'], 'Number');
            }
            if (data.hasOwnProperty('callCountSuccess')) {
                obj['callCountSuccess'] = ApiClient.convertToType(data['callCountSuccess'], 'Number');
            }
            if (data.hasOwnProperty('callCountTotal')) {
                obj['callCountTotal'] = ApiClient.convertToType(data['callCountTotal'], 'Number');
            }
            if (data.hasOwnProperty('country')) {
                obj['country'] = ApiClient.convertToType(data['country'], 'String');
            }
            if (data.hasOwnProperty('interval')) {
                obj['interval'] = ApiClient.convertToType(data['interval'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('operationId')) {
                obj['operationId'] = ApiClient.convertToType(data['operationId'], 'String');
            }
            if (data.hasOwnProperty('productId')) {
                obj['productId'] = ApiClient.convertToType(data['productId'], 'String');
            }
            if (data.hasOwnProperty('region')) {
                obj['region'] = ApiClient.convertToType(data['region'], 'String');
            }
            if (data.hasOwnProperty('serviceTimeAvg')) {
                obj['serviceTimeAvg'] = ApiClient.convertToType(data['serviceTimeAvg'], 'Number');
            }
            if (data.hasOwnProperty('serviceTimeMax')) {
                obj['serviceTimeMax'] = ApiClient.convertToType(data['serviceTimeMax'], 'Number');
            }
            if (data.hasOwnProperty('serviceTimeMin')) {
                obj['serviceTimeMin'] = ApiClient.convertToType(data['serviceTimeMin'], 'Number');
            }
            if (data.hasOwnProperty('subscriptionId')) {
                obj['subscriptionId'] = ApiClient.convertToType(data['subscriptionId'], 'String');
            }
            if (data.hasOwnProperty('timestamp')) {
                obj['timestamp'] = ApiClient.convertToType(data['timestamp'], 'Date');
            }
            if (data.hasOwnProperty('userId')) {
                obj['userId'] = ApiClient.convertToType(data['userId'], 'String');
            }
            if (data.hasOwnProperty('zip')) {
                obj['zip'] = ApiClient.convertToType(data['zip'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ReportsListByApi200ResponseValueInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ReportsListByApi200ResponseValueInner</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['apiId'] && !(typeof data['apiId'] === 'string' || data['apiId'] instanceof String)) {
            throw new Error("Expected the field `apiId` to be a primitive type in the JSON string but got " + data['apiId']);
        }
        // ensure the json data is a string
        if (data['apiRegion'] && !(typeof data['apiRegion'] === 'string' || data['apiRegion'] instanceof String)) {
            throw new Error("Expected the field `apiRegion` to be a primitive type in the JSON string but got " + data['apiRegion']);
        }
        // ensure the json data is a string
        if (data['country'] && !(typeof data['country'] === 'string' || data['country'] instanceof String)) {
            throw new Error("Expected the field `country` to be a primitive type in the JSON string but got " + data['country']);
        }
        // ensure the json data is a string
        if (data['interval'] && !(typeof data['interval'] === 'string' || data['interval'] instanceof String)) {
            throw new Error("Expected the field `interval` to be a primitive type in the JSON string but got " + data['interval']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['operationId'] && !(typeof data['operationId'] === 'string' || data['operationId'] instanceof String)) {
            throw new Error("Expected the field `operationId` to be a primitive type in the JSON string but got " + data['operationId']);
        }
        // ensure the json data is a string
        if (data['productId'] && !(typeof data['productId'] === 'string' || data['productId'] instanceof String)) {
            throw new Error("Expected the field `productId` to be a primitive type in the JSON string but got " + data['productId']);
        }
        // ensure the json data is a string
        if (data['region'] && !(typeof data['region'] === 'string' || data['region'] instanceof String)) {
            throw new Error("Expected the field `region` to be a primitive type in the JSON string but got " + data['region']);
        }
        // ensure the json data is a string
        if (data['subscriptionId'] && !(typeof data['subscriptionId'] === 'string' || data['subscriptionId'] instanceof String)) {
            throw new Error("Expected the field `subscriptionId` to be a primitive type in the JSON string but got " + data['subscriptionId']);
        }
        // ensure the json data is a string
        if (data['userId'] && !(typeof data['userId'] === 'string' || data['userId'] instanceof String)) {
            throw new Error("Expected the field `userId` to be a primitive type in the JSON string but got " + data['userId']);
        }
        // ensure the json data is a string
        if (data['zip'] && !(typeof data['zip'] === 'string' || data['zip'] instanceof String)) {
            throw new Error("Expected the field `zip` to be a primitive type in the JSON string but got " + data['zip']);
        }

        return true;
    }


}



/**
 * API identifier path. /apis/{apiId}
 * @member {String} apiId
 */
ReportsListByApi200ResponseValueInner.prototype['apiId'] = undefined;

/**
 * API region identifier.
 * @member {String} apiRegion
 */
ReportsListByApi200ResponseValueInner.prototype['apiRegion'] = undefined;

/**
 * Average time it took to process request.
 * @member {Number} apiTimeAvg
 */
ReportsListByApi200ResponseValueInner.prototype['apiTimeAvg'] = undefined;

/**
 * Maximum time it took to process request.
 * @member {Number} apiTimeMax
 */
ReportsListByApi200ResponseValueInner.prototype['apiTimeMax'] = undefined;

/**
 * Minimum time it took to process request.
 * @member {Number} apiTimeMin
 */
ReportsListByApi200ResponseValueInner.prototype['apiTimeMin'] = undefined;

/**
 * Bandwidth consumed.
 * @member {Number} bandwidth
 */
ReportsListByApi200ResponseValueInner.prototype['bandwidth'] = undefined;

/**
 * Number of times when content was served from cache policy.
 * @member {Number} cacheHitCount
 */
ReportsListByApi200ResponseValueInner.prototype['cacheHitCount'] = undefined;

/**
 * Number of times content was fetched from backend.
 * @member {Number} cacheMissCount
 */
ReportsListByApi200ResponseValueInner.prototype['cacheMissCount'] = undefined;

/**
 * Number of calls blocked due to invalid credentials. This includes calls returning HttpStatusCode.Unauthorized and HttpStatusCode.Forbidden and HttpStatusCode.TooManyRequests
 * @member {Number} callCountBlocked
 */
ReportsListByApi200ResponseValueInner.prototype['callCountBlocked'] = undefined;

/**
 * Number of calls failed due to proxy or backend errors. This includes calls returning HttpStatusCode.BadRequest(400) and any Code between HttpStatusCode.InternalServerError (500) and 600
 * @member {Number} callCountFailed
 */
ReportsListByApi200ResponseValueInner.prototype['callCountFailed'] = undefined;

/**
 * Number of other calls.
 * @member {Number} callCountOther
 */
ReportsListByApi200ResponseValueInner.prototype['callCountOther'] = undefined;

/**
 * Number of successful calls. This includes calls returning HttpStatusCode <= 301 and HttpStatusCode.NotModified and HttpStatusCode.TemporaryRedirect
 * @member {Number} callCountSuccess
 */
ReportsListByApi200ResponseValueInner.prototype['callCountSuccess'] = undefined;

/**
 * Total number of calls.
 * @member {Number} callCountTotal
 */
ReportsListByApi200ResponseValueInner.prototype['callCountTotal'] = undefined;

/**
 * Country to which this record data is related.
 * @member {String} country
 */
ReportsListByApi200ResponseValueInner.prototype['country'] = undefined;

/**
 * Length of aggregation period.  Interval must be multiple of 15 minutes and may not be zero. The value should be in ISO 8601 format (http://en.wikipedia.org/wiki/ISO_8601#Durations).
 * @member {String} interval
 */
ReportsListByApi200ResponseValueInner.prototype['interval'] = undefined;

/**
 * Name depending on report endpoint specifies product, API, operation or developer name.
 * @member {String} name
 */
ReportsListByApi200ResponseValueInner.prototype['name'] = undefined;

/**
 * Operation identifier path. /apis/{apiId}/operations/{operationId}
 * @member {String} operationId
 */
ReportsListByApi200ResponseValueInner.prototype['operationId'] = undefined;

/**
 * Product identifier path. /products/{productId}
 * @member {String} productId
 */
ReportsListByApi200ResponseValueInner.prototype['productId'] = undefined;

/**
 * Country region to which this record data is related.
 * @member {String} region
 */
ReportsListByApi200ResponseValueInner.prototype['region'] = undefined;

/**
 * Average time it took to process request on backend.
 * @member {Number} serviceTimeAvg
 */
ReportsListByApi200ResponseValueInner.prototype['serviceTimeAvg'] = undefined;

/**
 * Maximum time it took to process request on backend.
 * @member {Number} serviceTimeMax
 */
ReportsListByApi200ResponseValueInner.prototype['serviceTimeMax'] = undefined;

/**
 * Minimum time it took to process request on backend.
 * @member {Number} serviceTimeMin
 */
ReportsListByApi200ResponseValueInner.prototype['serviceTimeMin'] = undefined;

/**
 * Subscription identifier path. /subscriptions/{subscriptionId}
 * @member {String} subscriptionId
 */
ReportsListByApi200ResponseValueInner.prototype['subscriptionId'] = undefined;

/**
 * Start of aggregation period. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard. 
 * @member {Date} timestamp
 */
ReportsListByApi200ResponseValueInner.prototype['timestamp'] = undefined;

/**
 * User identifier path. /users/{userId}
 * @member {String} userId
 */
ReportsListByApi200ResponseValueInner.prototype['userId'] = undefined;

/**
 * Zip code to which this record data is related.
 * @member {String} zip
 */
ReportsListByApi200ResponseValueInner.prototype['zip'] = undefined;






export default ReportsListByApi200ResponseValueInner;

