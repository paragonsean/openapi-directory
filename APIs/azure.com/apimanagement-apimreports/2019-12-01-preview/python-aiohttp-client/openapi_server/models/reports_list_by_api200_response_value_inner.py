# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ReportsListByApi200ResponseValueInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, api_id: str=None, api_region: str=None, api_time_avg: float=None, api_time_max: float=None, api_time_min: float=None, bandwidth: int=None, cache_hit_count: int=None, cache_miss_count: int=None, call_count_blocked: int=None, call_count_failed: int=None, call_count_other: int=None, call_count_success: int=None, call_count_total: int=None, country: str=None, interval: str=None, name: str=None, operation_id: str=None, product_id: str=None, region: str=None, service_time_avg: float=None, service_time_max: float=None, service_time_min: float=None, subscription_id: str=None, timestamp: datetime=None, user_id: str=None, zip: str=None):
        """ReportsListByApi200ResponseValueInner - a model defined in OpenAPI

        :param api_id: The api_id of this ReportsListByApi200ResponseValueInner.
        :param api_region: The api_region of this ReportsListByApi200ResponseValueInner.
        :param api_time_avg: The api_time_avg of this ReportsListByApi200ResponseValueInner.
        :param api_time_max: The api_time_max of this ReportsListByApi200ResponseValueInner.
        :param api_time_min: The api_time_min of this ReportsListByApi200ResponseValueInner.
        :param bandwidth: The bandwidth of this ReportsListByApi200ResponseValueInner.
        :param cache_hit_count: The cache_hit_count of this ReportsListByApi200ResponseValueInner.
        :param cache_miss_count: The cache_miss_count of this ReportsListByApi200ResponseValueInner.
        :param call_count_blocked: The call_count_blocked of this ReportsListByApi200ResponseValueInner.
        :param call_count_failed: The call_count_failed of this ReportsListByApi200ResponseValueInner.
        :param call_count_other: The call_count_other of this ReportsListByApi200ResponseValueInner.
        :param call_count_success: The call_count_success of this ReportsListByApi200ResponseValueInner.
        :param call_count_total: The call_count_total of this ReportsListByApi200ResponseValueInner.
        :param country: The country of this ReportsListByApi200ResponseValueInner.
        :param interval: The interval of this ReportsListByApi200ResponseValueInner.
        :param name: The name of this ReportsListByApi200ResponseValueInner.
        :param operation_id: The operation_id of this ReportsListByApi200ResponseValueInner.
        :param product_id: The product_id of this ReportsListByApi200ResponseValueInner.
        :param region: The region of this ReportsListByApi200ResponseValueInner.
        :param service_time_avg: The service_time_avg of this ReportsListByApi200ResponseValueInner.
        :param service_time_max: The service_time_max of this ReportsListByApi200ResponseValueInner.
        :param service_time_min: The service_time_min of this ReportsListByApi200ResponseValueInner.
        :param subscription_id: The subscription_id of this ReportsListByApi200ResponseValueInner.
        :param timestamp: The timestamp of this ReportsListByApi200ResponseValueInner.
        :param user_id: The user_id of this ReportsListByApi200ResponseValueInner.
        :param zip: The zip of this ReportsListByApi200ResponseValueInner.
        """
        self.openapi_types = {
            'api_id': str,
            'api_region': str,
            'api_time_avg': float,
            'api_time_max': float,
            'api_time_min': float,
            'bandwidth': int,
            'cache_hit_count': int,
            'cache_miss_count': int,
            'call_count_blocked': int,
            'call_count_failed': int,
            'call_count_other': int,
            'call_count_success': int,
            'call_count_total': int,
            'country': str,
            'interval': str,
            'name': str,
            'operation_id': str,
            'product_id': str,
            'region': str,
            'service_time_avg': float,
            'service_time_max': float,
            'service_time_min': float,
            'subscription_id': str,
            'timestamp': datetime,
            'user_id': str,
            'zip': str
        }

        self.attribute_map = {
            'api_id': 'apiId',
            'api_region': 'apiRegion',
            'api_time_avg': 'apiTimeAvg',
            'api_time_max': 'apiTimeMax',
            'api_time_min': 'apiTimeMin',
            'bandwidth': 'bandwidth',
            'cache_hit_count': 'cacheHitCount',
            'cache_miss_count': 'cacheMissCount',
            'call_count_blocked': 'callCountBlocked',
            'call_count_failed': 'callCountFailed',
            'call_count_other': 'callCountOther',
            'call_count_success': 'callCountSuccess',
            'call_count_total': 'callCountTotal',
            'country': 'country',
            'interval': 'interval',
            'name': 'name',
            'operation_id': 'operationId',
            'product_id': 'productId',
            'region': 'region',
            'service_time_avg': 'serviceTimeAvg',
            'service_time_max': 'serviceTimeMax',
            'service_time_min': 'serviceTimeMin',
            'subscription_id': 'subscriptionId',
            'timestamp': 'timestamp',
            'user_id': 'userId',
            'zip': 'zip'
        }

        self._api_id = api_id
        self._api_region = api_region
        self._api_time_avg = api_time_avg
        self._api_time_max = api_time_max
        self._api_time_min = api_time_min
        self._bandwidth = bandwidth
        self._cache_hit_count = cache_hit_count
        self._cache_miss_count = cache_miss_count
        self._call_count_blocked = call_count_blocked
        self._call_count_failed = call_count_failed
        self._call_count_other = call_count_other
        self._call_count_success = call_count_success
        self._call_count_total = call_count_total
        self._country = country
        self._interval = interval
        self._name = name
        self._operation_id = operation_id
        self._product_id = product_id
        self._region = region
        self._service_time_avg = service_time_avg
        self._service_time_max = service_time_max
        self._service_time_min = service_time_min
        self._subscription_id = subscription_id
        self._timestamp = timestamp
        self._user_id = user_id
        self._zip = zip

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReportsListByApi200ResponseValueInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Reports_ListByApi_200_response_value_inner of this ReportsListByApi200ResponseValueInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def api_id(self):
        """Gets the api_id of this ReportsListByApi200ResponseValueInner.

        API identifier path. /apis/{apiId}

        :return: The api_id of this ReportsListByApi200ResponseValueInner.
        :rtype: str
        """
        return self._api_id

    @api_id.setter
    def api_id(self, api_id):
        """Sets the api_id of this ReportsListByApi200ResponseValueInner.

        API identifier path. /apis/{apiId}

        :param api_id: The api_id of this ReportsListByApi200ResponseValueInner.
        :type api_id: str
        """

        self._api_id = api_id

    @property
    def api_region(self):
        """Gets the api_region of this ReportsListByApi200ResponseValueInner.

        API region identifier.

        :return: The api_region of this ReportsListByApi200ResponseValueInner.
        :rtype: str
        """
        return self._api_region

    @api_region.setter
    def api_region(self, api_region):
        """Sets the api_region of this ReportsListByApi200ResponseValueInner.

        API region identifier.

        :param api_region: The api_region of this ReportsListByApi200ResponseValueInner.
        :type api_region: str
        """

        self._api_region = api_region

    @property
    def api_time_avg(self):
        """Gets the api_time_avg of this ReportsListByApi200ResponseValueInner.

        Average time it took to process request.

        :return: The api_time_avg of this ReportsListByApi200ResponseValueInner.
        :rtype: float
        """
        return self._api_time_avg

    @api_time_avg.setter
    def api_time_avg(self, api_time_avg):
        """Sets the api_time_avg of this ReportsListByApi200ResponseValueInner.

        Average time it took to process request.

        :param api_time_avg: The api_time_avg of this ReportsListByApi200ResponseValueInner.
        :type api_time_avg: float
        """

        self._api_time_avg = api_time_avg

    @property
    def api_time_max(self):
        """Gets the api_time_max of this ReportsListByApi200ResponseValueInner.

        Maximum time it took to process request.

        :return: The api_time_max of this ReportsListByApi200ResponseValueInner.
        :rtype: float
        """
        return self._api_time_max

    @api_time_max.setter
    def api_time_max(self, api_time_max):
        """Sets the api_time_max of this ReportsListByApi200ResponseValueInner.

        Maximum time it took to process request.

        :param api_time_max: The api_time_max of this ReportsListByApi200ResponseValueInner.
        :type api_time_max: float
        """

        self._api_time_max = api_time_max

    @property
    def api_time_min(self):
        """Gets the api_time_min of this ReportsListByApi200ResponseValueInner.

        Minimum time it took to process request.

        :return: The api_time_min of this ReportsListByApi200ResponseValueInner.
        :rtype: float
        """
        return self._api_time_min

    @api_time_min.setter
    def api_time_min(self, api_time_min):
        """Sets the api_time_min of this ReportsListByApi200ResponseValueInner.

        Minimum time it took to process request.

        :param api_time_min: The api_time_min of this ReportsListByApi200ResponseValueInner.
        :type api_time_min: float
        """

        self._api_time_min = api_time_min

    @property
    def bandwidth(self):
        """Gets the bandwidth of this ReportsListByApi200ResponseValueInner.

        Bandwidth consumed.

        :return: The bandwidth of this ReportsListByApi200ResponseValueInner.
        :rtype: int
        """
        return self._bandwidth

    @bandwidth.setter
    def bandwidth(self, bandwidth):
        """Sets the bandwidth of this ReportsListByApi200ResponseValueInner.

        Bandwidth consumed.

        :param bandwidth: The bandwidth of this ReportsListByApi200ResponseValueInner.
        :type bandwidth: int
        """

        self._bandwidth = bandwidth

    @property
    def cache_hit_count(self):
        """Gets the cache_hit_count of this ReportsListByApi200ResponseValueInner.

        Number of times when content was served from cache policy.

        :return: The cache_hit_count of this ReportsListByApi200ResponseValueInner.
        :rtype: int
        """
        return self._cache_hit_count

    @cache_hit_count.setter
    def cache_hit_count(self, cache_hit_count):
        """Sets the cache_hit_count of this ReportsListByApi200ResponseValueInner.

        Number of times when content was served from cache policy.

        :param cache_hit_count: The cache_hit_count of this ReportsListByApi200ResponseValueInner.
        :type cache_hit_count: int
        """

        self._cache_hit_count = cache_hit_count

    @property
    def cache_miss_count(self):
        """Gets the cache_miss_count of this ReportsListByApi200ResponseValueInner.

        Number of times content was fetched from backend.

        :return: The cache_miss_count of this ReportsListByApi200ResponseValueInner.
        :rtype: int
        """
        return self._cache_miss_count

    @cache_miss_count.setter
    def cache_miss_count(self, cache_miss_count):
        """Sets the cache_miss_count of this ReportsListByApi200ResponseValueInner.

        Number of times content was fetched from backend.

        :param cache_miss_count: The cache_miss_count of this ReportsListByApi200ResponseValueInner.
        :type cache_miss_count: int
        """

        self._cache_miss_count = cache_miss_count

    @property
    def call_count_blocked(self):
        """Gets the call_count_blocked of this ReportsListByApi200ResponseValueInner.

        Number of calls blocked due to invalid credentials. This includes calls returning HttpStatusCode.Unauthorized and HttpStatusCode.Forbidden and HttpStatusCode.TooManyRequests

        :return: The call_count_blocked of this ReportsListByApi200ResponseValueInner.
        :rtype: int
        """
        return self._call_count_blocked

    @call_count_blocked.setter
    def call_count_blocked(self, call_count_blocked):
        """Sets the call_count_blocked of this ReportsListByApi200ResponseValueInner.

        Number of calls blocked due to invalid credentials. This includes calls returning HttpStatusCode.Unauthorized and HttpStatusCode.Forbidden and HttpStatusCode.TooManyRequests

        :param call_count_blocked: The call_count_blocked of this ReportsListByApi200ResponseValueInner.
        :type call_count_blocked: int
        """

        self._call_count_blocked = call_count_blocked

    @property
    def call_count_failed(self):
        """Gets the call_count_failed of this ReportsListByApi200ResponseValueInner.

        Number of calls failed due to proxy or backend errors. This includes calls returning HttpStatusCode.BadRequest(400) and any Code between HttpStatusCode.InternalServerError (500) and 600

        :return: The call_count_failed of this ReportsListByApi200ResponseValueInner.
        :rtype: int
        """
        return self._call_count_failed

    @call_count_failed.setter
    def call_count_failed(self, call_count_failed):
        """Sets the call_count_failed of this ReportsListByApi200ResponseValueInner.

        Number of calls failed due to proxy or backend errors. This includes calls returning HttpStatusCode.BadRequest(400) and any Code between HttpStatusCode.InternalServerError (500) and 600

        :param call_count_failed: The call_count_failed of this ReportsListByApi200ResponseValueInner.
        :type call_count_failed: int
        """

        self._call_count_failed = call_count_failed

    @property
    def call_count_other(self):
        """Gets the call_count_other of this ReportsListByApi200ResponseValueInner.

        Number of other calls.

        :return: The call_count_other of this ReportsListByApi200ResponseValueInner.
        :rtype: int
        """
        return self._call_count_other

    @call_count_other.setter
    def call_count_other(self, call_count_other):
        """Sets the call_count_other of this ReportsListByApi200ResponseValueInner.

        Number of other calls.

        :param call_count_other: The call_count_other of this ReportsListByApi200ResponseValueInner.
        :type call_count_other: int
        """

        self._call_count_other = call_count_other

    @property
    def call_count_success(self):
        """Gets the call_count_success of this ReportsListByApi200ResponseValueInner.

        Number of successful calls. This includes calls returning HttpStatusCode <= 301 and HttpStatusCode.NotModified and HttpStatusCode.TemporaryRedirect

        :return: The call_count_success of this ReportsListByApi200ResponseValueInner.
        :rtype: int
        """
        return self._call_count_success

    @call_count_success.setter
    def call_count_success(self, call_count_success):
        """Sets the call_count_success of this ReportsListByApi200ResponseValueInner.

        Number of successful calls. This includes calls returning HttpStatusCode <= 301 and HttpStatusCode.NotModified and HttpStatusCode.TemporaryRedirect

        :param call_count_success: The call_count_success of this ReportsListByApi200ResponseValueInner.
        :type call_count_success: int
        """

        self._call_count_success = call_count_success

    @property
    def call_count_total(self):
        """Gets the call_count_total of this ReportsListByApi200ResponseValueInner.

        Total number of calls.

        :return: The call_count_total of this ReportsListByApi200ResponseValueInner.
        :rtype: int
        """
        return self._call_count_total

    @call_count_total.setter
    def call_count_total(self, call_count_total):
        """Sets the call_count_total of this ReportsListByApi200ResponseValueInner.

        Total number of calls.

        :param call_count_total: The call_count_total of this ReportsListByApi200ResponseValueInner.
        :type call_count_total: int
        """

        self._call_count_total = call_count_total

    @property
    def country(self):
        """Gets the country of this ReportsListByApi200ResponseValueInner.

        Country to which this record data is related.

        :return: The country of this ReportsListByApi200ResponseValueInner.
        :rtype: str
        """
        return self._country

    @country.setter
    def country(self, country):
        """Sets the country of this ReportsListByApi200ResponseValueInner.

        Country to which this record data is related.

        :param country: The country of this ReportsListByApi200ResponseValueInner.
        :type country: str
        """

        self._country = country

    @property
    def interval(self):
        """Gets the interval of this ReportsListByApi200ResponseValueInner.

        Length of aggregation period.  Interval must be multiple of 15 minutes and may not be zero. The value should be in ISO 8601 format (http://en.wikipedia.org/wiki/ISO_8601#Durations).

        :return: The interval of this ReportsListByApi200ResponseValueInner.
        :rtype: str
        """
        return self._interval

    @interval.setter
    def interval(self, interval):
        """Sets the interval of this ReportsListByApi200ResponseValueInner.

        Length of aggregation period.  Interval must be multiple of 15 minutes and may not be zero. The value should be in ISO 8601 format (http://en.wikipedia.org/wiki/ISO_8601#Durations).

        :param interval: The interval of this ReportsListByApi200ResponseValueInner.
        :type interval: str
        """

        self._interval = interval

    @property
    def name(self):
        """Gets the name of this ReportsListByApi200ResponseValueInner.

        Name depending on report endpoint specifies product, API, operation or developer name.

        :return: The name of this ReportsListByApi200ResponseValueInner.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ReportsListByApi200ResponseValueInner.

        Name depending on report endpoint specifies product, API, operation or developer name.

        :param name: The name of this ReportsListByApi200ResponseValueInner.
        :type name: str
        """

        self._name = name

    @property
    def operation_id(self):
        """Gets the operation_id of this ReportsListByApi200ResponseValueInner.

        Operation identifier path. /apis/{apiId}/operations/{operationId}

        :return: The operation_id of this ReportsListByApi200ResponseValueInner.
        :rtype: str
        """
        return self._operation_id

    @operation_id.setter
    def operation_id(self, operation_id):
        """Sets the operation_id of this ReportsListByApi200ResponseValueInner.

        Operation identifier path. /apis/{apiId}/operations/{operationId}

        :param operation_id: The operation_id of this ReportsListByApi200ResponseValueInner.
        :type operation_id: str
        """

        self._operation_id = operation_id

    @property
    def product_id(self):
        """Gets the product_id of this ReportsListByApi200ResponseValueInner.

        Product identifier path. /products/{productId}

        :return: The product_id of this ReportsListByApi200ResponseValueInner.
        :rtype: str
        """
        return self._product_id

    @product_id.setter
    def product_id(self, product_id):
        """Sets the product_id of this ReportsListByApi200ResponseValueInner.

        Product identifier path. /products/{productId}

        :param product_id: The product_id of this ReportsListByApi200ResponseValueInner.
        :type product_id: str
        """

        self._product_id = product_id

    @property
    def region(self):
        """Gets the region of this ReportsListByApi200ResponseValueInner.

        Country region to which this record data is related.

        :return: The region of this ReportsListByApi200ResponseValueInner.
        :rtype: str
        """
        return self._region

    @region.setter
    def region(self, region):
        """Sets the region of this ReportsListByApi200ResponseValueInner.

        Country region to which this record data is related.

        :param region: The region of this ReportsListByApi200ResponseValueInner.
        :type region: str
        """

        self._region = region

    @property
    def service_time_avg(self):
        """Gets the service_time_avg of this ReportsListByApi200ResponseValueInner.

        Average time it took to process request on backend.

        :return: The service_time_avg of this ReportsListByApi200ResponseValueInner.
        :rtype: float
        """
        return self._service_time_avg

    @service_time_avg.setter
    def service_time_avg(self, service_time_avg):
        """Sets the service_time_avg of this ReportsListByApi200ResponseValueInner.

        Average time it took to process request on backend.

        :param service_time_avg: The service_time_avg of this ReportsListByApi200ResponseValueInner.
        :type service_time_avg: float
        """

        self._service_time_avg = service_time_avg

    @property
    def service_time_max(self):
        """Gets the service_time_max of this ReportsListByApi200ResponseValueInner.

        Maximum time it took to process request on backend.

        :return: The service_time_max of this ReportsListByApi200ResponseValueInner.
        :rtype: float
        """
        return self._service_time_max

    @service_time_max.setter
    def service_time_max(self, service_time_max):
        """Sets the service_time_max of this ReportsListByApi200ResponseValueInner.

        Maximum time it took to process request on backend.

        :param service_time_max: The service_time_max of this ReportsListByApi200ResponseValueInner.
        :type service_time_max: float
        """

        self._service_time_max = service_time_max

    @property
    def service_time_min(self):
        """Gets the service_time_min of this ReportsListByApi200ResponseValueInner.

        Minimum time it took to process request on backend.

        :return: The service_time_min of this ReportsListByApi200ResponseValueInner.
        :rtype: float
        """
        return self._service_time_min

    @service_time_min.setter
    def service_time_min(self, service_time_min):
        """Sets the service_time_min of this ReportsListByApi200ResponseValueInner.

        Minimum time it took to process request on backend.

        :param service_time_min: The service_time_min of this ReportsListByApi200ResponseValueInner.
        :type service_time_min: float
        """

        self._service_time_min = service_time_min

    @property
    def subscription_id(self):
        """Gets the subscription_id of this ReportsListByApi200ResponseValueInner.

        Subscription identifier path. /subscriptions/{subscriptionId}

        :return: The subscription_id of this ReportsListByApi200ResponseValueInner.
        :rtype: str
        """
        return self._subscription_id

    @subscription_id.setter
    def subscription_id(self, subscription_id):
        """Sets the subscription_id of this ReportsListByApi200ResponseValueInner.

        Subscription identifier path. /subscriptions/{subscriptionId}

        :param subscription_id: The subscription_id of this ReportsListByApi200ResponseValueInner.
        :type subscription_id: str
        """

        self._subscription_id = subscription_id

    @property
    def timestamp(self):
        """Gets the timestamp of this ReportsListByApi200ResponseValueInner.

        Start of aggregation period. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard. 

        :return: The timestamp of this ReportsListByApi200ResponseValueInner.
        :rtype: datetime
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp):
        """Sets the timestamp of this ReportsListByApi200ResponseValueInner.

        Start of aggregation period. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard. 

        :param timestamp: The timestamp of this ReportsListByApi200ResponseValueInner.
        :type timestamp: datetime
        """

        self._timestamp = timestamp

    @property
    def user_id(self):
        """Gets the user_id of this ReportsListByApi200ResponseValueInner.

        User identifier path. /users/{userId}

        :return: The user_id of this ReportsListByApi200ResponseValueInner.
        :rtype: str
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this ReportsListByApi200ResponseValueInner.

        User identifier path. /users/{userId}

        :param user_id: The user_id of this ReportsListByApi200ResponseValueInner.
        :type user_id: str
        """

        self._user_id = user_id

    @property
    def zip(self):
        """Gets the zip of this ReportsListByApi200ResponseValueInner.

        Zip code to which this record data is related.

        :return: The zip of this ReportsListByApi200ResponseValueInner.
        :rtype: str
        """
        return self._zip

    @zip.setter
    def zip(self, zip):
        """Sets the zip of this ReportsListByApi200ResponseValueInner.

        Zip code to which this record data is related.

        :param zip: The zip of this ReportsListByApi200ResponseValueInner.
        :type zip: str
        """

        self._zip = zip
