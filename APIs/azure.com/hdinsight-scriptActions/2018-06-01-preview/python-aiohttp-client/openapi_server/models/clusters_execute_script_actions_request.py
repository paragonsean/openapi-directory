# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.clusters_execute_script_actions_request_script_actions_inner import ClustersExecuteScriptActionsRequestScriptActionsInner
from openapi_server import util


class ClustersExecuteScriptActionsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, persist_on_success: bool=None, script_actions: List[ClustersExecuteScriptActionsRequestScriptActionsInner]=None):
        """ClustersExecuteScriptActionsRequest - a model defined in OpenAPI

        :param persist_on_success: The persist_on_success of this ClustersExecuteScriptActionsRequest.
        :param script_actions: The script_actions of this ClustersExecuteScriptActionsRequest.
        """
        self.openapi_types = {
            'persist_on_success': bool,
            'script_actions': List[ClustersExecuteScriptActionsRequestScriptActionsInner]
        }

        self.attribute_map = {
            'persist_on_success': 'persistOnSuccess',
            'script_actions': 'scriptActions'
        }

        self._persist_on_success = persist_on_success
        self._script_actions = script_actions

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ClustersExecuteScriptActionsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Clusters_ExecuteScriptActions_request of this ClustersExecuteScriptActionsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def persist_on_success(self):
        """Gets the persist_on_success of this ClustersExecuteScriptActionsRequest.

        Gets or sets if the scripts needs to be persisted.

        :return: The persist_on_success of this ClustersExecuteScriptActionsRequest.
        :rtype: bool
        """
        return self._persist_on_success

    @persist_on_success.setter
    def persist_on_success(self, persist_on_success):
        """Sets the persist_on_success of this ClustersExecuteScriptActionsRequest.

        Gets or sets if the scripts needs to be persisted.

        :param persist_on_success: The persist_on_success of this ClustersExecuteScriptActionsRequest.
        :type persist_on_success: bool
        """
        if persist_on_success is None:
            raise ValueError("Invalid value for `persist_on_success`, must not be `None`")

        self._persist_on_success = persist_on_success

    @property
    def script_actions(self):
        """Gets the script_actions of this ClustersExecuteScriptActionsRequest.

        The list of run time script actions.

        :return: The script_actions of this ClustersExecuteScriptActionsRequest.
        :rtype: List[ClustersExecuteScriptActionsRequestScriptActionsInner]
        """
        return self._script_actions

    @script_actions.setter
    def script_actions(self, script_actions):
        """Sets the script_actions of this ClustersExecuteScriptActionsRequest.

        The list of run time script actions.

        :param script_actions: The script_actions of this ClustersExecuteScriptActionsRequest.
        :type script_actions: List[ClustersExecuteScriptActionsRequestScriptActionsInner]
        """

        self._script_actions = script_actions
