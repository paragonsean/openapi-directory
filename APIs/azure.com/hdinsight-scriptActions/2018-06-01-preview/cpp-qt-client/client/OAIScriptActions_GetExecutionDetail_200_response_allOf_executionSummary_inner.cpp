/**
 * HDInsightManagementClient
 * The HDInsight Management Client.
 *
 * The version of the OpenAPI document: 2018-06-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIScriptActions_GetExecutionDetail_200_response_allOf_executionSummary_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIScriptActions_GetExecutionDetail_200_response_allOf_executionSummary_inner::OAIScriptActions_GetExecutionDetail_200_response_allOf_executionSummary_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIScriptActions_GetExecutionDetail_200_response_allOf_executionSummary_inner::OAIScriptActions_GetExecutionDetail_200_response_allOf_executionSummary_inner() {
    this->initializeModel();
}

OAIScriptActions_GetExecutionDetail_200_response_allOf_executionSummary_inner::~OAIScriptActions_GetExecutionDetail_200_response_allOf_executionSummary_inner() {}

void OAIScriptActions_GetExecutionDetail_200_response_allOf_executionSummary_inner::initializeModel() {

    m_instance_count_isSet = false;
    m_instance_count_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAIScriptActions_GetExecutionDetail_200_response_allOf_executionSummary_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIScriptActions_GetExecutionDetail_200_response_allOf_executionSummary_inner::fromJsonObject(QJsonObject json) {

    m_instance_count_isValid = ::OpenAPI::fromJsonValue(m_instance_count, json[QString("instanceCount")]);
    m_instance_count_isSet = !json[QString("instanceCount")].isNull() && m_instance_count_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;
}

QString OAIScriptActions_GetExecutionDetail_200_response_allOf_executionSummary_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIScriptActions_GetExecutionDetail_200_response_allOf_executionSummary_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_instance_count_isSet) {
        obj.insert(QString("instanceCount"), ::OpenAPI::toJsonValue(m_instance_count));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    return obj;
}

qint32 OAIScriptActions_GetExecutionDetail_200_response_allOf_executionSummary_inner::getInstanceCount() const {
    return m_instance_count;
}
void OAIScriptActions_GetExecutionDetail_200_response_allOf_executionSummary_inner::setInstanceCount(const qint32 &instance_count) {
    m_instance_count = instance_count;
    m_instance_count_isSet = true;
}

bool OAIScriptActions_GetExecutionDetail_200_response_allOf_executionSummary_inner::is_instance_count_Set() const{
    return m_instance_count_isSet;
}

bool OAIScriptActions_GetExecutionDetail_200_response_allOf_executionSummary_inner::is_instance_count_Valid() const{
    return m_instance_count_isValid;
}

QString OAIScriptActions_GetExecutionDetail_200_response_allOf_executionSummary_inner::getStatus() const {
    return m_status;
}
void OAIScriptActions_GetExecutionDetail_200_response_allOf_executionSummary_inner::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIScriptActions_GetExecutionDetail_200_response_allOf_executionSummary_inner::is_status_Set() const{
    return m_status_isSet;
}

bool OAIScriptActions_GetExecutionDetail_200_response_allOf_executionSummary_inner::is_status_Valid() const{
    return m_status_isValid;
}

bool OAIScriptActions_GetExecutionDetail_200_response_allOf_executionSummary_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_instance_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIScriptActions_GetExecutionDetail_200_response_allOf_executionSummary_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
