/**
 * HDInsightManagementClient
 * The HDInsight Management Client.
 *
 * The version of the OpenAPI document: 2015-03-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIScriptActions_GetExecutionDetail_200_response.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIScriptActions_GetExecutionDetail_200_response::OAIScriptActions_GetExecutionDetail_200_response(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIScriptActions_GetExecutionDetail_200_response::OAIScriptActions_GetExecutionDetail_200_response() {
    this->initializeModel();
}

OAIScriptActions_GetExecutionDetail_200_response::~OAIScriptActions_GetExecutionDetail_200_response() {}

void OAIScriptActions_GetExecutionDetail_200_response::initializeModel() {

    m_application_name_isSet = false;
    m_application_name_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_parameters_isSet = false;
    m_parameters_isValid = false;

    m_roles_isSet = false;
    m_roles_isValid = false;

    m_uri_isSet = false;
    m_uri_isValid = false;

    m_debug_information_isSet = false;
    m_debug_information_isValid = false;

    m_end_time_isSet = false;
    m_end_time_isValid = false;

    m_execution_summary_isSet = false;
    m_execution_summary_isValid = false;

    m_operation_isSet = false;
    m_operation_isValid = false;

    m_script_execution_id_isSet = false;
    m_script_execution_id_isValid = false;

    m_start_time_isSet = false;
    m_start_time_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAIScriptActions_GetExecutionDetail_200_response::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIScriptActions_GetExecutionDetail_200_response::fromJsonObject(QJsonObject json) {

    m_application_name_isValid = ::OpenAPI::fromJsonValue(m_application_name, json[QString("applicationName")]);
    m_application_name_isSet = !json[QString("applicationName")].isNull() && m_application_name_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_parameters_isValid = ::OpenAPI::fromJsonValue(m_parameters, json[QString("parameters")]);
    m_parameters_isSet = !json[QString("parameters")].isNull() && m_parameters_isValid;

    m_roles_isValid = ::OpenAPI::fromJsonValue(m_roles, json[QString("roles")]);
    m_roles_isSet = !json[QString("roles")].isNull() && m_roles_isValid;

    m_uri_isValid = ::OpenAPI::fromJsonValue(m_uri, json[QString("uri")]);
    m_uri_isSet = !json[QString("uri")].isNull() && m_uri_isValid;

    m_debug_information_isValid = ::OpenAPI::fromJsonValue(m_debug_information, json[QString("debugInformation")]);
    m_debug_information_isSet = !json[QString("debugInformation")].isNull() && m_debug_information_isValid;

    m_end_time_isValid = ::OpenAPI::fromJsonValue(m_end_time, json[QString("endTime")]);
    m_end_time_isSet = !json[QString("endTime")].isNull() && m_end_time_isValid;

    m_execution_summary_isValid = ::OpenAPI::fromJsonValue(m_execution_summary, json[QString("executionSummary")]);
    m_execution_summary_isSet = !json[QString("executionSummary")].isNull() && m_execution_summary_isValid;

    m_operation_isValid = ::OpenAPI::fromJsonValue(m_operation, json[QString("operation")]);
    m_operation_isSet = !json[QString("operation")].isNull() && m_operation_isValid;

    m_script_execution_id_isValid = ::OpenAPI::fromJsonValue(m_script_execution_id, json[QString("scriptExecutionId")]);
    m_script_execution_id_isSet = !json[QString("scriptExecutionId")].isNull() && m_script_execution_id_isValid;

    m_start_time_isValid = ::OpenAPI::fromJsonValue(m_start_time, json[QString("startTime")]);
    m_start_time_isSet = !json[QString("startTime")].isNull() && m_start_time_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;
}

QString OAIScriptActions_GetExecutionDetail_200_response::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIScriptActions_GetExecutionDetail_200_response::asJsonObject() const {
    QJsonObject obj;
    if (m_application_name_isSet) {
        obj.insert(QString("applicationName"), ::OpenAPI::toJsonValue(m_application_name));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_parameters_isSet) {
        obj.insert(QString("parameters"), ::OpenAPI::toJsonValue(m_parameters));
    }
    if (m_roles.size() > 0) {
        obj.insert(QString("roles"), ::OpenAPI::toJsonValue(m_roles));
    }
    if (m_uri_isSet) {
        obj.insert(QString("uri"), ::OpenAPI::toJsonValue(m_uri));
    }
    if (m_debug_information_isSet) {
        obj.insert(QString("debugInformation"), ::OpenAPI::toJsonValue(m_debug_information));
    }
    if (m_end_time_isSet) {
        obj.insert(QString("endTime"), ::OpenAPI::toJsonValue(m_end_time));
    }
    if (m_execution_summary.size() > 0) {
        obj.insert(QString("executionSummary"), ::OpenAPI::toJsonValue(m_execution_summary));
    }
    if (m_operation_isSet) {
        obj.insert(QString("operation"), ::OpenAPI::toJsonValue(m_operation));
    }
    if (m_script_execution_id_isSet) {
        obj.insert(QString("scriptExecutionId"), ::OpenAPI::toJsonValue(m_script_execution_id));
    }
    if (m_start_time_isSet) {
        obj.insert(QString("startTime"), ::OpenAPI::toJsonValue(m_start_time));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    return obj;
}

QString OAIScriptActions_GetExecutionDetail_200_response::getApplicationName() const {
    return m_application_name;
}
void OAIScriptActions_GetExecutionDetail_200_response::setApplicationName(const QString &application_name) {
    m_application_name = application_name;
    m_application_name_isSet = true;
}

bool OAIScriptActions_GetExecutionDetail_200_response::is_application_name_Set() const{
    return m_application_name_isSet;
}

bool OAIScriptActions_GetExecutionDetail_200_response::is_application_name_Valid() const{
    return m_application_name_isValid;
}

QString OAIScriptActions_GetExecutionDetail_200_response::getName() const {
    return m_name;
}
void OAIScriptActions_GetExecutionDetail_200_response::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIScriptActions_GetExecutionDetail_200_response::is_name_Set() const{
    return m_name_isSet;
}

bool OAIScriptActions_GetExecutionDetail_200_response::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIScriptActions_GetExecutionDetail_200_response::getParameters() const {
    return m_parameters;
}
void OAIScriptActions_GetExecutionDetail_200_response::setParameters(const QString &parameters) {
    m_parameters = parameters;
    m_parameters_isSet = true;
}

bool OAIScriptActions_GetExecutionDetail_200_response::is_parameters_Set() const{
    return m_parameters_isSet;
}

bool OAIScriptActions_GetExecutionDetail_200_response::is_parameters_Valid() const{
    return m_parameters_isValid;
}

QList<QString> OAIScriptActions_GetExecutionDetail_200_response::getRoles() const {
    return m_roles;
}
void OAIScriptActions_GetExecutionDetail_200_response::setRoles(const QList<QString> &roles) {
    m_roles = roles;
    m_roles_isSet = true;
}

bool OAIScriptActions_GetExecutionDetail_200_response::is_roles_Set() const{
    return m_roles_isSet;
}

bool OAIScriptActions_GetExecutionDetail_200_response::is_roles_Valid() const{
    return m_roles_isValid;
}

QString OAIScriptActions_GetExecutionDetail_200_response::getUri() const {
    return m_uri;
}
void OAIScriptActions_GetExecutionDetail_200_response::setUri(const QString &uri) {
    m_uri = uri;
    m_uri_isSet = true;
}

bool OAIScriptActions_GetExecutionDetail_200_response::is_uri_Set() const{
    return m_uri_isSet;
}

bool OAIScriptActions_GetExecutionDetail_200_response::is_uri_Valid() const{
    return m_uri_isValid;
}

QString OAIScriptActions_GetExecutionDetail_200_response::getDebugInformation() const {
    return m_debug_information;
}
void OAIScriptActions_GetExecutionDetail_200_response::setDebugInformation(const QString &debug_information) {
    m_debug_information = debug_information;
    m_debug_information_isSet = true;
}

bool OAIScriptActions_GetExecutionDetail_200_response::is_debug_information_Set() const{
    return m_debug_information_isSet;
}

bool OAIScriptActions_GetExecutionDetail_200_response::is_debug_information_Valid() const{
    return m_debug_information_isValid;
}

QString OAIScriptActions_GetExecutionDetail_200_response::getEndTime() const {
    return m_end_time;
}
void OAIScriptActions_GetExecutionDetail_200_response::setEndTime(const QString &end_time) {
    m_end_time = end_time;
    m_end_time_isSet = true;
}

bool OAIScriptActions_GetExecutionDetail_200_response::is_end_time_Set() const{
    return m_end_time_isSet;
}

bool OAIScriptActions_GetExecutionDetail_200_response::is_end_time_Valid() const{
    return m_end_time_isValid;
}

QList<OAIScriptActions_GetExecutionDetail_200_response_allOf_executionSummary_inner> OAIScriptActions_GetExecutionDetail_200_response::getExecutionSummary() const {
    return m_execution_summary;
}
void OAIScriptActions_GetExecutionDetail_200_response::setExecutionSummary(const QList<OAIScriptActions_GetExecutionDetail_200_response_allOf_executionSummary_inner> &execution_summary) {
    m_execution_summary = execution_summary;
    m_execution_summary_isSet = true;
}

bool OAIScriptActions_GetExecutionDetail_200_response::is_execution_summary_Set() const{
    return m_execution_summary_isSet;
}

bool OAIScriptActions_GetExecutionDetail_200_response::is_execution_summary_Valid() const{
    return m_execution_summary_isValid;
}

QString OAIScriptActions_GetExecutionDetail_200_response::getOperation() const {
    return m_operation;
}
void OAIScriptActions_GetExecutionDetail_200_response::setOperation(const QString &operation) {
    m_operation = operation;
    m_operation_isSet = true;
}

bool OAIScriptActions_GetExecutionDetail_200_response::is_operation_Set() const{
    return m_operation_isSet;
}

bool OAIScriptActions_GetExecutionDetail_200_response::is_operation_Valid() const{
    return m_operation_isValid;
}

qint64 OAIScriptActions_GetExecutionDetail_200_response::getScriptExecutionId() const {
    return m_script_execution_id;
}
void OAIScriptActions_GetExecutionDetail_200_response::setScriptExecutionId(const qint64 &script_execution_id) {
    m_script_execution_id = script_execution_id;
    m_script_execution_id_isSet = true;
}

bool OAIScriptActions_GetExecutionDetail_200_response::is_script_execution_id_Set() const{
    return m_script_execution_id_isSet;
}

bool OAIScriptActions_GetExecutionDetail_200_response::is_script_execution_id_Valid() const{
    return m_script_execution_id_isValid;
}

QString OAIScriptActions_GetExecutionDetail_200_response::getStartTime() const {
    return m_start_time;
}
void OAIScriptActions_GetExecutionDetail_200_response::setStartTime(const QString &start_time) {
    m_start_time = start_time;
    m_start_time_isSet = true;
}

bool OAIScriptActions_GetExecutionDetail_200_response::is_start_time_Set() const{
    return m_start_time_isSet;
}

bool OAIScriptActions_GetExecutionDetail_200_response::is_start_time_Valid() const{
    return m_start_time_isValid;
}

QString OAIScriptActions_GetExecutionDetail_200_response::getStatus() const {
    return m_status;
}
void OAIScriptActions_GetExecutionDetail_200_response::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIScriptActions_GetExecutionDetail_200_response::is_status_Set() const{
    return m_status_isSet;
}

bool OAIScriptActions_GetExecutionDetail_200_response::is_status_Valid() const{
    return m_status_isValid;
}

bool OAIScriptActions_GetExecutionDetail_200_response::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_application_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_parameters_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_roles.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_debug_information_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_end_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_execution_summary.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_operation_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_script_execution_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIScriptActions_GetExecutionDetail_200_response::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_name_isValid && m_roles_isValid && m_uri_isValid && true;
}

} // namespace OpenAPI
