/*
 * Azure Dedicated HSM Resource Provider
 * The Azure management API provides a RESTful set of web services that interact with Azure Dedicated HSM RP.
 *
 * The version of the OpenAPI document: 2018-10-31-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.DedicatedHsm;
import org.openapitools.client.model.DedicatedHsmError;
import org.openapitools.client.model.DedicatedHsmListResult;
import org.openapitools.client.model.DedicatedHsmPatchParameters;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class DedicatedHsmsApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public DedicatedHsmsApi() {
        this(Configuration.getDefaultApiClient());
    }

    public DedicatedHsmsApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for dedicatedHsmCreateOrUpdate
     * @param resourceGroupName The name of the Resource Group to which the resource belongs. (required)
     * @param name Name of the dedicated Hsm (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param parameters Parameters to create or update the dedicated hsm (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Created dedicated HSM </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Created dedicated HSM </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> The error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dedicatedHsmCreateOrUpdateCall(String resourceGroupName, String name, String apiVersion, String subscriptionId, DedicatedHsm parameters, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = parameters;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HardwareSecurityModules/dedicatedHSMs/{name}"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "name" + "}", localVarApiClient.escapeString(name.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dedicatedHsmCreateOrUpdateValidateBeforeCall(String resourceGroupName, String name, String apiVersion, String subscriptionId, DedicatedHsm parameters, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling dedicatedHsmCreateOrUpdate(Async)");
        }

        // verify the required parameter 'name' is set
        if (name == null) {
            throw new ApiException("Missing the required parameter 'name' when calling dedicatedHsmCreateOrUpdate(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling dedicatedHsmCreateOrUpdate(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling dedicatedHsmCreateOrUpdate(Async)");
        }

        // verify the required parameter 'parameters' is set
        if (parameters == null) {
            throw new ApiException("Missing the required parameter 'parameters' when calling dedicatedHsmCreateOrUpdate(Async)");
        }

        return dedicatedHsmCreateOrUpdateCall(resourceGroupName, name, apiVersion, subscriptionId, parameters, _callback);

    }

    /**
     * 
     * Create or Update a dedicated HSM in the specified subscription.
     * @param resourceGroupName The name of the Resource Group to which the resource belongs. (required)
     * @param name Name of the dedicated Hsm (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param parameters Parameters to create or update the dedicated hsm (required)
     * @return DedicatedHsm
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Created dedicated HSM </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Created dedicated HSM </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> The error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public DedicatedHsm dedicatedHsmCreateOrUpdate(String resourceGroupName, String name, String apiVersion, String subscriptionId, DedicatedHsm parameters) throws ApiException {
        ApiResponse<DedicatedHsm> localVarResp = dedicatedHsmCreateOrUpdateWithHttpInfo(resourceGroupName, name, apiVersion, subscriptionId, parameters);
        return localVarResp.getData();
    }

    /**
     * 
     * Create or Update a dedicated HSM in the specified subscription.
     * @param resourceGroupName The name of the Resource Group to which the resource belongs. (required)
     * @param name Name of the dedicated Hsm (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param parameters Parameters to create or update the dedicated hsm (required)
     * @return ApiResponse&lt;DedicatedHsm&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Created dedicated HSM </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Created dedicated HSM </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> The error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DedicatedHsm> dedicatedHsmCreateOrUpdateWithHttpInfo(String resourceGroupName, String name, String apiVersion, String subscriptionId, DedicatedHsm parameters) throws ApiException {
        okhttp3.Call localVarCall = dedicatedHsmCreateOrUpdateValidateBeforeCall(resourceGroupName, name, apiVersion, subscriptionId, parameters, null);
        Type localVarReturnType = new TypeToken<DedicatedHsm>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Create or Update a dedicated HSM in the specified subscription.
     * @param resourceGroupName The name of the Resource Group to which the resource belongs. (required)
     * @param name Name of the dedicated Hsm (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param parameters Parameters to create or update the dedicated hsm (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Created dedicated HSM </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Created dedicated HSM </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> The error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dedicatedHsmCreateOrUpdateAsync(String resourceGroupName, String name, String apiVersion, String subscriptionId, DedicatedHsm parameters, final ApiCallback<DedicatedHsm> _callback) throws ApiException {

        okhttp3.Call localVarCall = dedicatedHsmCreateOrUpdateValidateBeforeCall(resourceGroupName, name, apiVersion, subscriptionId, parameters, _callback);
        Type localVarReturnType = new TypeToken<DedicatedHsm>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dedicatedHsmDelete
     * @param resourceGroupName The name of the Resource Group to which the dedicated HSM belongs. (required)
     * @param name The name of the dedicated HSM to delete (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK Response. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> No Content </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> The error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dedicatedHsmDeleteCall(String resourceGroupName, String name, String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HardwareSecurityModules/dedicatedHSMs/{name}"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "name" + "}", localVarApiClient.escapeString(name.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dedicatedHsmDeleteValidateBeforeCall(String resourceGroupName, String name, String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling dedicatedHsmDelete(Async)");
        }

        // verify the required parameter 'name' is set
        if (name == null) {
            throw new ApiException("Missing the required parameter 'name' when calling dedicatedHsmDelete(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling dedicatedHsmDelete(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling dedicatedHsmDelete(Async)");
        }

        return dedicatedHsmDeleteCall(resourceGroupName, name, apiVersion, subscriptionId, _callback);

    }

    /**
     * 
     * Deletes the specified Azure Dedicated HSM.
     * @param resourceGroupName The name of the Resource Group to which the dedicated HSM belongs. (required)
     * @param name The name of the dedicated HSM to delete (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK Response. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> No Content </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> The error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public void dedicatedHsmDelete(String resourceGroupName, String name, String apiVersion, String subscriptionId) throws ApiException {
        dedicatedHsmDeleteWithHttpInfo(resourceGroupName, name, apiVersion, subscriptionId);
    }

    /**
     * 
     * Deletes the specified Azure Dedicated HSM.
     * @param resourceGroupName The name of the Resource Group to which the dedicated HSM belongs. (required)
     * @param name The name of the dedicated HSM to delete (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK Response. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> No Content </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> The error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> dedicatedHsmDeleteWithHttpInfo(String resourceGroupName, String name, String apiVersion, String subscriptionId) throws ApiException {
        okhttp3.Call localVarCall = dedicatedHsmDeleteValidateBeforeCall(resourceGroupName, name, apiVersion, subscriptionId, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     *  (asynchronously)
     * Deletes the specified Azure Dedicated HSM.
     * @param resourceGroupName The name of the Resource Group to which the dedicated HSM belongs. (required)
     * @param name The name of the dedicated HSM to delete (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK Response. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> No Content </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> The error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dedicatedHsmDeleteAsync(String resourceGroupName, String name, String apiVersion, String subscriptionId, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = dedicatedHsmDeleteValidateBeforeCall(resourceGroupName, name, apiVersion, subscriptionId, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for dedicatedHsmGet
     * @param resourceGroupName The name of the Resource Group to which the dedicated hsm belongs. (required)
     * @param name The name of the dedicated HSM. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Retrieved dedicated HSM </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> The error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dedicatedHsmGetCall(String resourceGroupName, String name, String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HardwareSecurityModules/dedicatedHSMs/{name}"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "name" + "}", localVarApiClient.escapeString(name.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dedicatedHsmGetValidateBeforeCall(String resourceGroupName, String name, String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling dedicatedHsmGet(Async)");
        }

        // verify the required parameter 'name' is set
        if (name == null) {
            throw new ApiException("Missing the required parameter 'name' when calling dedicatedHsmGet(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling dedicatedHsmGet(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling dedicatedHsmGet(Async)");
        }

        return dedicatedHsmGetCall(resourceGroupName, name, apiVersion, subscriptionId, _callback);

    }

    /**
     * 
     * Gets the specified Azure dedicated HSM.
     * @param resourceGroupName The name of the Resource Group to which the dedicated hsm belongs. (required)
     * @param name The name of the dedicated HSM. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @return DedicatedHsm
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Retrieved dedicated HSM </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> The error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public DedicatedHsm dedicatedHsmGet(String resourceGroupName, String name, String apiVersion, String subscriptionId) throws ApiException {
        ApiResponse<DedicatedHsm> localVarResp = dedicatedHsmGetWithHttpInfo(resourceGroupName, name, apiVersion, subscriptionId);
        return localVarResp.getData();
    }

    /**
     * 
     * Gets the specified Azure dedicated HSM.
     * @param resourceGroupName The name of the Resource Group to which the dedicated hsm belongs. (required)
     * @param name The name of the dedicated HSM. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @return ApiResponse&lt;DedicatedHsm&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Retrieved dedicated HSM </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> The error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DedicatedHsm> dedicatedHsmGetWithHttpInfo(String resourceGroupName, String name, String apiVersion, String subscriptionId) throws ApiException {
        okhttp3.Call localVarCall = dedicatedHsmGetValidateBeforeCall(resourceGroupName, name, apiVersion, subscriptionId, null);
        Type localVarReturnType = new TypeToken<DedicatedHsm>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Gets the specified Azure dedicated HSM.
     * @param resourceGroupName The name of the Resource Group to which the dedicated hsm belongs. (required)
     * @param name The name of the dedicated HSM. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Retrieved dedicated HSM </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> The error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dedicatedHsmGetAsync(String resourceGroupName, String name, String apiVersion, String subscriptionId, final ApiCallback<DedicatedHsm> _callback) throws ApiException {

        okhttp3.Call localVarCall = dedicatedHsmGetValidateBeforeCall(resourceGroupName, name, apiVersion, subscriptionId, _callback);
        Type localVarReturnType = new TypeToken<DedicatedHsm>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dedicatedHsmListByResourceGroup
     * @param resourceGroupName The name of the Resource Group to which the dedicated HSM belongs. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param $top Maximum number of results to return. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Get information about all dedicated HSMs in the specified resource group. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> The error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dedicatedHsmListByResourceGroupCall(String resourceGroupName, String apiVersion, String subscriptionId, Integer $top, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HardwareSecurityModules/dedicatedHSMs"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if ($top != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$top", $top));
        }

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dedicatedHsmListByResourceGroupValidateBeforeCall(String resourceGroupName, String apiVersion, String subscriptionId, Integer $top, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling dedicatedHsmListByResourceGroup(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling dedicatedHsmListByResourceGroup(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling dedicatedHsmListByResourceGroup(Async)");
        }

        return dedicatedHsmListByResourceGroupCall(resourceGroupName, apiVersion, subscriptionId, $top, _callback);

    }

    /**
     * 
     * The List operation gets information about the dedicated hsms associated with the subscription and within the specified resource group.
     * @param resourceGroupName The name of the Resource Group to which the dedicated HSM belongs. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param $top Maximum number of results to return. (optional)
     * @return DedicatedHsmListResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Get information about all dedicated HSMs in the specified resource group. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> The error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public DedicatedHsmListResult dedicatedHsmListByResourceGroup(String resourceGroupName, String apiVersion, String subscriptionId, Integer $top) throws ApiException {
        ApiResponse<DedicatedHsmListResult> localVarResp = dedicatedHsmListByResourceGroupWithHttpInfo(resourceGroupName, apiVersion, subscriptionId, $top);
        return localVarResp.getData();
    }

    /**
     * 
     * The List operation gets information about the dedicated hsms associated with the subscription and within the specified resource group.
     * @param resourceGroupName The name of the Resource Group to which the dedicated HSM belongs. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param $top Maximum number of results to return. (optional)
     * @return ApiResponse&lt;DedicatedHsmListResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Get information about all dedicated HSMs in the specified resource group. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> The error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DedicatedHsmListResult> dedicatedHsmListByResourceGroupWithHttpInfo(String resourceGroupName, String apiVersion, String subscriptionId, Integer $top) throws ApiException {
        okhttp3.Call localVarCall = dedicatedHsmListByResourceGroupValidateBeforeCall(resourceGroupName, apiVersion, subscriptionId, $top, null);
        Type localVarReturnType = new TypeToken<DedicatedHsmListResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * The List operation gets information about the dedicated hsms associated with the subscription and within the specified resource group.
     * @param resourceGroupName The name of the Resource Group to which the dedicated HSM belongs. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param $top Maximum number of results to return. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Get information about all dedicated HSMs in the specified resource group. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> The error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dedicatedHsmListByResourceGroupAsync(String resourceGroupName, String apiVersion, String subscriptionId, Integer $top, final ApiCallback<DedicatedHsmListResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = dedicatedHsmListByResourceGroupValidateBeforeCall(resourceGroupName, apiVersion, subscriptionId, $top, _callback);
        Type localVarReturnType = new TypeToken<DedicatedHsmListResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dedicatedHsmListBySubscription
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param $top Maximum number of results to return. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Get information about all dedicated HSMs in the specified subscription. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> The error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dedicatedHsmListBySubscriptionCall(String apiVersion, String subscriptionId, Integer $top, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/providers/Microsoft.HardwareSecurityModules/dedicatedHSMs"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if ($top != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$top", $top));
        }

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dedicatedHsmListBySubscriptionValidateBeforeCall(String apiVersion, String subscriptionId, Integer $top, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling dedicatedHsmListBySubscription(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling dedicatedHsmListBySubscription(Async)");
        }

        return dedicatedHsmListBySubscriptionCall(apiVersion, subscriptionId, $top, _callback);

    }

    /**
     * 
     * The List operation gets information about the dedicated HSMs associated with the subscription.
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param $top Maximum number of results to return. (optional)
     * @return DedicatedHsmListResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Get information about all dedicated HSMs in the specified subscription. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> The error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public DedicatedHsmListResult dedicatedHsmListBySubscription(String apiVersion, String subscriptionId, Integer $top) throws ApiException {
        ApiResponse<DedicatedHsmListResult> localVarResp = dedicatedHsmListBySubscriptionWithHttpInfo(apiVersion, subscriptionId, $top);
        return localVarResp.getData();
    }

    /**
     * 
     * The List operation gets information about the dedicated HSMs associated with the subscription.
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param $top Maximum number of results to return. (optional)
     * @return ApiResponse&lt;DedicatedHsmListResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Get information about all dedicated HSMs in the specified subscription. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> The error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DedicatedHsmListResult> dedicatedHsmListBySubscriptionWithHttpInfo(String apiVersion, String subscriptionId, Integer $top) throws ApiException {
        okhttp3.Call localVarCall = dedicatedHsmListBySubscriptionValidateBeforeCall(apiVersion, subscriptionId, $top, null);
        Type localVarReturnType = new TypeToken<DedicatedHsmListResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * The List operation gets information about the dedicated HSMs associated with the subscription.
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param $top Maximum number of results to return. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Get information about all dedicated HSMs in the specified subscription. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> The error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dedicatedHsmListBySubscriptionAsync(String apiVersion, String subscriptionId, Integer $top, final ApiCallback<DedicatedHsmListResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = dedicatedHsmListBySubscriptionValidateBeforeCall(apiVersion, subscriptionId, $top, _callback);
        Type localVarReturnType = new TypeToken<DedicatedHsmListResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dedicatedHsmUpdate
     * @param resourceGroupName The name of the Resource Group to which the server belongs. (required)
     * @param name Name of the dedicated HSM (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param parameters Parameters to patch the dedicated HSM (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Patched dedicated HSM </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> The error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dedicatedHsmUpdateCall(String resourceGroupName, String name, String apiVersion, String subscriptionId, DedicatedHsmPatchParameters parameters, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = parameters;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HardwareSecurityModules/dedicatedHSMs/{name}"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "name" + "}", localVarApiClient.escapeString(name.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PATCH", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dedicatedHsmUpdateValidateBeforeCall(String resourceGroupName, String name, String apiVersion, String subscriptionId, DedicatedHsmPatchParameters parameters, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling dedicatedHsmUpdate(Async)");
        }

        // verify the required parameter 'name' is set
        if (name == null) {
            throw new ApiException("Missing the required parameter 'name' when calling dedicatedHsmUpdate(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling dedicatedHsmUpdate(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling dedicatedHsmUpdate(Async)");
        }

        // verify the required parameter 'parameters' is set
        if (parameters == null) {
            throw new ApiException("Missing the required parameter 'parameters' when calling dedicatedHsmUpdate(Async)");
        }

        return dedicatedHsmUpdateCall(resourceGroupName, name, apiVersion, subscriptionId, parameters, _callback);

    }

    /**
     * 
     * Update a dedicated HSM in the specified subscription.
     * @param resourceGroupName The name of the Resource Group to which the server belongs. (required)
     * @param name Name of the dedicated HSM (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param parameters Parameters to patch the dedicated HSM (required)
     * @return DedicatedHsm
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Patched dedicated HSM </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> The error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public DedicatedHsm dedicatedHsmUpdate(String resourceGroupName, String name, String apiVersion, String subscriptionId, DedicatedHsmPatchParameters parameters) throws ApiException {
        ApiResponse<DedicatedHsm> localVarResp = dedicatedHsmUpdateWithHttpInfo(resourceGroupName, name, apiVersion, subscriptionId, parameters);
        return localVarResp.getData();
    }

    /**
     * 
     * Update a dedicated HSM in the specified subscription.
     * @param resourceGroupName The name of the Resource Group to which the server belongs. (required)
     * @param name Name of the dedicated HSM (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param parameters Parameters to patch the dedicated HSM (required)
     * @return ApiResponse&lt;DedicatedHsm&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Patched dedicated HSM </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> The error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DedicatedHsm> dedicatedHsmUpdateWithHttpInfo(String resourceGroupName, String name, String apiVersion, String subscriptionId, DedicatedHsmPatchParameters parameters) throws ApiException {
        okhttp3.Call localVarCall = dedicatedHsmUpdateValidateBeforeCall(resourceGroupName, name, apiVersion, subscriptionId, parameters, null);
        Type localVarReturnType = new TypeToken<DedicatedHsm>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Update a dedicated HSM in the specified subscription.
     * @param resourceGroupName The name of the Resource Group to which the server belongs. (required)
     * @param name Name of the dedicated HSM (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param parameters Parameters to patch the dedicated HSM (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Patched dedicated HSM </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> The error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dedicatedHsmUpdateAsync(String resourceGroupName, String name, String apiVersion, String subscriptionId, DedicatedHsmPatchParameters parameters, final ApiCallback<DedicatedHsm> _callback) throws ApiException {

        okhttp3.Call localVarCall = dedicatedHsmUpdateValidateBeforeCall(resourceGroupName, name, apiVersion, subscriptionId, parameters, _callback);
        Type localVarReturnType = new TypeToken<DedicatedHsm>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
