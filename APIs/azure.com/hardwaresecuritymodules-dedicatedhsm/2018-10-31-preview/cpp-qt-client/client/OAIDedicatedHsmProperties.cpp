/**
 * Azure Dedicated HSM Resource Provider
 * The Azure management API provides a RESTful set of web services that interact with Azure Dedicated HSM RP.
 *
 * The version of the OpenAPI document: 2018-10-31-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDedicatedHsmProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDedicatedHsmProperties::OAIDedicatedHsmProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDedicatedHsmProperties::OAIDedicatedHsmProperties() {
    this->initializeModel();
}

OAIDedicatedHsmProperties::~OAIDedicatedHsmProperties() {}

void OAIDedicatedHsmProperties::initializeModel() {

    m_network_profile_isSet = false;
    m_network_profile_isValid = false;

    m_provisioning_state_isSet = false;
    m_provisioning_state_isValid = false;

    m_stamp_id_isSet = false;
    m_stamp_id_isValid = false;

    m_status_message_isSet = false;
    m_status_message_isValid = false;
}

void OAIDedicatedHsmProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDedicatedHsmProperties::fromJsonObject(QJsonObject json) {

    m_network_profile_isValid = ::OpenAPI::fromJsonValue(m_network_profile, json[QString("networkProfile")]);
    m_network_profile_isSet = !json[QString("networkProfile")].isNull() && m_network_profile_isValid;

    m_provisioning_state_isValid = ::OpenAPI::fromJsonValue(m_provisioning_state, json[QString("provisioningState")]);
    m_provisioning_state_isSet = !json[QString("provisioningState")].isNull() && m_provisioning_state_isValid;

    m_stamp_id_isValid = ::OpenAPI::fromJsonValue(m_stamp_id, json[QString("stampId")]);
    m_stamp_id_isSet = !json[QString("stampId")].isNull() && m_stamp_id_isValid;

    m_status_message_isValid = ::OpenAPI::fromJsonValue(m_status_message, json[QString("statusMessage")]);
    m_status_message_isSet = !json[QString("statusMessage")].isNull() && m_status_message_isValid;
}

QString OAIDedicatedHsmProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDedicatedHsmProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_network_profile.isSet()) {
        obj.insert(QString("networkProfile"), ::OpenAPI::toJsonValue(m_network_profile));
    }
    if (m_provisioning_state_isSet) {
        obj.insert(QString("provisioningState"), ::OpenAPI::toJsonValue(m_provisioning_state));
    }
    if (m_stamp_id_isSet) {
        obj.insert(QString("stampId"), ::OpenAPI::toJsonValue(m_stamp_id));
    }
    if (m_status_message_isSet) {
        obj.insert(QString("statusMessage"), ::OpenAPI::toJsonValue(m_status_message));
    }
    return obj;
}

OAINetworkProfile OAIDedicatedHsmProperties::getNetworkProfile() const {
    return m_network_profile;
}
void OAIDedicatedHsmProperties::setNetworkProfile(const OAINetworkProfile &network_profile) {
    m_network_profile = network_profile;
    m_network_profile_isSet = true;
}

bool OAIDedicatedHsmProperties::is_network_profile_Set() const{
    return m_network_profile_isSet;
}

bool OAIDedicatedHsmProperties::is_network_profile_Valid() const{
    return m_network_profile_isValid;
}

QString OAIDedicatedHsmProperties::getProvisioningState() const {
    return m_provisioning_state;
}
void OAIDedicatedHsmProperties::setProvisioningState(const QString &provisioning_state) {
    m_provisioning_state = provisioning_state;
    m_provisioning_state_isSet = true;
}

bool OAIDedicatedHsmProperties::is_provisioning_state_Set() const{
    return m_provisioning_state_isSet;
}

bool OAIDedicatedHsmProperties::is_provisioning_state_Valid() const{
    return m_provisioning_state_isValid;
}

QString OAIDedicatedHsmProperties::getStampId() const {
    return m_stamp_id;
}
void OAIDedicatedHsmProperties::setStampId(const QString &stamp_id) {
    m_stamp_id = stamp_id;
    m_stamp_id_isSet = true;
}

bool OAIDedicatedHsmProperties::is_stamp_id_Set() const{
    return m_stamp_id_isSet;
}

bool OAIDedicatedHsmProperties::is_stamp_id_Valid() const{
    return m_stamp_id_isValid;
}

QString OAIDedicatedHsmProperties::getStatusMessage() const {
    return m_status_message;
}
void OAIDedicatedHsmProperties::setStatusMessage(const QString &status_message) {
    m_status_message = status_message;
    m_status_message_isSet = true;
}

bool OAIDedicatedHsmProperties::is_status_message_Set() const{
    return m_status_message_isSet;
}

bool OAIDedicatedHsmProperties::is_status_message_Valid() const{
    return m_status_message_isValid;
}

bool OAIDedicatedHsmProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_network_profile.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_provisioning_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_stamp_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_message_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDedicatedHsmProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
