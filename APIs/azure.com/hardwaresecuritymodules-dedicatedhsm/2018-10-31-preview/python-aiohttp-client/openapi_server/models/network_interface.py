# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class NetworkInterface(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, private_ip_address: str=None):
        """NetworkInterface - a model defined in OpenAPI

        :param id: The id of this NetworkInterface.
        :param private_ip_address: The private_ip_address of this NetworkInterface.
        """
        self.openapi_types = {
            'id': str,
            'private_ip_address': str
        }

        self.attribute_map = {
            'id': 'id',
            'private_ip_address': 'privateIpAddress'
        }

        self._id = id
        self._private_ip_address = private_ip_address

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NetworkInterface':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NetworkInterface of this NetworkInterface.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this NetworkInterface.

        The ARM resource id in the form of /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/...

        :return: The id of this NetworkInterface.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this NetworkInterface.

        The ARM resource id in the form of /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/...

        :param id: The id of this NetworkInterface.
        :type id: str
        """

        self._id = id

    @property
    def private_ip_address(self):
        """Gets the private_ip_address of this NetworkInterface.

        Private Ip address of the interface

        :return: The private_ip_address of this NetworkInterface.
        :rtype: str
        """
        return self._private_ip_address

    @private_ip_address.setter
    def private_ip_address(self, private_ip_address):
        """Sets the private_ip_address of this NetworkInterface.

        Private Ip address of the interface

        :param private_ip_address: The private_ip_address of this NetworkInterface.
        :type private_ip_address: str
        """

        self._private_ip_address = private_ip_address
