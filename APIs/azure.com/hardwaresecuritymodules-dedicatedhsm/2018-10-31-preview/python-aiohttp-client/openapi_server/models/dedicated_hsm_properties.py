# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.network_profile import NetworkProfile
from openapi_server import util


class DedicatedHsmProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, network_profile: NetworkProfile=None, provisioning_state: str=None, stamp_id: str=None, status_message: str=None):
        """DedicatedHsmProperties - a model defined in OpenAPI

        :param network_profile: The network_profile of this DedicatedHsmProperties.
        :param provisioning_state: The provisioning_state of this DedicatedHsmProperties.
        :param stamp_id: The stamp_id of this DedicatedHsmProperties.
        :param status_message: The status_message of this DedicatedHsmProperties.
        """
        self.openapi_types = {
            'network_profile': NetworkProfile,
            'provisioning_state': str,
            'stamp_id': str,
            'status_message': str
        }

        self.attribute_map = {
            'network_profile': 'networkProfile',
            'provisioning_state': 'provisioningState',
            'stamp_id': 'stampId',
            'status_message': 'statusMessage'
        }

        self._network_profile = network_profile
        self._provisioning_state = provisioning_state
        self._stamp_id = stamp_id
        self._status_message = status_message

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DedicatedHsmProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DedicatedHsmProperties of this DedicatedHsmProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def network_profile(self):
        """Gets the network_profile of this DedicatedHsmProperties.


        :return: The network_profile of this DedicatedHsmProperties.
        :rtype: NetworkProfile
        """
        return self._network_profile

    @network_profile.setter
    def network_profile(self, network_profile):
        """Sets the network_profile of this DedicatedHsmProperties.


        :param network_profile: The network_profile of this DedicatedHsmProperties.
        :type network_profile: NetworkProfile
        """

        self._network_profile = network_profile

    @property
    def provisioning_state(self):
        """Gets the provisioning_state of this DedicatedHsmProperties.

        Provisioning state.

        :return: The provisioning_state of this DedicatedHsmProperties.
        :rtype: str
        """
        return self._provisioning_state

    @provisioning_state.setter
    def provisioning_state(self, provisioning_state):
        """Sets the provisioning_state of this DedicatedHsmProperties.

        Provisioning state.

        :param provisioning_state: The provisioning_state of this DedicatedHsmProperties.
        :type provisioning_state: str
        """
        allowed_values = ["Succeeded", "Provisioning", "Allocating", "Connecting", "Failed", "CheckingQuota", "Deleting"]  # noqa: E501
        if provisioning_state not in allowed_values:
            raise ValueError(
                "Invalid value for `provisioning_state` ({0}), must be one of {1}"
                .format(provisioning_state, allowed_values)
            )

        self._provisioning_state = provisioning_state

    @property
    def stamp_id(self):
        """Gets the stamp_id of this DedicatedHsmProperties.

        This field will be used when RP does not support Availability zones.

        :return: The stamp_id of this DedicatedHsmProperties.
        :rtype: str
        """
        return self._stamp_id

    @stamp_id.setter
    def stamp_id(self, stamp_id):
        """Sets the stamp_id of this DedicatedHsmProperties.

        This field will be used when RP does not support Availability zones.

        :param stamp_id: The stamp_id of this DedicatedHsmProperties.
        :type stamp_id: str
        """

        self._stamp_id = stamp_id

    @property
    def status_message(self):
        """Gets the status_message of this DedicatedHsmProperties.

        Resource Status Message.

        :return: The status_message of this DedicatedHsmProperties.
        :rtype: str
        """
        return self._status_message

    @status_message.setter
    def status_message(self, status_message):
        """Sets the status_message of this DedicatedHsmProperties.

        Resource Status Message.

        :param status_message: The status_message of this DedicatedHsmProperties.
        :type status_message: str
        """

        self._status_message = status_message
