/**
 * Security Center
 * API spec for Microsoft.Security (Azure Security Center) resource provider
 *
 * The version of the OpenAPI document: 2017-08-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISensitivityLabel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISensitivityLabel::OAISensitivityLabel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISensitivityLabel::OAISensitivityLabel() {
    this->initializeModel();
}

OAISensitivityLabel::~OAISensitivityLabel() {}

void OAISensitivityLabel::initializeModel() {

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_enabled_isSet = false;
    m_enabled_isValid = false;

    m_order_isSet = false;
    m_order_isValid = false;
}

void OAISensitivityLabel::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISensitivityLabel::fromJsonObject(QJsonObject json) {

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_enabled_isValid = ::OpenAPI::fromJsonValue(m_enabled, json[QString("enabled")]);
    m_enabled_isSet = !json[QString("enabled")].isNull() && m_enabled_isValid;

    m_order_isValid = ::OpenAPI::fromJsonValue(m_order, json[QString("order")]);
    m_order_isSet = !json[QString("order")].isNull() && m_order_isValid;
}

QString OAISensitivityLabel::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISensitivityLabel::asJsonObject() const {
    QJsonObject obj;
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_enabled_isSet) {
        obj.insert(QString("enabled"), ::OpenAPI::toJsonValue(m_enabled));
    }
    if (m_order_isSet) {
        obj.insert(QString("order"), ::OpenAPI::toJsonValue(m_order));
    }
    return obj;
}

QString OAISensitivityLabel::getDisplayName() const {
    return m_display_name;
}
void OAISensitivityLabel::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAISensitivityLabel::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAISensitivityLabel::is_display_name_Valid() const{
    return m_display_name_isValid;
}

bool OAISensitivityLabel::isEnabled() const {
    return m_enabled;
}
void OAISensitivityLabel::setEnabled(const bool &enabled) {
    m_enabled = enabled;
    m_enabled_isSet = true;
}

bool OAISensitivityLabel::is_enabled_Set() const{
    return m_enabled_isSet;
}

bool OAISensitivityLabel::is_enabled_Valid() const{
    return m_enabled_isValid;
}

double OAISensitivityLabel::getOrder() const {
    return m_order;
}
void OAISensitivityLabel::setOrder(const double &order) {
    m_order = order;
    m_order_isSet = true;
}

bool OAISensitivityLabel::is_order_Set() const{
    return m_order_isSet;
}

bool OAISensitivityLabel::is_order_Valid() const{
    return m_order_isValid;
}

bool OAISensitivityLabel::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISensitivityLabel::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
