/**
 * Security Center
 * API spec for Microsoft.Security (Azure Security Center) resource provider
 *
 * The version of the OpenAPI document: 2017-08-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The InformationProtectionKeyword model module.
 * @module model/InformationProtectionKeyword
 * @version 2017-08-01-preview
 */
class InformationProtectionKeyword {
    /**
     * Constructs a new <code>InformationProtectionKeyword</code>.
     * The information type keyword.
     * @alias module:model/InformationProtectionKeyword
     */
    constructor() { 
        
        InformationProtectionKeyword.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InformationProtectionKeyword</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InformationProtectionKeyword} obj Optional instance to populate.
     * @return {module:model/InformationProtectionKeyword} The populated <code>InformationProtectionKeyword</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InformationProtectionKeyword();

            if (data.hasOwnProperty('canBeNumeric')) {
                obj['canBeNumeric'] = ApiClient.convertToType(data['canBeNumeric'], 'Boolean');
            }
            if (data.hasOwnProperty('custom')) {
                obj['custom'] = ApiClient.convertToType(data['custom'], 'Boolean');
            }
            if (data.hasOwnProperty('excluded')) {
                obj['excluded'] = ApiClient.convertToType(data['excluded'], 'Boolean');
            }
            if (data.hasOwnProperty('pattern')) {
                obj['pattern'] = ApiClient.convertToType(data['pattern'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InformationProtectionKeyword</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InformationProtectionKeyword</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['pattern'] && !(typeof data['pattern'] === 'string' || data['pattern'] instanceof String)) {
            throw new Error("Expected the field `pattern` to be a primitive type in the JSON string but got " + data['pattern']);
        }

        return true;
    }


}



/**
 * Indicates whether the keyword can be applied on numeric types or not.
 * @member {Boolean} canBeNumeric
 */
InformationProtectionKeyword.prototype['canBeNumeric'] = undefined;

/**
 * Indicates whether the keyword is custom or not.
 * @member {Boolean} custom
 */
InformationProtectionKeyword.prototype['custom'] = undefined;

/**
 * Indicates whether the keyword is excluded or not.
 * @member {Boolean} excluded
 */
InformationProtectionKeyword.prototype['excluded'] = undefined;

/**
 * The keyword pattern.
 * @member {String} pattern
 */
InformationProtectionKeyword.prototype['pattern'] = undefined;






export default InformationProtectionKeyword;

