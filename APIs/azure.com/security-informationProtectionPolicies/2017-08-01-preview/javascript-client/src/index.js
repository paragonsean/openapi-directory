/**
 * Security Center
 * API spec for Microsoft.Security (Azure Security Center) resource provider
 *
 * The version of the OpenAPI document: 2017-08-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import InformationProtectionKeyword from './model/InformationProtectionKeyword';
import InformationProtectionPoliciesListDefaultResponse from './model/InformationProtectionPoliciesListDefaultResponse';
import InformationProtectionPoliciesListDefaultResponseError from './model/InformationProtectionPoliciesListDefaultResponseError';
import InformationProtectionPolicy from './model/InformationProtectionPolicy';
import InformationProtectionPolicyList from './model/InformationProtectionPolicyList';
import InformationProtectionPolicyProperties from './model/InformationProtectionPolicyProperties';
import InformationType from './model/InformationType';
import SensitivityLabel from './model/SensitivityLabel';
import InformationProtectionPoliciesApi from './api/InformationProtectionPoliciesApi';


/**
* API spec for Microsoft.Security (Azure Security Center) resource provider.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var SecurityCenter = require('index'); // See note below*.
* var xxxSvc = new SecurityCenter.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new SecurityCenter.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new SecurityCenter.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new SecurityCenter.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2017-08-01-preview
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The InformationProtectionKeyword model constructor.
     * @property {module:model/InformationProtectionKeyword}
     */
    InformationProtectionKeyword,

    /**
     * The InformationProtectionPoliciesListDefaultResponse model constructor.
     * @property {module:model/InformationProtectionPoliciesListDefaultResponse}
     */
    InformationProtectionPoliciesListDefaultResponse,

    /**
     * The InformationProtectionPoliciesListDefaultResponseError model constructor.
     * @property {module:model/InformationProtectionPoliciesListDefaultResponseError}
     */
    InformationProtectionPoliciesListDefaultResponseError,

    /**
     * The InformationProtectionPolicy model constructor.
     * @property {module:model/InformationProtectionPolicy}
     */
    InformationProtectionPolicy,

    /**
     * The InformationProtectionPolicyList model constructor.
     * @property {module:model/InformationProtectionPolicyList}
     */
    InformationProtectionPolicyList,

    /**
     * The InformationProtectionPolicyProperties model constructor.
     * @property {module:model/InformationProtectionPolicyProperties}
     */
    InformationProtectionPolicyProperties,

    /**
     * The InformationType model constructor.
     * @property {module:model/InformationType}
     */
    InformationType,

    /**
     * The SensitivityLabel model constructor.
     * @property {module:model/SensitivityLabel}
     */
    SensitivityLabel,

    /**
    * The InformationProtectionPoliciesApi service constructor.
    * @property {module:api/InformationProtectionPoliciesApi}
    */
    InformationProtectionPoliciesApi
};
