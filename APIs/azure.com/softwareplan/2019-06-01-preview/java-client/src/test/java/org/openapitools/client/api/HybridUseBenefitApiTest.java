/*
 * Software Plan RP
 * Azure software plans let users create and manage licenses for various software used in Azure.
 *
 * The version of the OpenAPI document: 2019-06-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Error;
import org.openapitools.client.model.HybridUseBenefitModel;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for HybridUseBenefitApi
 */
@Disabled
public class HybridUseBenefitApiTest {

    private final HybridUseBenefitApi api = new HybridUseBenefitApi();

    /**
     * Create a new hybrid use benefit under a given scope
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void hybridUseBenefitCreateTest() throws ApiException {
        String scope = null;
        String planId = null;
        String apiVersion = null;
        HybridUseBenefitModel body = null;
        HybridUseBenefitModel response = api.hybridUseBenefitCreate(scope, planId, apiVersion, body);
        // TODO: test validations
    }

    /**
     * Deletes a given plan ID
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void hybridUseBenefitDeleteTest() throws ApiException {
        String scope = null;
        String planId = null;
        String apiVersion = null;
        api.hybridUseBenefitDelete(scope, planId, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets a given plan ID
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void hybridUseBenefitGetTest() throws ApiException {
        String scope = null;
        String planId = null;
        String apiVersion = null;
        HybridUseBenefitModel response = api.hybridUseBenefitGet(scope, planId, apiVersion);
        // TODO: test validations
    }

    /**
     * Updates an existing hybrid use benefit
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void hybridUseBenefitUpdateTest() throws ApiException {
        String scope = null;
        String planId = null;
        String apiVersion = null;
        HybridUseBenefitModel body = null;
        HybridUseBenefitModel response = api.hybridUseBenefitUpdate(scope, planId, apiVersion, body);
        // TODO: test validations
    }

}
