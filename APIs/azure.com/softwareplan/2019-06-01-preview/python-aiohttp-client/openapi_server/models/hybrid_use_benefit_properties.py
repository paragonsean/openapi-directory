# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.provisioning_state import ProvisioningState
from openapi_server import util


class HybridUseBenefitProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_date: datetime=None, last_updated_date: datetime=None, provisioning_state: ProvisioningState=None):
        """HybridUseBenefitProperties - a model defined in OpenAPI

        :param created_date: The created_date of this HybridUseBenefitProperties.
        :param last_updated_date: The last_updated_date of this HybridUseBenefitProperties.
        :param provisioning_state: The provisioning_state of this HybridUseBenefitProperties.
        """
        self.openapi_types = {
            'created_date': datetime,
            'last_updated_date': datetime,
            'provisioning_state': ProvisioningState
        }

        self.attribute_map = {
            'created_date': 'createdDate',
            'last_updated_date': 'lastUpdatedDate',
            'provisioning_state': 'provisioningState'
        }

        self._created_date = created_date
        self._last_updated_date = last_updated_date
        self._provisioning_state = provisioning_state

    @classmethod
    def from_dict(cls, dikt: dict) -> 'HybridUseBenefitProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The HybridUseBenefitProperties of this HybridUseBenefitProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_date(self):
        """Gets the created_date of this HybridUseBenefitProperties.

        Created date

        :return: The created_date of this HybridUseBenefitProperties.
        :rtype: datetime
        """
        return self._created_date

    @created_date.setter
    def created_date(self, created_date):
        """Sets the created_date of this HybridUseBenefitProperties.

        Created date

        :param created_date: The created_date of this HybridUseBenefitProperties.
        :type created_date: datetime
        """

        self._created_date = created_date

    @property
    def last_updated_date(self):
        """Gets the last_updated_date of this HybridUseBenefitProperties.

        Last updated date

        :return: The last_updated_date of this HybridUseBenefitProperties.
        :rtype: datetime
        """
        return self._last_updated_date

    @last_updated_date.setter
    def last_updated_date(self, last_updated_date):
        """Sets the last_updated_date of this HybridUseBenefitProperties.

        Last updated date

        :param last_updated_date: The last_updated_date of this HybridUseBenefitProperties.
        :type last_updated_date: datetime
        """

        self._last_updated_date = last_updated_date

    @property
    def provisioning_state(self):
        """Gets the provisioning_state of this HybridUseBenefitProperties.


        :return: The provisioning_state of this HybridUseBenefitProperties.
        :rtype: ProvisioningState
        """
        return self._provisioning_state

    @provisioning_state.setter
    def provisioning_state(self, provisioning_state):
        """Sets the provisioning_state of this HybridUseBenefitProperties.


        :param provisioning_state: The provisioning_state of this HybridUseBenefitProperties.
        :type provisioning_state: ProvisioningState
        """

        self._provisioning_state = provisioning_state
