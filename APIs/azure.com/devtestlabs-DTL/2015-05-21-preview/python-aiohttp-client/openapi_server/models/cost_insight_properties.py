# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.vm_cost_properties import VMCostProperties
from openapi_server import util


class CostInsightProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, currency_code: str=None, provisioning_state: str=None, vm_costs: List[VMCostProperties]=None):
        """CostInsightProperties - a model defined in OpenAPI

        :param currency_code: The currency_code of this CostInsightProperties.
        :param provisioning_state: The provisioning_state of this CostInsightProperties.
        :param vm_costs: The vm_costs of this CostInsightProperties.
        """
        self.openapi_types = {
            'currency_code': str,
            'provisioning_state': str,
            'vm_costs': List[VMCostProperties]
        }

        self.attribute_map = {
            'currency_code': 'currencyCode',
            'provisioning_state': 'provisioningState',
            'vm_costs': 'vmCosts'
        }

        self._currency_code = currency_code
        self._provisioning_state = provisioning_state
        self._vm_costs = vm_costs

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CostInsightProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CostInsightProperties of this CostInsightProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def currency_code(self):
        """Gets the currency_code of this CostInsightProperties.


        :return: The currency_code of this CostInsightProperties.
        :rtype: str
        """
        return self._currency_code

    @currency_code.setter
    def currency_code(self, currency_code):
        """Sets the currency_code of this CostInsightProperties.


        :param currency_code: The currency_code of this CostInsightProperties.
        :type currency_code: str
        """

        self._currency_code = currency_code

    @property
    def provisioning_state(self):
        """Gets the provisioning_state of this CostInsightProperties.

        The provisioning status of the resource.

        :return: The provisioning_state of this CostInsightProperties.
        :rtype: str
        """
        return self._provisioning_state

    @provisioning_state.setter
    def provisioning_state(self, provisioning_state):
        """Sets the provisioning_state of this CostInsightProperties.

        The provisioning status of the resource.

        :param provisioning_state: The provisioning_state of this CostInsightProperties.
        :type provisioning_state: str
        """

        self._provisioning_state = provisioning_state

    @property
    def vm_costs(self):
        """Gets the vm_costs of this CostInsightProperties.


        :return: The vm_costs of this CostInsightProperties.
        :rtype: List[VMCostProperties]
        """
        return self._vm_costs

    @vm_costs.setter
    def vm_costs(self, vm_costs):
        """Sets the vm_costs of this CostInsightProperties.


        :param vm_costs: The vm_costs of this CostInsightProperties.
        :type vm_costs: List[VMCostProperties]
        """

        self._vm_costs = vm_costs
