# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ArtifactProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, file_path: str=None, icon: str=None, parameters: object=None, target_os_type: str=None, title: str=None):
        """ArtifactProperties - a model defined in OpenAPI

        :param description: The description of this ArtifactProperties.
        :param file_path: The file_path of this ArtifactProperties.
        :param icon: The icon of this ArtifactProperties.
        :param parameters: The parameters of this ArtifactProperties.
        :param target_os_type: The target_os_type of this ArtifactProperties.
        :param title: The title of this ArtifactProperties.
        """
        self.openapi_types = {
            'description': str,
            'file_path': str,
            'icon': str,
            'parameters': object,
            'target_os_type': str,
            'title': str
        }

        self.attribute_map = {
            'description': 'description',
            'file_path': 'filePath',
            'icon': 'icon',
            'parameters': 'parameters',
            'target_os_type': 'targetOsType',
            'title': 'title'
        }

        self._description = description
        self._file_path = file_path
        self._icon = icon
        self._parameters = parameters
        self._target_os_type = target_os_type
        self._title = title

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ArtifactProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ArtifactProperties of this ArtifactProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this ArtifactProperties.

        The description of the artifact.

        :return: The description of this ArtifactProperties.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ArtifactProperties.

        The description of the artifact.

        :param description: The description of this ArtifactProperties.
        :type description: str
        """

        self._description = description

    @property
    def file_path(self):
        """Gets the file_path of this ArtifactProperties.

        The file path of the artifact.

        :return: The file_path of this ArtifactProperties.
        :rtype: str
        """
        return self._file_path

    @file_path.setter
    def file_path(self, file_path):
        """Sets the file_path of this ArtifactProperties.

        The file path of the artifact.

        :param file_path: The file_path of this ArtifactProperties.
        :type file_path: str
        """

        self._file_path = file_path

    @property
    def icon(self):
        """Gets the icon of this ArtifactProperties.

        The icon of the artifact.

        :return: The icon of this ArtifactProperties.
        :rtype: str
        """
        return self._icon

    @icon.setter
    def icon(self, icon):
        """Sets the icon of this ArtifactProperties.

        The icon of the artifact.

        :param icon: The icon of this ArtifactProperties.
        :type icon: str
        """

        self._icon = icon

    @property
    def parameters(self):
        """Gets the parameters of this ArtifactProperties.


        :return: The parameters of this ArtifactProperties.
        :rtype: object
        """
        return self._parameters

    @parameters.setter
    def parameters(self, parameters):
        """Sets the parameters of this ArtifactProperties.


        :param parameters: The parameters of this ArtifactProperties.
        :type parameters: object
        """

        self._parameters = parameters

    @property
    def target_os_type(self):
        """Gets the target_os_type of this ArtifactProperties.

        Gets or sets the type of the target os.

        :return: The target_os_type of this ArtifactProperties.
        :rtype: str
        """
        return self._target_os_type

    @target_os_type.setter
    def target_os_type(self, target_os_type):
        """Sets the target_os_type of this ArtifactProperties.

        Gets or sets the type of the target os.

        :param target_os_type: The target_os_type of this ArtifactProperties.
        :type target_os_type: str
        """

        self._target_os_type = target_os_type

    @property
    def title(self):
        """Gets the title of this ArtifactProperties.

        The title of the artifact.

        :return: The title of this ArtifactProperties.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this ArtifactProperties.

        The title of the artifact.

        :param title: The title of this ArtifactProperties.
        :type title: str
        """

        self._title = title
