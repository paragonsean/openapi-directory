# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.cost_per_day_properties import CostPerDayProperties
from openapi_server import util


class CostProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, costs: List[CostPerDayProperties]=None, currency_code: str=None):
        """CostProperties - a model defined in OpenAPI

        :param costs: The costs of this CostProperties.
        :param currency_code: The currency_code of this CostProperties.
        """
        self.openapi_types = {
            'costs': List[CostPerDayProperties],
            'currency_code': str
        }

        self.attribute_map = {
            'costs': 'costs',
            'currency_code': 'currencyCode'
        }

        self._costs = costs
        self._currency_code = currency_code

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CostProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CostProperties of this CostProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def costs(self):
        """Gets the costs of this CostProperties.

        The per-day costs items of the cost.

        :return: The costs of this CostProperties.
        :rtype: List[CostPerDayProperties]
        """
        return self._costs

    @costs.setter
    def costs(self, costs):
        """Sets the costs of this CostProperties.

        The per-day costs items of the cost.

        :param costs: The costs of this CostProperties.
        :type costs: List[CostPerDayProperties]
        """

        self._costs = costs

    @property
    def currency_code(self):
        """Gets the currency_code of this CostProperties.

        The currency code of the cost.

        :return: The currency_code of this CostProperties.
        :rtype: str
        """
        return self._currency_code

    @currency_code.setter
    def currency_code(self, currency_code):
        """Sets the currency_code of this CostProperties.

        The currency code of the cost.

        :param currency_code: The currency_code of this CostProperties.
        :type currency_code: str
        """

        self._currency_code = currency_code
