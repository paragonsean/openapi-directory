# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.parameter_info import ParameterInfo
from openapi_server import util


class GenerateArmTemplateRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, location: str=None, parameters: List[ParameterInfo]=None, virtual_machine_name: str=None):
        """GenerateArmTemplateRequest - a model defined in OpenAPI

        :param location: The location of this GenerateArmTemplateRequest.
        :param parameters: The parameters of this GenerateArmTemplateRequest.
        :param virtual_machine_name: The virtual_machine_name of this GenerateArmTemplateRequest.
        """
        self.openapi_types = {
            'location': str,
            'parameters': List[ParameterInfo],
            'virtual_machine_name': str
        }

        self.attribute_map = {
            'location': 'location',
            'parameters': 'parameters',
            'virtual_machine_name': 'virtualMachineName'
        }

        self._location = location
        self._parameters = parameters
        self._virtual_machine_name = virtual_machine_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GenerateArmTemplateRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GenerateArmTemplateRequest of this GenerateArmTemplateRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def location(self):
        """Gets the location of this GenerateArmTemplateRequest.

        The location of the virtual machine.

        :return: The location of this GenerateArmTemplateRequest.
        :rtype: str
        """
        return self._location

    @location.setter
    def location(self, location):
        """Sets the location of this GenerateArmTemplateRequest.

        The location of the virtual machine.

        :param location: The location of this GenerateArmTemplateRequest.
        :type location: str
        """

        self._location = location

    @property
    def parameters(self):
        """Gets the parameters of this GenerateArmTemplateRequest.

        The parameters of the ARM template.

        :return: The parameters of this GenerateArmTemplateRequest.
        :rtype: List[ParameterInfo]
        """
        return self._parameters

    @parameters.setter
    def parameters(self, parameters):
        """Sets the parameters of this GenerateArmTemplateRequest.

        The parameters of the ARM template.

        :param parameters: The parameters of this GenerateArmTemplateRequest.
        :type parameters: List[ParameterInfo]
        """

        self._parameters = parameters

    @property
    def virtual_machine_name(self):
        """Gets the virtual_machine_name of this GenerateArmTemplateRequest.

        The resource name of the virtual machine.

        :return: The virtual_machine_name of this GenerateArmTemplateRequest.
        :rtype: str
        """
        return self._virtual_machine_name

    @virtual_machine_name.setter
    def virtual_machine_name(self, virtual_machine_name):
        """Sets the virtual_machine_name of this GenerateArmTemplateRequest.

        The resource name of the virtual machine.

        :param virtual_machine_name: The virtual_machine_name of this GenerateArmTemplateRequest.
        :type virtual_machine_name: str
        """

        self._virtual_machine_name = virtual_machine_name
