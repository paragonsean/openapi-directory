# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.artifact_parameter_properties import ArtifactParameterProperties
from openapi_server import util


class ArtifactInstallProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, artifact_id: str=None, parameters: List[ArtifactParameterProperties]=None):
        """ArtifactInstallProperties - a model defined in OpenAPI

        :param artifact_id: The artifact_id of this ArtifactInstallProperties.
        :param parameters: The parameters of this ArtifactInstallProperties.
        """
        self.openapi_types = {
            'artifact_id': str,
            'parameters': List[ArtifactParameterProperties]
        }

        self.attribute_map = {
            'artifact_id': 'artifactId',
            'parameters': 'parameters'
        }

        self._artifact_id = artifact_id
        self._parameters = parameters

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ArtifactInstallProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ArtifactInstallProperties of this ArtifactInstallProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def artifact_id(self):
        """Gets the artifact_id of this ArtifactInstallProperties.

        The artifact's identifier.

        :return: The artifact_id of this ArtifactInstallProperties.
        :rtype: str
        """
        return self._artifact_id

    @artifact_id.setter
    def artifact_id(self, artifact_id):
        """Sets the artifact_id of this ArtifactInstallProperties.

        The artifact's identifier.

        :param artifact_id: The artifact_id of this ArtifactInstallProperties.
        :type artifact_id: str
        """

        self._artifact_id = artifact_id

    @property
    def parameters(self):
        """Gets the parameters of this ArtifactInstallProperties.

        The parameters of the artifact.

        :return: The parameters of this ArtifactInstallProperties.
        :rtype: List[ArtifactParameterProperties]
        """
        return self._parameters

    @parameters.setter
    def parameters(self, parameters):
        """Sets the parameters of this ArtifactInstallProperties.

        The parameters of the artifact.

        :param parameters: The parameters of this ArtifactInstallProperties.
        :type parameters: List[ArtifactParameterProperties]
        """

        self._parameters = parameters
