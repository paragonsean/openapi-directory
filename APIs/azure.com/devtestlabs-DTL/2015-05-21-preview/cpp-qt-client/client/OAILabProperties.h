/**
 * DevTestLabsClient
 * Azure DevTest Labs REST API version 2015-05-21-preview.
 *
 * The version of the OpenAPI document: 2015-05-21-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILabProperties.h
 *
 * Properties of a lab.
 */

#ifndef OAILabProperties_H
#define OAILabProperties_H

#include <QJsonObject>

#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAILabProperties : public OAIObject {
public:
    OAILabProperties();
    OAILabProperties(QString json);
    ~OAILabProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getArtifactsStorageAccount() const;
    void setArtifactsStorageAccount(const QString &artifacts_storage_account);
    bool is_artifacts_storage_account_Set() const;
    bool is_artifacts_storage_account_Valid() const;

    QDateTime getCreatedDate() const;
    void setCreatedDate(const QDateTime &created_date);
    bool is_created_date_Set() const;
    bool is_created_date_Valid() const;

    QString getDefaultStorageAccount() const;
    void setDefaultStorageAccount(const QString &default_storage_account);
    bool is_default_storage_account_Set() const;
    bool is_default_storage_account_Valid() const;

    QString getDefaultVirtualNetworkId() const;
    void setDefaultVirtualNetworkId(const QString &default_virtual_network_id);
    bool is_default_virtual_network_id_Set() const;
    bool is_default_virtual_network_id_Valid() const;

    QString getLabStorageType() const;
    void setLabStorageType(const QString &lab_storage_type);
    bool is_lab_storage_type_Set() const;
    bool is_lab_storage_type_Valid() const;

    QString getProvisioningState() const;
    void setProvisioningState(const QString &provisioning_state);
    bool is_provisioning_state_Set() const;
    bool is_provisioning_state_Valid() const;

    QList<QString> getStorageAccounts() const;
    void setStorageAccounts(const QList<QString> &storage_accounts);
    bool is_storage_accounts_Set() const;
    bool is_storage_accounts_Valid() const;

    QString getVaultName() const;
    void setVaultName(const QString &vault_name);
    bool is_vault_name_Set() const;
    bool is_vault_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_artifacts_storage_account;
    bool m_artifacts_storage_account_isSet;
    bool m_artifacts_storage_account_isValid;

    QDateTime m_created_date;
    bool m_created_date_isSet;
    bool m_created_date_isValid;

    QString m_default_storage_account;
    bool m_default_storage_account_isSet;
    bool m_default_storage_account_isValid;

    QString m_default_virtual_network_id;
    bool m_default_virtual_network_id_isSet;
    bool m_default_virtual_network_id_isValid;

    QString m_lab_storage_type;
    bool m_lab_storage_type_isSet;
    bool m_lab_storage_type_isValid;

    QString m_provisioning_state;
    bool m_provisioning_state_isSet;
    bool m_provisioning_state_isValid;

    QList<QString> m_storage_accounts;
    bool m_storage_accounts_isSet;
    bool m_storage_accounts_isValid;

    QString m_vault_name;
    bool m_vault_name_isSet;
    bool m_vault_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILabProperties)

#endif // OAILabProperties_H
