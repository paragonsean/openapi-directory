/*
 * DevTestLabsClient
 * Azure DevTest Labs REST API version 2015-05-21-preview.
 *
 * The version of the OpenAPI document: 2015-05-21-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CloudError;
import org.openapitools.client.model.ResponseWithContinuationVirtualNetwork;
import org.openapitools.client.model.VirtualNetwork;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for VirtualNetworkApi
 */
@Disabled
public class VirtualNetworkApiTest {

    private final VirtualNetworkApi api = new VirtualNetworkApi();

    /**
     * Create or replace an existing virtual network. This operation can take a while to complete.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void virtualNetworkCreateOrUpdateResourceTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String labName = null;
        String name = null;
        String apiVersion = null;
        VirtualNetwork virtualNetwork = null;
        VirtualNetwork response = api.virtualNetworkCreateOrUpdateResource(subscriptionId, resourceGroupName, labName, name, apiVersion, virtualNetwork);
        // TODO: test validations
    }

    /**
     * Delete virtual network. This operation can take a while to complete.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void virtualNetworkDeleteResourceTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String labName = null;
        String name = null;
        String apiVersion = null;
        api.virtualNetworkDeleteResource(subscriptionId, resourceGroupName, labName, name, apiVersion);
        // TODO: test validations
    }

    /**
     * Get virtual network.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void virtualNetworkGetResourceTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String labName = null;
        String name = null;
        String apiVersion = null;
        VirtualNetwork response = api.virtualNetworkGetResource(subscriptionId, resourceGroupName, labName, name, apiVersion);
        // TODO: test validations
    }

    /**
     * List virtual networks.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void virtualNetworkListTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String labName = null;
        String apiVersion = null;
        String $filter = null;
        Integer $top = null;
        String $orderBy = null;
        ResponseWithContinuationVirtualNetwork response = api.virtualNetworkList(subscriptionId, resourceGroupName, labName, apiVersion, $filter, $top, $orderBy);
        // TODO: test validations
    }

    /**
     * Modify properties of virtual networks.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void virtualNetworkPatchResourceTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String labName = null;
        String name = null;
        String apiVersion = null;
        VirtualNetwork virtualNetwork = null;
        VirtualNetwork response = api.virtualNetworkPatchResource(subscriptionId, resourceGroupName, labName, name, apiVersion, virtualNetwork);
        // TODO: test validations
    }

}
