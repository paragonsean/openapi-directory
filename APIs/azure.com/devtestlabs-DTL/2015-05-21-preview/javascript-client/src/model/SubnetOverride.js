/**
 * DevTestLabsClient
 * Azure DevTest Labs REST API version 2015-05-21-preview.
 *
 * The version of the OpenAPI document: 2015-05-21-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SubnetOverride model module.
 * @module model/SubnetOverride
 * @version 2015-05-21-preview
 */
class SubnetOverride {
    /**
     * Constructs a new <code>SubnetOverride</code>.
     * Property overrides on a subnet of a virtual network.
     * @alias module:model/SubnetOverride
     */
    constructor() { 
        
        SubnetOverride.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SubnetOverride</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SubnetOverride} obj Optional instance to populate.
     * @return {module:model/SubnetOverride} The populated <code>SubnetOverride</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SubnetOverride();

            if (data.hasOwnProperty('labSubnetName')) {
                obj['labSubnetName'] = ApiClient.convertToType(data['labSubnetName'], 'String');
            }
            if (data.hasOwnProperty('resourceId')) {
                obj['resourceId'] = ApiClient.convertToType(data['resourceId'], 'String');
            }
            if (data.hasOwnProperty('useInVmCreationPermission')) {
                obj['useInVmCreationPermission'] = ApiClient.convertToType(data['useInVmCreationPermission'], 'String');
            }
            if (data.hasOwnProperty('usePublicIpAddressPermission')) {
                obj['usePublicIpAddressPermission'] = ApiClient.convertToType(data['usePublicIpAddressPermission'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SubnetOverride</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SubnetOverride</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['labSubnetName'] && !(typeof data['labSubnetName'] === 'string' || data['labSubnetName'] instanceof String)) {
            throw new Error("Expected the field `labSubnetName` to be a primitive type in the JSON string but got " + data['labSubnetName']);
        }
        // ensure the json data is a string
        if (data['resourceId'] && !(typeof data['resourceId'] === 'string' || data['resourceId'] instanceof String)) {
            throw new Error("Expected the field `resourceId` to be a primitive type in the JSON string but got " + data['resourceId']);
        }
        // ensure the json data is a string
        if (data['useInVmCreationPermission'] && !(typeof data['useInVmCreationPermission'] === 'string' || data['useInVmCreationPermission'] instanceof String)) {
            throw new Error("Expected the field `useInVmCreationPermission` to be a primitive type in the JSON string but got " + data['useInVmCreationPermission']);
        }
        // ensure the json data is a string
        if (data['usePublicIpAddressPermission'] && !(typeof data['usePublicIpAddressPermission'] === 'string' || data['usePublicIpAddressPermission'] instanceof String)) {
            throw new Error("Expected the field `usePublicIpAddressPermission` to be a primitive type in the JSON string but got " + data['usePublicIpAddressPermission']);
        }

        return true;
    }


}



/**
 * The name given to the subnet within the lab.
 * @member {String} labSubnetName
 */
SubnetOverride.prototype['labSubnetName'] = undefined;

/**
 * The resource identifier of the subnet.
 * @member {String} resourceId
 */
SubnetOverride.prototype['resourceId'] = undefined;

/**
 * Indicates whether this subnet can be used during virtual machine creation.
 * @member {module:model/SubnetOverride.UseInVmCreationPermissionEnum} useInVmCreationPermission
 */
SubnetOverride.prototype['useInVmCreationPermission'] = undefined;

/**
 * Indicates whether public IP addresses can be assigned to virtual machines on this subnet.
 * @member {module:model/SubnetOverride.UsePublicIpAddressPermissionEnum} usePublicIpAddressPermission
 */
SubnetOverride.prototype['usePublicIpAddressPermission'] = undefined;





/**
 * Allowed values for the <code>useInVmCreationPermission</code> property.
 * @enum {String}
 * @readonly
 */
SubnetOverride['UseInVmCreationPermissionEnum'] = {

    /**
     * value: "Default"
     * @const
     */
    "Default": "Default",

    /**
     * value: "Deny"
     * @const
     */
    "Deny": "Deny",

    /**
     * value: "Allow"
     * @const
     */
    "Allow": "Allow"
};


/**
 * Allowed values for the <code>usePublicIpAddressPermission</code> property.
 * @enum {String}
 * @readonly
 */
SubnetOverride['UsePublicIpAddressPermissionEnum'] = {

    /**
     * value: "Default"
     * @const
     */
    "Default": "Default",

    /**
     * value: "Deny"
     * @const
     */
    "Deny": "Deny",

    /**
     * value: "Allow"
     * @const
     */
    "Allow": "Allow"
};



export default SubnetOverride;

