/**
 * DevTestLabsClient
 * Azure DevTest Labs REST API version 2015-05-21-preview.
 *
 * The version of the OpenAPI document: 2015-05-21-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ParameterInfo from './ParameterInfo';

/**
 * The GenerateArmTemplateRequest model module.
 * @module model/GenerateArmTemplateRequest
 * @version 2015-05-21-preview
 */
class GenerateArmTemplateRequest {
    /**
     * Constructs a new <code>GenerateArmTemplateRequest</code>.
     * Parameters for generating an ARM template for deploying artifacts.
     * @alias module:model/GenerateArmTemplateRequest
     */
    constructor() { 
        
        GenerateArmTemplateRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GenerateArmTemplateRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GenerateArmTemplateRequest} obj Optional instance to populate.
     * @return {module:model/GenerateArmTemplateRequest} The populated <code>GenerateArmTemplateRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GenerateArmTemplateRequest();

            if (data.hasOwnProperty('location')) {
                obj['location'] = ApiClient.convertToType(data['location'], 'String');
            }
            if (data.hasOwnProperty('parameters')) {
                obj['parameters'] = ApiClient.convertToType(data['parameters'], [ParameterInfo]);
            }
            if (data.hasOwnProperty('virtualMachineName')) {
                obj['virtualMachineName'] = ApiClient.convertToType(data['virtualMachineName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GenerateArmTemplateRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GenerateArmTemplateRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['location'] && !(typeof data['location'] === 'string' || data['location'] instanceof String)) {
            throw new Error("Expected the field `location` to be a primitive type in the JSON string but got " + data['location']);
        }
        if (data['parameters']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['parameters'])) {
                throw new Error("Expected the field `parameters` to be an array in the JSON data but got " + data['parameters']);
            }
            // validate the optional field `parameters` (array)
            for (const item of data['parameters']) {
                ParameterInfo.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['virtualMachineName'] && !(typeof data['virtualMachineName'] === 'string' || data['virtualMachineName'] instanceof String)) {
            throw new Error("Expected the field `virtualMachineName` to be a primitive type in the JSON string but got " + data['virtualMachineName']);
        }

        return true;
    }


}



/**
 * The location of the virtual machine.
 * @member {String} location
 */
GenerateArmTemplateRequest.prototype['location'] = undefined;

/**
 * The parameters of the ARM template.
 * @member {Array.<module:model/ParameterInfo>} parameters
 */
GenerateArmTemplateRequest.prototype['parameters'] = undefined;

/**
 * The resource name of the virtual machine.
 * @member {String} virtualMachineName
 */
GenerateArmTemplateRequest.prototype['virtualMachineName'] = undefined;






export default GenerateArmTemplateRequest;

