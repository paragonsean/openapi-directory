# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.user_identity import UserIdentity
from openapi_server.models.user_secret_store import UserSecretStore
from openapi_server import util


class UserProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_date: datetime=None, identity: UserIdentity=None, provisioning_state: str=None, secret_store: UserSecretStore=None, unique_identifier: str=None):
        """UserProperties - a model defined in OpenAPI

        :param created_date: The created_date of this UserProperties.
        :param identity: The identity of this UserProperties.
        :param provisioning_state: The provisioning_state of this UserProperties.
        :param secret_store: The secret_store of this UserProperties.
        :param unique_identifier: The unique_identifier of this UserProperties.
        """
        self.openapi_types = {
            'created_date': datetime,
            'identity': UserIdentity,
            'provisioning_state': str,
            'secret_store': UserSecretStore,
            'unique_identifier': str
        }

        self.attribute_map = {
            'created_date': 'createdDate',
            'identity': 'identity',
            'provisioning_state': 'provisioningState',
            'secret_store': 'secretStore',
            'unique_identifier': 'uniqueIdentifier'
        }

        self._created_date = created_date
        self._identity = identity
        self._provisioning_state = provisioning_state
        self._secret_store = secret_store
        self._unique_identifier = unique_identifier

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UserProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UserProperties of this UserProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_date(self):
        """Gets the created_date of this UserProperties.

        The creation date of the user profile.

        :return: The created_date of this UserProperties.
        :rtype: datetime
        """
        return self._created_date

    @created_date.setter
    def created_date(self, created_date):
        """Sets the created_date of this UserProperties.

        The creation date of the user profile.

        :param created_date: The created_date of this UserProperties.
        :type created_date: datetime
        """

        self._created_date = created_date

    @property
    def identity(self):
        """Gets the identity of this UserProperties.


        :return: The identity of this UserProperties.
        :rtype: UserIdentity
        """
        return self._identity

    @identity.setter
    def identity(self, identity):
        """Sets the identity of this UserProperties.


        :param identity: The identity of this UserProperties.
        :type identity: UserIdentity
        """

        self._identity = identity

    @property
    def provisioning_state(self):
        """Gets the provisioning_state of this UserProperties.

        The provisioning status of the resource.

        :return: The provisioning_state of this UserProperties.
        :rtype: str
        """
        return self._provisioning_state

    @provisioning_state.setter
    def provisioning_state(self, provisioning_state):
        """Sets the provisioning_state of this UserProperties.

        The provisioning status of the resource.

        :param provisioning_state: The provisioning_state of this UserProperties.
        :type provisioning_state: str
        """

        self._provisioning_state = provisioning_state

    @property
    def secret_store(self):
        """Gets the secret_store of this UserProperties.


        :return: The secret_store of this UserProperties.
        :rtype: UserSecretStore
        """
        return self._secret_store

    @secret_store.setter
    def secret_store(self, secret_store):
        """Sets the secret_store of this UserProperties.


        :param secret_store: The secret_store of this UserProperties.
        :type secret_store: UserSecretStore
        """

        self._secret_store = secret_store

    @property
    def unique_identifier(self):
        """Gets the unique_identifier of this UserProperties.

        The unique immutable identifier of a resource (Guid).

        :return: The unique_identifier of this UserProperties.
        :rtype: str
        """
        return self._unique_identifier

    @unique_identifier.setter
    def unique_identifier(self, unique_identifier):
        """Sets the unique_identifier of this UserProperties.

        The unique immutable identifier of a resource (Guid).

        :param unique_identifier: The unique_identifier of this UserProperties.
        :type unique_identifier: str
        """

        self._unique_identifier = unique_identifier
