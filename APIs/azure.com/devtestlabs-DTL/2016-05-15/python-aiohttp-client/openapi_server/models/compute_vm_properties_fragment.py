# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.compute_data_disk_fragment import ComputeDataDiskFragment
from openapi_server.models.compute_vm_instance_view_status_fragment import ComputeVmInstanceViewStatusFragment
from openapi_server import util


class ComputeVmPropertiesFragment(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, data_disk_ids: List[str]=None, data_disks: List[ComputeDataDiskFragment]=None, network_interface_id: str=None, os_disk_id: str=None, os_type: str=None, statuses: List[ComputeVmInstanceViewStatusFragment]=None, vm_size: str=None):
        """ComputeVmPropertiesFragment - a model defined in OpenAPI

        :param data_disk_ids: The data_disk_ids of this ComputeVmPropertiesFragment.
        :param data_disks: The data_disks of this ComputeVmPropertiesFragment.
        :param network_interface_id: The network_interface_id of this ComputeVmPropertiesFragment.
        :param os_disk_id: The os_disk_id of this ComputeVmPropertiesFragment.
        :param os_type: The os_type of this ComputeVmPropertiesFragment.
        :param statuses: The statuses of this ComputeVmPropertiesFragment.
        :param vm_size: The vm_size of this ComputeVmPropertiesFragment.
        """
        self.openapi_types = {
            'data_disk_ids': List[str],
            'data_disks': List[ComputeDataDiskFragment],
            'network_interface_id': str,
            'os_disk_id': str,
            'os_type': str,
            'statuses': List[ComputeVmInstanceViewStatusFragment],
            'vm_size': str
        }

        self.attribute_map = {
            'data_disk_ids': 'dataDiskIds',
            'data_disks': 'dataDisks',
            'network_interface_id': 'networkInterfaceId',
            'os_disk_id': 'osDiskId',
            'os_type': 'osType',
            'statuses': 'statuses',
            'vm_size': 'vmSize'
        }

        self._data_disk_ids = data_disk_ids
        self._data_disks = data_disks
        self._network_interface_id = network_interface_id
        self._os_disk_id = os_disk_id
        self._os_type = os_type
        self._statuses = statuses
        self._vm_size = vm_size

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ComputeVmPropertiesFragment':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ComputeVmPropertiesFragment of this ComputeVmPropertiesFragment.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def data_disk_ids(self):
        """Gets the data_disk_ids of this ComputeVmPropertiesFragment.

        Gets data disks blob uri for the virtual machine.

        :return: The data_disk_ids of this ComputeVmPropertiesFragment.
        :rtype: List[str]
        """
        return self._data_disk_ids

    @data_disk_ids.setter
    def data_disk_ids(self, data_disk_ids):
        """Sets the data_disk_ids of this ComputeVmPropertiesFragment.

        Gets data disks blob uri for the virtual machine.

        :param data_disk_ids: The data_disk_ids of this ComputeVmPropertiesFragment.
        :type data_disk_ids: List[str]
        """

        self._data_disk_ids = data_disk_ids

    @property
    def data_disks(self):
        """Gets the data_disks of this ComputeVmPropertiesFragment.

        Gets all data disks attached to the virtual machine.

        :return: The data_disks of this ComputeVmPropertiesFragment.
        :rtype: List[ComputeDataDiskFragment]
        """
        return self._data_disks

    @data_disks.setter
    def data_disks(self, data_disks):
        """Sets the data_disks of this ComputeVmPropertiesFragment.

        Gets all data disks attached to the virtual machine.

        :param data_disks: The data_disks of this ComputeVmPropertiesFragment.
        :type data_disks: List[ComputeDataDiskFragment]
        """

        self._data_disks = data_disks

    @property
    def network_interface_id(self):
        """Gets the network_interface_id of this ComputeVmPropertiesFragment.

        Gets the network interface ID of the virtual machine.

        :return: The network_interface_id of this ComputeVmPropertiesFragment.
        :rtype: str
        """
        return self._network_interface_id

    @network_interface_id.setter
    def network_interface_id(self, network_interface_id):
        """Sets the network_interface_id of this ComputeVmPropertiesFragment.

        Gets the network interface ID of the virtual machine.

        :param network_interface_id: The network_interface_id of this ComputeVmPropertiesFragment.
        :type network_interface_id: str
        """

        self._network_interface_id = network_interface_id

    @property
    def os_disk_id(self):
        """Gets the os_disk_id of this ComputeVmPropertiesFragment.

        Gets OS disk blob uri for the virtual machine.

        :return: The os_disk_id of this ComputeVmPropertiesFragment.
        :rtype: str
        """
        return self._os_disk_id

    @os_disk_id.setter
    def os_disk_id(self, os_disk_id):
        """Sets the os_disk_id of this ComputeVmPropertiesFragment.

        Gets OS disk blob uri for the virtual machine.

        :param os_disk_id: The os_disk_id of this ComputeVmPropertiesFragment.
        :type os_disk_id: str
        """

        self._os_disk_id = os_disk_id

    @property
    def os_type(self):
        """Gets the os_type of this ComputeVmPropertiesFragment.

        Gets the OS type of the virtual machine.

        :return: The os_type of this ComputeVmPropertiesFragment.
        :rtype: str
        """
        return self._os_type

    @os_type.setter
    def os_type(self, os_type):
        """Sets the os_type of this ComputeVmPropertiesFragment.

        Gets the OS type of the virtual machine.

        :param os_type: The os_type of this ComputeVmPropertiesFragment.
        :type os_type: str
        """

        self._os_type = os_type

    @property
    def statuses(self):
        """Gets the statuses of this ComputeVmPropertiesFragment.

        Gets the statuses of the virtual machine.

        :return: The statuses of this ComputeVmPropertiesFragment.
        :rtype: List[ComputeVmInstanceViewStatusFragment]
        """
        return self._statuses

    @statuses.setter
    def statuses(self, statuses):
        """Sets the statuses of this ComputeVmPropertiesFragment.

        Gets the statuses of the virtual machine.

        :param statuses: The statuses of this ComputeVmPropertiesFragment.
        :type statuses: List[ComputeVmInstanceViewStatusFragment]
        """

        self._statuses = statuses

    @property
    def vm_size(self):
        """Gets the vm_size of this ComputeVmPropertiesFragment.

        Gets the size of the virtual machine.

        :return: The vm_size of this ComputeVmPropertiesFragment.
        :rtype: str
        """
        return self._vm_size

    @vm_size.setter
    def vm_size(self, vm_size):
        """Sets the vm_size of this ComputeVmPropertiesFragment.

        Gets the size of the virtual machine.

        :param vm_size: The vm_size of this ComputeVmPropertiesFragment.
        :type vm_size: str
        """

        self._vm_size = vm_size
