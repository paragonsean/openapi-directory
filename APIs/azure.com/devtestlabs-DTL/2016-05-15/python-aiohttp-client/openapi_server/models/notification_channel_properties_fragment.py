# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.event_fragment import EventFragment
from openapi_server import util


class NotificationChannelPropertiesFragment(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, events: List[EventFragment]=None, provisioning_state: str=None, unique_identifier: str=None, web_hook_url: str=None):
        """NotificationChannelPropertiesFragment - a model defined in OpenAPI

        :param description: The description of this NotificationChannelPropertiesFragment.
        :param events: The events of this NotificationChannelPropertiesFragment.
        :param provisioning_state: The provisioning_state of this NotificationChannelPropertiesFragment.
        :param unique_identifier: The unique_identifier of this NotificationChannelPropertiesFragment.
        :param web_hook_url: The web_hook_url of this NotificationChannelPropertiesFragment.
        """
        self.openapi_types = {
            'description': str,
            'events': List[EventFragment],
            'provisioning_state': str,
            'unique_identifier': str,
            'web_hook_url': str
        }

        self.attribute_map = {
            'description': 'description',
            'events': 'events',
            'provisioning_state': 'provisioningState',
            'unique_identifier': 'uniqueIdentifier',
            'web_hook_url': 'webHookUrl'
        }

        self._description = description
        self._events = events
        self._provisioning_state = provisioning_state
        self._unique_identifier = unique_identifier
        self._web_hook_url = web_hook_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NotificationChannelPropertiesFragment':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NotificationChannelPropertiesFragment of this NotificationChannelPropertiesFragment.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this NotificationChannelPropertiesFragment.

        Description of notification.

        :return: The description of this NotificationChannelPropertiesFragment.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this NotificationChannelPropertiesFragment.

        Description of notification.

        :param description: The description of this NotificationChannelPropertiesFragment.
        :type description: str
        """

        self._description = description

    @property
    def events(self):
        """Gets the events of this NotificationChannelPropertiesFragment.

        The list of event for which this notification is enabled.

        :return: The events of this NotificationChannelPropertiesFragment.
        :rtype: List[EventFragment]
        """
        return self._events

    @events.setter
    def events(self, events):
        """Sets the events of this NotificationChannelPropertiesFragment.

        The list of event for which this notification is enabled.

        :param events: The events of this NotificationChannelPropertiesFragment.
        :type events: List[EventFragment]
        """

        self._events = events

    @property
    def provisioning_state(self):
        """Gets the provisioning_state of this NotificationChannelPropertiesFragment.

        The provisioning status of the resource.

        :return: The provisioning_state of this NotificationChannelPropertiesFragment.
        :rtype: str
        """
        return self._provisioning_state

    @provisioning_state.setter
    def provisioning_state(self, provisioning_state):
        """Sets the provisioning_state of this NotificationChannelPropertiesFragment.

        The provisioning status of the resource.

        :param provisioning_state: The provisioning_state of this NotificationChannelPropertiesFragment.
        :type provisioning_state: str
        """

        self._provisioning_state = provisioning_state

    @property
    def unique_identifier(self):
        """Gets the unique_identifier of this NotificationChannelPropertiesFragment.

        The unique immutable identifier of a resource (Guid).

        :return: The unique_identifier of this NotificationChannelPropertiesFragment.
        :rtype: str
        """
        return self._unique_identifier

    @unique_identifier.setter
    def unique_identifier(self, unique_identifier):
        """Sets the unique_identifier of this NotificationChannelPropertiesFragment.

        The unique immutable identifier of a resource (Guid).

        :param unique_identifier: The unique_identifier of this NotificationChannelPropertiesFragment.
        :type unique_identifier: str
        """

        self._unique_identifier = unique_identifier

    @property
    def web_hook_url(self):
        """Gets the web_hook_url of this NotificationChannelPropertiesFragment.

        The webhook URL to send notifications to.

        :return: The web_hook_url of this NotificationChannelPropertiesFragment.
        :rtype: str
        """
        return self._web_hook_url

    @web_hook_url.setter
    def web_hook_url(self, web_hook_url):
        """Sets the web_hook_url of this NotificationChannelPropertiesFragment.

        The webhook URL to send notifications to.

        :param web_hook_url: The web_hook_url of this NotificationChannelPropertiesFragment.
        :type web_hook_url: str
        """

        self._web_hook_url = web_hook_url
