# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CustomImagePropertiesCustom(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, image_name: str=None, os_type: str=None, sys_prep: bool=None):
        """CustomImagePropertiesCustom - a model defined in OpenAPI

        :param image_name: The image_name of this CustomImagePropertiesCustom.
        :param os_type: The os_type of this CustomImagePropertiesCustom.
        :param sys_prep: The sys_prep of this CustomImagePropertiesCustom.
        """
        self.openapi_types = {
            'image_name': str,
            'os_type': str,
            'sys_prep': bool
        }

        self.attribute_map = {
            'image_name': 'imageName',
            'os_type': 'osType',
            'sys_prep': 'sysPrep'
        }

        self._image_name = image_name
        self._os_type = os_type
        self._sys_prep = sys_prep

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CustomImagePropertiesCustom':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CustomImagePropertiesCustom of this CustomImagePropertiesCustom.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def image_name(self):
        """Gets the image_name of this CustomImagePropertiesCustom.

        The image name.

        :return: The image_name of this CustomImagePropertiesCustom.
        :rtype: str
        """
        return self._image_name

    @image_name.setter
    def image_name(self, image_name):
        """Sets the image_name of this CustomImagePropertiesCustom.

        The image name.

        :param image_name: The image_name of this CustomImagePropertiesCustom.
        :type image_name: str
        """

        self._image_name = image_name

    @property
    def os_type(self):
        """Gets the os_type of this CustomImagePropertiesCustom.

        The OS type of the custom image (i.e. Windows, Linux)

        :return: The os_type of this CustomImagePropertiesCustom.
        :rtype: str
        """
        return self._os_type

    @os_type.setter
    def os_type(self, os_type):
        """Sets the os_type of this CustomImagePropertiesCustom.

        The OS type of the custom image (i.e. Windows, Linux)

        :param os_type: The os_type of this CustomImagePropertiesCustom.
        :type os_type: str
        """
        allowed_values = ["Windows", "Linux", "None"]  # noqa: E501
        if os_type not in allowed_values:
            raise ValueError(
                "Invalid value for `os_type` ({0}), must be one of {1}"
                .format(os_type, allowed_values)
            )

        self._os_type = os_type

    @property
    def sys_prep(self):
        """Gets the sys_prep of this CustomImagePropertiesCustom.

        Indicates whether sysprep has been run on the VHD.

        :return: The sys_prep of this CustomImagePropertiesCustom.
        :rtype: bool
        """
        return self._sys_prep

    @sys_prep.setter
    def sys_prep(self, sys_prep):
        """Sets the sys_prep of this CustomImagePropertiesCustom.

        Indicates whether sysprep has been run on the VHD.

        :param sys_prep: The sys_prep of this CustomImagePropertiesCustom.
        :type sys_prep: bool
        """

        self._sys_prep = sys_prep
