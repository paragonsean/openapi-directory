# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.shared_public_ip_address_configuration import SharedPublicIpAddressConfiguration
from openapi_server import util


class NetworkInterfaceProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, dns_name: str=None, private_ip_address: str=None, public_ip_address: str=None, public_ip_address_id: str=None, rdp_authority: str=None, shared_public_ip_address_configuration: SharedPublicIpAddressConfiguration=None, ssh_authority: str=None, subnet_id: str=None, virtual_network_id: str=None):
        """NetworkInterfaceProperties - a model defined in OpenAPI

        :param dns_name: The dns_name of this NetworkInterfaceProperties.
        :param private_ip_address: The private_ip_address of this NetworkInterfaceProperties.
        :param public_ip_address: The public_ip_address of this NetworkInterfaceProperties.
        :param public_ip_address_id: The public_ip_address_id of this NetworkInterfaceProperties.
        :param rdp_authority: The rdp_authority of this NetworkInterfaceProperties.
        :param shared_public_ip_address_configuration: The shared_public_ip_address_configuration of this NetworkInterfaceProperties.
        :param ssh_authority: The ssh_authority of this NetworkInterfaceProperties.
        :param subnet_id: The subnet_id of this NetworkInterfaceProperties.
        :param virtual_network_id: The virtual_network_id of this NetworkInterfaceProperties.
        """
        self.openapi_types = {
            'dns_name': str,
            'private_ip_address': str,
            'public_ip_address': str,
            'public_ip_address_id': str,
            'rdp_authority': str,
            'shared_public_ip_address_configuration': SharedPublicIpAddressConfiguration,
            'ssh_authority': str,
            'subnet_id': str,
            'virtual_network_id': str
        }

        self.attribute_map = {
            'dns_name': 'dnsName',
            'private_ip_address': 'privateIpAddress',
            'public_ip_address': 'publicIpAddress',
            'public_ip_address_id': 'publicIpAddressId',
            'rdp_authority': 'rdpAuthority',
            'shared_public_ip_address_configuration': 'sharedPublicIpAddressConfiguration',
            'ssh_authority': 'sshAuthority',
            'subnet_id': 'subnetId',
            'virtual_network_id': 'virtualNetworkId'
        }

        self._dns_name = dns_name
        self._private_ip_address = private_ip_address
        self._public_ip_address = public_ip_address
        self._public_ip_address_id = public_ip_address_id
        self._rdp_authority = rdp_authority
        self._shared_public_ip_address_configuration = shared_public_ip_address_configuration
        self._ssh_authority = ssh_authority
        self._subnet_id = subnet_id
        self._virtual_network_id = virtual_network_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NetworkInterfaceProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NetworkInterfaceProperties of this NetworkInterfaceProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def dns_name(self):
        """Gets the dns_name of this NetworkInterfaceProperties.

        The DNS name.

        :return: The dns_name of this NetworkInterfaceProperties.
        :rtype: str
        """
        return self._dns_name

    @dns_name.setter
    def dns_name(self, dns_name):
        """Sets the dns_name of this NetworkInterfaceProperties.

        The DNS name.

        :param dns_name: The dns_name of this NetworkInterfaceProperties.
        :type dns_name: str
        """

        self._dns_name = dns_name

    @property
    def private_ip_address(self):
        """Gets the private_ip_address of this NetworkInterfaceProperties.

        The private IP address.

        :return: The private_ip_address of this NetworkInterfaceProperties.
        :rtype: str
        """
        return self._private_ip_address

    @private_ip_address.setter
    def private_ip_address(self, private_ip_address):
        """Sets the private_ip_address of this NetworkInterfaceProperties.

        The private IP address.

        :param private_ip_address: The private_ip_address of this NetworkInterfaceProperties.
        :type private_ip_address: str
        """

        self._private_ip_address = private_ip_address

    @property
    def public_ip_address(self):
        """Gets the public_ip_address of this NetworkInterfaceProperties.

        The public IP address.

        :return: The public_ip_address of this NetworkInterfaceProperties.
        :rtype: str
        """
        return self._public_ip_address

    @public_ip_address.setter
    def public_ip_address(self, public_ip_address):
        """Sets the public_ip_address of this NetworkInterfaceProperties.

        The public IP address.

        :param public_ip_address: The public_ip_address of this NetworkInterfaceProperties.
        :type public_ip_address: str
        """

        self._public_ip_address = public_ip_address

    @property
    def public_ip_address_id(self):
        """Gets the public_ip_address_id of this NetworkInterfaceProperties.

        The resource ID of the public IP address.

        :return: The public_ip_address_id of this NetworkInterfaceProperties.
        :rtype: str
        """
        return self._public_ip_address_id

    @public_ip_address_id.setter
    def public_ip_address_id(self, public_ip_address_id):
        """Sets the public_ip_address_id of this NetworkInterfaceProperties.

        The resource ID of the public IP address.

        :param public_ip_address_id: The public_ip_address_id of this NetworkInterfaceProperties.
        :type public_ip_address_id: str
        """

        self._public_ip_address_id = public_ip_address_id

    @property
    def rdp_authority(self):
        """Gets the rdp_authority of this NetworkInterfaceProperties.

        The RdpAuthority property is a server DNS host name or IP address followed by the service port number for RDP (Remote Desktop Protocol).

        :return: The rdp_authority of this NetworkInterfaceProperties.
        :rtype: str
        """
        return self._rdp_authority

    @rdp_authority.setter
    def rdp_authority(self, rdp_authority):
        """Sets the rdp_authority of this NetworkInterfaceProperties.

        The RdpAuthority property is a server DNS host name or IP address followed by the service port number for RDP (Remote Desktop Protocol).

        :param rdp_authority: The rdp_authority of this NetworkInterfaceProperties.
        :type rdp_authority: str
        """

        self._rdp_authority = rdp_authority

    @property
    def shared_public_ip_address_configuration(self):
        """Gets the shared_public_ip_address_configuration of this NetworkInterfaceProperties.


        :return: The shared_public_ip_address_configuration of this NetworkInterfaceProperties.
        :rtype: SharedPublicIpAddressConfiguration
        """
        return self._shared_public_ip_address_configuration

    @shared_public_ip_address_configuration.setter
    def shared_public_ip_address_configuration(self, shared_public_ip_address_configuration):
        """Sets the shared_public_ip_address_configuration of this NetworkInterfaceProperties.


        :param shared_public_ip_address_configuration: The shared_public_ip_address_configuration of this NetworkInterfaceProperties.
        :type shared_public_ip_address_configuration: SharedPublicIpAddressConfiguration
        """

        self._shared_public_ip_address_configuration = shared_public_ip_address_configuration

    @property
    def ssh_authority(self):
        """Gets the ssh_authority of this NetworkInterfaceProperties.

        The SshAuthority property is a server DNS host name or IP address followed by the service port number for SSH.

        :return: The ssh_authority of this NetworkInterfaceProperties.
        :rtype: str
        """
        return self._ssh_authority

    @ssh_authority.setter
    def ssh_authority(self, ssh_authority):
        """Sets the ssh_authority of this NetworkInterfaceProperties.

        The SshAuthority property is a server DNS host name or IP address followed by the service port number for SSH.

        :param ssh_authority: The ssh_authority of this NetworkInterfaceProperties.
        :type ssh_authority: str
        """

        self._ssh_authority = ssh_authority

    @property
    def subnet_id(self):
        """Gets the subnet_id of this NetworkInterfaceProperties.

        The resource ID of the sub net.

        :return: The subnet_id of this NetworkInterfaceProperties.
        :rtype: str
        """
        return self._subnet_id

    @subnet_id.setter
    def subnet_id(self, subnet_id):
        """Sets the subnet_id of this NetworkInterfaceProperties.

        The resource ID of the sub net.

        :param subnet_id: The subnet_id of this NetworkInterfaceProperties.
        :type subnet_id: str
        """

        self._subnet_id = subnet_id

    @property
    def virtual_network_id(self):
        """Gets the virtual_network_id of this NetworkInterfaceProperties.

        The resource ID of the virtual network.

        :return: The virtual_network_id of this NetworkInterfaceProperties.
        :rtype: str
        """
        return self._virtual_network_id

    @virtual_network_id.setter
    def virtual_network_id(self, virtual_network_id):
        """Sets the virtual_network_id of this NetworkInterfaceProperties.

        The resource ID of the virtual network.

        :param virtual_network_id: The virtual_network_id of this NetworkInterfaceProperties.
        :type virtual_network_id: str
        """

        self._virtual_network_id = virtual_network_id
