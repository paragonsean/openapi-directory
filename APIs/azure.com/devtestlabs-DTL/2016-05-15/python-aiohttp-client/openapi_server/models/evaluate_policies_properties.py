# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EvaluatePoliciesProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, fact_data: str=None, fact_name: str=None, value_offset: str=None):
        """EvaluatePoliciesProperties - a model defined in OpenAPI

        :param fact_data: The fact_data of this EvaluatePoliciesProperties.
        :param fact_name: The fact_name of this EvaluatePoliciesProperties.
        :param value_offset: The value_offset of this EvaluatePoliciesProperties.
        """
        self.openapi_types = {
            'fact_data': str,
            'fact_name': str,
            'value_offset': str
        }

        self.attribute_map = {
            'fact_data': 'factData',
            'fact_name': 'factName',
            'value_offset': 'valueOffset'
        }

        self._fact_data = fact_data
        self._fact_name = fact_name
        self._value_offset = value_offset

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EvaluatePoliciesProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EvaluatePoliciesProperties of this EvaluatePoliciesProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def fact_data(self):
        """Gets the fact_data of this EvaluatePoliciesProperties.

        The fact data.

        :return: The fact_data of this EvaluatePoliciesProperties.
        :rtype: str
        """
        return self._fact_data

    @fact_data.setter
    def fact_data(self, fact_data):
        """Sets the fact_data of this EvaluatePoliciesProperties.

        The fact data.

        :param fact_data: The fact_data of this EvaluatePoliciesProperties.
        :type fact_data: str
        """

        self._fact_data = fact_data

    @property
    def fact_name(self):
        """Gets the fact_name of this EvaluatePoliciesProperties.

        The fact name.

        :return: The fact_name of this EvaluatePoliciesProperties.
        :rtype: str
        """
        return self._fact_name

    @fact_name.setter
    def fact_name(self, fact_name):
        """Sets the fact_name of this EvaluatePoliciesProperties.

        The fact name.

        :param fact_name: The fact_name of this EvaluatePoliciesProperties.
        :type fact_name: str
        """

        self._fact_name = fact_name

    @property
    def value_offset(self):
        """Gets the value_offset of this EvaluatePoliciesProperties.

        The value offset.

        :return: The value_offset of this EvaluatePoliciesProperties.
        :rtype: str
        """
        return self._value_offset

    @value_offset.setter
    def value_offset(self, value_offset):
        """Sets the value_offset of this EvaluatePoliciesProperties.

        The value offset.

        :param value_offset: The value_offset of this EvaluatePoliciesProperties.
        :type value_offset: str
        """

        self._value_offset = value_offset
