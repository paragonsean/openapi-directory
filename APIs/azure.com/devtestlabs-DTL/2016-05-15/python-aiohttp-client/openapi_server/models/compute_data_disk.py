# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ComputeDataDisk(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, disk_size_gi_b: int=None, disk_uri: str=None, managed_disk_id: str=None, name: str=None):
        """ComputeDataDisk - a model defined in OpenAPI

        :param disk_size_gi_b: The disk_size_gi_b of this ComputeDataDisk.
        :param disk_uri: The disk_uri of this ComputeDataDisk.
        :param managed_disk_id: The managed_disk_id of this ComputeDataDisk.
        :param name: The name of this ComputeDataDisk.
        """
        self.openapi_types = {
            'disk_size_gi_b': int,
            'disk_uri': str,
            'managed_disk_id': str,
            'name': str
        }

        self.attribute_map = {
            'disk_size_gi_b': 'diskSizeGiB',
            'disk_uri': 'diskUri',
            'managed_disk_id': 'managedDiskId',
            'name': 'name'
        }

        self._disk_size_gi_b = disk_size_gi_b
        self._disk_uri = disk_uri
        self._managed_disk_id = managed_disk_id
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ComputeDataDisk':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ComputeDataDisk of this ComputeDataDisk.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def disk_size_gi_b(self):
        """Gets the disk_size_gi_b of this ComputeDataDisk.

        Gets data disk size in GiB.

        :return: The disk_size_gi_b of this ComputeDataDisk.
        :rtype: int
        """
        return self._disk_size_gi_b

    @disk_size_gi_b.setter
    def disk_size_gi_b(self, disk_size_gi_b):
        """Sets the disk_size_gi_b of this ComputeDataDisk.

        Gets data disk size in GiB.

        :param disk_size_gi_b: The disk_size_gi_b of this ComputeDataDisk.
        :type disk_size_gi_b: int
        """

        self._disk_size_gi_b = disk_size_gi_b

    @property
    def disk_uri(self):
        """Gets the disk_uri of this ComputeDataDisk.

        When backed by a blob, the URI of underlying blob.

        :return: The disk_uri of this ComputeDataDisk.
        :rtype: str
        """
        return self._disk_uri

    @disk_uri.setter
    def disk_uri(self, disk_uri):
        """Sets the disk_uri of this ComputeDataDisk.

        When backed by a blob, the URI of underlying blob.

        :param disk_uri: The disk_uri of this ComputeDataDisk.
        :type disk_uri: str
        """

        self._disk_uri = disk_uri

    @property
    def managed_disk_id(self):
        """Gets the managed_disk_id of this ComputeDataDisk.

        When backed by managed disk, this is the ID of the compute disk resource.

        :return: The managed_disk_id of this ComputeDataDisk.
        :rtype: str
        """
        return self._managed_disk_id

    @managed_disk_id.setter
    def managed_disk_id(self, managed_disk_id):
        """Sets the managed_disk_id of this ComputeDataDisk.

        When backed by managed disk, this is the ID of the compute disk resource.

        :param managed_disk_id: The managed_disk_id of this ComputeDataDisk.
        :type managed_disk_id: str
        """

        self._managed_disk_id = managed_disk_id

    @property
    def name(self):
        """Gets the name of this ComputeDataDisk.

        Gets data disk name.

        :return: The name of this ComputeDataDisk.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ComputeDataDisk.

        Gets data disk name.

        :param name: The name of this ComputeDataDisk.
        :type name: str
        """

        self._name = name
