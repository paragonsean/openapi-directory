# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.artifact_install_properties import ArtifactInstallProperties
from openapi_server import util


class ApplyArtifactsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, artifacts: List[ArtifactInstallProperties]=None):
        """ApplyArtifactsRequest - a model defined in OpenAPI

        :param artifacts: The artifacts of this ApplyArtifactsRequest.
        """
        self.openapi_types = {
            'artifacts': List[ArtifactInstallProperties]
        }

        self.attribute_map = {
            'artifacts': 'artifacts'
        }

        self._artifacts = artifacts

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApplyArtifactsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ApplyArtifactsRequest of this ApplyArtifactsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def artifacts(self):
        """Gets the artifacts of this ApplyArtifactsRequest.

        The list of artifacts to apply.

        :return: The artifacts of this ApplyArtifactsRequest.
        :rtype: List[ArtifactInstallProperties]
        """
        return self._artifacts

    @artifacts.setter
    def artifacts(self, artifacts):
        """Sets the artifacts of this ApplyArtifactsRequest.

        The list of artifacts to apply.

        :param artifacts: The artifacts of this ApplyArtifactsRequest.
        :type artifacts: List[ArtifactInstallProperties]
        """

        self._artifacts = artifacts
