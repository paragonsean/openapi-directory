/**
 * DevTestLabsClient
 * The DevTest Labs Client.
 *
 * The version of the OpenAPI document: 2016-05-15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Event model module.
 * @module model/Event
 * @version 2016-05-15
 */
class Event {
    /**
     * Constructs a new <code>Event</code>.
     * An event to be notified for.
     * @alias module:model/Event
     */
    constructor() { 
        
        Event.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Event</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Event} obj Optional instance to populate.
     * @return {module:model/Event} The populated <code>Event</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Event();

            if (data.hasOwnProperty('eventName')) {
                obj['eventName'] = ApiClient.convertToType(data['eventName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Event</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Event</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['eventName'] && !(typeof data['eventName'] === 'string' || data['eventName'] instanceof String)) {
            throw new Error("Expected the field `eventName` to be a primitive type in the JSON string but got " + data['eventName']);
        }

        return true;
    }


}



/**
 * The event type for which this notification is enabled (i.e. AutoShutdown, Cost)
 * @member {module:model/Event.EventNameEnum} eventName
 */
Event.prototype['eventName'] = undefined;





/**
 * Allowed values for the <code>eventName</code> property.
 * @enum {String}
 * @readonly
 */
Event['EventNameEnum'] = {

    /**
     * value: "AutoShutdown"
     * @const
     */
    "AutoShutdown": "AutoShutdown",

    /**
     * value: "Cost"
     * @const
     */
    "Cost": "Cost"
};



export default Event;

