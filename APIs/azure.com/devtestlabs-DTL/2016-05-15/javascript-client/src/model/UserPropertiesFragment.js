/**
 * DevTestLabsClient
 * The DevTest Labs Client.
 *
 * The version of the OpenAPI document: 2016-05-15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import UserIdentityFragment from './UserIdentityFragment';
import UserSecretStoreFragment from './UserSecretStoreFragment';

/**
 * The UserPropertiesFragment model module.
 * @module model/UserPropertiesFragment
 * @version 2016-05-15
 */
class UserPropertiesFragment {
    /**
     * Constructs a new <code>UserPropertiesFragment</code>.
     * Properties of a lab user profile.
     * @alias module:model/UserPropertiesFragment
     */
    constructor() { 
        
        UserPropertiesFragment.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UserPropertiesFragment</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UserPropertiesFragment} obj Optional instance to populate.
     * @return {module:model/UserPropertiesFragment} The populated <code>UserPropertiesFragment</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UserPropertiesFragment();

            if (data.hasOwnProperty('identity')) {
                obj['identity'] = UserIdentityFragment.constructFromObject(data['identity']);
            }
            if (data.hasOwnProperty('provisioningState')) {
                obj['provisioningState'] = ApiClient.convertToType(data['provisioningState'], 'String');
            }
            if (data.hasOwnProperty('secretStore')) {
                obj['secretStore'] = UserSecretStoreFragment.constructFromObject(data['secretStore']);
            }
            if (data.hasOwnProperty('uniqueIdentifier')) {
                obj['uniqueIdentifier'] = ApiClient.convertToType(data['uniqueIdentifier'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UserPropertiesFragment</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UserPropertiesFragment</code>.
     */
    static validateJSON(data) {
        // validate the optional field `identity`
        if (data['identity']) { // data not null
          UserIdentityFragment.validateJSON(data['identity']);
        }
        // ensure the json data is a string
        if (data['provisioningState'] && !(typeof data['provisioningState'] === 'string' || data['provisioningState'] instanceof String)) {
            throw new Error("Expected the field `provisioningState` to be a primitive type in the JSON string but got " + data['provisioningState']);
        }
        // validate the optional field `secretStore`
        if (data['secretStore']) { // data not null
          UserSecretStoreFragment.validateJSON(data['secretStore']);
        }
        // ensure the json data is a string
        if (data['uniqueIdentifier'] && !(typeof data['uniqueIdentifier'] === 'string' || data['uniqueIdentifier'] instanceof String)) {
            throw new Error("Expected the field `uniqueIdentifier` to be a primitive type in the JSON string but got " + data['uniqueIdentifier']);
        }

        return true;
    }


}



/**
 * @member {module:model/UserIdentityFragment} identity
 */
UserPropertiesFragment.prototype['identity'] = undefined;

/**
 * The provisioning status of the resource.
 * @member {String} provisioningState
 */
UserPropertiesFragment.prototype['provisioningState'] = undefined;

/**
 * @member {module:model/UserSecretStoreFragment} secretStore
 */
UserPropertiesFragment.prototype['secretStore'] = undefined;

/**
 * The unique immutable identifier of a resource (Guid).
 * @member {String} uniqueIdentifier
 */
UserPropertiesFragment.prototype['uniqueIdentifier'] = undefined;






export default UserPropertiesFragment;

