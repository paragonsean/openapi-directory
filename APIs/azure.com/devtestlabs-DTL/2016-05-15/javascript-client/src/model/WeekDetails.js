/**
 * DevTestLabsClient
 * The DevTest Labs Client.
 *
 * The version of the OpenAPI document: 2016-05-15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The WeekDetails model module.
 * @module model/WeekDetails
 * @version 2016-05-15
 */
class WeekDetails {
    /**
     * Constructs a new <code>WeekDetails</code>.
     * Properties of a weekly schedule.
     * @alias module:model/WeekDetails
     */
    constructor() { 
        
        WeekDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>WeekDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WeekDetails} obj Optional instance to populate.
     * @return {module:model/WeekDetails} The populated <code>WeekDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WeekDetails();

            if (data.hasOwnProperty('time')) {
                obj['time'] = ApiClient.convertToType(data['time'], 'String');
            }
            if (data.hasOwnProperty('weekdays')) {
                obj['weekdays'] = ApiClient.convertToType(data['weekdays'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WeekDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WeekDetails</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['time'] && !(typeof data['time'] === 'string' || data['time'] instanceof String)) {
            throw new Error("Expected the field `time` to be a primitive type in the JSON string but got " + data['time']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['weekdays'])) {
            throw new Error("Expected the field `weekdays` to be an array in the JSON data but got " + data['weekdays']);
        }

        return true;
    }


}



/**
 * The time of the day the schedule will occur.
 * @member {String} time
 */
WeekDetails.prototype['time'] = undefined;

/**
 * The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).
 * @member {Array.<String>} weekdays
 */
WeekDetails.prototype['weekdays'] = undefined;






export default WeekDetails;

