/**
 * DevTestLabsClient
 * The DevTest Labs Client.
 *
 * The version of the OpenAPI document: 2016-05-15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.DevTestLabsClient);
  }
}(this, function(expect, DevTestLabsClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new DevTestLabsClient.LabVirtualMachineProperties();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('LabVirtualMachineProperties', function() {
    it('should create an instance of LabVirtualMachineProperties', function() {
      // uncomment below and update the code to test LabVirtualMachineProperties
      //var instance = new DevTestLabsClient.LabVirtualMachineProperties();
      //expect(instance).to.be.a(DevTestLabsClient.LabVirtualMachineProperties);
    });

    it('should have the property allowClaim (base name: "allowClaim")', function() {
      // uncomment below and update the code to test the property allowClaim
      //var instance = new DevTestLabsClient.LabVirtualMachineProperties();
      //expect(instance).to.be();
    });

    it('should have the property applicableSchedule (base name: "applicableSchedule")', function() {
      // uncomment below and update the code to test the property applicableSchedule
      //var instance = new DevTestLabsClient.LabVirtualMachineProperties();
      //expect(instance).to.be();
    });

    it('should have the property artifactDeploymentStatus (base name: "artifactDeploymentStatus")', function() {
      // uncomment below and update the code to test the property artifactDeploymentStatus
      //var instance = new DevTestLabsClient.LabVirtualMachineProperties();
      //expect(instance).to.be();
    });

    it('should have the property artifacts (base name: "artifacts")', function() {
      // uncomment below and update the code to test the property artifacts
      //var instance = new DevTestLabsClient.LabVirtualMachineProperties();
      //expect(instance).to.be();
    });

    it('should have the property computeId (base name: "computeId")', function() {
      // uncomment below and update the code to test the property computeId
      //var instance = new DevTestLabsClient.LabVirtualMachineProperties();
      //expect(instance).to.be();
    });

    it('should have the property computeVm (base name: "computeVm")', function() {
      // uncomment below and update the code to test the property computeVm
      //var instance = new DevTestLabsClient.LabVirtualMachineProperties();
      //expect(instance).to.be();
    });

    it('should have the property createdByUser (base name: "createdByUser")', function() {
      // uncomment below and update the code to test the property createdByUser
      //var instance = new DevTestLabsClient.LabVirtualMachineProperties();
      //expect(instance).to.be();
    });

    it('should have the property createdByUserId (base name: "createdByUserId")', function() {
      // uncomment below and update the code to test the property createdByUserId
      //var instance = new DevTestLabsClient.LabVirtualMachineProperties();
      //expect(instance).to.be();
    });

    it('should have the property createdDate (base name: "createdDate")', function() {
      // uncomment below and update the code to test the property createdDate
      //var instance = new DevTestLabsClient.LabVirtualMachineProperties();
      //expect(instance).to.be();
    });

    it('should have the property customImageId (base name: "customImageId")', function() {
      // uncomment below and update the code to test the property customImageId
      //var instance = new DevTestLabsClient.LabVirtualMachineProperties();
      //expect(instance).to.be();
    });

    it('should have the property disallowPublicIpAddress (base name: "disallowPublicIpAddress")', function() {
      // uncomment below and update the code to test the property disallowPublicIpAddress
      //var instance = new DevTestLabsClient.LabVirtualMachineProperties();
      //expect(instance).to.be();
    });

    it('should have the property environmentId (base name: "environmentId")', function() {
      // uncomment below and update the code to test the property environmentId
      //var instance = new DevTestLabsClient.LabVirtualMachineProperties();
      //expect(instance).to.be();
    });

    it('should have the property expirationDate (base name: "expirationDate")', function() {
      // uncomment below and update the code to test the property expirationDate
      //var instance = new DevTestLabsClient.LabVirtualMachineProperties();
      //expect(instance).to.be();
    });

    it('should have the property fqdn (base name: "fqdn")', function() {
      // uncomment below and update the code to test the property fqdn
      //var instance = new DevTestLabsClient.LabVirtualMachineProperties();
      //expect(instance).to.be();
    });

    it('should have the property galleryImageReference (base name: "galleryImageReference")', function() {
      // uncomment below and update the code to test the property galleryImageReference
      //var instance = new DevTestLabsClient.LabVirtualMachineProperties();
      //expect(instance).to.be();
    });

    it('should have the property isAuthenticationWithSshKey (base name: "isAuthenticationWithSshKey")', function() {
      // uncomment below and update the code to test the property isAuthenticationWithSshKey
      //var instance = new DevTestLabsClient.LabVirtualMachineProperties();
      //expect(instance).to.be();
    });

    it('should have the property labSubnetName (base name: "labSubnetName")', function() {
      // uncomment below and update the code to test the property labSubnetName
      //var instance = new DevTestLabsClient.LabVirtualMachineProperties();
      //expect(instance).to.be();
    });

    it('should have the property labVirtualNetworkId (base name: "labVirtualNetworkId")', function() {
      // uncomment below and update the code to test the property labVirtualNetworkId
      //var instance = new DevTestLabsClient.LabVirtualMachineProperties();
      //expect(instance).to.be();
    });

    it('should have the property networkInterface (base name: "networkInterface")', function() {
      // uncomment below and update the code to test the property networkInterface
      //var instance = new DevTestLabsClient.LabVirtualMachineProperties();
      //expect(instance).to.be();
    });

    it('should have the property notes (base name: "notes")', function() {
      // uncomment below and update the code to test the property notes
      //var instance = new DevTestLabsClient.LabVirtualMachineProperties();
      //expect(instance).to.be();
    });

    it('should have the property osType (base name: "osType")', function() {
      // uncomment below and update the code to test the property osType
      //var instance = new DevTestLabsClient.LabVirtualMachineProperties();
      //expect(instance).to.be();
    });

    it('should have the property ownerObjectId (base name: "ownerObjectId")', function() {
      // uncomment below and update the code to test the property ownerObjectId
      //var instance = new DevTestLabsClient.LabVirtualMachineProperties();
      //expect(instance).to.be();
    });

    it('should have the property ownerUserPrincipalName (base name: "ownerUserPrincipalName")', function() {
      // uncomment below and update the code to test the property ownerUserPrincipalName
      //var instance = new DevTestLabsClient.LabVirtualMachineProperties();
      //expect(instance).to.be();
    });

    it('should have the property password (base name: "password")', function() {
      // uncomment below and update the code to test the property password
      //var instance = new DevTestLabsClient.LabVirtualMachineProperties();
      //expect(instance).to.be();
    });

    it('should have the property provisioningState (base name: "provisioningState")', function() {
      // uncomment below and update the code to test the property provisioningState
      //var instance = new DevTestLabsClient.LabVirtualMachineProperties();
      //expect(instance).to.be();
    });

    it('should have the property size (base name: "size")', function() {
      // uncomment below and update the code to test the property size
      //var instance = new DevTestLabsClient.LabVirtualMachineProperties();
      //expect(instance).to.be();
    });

    it('should have the property sshKey (base name: "sshKey")', function() {
      // uncomment below and update the code to test the property sshKey
      //var instance = new DevTestLabsClient.LabVirtualMachineProperties();
      //expect(instance).to.be();
    });

    it('should have the property storageType (base name: "storageType")', function() {
      // uncomment below and update the code to test the property storageType
      //var instance = new DevTestLabsClient.LabVirtualMachineProperties();
      //expect(instance).to.be();
    });

    it('should have the property uniqueIdentifier (base name: "uniqueIdentifier")', function() {
      // uncomment below and update the code to test the property uniqueIdentifier
      //var instance = new DevTestLabsClient.LabVirtualMachineProperties();
      //expect(instance).to.be();
    });

    it('should have the property userName (base name: "userName")', function() {
      // uncomment below and update the code to test the property userName
      //var instance = new DevTestLabsClient.LabVirtualMachineProperties();
      //expect(instance).to.be();
    });

    it('should have the property virtualMachineCreationSource (base name: "virtualMachineCreationSource")', function() {
      // uncomment below and update the code to test the property virtualMachineCreationSource
      //var instance = new DevTestLabsClient.LabVirtualMachineProperties();
      //expect(instance).to.be();
    });

  });

}));
