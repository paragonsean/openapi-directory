/**
 * DevTestLabsClient
 * The DevTest Labs Client.
 *
 * The version of the OpenAPI document: 2016-05-15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.DevTestLabsClient);
  }
}(this, function(expect, DevTestLabsClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new DevTestLabsClient.LabsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('LabsApi', function() {
    describe('labsClaimAnyVm', function() {
      it('should call labsClaimAnyVm successfully', function(done) {
        //uncomment below and update the code to test labsClaimAnyVm
        //instance.labsClaimAnyVm(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('labsCreateEnvironment', function() {
      it('should call labsCreateEnvironment successfully', function(done) {
        //uncomment below and update the code to test labsCreateEnvironment
        //instance.labsCreateEnvironment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('labsCreateOrUpdate', function() {
      it('should call labsCreateOrUpdate successfully', function(done) {
        //uncomment below and update the code to test labsCreateOrUpdate
        //instance.labsCreateOrUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('labsDelete', function() {
      it('should call labsDelete successfully', function(done) {
        //uncomment below and update the code to test labsDelete
        //instance.labsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('labsExportResourceUsage', function() {
      it('should call labsExportResourceUsage successfully', function(done) {
        //uncomment below and update the code to test labsExportResourceUsage
        //instance.labsExportResourceUsage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('labsGenerateUploadUri', function() {
      it('should call labsGenerateUploadUri successfully', function(done) {
        //uncomment below and update the code to test labsGenerateUploadUri
        //instance.labsGenerateUploadUri(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('labsGet', function() {
      it('should call labsGet successfully', function(done) {
        //uncomment below and update the code to test labsGet
        //instance.labsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('labsListByResourceGroup', function() {
      it('should call labsListByResourceGroup successfully', function(done) {
        //uncomment below and update the code to test labsListByResourceGroup
        //instance.labsListByResourceGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('labsListBySubscription', function() {
      it('should call labsListBySubscription successfully', function(done) {
        //uncomment below and update the code to test labsListBySubscription
        //instance.labsListBySubscription(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('labsListVhds', function() {
      it('should call labsListVhds successfully', function(done) {
        //uncomment below and update the code to test labsListVhds
        //instance.labsListVhds(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('labsUpdate', function() {
      it('should call labsUpdate successfully', function(done) {
        //uncomment below and update the code to test labsUpdate
        //instance.labsUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
