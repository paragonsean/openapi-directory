/*
 * DevTestLabsClient
 * The DevTest Labs Client.
 *
 * The version of the OpenAPI document: 2016-05-15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CloudError;
import org.openapitools.client.model.ResponseWithContinuationServiceRunner;
import org.openapitools.client.model.ServiceRunner;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ServiceRunnersApi
 */
@Disabled
public class ServiceRunnersApiTest {

    private final ServiceRunnersApi api = new ServiceRunnersApi();

    /**
     * Create or replace an existing Service runner.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void serviceRunnersCreateOrUpdateTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String labName = null;
        String name = null;
        String apiVersion = null;
        ServiceRunner serviceRunner = null;
        ServiceRunner response = api.serviceRunnersCreateOrUpdate(subscriptionId, resourceGroupName, labName, name, apiVersion, serviceRunner);
        // TODO: test validations
    }

    /**
     * Delete service runner.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void serviceRunnersDeleteTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String labName = null;
        String name = null;
        String apiVersion = null;
        api.serviceRunnersDelete(subscriptionId, resourceGroupName, labName, name, apiVersion);
        // TODO: test validations
    }

    /**
     * Get service runner.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void serviceRunnersGetTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String labName = null;
        String name = null;
        String apiVersion = null;
        ServiceRunner response = api.serviceRunnersGet(subscriptionId, resourceGroupName, labName, name, apiVersion);
        // TODO: test validations
    }

    /**
     * List service runners in a given lab.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void serviceRunnersListTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String labName = null;
        String apiVersion = null;
        String $filter = null;
        Integer $top = null;
        String $orderby = null;
        ResponseWithContinuationServiceRunner response = api.serviceRunnersList(subscriptionId, resourceGroupName, labName, apiVersion, $filter, $top, $orderby);
        // TODO: test validations
    }

}
