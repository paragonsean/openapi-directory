/*
 * DevTestLabsClient
 * The DevTest Labs Client.
 *
 * The version of the OpenAPI document: 2016-05-15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CloudError;
import org.openapitools.client.model.ResponseWithContinuationUser;
import org.openapitools.client.model.User;
import org.openapitools.client.model.UserFragment;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for UsersApi
 */
@Disabled
public class UsersApiTest {

    private final UsersApi api = new UsersApi();

    /**
     * Create or replace an existing user profile.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void usersCreateOrUpdateTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String labName = null;
        String name = null;
        String apiVersion = null;
        User user = null;
        User response = api.usersCreateOrUpdate(subscriptionId, resourceGroupName, labName, name, apiVersion, user);
        // TODO: test validations
    }

    /**
     * Delete user profile. This operation can take a while to complete.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void usersDeleteTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String labName = null;
        String name = null;
        String apiVersion = null;
        api.usersDelete(subscriptionId, resourceGroupName, labName, name, apiVersion);
        // TODO: test validations
    }

    /**
     * Get user profile.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void usersGetTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String labName = null;
        String name = null;
        String apiVersion = null;
        String $expand = null;
        User response = api.usersGet(subscriptionId, resourceGroupName, labName, name, apiVersion, $expand);
        // TODO: test validations
    }

    /**
     * List user profiles in a given lab.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void usersListTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String labName = null;
        String apiVersion = null;
        String $expand = null;
        String $filter = null;
        Integer $top = null;
        String $orderby = null;
        ResponseWithContinuationUser response = api.usersList(subscriptionId, resourceGroupName, labName, apiVersion, $expand, $filter, $top, $orderby);
        // TODO: test validations
    }

    /**
     * Modify properties of user profiles.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void usersUpdateTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String labName = null;
        String name = null;
        String apiVersion = null;
        UserFragment user = null;
        User response = api.usersUpdate(subscriptionId, resourceGroupName, labName, name, apiVersion, user);
        // TODO: test validations
    }

}
