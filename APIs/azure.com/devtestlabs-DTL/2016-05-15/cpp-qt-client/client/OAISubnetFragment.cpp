/**
 * DevTestLabsClient
 * The DevTest Labs Client.
 *
 * The version of the OpenAPI document: 2016-05-15
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISubnetFragment.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISubnetFragment::OAISubnetFragment(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISubnetFragment::OAISubnetFragment() {
    this->initializeModel();
}

OAISubnetFragment::~OAISubnetFragment() {}

void OAISubnetFragment::initializeModel() {

    m_allow_public_ip_isSet = false;
    m_allow_public_ip_isValid = false;

    m_lab_subnet_name_isSet = false;
    m_lab_subnet_name_isValid = false;

    m_resource_id_isSet = false;
    m_resource_id_isValid = false;
}

void OAISubnetFragment::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISubnetFragment::fromJsonObject(QJsonObject json) {

    m_allow_public_ip_isValid = ::OpenAPI::fromJsonValue(m_allow_public_ip, json[QString("allowPublicIp")]);
    m_allow_public_ip_isSet = !json[QString("allowPublicIp")].isNull() && m_allow_public_ip_isValid;

    m_lab_subnet_name_isValid = ::OpenAPI::fromJsonValue(m_lab_subnet_name, json[QString("labSubnetName")]);
    m_lab_subnet_name_isSet = !json[QString("labSubnetName")].isNull() && m_lab_subnet_name_isValid;

    m_resource_id_isValid = ::OpenAPI::fromJsonValue(m_resource_id, json[QString("resourceId")]);
    m_resource_id_isSet = !json[QString("resourceId")].isNull() && m_resource_id_isValid;
}

QString OAISubnetFragment::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISubnetFragment::asJsonObject() const {
    QJsonObject obj;
    if (m_allow_public_ip_isSet) {
        obj.insert(QString("allowPublicIp"), ::OpenAPI::toJsonValue(m_allow_public_ip));
    }
    if (m_lab_subnet_name_isSet) {
        obj.insert(QString("labSubnetName"), ::OpenAPI::toJsonValue(m_lab_subnet_name));
    }
    if (m_resource_id_isSet) {
        obj.insert(QString("resourceId"), ::OpenAPI::toJsonValue(m_resource_id));
    }
    return obj;
}

QString OAISubnetFragment::getAllowPublicIp() const {
    return m_allow_public_ip;
}
void OAISubnetFragment::setAllowPublicIp(const QString &allow_public_ip) {
    m_allow_public_ip = allow_public_ip;
    m_allow_public_ip_isSet = true;
}

bool OAISubnetFragment::is_allow_public_ip_Set() const{
    return m_allow_public_ip_isSet;
}

bool OAISubnetFragment::is_allow_public_ip_Valid() const{
    return m_allow_public_ip_isValid;
}

QString OAISubnetFragment::getLabSubnetName() const {
    return m_lab_subnet_name;
}
void OAISubnetFragment::setLabSubnetName(const QString &lab_subnet_name) {
    m_lab_subnet_name = lab_subnet_name;
    m_lab_subnet_name_isSet = true;
}

bool OAISubnetFragment::is_lab_subnet_name_Set() const{
    return m_lab_subnet_name_isSet;
}

bool OAISubnetFragment::is_lab_subnet_name_Valid() const{
    return m_lab_subnet_name_isValid;
}

QString OAISubnetFragment::getResourceId() const {
    return m_resource_id;
}
void OAISubnetFragment::setResourceId(const QString &resource_id) {
    m_resource_id = resource_id;
    m_resource_id_isSet = true;
}

bool OAISubnetFragment::is_resource_id_Set() const{
    return m_resource_id_isSet;
}

bool OAISubnetFragment::is_resource_id_Valid() const{
    return m_resource_id_isValid;
}

bool OAISubnetFragment::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_allow_public_ip_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_lab_subnet_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISubnetFragment::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
