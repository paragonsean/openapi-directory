/**
 * DevTestLabsClient
 * The DevTest Labs Client.
 *
 * The version of the OpenAPI document: 2016-05-15
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIArtifactDeploymentStatusProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIArtifactDeploymentStatusProperties::OAIArtifactDeploymentStatusProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIArtifactDeploymentStatusProperties::OAIArtifactDeploymentStatusProperties() {
    this->initializeModel();
}

OAIArtifactDeploymentStatusProperties::~OAIArtifactDeploymentStatusProperties() {}

void OAIArtifactDeploymentStatusProperties::initializeModel() {

    m_artifacts_applied_isSet = false;
    m_artifacts_applied_isValid = false;

    m_deployment_status_isSet = false;
    m_deployment_status_isValid = false;

    m_total_artifacts_isSet = false;
    m_total_artifacts_isValid = false;
}

void OAIArtifactDeploymentStatusProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIArtifactDeploymentStatusProperties::fromJsonObject(QJsonObject json) {

    m_artifacts_applied_isValid = ::OpenAPI::fromJsonValue(m_artifacts_applied, json[QString("artifactsApplied")]);
    m_artifacts_applied_isSet = !json[QString("artifactsApplied")].isNull() && m_artifacts_applied_isValid;

    m_deployment_status_isValid = ::OpenAPI::fromJsonValue(m_deployment_status, json[QString("deploymentStatus")]);
    m_deployment_status_isSet = !json[QString("deploymentStatus")].isNull() && m_deployment_status_isValid;

    m_total_artifacts_isValid = ::OpenAPI::fromJsonValue(m_total_artifacts, json[QString("totalArtifacts")]);
    m_total_artifacts_isSet = !json[QString("totalArtifacts")].isNull() && m_total_artifacts_isValid;
}

QString OAIArtifactDeploymentStatusProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIArtifactDeploymentStatusProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_artifacts_applied_isSet) {
        obj.insert(QString("artifactsApplied"), ::OpenAPI::toJsonValue(m_artifacts_applied));
    }
    if (m_deployment_status_isSet) {
        obj.insert(QString("deploymentStatus"), ::OpenAPI::toJsonValue(m_deployment_status));
    }
    if (m_total_artifacts_isSet) {
        obj.insert(QString("totalArtifacts"), ::OpenAPI::toJsonValue(m_total_artifacts));
    }
    return obj;
}

qint32 OAIArtifactDeploymentStatusProperties::getArtifactsApplied() const {
    return m_artifacts_applied;
}
void OAIArtifactDeploymentStatusProperties::setArtifactsApplied(const qint32 &artifacts_applied) {
    m_artifacts_applied = artifacts_applied;
    m_artifacts_applied_isSet = true;
}

bool OAIArtifactDeploymentStatusProperties::is_artifacts_applied_Set() const{
    return m_artifacts_applied_isSet;
}

bool OAIArtifactDeploymentStatusProperties::is_artifacts_applied_Valid() const{
    return m_artifacts_applied_isValid;
}

QString OAIArtifactDeploymentStatusProperties::getDeploymentStatus() const {
    return m_deployment_status;
}
void OAIArtifactDeploymentStatusProperties::setDeploymentStatus(const QString &deployment_status) {
    m_deployment_status = deployment_status;
    m_deployment_status_isSet = true;
}

bool OAIArtifactDeploymentStatusProperties::is_deployment_status_Set() const{
    return m_deployment_status_isSet;
}

bool OAIArtifactDeploymentStatusProperties::is_deployment_status_Valid() const{
    return m_deployment_status_isValid;
}

qint32 OAIArtifactDeploymentStatusProperties::getTotalArtifacts() const {
    return m_total_artifacts;
}
void OAIArtifactDeploymentStatusProperties::setTotalArtifacts(const qint32 &total_artifacts) {
    m_total_artifacts = total_artifacts;
    m_total_artifacts_isSet = true;
}

bool OAIArtifactDeploymentStatusProperties::is_total_artifacts_Set() const{
    return m_total_artifacts_isSet;
}

bool OAIArtifactDeploymentStatusProperties::is_total_artifacts_Valid() const{
    return m_total_artifacts_isValid;
}

bool OAIArtifactDeploymentStatusProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_artifacts_applied_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_deployment_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_artifacts_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIArtifactDeploymentStatusProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
