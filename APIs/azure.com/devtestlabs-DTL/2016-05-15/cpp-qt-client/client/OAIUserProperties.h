/**
 * DevTestLabsClient
 * The DevTest Labs Client.
 *
 * The version of the OpenAPI document: 2016-05-15
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUserProperties.h
 *
 * Properties of a lab user profile.
 */

#ifndef OAIUserProperties_H
#define OAIUserProperties_H

#include <QJsonObject>

#include "OAIUserIdentity.h"
#include "OAIUserSecretStore.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUserIdentity;
class OAIUserSecretStore;

class OAIUserProperties : public OAIObject {
public:
    OAIUserProperties();
    OAIUserProperties(QString json);
    ~OAIUserProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getCreatedDate() const;
    void setCreatedDate(const QDateTime &created_date);
    bool is_created_date_Set() const;
    bool is_created_date_Valid() const;

    OAIUserIdentity getIdentity() const;
    void setIdentity(const OAIUserIdentity &identity);
    bool is_identity_Set() const;
    bool is_identity_Valid() const;

    QString getProvisioningState() const;
    void setProvisioningState(const QString &provisioning_state);
    bool is_provisioning_state_Set() const;
    bool is_provisioning_state_Valid() const;

    OAIUserSecretStore getSecretStore() const;
    void setSecretStore(const OAIUserSecretStore &secret_store);
    bool is_secret_store_Set() const;
    bool is_secret_store_Valid() const;

    QString getUniqueIdentifier() const;
    void setUniqueIdentifier(const QString &unique_identifier);
    bool is_unique_identifier_Set() const;
    bool is_unique_identifier_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_created_date;
    bool m_created_date_isSet;
    bool m_created_date_isValid;

    OAIUserIdentity m_identity;
    bool m_identity_isSet;
    bool m_identity_isValid;

    QString m_provisioning_state;
    bool m_provisioning_state_isSet;
    bool m_provisioning_state_isValid;

    OAIUserSecretStore m_secret_store;
    bool m_secret_store_isSet;
    bool m_secret_store_isValid;

    QString m_unique_identifier;
    bool m_unique_identifier_isSet;
    bool m_unique_identifier_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUserProperties)

#endif // OAIUserProperties_H
