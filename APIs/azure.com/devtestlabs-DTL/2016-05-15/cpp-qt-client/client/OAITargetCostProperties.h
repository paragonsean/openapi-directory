/**
 * DevTestLabsClient
 * The DevTest Labs Client.
 *
 * The version of the OpenAPI document: 2016-05-15
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITargetCostProperties.h
 *
 * Properties of a cost target.
 */

#ifndef OAITargetCostProperties_H
#define OAITargetCostProperties_H

#include <QJsonObject>

#include "OAICostThresholdProperties.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICostThresholdProperties;

class OAITargetCostProperties : public OAIObject {
public:
    OAITargetCostProperties();
    OAITargetCostProperties(QString json);
    ~OAITargetCostProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAICostThresholdProperties> getCostThresholds() const;
    void setCostThresholds(const QList<OAICostThresholdProperties> &cost_thresholds);
    bool is_cost_thresholds_Set() const;
    bool is_cost_thresholds_Valid() const;

    QDateTime getCycleEndDateTime() const;
    void setCycleEndDateTime(const QDateTime &cycle_end_date_time);
    bool is_cycle_end_date_time_Set() const;
    bool is_cycle_end_date_time_Valid() const;

    QDateTime getCycleStartDateTime() const;
    void setCycleStartDateTime(const QDateTime &cycle_start_date_time);
    bool is_cycle_start_date_time_Set() const;
    bool is_cycle_start_date_time_Valid() const;

    QString getCycleType() const;
    void setCycleType(const QString &cycle_type);
    bool is_cycle_type_Set() const;
    bool is_cycle_type_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    qint32 getTarget() const;
    void setTarget(const qint32 &target);
    bool is_target_Set() const;
    bool is_target_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAICostThresholdProperties> m_cost_thresholds;
    bool m_cost_thresholds_isSet;
    bool m_cost_thresholds_isValid;

    QDateTime m_cycle_end_date_time;
    bool m_cycle_end_date_time_isSet;
    bool m_cycle_end_date_time_isValid;

    QDateTime m_cycle_start_date_time;
    bool m_cycle_start_date_time_isSet;
    bool m_cycle_start_date_time_isValid;

    QString m_cycle_type;
    bool m_cycle_type_isSet;
    bool m_cycle_type_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    qint32 m_target;
    bool m_target_isSet;
    bool m_target_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITargetCostProperties)

#endif // OAITargetCostProperties_H
