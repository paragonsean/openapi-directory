/**
 * DevTestLabsClient
 * The DevTest Labs Client.
 *
 * The version of the OpenAPI document: 2016-05-15
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILabCostProperties.h
 *
 * Properties of a cost item.
 */

#ifndef OAILabCostProperties_H
#define OAILabCostProperties_H

#include <QJsonObject>

#include "OAILabCostDetailsProperties.h"
#include "OAILabCostSummaryProperties.h"
#include "OAILabResourceCostProperties.h"
#include "OAITargetCostProperties.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAILabCostDetailsProperties;
class OAILabCostSummaryProperties;
class OAILabResourceCostProperties;
class OAITargetCostProperties;

class OAILabCostProperties : public OAIObject {
public:
    OAILabCostProperties();
    OAILabCostProperties(QString json);
    ~OAILabCostProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getCreatedDate() const;
    void setCreatedDate(const QDateTime &created_date);
    bool is_created_date_Set() const;
    bool is_created_date_Valid() const;

    QString getCurrencyCode() const;
    void setCurrencyCode(const QString &currency_code);
    bool is_currency_code_Set() const;
    bool is_currency_code_Valid() const;

    QDateTime getEndDateTime() const;
    void setEndDateTime(const QDateTime &end_date_time);
    bool is_end_date_time_Set() const;
    bool is_end_date_time_Valid() const;

    QList<OAILabCostDetailsProperties> getLabCostDetails() const;
    void setLabCostDetails(const QList<OAILabCostDetailsProperties> &lab_cost_details);
    bool is_lab_cost_details_Set() const;
    bool is_lab_cost_details_Valid() const;

    OAILabCostSummaryProperties getLabCostSummary() const;
    void setLabCostSummary(const OAILabCostSummaryProperties &lab_cost_summary);
    bool is_lab_cost_summary_Set() const;
    bool is_lab_cost_summary_Valid() const;

    QString getProvisioningState() const;
    void setProvisioningState(const QString &provisioning_state);
    bool is_provisioning_state_Set() const;
    bool is_provisioning_state_Valid() const;

    QList<OAILabResourceCostProperties> getResourceCosts() const;
    void setResourceCosts(const QList<OAILabResourceCostProperties> &resource_costs);
    bool is_resource_costs_Set() const;
    bool is_resource_costs_Valid() const;

    QDateTime getStartDateTime() const;
    void setStartDateTime(const QDateTime &start_date_time);
    bool is_start_date_time_Set() const;
    bool is_start_date_time_Valid() const;

    OAITargetCostProperties getTargetCost() const;
    void setTargetCost(const OAITargetCostProperties &target_cost);
    bool is_target_cost_Set() const;
    bool is_target_cost_Valid() const;

    QString getUniqueIdentifier() const;
    void setUniqueIdentifier(const QString &unique_identifier);
    bool is_unique_identifier_Set() const;
    bool is_unique_identifier_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_created_date;
    bool m_created_date_isSet;
    bool m_created_date_isValid;

    QString m_currency_code;
    bool m_currency_code_isSet;
    bool m_currency_code_isValid;

    QDateTime m_end_date_time;
    bool m_end_date_time_isSet;
    bool m_end_date_time_isValid;

    QList<OAILabCostDetailsProperties> m_lab_cost_details;
    bool m_lab_cost_details_isSet;
    bool m_lab_cost_details_isValid;

    OAILabCostSummaryProperties m_lab_cost_summary;
    bool m_lab_cost_summary_isSet;
    bool m_lab_cost_summary_isValid;

    QString m_provisioning_state;
    bool m_provisioning_state_isSet;
    bool m_provisioning_state_isValid;

    QList<OAILabResourceCostProperties> m_resource_costs;
    bool m_resource_costs_isSet;
    bool m_resource_costs_isValid;

    QDateTime m_start_date_time;
    bool m_start_date_time_isSet;
    bool m_start_date_time_isValid;

    OAITargetCostProperties m_target_cost;
    bool m_target_cost_isSet;
    bool m_target_cost_isValid;

    QString m_unique_identifier;
    bool m_unique_identifier_isSet;
    bool m_unique_identifier_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILabCostProperties)

#endif // OAILabCostProperties_H
