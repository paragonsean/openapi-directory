/**
 * DevTestLabsClient
 * The DevTest Labs Client.
 *
 * The version of the OpenAPI document: 2016-05-15
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAINotifyParameters.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAINotifyParameters::OAINotifyParameters(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAINotifyParameters::OAINotifyParameters() {
    this->initializeModel();
}

OAINotifyParameters::~OAINotifyParameters() {}

void OAINotifyParameters::initializeModel() {

    m_event_name_isSet = false;
    m_event_name_isValid = false;

    m_json_payload_isSet = false;
    m_json_payload_isValid = false;
}

void OAINotifyParameters::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAINotifyParameters::fromJsonObject(QJsonObject json) {

    m_event_name_isValid = ::OpenAPI::fromJsonValue(m_event_name, json[QString("eventName")]);
    m_event_name_isSet = !json[QString("eventName")].isNull() && m_event_name_isValid;

    m_json_payload_isValid = ::OpenAPI::fromJsonValue(m_json_payload, json[QString("jsonPayload")]);
    m_json_payload_isSet = !json[QString("jsonPayload")].isNull() && m_json_payload_isValid;
}

QString OAINotifyParameters::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAINotifyParameters::asJsonObject() const {
    QJsonObject obj;
    if (m_event_name_isSet) {
        obj.insert(QString("eventName"), ::OpenAPI::toJsonValue(m_event_name));
    }
    if (m_json_payload_isSet) {
        obj.insert(QString("jsonPayload"), ::OpenAPI::toJsonValue(m_json_payload));
    }
    return obj;
}

QString OAINotifyParameters::getEventName() const {
    return m_event_name;
}
void OAINotifyParameters::setEventName(const QString &event_name) {
    m_event_name = event_name;
    m_event_name_isSet = true;
}

bool OAINotifyParameters::is_event_name_Set() const{
    return m_event_name_isSet;
}

bool OAINotifyParameters::is_event_name_Valid() const{
    return m_event_name_isValid;
}

QString OAINotifyParameters::getJsonPayload() const {
    return m_json_payload;
}
void OAINotifyParameters::setJsonPayload(const QString &json_payload) {
    m_json_payload = json_payload;
    m_json_payload_isSet = true;
}

bool OAINotifyParameters::is_json_payload_Set() const{
    return m_json_payload_isSet;
}

bool OAINotifyParameters::is_json_payload_Valid() const{
    return m_json_payload_isValid;
}

bool OAINotifyParameters::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_event_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_json_payload_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAINotifyParameters::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
