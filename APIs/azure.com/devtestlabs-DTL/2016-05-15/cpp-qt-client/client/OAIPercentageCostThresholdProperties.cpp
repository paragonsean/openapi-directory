/**
 * DevTestLabsClient
 * The DevTest Labs Client.
 *
 * The version of the OpenAPI document: 2016-05-15
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPercentageCostThresholdProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPercentageCostThresholdProperties::OAIPercentageCostThresholdProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPercentageCostThresholdProperties::OAIPercentageCostThresholdProperties() {
    this->initializeModel();
}

OAIPercentageCostThresholdProperties::~OAIPercentageCostThresholdProperties() {}

void OAIPercentageCostThresholdProperties::initializeModel() {

    m_threshold_value_isSet = false;
    m_threshold_value_isValid = false;
}

void OAIPercentageCostThresholdProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPercentageCostThresholdProperties::fromJsonObject(QJsonObject json) {

    m_threshold_value_isValid = ::OpenAPI::fromJsonValue(m_threshold_value, json[QString("thresholdValue")]);
    m_threshold_value_isSet = !json[QString("thresholdValue")].isNull() && m_threshold_value_isValid;
}

QString OAIPercentageCostThresholdProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPercentageCostThresholdProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_threshold_value_isSet) {
        obj.insert(QString("thresholdValue"), ::OpenAPI::toJsonValue(m_threshold_value));
    }
    return obj;
}

double OAIPercentageCostThresholdProperties::getThresholdValue() const {
    return m_threshold_value;
}
void OAIPercentageCostThresholdProperties::setThresholdValue(const double &threshold_value) {
    m_threshold_value = threshold_value;
    m_threshold_value_isSet = true;
}

bool OAIPercentageCostThresholdProperties::is_threshold_value_Set() const{
    return m_threshold_value_isSet;
}

bool OAIPercentageCostThresholdProperties::is_threshold_value_Valid() const{
    return m_threshold_value_isValid;
}

bool OAIPercentageCostThresholdProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_threshold_value_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPercentageCostThresholdProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
