/**
 * DevTestLabsClient
 * The DevTest Labs Client.
 *
 * The version of the OpenAPI document: 2016-05-15
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILabResourceCostProperties.h
 *
 * The properties of a resource cost item.
 */

#ifndef OAILabResourceCostProperties_H
#define OAILabResourceCostProperties_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAILabResourceCostProperties : public OAIObject {
public:
    OAILabResourceCostProperties();
    OAILabResourceCostProperties(QString json);
    ~OAILabResourceCostProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getExternalResourceId() const;
    void setExternalResourceId(const QString &external_resource_id);
    bool is_external_resource_id_Set() const;
    bool is_external_resource_id_Valid() const;

    double getResourceCost() const;
    void setResourceCost(const double &resource_cost);
    bool is_resource_cost_Set() const;
    bool is_resource_cost_Valid() const;

    QString getResourceId() const;
    void setResourceId(const QString &resource_id);
    bool is_resource_id_Set() const;
    bool is_resource_id_Valid() const;

    QString getResourceOwner() const;
    void setResourceOwner(const QString &resource_owner);
    bool is_resource_owner_Set() const;
    bool is_resource_owner_Valid() const;

    QString getResourcePricingTier() const;
    void setResourcePricingTier(const QString &resource_pricing_tier);
    bool is_resource_pricing_tier_Set() const;
    bool is_resource_pricing_tier_Valid() const;

    QString getResourceStatus() const;
    void setResourceStatus(const QString &resource_status);
    bool is_resource_status_Set() const;
    bool is_resource_status_Valid() const;

    QString getResourceType() const;
    void setResourceType(const QString &resource_type);
    bool is_resource_type_Set() const;
    bool is_resource_type_Valid() const;

    QString getResourceUid() const;
    void setResourceUid(const QString &resource_uid);
    bool is_resource_uid_Set() const;
    bool is_resource_uid_Valid() const;

    QString getResourcename() const;
    void setResourcename(const QString &resourcename);
    bool is_resourcename_Set() const;
    bool is_resourcename_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_external_resource_id;
    bool m_external_resource_id_isSet;
    bool m_external_resource_id_isValid;

    double m_resource_cost;
    bool m_resource_cost_isSet;
    bool m_resource_cost_isValid;

    QString m_resource_id;
    bool m_resource_id_isSet;
    bool m_resource_id_isValid;

    QString m_resource_owner;
    bool m_resource_owner_isSet;
    bool m_resource_owner_isValid;

    QString m_resource_pricing_tier;
    bool m_resource_pricing_tier_isSet;
    bool m_resource_pricing_tier_isValid;

    QString m_resource_status;
    bool m_resource_status_isSet;
    bool m_resource_status_isValid;

    QString m_resource_type;
    bool m_resource_type_isSet;
    bool m_resource_type_isValid;

    QString m_resource_uid;
    bool m_resource_uid_isSet;
    bool m_resource_uid_isValid;

    QString m_resourcename;
    bool m_resourcename_isSet;
    bool m_resourcename_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILabResourceCostProperties)

#endif // OAILabResourceCostProperties_H
