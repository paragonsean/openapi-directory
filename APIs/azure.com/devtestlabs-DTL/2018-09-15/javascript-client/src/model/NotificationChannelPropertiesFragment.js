/**
 * DevTestLabsClient
 * The DevTest Labs Client.
 *
 * The version of the OpenAPI document: 2018-09-15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EventFragment from './EventFragment';

/**
 * The NotificationChannelPropertiesFragment model module.
 * @module model/NotificationChannelPropertiesFragment
 * @version 2018-09-15
 */
class NotificationChannelPropertiesFragment {
    /**
     * Constructs a new <code>NotificationChannelPropertiesFragment</code>.
     * Properties of a schedule.
     * @alias module:model/NotificationChannelPropertiesFragment
     */
    constructor() { 
        
        NotificationChannelPropertiesFragment.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>NotificationChannelPropertiesFragment</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NotificationChannelPropertiesFragment} obj Optional instance to populate.
     * @return {module:model/NotificationChannelPropertiesFragment} The populated <code>NotificationChannelPropertiesFragment</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NotificationChannelPropertiesFragment();

            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('emailRecipient')) {
                obj['emailRecipient'] = ApiClient.convertToType(data['emailRecipient'], 'String');
            }
            if (data.hasOwnProperty('events')) {
                obj['events'] = ApiClient.convertToType(data['events'], [EventFragment]);
            }
            if (data.hasOwnProperty('notificationLocale')) {
                obj['notificationLocale'] = ApiClient.convertToType(data['notificationLocale'], 'String');
            }
            if (data.hasOwnProperty('webHookUrl')) {
                obj['webHookUrl'] = ApiClient.convertToType(data['webHookUrl'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>NotificationChannelPropertiesFragment</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>NotificationChannelPropertiesFragment</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['emailRecipient'] && !(typeof data['emailRecipient'] === 'string' || data['emailRecipient'] instanceof String)) {
            throw new Error("Expected the field `emailRecipient` to be a primitive type in the JSON string but got " + data['emailRecipient']);
        }
        if (data['events']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['events'])) {
                throw new Error("Expected the field `events` to be an array in the JSON data but got " + data['events']);
            }
            // validate the optional field `events` (array)
            for (const item of data['events']) {
                EventFragment.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['notificationLocale'] && !(typeof data['notificationLocale'] === 'string' || data['notificationLocale'] instanceof String)) {
            throw new Error("Expected the field `notificationLocale` to be a primitive type in the JSON string but got " + data['notificationLocale']);
        }
        // ensure the json data is a string
        if (data['webHookUrl'] && !(typeof data['webHookUrl'] === 'string' || data['webHookUrl'] instanceof String)) {
            throw new Error("Expected the field `webHookUrl` to be a primitive type in the JSON string but got " + data['webHookUrl']);
        }

        return true;
    }


}



/**
 * Description of notification.
 * @member {String} description
 */
NotificationChannelPropertiesFragment.prototype['description'] = undefined;

/**
 * The email recipient to send notifications to (can be a list of semi-colon separated email addresses).
 * @member {String} emailRecipient
 */
NotificationChannelPropertiesFragment.prototype['emailRecipient'] = undefined;

/**
 * The list of event for which this notification is enabled.
 * @member {Array.<module:model/EventFragment>} events
 */
NotificationChannelPropertiesFragment.prototype['events'] = undefined;

/**
 * The locale to use when sending a notification (fallback for unsupported languages is EN).
 * @member {String} notificationLocale
 */
NotificationChannelPropertiesFragment.prototype['notificationLocale'] = undefined;

/**
 * The webhook URL to send notifications to.
 * @member {String} webHookUrl
 */
NotificationChannelPropertiesFragment.prototype['webHookUrl'] = undefined;






export default NotificationChannelPropertiesFragment;

