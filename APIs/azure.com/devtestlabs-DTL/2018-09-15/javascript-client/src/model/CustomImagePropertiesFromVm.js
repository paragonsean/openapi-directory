/**
 * DevTestLabsClient
 * The DevTest Labs Client.
 *
 * The version of the OpenAPI document: 2018-09-15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LinuxOsInfo from './LinuxOsInfo';
import WindowsOsInfo from './WindowsOsInfo';

/**
 * The CustomImagePropertiesFromVm model module.
 * @module model/CustomImagePropertiesFromVm
 * @version 2018-09-15
 */
class CustomImagePropertiesFromVm {
    /**
     * Constructs a new <code>CustomImagePropertiesFromVm</code>.
     * Properties for creating a custom image from a virtual machine.
     * @alias module:model/CustomImagePropertiesFromVm
     */
    constructor() { 
        
        CustomImagePropertiesFromVm.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CustomImagePropertiesFromVm</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CustomImagePropertiesFromVm} obj Optional instance to populate.
     * @return {module:model/CustomImagePropertiesFromVm} The populated <code>CustomImagePropertiesFromVm</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CustomImagePropertiesFromVm();

            if (data.hasOwnProperty('linuxOsInfo')) {
                obj['linuxOsInfo'] = LinuxOsInfo.constructFromObject(data['linuxOsInfo']);
            }
            if (data.hasOwnProperty('sourceVmId')) {
                obj['sourceVmId'] = ApiClient.convertToType(data['sourceVmId'], 'String');
            }
            if (data.hasOwnProperty('windowsOsInfo')) {
                obj['windowsOsInfo'] = WindowsOsInfo.constructFromObject(data['windowsOsInfo']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CustomImagePropertiesFromVm</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CustomImagePropertiesFromVm</code>.
     */
    static validateJSON(data) {
        // validate the optional field `linuxOsInfo`
        if (data['linuxOsInfo']) { // data not null
          LinuxOsInfo.validateJSON(data['linuxOsInfo']);
        }
        // ensure the json data is a string
        if (data['sourceVmId'] && !(typeof data['sourceVmId'] === 'string' || data['sourceVmId'] instanceof String)) {
            throw new Error("Expected the field `sourceVmId` to be a primitive type in the JSON string but got " + data['sourceVmId']);
        }
        // validate the optional field `windowsOsInfo`
        if (data['windowsOsInfo']) { // data not null
          WindowsOsInfo.validateJSON(data['windowsOsInfo']);
        }

        return true;
    }


}



/**
 * @member {module:model/LinuxOsInfo} linuxOsInfo
 */
CustomImagePropertiesFromVm.prototype['linuxOsInfo'] = undefined;

/**
 * The source vm identifier.
 * @member {String} sourceVmId
 */
CustomImagePropertiesFromVm.prototype['sourceVmId'] = undefined;

/**
 * @member {module:model/WindowsOsInfo} windowsOsInfo
 */
CustomImagePropertiesFromVm.prototype['windowsOsInfo'] = undefined;






export default CustomImagePropertiesFromVm;

