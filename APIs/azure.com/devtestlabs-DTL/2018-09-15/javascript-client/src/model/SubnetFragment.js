/**
 * DevTestLabsClient
 * The DevTest Labs Client.
 *
 * The version of the OpenAPI document: 2018-09-15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SubnetFragment model module.
 * @module model/SubnetFragment
 * @version 2018-09-15
 */
class SubnetFragment {
    /**
     * Constructs a new <code>SubnetFragment</code>.
     * Subnet information.
     * @alias module:model/SubnetFragment
     */
    constructor() { 
        
        SubnetFragment.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SubnetFragment</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SubnetFragment} obj Optional instance to populate.
     * @return {module:model/SubnetFragment} The populated <code>SubnetFragment</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SubnetFragment();

            if (data.hasOwnProperty('allowPublicIp')) {
                obj['allowPublicIp'] = ApiClient.convertToType(data['allowPublicIp'], 'String');
            }
            if (data.hasOwnProperty('labSubnetName')) {
                obj['labSubnetName'] = ApiClient.convertToType(data['labSubnetName'], 'String');
            }
            if (data.hasOwnProperty('resourceId')) {
                obj['resourceId'] = ApiClient.convertToType(data['resourceId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SubnetFragment</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SubnetFragment</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['allowPublicIp'] && !(typeof data['allowPublicIp'] === 'string' || data['allowPublicIp'] instanceof String)) {
            throw new Error("Expected the field `allowPublicIp` to be a primitive type in the JSON string but got " + data['allowPublicIp']);
        }
        // ensure the json data is a string
        if (data['labSubnetName'] && !(typeof data['labSubnetName'] === 'string' || data['labSubnetName'] instanceof String)) {
            throw new Error("Expected the field `labSubnetName` to be a primitive type in the JSON string but got " + data['labSubnetName']);
        }
        // ensure the json data is a string
        if (data['resourceId'] && !(typeof data['resourceId'] === 'string' || data['resourceId'] instanceof String)) {
            throw new Error("Expected the field `resourceId` to be a primitive type in the JSON string but got " + data['resourceId']);
        }

        return true;
    }


}



/**
 * The permission policy of the subnet for allowing public IP addresses (i.e. Allow, Deny)).
 * @member {module:model/SubnetFragment.AllowPublicIpEnum} allowPublicIp
 */
SubnetFragment.prototype['allowPublicIp'] = undefined;

/**
 * The name of the subnet as seen in the lab.
 * @member {String} labSubnetName
 */
SubnetFragment.prototype['labSubnetName'] = undefined;

/**
 * The resource ID of the subnet.
 * @member {String} resourceId
 */
SubnetFragment.prototype['resourceId'] = undefined;





/**
 * Allowed values for the <code>allowPublicIp</code> property.
 * @enum {String}
 * @readonly
 */
SubnetFragment['AllowPublicIpEnum'] = {

    /**
     * value: "Default"
     * @const
     */
    "Default": "Default",

    /**
     * value: "Deny"
     * @const
     */
    "Deny": "Deny",

    /**
     * value: "Allow"
     * @const
     */
    "Allow": "Allow"
};



export default SubnetFragment;

