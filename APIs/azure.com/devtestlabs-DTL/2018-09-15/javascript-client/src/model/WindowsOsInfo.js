/**
 * DevTestLabsClient
 * The DevTest Labs Client.
 *
 * The version of the OpenAPI document: 2018-09-15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The WindowsOsInfo model module.
 * @module model/WindowsOsInfo
 * @version 2018-09-15
 */
class WindowsOsInfo {
    /**
     * Constructs a new <code>WindowsOsInfo</code>.
     * Information about a Windows OS.
     * @alias module:model/WindowsOsInfo
     */
    constructor() { 
        
        WindowsOsInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>WindowsOsInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WindowsOsInfo} obj Optional instance to populate.
     * @return {module:model/WindowsOsInfo} The populated <code>WindowsOsInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WindowsOsInfo();

            if (data.hasOwnProperty('windowsOsState')) {
                obj['windowsOsState'] = ApiClient.convertToType(data['windowsOsState'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WindowsOsInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WindowsOsInfo</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['windowsOsState'] && !(typeof data['windowsOsState'] === 'string' || data['windowsOsState'] instanceof String)) {
            throw new Error("Expected the field `windowsOsState` to be a primitive type in the JSON string but got " + data['windowsOsState']);
        }

        return true;
    }


}



/**
 * The state of the Windows OS (i.e. NonSysprepped, SysprepRequested, SysprepApplied).
 * @member {module:model/WindowsOsInfo.WindowsOsStateEnum} windowsOsState
 */
WindowsOsInfo.prototype['windowsOsState'] = undefined;





/**
 * Allowed values for the <code>windowsOsState</code> property.
 * @enum {String}
 * @readonly
 */
WindowsOsInfo['WindowsOsStateEnum'] = {

    /**
     * value: "NonSysprepped"
     * @const
     */
    "NonSysprepped": "NonSysprepped",

    /**
     * value: "SysprepRequested"
     * @const
     */
    "SysprepRequested": "SysprepRequested",

    /**
     * value: "SysprepApplied"
     * @const
     */
    "SysprepApplied": "SysprepApplied"
};



export default WindowsOsInfo;

