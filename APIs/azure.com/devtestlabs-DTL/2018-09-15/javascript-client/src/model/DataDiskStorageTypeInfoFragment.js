/**
 * DevTestLabsClient
 * The DevTest Labs Client.
 *
 * The version of the OpenAPI document: 2018-09-15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DataDiskStorageTypeInfoFragment model module.
 * @module model/DataDiskStorageTypeInfoFragment
 * @version 2018-09-15
 */
class DataDiskStorageTypeInfoFragment {
    /**
     * Constructs a new <code>DataDiskStorageTypeInfoFragment</code>.
     * Storage information about the data disks present in the custom image
     * @alias module:model/DataDiskStorageTypeInfoFragment
     */
    constructor() { 
        
        DataDiskStorageTypeInfoFragment.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DataDiskStorageTypeInfoFragment</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DataDiskStorageTypeInfoFragment} obj Optional instance to populate.
     * @return {module:model/DataDiskStorageTypeInfoFragment} The populated <code>DataDiskStorageTypeInfoFragment</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DataDiskStorageTypeInfoFragment();

            if (data.hasOwnProperty('lun')) {
                obj['lun'] = ApiClient.convertToType(data['lun'], 'String');
            }
            if (data.hasOwnProperty('storageType')) {
                obj['storageType'] = ApiClient.convertToType(data['storageType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DataDiskStorageTypeInfoFragment</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DataDiskStorageTypeInfoFragment</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['lun'] && !(typeof data['lun'] === 'string' || data['lun'] instanceof String)) {
            throw new Error("Expected the field `lun` to be a primitive type in the JSON string but got " + data['lun']);
        }
        // ensure the json data is a string
        if (data['storageType'] && !(typeof data['storageType'] === 'string' || data['storageType'] instanceof String)) {
            throw new Error("Expected the field `storageType` to be a primitive type in the JSON string but got " + data['storageType']);
        }

        return true;
    }


}



/**
 * Disk Lun
 * @member {String} lun
 */
DataDiskStorageTypeInfoFragment.prototype['lun'] = undefined;

/**
 * Disk Storage Type
 * @member {module:model/DataDiskStorageTypeInfoFragment.StorageTypeEnum} storageType
 */
DataDiskStorageTypeInfoFragment.prototype['storageType'] = undefined;





/**
 * Allowed values for the <code>storageType</code> property.
 * @enum {String}
 * @readonly
 */
DataDiskStorageTypeInfoFragment['StorageTypeEnum'] = {

    /**
     * value: "Standard"
     * @const
     */
    "Standard": "Standard",

    /**
     * value: "Premium"
     * @const
     */
    "Premium": "Premium",

    /**
     * value: "StandardSSD"
     * @const
     */
    "StandardSSD": "StandardSSD"
};



export default DataDiskStorageTypeInfoFragment;

