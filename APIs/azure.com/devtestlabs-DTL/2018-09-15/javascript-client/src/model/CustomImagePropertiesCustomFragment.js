/**
 * DevTestLabsClient
 * The DevTest Labs Client.
 *
 * The version of the OpenAPI document: 2018-09-15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CustomImagePropertiesCustomFragment model module.
 * @module model/CustomImagePropertiesCustomFragment
 * @version 2018-09-15
 */
class CustomImagePropertiesCustomFragment {
    /**
     * Constructs a new <code>CustomImagePropertiesCustomFragment</code>.
     * Properties for creating a custom image from a VHD.
     * @alias module:model/CustomImagePropertiesCustomFragment
     */
    constructor() { 
        
        CustomImagePropertiesCustomFragment.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CustomImagePropertiesCustomFragment</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CustomImagePropertiesCustomFragment} obj Optional instance to populate.
     * @return {module:model/CustomImagePropertiesCustomFragment} The populated <code>CustomImagePropertiesCustomFragment</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CustomImagePropertiesCustomFragment();

            if (data.hasOwnProperty('imageName')) {
                obj['imageName'] = ApiClient.convertToType(data['imageName'], 'String');
            }
            if (data.hasOwnProperty('osType')) {
                obj['osType'] = ApiClient.convertToType(data['osType'], 'String');
            }
            if (data.hasOwnProperty('sysPrep')) {
                obj['sysPrep'] = ApiClient.convertToType(data['sysPrep'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CustomImagePropertiesCustomFragment</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CustomImagePropertiesCustomFragment</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['imageName'] && !(typeof data['imageName'] === 'string' || data['imageName'] instanceof String)) {
            throw new Error("Expected the field `imageName` to be a primitive type in the JSON string but got " + data['imageName']);
        }
        // ensure the json data is a string
        if (data['osType'] && !(typeof data['osType'] === 'string' || data['osType'] instanceof String)) {
            throw new Error("Expected the field `osType` to be a primitive type in the JSON string but got " + data['osType']);
        }

        return true;
    }


}



/**
 * The image name.
 * @member {String} imageName
 */
CustomImagePropertiesCustomFragment.prototype['imageName'] = undefined;

/**
 * The OS type of the custom image (i.e. Windows, Linux)
 * @member {module:model/CustomImagePropertiesCustomFragment.OsTypeEnum} osType
 */
CustomImagePropertiesCustomFragment.prototype['osType'] = undefined;

/**
 * Indicates whether sysprep has been run on the VHD.
 * @member {Boolean} sysPrep
 */
CustomImagePropertiesCustomFragment.prototype['sysPrep'] = undefined;





/**
 * Allowed values for the <code>osType</code> property.
 * @enum {String}
 * @readonly
 */
CustomImagePropertiesCustomFragment['OsTypeEnum'] = {

    /**
     * value: "Windows"
     * @const
     */
    "Windows": "Windows",

    /**
     * value: "Linux"
     * @const
     */
    "Linux": "Linux",

    /**
     * value: "None"
     * @const
     */
    "None": "None"
};



export default CustomImagePropertiesCustomFragment;

