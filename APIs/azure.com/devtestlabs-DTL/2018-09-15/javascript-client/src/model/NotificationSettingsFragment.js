/**
 * DevTestLabsClient
 * The DevTest Labs Client.
 *
 * The version of the OpenAPI document: 2018-09-15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The NotificationSettingsFragment model module.
 * @module model/NotificationSettingsFragment
 * @version 2018-09-15
 */
class NotificationSettingsFragment {
    /**
     * Constructs a new <code>NotificationSettingsFragment</code>.
     * Notification settings for a schedule.
     * @alias module:model/NotificationSettingsFragment
     */
    constructor() { 
        
        NotificationSettingsFragment.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>NotificationSettingsFragment</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NotificationSettingsFragment} obj Optional instance to populate.
     * @return {module:model/NotificationSettingsFragment} The populated <code>NotificationSettingsFragment</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NotificationSettingsFragment();

            if (data.hasOwnProperty('emailRecipient')) {
                obj['emailRecipient'] = ApiClient.convertToType(data['emailRecipient'], 'String');
            }
            if (data.hasOwnProperty('notificationLocale')) {
                obj['notificationLocale'] = ApiClient.convertToType(data['notificationLocale'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('timeInMinutes')) {
                obj['timeInMinutes'] = ApiClient.convertToType(data['timeInMinutes'], 'Number');
            }
            if (data.hasOwnProperty('webhookUrl')) {
                obj['webhookUrl'] = ApiClient.convertToType(data['webhookUrl'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>NotificationSettingsFragment</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>NotificationSettingsFragment</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['emailRecipient'] && !(typeof data['emailRecipient'] === 'string' || data['emailRecipient'] instanceof String)) {
            throw new Error("Expected the field `emailRecipient` to be a primitive type in the JSON string but got " + data['emailRecipient']);
        }
        // ensure the json data is a string
        if (data['notificationLocale'] && !(typeof data['notificationLocale'] === 'string' || data['notificationLocale'] instanceof String)) {
            throw new Error("Expected the field `notificationLocale` to be a primitive type in the JSON string but got " + data['notificationLocale']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is a string
        if (data['webhookUrl'] && !(typeof data['webhookUrl'] === 'string' || data['webhookUrl'] instanceof String)) {
            throw new Error("Expected the field `webhookUrl` to be a primitive type in the JSON string but got " + data['webhookUrl']);
        }

        return true;
    }


}



/**
 * The email recipient to send notifications to (can be a list of semi-colon separated email addresses).
 * @member {String} emailRecipient
 */
NotificationSettingsFragment.prototype['emailRecipient'] = undefined;

/**
 * The locale to use when sending a notification (fallback for unsupported languages is EN).
 * @member {String} notificationLocale
 */
NotificationSettingsFragment.prototype['notificationLocale'] = undefined;

/**
 * If notifications are enabled for this schedule (i.e. Enabled, Disabled).
 * @member {module:model/NotificationSettingsFragment.StatusEnum} status
 */
NotificationSettingsFragment.prototype['status'] = undefined;

/**
 * Time in minutes before event at which notification will be sent.
 * @member {Number} timeInMinutes
 */
NotificationSettingsFragment.prototype['timeInMinutes'] = undefined;

/**
 * The webhook URL to which the notification will be sent.
 * @member {String} webhookUrl
 */
NotificationSettingsFragment.prototype['webhookUrl'] = undefined;





/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
NotificationSettingsFragment['StatusEnum'] = {

    /**
     * value: "Enabled"
     * @const
     */
    "Enabled": "Enabled",

    /**
     * value: "Disabled"
     * @const
     */
    "Disabled": "Disabled"
};



export default NotificationSettingsFragment;

