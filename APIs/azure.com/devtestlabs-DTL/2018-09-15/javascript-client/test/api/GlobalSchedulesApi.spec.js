/**
 * DevTestLabsClient
 * The DevTest Labs Client.
 *
 * The version of the OpenAPI document: 2018-09-15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.DevTestLabsClient);
  }
}(this, function(expect, DevTestLabsClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new DevTestLabsClient.GlobalSchedulesApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('GlobalSchedulesApi', function() {
    describe('globalSchedulesCreateOrUpdate', function() {
      it('should call globalSchedulesCreateOrUpdate successfully', function(done) {
        //uncomment below and update the code to test globalSchedulesCreateOrUpdate
        //instance.globalSchedulesCreateOrUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('globalSchedulesDelete', function() {
      it('should call globalSchedulesDelete successfully', function(done) {
        //uncomment below and update the code to test globalSchedulesDelete
        //instance.globalSchedulesDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('globalSchedulesExecute', function() {
      it('should call globalSchedulesExecute successfully', function(done) {
        //uncomment below and update the code to test globalSchedulesExecute
        //instance.globalSchedulesExecute(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('globalSchedulesGet', function() {
      it('should call globalSchedulesGet successfully', function(done) {
        //uncomment below and update the code to test globalSchedulesGet
        //instance.globalSchedulesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('globalSchedulesListByResourceGroup', function() {
      it('should call globalSchedulesListByResourceGroup successfully', function(done) {
        //uncomment below and update the code to test globalSchedulesListByResourceGroup
        //instance.globalSchedulesListByResourceGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('globalSchedulesListBySubscription', function() {
      it('should call globalSchedulesListBySubscription successfully', function(done) {
        //uncomment below and update the code to test globalSchedulesListBySubscription
        //instance.globalSchedulesListBySubscription(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('globalSchedulesRetarget', function() {
      it('should call globalSchedulesRetarget successfully', function(done) {
        //uncomment below and update the code to test globalSchedulesRetarget
        //instance.globalSchedulesRetarget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('globalSchedulesUpdate', function() {
      it('should call globalSchedulesUpdate successfully', function(done) {
        //uncomment below and update the code to test globalSchedulesUpdate
        //instance.globalSchedulesUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
