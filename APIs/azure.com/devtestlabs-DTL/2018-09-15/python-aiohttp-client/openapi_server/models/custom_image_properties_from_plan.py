# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CustomImagePropertiesFromPlan(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, offer: str=None, publisher: str=None):
        """CustomImagePropertiesFromPlan - a model defined in OpenAPI

        :param id: The id of this CustomImagePropertiesFromPlan.
        :param offer: The offer of this CustomImagePropertiesFromPlan.
        :param publisher: The publisher of this CustomImagePropertiesFromPlan.
        """
        self.openapi_types = {
            'id': str,
            'offer': str,
            'publisher': str
        }

        self.attribute_map = {
            'id': 'id',
            'offer': 'offer',
            'publisher': 'publisher'
        }

        self._id = id
        self._offer = offer
        self._publisher = publisher

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CustomImagePropertiesFromPlan':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CustomImagePropertiesFromPlan of this CustomImagePropertiesFromPlan.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this CustomImagePropertiesFromPlan.

        The id of the plan, equivalent to name of the plan

        :return: The id of this CustomImagePropertiesFromPlan.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this CustomImagePropertiesFromPlan.

        The id of the plan, equivalent to name of the plan

        :param id: The id of this CustomImagePropertiesFromPlan.
        :type id: str
        """

        self._id = id

    @property
    def offer(self):
        """Gets the offer of this CustomImagePropertiesFromPlan.

        The offer for the plan from the marketplace image the custom image is derived from

        :return: The offer of this CustomImagePropertiesFromPlan.
        :rtype: str
        """
        return self._offer

    @offer.setter
    def offer(self, offer):
        """Sets the offer of this CustomImagePropertiesFromPlan.

        The offer for the plan from the marketplace image the custom image is derived from

        :param offer: The offer of this CustomImagePropertiesFromPlan.
        :type offer: str
        """

        self._offer = offer

    @property
    def publisher(self):
        """Gets the publisher of this CustomImagePropertiesFromPlan.

        The publisher for the plan from the marketplace image the custom image is derived from

        :return: The publisher of this CustomImagePropertiesFromPlan.
        :rtype: str
        """
        return self._publisher

    @publisher.setter
    def publisher(self, publisher):
        """Sets the publisher of this CustomImagePropertiesFromPlan.

        The publisher for the plan from the marketplace image the custom image is derived from

        :param publisher: The publisher of this CustomImagePropertiesFromPlan.
        :type publisher: str
        """

        self._publisher = publisher
