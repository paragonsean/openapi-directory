# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.inbound_nat_rule import InboundNatRule
from openapi_server import util


class SharedPublicIpAddressConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, inbound_nat_rules: List[InboundNatRule]=None):
        """SharedPublicIpAddressConfiguration - a model defined in OpenAPI

        :param inbound_nat_rules: The inbound_nat_rules of this SharedPublicIpAddressConfiguration.
        """
        self.openapi_types = {
            'inbound_nat_rules': List[InboundNatRule]
        }

        self.attribute_map = {
            'inbound_nat_rules': 'inboundNatRules'
        }

        self._inbound_nat_rules = inbound_nat_rules

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SharedPublicIpAddressConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SharedPublicIpAddressConfiguration of this SharedPublicIpAddressConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def inbound_nat_rules(self):
        """Gets the inbound_nat_rules of this SharedPublicIpAddressConfiguration.

        The incoming NAT rules

        :return: The inbound_nat_rules of this SharedPublicIpAddressConfiguration.
        :rtype: List[InboundNatRule]
        """
        return self._inbound_nat_rules

    @inbound_nat_rules.setter
    def inbound_nat_rules(self, inbound_nat_rules):
        """Sets the inbound_nat_rules of this SharedPublicIpAddressConfiguration.

        The incoming NAT rules

        :param inbound_nat_rules: The inbound_nat_rules of this SharedPublicIpAddressConfiguration.
        :type inbound_nat_rules: List[InboundNatRule]
        """

        self._inbound_nat_rules = inbound_nat_rules
