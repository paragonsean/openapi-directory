# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.parameters_value_file_info import ParametersValueFileInfo
from openapi_server import util


class ArmTemplateProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, contents: object=None, created_date: datetime=None, description: str=None, display_name: str=None, enabled: bool=None, icon: str=None, parameters_value_files_info: List[ParametersValueFileInfo]=None, publisher: str=None):
        """ArmTemplateProperties - a model defined in OpenAPI

        :param contents: The contents of this ArmTemplateProperties.
        :param created_date: The created_date of this ArmTemplateProperties.
        :param description: The description of this ArmTemplateProperties.
        :param display_name: The display_name of this ArmTemplateProperties.
        :param enabled: The enabled of this ArmTemplateProperties.
        :param icon: The icon of this ArmTemplateProperties.
        :param parameters_value_files_info: The parameters_value_files_info of this ArmTemplateProperties.
        :param publisher: The publisher of this ArmTemplateProperties.
        """
        self.openapi_types = {
            'contents': object,
            'created_date': datetime,
            'description': str,
            'display_name': str,
            'enabled': bool,
            'icon': str,
            'parameters_value_files_info': List[ParametersValueFileInfo],
            'publisher': str
        }

        self.attribute_map = {
            'contents': 'contents',
            'created_date': 'createdDate',
            'description': 'description',
            'display_name': 'displayName',
            'enabled': 'enabled',
            'icon': 'icon',
            'parameters_value_files_info': 'parametersValueFilesInfo',
            'publisher': 'publisher'
        }

        self._contents = contents
        self._created_date = created_date
        self._description = description
        self._display_name = display_name
        self._enabled = enabled
        self._icon = icon
        self._parameters_value_files_info = parameters_value_files_info
        self._publisher = publisher

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ArmTemplateProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ArmTemplateProperties of this ArmTemplateProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def contents(self):
        """Gets the contents of this ArmTemplateProperties.

        The contents of the ARM template.

        :return: The contents of this ArmTemplateProperties.
        :rtype: object
        """
        return self._contents

    @contents.setter
    def contents(self, contents):
        """Sets the contents of this ArmTemplateProperties.

        The contents of the ARM template.

        :param contents: The contents of this ArmTemplateProperties.
        :type contents: object
        """

        self._contents = contents

    @property
    def created_date(self):
        """Gets the created_date of this ArmTemplateProperties.

        The creation date of the armTemplate.

        :return: The created_date of this ArmTemplateProperties.
        :rtype: datetime
        """
        return self._created_date

    @created_date.setter
    def created_date(self, created_date):
        """Sets the created_date of this ArmTemplateProperties.

        The creation date of the armTemplate.

        :param created_date: The created_date of this ArmTemplateProperties.
        :type created_date: datetime
        """

        self._created_date = created_date

    @property
    def description(self):
        """Gets the description of this ArmTemplateProperties.

        The description of the ARM template.

        :return: The description of this ArmTemplateProperties.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ArmTemplateProperties.

        The description of the ARM template.

        :param description: The description of this ArmTemplateProperties.
        :type description: str
        """

        self._description = description

    @property
    def display_name(self):
        """Gets the display_name of this ArmTemplateProperties.

        The display name of the ARM template.

        :return: The display_name of this ArmTemplateProperties.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this ArmTemplateProperties.

        The display name of the ARM template.

        :param display_name: The display_name of this ArmTemplateProperties.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def enabled(self):
        """Gets the enabled of this ArmTemplateProperties.

        Whether or not ARM template is enabled for use by lab user.

        :return: The enabled of this ArmTemplateProperties.
        :rtype: bool
        """
        return self._enabled

    @enabled.setter
    def enabled(self, enabled):
        """Sets the enabled of this ArmTemplateProperties.

        Whether or not ARM template is enabled for use by lab user.

        :param enabled: The enabled of this ArmTemplateProperties.
        :type enabled: bool
        """

        self._enabled = enabled

    @property
    def icon(self):
        """Gets the icon of this ArmTemplateProperties.

        The URI to the icon of the ARM template.

        :return: The icon of this ArmTemplateProperties.
        :rtype: str
        """
        return self._icon

    @icon.setter
    def icon(self, icon):
        """Sets the icon of this ArmTemplateProperties.

        The URI to the icon of the ARM template.

        :param icon: The icon of this ArmTemplateProperties.
        :type icon: str
        """

        self._icon = icon

    @property
    def parameters_value_files_info(self):
        """Gets the parameters_value_files_info of this ArmTemplateProperties.

        File name and parameter values information from all azuredeploy.*.parameters.json for the ARM template.

        :return: The parameters_value_files_info of this ArmTemplateProperties.
        :rtype: List[ParametersValueFileInfo]
        """
        return self._parameters_value_files_info

    @parameters_value_files_info.setter
    def parameters_value_files_info(self, parameters_value_files_info):
        """Sets the parameters_value_files_info of this ArmTemplateProperties.

        File name and parameter values information from all azuredeploy.*.parameters.json for the ARM template.

        :param parameters_value_files_info: The parameters_value_files_info of this ArmTemplateProperties.
        :type parameters_value_files_info: List[ParametersValueFileInfo]
        """

        self._parameters_value_files_info = parameters_value_files_info

    @property
    def publisher(self):
        """Gets the publisher of this ArmTemplateProperties.

        The publisher of the ARM template.

        :return: The publisher of this ArmTemplateProperties.
        :rtype: str
        """
        return self._publisher

    @publisher.setter
    def publisher(self, publisher):
        """Sets the publisher of this ArmTemplateProperties.

        The publisher of the ARM template.

        :param publisher: The publisher of this ArmTemplateProperties.
        :type publisher: str
        """

        self._publisher = publisher
