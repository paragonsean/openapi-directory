# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DetachDataDiskProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, existing_lab_disk_id: str=None):
        """DetachDataDiskProperties - a model defined in OpenAPI

        :param existing_lab_disk_id: The existing_lab_disk_id of this DetachDataDiskProperties.
        """
        self.openapi_types = {
            'existing_lab_disk_id': str
        }

        self.attribute_map = {
            'existing_lab_disk_id': 'existingLabDiskId'
        }

        self._existing_lab_disk_id = existing_lab_disk_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DetachDataDiskProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DetachDataDiskProperties of this DetachDataDiskProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def existing_lab_disk_id(self):
        """Gets the existing_lab_disk_id of this DetachDataDiskProperties.

        Specifies the disk resource ID to detach from virtual machine.

        :return: The existing_lab_disk_id of this DetachDataDiskProperties.
        :rtype: str
        """
        return self._existing_lab_disk_id

    @existing_lab_disk_id.setter
    def existing_lab_disk_id(self, existing_lab_disk_id):
        """Sets the existing_lab_disk_id of this DetachDataDiskProperties.

        Specifies the disk resource ID to detach from virtual machine.

        :param existing_lab_disk_id: The existing_lab_disk_id of this DetachDataDiskProperties.
        :type existing_lab_disk_id: str
        """

        self._existing_lab_disk_id = existing_lab_disk_id
