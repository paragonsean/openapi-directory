# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.day_details import DayDetails
from openapi_server.models.hour_details import HourDetails
from openapi_server.models.notification_settings import NotificationSettings
from openapi_server.models.week_details import WeekDetails
from openapi_server import util


class ScheduleCreationParameterProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, daily_recurrence: DayDetails=None, hourly_recurrence: HourDetails=None, notification_settings: NotificationSettings=None, status: str=None, target_resource_id: str=None, task_type: str=None, time_zone_id: str=None, weekly_recurrence: WeekDetails=None):
        """ScheduleCreationParameterProperties - a model defined in OpenAPI

        :param daily_recurrence: The daily_recurrence of this ScheduleCreationParameterProperties.
        :param hourly_recurrence: The hourly_recurrence of this ScheduleCreationParameterProperties.
        :param notification_settings: The notification_settings of this ScheduleCreationParameterProperties.
        :param status: The status of this ScheduleCreationParameterProperties.
        :param target_resource_id: The target_resource_id of this ScheduleCreationParameterProperties.
        :param task_type: The task_type of this ScheduleCreationParameterProperties.
        :param time_zone_id: The time_zone_id of this ScheduleCreationParameterProperties.
        :param weekly_recurrence: The weekly_recurrence of this ScheduleCreationParameterProperties.
        """
        self.openapi_types = {
            'daily_recurrence': DayDetails,
            'hourly_recurrence': HourDetails,
            'notification_settings': NotificationSettings,
            'status': str,
            'target_resource_id': str,
            'task_type': str,
            'time_zone_id': str,
            'weekly_recurrence': WeekDetails
        }

        self.attribute_map = {
            'daily_recurrence': 'dailyRecurrence',
            'hourly_recurrence': 'hourlyRecurrence',
            'notification_settings': 'notificationSettings',
            'status': 'status',
            'target_resource_id': 'targetResourceId',
            'task_type': 'taskType',
            'time_zone_id': 'timeZoneId',
            'weekly_recurrence': 'weeklyRecurrence'
        }

        self._daily_recurrence = daily_recurrence
        self._hourly_recurrence = hourly_recurrence
        self._notification_settings = notification_settings
        self._status = status
        self._target_resource_id = target_resource_id
        self._task_type = task_type
        self._time_zone_id = time_zone_id
        self._weekly_recurrence = weekly_recurrence

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ScheduleCreationParameterProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ScheduleCreationParameterProperties of this ScheduleCreationParameterProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def daily_recurrence(self):
        """Gets the daily_recurrence of this ScheduleCreationParameterProperties.


        :return: The daily_recurrence of this ScheduleCreationParameterProperties.
        :rtype: DayDetails
        """
        return self._daily_recurrence

    @daily_recurrence.setter
    def daily_recurrence(self, daily_recurrence):
        """Sets the daily_recurrence of this ScheduleCreationParameterProperties.


        :param daily_recurrence: The daily_recurrence of this ScheduleCreationParameterProperties.
        :type daily_recurrence: DayDetails
        """

        self._daily_recurrence = daily_recurrence

    @property
    def hourly_recurrence(self):
        """Gets the hourly_recurrence of this ScheduleCreationParameterProperties.


        :return: The hourly_recurrence of this ScheduleCreationParameterProperties.
        :rtype: HourDetails
        """
        return self._hourly_recurrence

    @hourly_recurrence.setter
    def hourly_recurrence(self, hourly_recurrence):
        """Sets the hourly_recurrence of this ScheduleCreationParameterProperties.


        :param hourly_recurrence: The hourly_recurrence of this ScheduleCreationParameterProperties.
        :type hourly_recurrence: HourDetails
        """

        self._hourly_recurrence = hourly_recurrence

    @property
    def notification_settings(self):
        """Gets the notification_settings of this ScheduleCreationParameterProperties.


        :return: The notification_settings of this ScheduleCreationParameterProperties.
        :rtype: NotificationSettings
        """
        return self._notification_settings

    @notification_settings.setter
    def notification_settings(self, notification_settings):
        """Sets the notification_settings of this ScheduleCreationParameterProperties.


        :param notification_settings: The notification_settings of this ScheduleCreationParameterProperties.
        :type notification_settings: NotificationSettings
        """

        self._notification_settings = notification_settings

    @property
    def status(self):
        """Gets the status of this ScheduleCreationParameterProperties.

        The status of the schedule (i.e. Enabled, Disabled)

        :return: The status of this ScheduleCreationParameterProperties.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this ScheduleCreationParameterProperties.

        The status of the schedule (i.e. Enabled, Disabled)

        :param status: The status of this ScheduleCreationParameterProperties.
        :type status: str
        """
        allowed_values = ["Enabled", "Disabled"]  # noqa: E501
        if status not in allowed_values:
            raise ValueError(
                "Invalid value for `status` ({0}), must be one of {1}"
                .format(status, allowed_values)
            )

        self._status = status

    @property
    def target_resource_id(self):
        """Gets the target_resource_id of this ScheduleCreationParameterProperties.

        The resource ID to which the schedule belongs

        :return: The target_resource_id of this ScheduleCreationParameterProperties.
        :rtype: str
        """
        return self._target_resource_id

    @target_resource_id.setter
    def target_resource_id(self, target_resource_id):
        """Sets the target_resource_id of this ScheduleCreationParameterProperties.

        The resource ID to which the schedule belongs

        :param target_resource_id: The target_resource_id of this ScheduleCreationParameterProperties.
        :type target_resource_id: str
        """

        self._target_resource_id = target_resource_id

    @property
    def task_type(self):
        """Gets the task_type of this ScheduleCreationParameterProperties.

        The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart).

        :return: The task_type of this ScheduleCreationParameterProperties.
        :rtype: str
        """
        return self._task_type

    @task_type.setter
    def task_type(self, task_type):
        """Sets the task_type of this ScheduleCreationParameterProperties.

        The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart).

        :param task_type: The task_type of this ScheduleCreationParameterProperties.
        :type task_type: str
        """

        self._task_type = task_type

    @property
    def time_zone_id(self):
        """Gets the time_zone_id of this ScheduleCreationParameterProperties.

        The time zone ID (e.g. Pacific Standard time).

        :return: The time_zone_id of this ScheduleCreationParameterProperties.
        :rtype: str
        """
        return self._time_zone_id

    @time_zone_id.setter
    def time_zone_id(self, time_zone_id):
        """Sets the time_zone_id of this ScheduleCreationParameterProperties.

        The time zone ID (e.g. Pacific Standard time).

        :param time_zone_id: The time_zone_id of this ScheduleCreationParameterProperties.
        :type time_zone_id: str
        """

        self._time_zone_id = time_zone_id

    @property
    def weekly_recurrence(self):
        """Gets the weekly_recurrence of this ScheduleCreationParameterProperties.


        :return: The weekly_recurrence of this ScheduleCreationParameterProperties.
        :rtype: WeekDetails
        """
        return self._weekly_recurrence

    @weekly_recurrence.setter
    def weekly_recurrence(self, weekly_recurrence):
        """Sets the weekly_recurrence of this ScheduleCreationParameterProperties.


        :param weekly_recurrence: The weekly_recurrence of this ScheduleCreationParameterProperties.
        :type weekly_recurrence: WeekDetails
        """

        self._weekly_recurrence = weekly_recurrence
