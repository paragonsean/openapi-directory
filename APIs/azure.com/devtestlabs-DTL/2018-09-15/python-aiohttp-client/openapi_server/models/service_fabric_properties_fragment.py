# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ServiceFabricPropertiesFragment(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, environment_id: str=None, external_service_fabric_id: str=None):
        """ServiceFabricPropertiesFragment - a model defined in OpenAPI

        :param environment_id: The environment_id of this ServiceFabricPropertiesFragment.
        :param external_service_fabric_id: The external_service_fabric_id of this ServiceFabricPropertiesFragment.
        """
        self.openapi_types = {
            'environment_id': str,
            'external_service_fabric_id': str
        }

        self.attribute_map = {
            'environment_id': 'environmentId',
            'external_service_fabric_id': 'externalServiceFabricId'
        }

        self._environment_id = environment_id
        self._external_service_fabric_id = external_service_fabric_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ServiceFabricPropertiesFragment':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ServiceFabricPropertiesFragment of this ServiceFabricPropertiesFragment.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def environment_id(self):
        """Gets the environment_id of this ServiceFabricPropertiesFragment.

        The resource id of the environment under which the service fabric resource is present

        :return: The environment_id of this ServiceFabricPropertiesFragment.
        :rtype: str
        """
        return self._environment_id

    @environment_id.setter
    def environment_id(self, environment_id):
        """Sets the environment_id of this ServiceFabricPropertiesFragment.

        The resource id of the environment under which the service fabric resource is present

        :param environment_id: The environment_id of this ServiceFabricPropertiesFragment.
        :type environment_id: str
        """

        self._environment_id = environment_id

    @property
    def external_service_fabric_id(self):
        """Gets the external_service_fabric_id of this ServiceFabricPropertiesFragment.

        The backing service fabric resource's id

        :return: The external_service_fabric_id of this ServiceFabricPropertiesFragment.
        :rtype: str
        """
        return self._external_service_fabric_id

    @external_service_fabric_id.setter
    def external_service_fabric_id(self, external_service_fabric_id):
        """Sets the external_service_fabric_id of this ServiceFabricPropertiesFragment.

        The backing service fabric resource's id

        :param external_service_fabric_id: The external_service_fabric_id of this ServiceFabricPropertiesFragment.
        :type external_service_fabric_id: str
        """

        self._external_service_fabric_id = external_service_fabric_id
