# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.linux_os_info_fragment import LinuxOsInfoFragment
from openapi_server.models.windows_os_info_fragment import WindowsOsInfoFragment
from openapi_server import util


class CustomImagePropertiesFromVmFragment(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, linux_os_info: LinuxOsInfoFragment=None, source_vm_id: str=None, windows_os_info: WindowsOsInfoFragment=None):
        """CustomImagePropertiesFromVmFragment - a model defined in OpenAPI

        :param linux_os_info: The linux_os_info of this CustomImagePropertiesFromVmFragment.
        :param source_vm_id: The source_vm_id of this CustomImagePropertiesFromVmFragment.
        :param windows_os_info: The windows_os_info of this CustomImagePropertiesFromVmFragment.
        """
        self.openapi_types = {
            'linux_os_info': LinuxOsInfoFragment,
            'source_vm_id': str,
            'windows_os_info': WindowsOsInfoFragment
        }

        self.attribute_map = {
            'linux_os_info': 'linuxOsInfo',
            'source_vm_id': 'sourceVmId',
            'windows_os_info': 'windowsOsInfo'
        }

        self._linux_os_info = linux_os_info
        self._source_vm_id = source_vm_id
        self._windows_os_info = windows_os_info

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CustomImagePropertiesFromVmFragment':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CustomImagePropertiesFromVmFragment of this CustomImagePropertiesFromVmFragment.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def linux_os_info(self):
        """Gets the linux_os_info of this CustomImagePropertiesFromVmFragment.


        :return: The linux_os_info of this CustomImagePropertiesFromVmFragment.
        :rtype: LinuxOsInfoFragment
        """
        return self._linux_os_info

    @linux_os_info.setter
    def linux_os_info(self, linux_os_info):
        """Sets the linux_os_info of this CustomImagePropertiesFromVmFragment.


        :param linux_os_info: The linux_os_info of this CustomImagePropertiesFromVmFragment.
        :type linux_os_info: LinuxOsInfoFragment
        """

        self._linux_os_info = linux_os_info

    @property
    def source_vm_id(self):
        """Gets the source_vm_id of this CustomImagePropertiesFromVmFragment.

        The source vm identifier.

        :return: The source_vm_id of this CustomImagePropertiesFromVmFragment.
        :rtype: str
        """
        return self._source_vm_id

    @source_vm_id.setter
    def source_vm_id(self, source_vm_id):
        """Sets the source_vm_id of this CustomImagePropertiesFromVmFragment.

        The source vm identifier.

        :param source_vm_id: The source_vm_id of this CustomImagePropertiesFromVmFragment.
        :type source_vm_id: str
        """

        self._source_vm_id = source_vm_id

    @property
    def windows_os_info(self):
        """Gets the windows_os_info of this CustomImagePropertiesFromVmFragment.


        :return: The windows_os_info of this CustomImagePropertiesFromVmFragment.
        :rtype: WindowsOsInfoFragment
        """
        return self._windows_os_info

    @windows_os_info.setter
    def windows_os_info(self, windows_os_info):
        """Sets the windows_os_info of this CustomImagePropertiesFromVmFragment.


        :param windows_os_info: The windows_os_info of this CustomImagePropertiesFromVmFragment.
        :type windows_os_info: WindowsOsInfoFragment
        """

        self._windows_os_info = windows_os_info
