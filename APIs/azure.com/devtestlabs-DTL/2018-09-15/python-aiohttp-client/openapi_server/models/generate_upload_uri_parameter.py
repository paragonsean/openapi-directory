# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GenerateUploadUriParameter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, blob_name: str=None):
        """GenerateUploadUriParameter - a model defined in OpenAPI

        :param blob_name: The blob_name of this GenerateUploadUriParameter.
        """
        self.openapi_types = {
            'blob_name': str
        }

        self.attribute_map = {
            'blob_name': 'blobName'
        }

        self._blob_name = blob_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GenerateUploadUriParameter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GenerateUploadUriParameter of this GenerateUploadUriParameter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def blob_name(self):
        """Gets the blob_name of this GenerateUploadUriParameter.

        The blob name of the upload URI.

        :return: The blob_name of this GenerateUploadUriParameter.
        :rtype: str
        """
        return self._blob_name

    @blob_name.setter
    def blob_name(self, blob_name):
        """Sets the blob_name of this GenerateUploadUriParameter.

        The blob name of the upload URI.

        :param blob_name: The blob_name of this GenerateUploadUriParameter.
        :type blob_name: str
        """

        self._blob_name = blob_name
