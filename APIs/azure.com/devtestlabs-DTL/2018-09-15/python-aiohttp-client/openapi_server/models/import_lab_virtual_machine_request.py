# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ImportLabVirtualMachineRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, destination_virtual_machine_name: str=None, source_virtual_machine_resource_id: str=None):
        """ImportLabVirtualMachineRequest - a model defined in OpenAPI

        :param destination_virtual_machine_name: The destination_virtual_machine_name of this ImportLabVirtualMachineRequest.
        :param source_virtual_machine_resource_id: The source_virtual_machine_resource_id of this ImportLabVirtualMachineRequest.
        """
        self.openapi_types = {
            'destination_virtual_machine_name': str,
            'source_virtual_machine_resource_id': str
        }

        self.attribute_map = {
            'destination_virtual_machine_name': 'destinationVirtualMachineName',
            'source_virtual_machine_resource_id': 'sourceVirtualMachineResourceId'
        }

        self._destination_virtual_machine_name = destination_virtual_machine_name
        self._source_virtual_machine_resource_id = source_virtual_machine_resource_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ImportLabVirtualMachineRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ImportLabVirtualMachineRequest of this ImportLabVirtualMachineRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def destination_virtual_machine_name(self):
        """Gets the destination_virtual_machine_name of this ImportLabVirtualMachineRequest.

        The name of the virtual machine in the destination lab

        :return: The destination_virtual_machine_name of this ImportLabVirtualMachineRequest.
        :rtype: str
        """
        return self._destination_virtual_machine_name

    @destination_virtual_machine_name.setter
    def destination_virtual_machine_name(self, destination_virtual_machine_name):
        """Sets the destination_virtual_machine_name of this ImportLabVirtualMachineRequest.

        The name of the virtual machine in the destination lab

        :param destination_virtual_machine_name: The destination_virtual_machine_name of this ImportLabVirtualMachineRequest.
        :type destination_virtual_machine_name: str
        """

        self._destination_virtual_machine_name = destination_virtual_machine_name

    @property
    def source_virtual_machine_resource_id(self):
        """Gets the source_virtual_machine_resource_id of this ImportLabVirtualMachineRequest.

        The full resource ID of the virtual machine to be imported.

        :return: The source_virtual_machine_resource_id of this ImportLabVirtualMachineRequest.
        :rtype: str
        """
        return self._source_virtual_machine_resource_id

    @source_virtual_machine_resource_id.setter
    def source_virtual_machine_resource_id(self, source_virtual_machine_resource_id):
        """Sets the source_virtual_machine_resource_id of this ImportLabVirtualMachineRequest.

        The full resource ID of the virtual machine to be imported.

        :param source_virtual_machine_resource_id: The source_virtual_machine_resource_id of this ImportLabVirtualMachineRequest.
        :type source_virtual_machine_resource_id: str
        """

        self._source_virtual_machine_resource_id = source_virtual_machine_resource_id
