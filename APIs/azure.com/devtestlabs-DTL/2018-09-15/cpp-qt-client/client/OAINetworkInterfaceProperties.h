/**
 * DevTestLabsClient
 * The DevTest Labs Client.
 *
 * The version of the OpenAPI document: 2018-09-15
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINetworkInterfaceProperties.h
 *
 * Properties of a network interface.
 */

#ifndef OAINetworkInterfaceProperties_H
#define OAINetworkInterfaceProperties_H

#include <QJsonObject>

#include "OAISharedPublicIpAddressConfiguration.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISharedPublicIpAddressConfiguration;

class OAINetworkInterfaceProperties : public OAIObject {
public:
    OAINetworkInterfaceProperties();
    OAINetworkInterfaceProperties(QString json);
    ~OAINetworkInterfaceProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDnsName() const;
    void setDnsName(const QString &dns_name);
    bool is_dns_name_Set() const;
    bool is_dns_name_Valid() const;

    QString getPrivateIpAddress() const;
    void setPrivateIpAddress(const QString &private_ip_address);
    bool is_private_ip_address_Set() const;
    bool is_private_ip_address_Valid() const;

    QString getPublicIpAddress() const;
    void setPublicIpAddress(const QString &public_ip_address);
    bool is_public_ip_address_Set() const;
    bool is_public_ip_address_Valid() const;

    QString getPublicIpAddressId() const;
    void setPublicIpAddressId(const QString &public_ip_address_id);
    bool is_public_ip_address_id_Set() const;
    bool is_public_ip_address_id_Valid() const;

    QString getRdpAuthority() const;
    void setRdpAuthority(const QString &rdp_authority);
    bool is_rdp_authority_Set() const;
    bool is_rdp_authority_Valid() const;

    OAISharedPublicIpAddressConfiguration getSharedPublicIpAddressConfiguration() const;
    void setSharedPublicIpAddressConfiguration(const OAISharedPublicIpAddressConfiguration &shared_public_ip_address_configuration);
    bool is_shared_public_ip_address_configuration_Set() const;
    bool is_shared_public_ip_address_configuration_Valid() const;

    QString getSshAuthority() const;
    void setSshAuthority(const QString &ssh_authority);
    bool is_ssh_authority_Set() const;
    bool is_ssh_authority_Valid() const;

    QString getSubnetId() const;
    void setSubnetId(const QString &subnet_id);
    bool is_subnet_id_Set() const;
    bool is_subnet_id_Valid() const;

    QString getVirtualNetworkId() const;
    void setVirtualNetworkId(const QString &virtual_network_id);
    bool is_virtual_network_id_Set() const;
    bool is_virtual_network_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_dns_name;
    bool m_dns_name_isSet;
    bool m_dns_name_isValid;

    QString m_private_ip_address;
    bool m_private_ip_address_isSet;
    bool m_private_ip_address_isValid;

    QString m_public_ip_address;
    bool m_public_ip_address_isSet;
    bool m_public_ip_address_isValid;

    QString m_public_ip_address_id;
    bool m_public_ip_address_id_isSet;
    bool m_public_ip_address_id_isValid;

    QString m_rdp_authority;
    bool m_rdp_authority_isSet;
    bool m_rdp_authority_isValid;

    OAISharedPublicIpAddressConfiguration m_shared_public_ip_address_configuration;
    bool m_shared_public_ip_address_configuration_isSet;
    bool m_shared_public_ip_address_configuration_isValid;

    QString m_ssh_authority;
    bool m_ssh_authority_isSet;
    bool m_ssh_authority_isValid;

    QString m_subnet_id;
    bool m_subnet_id_isSet;
    bool m_subnet_id_isValid;

    QString m_virtual_network_id;
    bool m_virtual_network_id_isSet;
    bool m_virtual_network_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINetworkInterfaceProperties)

#endif // OAINetworkInterfaceProperties_H
