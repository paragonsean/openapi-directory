/**
 * DevTestLabsClient
 * The DevTest Labs Client.
 *
 * The version of the OpenAPI document: 2018-09-15
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICustomImagePropertiesFromPlan.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICustomImagePropertiesFromPlan::OAICustomImagePropertiesFromPlan(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICustomImagePropertiesFromPlan::OAICustomImagePropertiesFromPlan() {
    this->initializeModel();
}

OAICustomImagePropertiesFromPlan::~OAICustomImagePropertiesFromPlan() {}

void OAICustomImagePropertiesFromPlan::initializeModel() {

    m_id_isSet = false;
    m_id_isValid = false;

    m_offer_isSet = false;
    m_offer_isValid = false;

    m_publisher_isSet = false;
    m_publisher_isValid = false;
}

void OAICustomImagePropertiesFromPlan::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICustomImagePropertiesFromPlan::fromJsonObject(QJsonObject json) {

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_offer_isValid = ::OpenAPI::fromJsonValue(m_offer, json[QString("offer")]);
    m_offer_isSet = !json[QString("offer")].isNull() && m_offer_isValid;

    m_publisher_isValid = ::OpenAPI::fromJsonValue(m_publisher, json[QString("publisher")]);
    m_publisher_isSet = !json[QString("publisher")].isNull() && m_publisher_isValid;
}

QString OAICustomImagePropertiesFromPlan::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICustomImagePropertiesFromPlan::asJsonObject() const {
    QJsonObject obj;
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_offer_isSet) {
        obj.insert(QString("offer"), ::OpenAPI::toJsonValue(m_offer));
    }
    if (m_publisher_isSet) {
        obj.insert(QString("publisher"), ::OpenAPI::toJsonValue(m_publisher));
    }
    return obj;
}

QString OAICustomImagePropertiesFromPlan::getId() const {
    return m_id;
}
void OAICustomImagePropertiesFromPlan::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAICustomImagePropertiesFromPlan::is_id_Set() const{
    return m_id_isSet;
}

bool OAICustomImagePropertiesFromPlan::is_id_Valid() const{
    return m_id_isValid;
}

QString OAICustomImagePropertiesFromPlan::getOffer() const {
    return m_offer;
}
void OAICustomImagePropertiesFromPlan::setOffer(const QString &offer) {
    m_offer = offer;
    m_offer_isSet = true;
}

bool OAICustomImagePropertiesFromPlan::is_offer_Set() const{
    return m_offer_isSet;
}

bool OAICustomImagePropertiesFromPlan::is_offer_Valid() const{
    return m_offer_isValid;
}

QString OAICustomImagePropertiesFromPlan::getPublisher() const {
    return m_publisher;
}
void OAICustomImagePropertiesFromPlan::setPublisher(const QString &publisher) {
    m_publisher = publisher;
    m_publisher_isSet = true;
}

bool OAICustomImagePropertiesFromPlan::is_publisher_Set() const{
    return m_publisher_isSet;
}

bool OAICustomImagePropertiesFromPlan::is_publisher_Valid() const{
    return m_publisher_isValid;
}

bool OAICustomImagePropertiesFromPlan::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_offer_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_publisher_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICustomImagePropertiesFromPlan::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
