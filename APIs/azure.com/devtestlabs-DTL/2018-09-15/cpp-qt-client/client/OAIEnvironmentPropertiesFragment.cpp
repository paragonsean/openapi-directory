/**
 * DevTestLabsClient
 * The DevTest Labs Client.
 *
 * The version of the OpenAPI document: 2018-09-15
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEnvironmentPropertiesFragment.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEnvironmentPropertiesFragment::OAIEnvironmentPropertiesFragment(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEnvironmentPropertiesFragment::OAIEnvironmentPropertiesFragment() {
    this->initializeModel();
}

OAIEnvironmentPropertiesFragment::~OAIEnvironmentPropertiesFragment() {}

void OAIEnvironmentPropertiesFragment::initializeModel() {

    m_arm_template_display_name_isSet = false;
    m_arm_template_display_name_isValid = false;

    m_deployment_properties_isSet = false;
    m_deployment_properties_isValid = false;
}

void OAIEnvironmentPropertiesFragment::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEnvironmentPropertiesFragment::fromJsonObject(QJsonObject json) {

    m_arm_template_display_name_isValid = ::OpenAPI::fromJsonValue(m_arm_template_display_name, json[QString("armTemplateDisplayName")]);
    m_arm_template_display_name_isSet = !json[QString("armTemplateDisplayName")].isNull() && m_arm_template_display_name_isValid;

    m_deployment_properties_isValid = ::OpenAPI::fromJsonValue(m_deployment_properties, json[QString("deploymentProperties")]);
    m_deployment_properties_isSet = !json[QString("deploymentProperties")].isNull() && m_deployment_properties_isValid;
}

QString OAIEnvironmentPropertiesFragment::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEnvironmentPropertiesFragment::asJsonObject() const {
    QJsonObject obj;
    if (m_arm_template_display_name_isSet) {
        obj.insert(QString("armTemplateDisplayName"), ::OpenAPI::toJsonValue(m_arm_template_display_name));
    }
    if (m_deployment_properties.isSet()) {
        obj.insert(QString("deploymentProperties"), ::OpenAPI::toJsonValue(m_deployment_properties));
    }
    return obj;
}

QString OAIEnvironmentPropertiesFragment::getArmTemplateDisplayName() const {
    return m_arm_template_display_name;
}
void OAIEnvironmentPropertiesFragment::setArmTemplateDisplayName(const QString &arm_template_display_name) {
    m_arm_template_display_name = arm_template_display_name;
    m_arm_template_display_name_isSet = true;
}

bool OAIEnvironmentPropertiesFragment::is_arm_template_display_name_Set() const{
    return m_arm_template_display_name_isSet;
}

bool OAIEnvironmentPropertiesFragment::is_arm_template_display_name_Valid() const{
    return m_arm_template_display_name_isValid;
}

OAIEnvironmentDeploymentPropertiesFragment OAIEnvironmentPropertiesFragment::getDeploymentProperties() const {
    return m_deployment_properties;
}
void OAIEnvironmentPropertiesFragment::setDeploymentProperties(const OAIEnvironmentDeploymentPropertiesFragment &deployment_properties) {
    m_deployment_properties = deployment_properties;
    m_deployment_properties_isSet = true;
}

bool OAIEnvironmentPropertiesFragment::is_deployment_properties_Set() const{
    return m_deployment_properties_isSet;
}

bool OAIEnvironmentPropertiesFragment::is_deployment_properties_Valid() const{
    return m_deployment_properties_isValid;
}

bool OAIEnvironmentPropertiesFragment::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_arm_template_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_deployment_properties.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEnvironmentPropertiesFragment::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
