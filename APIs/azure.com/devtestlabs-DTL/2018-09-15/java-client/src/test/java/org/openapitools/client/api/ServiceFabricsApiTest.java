/*
 * DevTestLabsClient
 * The DevTest Labs Client.
 *
 * The version of the OpenAPI document: 2018-09-15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ApplicableSchedule;
import org.openapitools.client.model.CloudError;
import org.openapitools.client.model.ServiceFabric;
import org.openapitools.client.model.ServiceFabricFragment;
import org.openapitools.client.model.ServiceFabricList;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ServiceFabricsApi
 */
@Disabled
public class ServiceFabricsApiTest {

    private final ServiceFabricsApi api = new ServiceFabricsApi();

    /**
     * Create or replace an existing service fabric. This operation can take a while to complete.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void serviceFabricsCreateOrUpdateTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String labName = null;
        String userName = null;
        String name = null;
        String apiVersion = null;
        ServiceFabric serviceFabric = null;
        ServiceFabric response = api.serviceFabricsCreateOrUpdate(subscriptionId, resourceGroupName, labName, userName, name, apiVersion, serviceFabric);
        // TODO: test validations
    }

    /**
     * Delete service fabric. This operation can take a while to complete.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void serviceFabricsDeleteTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String labName = null;
        String userName = null;
        String name = null;
        String apiVersion = null;
        api.serviceFabricsDelete(subscriptionId, resourceGroupName, labName, userName, name, apiVersion);
        // TODO: test validations
    }

    /**
     * Get service fabric.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void serviceFabricsGetTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String labName = null;
        String userName = null;
        String name = null;
        String apiVersion = null;
        String $expand = null;
        ServiceFabric response = api.serviceFabricsGet(subscriptionId, resourceGroupName, labName, userName, name, apiVersion, $expand);
        // TODO: test validations
    }

    /**
     * List service fabrics in a given user profile.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void serviceFabricsListTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String labName = null;
        String userName = null;
        String apiVersion = null;
        String $expand = null;
        String $filter = null;
        Integer $top = null;
        String $orderby = null;
        ServiceFabricList response = api.serviceFabricsList(subscriptionId, resourceGroupName, labName, userName, apiVersion, $expand, $filter, $top, $orderby);
        // TODO: test validations
    }

    /**
     * Lists the applicable start/stop schedules, if any.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void serviceFabricsListApplicableSchedulesTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String labName = null;
        String userName = null;
        String name = null;
        String apiVersion = null;
        ApplicableSchedule response = api.serviceFabricsListApplicableSchedules(subscriptionId, resourceGroupName, labName, userName, name, apiVersion);
        // TODO: test validations
    }

    /**
     * Start a service fabric. This operation can take a while to complete.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void serviceFabricsStartTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String labName = null;
        String userName = null;
        String name = null;
        String apiVersion = null;
        api.serviceFabricsStart(subscriptionId, resourceGroupName, labName, userName, name, apiVersion);
        // TODO: test validations
    }

    /**
     * Stop a service fabric This operation can take a while to complete.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void serviceFabricsStopTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String labName = null;
        String userName = null;
        String name = null;
        String apiVersion = null;
        api.serviceFabricsStop(subscriptionId, resourceGroupName, labName, userName, name, apiVersion);
        // TODO: test validations
    }

    /**
     * Allows modifying tags of service fabrics. All other properties will be ignored.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void serviceFabricsUpdateTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String labName = null;
        String userName = null;
        String name = null;
        String apiVersion = null;
        ServiceFabricFragment serviceFabric = null;
        ServiceFabric response = api.serviceFabricsUpdate(subscriptionId, resourceGroupName, labName, userName, name, apiVersion, serviceFabric);
        // TODO: test validations
    }

}
