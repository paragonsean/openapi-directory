/*
 * DevTestLabsClient
 * The DevTest Labs Client.
 *
 * The version of the OpenAPI document: 2018-09-15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ApplicableSchedule;
import org.openapitools.client.model.ApplyArtifactsRequest;
import org.openapitools.client.model.CloudError;
import org.openapitools.client.model.DataDiskProperties;
import org.openapitools.client.model.DetachDataDiskProperties;
import org.openapitools.client.model.LabVirtualMachine;
import org.openapitools.client.model.LabVirtualMachineFragment;
import org.openapitools.client.model.LabVirtualMachineList;
import org.openapitools.client.model.RdpConnection;
import org.openapitools.client.model.ResizeLabVirtualMachineProperties;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for VirtualMachinesApi
 */
@Disabled
public class VirtualMachinesApiTest {

    private final VirtualMachinesApi api = new VirtualMachinesApi();

    /**
     * Attach a new or existing data disk to virtual machine. This operation can take a while to complete.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void virtualMachinesAddDataDiskTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String labName = null;
        String name = null;
        String apiVersion = null;
        DataDiskProperties dataDiskProperties = null;
        api.virtualMachinesAddDataDisk(subscriptionId, resourceGroupName, labName, name, apiVersion, dataDiskProperties);
        // TODO: test validations
    }

    /**
     * Apply artifacts to virtual machine. This operation can take a while to complete.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void virtualMachinesApplyArtifactsTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String labName = null;
        String name = null;
        String apiVersion = null;
        ApplyArtifactsRequest applyArtifactsRequest = null;
        api.virtualMachinesApplyArtifacts(subscriptionId, resourceGroupName, labName, name, apiVersion, applyArtifactsRequest);
        // TODO: test validations
    }

    /**
     * Take ownership of an existing virtual machine This operation can take a while to complete.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void virtualMachinesClaimTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String labName = null;
        String name = null;
        String apiVersion = null;
        api.virtualMachinesClaim(subscriptionId, resourceGroupName, labName, name, apiVersion);
        // TODO: test validations
    }

    /**
     * Create or replace an existing virtual machine. This operation can take a while to complete.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void virtualMachinesCreateOrUpdateTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String labName = null;
        String name = null;
        String apiVersion = null;
        LabVirtualMachine labVirtualMachine = null;
        LabVirtualMachine response = api.virtualMachinesCreateOrUpdate(subscriptionId, resourceGroupName, labName, name, apiVersion, labVirtualMachine);
        // TODO: test validations
    }

    /**
     * Delete virtual machine. This operation can take a while to complete.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void virtualMachinesDeleteTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String labName = null;
        String name = null;
        String apiVersion = null;
        api.virtualMachinesDelete(subscriptionId, resourceGroupName, labName, name, apiVersion);
        // TODO: test validations
    }

    /**
     * Detach the specified disk from the virtual machine. This operation can take a while to complete.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void virtualMachinesDetachDataDiskTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String labName = null;
        String name = null;
        String apiVersion = null;
        DetachDataDiskProperties detachDataDiskProperties = null;
        api.virtualMachinesDetachDataDisk(subscriptionId, resourceGroupName, labName, name, apiVersion, detachDataDiskProperties);
        // TODO: test validations
    }

    /**
     * Get virtual machine.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void virtualMachinesGetTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String labName = null;
        String name = null;
        String apiVersion = null;
        String $expand = null;
        LabVirtualMachine response = api.virtualMachinesGet(subscriptionId, resourceGroupName, labName, name, apiVersion, $expand);
        // TODO: test validations
    }

    /**
     * Gets a string that represents the contents of the RDP file for the virtual machine
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void virtualMachinesGetRdpFileContentsTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String labName = null;
        String name = null;
        String apiVersion = null;
        RdpConnection response = api.virtualMachinesGetRdpFileContents(subscriptionId, resourceGroupName, labName, name, apiVersion);
        // TODO: test validations
    }

    /**
     * List virtual machines in a given lab.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void virtualMachinesListTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String labName = null;
        String apiVersion = null;
        String $expand = null;
        String $filter = null;
        Integer $top = null;
        String $orderby = null;
        LabVirtualMachineList response = api.virtualMachinesList(subscriptionId, resourceGroupName, labName, apiVersion, $expand, $filter, $top, $orderby);
        // TODO: test validations
    }

    /**
     * Lists the applicable start/stop schedules, if any.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void virtualMachinesListApplicableSchedulesTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String labName = null;
        String name = null;
        String apiVersion = null;
        ApplicableSchedule response = api.virtualMachinesListApplicableSchedules(subscriptionId, resourceGroupName, labName, name, apiVersion);
        // TODO: test validations
    }

    /**
     * Redeploy a virtual machine This operation can take a while to complete.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void virtualMachinesRedeployTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String labName = null;
        String name = null;
        String apiVersion = null;
        api.virtualMachinesRedeploy(subscriptionId, resourceGroupName, labName, name, apiVersion);
        // TODO: test validations
    }

    /**
     * Resize Virtual Machine. This operation can take a while to complete.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void virtualMachinesResizeTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String labName = null;
        String name = null;
        String apiVersion = null;
        ResizeLabVirtualMachineProperties resizeLabVirtualMachineProperties = null;
        api.virtualMachinesResize(subscriptionId, resourceGroupName, labName, name, apiVersion, resizeLabVirtualMachineProperties);
        // TODO: test validations
    }

    /**
     * Restart a virtual machine. This operation can take a while to complete.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void virtualMachinesRestartTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String labName = null;
        String name = null;
        String apiVersion = null;
        api.virtualMachinesRestart(subscriptionId, resourceGroupName, labName, name, apiVersion);
        // TODO: test validations
    }

    /**
     * Start a virtual machine. This operation can take a while to complete.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void virtualMachinesStartTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String labName = null;
        String name = null;
        String apiVersion = null;
        api.virtualMachinesStart(subscriptionId, resourceGroupName, labName, name, apiVersion);
        // TODO: test validations
    }

    /**
     * Stop a virtual machine This operation can take a while to complete.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void virtualMachinesStopTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String labName = null;
        String name = null;
        String apiVersion = null;
        api.virtualMachinesStop(subscriptionId, resourceGroupName, labName, name, apiVersion);
        // TODO: test validations
    }

    /**
     * Transfers all data disks attached to the virtual machine to be owned by the current user. This operation can take a while to complete.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void virtualMachinesTransferDisksTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String labName = null;
        String name = null;
        String apiVersion = null;
        api.virtualMachinesTransferDisks(subscriptionId, resourceGroupName, labName, name, apiVersion);
        // TODO: test validations
    }

    /**
     * Release ownership of an existing virtual machine This operation can take a while to complete.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void virtualMachinesUnClaimTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String labName = null;
        String name = null;
        String apiVersion = null;
        api.virtualMachinesUnClaim(subscriptionId, resourceGroupName, labName, name, apiVersion);
        // TODO: test validations
    }

    /**
     * Allows modifying tags of virtual machines. All other properties will be ignored.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void virtualMachinesUpdateTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String labName = null;
        String name = null;
        String apiVersion = null;
        LabVirtualMachineFragment labVirtualMachine = null;
        LabVirtualMachine response = api.virtualMachinesUpdate(subscriptionId, resourceGroupName, labName, name, apiVersion, labVirtualMachine);
        // TODO: test validations
    }

}
