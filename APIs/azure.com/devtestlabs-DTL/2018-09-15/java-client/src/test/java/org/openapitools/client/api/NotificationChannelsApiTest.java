/*
 * DevTestLabsClient
 * The DevTest Labs Client.
 *
 * The version of the OpenAPI document: 2018-09-15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CloudError;
import org.openapitools.client.model.NotificationChannel;
import org.openapitools.client.model.NotificationChannelFragment;
import org.openapitools.client.model.NotificationChannelList;
import org.openapitools.client.model.NotifyParameters;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for NotificationChannelsApi
 */
@Disabled
public class NotificationChannelsApiTest {

    private final NotificationChannelsApi api = new NotificationChannelsApi();

    /**
     * Create or replace an existing notification channel.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void notificationChannelsCreateOrUpdateTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String labName = null;
        String name = null;
        String apiVersion = null;
        NotificationChannel notificationChannel = null;
        NotificationChannel response = api.notificationChannelsCreateOrUpdate(subscriptionId, resourceGroupName, labName, name, apiVersion, notificationChannel);
        // TODO: test validations
    }

    /**
     * Delete notification channel.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void notificationChannelsDeleteTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String labName = null;
        String name = null;
        String apiVersion = null;
        api.notificationChannelsDelete(subscriptionId, resourceGroupName, labName, name, apiVersion);
        // TODO: test validations
    }

    /**
     * Get notification channel.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void notificationChannelsGetTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String labName = null;
        String name = null;
        String apiVersion = null;
        String $expand = null;
        NotificationChannel response = api.notificationChannelsGet(subscriptionId, resourceGroupName, labName, name, apiVersion, $expand);
        // TODO: test validations
    }

    /**
     * List notification channels in a given lab.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void notificationChannelsListTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String labName = null;
        String apiVersion = null;
        String $expand = null;
        String $filter = null;
        Integer $top = null;
        String $orderby = null;
        NotificationChannelList response = api.notificationChannelsList(subscriptionId, resourceGroupName, labName, apiVersion, $expand, $filter, $top, $orderby);
        // TODO: test validations
    }

    /**
     * Send notification to provided channel.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void notificationChannelsNotifyTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String labName = null;
        String name = null;
        String apiVersion = null;
        NotifyParameters notifyParameters = null;
        api.notificationChannelsNotify(subscriptionId, resourceGroupName, labName, name, apiVersion, notifyParameters);
        // TODO: test validations
    }

    /**
     * Allows modifying tags of notification channels. All other properties will be ignored.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void notificationChannelsUpdateTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String labName = null;
        String name = null;
        String apiVersion = null;
        NotificationChannelFragment notificationChannel = null;
        NotificationChannel response = api.notificationChannelsUpdate(subscriptionId, resourceGroupName, labName, name, apiVersion, notificationChannel);
        // TODO: test validations
    }

}
