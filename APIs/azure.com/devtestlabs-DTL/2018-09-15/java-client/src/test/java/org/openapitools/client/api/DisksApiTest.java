/*
 * DevTestLabsClient
 * The DevTest Labs Client.
 *
 * The version of the OpenAPI document: 2018-09-15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AttachDiskProperties;
import org.openapitools.client.model.CloudError;
import org.openapitools.client.model.DetachDiskProperties;
import org.openapitools.client.model.Disk;
import org.openapitools.client.model.DiskFragment;
import org.openapitools.client.model.DiskList;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DisksApi
 */
@Disabled
public class DisksApiTest {

    private final DisksApi api = new DisksApi();

    /**
     * Attach and create the lease of the disk to the virtual machine. This operation can take a while to complete.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void disksAttachTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String labName = null;
        String userName = null;
        String name = null;
        String apiVersion = null;
        AttachDiskProperties attachDiskProperties = null;
        api.disksAttach(subscriptionId, resourceGroupName, labName, userName, name, apiVersion, attachDiskProperties);
        // TODO: test validations
    }

    /**
     * Create or replace an existing disk. This operation can take a while to complete.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void disksCreateOrUpdateTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String labName = null;
        String userName = null;
        String name = null;
        String apiVersion = null;
        Disk disk = null;
        Disk response = api.disksCreateOrUpdate(subscriptionId, resourceGroupName, labName, userName, name, apiVersion, disk);
        // TODO: test validations
    }

    /**
     * Delete disk. This operation can take a while to complete.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void disksDeleteTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String labName = null;
        String userName = null;
        String name = null;
        String apiVersion = null;
        api.disksDelete(subscriptionId, resourceGroupName, labName, userName, name, apiVersion);
        // TODO: test validations
    }

    /**
     * Detach and break the lease of the disk attached to the virtual machine. This operation can take a while to complete.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void disksDetachTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String labName = null;
        String userName = null;
        String name = null;
        String apiVersion = null;
        DetachDiskProperties detachDiskProperties = null;
        api.disksDetach(subscriptionId, resourceGroupName, labName, userName, name, apiVersion, detachDiskProperties);
        // TODO: test validations
    }

    /**
     * Get disk.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void disksGetTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String labName = null;
        String userName = null;
        String name = null;
        String apiVersion = null;
        String $expand = null;
        Disk response = api.disksGet(subscriptionId, resourceGroupName, labName, userName, name, apiVersion, $expand);
        // TODO: test validations
    }

    /**
     * List disks in a given user profile.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void disksListTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String labName = null;
        String userName = null;
        String apiVersion = null;
        String $expand = null;
        String $filter = null;
        Integer $top = null;
        String $orderby = null;
        DiskList response = api.disksList(subscriptionId, resourceGroupName, labName, userName, apiVersion, $expand, $filter, $top, $orderby);
        // TODO: test validations
    }

    /**
     * Allows modifying tags of disks. All other properties will be ignored.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void disksUpdateTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String labName = null;
        String userName = null;
        String name = null;
        String apiVersion = null;
        DiskFragment disk = null;
        Disk response = api.disksUpdate(subscriptionId, resourceGroupName, labName, userName, name, apiVersion, disk);
        // TODO: test validations
    }

}
