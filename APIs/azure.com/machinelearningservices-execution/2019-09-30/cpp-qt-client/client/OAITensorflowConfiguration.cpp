/**
 * Execution Service
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-09-30
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITensorflowConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITensorflowConfiguration::OAITensorflowConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITensorflowConfiguration::OAITensorflowConfiguration() {
    this->initializeModel();
}

OAITensorflowConfiguration::~OAITensorflowConfiguration() {}

void OAITensorflowConfiguration::initializeModel() {

    m_parameter_server_count_isSet = false;
    m_parameter_server_count_isValid = false;

    m_worker_count_isSet = false;
    m_worker_count_isValid = false;
}

void OAITensorflowConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITensorflowConfiguration::fromJsonObject(QJsonObject json) {

    m_parameter_server_count_isValid = ::OpenAPI::fromJsonValue(m_parameter_server_count, json[QString("parameterServerCount")]);
    m_parameter_server_count_isSet = !json[QString("parameterServerCount")].isNull() && m_parameter_server_count_isValid;

    m_worker_count_isValid = ::OpenAPI::fromJsonValue(m_worker_count, json[QString("workerCount")]);
    m_worker_count_isSet = !json[QString("workerCount")].isNull() && m_worker_count_isValid;
}

QString OAITensorflowConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITensorflowConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_parameter_server_count_isSet) {
        obj.insert(QString("parameterServerCount"), ::OpenAPI::toJsonValue(m_parameter_server_count));
    }
    if (m_worker_count_isSet) {
        obj.insert(QString("workerCount"), ::OpenAPI::toJsonValue(m_worker_count));
    }
    return obj;
}

qint32 OAITensorflowConfiguration::getParameterServerCount() const {
    return m_parameter_server_count;
}
void OAITensorflowConfiguration::setParameterServerCount(const qint32 &parameter_server_count) {
    m_parameter_server_count = parameter_server_count;
    m_parameter_server_count_isSet = true;
}

bool OAITensorflowConfiguration::is_parameter_server_count_Set() const{
    return m_parameter_server_count_isSet;
}

bool OAITensorflowConfiguration::is_parameter_server_count_Valid() const{
    return m_parameter_server_count_isValid;
}

qint32 OAITensorflowConfiguration::getWorkerCount() const {
    return m_worker_count;
}
void OAITensorflowConfiguration::setWorkerCount(const qint32 &worker_count) {
    m_worker_count = worker_count;
    m_worker_count_isSet = true;
}

bool OAITensorflowConfiguration::is_worker_count_Set() const{
    return m_worker_count_isSet;
}

bool OAITensorflowConfiguration::is_worker_count_Valid() const{
    return m_worker_count_isValid;
}

bool OAITensorflowConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_parameter_server_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_worker_count_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITensorflowConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
