/**
 * Execution Service
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-09-30
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIHistoryConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIHistoryConfiguration::OAIHistoryConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIHistoryConfiguration::OAIHistoryConfiguration() {
    this->initializeModel();
}

OAIHistoryConfiguration::~OAIHistoryConfiguration() {}

void OAIHistoryConfiguration::initializeModel() {

    m_directories_to_watch_isSet = false;
    m_directories_to_watch_isValid = false;

    m_output_collection_isSet = false;
    m_output_collection_isValid = false;
}

void OAIHistoryConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIHistoryConfiguration::fromJsonObject(QJsonObject json) {

    m_directories_to_watch_isValid = ::OpenAPI::fromJsonValue(m_directories_to_watch, json[QString("directoriesToWatch")]);
    m_directories_to_watch_isSet = !json[QString("directoriesToWatch")].isNull() && m_directories_to_watch_isValid;

    m_output_collection_isValid = ::OpenAPI::fromJsonValue(m_output_collection, json[QString("outputCollection")]);
    m_output_collection_isSet = !json[QString("outputCollection")].isNull() && m_output_collection_isValid;
}

QString OAIHistoryConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIHistoryConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_directories_to_watch.size() > 0) {
        obj.insert(QString("directoriesToWatch"), ::OpenAPI::toJsonValue(m_directories_to_watch));
    }
    if (m_output_collection_isSet) {
        obj.insert(QString("outputCollection"), ::OpenAPI::toJsonValue(m_output_collection));
    }
    return obj;
}

QList<QString> OAIHistoryConfiguration::getDirectoriesToWatch() const {
    return m_directories_to_watch;
}
void OAIHistoryConfiguration::setDirectoriesToWatch(const QList<QString> &directories_to_watch) {
    m_directories_to_watch = directories_to_watch;
    m_directories_to_watch_isSet = true;
}

bool OAIHistoryConfiguration::is_directories_to_watch_Set() const{
    return m_directories_to_watch_isSet;
}

bool OAIHistoryConfiguration::is_directories_to_watch_Valid() const{
    return m_directories_to_watch_isValid;
}

bool OAIHistoryConfiguration::isOutputCollection() const {
    return m_output_collection;
}
void OAIHistoryConfiguration::setOutputCollection(const bool &output_collection) {
    m_output_collection = output_collection;
    m_output_collection_isSet = true;
}

bool OAIHistoryConfiguration::is_output_collection_Set() const{
    return m_output_collection_isSet;
}

bool OAIHistoryConfiguration::is_output_collection_Valid() const{
    return m_output_collection_isValid;
}

bool OAIHistoryConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_directories_to_watch.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_output_collection_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIHistoryConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
