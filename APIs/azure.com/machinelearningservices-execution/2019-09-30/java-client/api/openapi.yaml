openapi: 3.0.1
info:
  title: Execution Service
  version: 2019-09-30
  x-apisguru-categories:
  - cloud
  x-logo:
    url: https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png
  x-origin:
  - format: swagger
    url: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/machinelearningservices/data-plane/Microsoft.MachineLearningServices/preview/2019-09-30/execution.json
    version: "2.0"
  x-preferred: true
  x-providerName: azure.com
  x-serviceName: machinelearningservices-execution
  x-tags:
  - Azure
  - Microsoft
servers:
- url: https://azure.local/
security:
- azure_auth:
  - user_impersonation
tags: []
paths:
  ? /execution/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experiments/{experimentName}/runId/{runId}/cancel
  : post:
      description: Cancels a run within an experiment.
      operationId: Runs_CancelRunWithUri
      parameters:
      - description: The Azure Subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          format: uuid
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The Name of the resource group in which the workspace is located.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the workspace.
        in: path
        name: workspaceName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The experiment name.
        in: path
        name: experimentName
        required: true
        schema:
          type: string
      - description: The id of the run to cancel.
        in: path
        name: runId
        required: true
        schema:
          pattern: "^[a-zA-Z0-9][\\w-]{0,255}$"
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartRunResult'
          description: The run was successfully cancelled.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response describing why the operation failed.
      summary: Cancel a run.
      tags:
      - Execution
      x-ms-examples:
        Cancel a run with URI:
          parameters:
            dnsSuffix: api.azureml.ms
            experimentName: demo_experiment
            region: eastus
            resourceGroupName: demo_resource_group
            runId: demorun_15501234342_0
            subscriptionId: 00000000-0000-0000-0000-000000000000
            workspaceName: demo_workspace
          responses:
            "200":
              body:
                runId: demorun_15501234342_0
      x-accepts:
      - application/json
  ? /execution/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experiments/{experimentName}/snapshotrun
  : post:
      description: "Starts an experiment run on the remote compute target using the\
        \ provided definition.json file to define the run.\r\n            The code\
        \ for the run is retrieved using the snapshotId in definition.json."
      operationId: Runs_StartSnapshotRun
      parameters:
      - description: The Azure Subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          format: uuid
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The Name of the resource group in which the workspace is located.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the workspace.
        in: path
        name: workspaceName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The experiment name.
        in: path
        name: experimentName
        required: true
        schema:
          type: string
      - description: A run id. If not supplied a run id will be created automatically.
        in: query
        name: runId
        schema:
          pattern: "^[a-zA-Z0-9][\\w-]{0,255}$"
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RunDefinition'
        description: A JSON run definition structure.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartRunResult'
          description: A snapshot run was successfully started.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response describing why the operation failed.
      summary: Start a run from a snapshot on a remote compute target.
      tags:
      - Execution
      x-ms-examples:
        Start a snapshot run:
          parameters:
            definition:
              configuration:
                arguments:
                - "234"
                communicator: None
                environment:
                  docker:
                    baseImage: mcr.microsoft.com/azureml/base:0.2.2
                  python:
                    condaDependencies:
                      dependencies:
                      - python=3.6.2
                      - pip:
                        - azureml-defaults
                      name: project_environment
                    interpreterPath: python
                    userManagedDependencies: false
                framework: Python
                history: {}
                maxRunDurationSeconds: 1200
                nodeCount: 1
                script: findsquare.py
                target: batchai
              snapshotId: 00000000-0000-0000-0000-000000000000
            dnsSuffix: api.azureml.ms
            experimentName: demo_experiment
            region: eastus
            resourceGroupName: demo_resource_group
            subscriptionId: 00000000-0000-0000-0000-000000000000
            workspaceName: demo_workspace
          responses:
            "200":
              body:
                runId: demorun_15501234342_0
      x-codegen-request-body-name: definition
      x-content-type: application/json
      x-accepts:
      - application/json
  ? /execution/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experiments/{experimentName}/startlocalrun
  : post:
      description: "Starts an experiment run using the provided definition.json file\
        \ to define the run.\r\n            The source code and configuration is defined\
        \ in a zip archive in project.zip."
      operationId: Runs_StartLocalRun
      parameters:
      - description: The Azure Subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          format: uuid
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The Name of the resource group in which the workspace is located.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the workspace.
        in: path
        name: workspaceName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The experiment name.
        in: path
        name: experimentName
        required: true
        schema:
          type: string
      - description: A run id. If not supplied a run id will be created automatically.
        in: query
        name: runId
        schema:
          pattern: "^[a-zA-Z0-9][\\w-]{0,255}$"
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RunDefinition'
        description: A JSON run definition structure.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                format: binary
                type: string
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: File Response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response describing why the operation failed.
      summary: Start a run on a local machine.
      tags:
      - Execution
      x-ms-examples:
        Start a local run:
          parameters:
            definition:
              configuration:
                arguments:
                - "234"
                communicator: None
                environment:
                  docker:
                    baseImage: mcr.microsoft.com/azureml/base:0.2.2
                  python:
                    condaDependencies:
                      dependencies:
                      - python=3.6.2
                      - pip:
                        - azureml-defaults
                      name: project_environment
                    interpreterPath: python
                    userManagedDependencies: false
                framework: Python
                history: {}
                maxRunDurationSeconds: 1200
                nodeCount: 1
                script: findsquare.py
                target: batchai
              snapshotId: 00000000-0000-0000-0000-000000000000
            dnsSuffix: api.azureml.ms
            experimentName: demo_experiment
            region: eastus
            resourceGroupName: demo_resource_group
            subscriptionId: 00000000-0000-0000-0000-000000000000
            workspaceName: demo_workspace
          responses:
            "200":
              schema:
                format: byte
                type: file
      x-codegen-request-body-name: definition
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/octet-stream
  ? /execution/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experiments/{experimentName}/startrun
  : post:
      description: "Starts an experiment run using the provided definition.json file\
        \ to define the run.\r\n            The source code and configuration is defined\
        \ in a zip archive in project.zip."
      operationId: Runs_StartRun
      parameters:
      - description: The Azure Subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          format: uuid
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The Name of the resource group in which the workspace is located.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the workspace.
        in: path
        name: workspaceName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The experiment name.
        in: path
        name: experimentName
        required: true
        schema:
          type: string
      - description: A run id. If not supplied a run id will be created automatically.
        in: query
        name: runId
        schema:
          pattern: "^[a-zA-Z0-9][\\w-]{0,255}$"
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Runs_StartRun_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartRunResult'
          description: A run was successfully started.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response describing why the operation failed.
      summary: Start a run on a remote compute target.
      tags:
      - Execution
      x-ms-examples:
        Start a run:
          parameters:
            dnsSuffix: api.azureml.ms
            experimentName: demo_experiment
            projectZipFile: multipart-form-data
            region: eastus
            resourceGroupName: demo_resource_group
            runDefinitionFile: multipart-form-data
            subscriptionId: 00000000-0000-0000-0000-000000000000
            workspaceName: demo_workspace
          responses:
            "200":
              body:
                runId: demorun_15501234342_0
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
components:
  parameters:
    resourceGroupNameParameter:
      description: The Name of the resource group in which the workspace is located.
      in: path
      name: resourceGroupName
      required: true
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    subscriptionIdParameter:
      description: The Azure Subscription ID.
      in: path
      name: subscriptionId
      required: true
      schema:
        format: uuid
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    workspaceNameParameter:
      description: The name of the workspace.
      in: path
      name: workspaceName
      required: true
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
  schemas:
    ContainerRegistry:
      example:
        password: password
        address: address
        username: username
      properties:
        address:
          type: string
        password:
          type: string
        username:
          type: string
      type: object
    DataReferenceConfiguration:
      description: A class for managing DataReferenceConfiguration.
      example:
        mode: Mount
        pathOnDataStore: /images/validation
        dataStoreName: myblobstore
        pathOnCompute: pathOnCompute
        overwrite: true
      properties:
        dataStoreName:
          description: The name of the data store.
          example: myblobstore
          type: string
        mode:
          description: "Operation on the datastore, mount, download, upload."
          enum:
          - Mount
          - Download
          - Upload
          example: Mount
          type: string
          x-ms-enum:
            modelAsString: false
            name: DataStoreMode
        overwrite:
          description: Whether to overwrite the data if existing.
          type: boolean
        pathOnCompute:
          description: The path on the compute target.
          type: string
        pathOnDataStore:
          description: Relative path on the datastore.
          example: /images/validation
          type: string
      type: object
    DockerSection:
      example:
        sharedVolumes: true
        baseImage: ubuntu:latest
        arguments:
        - arguments
        - arguments
        baseDockerfile: "FROM ubuntu:latest\r\nRUN echo \"Hello world!\""
        enabled: true
        baseImageRegistry:
          password: password
          address: address
          username: username
      properties:
        arguments:
          description: Extra arguments to the Docker run command.
          items:
            type: string
          type: array
        baseDockerfile:
          description: Base Dockerfile used for Docker-based runs. Mutually exclusive
            with BaseImage.
          example: "FROM ubuntu:latest\r\nRUN echo \"Hello world!\""
          type: string
        baseImage:
          description: Base image used for Docker-based runs. Mutually exclusive with
            BaseDockerfile.
          example: ubuntu:latest
          type: string
        baseImageRegistry:
          $ref: '#/components/schemas/ContainerRegistry'
        enabled:
          description: Set true to perform this run inside a Docker container.
          type: boolean
        sharedVolumes:
          description: Set false to disable AzureML's usage of the Docker shared volumes
            feature to work around bugs in certain versions of Docker for Windows.
          type: boolean
      type: object
    EnvironmentDefinition:
      example:
        python:
          baseCondaEnvironment: baseCondaEnvironment
          userManagedDependencies: true
          condaDependencies: "{}"
          interpreterPath: interpreterPath
        spark:
          repositories:
          - repositories
          - repositories
          precachePackages: true
          packages:
          - artifact: artifact
            version: version
            group: group
          - artifact: artifact
            version: version
            group: group
        environmentVariables:
          key: environmentVariables
        inferencingStackVersion: latest
        name: mydevenvironment
        version: "1"
        docker:
          sharedVolumes: true
          baseImage: ubuntu:latest
          arguments:
          - arguments
          - arguments
          baseDockerfile: "FROM ubuntu:latest\r\nRUN echo \"Hello world!\""
          enabled: true
          baseImageRegistry:
            password: password
            address: address
            username: username
      properties:
        docker:
          $ref: '#/components/schemas/DockerSection'
        environmentVariables:
          additionalProperties:
            type: string
          description: Definition of environment variables to be defined in the environment.
          type: object
        inferencingStackVersion:
          description: "The inferencing stack version added to the image. To avoid\
            \ adding an inferencing stack, do not set this value. Valid values: \"\
            latest\"."
          example: latest
          type: string
        name:
          description: The name of the environment.
          example: mydevenvironment
          type: string
        python:
          $ref: '#/components/schemas/PythonSection'
        spark:
          $ref: '#/components/schemas/SparkSection'
        version:
          description: The environment version.
          example: "1"
          type: string
      type: object
    ErrorDetails:
      description: The error details.
      example:
        code: code
        message: message
        target: target
      properties:
        code:
          description: The error code.
          type: string
        message:
          description: The error message.
          type: string
        target:
          description: "The target of the error (e.g., the name of the property in\
            \ error)."
          type: string
      type: object
    ErrorResponse:
      description: The error response.
      example:
        environment: environment
        correlation:
          key: correlation
        location: location
        time: 2000-01-23T04:56:07.000+00:00
        error:
          code: code
          details:
          - code: code
            message: message
            target: target
          - code: code
            message: message
            target: target
          innerError:
            code: code
            innerError: null
          message: message
          target: target
      properties:
        correlation:
          additionalProperties:
            type: string
          description: Dictionary containing correlation details for the error.
          type: object
        environment:
          description: The hosting environment.
          type: string
        error:
          $ref: '#/components/schemas/RootError'
        location:
          description: The Azure region.
          type: string
        time:
          description: The time in UTC.
          format: date-time
          type: string
      type: object
    HdiConfiguration:
      example:
        yarnDeployMode: None
      properties:
        yarnDeployMode:
          enum:
          - None
          - Client
          - Cluster
          type: string
          x-ms-enum:
            modelAsString: false
            name: YarnDeployMode
      type: object
    HistoryConfiguration:
      example:
        directoriesToWatch: "[\"logs\", \"outputs\"]"
        outputCollection: true
      properties:
        directoriesToWatch:
          description: The list of directories to monitor and upload files from.
          example: "[\"logs\", \"outputs\"]"
          items:
            type: string
          type: array
        outputCollection:
          description: Set to true to collect outputs and store in run history.
          type: boolean
      type: object
    InnerErrorResponse:
      description: A nested structure of errors.
      example:
        code: code
        innerError: null
      properties:
        code:
          description: The error code.
          type: string
        innerError:
          $ref: '#/components/schemas/InnerErrorResponse'
      type: object
    MpiConfiguration:
      example:
        processCountPerNode: 2
      properties:
        processCountPerNode:
          description: Number of processes per node.
          example: 2
          format: int32
          type: integer
      type: object
    PythonSection:
      example:
        baseCondaEnvironment: baseCondaEnvironment
        userManagedDependencies: true
        condaDependencies: "{}"
        interpreterPath: interpreterPath
      properties:
        baseCondaEnvironment:
          type: string
        condaDependencies:
          properties: {}
          type: object
        interpreterPath:
          description: The python interpreter path. This is only used when user_managed_dependencies=True.
          type: string
        userManagedDependencies:
          description: True means that AzureML reuses an existing python environment;
            False means that AzureML will create a python environment based on the
            Conda dependencies specification.
          type: boolean
      type: object
    RootError:
      description: The root error.
      example:
        code: code
        details:
        - code: code
          message: message
          target: target
        - code: code
          message: message
          target: target
        innerError:
          code: code
          innerError: null
        message: message
        target: target
      properties:
        code:
          description: "The service-defined error code. Supported error codes: ServiceError,\
            \ UserError, ValidationError, AzureStorageError, TransientError, RequestThrottled."
          type: string
        details:
          description: The related errors that occurred during the request.
          items:
            $ref: '#/components/schemas/ErrorDetails'
          type: array
        innerError:
          $ref: '#/components/schemas/InnerErrorResponse'
        message:
          description: A human-readable representation of the error.
          type: string
        target:
          description: "The target of the error (e.g., the name of the property in\
            \ error)."
          type: string
      type: object
    RunConfiguration:
      example:
        jobName: FindSquaresJob
        mpi:
          processCountPerNode: 2
        history:
          directoriesToWatch: "[\"logs\", \"outputs\"]"
          outputCollection: true
        hdi:
          yarnDeployMode: None
        script: findsquare.py
        target: amlcompute
        environment:
          python:
            baseCondaEnvironment: baseCondaEnvironment
            userManagedDependencies: true
            condaDependencies: "{}"
            interpreterPath: interpreterPath
          spark:
            repositories:
            - repositories
            - repositories
            precachePackages: true
            packages:
            - artifact: artifact
              version: version
              group: group
            - artifact: artifact
              version: version
              group: group
          environmentVariables:
            key: environmentVariables
          inferencingStackVersion: latest
          name: mydevenvironment
          version: "1"
          docker:
            sharedVolumes: true
            baseImage: ubuntu:latest
            arguments:
            - arguments
            - arguments
            baseDockerfile: "FROM ubuntu:latest\r\nRUN echo \"Hello world!\""
            enabled: true
            baseImageRegistry:
              password: password
              address: address
              username: username
        tensorflow:
          workerCount: 2
          parameterServerCount: 1
        framework: Python
        spark:
          configuration:
            key: configuration
        maxRunDurationSeconds: 84000
        arguments: "[\"234\"]"
        nodeCount: 1
        communicator: None
        dataReferences:
          key:
            mode: Mount
            pathOnDataStore: /images/validation
            dataStoreName: myblobstore
            pathOnCompute: pathOnCompute
            overwrite: true
      properties:
        arguments:
          description: Command line arguments for the python script file.
          example: "[\"234\"]"
          items:
            type: string
          type: array
        communicator:
          description: "The supported communicators are None, ParameterServer, OpenMpi,\
            \ and IntelMpi Keep in mind that OpenMpi requires a custom image with\
            \ OpenMpi installed.\r\nUse ParameterServer or OpenMpi for AmlCompute\
            \ clusters. Use IntelMpi for distributed training jobs."
          enum:
          - None
          - ParameterServer
          - Gloo
          - Mpi
          - Nccl
          example: None
          type: string
          x-ms-enum:
            modelAsString: false
            name: Communicator
        dataReferences:
          additionalProperties:
            $ref: '#/components/schemas/DataReferenceConfiguration'
          description: All the data sources are made available to the run during execution
            based on each configuration.
          type: object
        environment:
          $ref: '#/components/schemas/EnvironmentDefinition'
        framework:
          description: "The supported frameworks are Python, PySpark, CNTK, TensorFlow,\
            \ and PyTorch. Use Tensorflow for AmlCompute clusters, and Python for\
            \ distributed training jobs."
          enum:
          - Python
          - PySpark
          - Cntk
          - TensorFlow
          - PyTorch
          example: Python
          type: string
          x-ms-enum:
            modelAsString: false
            name: Framework
        hdi:
          $ref: '#/components/schemas/HdiConfiguration'
        history:
          $ref: '#/components/schemas/HistoryConfiguration'
        jobName:
          description: "This is primarily intended for notebooks to override the default\
            \ job name.\r\nDefaults to ArgumentVector[0] if not specified."
          example: FindSquaresJob
          type: string
        maxRunDurationSeconds:
          description: "Maximum allowed time for the run. The system will attempt\
            \ to automatically cancel the run if it took longer than this value.\r\
            \nMaxRunDurationSeconds=null means infinite duration."
          example: 84000
          format: int64
          type: integer
        mpi:
          $ref: '#/components/schemas/MpiConfiguration'
        nodeCount:
          description: Number of compute nodes to run the job on. Only applies to
            AMLCompute.
          example: 1
          format: int32
          type: integer
        script:
          description: The relative path to the python script file. The file path
            is relative to the source_directory passed to submit run.
          example: findsquare.py
          type: string
        spark:
          $ref: '#/components/schemas/SparkConfiguration'
        target:
          description: Target refers to compute where the job is scheduled for execution.
            The default target is "local" referring to the local machine.
          example: amlcompute
          type: string
        tensorflow:
          $ref: '#/components/schemas/TensorflowConfiguration'
      type: object
    RunDefinition:
      example:
        parentRunId: myexperiment_155000000001_0
        snapshotId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        configuration:
          jobName: FindSquaresJob
          mpi:
            processCountPerNode: 2
          history:
            directoriesToWatch: "[\"logs\", \"outputs\"]"
            outputCollection: true
          hdi:
            yarnDeployMode: None
          script: findsquare.py
          target: amlcompute
          environment:
            python:
              baseCondaEnvironment: baseCondaEnvironment
              userManagedDependencies: true
              condaDependencies: "{}"
              interpreterPath: interpreterPath
            spark:
              repositories:
              - repositories
              - repositories
              precachePackages: true
              packages:
              - artifact: artifact
                version: version
                group: group
              - artifact: artifact
                version: version
                group: group
            environmentVariables:
              key: environmentVariables
            inferencingStackVersion: latest
            name: mydevenvironment
            version: "1"
            docker:
              sharedVolumes: true
              baseImage: ubuntu:latest
              arguments:
              - arguments
              - arguments
              baseDockerfile: "FROM ubuntu:latest\r\nRUN echo \"Hello world!\""
              enabled: true
              baseImageRegistry:
                password: password
                address: address
                username: username
          tensorflow:
            workerCount: 2
            parameterServerCount: 1
          framework: Python
          spark:
            configuration:
              key: configuration
          maxRunDurationSeconds: 84000
          arguments: "[\"234\"]"
          nodeCount: 1
          communicator: None
          dataReferences:
            key:
              mode: Mount
              pathOnDataStore: /images/validation
              dataStoreName: myblobstore
              pathOnCompute: pathOnCompute
              overwrite: true
        runType: experiment
      properties:
        configuration:
          $ref: '#/components/schemas/RunConfiguration'
        parentRunId:
          description: "Specifies that the run history entry for this execution should\
            \ be scoped within\r\nan existing run as a child. Defaults to null, meaning\
            \ the run has no parent.\r\nThis is intended for first-party service integration,\
            \ not third-party API users."
          example: myexperiment_155000000001_0
          type: string
        runType:
          description: Specifies the runsource property for this run. The default
            value is "experiment" if not specified.
          example: experiment
          type: string
        snapshotId:
          description: "Snapshots are user project folders that have been uploaded\
            \ to the cloud for subsequent\r\nexecution. This field is required when\
            \ executing against cloud-based compute targets\r\nunless the run submission\
            \ was against the API endpoint that takes a zipped project folder\r\n\
            inline with the request."
          format: uuid
          type: string
      type: object
    SparkConfiguration:
      example:
        configuration:
          key: configuration
      properties:
        configuration:
          additionalProperties:
            type: string
          type: object
      type: object
    SparkMavenPackage:
      example:
        artifact: artifact
        version: version
        group: group
      properties:
        artifact:
          type: string
        group:
          type: string
        version:
          type: string
      type: object
    SparkSection:
      example:
        repositories:
        - repositories
        - repositories
        precachePackages: true
        packages:
        - artifact: artifact
          version: version
          group: group
        - artifact: artifact
          version: version
          group: group
      properties:
        packages:
          description: The Spark packages to use.
          items:
            $ref: '#/components/schemas/SparkMavenPackage'
          type: array
        precachePackages:
          description: Whether to precache the packages.
          type: boolean
        repositories:
          description: The list of spark repositories.
          items:
            type: string
          type: array
      type: object
    StartRunResult:
      description: Contains the details of a run.
      example:
        runId: myexperiment_155000000001_0
      properties:
        runId:
          description: The identifier for a run.
          example: myexperiment_155000000001_0
          type: string
      required:
      - runId
      type: object
    TensorflowConfiguration:
      example:
        workerCount: 2
        parameterServerCount: 1
      properties:
        parameterServerCount:
          description: Number of parameter servers.
          example: 1
          format: int32
          type: integer
        workerCount:
          description: The number of workers.
          example: 2
          format: int32
          type: integer
      type: object
    Runs_StartRun_request:
      properties:
        runDefinitionFile:
          description: The JSON file containing the RunDefinition
          format: binary
          type: string
        projectZipFile:
          description: The zip archive of the project folder containing the source
            code to use for the run.
          format: binary
          type: string
      required:
      - projectZipFile
      - runDefinitionFile
      type: object
  securitySchemes:
    azure_auth:
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
      type: oauth2
x-original-swagger-version: "2.0"

