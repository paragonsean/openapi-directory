/**
 * Execution Service
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-09-30
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErrorResponse from '../model/ErrorResponse';
import RunDefinition from '../model/RunDefinition';
import StartRunResult from '../model/StartRunResult';

/**
* Execution service.
* @module api/ExecutionApi
* @version 2019-09-30
*/
export default class ExecutionApi {

    /**
    * Constructs a new ExecutionApi. 
    * @alias module:api/ExecutionApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the runsCancelRunWithUri operation.
     * @callback module:api/ExecutionApi~runsCancelRunWithUriCallback
     * @param {String} error Error message, if any.
     * @param {module:model/StartRunResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Cancel a run.
     * Cancels a run within an experiment.
     * @param {String} subscriptionId The Azure Subscription ID.
     * @param {String} resourceGroupName The Name of the resource group in which the workspace is located.
     * @param {String} workspaceName The name of the workspace.
     * @param {String} experimentName The experiment name.
     * @param {String} runId The id of the run to cancel.
     * @param {module:api/ExecutionApi~runsCancelRunWithUriCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/StartRunResult}
     */
    runsCancelRunWithUri(subscriptionId, resourceGroupName, workspaceName, experimentName, runId, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling runsCancelRunWithUri");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling runsCancelRunWithUri");
      }
      // verify the required parameter 'workspaceName' is set
      if (workspaceName === undefined || workspaceName === null) {
        throw new Error("Missing the required parameter 'workspaceName' when calling runsCancelRunWithUri");
      }
      // verify the required parameter 'experimentName' is set
      if (experimentName === undefined || experimentName === null) {
        throw new Error("Missing the required parameter 'experimentName' when calling runsCancelRunWithUri");
      }
      // verify the required parameter 'runId' is set
      if (runId === undefined || runId === null) {
        throw new Error("Missing the required parameter 'runId' when calling runsCancelRunWithUri");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'workspaceName': workspaceName,
        'experimentName': experimentName,
        'runId': runId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = StartRunResult;
      return this.apiClient.callApi(
        '/execution/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experiments/{experimentName}/runId/{runId}/cancel', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the runsStartLocalRun operation.
     * @callback module:api/ExecutionApi~runsStartLocalRunCallback
     * @param {String} error Error message, if any.
     * @param {File} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Start a run on a local machine.
     * Starts an experiment run using the provided definition.json file to define the run.              The source code and configuration is defined in a zip archive in project.zip.
     * @param {String} subscriptionId The Azure Subscription ID.
     * @param {String} resourceGroupName The Name of the resource group in which the workspace is located.
     * @param {String} workspaceName The name of the workspace.
     * @param {String} experimentName The experiment name.
     * @param {module:model/RunDefinition} definition A JSON run definition structure.
     * @param {Object} opts Optional parameters
     * @param {String} [runId] A run id. If not supplied a run id will be created automatically.
     * @param {module:api/ExecutionApi~runsStartLocalRunCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link File}
     */
    runsStartLocalRun(subscriptionId, resourceGroupName, workspaceName, experimentName, definition, opts, callback) {
      opts = opts || {};
      let postBody = definition;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling runsStartLocalRun");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling runsStartLocalRun");
      }
      // verify the required parameter 'workspaceName' is set
      if (workspaceName === undefined || workspaceName === null) {
        throw new Error("Missing the required parameter 'workspaceName' when calling runsStartLocalRun");
      }
      // verify the required parameter 'experimentName' is set
      if (experimentName === undefined || experimentName === null) {
        throw new Error("Missing the required parameter 'experimentName' when calling runsStartLocalRun");
      }
      // verify the required parameter 'definition' is set
      if (definition === undefined || definition === null) {
        throw new Error("Missing the required parameter 'definition' when calling runsStartLocalRun");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'workspaceName': workspaceName,
        'experimentName': experimentName
      };
      let queryParams = {
        'runId': opts['runId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json', 'application/octet-stream'];
      let returnType = File;
      return this.apiClient.callApi(
        '/execution/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experiments/{experimentName}/startlocalrun', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the runsStartRun operation.
     * @callback module:api/ExecutionApi~runsStartRunCallback
     * @param {String} error Error message, if any.
     * @param {module:model/StartRunResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Start a run on a remote compute target.
     * Starts an experiment run using the provided definition.json file to define the run.              The source code and configuration is defined in a zip archive in project.zip.
     * @param {String} subscriptionId The Azure Subscription ID.
     * @param {String} resourceGroupName The Name of the resource group in which the workspace is located.
     * @param {String} workspaceName The name of the workspace.
     * @param {String} experimentName The experiment name.
     * @param {File} runDefinitionFile The JSON file containing the RunDefinition
     * @param {File} projectZipFile The zip archive of the project folder containing the source code to use for the run.
     * @param {Object} opts Optional parameters
     * @param {String} [runId] A run id. If not supplied a run id will be created automatically.
     * @param {module:api/ExecutionApi~runsStartRunCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/StartRunResult}
     */
    runsStartRun(subscriptionId, resourceGroupName, workspaceName, experimentName, runDefinitionFile, projectZipFile, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling runsStartRun");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling runsStartRun");
      }
      // verify the required parameter 'workspaceName' is set
      if (workspaceName === undefined || workspaceName === null) {
        throw new Error("Missing the required parameter 'workspaceName' when calling runsStartRun");
      }
      // verify the required parameter 'experimentName' is set
      if (experimentName === undefined || experimentName === null) {
        throw new Error("Missing the required parameter 'experimentName' when calling runsStartRun");
      }
      // verify the required parameter 'runDefinitionFile' is set
      if (runDefinitionFile === undefined || runDefinitionFile === null) {
        throw new Error("Missing the required parameter 'runDefinitionFile' when calling runsStartRun");
      }
      // verify the required parameter 'projectZipFile' is set
      if (projectZipFile === undefined || projectZipFile === null) {
        throw new Error("Missing the required parameter 'projectZipFile' when calling runsStartRun");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'workspaceName': workspaceName,
        'experimentName': experimentName
      };
      let queryParams = {
        'runId': opts['runId']
      };
      let headerParams = {
      };
      let formParams = {
        'runDefinitionFile': runDefinitionFile,
        'projectZipFile': projectZipFile
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['multipart/form-data'];
      let accepts = ['application/json'];
      let returnType = StartRunResult;
      return this.apiClient.callApi(
        '/execution/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experiments/{experimentName}/startrun', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the runsStartSnapshotRun operation.
     * @callback module:api/ExecutionApi~runsStartSnapshotRunCallback
     * @param {String} error Error message, if any.
     * @param {module:model/StartRunResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Start a run from a snapshot on a remote compute target.
     * Starts an experiment run on the remote compute target using the provided definition.json file to define the run.              The code for the run is retrieved using the snapshotId in definition.json.
     * @param {String} subscriptionId The Azure Subscription ID.
     * @param {String} resourceGroupName The Name of the resource group in which the workspace is located.
     * @param {String} workspaceName The name of the workspace.
     * @param {String} experimentName The experiment name.
     * @param {module:model/RunDefinition} definition A JSON run definition structure.
     * @param {Object} opts Optional parameters
     * @param {String} [runId] A run id. If not supplied a run id will be created automatically.
     * @param {module:api/ExecutionApi~runsStartSnapshotRunCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/StartRunResult}
     */
    runsStartSnapshotRun(subscriptionId, resourceGroupName, workspaceName, experimentName, definition, opts, callback) {
      opts = opts || {};
      let postBody = definition;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling runsStartSnapshotRun");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling runsStartSnapshotRun");
      }
      // verify the required parameter 'workspaceName' is set
      if (workspaceName === undefined || workspaceName === null) {
        throw new Error("Missing the required parameter 'workspaceName' when calling runsStartSnapshotRun");
      }
      // verify the required parameter 'experimentName' is set
      if (experimentName === undefined || experimentName === null) {
        throw new Error("Missing the required parameter 'experimentName' when calling runsStartSnapshotRun");
      }
      // verify the required parameter 'definition' is set
      if (definition === undefined || definition === null) {
        throw new Error("Missing the required parameter 'definition' when calling runsStartSnapshotRun");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'workspaceName': workspaceName,
        'experimentName': experimentName
      };
      let queryParams = {
        'runId': opts['runId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = StartRunResult;
      return this.apiClient.callApi(
        '/execution/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experiments/{experimentName}/snapshotrun', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
