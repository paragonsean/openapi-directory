# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class HistoryConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, directories_to_watch: List[str]=None, output_collection: bool=None):
        """HistoryConfiguration - a model defined in OpenAPI

        :param directories_to_watch: The directories_to_watch of this HistoryConfiguration.
        :param output_collection: The output_collection of this HistoryConfiguration.
        """
        self.openapi_types = {
            'directories_to_watch': List[str],
            'output_collection': bool
        }

        self.attribute_map = {
            'directories_to_watch': 'directoriesToWatch',
            'output_collection': 'outputCollection'
        }

        self._directories_to_watch = directories_to_watch
        self._output_collection = output_collection

    @classmethod
    def from_dict(cls, dikt: dict) -> 'HistoryConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The HistoryConfiguration of this HistoryConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def directories_to_watch(self):
        """Gets the directories_to_watch of this HistoryConfiguration.

        The list of directories to monitor and upload files from.

        :return: The directories_to_watch of this HistoryConfiguration.
        :rtype: List[str]
        """
        return self._directories_to_watch

    @directories_to_watch.setter
    def directories_to_watch(self, directories_to_watch):
        """Sets the directories_to_watch of this HistoryConfiguration.

        The list of directories to monitor and upload files from.

        :param directories_to_watch: The directories_to_watch of this HistoryConfiguration.
        :type directories_to_watch: List[str]
        """

        self._directories_to_watch = directories_to_watch

    @property
    def output_collection(self):
        """Gets the output_collection of this HistoryConfiguration.

        Set to true to collect outputs and store in run history.

        :return: The output_collection of this HistoryConfiguration.
        :rtype: bool
        """
        return self._output_collection

    @output_collection.setter
    def output_collection(self, output_collection):
        """Sets the output_collection of this HistoryConfiguration.

        Set to true to collect outputs and store in run history.

        :param output_collection: The output_collection of this HistoryConfiguration.
        :type output_collection: bool
        """

        self._output_collection = output_collection
