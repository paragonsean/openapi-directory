/*
 * Execution Service
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-08-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ErrorResponse;
import java.io.File;
import org.openapitools.client.model.RunDefinition;
import org.openapitools.client.model.StartRunResult;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ExecutionApi
 */
@Disabled
public class ExecutionApiTest {

    private final ExecutionApi api = new ExecutionApi();

    /**
     * Cancel a run.
     *
     * Cancels a run within an experiment.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void executionCancelRunWithUriTest() throws ApiException {
        UUID subscriptionId = null;
        String resourceGroupName = null;
        String workspaceName = null;
        String experimentName = null;
        String runId = null;
        StartRunResult response = api.executionCancelRunWithUri(subscriptionId, resourceGroupName, workspaceName, experimentName, runId);
        // TODO: test validations
    }

    /**
     * Start a run on a local machine.
     *
     * Starts an experiment run using the provided definition.json file to define the run.              The source code and configuration is defined in a zip archive in project.zip.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void executionStartLocalRunTest() throws ApiException {
        UUID subscriptionId = null;
        String resourceGroupName = null;
        String workspaceName = null;
        String experimentName = null;
        RunDefinition definition = null;
        String runId = null;
        File response = api.executionStartLocalRun(subscriptionId, resourceGroupName, workspaceName, experimentName, definition, runId);
        // TODO: test validations
    }

    /**
     * Start a run on a remote compute target.
     *
     * Starts an experiment run using the provided definition.json file to define the run.              The source code and configuration is defined in a zip archive in project.zip.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void executionStartRunTest() throws ApiException {
        UUID subscriptionId = null;
        String resourceGroupName = null;
        String workspaceName = null;
        String experimentName = null;
        File runDefinitionFile = null;
        File projectZipFile = null;
        String runId = null;
        StartRunResult response = api.executionStartRun(subscriptionId, resourceGroupName, workspaceName, experimentName, runDefinitionFile, projectZipFile, runId);
        // TODO: test validations
    }

    /**
     * Start a run from a snapshot on a remote compute target.
     *
     * Starts an experiment run on the remote compute target using the provided definition.json file to define the run.              The code for the run is retrieved using the snapshotId in definition.json.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void executionStartSnapshotRunTest() throws ApiException {
        UUID subscriptionId = null;
        String resourceGroupName = null;
        String workspaceName = null;
        String experimentName = null;
        RunDefinition definition = null;
        String runId = null;
        StartRunResult response = api.executionStartSnapshotRun(subscriptionId, resourceGroupName, workspaceName, experimentName, definition, runId);
        // TODO: test validations
    }

}
