/**
 * Execution Service
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-08-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The HistoryConfiguration model module.
 * @module model/HistoryConfiguration
 * @version 2019-08-01
 */
class HistoryConfiguration {
    /**
     * Constructs a new <code>HistoryConfiguration</code>.
     * @alias module:model/HistoryConfiguration
     */
    constructor() { 
        
        HistoryConfiguration.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>HistoryConfiguration</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/HistoryConfiguration} obj Optional instance to populate.
     * @return {module:model/HistoryConfiguration} The populated <code>HistoryConfiguration</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new HistoryConfiguration();

            if (data.hasOwnProperty('directoriesToWatch')) {
                obj['directoriesToWatch'] = ApiClient.convertToType(data['directoriesToWatch'], ['String']);
            }
            if (data.hasOwnProperty('outputCollection')) {
                obj['outputCollection'] = ApiClient.convertToType(data['outputCollection'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>HistoryConfiguration</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>HistoryConfiguration</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['directoriesToWatch'])) {
            throw new Error("Expected the field `directoriesToWatch` to be an array in the JSON data but got " + data['directoriesToWatch']);
        }

        return true;
    }


}



/**
 * The list of directories to monitor and upload files from.
 * @member {Array.<String>} directoriesToWatch
 */
HistoryConfiguration.prototype['directoriesToWatch'] = undefined;

/**
 * Set to true to collect outputs and store in run history.
 * @member {Boolean} outputCollection
 */
HistoryConfiguration.prototype['outputCollection'] = undefined;






export default HistoryConfiguration;

