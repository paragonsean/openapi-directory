# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ApplicationInsightsComponentAPIKey(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, api_key: str=None, created_date: str=None, id: str=None, linked_read_properties: List[str]=None, linked_write_properties: List[str]=None, name: str=None):
        """ApplicationInsightsComponentAPIKey - a model defined in OpenAPI

        :param api_key: The api_key of this ApplicationInsightsComponentAPIKey.
        :param created_date: The created_date of this ApplicationInsightsComponentAPIKey.
        :param id: The id of this ApplicationInsightsComponentAPIKey.
        :param linked_read_properties: The linked_read_properties of this ApplicationInsightsComponentAPIKey.
        :param linked_write_properties: The linked_write_properties of this ApplicationInsightsComponentAPIKey.
        :param name: The name of this ApplicationInsightsComponentAPIKey.
        """
        self.openapi_types = {
            'api_key': str,
            'created_date': str,
            'id': str,
            'linked_read_properties': List[str],
            'linked_write_properties': List[str],
            'name': str
        }

        self.attribute_map = {
            'api_key': 'apiKey',
            'created_date': 'createdDate',
            'id': 'id',
            'linked_read_properties': 'linkedReadProperties',
            'linked_write_properties': 'linkedWriteProperties',
            'name': 'name'
        }

        self._api_key = api_key
        self._created_date = created_date
        self._id = id
        self._linked_read_properties = linked_read_properties
        self._linked_write_properties = linked_write_properties
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApplicationInsightsComponentAPIKey':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ApplicationInsightsComponentAPIKey of this ApplicationInsightsComponentAPIKey.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def api_key(self):
        """Gets the api_key of this ApplicationInsightsComponentAPIKey.

        The API key value. It will be only return once when the API Key was created.

        :return: The api_key of this ApplicationInsightsComponentAPIKey.
        :rtype: str
        """
        return self._api_key

    @api_key.setter
    def api_key(self, api_key):
        """Sets the api_key of this ApplicationInsightsComponentAPIKey.

        The API key value. It will be only return once when the API Key was created.

        :param api_key: The api_key of this ApplicationInsightsComponentAPIKey.
        :type api_key: str
        """

        self._api_key = api_key

    @property
    def created_date(self):
        """Gets the created_date of this ApplicationInsightsComponentAPIKey.

        The create date of this API key.

        :return: The created_date of this ApplicationInsightsComponentAPIKey.
        :rtype: str
        """
        return self._created_date

    @created_date.setter
    def created_date(self, created_date):
        """Sets the created_date of this ApplicationInsightsComponentAPIKey.

        The create date of this API key.

        :param created_date: The created_date of this ApplicationInsightsComponentAPIKey.
        :type created_date: str
        """

        self._created_date = created_date

    @property
    def id(self):
        """Gets the id of this ApplicationInsightsComponentAPIKey.

        The unique ID of the API key inside an Application Insights component. It is auto generated when the API key is created.

        :return: The id of this ApplicationInsightsComponentAPIKey.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ApplicationInsightsComponentAPIKey.

        The unique ID of the API key inside an Application Insights component. It is auto generated when the API key is created.

        :param id: The id of this ApplicationInsightsComponentAPIKey.
        :type id: str
        """

        self._id = id

    @property
    def linked_read_properties(self):
        """Gets the linked_read_properties of this ApplicationInsightsComponentAPIKey.

        The read access rights of this API Key.

        :return: The linked_read_properties of this ApplicationInsightsComponentAPIKey.
        :rtype: List[str]
        """
        return self._linked_read_properties

    @linked_read_properties.setter
    def linked_read_properties(self, linked_read_properties):
        """Sets the linked_read_properties of this ApplicationInsightsComponentAPIKey.

        The read access rights of this API Key.

        :param linked_read_properties: The linked_read_properties of this ApplicationInsightsComponentAPIKey.
        :type linked_read_properties: List[str]
        """

        self._linked_read_properties = linked_read_properties

    @property
    def linked_write_properties(self):
        """Gets the linked_write_properties of this ApplicationInsightsComponentAPIKey.

        The write access rights of this API Key.

        :return: The linked_write_properties of this ApplicationInsightsComponentAPIKey.
        :rtype: List[str]
        """
        return self._linked_write_properties

    @linked_write_properties.setter
    def linked_write_properties(self, linked_write_properties):
        """Sets the linked_write_properties of this ApplicationInsightsComponentAPIKey.

        The write access rights of this API Key.

        :param linked_write_properties: The linked_write_properties of this ApplicationInsightsComponentAPIKey.
        :type linked_write_properties: List[str]
        """

        self._linked_write_properties = linked_write_properties

    @property
    def name(self):
        """Gets the name of this ApplicationInsightsComponentAPIKey.

        The name of the API key.

        :return: The name of this ApplicationInsightsComponentAPIKey.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ApplicationInsightsComponentAPIKey.

        The name of the API key.

        :param name: The name of this ApplicationInsightsComponentAPIKey.
        :type name: str
        """

        self._name = name
