# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class APIKeyRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, linked_read_properties: List[str]=None, linked_write_properties: List[str]=None, name: str=None):
        """APIKeyRequest - a model defined in OpenAPI

        :param linked_read_properties: The linked_read_properties of this APIKeyRequest.
        :param linked_write_properties: The linked_write_properties of this APIKeyRequest.
        :param name: The name of this APIKeyRequest.
        """
        self.openapi_types = {
            'linked_read_properties': List[str],
            'linked_write_properties': List[str],
            'name': str
        }

        self.attribute_map = {
            'linked_read_properties': 'linkedReadProperties',
            'linked_write_properties': 'linkedWriteProperties',
            'name': 'name'
        }

        self._linked_read_properties = linked_read_properties
        self._linked_write_properties = linked_write_properties
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'APIKeyRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The APIKeyRequest of this APIKeyRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def linked_read_properties(self):
        """Gets the linked_read_properties of this APIKeyRequest.

        The read access rights of this API Key.

        :return: The linked_read_properties of this APIKeyRequest.
        :rtype: List[str]
        """
        return self._linked_read_properties

    @linked_read_properties.setter
    def linked_read_properties(self, linked_read_properties):
        """Sets the linked_read_properties of this APIKeyRequest.

        The read access rights of this API Key.

        :param linked_read_properties: The linked_read_properties of this APIKeyRequest.
        :type linked_read_properties: List[str]
        """

        self._linked_read_properties = linked_read_properties

    @property
    def linked_write_properties(self):
        """Gets the linked_write_properties of this APIKeyRequest.

        The write access rights of this API Key.

        :return: The linked_write_properties of this APIKeyRequest.
        :rtype: List[str]
        """
        return self._linked_write_properties

    @linked_write_properties.setter
    def linked_write_properties(self, linked_write_properties):
        """Sets the linked_write_properties of this APIKeyRequest.

        The write access rights of this API Key.

        :param linked_write_properties: The linked_write_properties of this APIKeyRequest.
        :type linked_write_properties: List[str]
        """

        self._linked_write_properties = linked_write_properties

    @property
    def name(self):
        """Gets the name of this APIKeyRequest.

        The name of the API Key.

        :return: The name of this APIKeyRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this APIKeyRequest.

        The name of the API Key.

        :param name: The name of this APIKeyRequest.
        :type name: str
        """

        self._name = name
