/**
 * SqlManagementClient
 * The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.
 *
 * The version of the OpenAPI document: 2015-05-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISyncGroupLogProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISyncGroupLogProperties::OAISyncGroupLogProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISyncGroupLogProperties::OAISyncGroupLogProperties() {
    this->initializeModel();
}

OAISyncGroupLogProperties::~OAISyncGroupLogProperties() {}

void OAISyncGroupLogProperties::initializeModel() {

    m_details_isSet = false;
    m_details_isValid = false;

    m_operation_status_isSet = false;
    m_operation_status_isValid = false;

    m_source_isSet = false;
    m_source_isValid = false;

    m_timestamp_isSet = false;
    m_timestamp_isValid = false;

    m_tracing_id_isSet = false;
    m_tracing_id_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAISyncGroupLogProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISyncGroupLogProperties::fromJsonObject(QJsonObject json) {

    m_details_isValid = ::OpenAPI::fromJsonValue(m_details, json[QString("details")]);
    m_details_isSet = !json[QString("details")].isNull() && m_details_isValid;

    m_operation_status_isValid = ::OpenAPI::fromJsonValue(m_operation_status, json[QString("operationStatus")]);
    m_operation_status_isSet = !json[QString("operationStatus")].isNull() && m_operation_status_isValid;

    m_source_isValid = ::OpenAPI::fromJsonValue(m_source, json[QString("source")]);
    m_source_isSet = !json[QString("source")].isNull() && m_source_isValid;

    m_timestamp_isValid = ::OpenAPI::fromJsonValue(m_timestamp, json[QString("timestamp")]);
    m_timestamp_isSet = !json[QString("timestamp")].isNull() && m_timestamp_isValid;

    m_tracing_id_isValid = ::OpenAPI::fromJsonValue(m_tracing_id, json[QString("tracingId")]);
    m_tracing_id_isSet = !json[QString("tracingId")].isNull() && m_tracing_id_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAISyncGroupLogProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISyncGroupLogProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_details_isSet) {
        obj.insert(QString("details"), ::OpenAPI::toJsonValue(m_details));
    }
    if (m_operation_status_isSet) {
        obj.insert(QString("operationStatus"), ::OpenAPI::toJsonValue(m_operation_status));
    }
    if (m_source_isSet) {
        obj.insert(QString("source"), ::OpenAPI::toJsonValue(m_source));
    }
    if (m_timestamp_isSet) {
        obj.insert(QString("timestamp"), ::OpenAPI::toJsonValue(m_timestamp));
    }
    if (m_tracing_id_isSet) {
        obj.insert(QString("tracingId"), ::OpenAPI::toJsonValue(m_tracing_id));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

QString OAISyncGroupLogProperties::getDetails() const {
    return m_details;
}
void OAISyncGroupLogProperties::setDetails(const QString &details) {
    m_details = details;
    m_details_isSet = true;
}

bool OAISyncGroupLogProperties::is_details_Set() const{
    return m_details_isSet;
}

bool OAISyncGroupLogProperties::is_details_Valid() const{
    return m_details_isValid;
}

QString OAISyncGroupLogProperties::getOperationStatus() const {
    return m_operation_status;
}
void OAISyncGroupLogProperties::setOperationStatus(const QString &operation_status) {
    m_operation_status = operation_status;
    m_operation_status_isSet = true;
}

bool OAISyncGroupLogProperties::is_operation_status_Set() const{
    return m_operation_status_isSet;
}

bool OAISyncGroupLogProperties::is_operation_status_Valid() const{
    return m_operation_status_isValid;
}

QString OAISyncGroupLogProperties::getSource() const {
    return m_source;
}
void OAISyncGroupLogProperties::setSource(const QString &source) {
    m_source = source;
    m_source_isSet = true;
}

bool OAISyncGroupLogProperties::is_source_Set() const{
    return m_source_isSet;
}

bool OAISyncGroupLogProperties::is_source_Valid() const{
    return m_source_isValid;
}

QDateTime OAISyncGroupLogProperties::getTimestamp() const {
    return m_timestamp;
}
void OAISyncGroupLogProperties::setTimestamp(const QDateTime &timestamp) {
    m_timestamp = timestamp;
    m_timestamp_isSet = true;
}

bool OAISyncGroupLogProperties::is_timestamp_Set() const{
    return m_timestamp_isSet;
}

bool OAISyncGroupLogProperties::is_timestamp_Valid() const{
    return m_timestamp_isValid;
}

QString OAISyncGroupLogProperties::getTracingId() const {
    return m_tracing_id;
}
void OAISyncGroupLogProperties::setTracingId(const QString &tracing_id) {
    m_tracing_id = tracing_id;
    m_tracing_id_isSet = true;
}

bool OAISyncGroupLogProperties::is_tracing_id_Set() const{
    return m_tracing_id_isSet;
}

bool OAISyncGroupLogProperties::is_tracing_id_Valid() const{
    return m_tracing_id_isValid;
}

QString OAISyncGroupLogProperties::getType() const {
    return m_type;
}
void OAISyncGroupLogProperties::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAISyncGroupLogProperties::is_type_Set() const{
    return m_type_isSet;
}

bool OAISyncGroupLogProperties::is_type_Valid() const{
    return m_type_isValid;
}

bool OAISyncGroupLogProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_details_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_operation_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_source_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_timestamp_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tracing_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISyncGroupLogProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
