/**
 * SqlManagementClient
 * The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.
 *
 * The version of the OpenAPI document: 2015-05-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISyncGroupSchemaTable.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISyncGroupSchemaTable::OAISyncGroupSchemaTable(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISyncGroupSchemaTable::OAISyncGroupSchemaTable() {
    this->initializeModel();
}

OAISyncGroupSchemaTable::~OAISyncGroupSchemaTable() {}

void OAISyncGroupSchemaTable::initializeModel() {

    m_columns_isSet = false;
    m_columns_isValid = false;

    m_quoted_name_isSet = false;
    m_quoted_name_isValid = false;
}

void OAISyncGroupSchemaTable::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISyncGroupSchemaTable::fromJsonObject(QJsonObject json) {

    m_columns_isValid = ::OpenAPI::fromJsonValue(m_columns, json[QString("columns")]);
    m_columns_isSet = !json[QString("columns")].isNull() && m_columns_isValid;

    m_quoted_name_isValid = ::OpenAPI::fromJsonValue(m_quoted_name, json[QString("quotedName")]);
    m_quoted_name_isSet = !json[QString("quotedName")].isNull() && m_quoted_name_isValid;
}

QString OAISyncGroupSchemaTable::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISyncGroupSchemaTable::asJsonObject() const {
    QJsonObject obj;
    if (m_columns.size() > 0) {
        obj.insert(QString("columns"), ::OpenAPI::toJsonValue(m_columns));
    }
    if (m_quoted_name_isSet) {
        obj.insert(QString("quotedName"), ::OpenAPI::toJsonValue(m_quoted_name));
    }
    return obj;
}

QList<OAISyncGroupSchemaTableColumn> OAISyncGroupSchemaTable::getColumns() const {
    return m_columns;
}
void OAISyncGroupSchemaTable::setColumns(const QList<OAISyncGroupSchemaTableColumn> &columns) {
    m_columns = columns;
    m_columns_isSet = true;
}

bool OAISyncGroupSchemaTable::is_columns_Set() const{
    return m_columns_isSet;
}

bool OAISyncGroupSchemaTable::is_columns_Valid() const{
    return m_columns_isValid;
}

QString OAISyncGroupSchemaTable::getQuotedName() const {
    return m_quoted_name;
}
void OAISyncGroupSchemaTable::setQuotedName(const QString &quoted_name) {
    m_quoted_name = quoted_name;
    m_quoted_name_isSet = true;
}

bool OAISyncGroupSchemaTable::is_quoted_name_Set() const{
    return m_quoted_name_isSet;
}

bool OAISyncGroupSchemaTable::is_quoted_name_Valid() const{
    return m_quoted_name_isValid;
}

bool OAISyncGroupSchemaTable::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_columns.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_quoted_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISyncGroupSchemaTable::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
