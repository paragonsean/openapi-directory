/**
 * SqlManagementClient
 * The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.
 *
 * The version of the OpenAPI document: 2015-05-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISyncGroupSchemaTableColumn.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISyncGroupSchemaTableColumn::OAISyncGroupSchemaTableColumn(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISyncGroupSchemaTableColumn::OAISyncGroupSchemaTableColumn() {
    this->initializeModel();
}

OAISyncGroupSchemaTableColumn::~OAISyncGroupSchemaTableColumn() {}

void OAISyncGroupSchemaTableColumn::initializeModel() {

    m_data_size_isSet = false;
    m_data_size_isValid = false;

    m_data_type_isSet = false;
    m_data_type_isValid = false;

    m_quoted_name_isSet = false;
    m_quoted_name_isValid = false;
}

void OAISyncGroupSchemaTableColumn::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISyncGroupSchemaTableColumn::fromJsonObject(QJsonObject json) {

    m_data_size_isValid = ::OpenAPI::fromJsonValue(m_data_size, json[QString("dataSize")]);
    m_data_size_isSet = !json[QString("dataSize")].isNull() && m_data_size_isValid;

    m_data_type_isValid = ::OpenAPI::fromJsonValue(m_data_type, json[QString("dataType")]);
    m_data_type_isSet = !json[QString("dataType")].isNull() && m_data_type_isValid;

    m_quoted_name_isValid = ::OpenAPI::fromJsonValue(m_quoted_name, json[QString("quotedName")]);
    m_quoted_name_isSet = !json[QString("quotedName")].isNull() && m_quoted_name_isValid;
}

QString OAISyncGroupSchemaTableColumn::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISyncGroupSchemaTableColumn::asJsonObject() const {
    QJsonObject obj;
    if (m_data_size_isSet) {
        obj.insert(QString("dataSize"), ::OpenAPI::toJsonValue(m_data_size));
    }
    if (m_data_type_isSet) {
        obj.insert(QString("dataType"), ::OpenAPI::toJsonValue(m_data_type));
    }
    if (m_quoted_name_isSet) {
        obj.insert(QString("quotedName"), ::OpenAPI::toJsonValue(m_quoted_name));
    }
    return obj;
}

QString OAISyncGroupSchemaTableColumn::getDataSize() const {
    return m_data_size;
}
void OAISyncGroupSchemaTableColumn::setDataSize(const QString &data_size) {
    m_data_size = data_size;
    m_data_size_isSet = true;
}

bool OAISyncGroupSchemaTableColumn::is_data_size_Set() const{
    return m_data_size_isSet;
}

bool OAISyncGroupSchemaTableColumn::is_data_size_Valid() const{
    return m_data_size_isValid;
}

QString OAISyncGroupSchemaTableColumn::getDataType() const {
    return m_data_type;
}
void OAISyncGroupSchemaTableColumn::setDataType(const QString &data_type) {
    m_data_type = data_type;
    m_data_type_isSet = true;
}

bool OAISyncGroupSchemaTableColumn::is_data_type_Set() const{
    return m_data_type_isSet;
}

bool OAISyncGroupSchemaTableColumn::is_data_type_Valid() const{
    return m_data_type_isValid;
}

QString OAISyncGroupSchemaTableColumn::getQuotedName() const {
    return m_quoted_name;
}
void OAISyncGroupSchemaTableColumn::setQuotedName(const QString &quoted_name) {
    m_quoted_name = quoted_name;
    m_quoted_name_isSet = true;
}

bool OAISyncGroupSchemaTableColumn::is_quoted_name_Set() const{
    return m_quoted_name_isSet;
}

bool OAISyncGroupSchemaTableColumn::is_quoted_name_Valid() const{
    return m_quoted_name_isValid;
}

bool OAISyncGroupSchemaTableColumn::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_data_size_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_data_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quoted_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISyncGroupSchemaTableColumn::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
