/**
 * SqlManagementClient
 * The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.
 *
 * The version of the OpenAPI document: 2015-05-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISyncGroupSchema.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISyncGroupSchema::OAISyncGroupSchema(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISyncGroupSchema::OAISyncGroupSchema() {
    this->initializeModel();
}

OAISyncGroupSchema::~OAISyncGroupSchema() {}

void OAISyncGroupSchema::initializeModel() {

    m_master_sync_member_name_isSet = false;
    m_master_sync_member_name_isValid = false;

    m_tables_isSet = false;
    m_tables_isValid = false;
}

void OAISyncGroupSchema::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISyncGroupSchema::fromJsonObject(QJsonObject json) {

    m_master_sync_member_name_isValid = ::OpenAPI::fromJsonValue(m_master_sync_member_name, json[QString("masterSyncMemberName")]);
    m_master_sync_member_name_isSet = !json[QString("masterSyncMemberName")].isNull() && m_master_sync_member_name_isValid;

    m_tables_isValid = ::OpenAPI::fromJsonValue(m_tables, json[QString("tables")]);
    m_tables_isSet = !json[QString("tables")].isNull() && m_tables_isValid;
}

QString OAISyncGroupSchema::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISyncGroupSchema::asJsonObject() const {
    QJsonObject obj;
    if (m_master_sync_member_name_isSet) {
        obj.insert(QString("masterSyncMemberName"), ::OpenAPI::toJsonValue(m_master_sync_member_name));
    }
    if (m_tables.size() > 0) {
        obj.insert(QString("tables"), ::OpenAPI::toJsonValue(m_tables));
    }
    return obj;
}

QString OAISyncGroupSchema::getMasterSyncMemberName() const {
    return m_master_sync_member_name;
}
void OAISyncGroupSchema::setMasterSyncMemberName(const QString &master_sync_member_name) {
    m_master_sync_member_name = master_sync_member_name;
    m_master_sync_member_name_isSet = true;
}

bool OAISyncGroupSchema::is_master_sync_member_name_Set() const{
    return m_master_sync_member_name_isSet;
}

bool OAISyncGroupSchema::is_master_sync_member_name_Valid() const{
    return m_master_sync_member_name_isValid;
}

QList<OAISyncGroupSchemaTable> OAISyncGroupSchema::getTables() const {
    return m_tables;
}
void OAISyncGroupSchema::setTables(const QList<OAISyncGroupSchemaTable> &tables) {
    m_tables = tables;
    m_tables_isSet = true;
}

bool OAISyncGroupSchema::is_tables_Set() const{
    return m_tables_isSet;
}

bool OAISyncGroupSchema::is_tables_Valid() const{
    return m_tables_isValid;
}

bool OAISyncGroupSchema::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_master_sync_member_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tables.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISyncGroupSchema::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
