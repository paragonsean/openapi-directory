/*
 * SqlManagementClient
 * The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.
 *
 * The version of the OpenAPI document: 2015-05-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.SyncDatabaseIdListResult;
import org.openapitools.client.model.SyncFullSchemaPropertiesListResult;
import org.openapitools.client.model.SyncGroup;
import org.openapitools.client.model.SyncGroupListResult;
import org.openapitools.client.model.SyncGroupLogListResult;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SyncGroupsApi
 */
@Disabled
public class SyncGroupsApiTest {

    private final SyncGroupsApi api = new SyncGroupsApi();

    /**
     * Cancels a sync group synchronization.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void syncGroupsCancelSyncTest() throws ApiException {
        String resourceGroupName = null;
        String serverName = null;
        String databaseName = null;
        String syncGroupName = null;
        String subscriptionId = null;
        String apiVersion = null;
        api.syncGroupsCancelSync(resourceGroupName, serverName, databaseName, syncGroupName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Creates or updates a sync group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void syncGroupsCreateOrUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String serverName = null;
        String databaseName = null;
        String syncGroupName = null;
        String subscriptionId = null;
        String apiVersion = null;
        SyncGroup parameters = null;
        SyncGroup response = api.syncGroupsCreateOrUpdate(resourceGroupName, serverName, databaseName, syncGroupName, subscriptionId, apiVersion, parameters);
        // TODO: test validations
    }

    /**
     * Deletes a sync group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void syncGroupsDeleteTest() throws ApiException {
        String resourceGroupName = null;
        String serverName = null;
        String databaseName = null;
        String syncGroupName = null;
        String subscriptionId = null;
        String apiVersion = null;
        api.syncGroupsDelete(resourceGroupName, serverName, databaseName, syncGroupName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets a sync group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void syncGroupsGetTest() throws ApiException {
        String resourceGroupName = null;
        String serverName = null;
        String databaseName = null;
        String syncGroupName = null;
        String subscriptionId = null;
        String apiVersion = null;
        SyncGroup response = api.syncGroupsGet(resourceGroupName, serverName, databaseName, syncGroupName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Lists sync groups under a hub database.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void syncGroupsListByDatabaseTest() throws ApiException {
        String resourceGroupName = null;
        String serverName = null;
        String databaseName = null;
        String subscriptionId = null;
        String apiVersion = null;
        SyncGroupListResult response = api.syncGroupsListByDatabase(resourceGroupName, serverName, databaseName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets a collection of hub database schemas.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void syncGroupsListHubSchemasTest() throws ApiException {
        String resourceGroupName = null;
        String serverName = null;
        String databaseName = null;
        String syncGroupName = null;
        String subscriptionId = null;
        String apiVersion = null;
        SyncFullSchemaPropertiesListResult response = api.syncGroupsListHubSchemas(resourceGroupName, serverName, databaseName, syncGroupName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets a collection of sync group logs.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void syncGroupsListLogsTest() throws ApiException {
        String resourceGroupName = null;
        String serverName = null;
        String databaseName = null;
        String syncGroupName = null;
        String startTime = null;
        String endTime = null;
        String type = null;
        String subscriptionId = null;
        String apiVersion = null;
        String continuationToken = null;
        SyncGroupLogListResult response = api.syncGroupsListLogs(resourceGroupName, serverName, databaseName, syncGroupName, startTime, endTime, type, subscriptionId, apiVersion, continuationToken);
        // TODO: test validations
    }

    /**
     * Gets a collection of sync database ids.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void syncGroupsListSyncDatabaseIdsTest() throws ApiException {
        String locationName = null;
        String subscriptionId = null;
        String apiVersion = null;
        SyncDatabaseIdListResult response = api.syncGroupsListSyncDatabaseIds(locationName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Refreshes a hub database schema.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void syncGroupsRefreshHubSchemaTest() throws ApiException {
        String resourceGroupName = null;
        String serverName = null;
        String databaseName = null;
        String syncGroupName = null;
        String subscriptionId = null;
        String apiVersion = null;
        api.syncGroupsRefreshHubSchema(resourceGroupName, serverName, databaseName, syncGroupName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Triggers a sync group synchronization.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void syncGroupsTriggerSyncTest() throws ApiException {
        String resourceGroupName = null;
        String serverName = null;
        String databaseName = null;
        String syncGroupName = null;
        String subscriptionId = null;
        String apiVersion = null;
        api.syncGroupsTriggerSync(resourceGroupName, serverName, databaseName, syncGroupName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Updates a sync group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void syncGroupsUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String serverName = null;
        String databaseName = null;
        String syncGroupName = null;
        String subscriptionId = null;
        String apiVersion = null;
        SyncGroup parameters = null;
        SyncGroup response = api.syncGroupsUpdate(resourceGroupName, serverName, databaseName, syncGroupName, subscriptionId, apiVersion, parameters);
        // TODO: test validations
    }

}
