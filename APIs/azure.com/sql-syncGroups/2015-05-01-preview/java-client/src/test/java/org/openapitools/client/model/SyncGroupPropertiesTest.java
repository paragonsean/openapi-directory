/*
 * SqlManagementClient
 * The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.
 *
 * The version of the OpenAPI document: 2015-05-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.SyncGroupSchema;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for SyncGroupProperties
 */
public class SyncGroupPropertiesTest {
    private final SyncGroupProperties model = new SyncGroupProperties();

    /**
     * Model tests for SyncGroupProperties
     */
    @Test
    public void testSyncGroupProperties() {
        // TODO: test SyncGroupProperties
    }

    /**
     * Test the property 'conflictResolutionPolicy'
     */
    @Test
    public void conflictResolutionPolicyTest() {
        // TODO: test conflictResolutionPolicy
    }

    /**
     * Test the property 'hubDatabasePassword'
     */
    @Test
    public void hubDatabasePasswordTest() {
        // TODO: test hubDatabasePassword
    }

    /**
     * Test the property 'hubDatabaseUserName'
     */
    @Test
    public void hubDatabaseUserNameTest() {
        // TODO: test hubDatabaseUserName
    }

    /**
     * Test the property 'interval'
     */
    @Test
    public void intervalTest() {
        // TODO: test interval
    }

    /**
     * Test the property 'lastSyncTime'
     */
    @Test
    public void lastSyncTimeTest() {
        // TODO: test lastSyncTime
    }

    /**
     * Test the property 'schema'
     */
    @Test
    public void schemaTest() {
        // TODO: test schema
    }

    /**
     * Test the property 'syncDatabaseId'
     */
    @Test
    public void syncDatabaseIdTest() {
        // TODO: test syncDatabaseId
    }

    /**
     * Test the property 'syncState'
     */
    @Test
    public void syncStateTest() {
        // TODO: test syncState
    }

}
