/**
 * ApiManagementClient
 * Use these REST APIs for performing operations on Subscription entity associated with your Azure API Management deployment. The Subscription entity represents the association between a user and a product in API Management. Products contain one or more APIs, and once a product is published, developers can subscribe to the product and begin to use the product’s APIs.
 *
 * The version of the OpenAPI document: 2017-03-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import SubscriptionCollection from './model/SubscriptionCollection';
import SubscriptionContract from './model/SubscriptionContract';
import SubscriptionContractProperties from './model/SubscriptionContractProperties';
import SubscriptionCreateParameters from './model/SubscriptionCreateParameters';
import SubscriptionListDefaultResponse from './model/SubscriptionListDefaultResponse';
import SubscriptionListDefaultResponseDetailsInner from './model/SubscriptionListDefaultResponseDetailsInner';
import SubscriptionUpdateParameters from './model/SubscriptionUpdateParameters';
import SubscriptionsApi from './api/SubscriptionsApi';


/**
* Use these REST APIs for performing operations on Subscription entity associated with your Azure API Management deployment. The Subscription entity represents the association between a user and a product in API Management. Products contain one or more APIs, and once a product is published, developers can subscribe to the product and begin to use the product’s APIs..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var ApiManagementClient = require('index'); // See note below*.
* var xxxSvc = new ApiManagementClient.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new ApiManagementClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new ApiManagementClient.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new ApiManagementClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2017-03-01
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The SubscriptionCollection model constructor.
     * @property {module:model/SubscriptionCollection}
     */
    SubscriptionCollection,

    /**
     * The SubscriptionContract model constructor.
     * @property {module:model/SubscriptionContract}
     */
    SubscriptionContract,

    /**
     * The SubscriptionContractProperties model constructor.
     * @property {module:model/SubscriptionContractProperties}
     */
    SubscriptionContractProperties,

    /**
     * The SubscriptionCreateParameters model constructor.
     * @property {module:model/SubscriptionCreateParameters}
     */
    SubscriptionCreateParameters,

    /**
     * The SubscriptionListDefaultResponse model constructor.
     * @property {module:model/SubscriptionListDefaultResponse}
     */
    SubscriptionListDefaultResponse,

    /**
     * The SubscriptionListDefaultResponseDetailsInner model constructor.
     * @property {module:model/SubscriptionListDefaultResponseDetailsInner}
     */
    SubscriptionListDefaultResponseDetailsInner,

    /**
     * The SubscriptionUpdateParameters model constructor.
     * @property {module:model/SubscriptionUpdateParameters}
     */
    SubscriptionUpdateParameters,

    /**
    * The SubscriptionsApi service constructor.
    * @property {module:api/SubscriptionsApi}
    */
    SubscriptionsApi
};
