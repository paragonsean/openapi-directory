/**
 * ApiManagementClient
 * Use these REST APIs for performing operations on Subscription entity associated with your Azure API Management deployment. The Subscription entity represents the association between a user and a product in API Management. Products contain one or more APIs, and once a product is published, developers can subscribe to the product and begin to use the product’s APIs.
 *
 * The version of the OpenAPI document: 2019-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import SubscriptionCreateOrUpdateRequest from './model/SubscriptionCreateOrUpdateRequest';
import SubscriptionCreateOrUpdateRequestProperties from './model/SubscriptionCreateOrUpdateRequestProperties';
import SubscriptionGet200Response from './model/SubscriptionGet200Response';
import SubscriptionList200Response from './model/SubscriptionList200Response';
import SubscriptionList200ResponseValueInner from './model/SubscriptionList200ResponseValueInner';
import SubscriptionList200ResponseValueInnerProperties from './model/SubscriptionList200ResponseValueInnerProperties';
import SubscriptionListDefaultResponse from './model/SubscriptionListDefaultResponse';
import SubscriptionListDefaultResponseError from './model/SubscriptionListDefaultResponseError';
import SubscriptionListDefaultResponseErrorDetailsInner from './model/SubscriptionListDefaultResponseErrorDetailsInner';
import SubscriptionUpdateRequest from './model/SubscriptionUpdateRequest';
import SubscriptionUpdateRequestProperties from './model/SubscriptionUpdateRequestProperties';
import SubscriptionApi from './api/SubscriptionApi';
import SubscriptionsApi from './api/SubscriptionsApi';


/**
* Use these REST APIs for performing operations on Subscription entity associated with your Azure API Management deployment. The Subscription entity represents the association between a user and a product in API Management. Products contain one or more APIs, and once a product is published, developers can subscribe to the product and begin to use the product’s APIs..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var ApiManagementClient = require('index'); // See note below*.
* var xxxSvc = new ApiManagementClient.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new ApiManagementClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new ApiManagementClient.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new ApiManagementClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2019-01-01
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The SubscriptionCreateOrUpdateRequest model constructor.
     * @property {module:model/SubscriptionCreateOrUpdateRequest}
     */
    SubscriptionCreateOrUpdateRequest,

    /**
     * The SubscriptionCreateOrUpdateRequestProperties model constructor.
     * @property {module:model/SubscriptionCreateOrUpdateRequestProperties}
     */
    SubscriptionCreateOrUpdateRequestProperties,

    /**
     * The SubscriptionGet200Response model constructor.
     * @property {module:model/SubscriptionGet200Response}
     */
    SubscriptionGet200Response,

    /**
     * The SubscriptionList200Response model constructor.
     * @property {module:model/SubscriptionList200Response}
     */
    SubscriptionList200Response,

    /**
     * The SubscriptionList200ResponseValueInner model constructor.
     * @property {module:model/SubscriptionList200ResponseValueInner}
     */
    SubscriptionList200ResponseValueInner,

    /**
     * The SubscriptionList200ResponseValueInnerProperties model constructor.
     * @property {module:model/SubscriptionList200ResponseValueInnerProperties}
     */
    SubscriptionList200ResponseValueInnerProperties,

    /**
     * The SubscriptionListDefaultResponse model constructor.
     * @property {module:model/SubscriptionListDefaultResponse}
     */
    SubscriptionListDefaultResponse,

    /**
     * The SubscriptionListDefaultResponseError model constructor.
     * @property {module:model/SubscriptionListDefaultResponseError}
     */
    SubscriptionListDefaultResponseError,

    /**
     * The SubscriptionListDefaultResponseErrorDetailsInner model constructor.
     * @property {module:model/SubscriptionListDefaultResponseErrorDetailsInner}
     */
    SubscriptionListDefaultResponseErrorDetailsInner,

    /**
     * The SubscriptionUpdateRequest model constructor.
     * @property {module:model/SubscriptionUpdateRequest}
     */
    SubscriptionUpdateRequest,

    /**
     * The SubscriptionUpdateRequestProperties model constructor.
     * @property {module:model/SubscriptionUpdateRequestProperties}
     */
    SubscriptionUpdateRequestProperties,

    /**
    * The SubscriptionApi service constructor.
    * @property {module:api/SubscriptionApi}
    */
    SubscriptionApi,

    /**
    * The SubscriptionsApi service constructor.
    * @property {module:api/SubscriptionsApi}
    */
    SubscriptionsApi
};
