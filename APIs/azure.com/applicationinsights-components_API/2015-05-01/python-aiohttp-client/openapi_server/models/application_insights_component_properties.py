# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ApplicationInsightsComponentProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, app_id: str=None, application_id: str=None, application_type: str='web', connection_string: str=None, creation_date: datetime=None, disable_ip_masking: bool=None, flow_type: str='Bluefield', hockey_app_id: str=None, hockey_app_token: str=None, immediate_purge_data_on30_days: bool=None, instrumentation_key: str=None, request_source: str='rest', retention_in_days: int=None, sampling_percentage: float=None, tenant_id: str=None, provisioning_state: str=None):
        """ApplicationInsightsComponentProperties - a model defined in OpenAPI

        :param app_id: The app_id of this ApplicationInsightsComponentProperties.
        :param application_id: The application_id of this ApplicationInsightsComponentProperties.
        :param application_type: The application_type of this ApplicationInsightsComponentProperties.
        :param connection_string: The connection_string of this ApplicationInsightsComponentProperties.
        :param creation_date: The creation_date of this ApplicationInsightsComponentProperties.
        :param disable_ip_masking: The disable_ip_masking of this ApplicationInsightsComponentProperties.
        :param flow_type: The flow_type of this ApplicationInsightsComponentProperties.
        :param hockey_app_id: The hockey_app_id of this ApplicationInsightsComponentProperties.
        :param hockey_app_token: The hockey_app_token of this ApplicationInsightsComponentProperties.
        :param immediate_purge_data_on30_days: The immediate_purge_data_on30_days of this ApplicationInsightsComponentProperties.
        :param instrumentation_key: The instrumentation_key of this ApplicationInsightsComponentProperties.
        :param request_source: The request_source of this ApplicationInsightsComponentProperties.
        :param retention_in_days: The retention_in_days of this ApplicationInsightsComponentProperties.
        :param sampling_percentage: The sampling_percentage of this ApplicationInsightsComponentProperties.
        :param tenant_id: The tenant_id of this ApplicationInsightsComponentProperties.
        :param provisioning_state: The provisioning_state of this ApplicationInsightsComponentProperties.
        """
        self.openapi_types = {
            'app_id': str,
            'application_id': str,
            'application_type': str,
            'connection_string': str,
            'creation_date': datetime,
            'disable_ip_masking': bool,
            'flow_type': str,
            'hockey_app_id': str,
            'hockey_app_token': str,
            'immediate_purge_data_on30_days': bool,
            'instrumentation_key': str,
            'request_source': str,
            'retention_in_days': int,
            'sampling_percentage': float,
            'tenant_id': str,
            'provisioning_state': str
        }

        self.attribute_map = {
            'app_id': 'AppId',
            'application_id': 'ApplicationId',
            'application_type': 'Application_Type',
            'connection_string': 'ConnectionString',
            'creation_date': 'CreationDate',
            'disable_ip_masking': 'DisableIpMasking',
            'flow_type': 'Flow_Type',
            'hockey_app_id': 'HockeyAppId',
            'hockey_app_token': 'HockeyAppToken',
            'immediate_purge_data_on30_days': 'ImmediatePurgeDataOn30Days',
            'instrumentation_key': 'InstrumentationKey',
            'request_source': 'Request_Source',
            'retention_in_days': 'RetentionInDays',
            'sampling_percentage': 'SamplingPercentage',
            'tenant_id': 'TenantId',
            'provisioning_state': 'provisioningState'
        }

        self._app_id = app_id
        self._application_id = application_id
        self._application_type = application_type
        self._connection_string = connection_string
        self._creation_date = creation_date
        self._disable_ip_masking = disable_ip_masking
        self._flow_type = flow_type
        self._hockey_app_id = hockey_app_id
        self._hockey_app_token = hockey_app_token
        self._immediate_purge_data_on30_days = immediate_purge_data_on30_days
        self._instrumentation_key = instrumentation_key
        self._request_source = request_source
        self._retention_in_days = retention_in_days
        self._sampling_percentage = sampling_percentage
        self._tenant_id = tenant_id
        self._provisioning_state = provisioning_state

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApplicationInsightsComponentProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ApplicationInsightsComponentProperties of this ApplicationInsightsComponentProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def app_id(self):
        """Gets the app_id of this ApplicationInsightsComponentProperties.

        Application Insights Unique ID for your Application.

        :return: The app_id of this ApplicationInsightsComponentProperties.
        :rtype: str
        """
        return self._app_id

    @app_id.setter
    def app_id(self, app_id):
        """Sets the app_id of this ApplicationInsightsComponentProperties.

        Application Insights Unique ID for your Application.

        :param app_id: The app_id of this ApplicationInsightsComponentProperties.
        :type app_id: str
        """

        self._app_id = app_id

    @property
    def application_id(self):
        """Gets the application_id of this ApplicationInsightsComponentProperties.

        The unique ID of your application. This field mirrors the 'Name' field and cannot be changed.

        :return: The application_id of this ApplicationInsightsComponentProperties.
        :rtype: str
        """
        return self._application_id

    @application_id.setter
    def application_id(self, application_id):
        """Sets the application_id of this ApplicationInsightsComponentProperties.

        The unique ID of your application. This field mirrors the 'Name' field and cannot be changed.

        :param application_id: The application_id of this ApplicationInsightsComponentProperties.
        :type application_id: str
        """

        self._application_id = application_id

    @property
    def application_type(self):
        """Gets the application_type of this ApplicationInsightsComponentProperties.

        Type of application being monitored.

        :return: The application_type of this ApplicationInsightsComponentProperties.
        :rtype: str
        """
        return self._application_type

    @application_type.setter
    def application_type(self, application_type):
        """Sets the application_type of this ApplicationInsightsComponentProperties.

        Type of application being monitored.

        :param application_type: The application_type of this ApplicationInsightsComponentProperties.
        :type application_type: str
        """
        allowed_values = ["web", "other"]  # noqa: E501
        if application_type not in allowed_values:
            raise ValueError(
                "Invalid value for `application_type` ({0}), must be one of {1}"
                .format(application_type, allowed_values)
            )

        self._application_type = application_type

    @property
    def connection_string(self):
        """Gets the connection_string of this ApplicationInsightsComponentProperties.

        Application Insights component connection string.

        :return: The connection_string of this ApplicationInsightsComponentProperties.
        :rtype: str
        """
        return self._connection_string

    @connection_string.setter
    def connection_string(self, connection_string):
        """Sets the connection_string of this ApplicationInsightsComponentProperties.

        Application Insights component connection string.

        :param connection_string: The connection_string of this ApplicationInsightsComponentProperties.
        :type connection_string: str
        """

        self._connection_string = connection_string

    @property
    def creation_date(self):
        """Gets the creation_date of this ApplicationInsightsComponentProperties.

        Creation Date for the Application Insights component, in ISO 8601 format.

        :return: The creation_date of this ApplicationInsightsComponentProperties.
        :rtype: datetime
        """
        return self._creation_date

    @creation_date.setter
    def creation_date(self, creation_date):
        """Sets the creation_date of this ApplicationInsightsComponentProperties.

        Creation Date for the Application Insights component, in ISO 8601 format.

        :param creation_date: The creation_date of this ApplicationInsightsComponentProperties.
        :type creation_date: datetime
        """

        self._creation_date = creation_date

    @property
    def disable_ip_masking(self):
        """Gets the disable_ip_masking of this ApplicationInsightsComponentProperties.

        Disable IP masking.

        :return: The disable_ip_masking of this ApplicationInsightsComponentProperties.
        :rtype: bool
        """
        return self._disable_ip_masking

    @disable_ip_masking.setter
    def disable_ip_masking(self, disable_ip_masking):
        """Sets the disable_ip_masking of this ApplicationInsightsComponentProperties.

        Disable IP masking.

        :param disable_ip_masking: The disable_ip_masking of this ApplicationInsightsComponentProperties.
        :type disable_ip_masking: bool
        """

        self._disable_ip_masking = disable_ip_masking

    @property
    def flow_type(self):
        """Gets the flow_type of this ApplicationInsightsComponentProperties.

        Used by the Application Insights system to determine what kind of flow this component was created by. This is to be set to 'Bluefield' when creating/updating a component via the REST API.

        :return: The flow_type of this ApplicationInsightsComponentProperties.
        :rtype: str
        """
        return self._flow_type

    @flow_type.setter
    def flow_type(self, flow_type):
        """Sets the flow_type of this ApplicationInsightsComponentProperties.

        Used by the Application Insights system to determine what kind of flow this component was created by. This is to be set to 'Bluefield' when creating/updating a component via the REST API.

        :param flow_type: The flow_type of this ApplicationInsightsComponentProperties.
        :type flow_type: str
        """
        allowed_values = ["Bluefield"]  # noqa: E501
        if flow_type not in allowed_values:
            raise ValueError(
                "Invalid value for `flow_type` ({0}), must be one of {1}"
                .format(flow_type, allowed_values)
            )

        self._flow_type = flow_type

    @property
    def hockey_app_id(self):
        """Gets the hockey_app_id of this ApplicationInsightsComponentProperties.

        The unique application ID created when a new application is added to HockeyApp, used for communications with HockeyApp.

        :return: The hockey_app_id of this ApplicationInsightsComponentProperties.
        :rtype: str
        """
        return self._hockey_app_id

    @hockey_app_id.setter
    def hockey_app_id(self, hockey_app_id):
        """Sets the hockey_app_id of this ApplicationInsightsComponentProperties.

        The unique application ID created when a new application is added to HockeyApp, used for communications with HockeyApp.

        :param hockey_app_id: The hockey_app_id of this ApplicationInsightsComponentProperties.
        :type hockey_app_id: str
        """

        self._hockey_app_id = hockey_app_id

    @property
    def hockey_app_token(self):
        """Gets the hockey_app_token of this ApplicationInsightsComponentProperties.

        Token used to authenticate communications with between Application Insights and HockeyApp.

        :return: The hockey_app_token of this ApplicationInsightsComponentProperties.
        :rtype: str
        """
        return self._hockey_app_token

    @hockey_app_token.setter
    def hockey_app_token(self, hockey_app_token):
        """Sets the hockey_app_token of this ApplicationInsightsComponentProperties.

        Token used to authenticate communications with between Application Insights and HockeyApp.

        :param hockey_app_token: The hockey_app_token of this ApplicationInsightsComponentProperties.
        :type hockey_app_token: str
        """

        self._hockey_app_token = hockey_app_token

    @property
    def immediate_purge_data_on30_days(self):
        """Gets the immediate_purge_data_on30_days of this ApplicationInsightsComponentProperties.

        Purge data immediately after 30 days.

        :return: The immediate_purge_data_on30_days of this ApplicationInsightsComponentProperties.
        :rtype: bool
        """
        return self._immediate_purge_data_on30_days

    @immediate_purge_data_on30_days.setter
    def immediate_purge_data_on30_days(self, immediate_purge_data_on30_days):
        """Sets the immediate_purge_data_on30_days of this ApplicationInsightsComponentProperties.

        Purge data immediately after 30 days.

        :param immediate_purge_data_on30_days: The immediate_purge_data_on30_days of this ApplicationInsightsComponentProperties.
        :type immediate_purge_data_on30_days: bool
        """

        self._immediate_purge_data_on30_days = immediate_purge_data_on30_days

    @property
    def instrumentation_key(self):
        """Gets the instrumentation_key of this ApplicationInsightsComponentProperties.

        Application Insights Instrumentation key. A read-only value that applications can use to identify the destination for all telemetry sent to Azure Application Insights. This value will be supplied upon construction of each new Application Insights component.

        :return: The instrumentation_key of this ApplicationInsightsComponentProperties.
        :rtype: str
        """
        return self._instrumentation_key

    @instrumentation_key.setter
    def instrumentation_key(self, instrumentation_key):
        """Sets the instrumentation_key of this ApplicationInsightsComponentProperties.

        Application Insights Instrumentation key. A read-only value that applications can use to identify the destination for all telemetry sent to Azure Application Insights. This value will be supplied upon construction of each new Application Insights component.

        :param instrumentation_key: The instrumentation_key of this ApplicationInsightsComponentProperties.
        :type instrumentation_key: str
        """

        self._instrumentation_key = instrumentation_key

    @property
    def request_source(self):
        """Gets the request_source of this ApplicationInsightsComponentProperties.

        Describes what tool created this Application Insights component. Customers using this API should set this to the default 'rest'.

        :return: The request_source of this ApplicationInsightsComponentProperties.
        :rtype: str
        """
        return self._request_source

    @request_source.setter
    def request_source(self, request_source):
        """Sets the request_source of this ApplicationInsightsComponentProperties.

        Describes what tool created this Application Insights component. Customers using this API should set this to the default 'rest'.

        :param request_source: The request_source of this ApplicationInsightsComponentProperties.
        :type request_source: str
        """
        allowed_values = ["rest"]  # noqa: E501
        if request_source not in allowed_values:
            raise ValueError(
                "Invalid value for `request_source` ({0}), must be one of {1}"
                .format(request_source, allowed_values)
            )

        self._request_source = request_source

    @property
    def retention_in_days(self):
        """Gets the retention_in_days of this ApplicationInsightsComponentProperties.

        Retention period in days.

        :return: The retention_in_days of this ApplicationInsightsComponentProperties.
        :rtype: int
        """
        return self._retention_in_days

    @retention_in_days.setter
    def retention_in_days(self, retention_in_days):
        """Sets the retention_in_days of this ApplicationInsightsComponentProperties.

        Retention period in days.

        :param retention_in_days: The retention_in_days of this ApplicationInsightsComponentProperties.
        :type retention_in_days: int
        """

        self._retention_in_days = retention_in_days

    @property
    def sampling_percentage(self):
        """Gets the sampling_percentage of this ApplicationInsightsComponentProperties.

        Percentage of the data produced by the application being monitored that is being sampled for Application Insights telemetry.

        :return: The sampling_percentage of this ApplicationInsightsComponentProperties.
        :rtype: float
        """
        return self._sampling_percentage

    @sampling_percentage.setter
    def sampling_percentage(self, sampling_percentage):
        """Sets the sampling_percentage of this ApplicationInsightsComponentProperties.

        Percentage of the data produced by the application being monitored that is being sampled for Application Insights telemetry.

        :param sampling_percentage: The sampling_percentage of this ApplicationInsightsComponentProperties.
        :type sampling_percentage: float
        """

        self._sampling_percentage = sampling_percentage

    @property
    def tenant_id(self):
        """Gets the tenant_id of this ApplicationInsightsComponentProperties.

        Azure Tenant Id.

        :return: The tenant_id of this ApplicationInsightsComponentProperties.
        :rtype: str
        """
        return self._tenant_id

    @tenant_id.setter
    def tenant_id(self, tenant_id):
        """Sets the tenant_id of this ApplicationInsightsComponentProperties.

        Azure Tenant Id.

        :param tenant_id: The tenant_id of this ApplicationInsightsComponentProperties.
        :type tenant_id: str
        """

        self._tenant_id = tenant_id

    @property
    def provisioning_state(self):
        """Gets the provisioning_state of this ApplicationInsightsComponentProperties.

        Current state of this component: whether or not is has been provisioned within the resource group it is defined. Users cannot change this value but are able to read from it. Values will include Succeeded, Deploying, Canceled, and Failed.

        :return: The provisioning_state of this ApplicationInsightsComponentProperties.
        :rtype: str
        """
        return self._provisioning_state

    @provisioning_state.setter
    def provisioning_state(self, provisioning_state):
        """Sets the provisioning_state of this ApplicationInsightsComponentProperties.

        Current state of this component: whether or not is has been provisioned within the resource group it is defined. Users cannot change this value but are able to read from it. Values will include Succeeded, Deploying, Canceled, and Failed.

        :param provisioning_state: The provisioning_state of this ApplicationInsightsComponentProperties.
        :type provisioning_state: str
        """

        self._provisioning_state = provisioning_state
