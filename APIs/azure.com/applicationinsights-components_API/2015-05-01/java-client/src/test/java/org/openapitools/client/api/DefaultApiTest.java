/*
 * ApplicationInsightsManagementClient
 * Azure Application Insights client for Components.
 *
 * The version of the OpenAPI document: 2015-05-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ApplicationInsightsComponent;
import org.openapitools.client.model.ApplicationInsightsComponentListResult;
import org.openapitools.client.model.ComponentPurgeBody;
import org.openapitools.client.model.ComponentPurgeResponse;
import org.openapitools.client.model.ComponentPurgeStatusResponse;
import org.openapitools.client.model.TagsResource;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Disabled
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    /**
     * Creates (or updates) an Application Insights component. Note: You cannot specify a different value for InstrumentationKey nor AppId in the Put operation.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void componentsCreateOrUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String apiVersion = null;
        String subscriptionId = null;
        String resourceName = null;
        ApplicationInsightsComponent insightProperties = null;
        ApplicationInsightsComponent response = api.componentsCreateOrUpdate(resourceGroupName, apiVersion, subscriptionId, resourceName, insightProperties);
        // TODO: test validations
    }

    /**
     * Deletes an Application Insights component.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void componentsDeleteTest() throws ApiException {
        String resourceGroupName = null;
        String apiVersion = null;
        String subscriptionId = null;
        String resourceName = null;
        api.componentsDelete(resourceGroupName, apiVersion, subscriptionId, resourceName);
        // TODO: test validations
    }

    /**
     * Returns an Application Insights component.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void componentsGetTest() throws ApiException {
        String resourceGroupName = null;
        String apiVersion = null;
        String subscriptionId = null;
        String resourceName = null;
        ApplicationInsightsComponent response = api.componentsGet(resourceGroupName, apiVersion, subscriptionId, resourceName);
        // TODO: test validations
    }

    /**
     * Get status for an ongoing purge operation.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void componentsGetPurgeStatusTest() throws ApiException {
        String resourceGroupName = null;
        String apiVersion = null;
        String subscriptionId = null;
        String resourceName = null;
        String purgeId = null;
        ComponentPurgeStatusResponse response = api.componentsGetPurgeStatus(resourceGroupName, apiVersion, subscriptionId, resourceName, purgeId);
        // TODO: test validations
    }

    /**
     * Gets a list of all Application Insights components within a subscription.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void componentsListTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        ApplicationInsightsComponentListResult response = api.componentsList(apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Gets a list of Application Insights components within a resource group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void componentsListByResourceGroupTest() throws ApiException {
        String resourceGroupName = null;
        String apiVersion = null;
        String subscriptionId = null;
        ApplicationInsightsComponentListResult response = api.componentsListByResourceGroup(resourceGroupName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Purges data in an Application Insights component by a set of user-defined filters.  In order to manage system resources, purge requests are throttled at 50 requests per hour. You should batch the execution of purge requests by sending a single command whose predicate includes all user identities that require purging. Use the in operator to specify multiple identities. You should run the query prior to using for a purge request to verify that the results are expected.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void componentsPurgeTest() throws ApiException {
        String resourceGroupName = null;
        String apiVersion = null;
        String subscriptionId = null;
        String resourceName = null;
        ComponentPurgeBody body = null;
        ComponentPurgeResponse response = api.componentsPurge(resourceGroupName, apiVersion, subscriptionId, resourceName, body);
        // TODO: test validations
    }

    /**
     * Updates an existing component&#39;s tags. To update other fields use the CreateOrUpdate method.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void componentsUpdateTagsTest() throws ApiException {
        String resourceGroupName = null;
        String apiVersion = null;
        String subscriptionId = null;
        String resourceName = null;
        TagsResource componentTags = null;
        ApplicationInsightsComponent response = api.componentsUpdateTags(resourceGroupName, apiVersion, subscriptionId, resourceName, componentTags);
        // TODO: test validations
    }

}
