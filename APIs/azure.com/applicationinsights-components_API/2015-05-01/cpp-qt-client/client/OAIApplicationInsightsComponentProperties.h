/**
 * ApplicationInsightsManagementClient
 * Azure Application Insights client for Components.
 *
 * The version of the OpenAPI document: 2015-05-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIApplicationInsightsComponentProperties.h
 *
 * Properties that define an Application Insights component resource.
 */

#ifndef OAIApplicationInsightsComponentProperties_H
#define OAIApplicationInsightsComponentProperties_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIApplicationInsightsComponentProperties : public OAIObject {
public:
    OAIApplicationInsightsComponentProperties();
    OAIApplicationInsightsComponentProperties(QString json);
    ~OAIApplicationInsightsComponentProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAppId() const;
    void setAppId(const QString &app_id);
    bool is_app_id_Set() const;
    bool is_app_id_Valid() const;

    QString getApplicationId() const;
    void setApplicationId(const QString &application_id);
    bool is_application_id_Set() const;
    bool is_application_id_Valid() const;

    QString getApplicationType() const;
    void setApplicationType(const QString &application_type);
    bool is_application_type_Set() const;
    bool is_application_type_Valid() const;

    QString getConnectionString() const;
    void setConnectionString(const QString &connection_string);
    bool is_connection_string_Set() const;
    bool is_connection_string_Valid() const;

    QDateTime getCreationDate() const;
    void setCreationDate(const QDateTime &creation_date);
    bool is_creation_date_Set() const;
    bool is_creation_date_Valid() const;

    bool isDisableIpMasking() const;
    void setDisableIpMasking(const bool &disable_ip_masking);
    bool is_disable_ip_masking_Set() const;
    bool is_disable_ip_masking_Valid() const;

    QString getFlowType() const;
    void setFlowType(const QString &flow_type);
    bool is_flow_type_Set() const;
    bool is_flow_type_Valid() const;

    QString getHockeyAppId() const;
    void setHockeyAppId(const QString &hockey_app_id);
    bool is_hockey_app_id_Set() const;
    bool is_hockey_app_id_Valid() const;

    QString getHockeyAppToken() const;
    void setHockeyAppToken(const QString &hockey_app_token);
    bool is_hockey_app_token_Set() const;
    bool is_hockey_app_token_Valid() const;

    bool isImmediatePurgeDataOn30Days() const;
    void setImmediatePurgeDataOn30Days(const bool &immediate_purge_data_on30_days);
    bool is_immediate_purge_data_on30_days_Set() const;
    bool is_immediate_purge_data_on30_days_Valid() const;

    QString getInstrumentationKey() const;
    void setInstrumentationKey(const QString &instrumentation_key);
    bool is_instrumentation_key_Set() const;
    bool is_instrumentation_key_Valid() const;

    QString getRequestSource() const;
    void setRequestSource(const QString &request_source);
    bool is_request_source_Set() const;
    bool is_request_source_Valid() const;

    qint32 getRetentionInDays() const;
    void setRetentionInDays(const qint32 &retention_in_days);
    bool is_retention_in_days_Set() const;
    bool is_retention_in_days_Valid() const;

    double getSamplingPercentage() const;
    void setSamplingPercentage(const double &sampling_percentage);
    bool is_sampling_percentage_Set() const;
    bool is_sampling_percentage_Valid() const;

    QString getTenantId() const;
    void setTenantId(const QString &tenant_id);
    bool is_tenant_id_Set() const;
    bool is_tenant_id_Valid() const;

    QString getProvisioningState() const;
    void setProvisioningState(const QString &provisioning_state);
    bool is_provisioning_state_Set() const;
    bool is_provisioning_state_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_app_id;
    bool m_app_id_isSet;
    bool m_app_id_isValid;

    QString m_application_id;
    bool m_application_id_isSet;
    bool m_application_id_isValid;

    QString m_application_type;
    bool m_application_type_isSet;
    bool m_application_type_isValid;

    QString m_connection_string;
    bool m_connection_string_isSet;
    bool m_connection_string_isValid;

    QDateTime m_creation_date;
    bool m_creation_date_isSet;
    bool m_creation_date_isValid;

    bool m_disable_ip_masking;
    bool m_disable_ip_masking_isSet;
    bool m_disable_ip_masking_isValid;

    QString m_flow_type;
    bool m_flow_type_isSet;
    bool m_flow_type_isValid;

    QString m_hockey_app_id;
    bool m_hockey_app_id_isSet;
    bool m_hockey_app_id_isValid;

    QString m_hockey_app_token;
    bool m_hockey_app_token_isSet;
    bool m_hockey_app_token_isValid;

    bool m_immediate_purge_data_on30_days;
    bool m_immediate_purge_data_on30_days_isSet;
    bool m_immediate_purge_data_on30_days_isValid;

    QString m_instrumentation_key;
    bool m_instrumentation_key_isSet;
    bool m_instrumentation_key_isValid;

    QString m_request_source;
    bool m_request_source_isSet;
    bool m_request_source_isValid;

    qint32 m_retention_in_days;
    bool m_retention_in_days_isSet;
    bool m_retention_in_days_isValid;

    double m_sampling_percentage;
    bool m_sampling_percentage_isSet;
    bool m_sampling_percentage_isValid;

    QString m_tenant_id;
    bool m_tenant_id_isSet;
    bool m_tenant_id_isValid;

    QString m_provisioning_state;
    bool m_provisioning_state_isSet;
    bool m_provisioning_state_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIApplicationInsightsComponentProperties)

#endif // OAIApplicationInsightsComponentProperties_H
