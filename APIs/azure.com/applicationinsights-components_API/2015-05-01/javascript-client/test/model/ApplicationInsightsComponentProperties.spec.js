/**
 * ApplicationInsightsManagementClient
 * Azure Application Insights client for Components.
 *
 * The version of the OpenAPI document: 2015-05-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ApplicationInsightsManagementClient);
  }
}(this, function(expect, ApplicationInsightsManagementClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ApplicationInsightsManagementClient.ApplicationInsightsComponentProperties();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ApplicationInsightsComponentProperties', function() {
    it('should create an instance of ApplicationInsightsComponentProperties', function() {
      // uncomment below and update the code to test ApplicationInsightsComponentProperties
      //var instance = new ApplicationInsightsManagementClient.ApplicationInsightsComponentProperties();
      //expect(instance).to.be.a(ApplicationInsightsManagementClient.ApplicationInsightsComponentProperties);
    });

    it('should have the property appId (base name: "AppId")', function() {
      // uncomment below and update the code to test the property appId
      //var instance = new ApplicationInsightsManagementClient.ApplicationInsightsComponentProperties();
      //expect(instance).to.be();
    });

    it('should have the property applicationId (base name: "ApplicationId")', function() {
      // uncomment below and update the code to test the property applicationId
      //var instance = new ApplicationInsightsManagementClient.ApplicationInsightsComponentProperties();
      //expect(instance).to.be();
    });

    it('should have the property applicationType (base name: "Application_Type")', function() {
      // uncomment below and update the code to test the property applicationType
      //var instance = new ApplicationInsightsManagementClient.ApplicationInsightsComponentProperties();
      //expect(instance).to.be();
    });

    it('should have the property connectionString (base name: "ConnectionString")', function() {
      // uncomment below and update the code to test the property connectionString
      //var instance = new ApplicationInsightsManagementClient.ApplicationInsightsComponentProperties();
      //expect(instance).to.be();
    });

    it('should have the property creationDate (base name: "CreationDate")', function() {
      // uncomment below and update the code to test the property creationDate
      //var instance = new ApplicationInsightsManagementClient.ApplicationInsightsComponentProperties();
      //expect(instance).to.be();
    });

    it('should have the property disableIpMasking (base name: "DisableIpMasking")', function() {
      // uncomment below and update the code to test the property disableIpMasking
      //var instance = new ApplicationInsightsManagementClient.ApplicationInsightsComponentProperties();
      //expect(instance).to.be();
    });

    it('should have the property flowType (base name: "Flow_Type")', function() {
      // uncomment below and update the code to test the property flowType
      //var instance = new ApplicationInsightsManagementClient.ApplicationInsightsComponentProperties();
      //expect(instance).to.be();
    });

    it('should have the property hockeyAppId (base name: "HockeyAppId")', function() {
      // uncomment below and update the code to test the property hockeyAppId
      //var instance = new ApplicationInsightsManagementClient.ApplicationInsightsComponentProperties();
      //expect(instance).to.be();
    });

    it('should have the property hockeyAppToken (base name: "HockeyAppToken")', function() {
      // uncomment below and update the code to test the property hockeyAppToken
      //var instance = new ApplicationInsightsManagementClient.ApplicationInsightsComponentProperties();
      //expect(instance).to.be();
    });

    it('should have the property immediatePurgeDataOn30Days (base name: "ImmediatePurgeDataOn30Days")', function() {
      // uncomment below and update the code to test the property immediatePurgeDataOn30Days
      //var instance = new ApplicationInsightsManagementClient.ApplicationInsightsComponentProperties();
      //expect(instance).to.be();
    });

    it('should have the property instrumentationKey (base name: "InstrumentationKey")', function() {
      // uncomment below and update the code to test the property instrumentationKey
      //var instance = new ApplicationInsightsManagementClient.ApplicationInsightsComponentProperties();
      //expect(instance).to.be();
    });

    it('should have the property requestSource (base name: "Request_Source")', function() {
      // uncomment below and update the code to test the property requestSource
      //var instance = new ApplicationInsightsManagementClient.ApplicationInsightsComponentProperties();
      //expect(instance).to.be();
    });

    it('should have the property retentionInDays (base name: "RetentionInDays")', function() {
      // uncomment below and update the code to test the property retentionInDays
      //var instance = new ApplicationInsightsManagementClient.ApplicationInsightsComponentProperties();
      //expect(instance).to.be();
    });

    it('should have the property samplingPercentage (base name: "SamplingPercentage")', function() {
      // uncomment below and update the code to test the property samplingPercentage
      //var instance = new ApplicationInsightsManagementClient.ApplicationInsightsComponentProperties();
      //expect(instance).to.be();
    });

    it('should have the property tenantId (base name: "TenantId")', function() {
      // uncomment below and update the code to test the property tenantId
      //var instance = new ApplicationInsightsManagementClient.ApplicationInsightsComponentProperties();
      //expect(instance).to.be();
    });

    it('should have the property provisioningState (base name: "provisioningState")', function() {
      // uncomment below and update the code to test the property provisioningState
      //var instance = new ApplicationInsightsManagementClient.ApplicationInsightsComponentProperties();
      //expect(instance).to.be();
    });

  });

}));
