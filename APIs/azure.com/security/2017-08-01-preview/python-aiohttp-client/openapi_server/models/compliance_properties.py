# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.compliance_segment import ComplianceSegment
from openapi_server import util


class ComplianceProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, assessment_result: List[ComplianceSegment]=None, assessment_timestamp_utc_date: datetime=None, resource_count: int=None):
        """ComplianceProperties - a model defined in OpenAPI

        :param assessment_result: The assessment_result of this ComplianceProperties.
        :param assessment_timestamp_utc_date: The assessment_timestamp_utc_date of this ComplianceProperties.
        :param resource_count: The resource_count of this ComplianceProperties.
        """
        self.openapi_types = {
            'assessment_result': List[ComplianceSegment],
            'assessment_timestamp_utc_date': datetime,
            'resource_count': int
        }

        self.attribute_map = {
            'assessment_result': 'assessmentResult',
            'assessment_timestamp_utc_date': 'assessmentTimestampUtcDate',
            'resource_count': 'resourceCount'
        }

        self._assessment_result = assessment_result
        self._assessment_timestamp_utc_date = assessment_timestamp_utc_date
        self._resource_count = resource_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ComplianceProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ComplianceProperties of this ComplianceProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def assessment_result(self):
        """Gets the assessment_result of this ComplianceProperties.

        An array of segment, which is the actually the compliance assessment.

        :return: The assessment_result of this ComplianceProperties.
        :rtype: List[ComplianceSegment]
        """
        return self._assessment_result

    @assessment_result.setter
    def assessment_result(self, assessment_result):
        """Sets the assessment_result of this ComplianceProperties.

        An array of segment, which is the actually the compliance assessment.

        :param assessment_result: The assessment_result of this ComplianceProperties.
        :type assessment_result: List[ComplianceSegment]
        """

        self._assessment_result = assessment_result

    @property
    def assessment_timestamp_utc_date(self):
        """Gets the assessment_timestamp_utc_date of this ComplianceProperties.

        The timestamp when the Compliance calculation was conducted.

        :return: The assessment_timestamp_utc_date of this ComplianceProperties.
        :rtype: datetime
        """
        return self._assessment_timestamp_utc_date

    @assessment_timestamp_utc_date.setter
    def assessment_timestamp_utc_date(self, assessment_timestamp_utc_date):
        """Sets the assessment_timestamp_utc_date of this ComplianceProperties.

        The timestamp when the Compliance calculation was conducted.

        :param assessment_timestamp_utc_date: The assessment_timestamp_utc_date of this ComplianceProperties.
        :type assessment_timestamp_utc_date: datetime
        """

        self._assessment_timestamp_utc_date = assessment_timestamp_utc_date

    @property
    def resource_count(self):
        """Gets the resource_count of this ComplianceProperties.

        The resource count of the given subscription for which the Compliance calculation was conducted (needed for Management Group Compliance calculation).

        :return: The resource_count of this ComplianceProperties.
        :rtype: int
        """
        return self._resource_count

    @resource_count.setter
    def resource_count(self, resource_count):
        """Sets the resource_count of this ComplianceProperties.

        The resource count of the given subscription for which the Compliance calculation was conducted (needed for Management Group Compliance calculation).

        :param resource_count: The resource_count of this ComplianceProperties.
        :type resource_count: int
        """

        self._resource_count = resource_count
