/**
 * Security Center
 * API spec for Microsoft.Security (Azure Security Center) resource provider
 *
 * The version of the OpenAPI document: 2017-08-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CloudError from '../model/CloudError';
import Pricing from '../model/Pricing';
import PricingList from '../model/PricingList';

/**
* Pricings service.
* @module api/PricingsApi
* @version 2017-08-01-preview
*/
export default class PricingsApi {

    /**
    * Constructs a new PricingsApi. 
    * @alias module:api/PricingsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the pricingsCreateOrUpdateResourceGroupPricing operation.
     * @callback module:api/PricingsApi~pricingsCreateOrUpdateResourceGroupPricingCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Pricing} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Security pricing configuration in the resource group
     * @param {module:model/String} apiVersion API version for the operation
     * @param {String} subscriptionId Azure subscription ID
     * @param {String} resourceGroupName The name of the resource group within the user's subscription. The name is case insensitive.
     * @param {String} pricingName name of the pricing configuration
     * @param {module:model/Pricing} pricing Pricing object
     * @param {module:api/PricingsApi~pricingsCreateOrUpdateResourceGroupPricingCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Pricing}
     */
    pricingsCreateOrUpdateResourceGroupPricing(apiVersion, subscriptionId, resourceGroupName, pricingName, pricing, callback) {
      let postBody = pricing;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling pricingsCreateOrUpdateResourceGroupPricing");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling pricingsCreateOrUpdateResourceGroupPricing");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling pricingsCreateOrUpdateResourceGroupPricing");
      }
      // verify the required parameter 'pricingName' is set
      if (pricingName === undefined || pricingName === null) {
        throw new Error("Missing the required parameter 'pricingName' when calling pricingsCreateOrUpdateResourceGroupPricing");
      }
      // verify the required parameter 'pricing' is set
      if (pricing === undefined || pricing === null) {
        throw new Error("Missing the required parameter 'pricing' when calling pricingsCreateOrUpdateResourceGroupPricing");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'pricingName': pricingName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Pricing;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/pricings/{pricingName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pricingsGetResourceGroupPricing operation.
     * @callback module:api/PricingsApi~pricingsGetResourceGroupPricingCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Pricing} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Security pricing configuration in the resource group
     * @param {module:model/String} apiVersion API version for the operation
     * @param {String} subscriptionId Azure subscription ID
     * @param {String} resourceGroupName The name of the resource group within the user's subscription. The name is case insensitive.
     * @param {String} pricingName name of the pricing configuration
     * @param {module:api/PricingsApi~pricingsGetResourceGroupPricingCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Pricing}
     */
    pricingsGetResourceGroupPricing(apiVersion, subscriptionId, resourceGroupName, pricingName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling pricingsGetResourceGroupPricing");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling pricingsGetResourceGroupPricing");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling pricingsGetResourceGroupPricing");
      }
      // verify the required parameter 'pricingName' is set
      if (pricingName === undefined || pricingName === null) {
        throw new Error("Missing the required parameter 'pricingName' when calling pricingsGetResourceGroupPricing");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'pricingName': pricingName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Pricing;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/pricings/{pricingName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pricingsGetSubscriptionPricing operation.
     * @callback module:api/PricingsApi~pricingsGetSubscriptionPricingCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Pricing} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Security pricing configuration in the subscriptionSecurity pricing configuration in the subscription
     * @param {module:model/String} apiVersion API version for the operation
     * @param {String} subscriptionId Azure subscription ID
     * @param {String} pricingName name of the pricing configuration
     * @param {module:api/PricingsApi~pricingsGetSubscriptionPricingCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Pricing}
     */
    pricingsGetSubscriptionPricing(apiVersion, subscriptionId, pricingName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling pricingsGetSubscriptionPricing");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling pricingsGetSubscriptionPricing");
      }
      // verify the required parameter 'pricingName' is set
      if (pricingName === undefined || pricingName === null) {
        throw new Error("Missing the required parameter 'pricingName' when calling pricingsGetSubscriptionPricing");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'pricingName': pricingName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Pricing;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.Security/pricings/{pricingName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pricingsList operation.
     * @callback module:api/PricingsApi~pricingsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PricingList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Security pricing configurations in the subscription
     * @param {module:model/String} apiVersion API version for the operation
     * @param {String} subscriptionId Azure subscription ID
     * @param {module:api/PricingsApi~pricingsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PricingList}
     */
    pricingsList(apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling pricingsList");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling pricingsList");
      }

      let pathParams = {
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PricingList;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.Security/pricings', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pricingsListByResourceGroup operation.
     * @callback module:api/PricingsApi~pricingsListByResourceGroupCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PricingList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Security pricing configurations in the resource group
     * @param {module:model/String} apiVersion API version for the operation
     * @param {String} subscriptionId Azure subscription ID
     * @param {String} resourceGroupName The name of the resource group within the user's subscription. The name is case insensitive.
     * @param {module:api/PricingsApi~pricingsListByResourceGroupCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PricingList}
     */
    pricingsListByResourceGroup(apiVersion, subscriptionId, resourceGroupName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling pricingsListByResourceGroup");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling pricingsListByResourceGroup");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling pricingsListByResourceGroup");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PricingList;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/pricings', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pricingsUpdateSubscriptionPricing operation.
     * @callback module:api/PricingsApi~pricingsUpdateSubscriptionPricingCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Pricing} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Security pricing configuration in the subscription
     * @param {module:model/String} apiVersion API version for the operation
     * @param {String} subscriptionId Azure subscription ID
     * @param {String} pricingName name of the pricing configuration
     * @param {module:model/Pricing} pricing Pricing object
     * @param {module:api/PricingsApi~pricingsUpdateSubscriptionPricingCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Pricing}
     */
    pricingsUpdateSubscriptionPricing(apiVersion, subscriptionId, pricingName, pricing, callback) {
      let postBody = pricing;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling pricingsUpdateSubscriptionPricing");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling pricingsUpdateSubscriptionPricing");
      }
      // verify the required parameter 'pricingName' is set
      if (pricingName === undefined || pricingName === null) {
        throw new Error("Missing the required parameter 'pricingName' when calling pricingsUpdateSubscriptionPricing");
      }
      // verify the required parameter 'pricing' is set
      if (pricing === undefined || pricing === null) {
        throw new Error("Missing the required parameter 'pricing' when calling pricingsUpdateSubscriptionPricing");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'pricingName': pricingName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Pricing;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.Security/pricings/{pricingName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
