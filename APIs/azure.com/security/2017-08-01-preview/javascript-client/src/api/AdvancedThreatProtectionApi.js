/**
 * Security Center
 * API spec for Microsoft.Security (Azure Security Center) resource provider
 *
 * The version of the OpenAPI document: 2017-08-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AdvancedThreatProtectionSetting from '../model/AdvancedThreatProtectionSetting';
import CloudError from '../model/CloudError';

/**
* AdvancedThreatProtection service.
* @module api/AdvancedThreatProtectionApi
* @version 2017-08-01-preview
*/
export default class AdvancedThreatProtectionApi {

    /**
    * Constructs a new AdvancedThreatProtectionApi. 
    * @alias module:api/AdvancedThreatProtectionApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the advancedThreatProtectionCreate operation.
     * @callback module:api/AdvancedThreatProtectionApi~advancedThreatProtectionCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AdvancedThreatProtectionSetting} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates or updates the Advanced Threat Protection settings on a specified resource.
     * @param {module:model/String} apiVersion API version for the operation
     * @param {String} resourceId The identifier of the resource.
     * @param {module:model/String} settingName Advanced Threat Protection setting name.
     * @param {module:model/AdvancedThreatProtectionSetting} advancedThreatProtectionSetting Advanced Threat Protection Settings
     * @param {module:api/AdvancedThreatProtectionApi~advancedThreatProtectionCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AdvancedThreatProtectionSetting}
     */
    advancedThreatProtectionCreate(apiVersion, resourceId, settingName, advancedThreatProtectionSetting, callback) {
      let postBody = advancedThreatProtectionSetting;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling advancedThreatProtectionCreate");
      }
      // verify the required parameter 'resourceId' is set
      if (resourceId === undefined || resourceId === null) {
        throw new Error("Missing the required parameter 'resourceId' when calling advancedThreatProtectionCreate");
      }
      // verify the required parameter 'settingName' is set
      if (settingName === undefined || settingName === null) {
        throw new Error("Missing the required parameter 'settingName' when calling advancedThreatProtectionCreate");
      }
      // verify the required parameter 'advancedThreatProtectionSetting' is set
      if (advancedThreatProtectionSetting === undefined || advancedThreatProtectionSetting === null) {
        throw new Error("Missing the required parameter 'advancedThreatProtectionSetting' when calling advancedThreatProtectionCreate");
      }

      let pathParams = {
        'resourceId': resourceId,
        'settingName': settingName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = AdvancedThreatProtectionSetting;
      return this.apiClient.callApi(
        '/{resourceId}/providers/Microsoft.Security/advancedThreatProtectionSettings/{settingName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the advancedThreatProtectionGet operation.
     * @callback module:api/AdvancedThreatProtectionApi~advancedThreatProtectionGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AdvancedThreatProtectionSetting} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the Advanced Threat Protection settings for the specified resource.
     * @param {module:model/String} apiVersion API version for the operation
     * @param {String} resourceId The identifier of the resource.
     * @param {module:model/String} settingName Advanced Threat Protection setting name.
     * @param {module:api/AdvancedThreatProtectionApi~advancedThreatProtectionGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AdvancedThreatProtectionSetting}
     */
    advancedThreatProtectionGet(apiVersion, resourceId, settingName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling advancedThreatProtectionGet");
      }
      // verify the required parameter 'resourceId' is set
      if (resourceId === undefined || resourceId === null) {
        throw new Error("Missing the required parameter 'resourceId' when calling advancedThreatProtectionGet");
      }
      // verify the required parameter 'settingName' is set
      if (settingName === undefined || settingName === null) {
        throw new Error("Missing the required parameter 'settingName' when calling advancedThreatProtectionGet");
      }

      let pathParams = {
        'resourceId': resourceId,
        'settingName': settingName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AdvancedThreatProtectionSetting;
      return this.apiClient.callApi(
        '/{resourceId}/providers/Microsoft.Security/advancedThreatProtectionSettings/{settingName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
