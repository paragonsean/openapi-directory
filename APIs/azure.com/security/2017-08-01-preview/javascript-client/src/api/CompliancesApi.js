/**
 * Security Center
 * API spec for Microsoft.Security (Azure Security Center) resource provider
 *
 * The version of the OpenAPI document: 2017-08-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CloudError from '../model/CloudError';
import Compliance from '../model/Compliance';
import ComplianceList from '../model/ComplianceList';

/**
* Compliances service.
* @module api/CompliancesApi
* @version 2017-08-01-preview
*/
export default class CompliancesApi {

    /**
    * Constructs a new CompliancesApi. 
    * @alias module:api/CompliancesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the compliancesGet operation.
     * @callback module:api/CompliancesApi~compliancesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Compliance} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Details of a specific Compliance.
     * @param {module:model/String} apiVersion API version for the operation
     * @param {String} scope Scope of the query, can be subscription (/subscriptions/0b06d9ea-afe6-4779-bd59-30e5c2d9d13f) or management group (/providers/Microsoft.Management/managementGroups/mgName).
     * @param {String} complianceName name of the Compliance
     * @param {module:api/CompliancesApi~compliancesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Compliance}
     */
    compliancesGet(apiVersion, scope, complianceName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling compliancesGet");
      }
      // verify the required parameter 'scope' is set
      if (scope === undefined || scope === null) {
        throw new Error("Missing the required parameter 'scope' when calling compliancesGet");
      }
      // verify the required parameter 'complianceName' is set
      if (complianceName === undefined || complianceName === null) {
        throw new Error("Missing the required parameter 'complianceName' when calling compliancesGet");
      }

      let pathParams = {
        'scope': scope,
        'complianceName': complianceName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Compliance;
      return this.apiClient.callApi(
        '/{scope}/providers/Microsoft.Security/compliances/{complianceName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the compliancesList operation.
     * @callback module:api/CompliancesApi~compliancesListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ComplianceList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * The Compliance scores of the specific management group.
     * @param {module:model/String} apiVersion API version for the operation
     * @param {String} scope Scope of the query, can be subscription (/subscriptions/0b06d9ea-afe6-4779-bd59-30e5c2d9d13f) or management group (/providers/Microsoft.Management/managementGroups/mgName).
     * @param {module:api/CompliancesApi~compliancesListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ComplianceList}
     */
    compliancesList(apiVersion, scope, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling compliancesList");
      }
      // verify the required parameter 'scope' is set
      if (scope === undefined || scope === null) {
        throw new Error("Missing the required parameter 'scope' when calling compliancesList");
      }

      let pathParams = {
        'scope': scope
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ComplianceList;
      return this.apiClient.callApi(
        '/{scope}/providers/Microsoft.Security/compliances', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
