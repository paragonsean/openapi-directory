/**
 * Security Center
 * API spec for Microsoft.Security (Azure Security Center) resource provider
 *
 * The version of the OpenAPI document: 2017-08-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInformationProtectionPolicyProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInformationProtectionPolicyProperties::OAIInformationProtectionPolicyProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInformationProtectionPolicyProperties::OAIInformationProtectionPolicyProperties() {
    this->initializeModel();
}

OAIInformationProtectionPolicyProperties::~OAIInformationProtectionPolicyProperties() {}

void OAIInformationProtectionPolicyProperties::initializeModel() {

    m_information_types_isSet = false;
    m_information_types_isValid = false;

    m_labels_isSet = false;
    m_labels_isValid = false;

    m_last_modified_utc_isSet = false;
    m_last_modified_utc_isValid = false;
}

void OAIInformationProtectionPolicyProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIInformationProtectionPolicyProperties::fromJsonObject(QJsonObject json) {

    m_information_types_isValid = ::OpenAPI::fromJsonValue(m_information_types, json[QString("informationTypes")]);
    m_information_types_isSet = !json[QString("informationTypes")].isNull() && m_information_types_isValid;

    m_labels_isValid = ::OpenAPI::fromJsonValue(m_labels, json[QString("labels")]);
    m_labels_isSet = !json[QString("labels")].isNull() && m_labels_isValid;

    m_last_modified_utc_isValid = ::OpenAPI::fromJsonValue(m_last_modified_utc, json[QString("lastModifiedUtc")]);
    m_last_modified_utc_isSet = !json[QString("lastModifiedUtc")].isNull() && m_last_modified_utc_isValid;
}

QString OAIInformationProtectionPolicyProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIInformationProtectionPolicyProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_information_types.size() > 0) {
        obj.insert(QString("informationTypes"), ::OpenAPI::toJsonValue(m_information_types));
    }
    if (m_labels.size() > 0) {
        obj.insert(QString("labels"), ::OpenAPI::toJsonValue(m_labels));
    }
    if (m_last_modified_utc_isSet) {
        obj.insert(QString("lastModifiedUtc"), ::OpenAPI::toJsonValue(m_last_modified_utc));
    }
    return obj;
}

QMap<QString, OAIInformationType> OAIInformationProtectionPolicyProperties::getInformationTypes() const {
    return m_information_types;
}
void OAIInformationProtectionPolicyProperties::setInformationTypes(const QMap<QString, OAIInformationType> &information_types) {
    m_information_types = information_types;
    m_information_types_isSet = true;
}

bool OAIInformationProtectionPolicyProperties::is_information_types_Set() const{
    return m_information_types_isSet;
}

bool OAIInformationProtectionPolicyProperties::is_information_types_Valid() const{
    return m_information_types_isValid;
}

QMap<QString, OAISensitivityLabel> OAIInformationProtectionPolicyProperties::getLabels() const {
    return m_labels;
}
void OAIInformationProtectionPolicyProperties::setLabels(const QMap<QString, OAISensitivityLabel> &labels) {
    m_labels = labels;
    m_labels_isSet = true;
}

bool OAIInformationProtectionPolicyProperties::is_labels_Set() const{
    return m_labels_isSet;
}

bool OAIInformationProtectionPolicyProperties::is_labels_Valid() const{
    return m_labels_isValid;
}

QDateTime OAIInformationProtectionPolicyProperties::getLastModifiedUtc() const {
    return m_last_modified_utc;
}
void OAIInformationProtectionPolicyProperties::setLastModifiedUtc(const QDateTime &last_modified_utc) {
    m_last_modified_utc = last_modified_utc;
    m_last_modified_utc_isSet = true;
}

bool OAIInformationProtectionPolicyProperties::is_last_modified_utc_Set() const{
    return m_last_modified_utc_isSet;
}

bool OAIInformationProtectionPolicyProperties::is_last_modified_utc_Valid() const{
    return m_last_modified_utc_isValid;
}

bool OAIInformationProtectionPolicyProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_information_types.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_labels.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_utc_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIInformationProtectionPolicyProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
