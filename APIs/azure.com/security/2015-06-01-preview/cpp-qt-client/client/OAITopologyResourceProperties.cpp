/**
 * Security Center
 * API spec for Microsoft.Security (Azure Security Center) resource provider
 *
 * The version of the OpenAPI document: 2015-06-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITopologyResourceProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITopologyResourceProperties::OAITopologyResourceProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITopologyResourceProperties::OAITopologyResourceProperties() {
    this->initializeModel();
}

OAITopologyResourceProperties::~OAITopologyResourceProperties() {}

void OAITopologyResourceProperties::initializeModel() {

    m_calculated_date_time_isSet = false;
    m_calculated_date_time_isValid = false;

    m_topology_resources_isSet = false;
    m_topology_resources_isValid = false;
}

void OAITopologyResourceProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITopologyResourceProperties::fromJsonObject(QJsonObject json) {

    m_calculated_date_time_isValid = ::OpenAPI::fromJsonValue(m_calculated_date_time, json[QString("calculatedDateTime")]);
    m_calculated_date_time_isSet = !json[QString("calculatedDateTime")].isNull() && m_calculated_date_time_isValid;

    m_topology_resources_isValid = ::OpenAPI::fromJsonValue(m_topology_resources, json[QString("topologyResources")]);
    m_topology_resources_isSet = !json[QString("topologyResources")].isNull() && m_topology_resources_isValid;
}

QString OAITopologyResourceProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITopologyResourceProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_calculated_date_time_isSet) {
        obj.insert(QString("calculatedDateTime"), ::OpenAPI::toJsonValue(m_calculated_date_time));
    }
    if (m_topology_resources.size() > 0) {
        obj.insert(QString("topologyResources"), ::OpenAPI::toJsonValue(m_topology_resources));
    }
    return obj;
}

QDateTime OAITopologyResourceProperties::getCalculatedDateTime() const {
    return m_calculated_date_time;
}
void OAITopologyResourceProperties::setCalculatedDateTime(const QDateTime &calculated_date_time) {
    m_calculated_date_time = calculated_date_time;
    m_calculated_date_time_isSet = true;
}

bool OAITopologyResourceProperties::is_calculated_date_time_Set() const{
    return m_calculated_date_time_isSet;
}

bool OAITopologyResourceProperties::is_calculated_date_time_Valid() const{
    return m_calculated_date_time_isValid;
}

QList<OAITopologySingleResource> OAITopologyResourceProperties::getTopologyResources() const {
    return m_topology_resources;
}
void OAITopologyResourceProperties::setTopologyResources(const QList<OAITopologySingleResource> &topology_resources) {
    m_topology_resources = topology_resources;
    m_topology_resources_isSet = true;
}

bool OAITopologyResourceProperties::is_topology_resources_Set() const{
    return m_topology_resources_isSet;
}

bool OAITopologyResourceProperties::is_topology_resources_Valid() const{
    return m_topology_resources_isValid;
}

bool OAITopologyResourceProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_calculated_date_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_topology_resources.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITopologyResourceProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
