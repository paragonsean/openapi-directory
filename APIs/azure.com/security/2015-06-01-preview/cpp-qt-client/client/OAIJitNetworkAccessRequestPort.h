/**
 * Security Center
 * API spec for Microsoft.Security (Azure Security Center) resource provider
 *
 * The version of the OpenAPI document: 2015-06-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIJitNetworkAccessRequestPort.h
 *
 * 
 */

#ifndef OAIJitNetworkAccessRequestPort_H
#define OAIJitNetworkAccessRequestPort_H

#include <QJsonObject>

#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIJitNetworkAccessRequestPort : public OAIObject {
public:
    OAIJitNetworkAccessRequestPort();
    OAIJitNetworkAccessRequestPort(QString json);
    ~OAIJitNetworkAccessRequestPort() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAllowedSourceAddressPrefix() const;
    void setAllowedSourceAddressPrefix(const QString &allowed_source_address_prefix);
    bool is_allowed_source_address_prefix_Set() const;
    bool is_allowed_source_address_prefix_Valid() const;

    QList<QString> getAllowedSourceAddressPrefixes() const;
    void setAllowedSourceAddressPrefixes(const QList<QString> &allowed_source_address_prefixes);
    bool is_allowed_source_address_prefixes_Set() const;
    bool is_allowed_source_address_prefixes_Valid() const;

    QDateTime getEndTimeUtc() const;
    void setEndTimeUtc(const QDateTime &end_time_utc);
    bool is_end_time_utc_Set() const;
    bool is_end_time_utc_Valid() const;

    qint32 getNumber() const;
    void setNumber(const qint32 &number);
    bool is_number_Set() const;
    bool is_number_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getStatusReason() const;
    void setStatusReason(const QString &status_reason);
    bool is_status_reason_Set() const;
    bool is_status_reason_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_allowed_source_address_prefix;
    bool m_allowed_source_address_prefix_isSet;
    bool m_allowed_source_address_prefix_isValid;

    QList<QString> m_allowed_source_address_prefixes;
    bool m_allowed_source_address_prefixes_isSet;
    bool m_allowed_source_address_prefixes_isValid;

    QDateTime m_end_time_utc;
    bool m_end_time_utc_isSet;
    bool m_end_time_utc_isValid;

    qint32 m_number;
    bool m_number_isSet;
    bool m_number_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_status_reason;
    bool m_status_reason_isSet;
    bool m_status_reason_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIJitNetworkAccessRequestPort)

#endif // OAIJitNetworkAccessRequestPort_H
