# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.jit_network_access_policy_initiate_port import JitNetworkAccessPolicyInitiatePort
from openapi_server import util


class JitNetworkAccessPolicyInitiateVirtualMachine(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, ports: List[JitNetworkAccessPolicyInitiatePort]=None):
        """JitNetworkAccessPolicyInitiateVirtualMachine - a model defined in OpenAPI

        :param id: The id of this JitNetworkAccessPolicyInitiateVirtualMachine.
        :param ports: The ports of this JitNetworkAccessPolicyInitiateVirtualMachine.
        """
        self.openapi_types = {
            'id': str,
            'ports': List[JitNetworkAccessPolicyInitiatePort]
        }

        self.attribute_map = {
            'id': 'id',
            'ports': 'ports'
        }

        self._id = id
        self._ports = ports

    @classmethod
    def from_dict(cls, dikt: dict) -> 'JitNetworkAccessPolicyInitiateVirtualMachine':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The JitNetworkAccessPolicyInitiateVirtualMachine of this JitNetworkAccessPolicyInitiateVirtualMachine.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this JitNetworkAccessPolicyInitiateVirtualMachine.

        Resource ID of the virtual machine that is linked to this policy

        :return: The id of this JitNetworkAccessPolicyInitiateVirtualMachine.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this JitNetworkAccessPolicyInitiateVirtualMachine.

        Resource ID of the virtual machine that is linked to this policy

        :param id: The id of this JitNetworkAccessPolicyInitiateVirtualMachine.
        :type id: str
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")

        self._id = id

    @property
    def ports(self):
        """Gets the ports of this JitNetworkAccessPolicyInitiateVirtualMachine.

        The ports to open for the resource with the `id`

        :return: The ports of this JitNetworkAccessPolicyInitiateVirtualMachine.
        :rtype: List[JitNetworkAccessPolicyInitiatePort]
        """
        return self._ports

    @ports.setter
    def ports(self, ports):
        """Sets the ports of this JitNetworkAccessPolicyInitiateVirtualMachine.

        The ports to open for the resource with the `id`

        :param ports: The ports of this JitNetworkAccessPolicyInitiateVirtualMachine.
        :type ports: List[JitNetworkAccessPolicyInitiatePort]
        """
        if ports is None:
            raise ValueError("Invalid value for `ports`, must not be `None`")

        self._ports = ports
