/**
 * Security Center
 * API spec for Microsoft.Security (Azure Security Center) resource provider
 *
 * The version of the OpenAPI document: 2015-06-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CloudError from '../model/CloudError';
import TopologyList from '../model/TopologyList';
import TopologyResource from '../model/TopologyResource';

/**
* Topology service.
* @module api/TopologyApi
* @version 2015-06-01-preview
*/
export default class TopologyApi {

    /**
    * Constructs a new TopologyApi. 
    * @alias module:api/TopologyApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the topologyGet operation.
     * @callback module:api/TopologyApi~topologyGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TopologyResource} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets a specific topology component.
     * @param {String} subscriptionId Azure subscription ID
     * @param {String} resourceGroupName The name of the resource group within the user's subscription. The name is case insensitive.
     * @param {String} ascLocation The location where ASC stores the data of the subscription. can be retrieved from Get locations
     * @param {String} topologyResourceName Name of a topology resources collection.
     * @param {module:model/String} apiVersion API version for the operation
     * @param {module:api/TopologyApi~topologyGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TopologyResource}
     */
    topologyGet(subscriptionId, resourceGroupName, ascLocation, topologyResourceName, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling topologyGet");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling topologyGet");
      }
      // verify the required parameter 'ascLocation' is set
      if (ascLocation === undefined || ascLocation === null) {
        throw new Error("Missing the required parameter 'ascLocation' when calling topologyGet");
      }
      // verify the required parameter 'topologyResourceName' is set
      if (topologyResourceName === undefined || topologyResourceName === null) {
        throw new Error("Missing the required parameter 'topologyResourceName' when calling topologyGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling topologyGet");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'ascLocation': ascLocation,
        'topologyResourceName': topologyResourceName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = TopologyResource;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/locations/{ascLocation}/topologies/{topologyResourceName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the topologyList operation.
     * @callback module:api/TopologyApi~topologyListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TopologyList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets a list that allows to build a topology view of a subscription.
     * @param {String} subscriptionId Azure subscription ID
     * @param {module:model/String} apiVersion API version for the operation
     * @param {module:api/TopologyApi~topologyListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TopologyList}
     */
    topologyList(subscriptionId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling topologyList");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling topologyList");
      }

      let pathParams = {
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = TopologyList;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.Security/topologies', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the topologyListByHomeRegion operation.
     * @callback module:api/TopologyApi~topologyListByHomeRegionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TopologyList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets a list that allows to build a topology view of a subscription and location.
     * @param {String} subscriptionId Azure subscription ID
     * @param {String} ascLocation The location where ASC stores the data of the subscription. can be retrieved from Get locations
     * @param {module:model/String} apiVersion API version for the operation
     * @param {module:api/TopologyApi~topologyListByHomeRegionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TopologyList}
     */
    topologyListByHomeRegion(subscriptionId, ascLocation, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling topologyListByHomeRegion");
      }
      // verify the required parameter 'ascLocation' is set
      if (ascLocation === undefined || ascLocation === null) {
        throw new Error("Missing the required parameter 'ascLocation' when calling topologyListByHomeRegion");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling topologyListByHomeRegion");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'ascLocation': ascLocation
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = TopologyList;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.Security/locations/{ascLocation}/topologies', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
