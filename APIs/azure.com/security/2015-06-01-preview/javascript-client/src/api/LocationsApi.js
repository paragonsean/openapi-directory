/**
 * Security Center
 * API spec for Microsoft.Security (Azure Security Center) resource provider
 *
 * The version of the OpenAPI document: 2015-06-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AscLocation from '../model/AscLocation';
import AscLocationList from '../model/AscLocationList';
import CloudError from '../model/CloudError';

/**
* Locations service.
* @module api/LocationsApi
* @version 2015-06-01-preview
*/
export default class LocationsApi {

    /**
    * Constructs a new LocationsApi. 
    * @alias module:api/LocationsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the locationsGet operation.
     * @callback module:api/LocationsApi~locationsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AscLocation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Details of a specific location
     * @param {module:model/String} apiVersion API version for the operation
     * @param {String} subscriptionId Azure subscription ID
     * @param {String} ascLocation The location where ASC stores the data of the subscription. can be retrieved from Get locations
     * @param {module:api/LocationsApi~locationsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AscLocation}
     */
    locationsGet(apiVersion, subscriptionId, ascLocation, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling locationsGet");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling locationsGet");
      }
      // verify the required parameter 'ascLocation' is set
      if (ascLocation === undefined || ascLocation === null) {
        throw new Error("Missing the required parameter 'ascLocation' when calling locationsGet");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'ascLocation': ascLocation
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AscLocation;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.Security/locations/{ascLocation}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the locationsList operation.
     * @callback module:api/LocationsApi~locationsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AscLocationList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * The location of the responsible ASC of the specific subscription (home region). For each subscription there is only one responsible location. The location in the response should be used to read or write other resources in ASC according to their ID.
     * @param {module:model/String} apiVersion API version for the operation
     * @param {String} subscriptionId Azure subscription ID
     * @param {module:api/LocationsApi~locationsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AscLocationList}
     */
    locationsList(apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling locationsList");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling locationsList");
      }

      let pathParams = {
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AscLocationList;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.Security/locations', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
