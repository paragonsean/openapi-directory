/**
 * Security Center
 * API spec for Microsoft.Security (Azure Security Center) resource provider
 *
 * The version of the OpenAPI document: 2015-06-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The JitNetworkAccessRequestPort model module.
 * @module model/JitNetworkAccessRequestPort
 * @version 2015-06-01-preview
 */
class JitNetworkAccessRequestPort {
    /**
     * Constructs a new <code>JitNetworkAccessRequestPort</code>.
     * @alias module:model/JitNetworkAccessRequestPort
     * @param endTimeUtc {Date} The date & time at which the request ends in UTC
     * @param number {Number} 
     * @param status {module:model/JitNetworkAccessRequestPort.StatusEnum} The status of the port
     * @param statusReason {module:model/JitNetworkAccessRequestPort.StatusReasonEnum} A description of why the `status` has its value
     */
    constructor(endTimeUtc, number, status, statusReason) { 
        
        JitNetworkAccessRequestPort.initialize(this, endTimeUtc, number, status, statusReason);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, endTimeUtc, number, status, statusReason) { 
        obj['endTimeUtc'] = endTimeUtc;
        obj['number'] = number;
        obj['status'] = status;
        obj['statusReason'] = statusReason;
    }

    /**
     * Constructs a <code>JitNetworkAccessRequestPort</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/JitNetworkAccessRequestPort} obj Optional instance to populate.
     * @return {module:model/JitNetworkAccessRequestPort} The populated <code>JitNetworkAccessRequestPort</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new JitNetworkAccessRequestPort();

            if (data.hasOwnProperty('allowedSourceAddressPrefix')) {
                obj['allowedSourceAddressPrefix'] = ApiClient.convertToType(data['allowedSourceAddressPrefix'], 'String');
            }
            if (data.hasOwnProperty('allowedSourceAddressPrefixes')) {
                obj['allowedSourceAddressPrefixes'] = ApiClient.convertToType(data['allowedSourceAddressPrefixes'], ['String']);
            }
            if (data.hasOwnProperty('endTimeUtc')) {
                obj['endTimeUtc'] = ApiClient.convertToType(data['endTimeUtc'], 'Date');
            }
            if (data.hasOwnProperty('number')) {
                obj['number'] = ApiClient.convertToType(data['number'], 'Number');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('statusReason')) {
                obj['statusReason'] = ApiClient.convertToType(data['statusReason'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>JitNetworkAccessRequestPort</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>JitNetworkAccessRequestPort</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of JitNetworkAccessRequestPort.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['allowedSourceAddressPrefix'] && !(typeof data['allowedSourceAddressPrefix'] === 'string' || data['allowedSourceAddressPrefix'] instanceof String)) {
            throw new Error("Expected the field `allowedSourceAddressPrefix` to be a primitive type in the JSON string but got " + data['allowedSourceAddressPrefix']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['allowedSourceAddressPrefixes'])) {
            throw new Error("Expected the field `allowedSourceAddressPrefixes` to be an array in the JSON data but got " + data['allowedSourceAddressPrefixes']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is a string
        if (data['statusReason'] && !(typeof data['statusReason'] === 'string' || data['statusReason'] instanceof String)) {
            throw new Error("Expected the field `statusReason` to be a primitive type in the JSON string but got " + data['statusReason']);
        }

        return true;
    }


}

JitNetworkAccessRequestPort.RequiredProperties = ["endTimeUtc", "number", "status", "statusReason"];

/**
 * Mutually exclusive with the \"allowedSourceAddressPrefixes\" parameter. Should be an IP address or CIDR, for example \"192.168.0.3\" or \"192.168.0.0/16\".
 * @member {String} allowedSourceAddressPrefix
 */
JitNetworkAccessRequestPort.prototype['allowedSourceAddressPrefix'] = undefined;

/**
 * Mutually exclusive with the \"allowedSourceAddressPrefix\" parameter.
 * @member {Array.<String>} allowedSourceAddressPrefixes
 */
JitNetworkAccessRequestPort.prototype['allowedSourceAddressPrefixes'] = undefined;

/**
 * The date & time at which the request ends in UTC
 * @member {Date} endTimeUtc
 */
JitNetworkAccessRequestPort.prototype['endTimeUtc'] = undefined;

/**
 * @member {Number} number
 */
JitNetworkAccessRequestPort.prototype['number'] = undefined;

/**
 * The status of the port
 * @member {module:model/JitNetworkAccessRequestPort.StatusEnum} status
 */
JitNetworkAccessRequestPort.prototype['status'] = undefined;

/**
 * A description of why the `status` has its value
 * @member {module:model/JitNetworkAccessRequestPort.StatusReasonEnum} statusReason
 */
JitNetworkAccessRequestPort.prototype['statusReason'] = undefined;





/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
JitNetworkAccessRequestPort['StatusEnum'] = {

    /**
     * value: "Revoked"
     * @const
     */
    "Revoked": "Revoked",

    /**
     * value: "Initiated"
     * @const
     */
    "Initiated": "Initiated"
};


/**
 * Allowed values for the <code>statusReason</code> property.
 * @enum {String}
 * @readonly
 */
JitNetworkAccessRequestPort['StatusReasonEnum'] = {

    /**
     * value: "Expired"
     * @const
     */
    "Expired": "Expired",

    /**
     * value: "UserRequested"
     * @const
     */
    "UserRequested": "UserRequested",

    /**
     * value: "NewerRequestInitiated"
     * @const
     */
    "NewerRequestInitiated": "NewerRequestInitiated"
};



export default JitNetworkAccessRequestPort;

