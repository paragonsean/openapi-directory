/**
 * Security Center
 * API spec for Microsoft.Security (Azure Security Center) resource provider
 *
 * The version of the OpenAPI document: 2015-06-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import JitNetworkAccessPortRule from './JitNetworkAccessPortRule';

/**
 * The JitNetworkAccessPolicyVirtualMachine model module.
 * @module model/JitNetworkAccessPolicyVirtualMachine
 * @version 2015-06-01-preview
 */
class JitNetworkAccessPolicyVirtualMachine {
    /**
     * Constructs a new <code>JitNetworkAccessPolicyVirtualMachine</code>.
     * @alias module:model/JitNetworkAccessPolicyVirtualMachine
     * @param id {String} Resource ID of the virtual machine that is linked to this policy
     * @param ports {Array.<module:model/JitNetworkAccessPortRule>} Port configurations for the virtual machine
     */
    constructor(id, ports) { 
        
        JitNetworkAccessPolicyVirtualMachine.initialize(this, id, ports);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, ports) { 
        obj['id'] = id;
        obj['ports'] = ports;
    }

    /**
     * Constructs a <code>JitNetworkAccessPolicyVirtualMachine</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/JitNetworkAccessPolicyVirtualMachine} obj Optional instance to populate.
     * @return {module:model/JitNetworkAccessPolicyVirtualMachine} The populated <code>JitNetworkAccessPolicyVirtualMachine</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new JitNetworkAccessPolicyVirtualMachine();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('ports')) {
                obj['ports'] = ApiClient.convertToType(data['ports'], [JitNetworkAccessPortRule]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>JitNetworkAccessPolicyVirtualMachine</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>JitNetworkAccessPolicyVirtualMachine</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of JitNetworkAccessPolicyVirtualMachine.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        if (data['ports']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['ports'])) {
                throw new Error("Expected the field `ports` to be an array in the JSON data but got " + data['ports']);
            }
            // validate the optional field `ports` (array)
            for (const item of data['ports']) {
                JitNetworkAccessPortRule.validateJSON(item);
            };
        }

        return true;
    }


}

JitNetworkAccessPolicyVirtualMachine.RequiredProperties = ["id", "ports"];

/**
 * Resource ID of the virtual machine that is linked to this policy
 * @member {String} id
 */
JitNetworkAccessPolicyVirtualMachine.prototype['id'] = undefined;

/**
 * Port configurations for the virtual machine
 * @member {Array.<module:model/JitNetworkAccessPortRule>} ports
 */
JitNetworkAccessPolicyVirtualMachine.prototype['ports'] = undefined;






export default JitNetworkAccessPolicyVirtualMachine;

