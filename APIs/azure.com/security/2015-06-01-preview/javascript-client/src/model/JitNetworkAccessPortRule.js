/**
 * Security Center
 * API spec for Microsoft.Security (Azure Security Center) resource provider
 *
 * The version of the OpenAPI document: 2015-06-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The JitNetworkAccessPortRule model module.
 * @module model/JitNetworkAccessPortRule
 * @version 2015-06-01-preview
 */
class JitNetworkAccessPortRule {
    /**
     * Constructs a new <code>JitNetworkAccessPortRule</code>.
     * @alias module:model/JitNetworkAccessPortRule
     * @param maxRequestAccessDuration {String} Maximum duration requests can be made for. In ISO 8601 duration format. Minimum 5 minutes, maximum 1 day
     * @param number {Number} 
     * @param protocol {module:model/JitNetworkAccessPortRule.ProtocolEnum} 
     */
    constructor(maxRequestAccessDuration, number, protocol) { 
        
        JitNetworkAccessPortRule.initialize(this, maxRequestAccessDuration, number, protocol);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, maxRequestAccessDuration, number, protocol) { 
        obj['maxRequestAccessDuration'] = maxRequestAccessDuration;
        obj['number'] = number;
        obj['protocol'] = protocol;
    }

    /**
     * Constructs a <code>JitNetworkAccessPortRule</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/JitNetworkAccessPortRule} obj Optional instance to populate.
     * @return {module:model/JitNetworkAccessPortRule} The populated <code>JitNetworkAccessPortRule</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new JitNetworkAccessPortRule();

            if (data.hasOwnProperty('allowedSourceAddressPrefix')) {
                obj['allowedSourceAddressPrefix'] = ApiClient.convertToType(data['allowedSourceAddressPrefix'], 'String');
            }
            if (data.hasOwnProperty('allowedSourceAddressPrefixes')) {
                obj['allowedSourceAddressPrefixes'] = ApiClient.convertToType(data['allowedSourceAddressPrefixes'], ['String']);
            }
            if (data.hasOwnProperty('maxRequestAccessDuration')) {
                obj['maxRequestAccessDuration'] = ApiClient.convertToType(data['maxRequestAccessDuration'], 'String');
            }
            if (data.hasOwnProperty('number')) {
                obj['number'] = ApiClient.convertToType(data['number'], 'Number');
            }
            if (data.hasOwnProperty('protocol')) {
                obj['protocol'] = ApiClient.convertToType(data['protocol'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>JitNetworkAccessPortRule</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>JitNetworkAccessPortRule</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of JitNetworkAccessPortRule.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['allowedSourceAddressPrefix'] && !(typeof data['allowedSourceAddressPrefix'] === 'string' || data['allowedSourceAddressPrefix'] instanceof String)) {
            throw new Error("Expected the field `allowedSourceAddressPrefix` to be a primitive type in the JSON string but got " + data['allowedSourceAddressPrefix']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['allowedSourceAddressPrefixes'])) {
            throw new Error("Expected the field `allowedSourceAddressPrefixes` to be an array in the JSON data but got " + data['allowedSourceAddressPrefixes']);
        }
        // ensure the json data is a string
        if (data['maxRequestAccessDuration'] && !(typeof data['maxRequestAccessDuration'] === 'string' || data['maxRequestAccessDuration'] instanceof String)) {
            throw new Error("Expected the field `maxRequestAccessDuration` to be a primitive type in the JSON string but got " + data['maxRequestAccessDuration']);
        }
        // ensure the json data is a string
        if (data['protocol'] && !(typeof data['protocol'] === 'string' || data['protocol'] instanceof String)) {
            throw new Error("Expected the field `protocol` to be a primitive type in the JSON string but got " + data['protocol']);
        }

        return true;
    }


}

JitNetworkAccessPortRule.RequiredProperties = ["maxRequestAccessDuration", "number", "protocol"];

/**
 * Mutually exclusive with the \"allowedSourceAddressPrefixes\" parameter. Should be an IP address or CIDR, for example \"192.168.0.3\" or \"192.168.0.0/16\".
 * @member {String} allowedSourceAddressPrefix
 */
JitNetworkAccessPortRule.prototype['allowedSourceAddressPrefix'] = undefined;

/**
 * Mutually exclusive with the \"allowedSourceAddressPrefix\" parameter.
 * @member {Array.<String>} allowedSourceAddressPrefixes
 */
JitNetworkAccessPortRule.prototype['allowedSourceAddressPrefixes'] = undefined;

/**
 * Maximum duration requests can be made for. In ISO 8601 duration format. Minimum 5 minutes, maximum 1 day
 * @member {String} maxRequestAccessDuration
 */
JitNetworkAccessPortRule.prototype['maxRequestAccessDuration'] = undefined;

/**
 * @member {Number} number
 */
JitNetworkAccessPortRule.prototype['number'] = undefined;

/**
 * @member {module:model/JitNetworkAccessPortRule.ProtocolEnum} protocol
 */
JitNetworkAccessPortRule.prototype['protocol'] = undefined;





/**
 * Allowed values for the <code>protocol</code> property.
 * @enum {String}
 * @readonly
 */
JitNetworkAccessPortRule['ProtocolEnum'] = {

    /**
     * value: "TCP"
     * @const
     */
    "TCP": "TCP",

    /**
     * value: "UDP"
     * @const
     */
    "UDP": "UDP",

    /**
     * value: "*"
     * @const
     */
    "STAR": "*"
};



export default JitNetworkAccessPortRule;

