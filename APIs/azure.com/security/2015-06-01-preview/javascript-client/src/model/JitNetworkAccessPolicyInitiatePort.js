/**
 * Security Center
 * API spec for Microsoft.Security (Azure Security Center) resource provider
 *
 * The version of the OpenAPI document: 2015-06-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The JitNetworkAccessPolicyInitiatePort model module.
 * @module model/JitNetworkAccessPolicyInitiatePort
 * @version 2015-06-01-preview
 */
class JitNetworkAccessPolicyInitiatePort {
    /**
     * Constructs a new <code>JitNetworkAccessPolicyInitiatePort</code>.
     * @alias module:model/JitNetworkAccessPolicyInitiatePort
     * @param endTimeUtc {Date} The time to close the request in UTC
     * @param number {Number} 
     */
    constructor(endTimeUtc, number) { 
        
        JitNetworkAccessPolicyInitiatePort.initialize(this, endTimeUtc, number);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, endTimeUtc, number) { 
        obj['endTimeUtc'] = endTimeUtc;
        obj['number'] = number;
    }

    /**
     * Constructs a <code>JitNetworkAccessPolicyInitiatePort</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/JitNetworkAccessPolicyInitiatePort} obj Optional instance to populate.
     * @return {module:model/JitNetworkAccessPolicyInitiatePort} The populated <code>JitNetworkAccessPolicyInitiatePort</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new JitNetworkAccessPolicyInitiatePort();

            if (data.hasOwnProperty('allowedSourceAddressPrefix')) {
                obj['allowedSourceAddressPrefix'] = ApiClient.convertToType(data['allowedSourceAddressPrefix'], 'String');
            }
            if (data.hasOwnProperty('endTimeUtc')) {
                obj['endTimeUtc'] = ApiClient.convertToType(data['endTimeUtc'], 'Date');
            }
            if (data.hasOwnProperty('number')) {
                obj['number'] = ApiClient.convertToType(data['number'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>JitNetworkAccessPolicyInitiatePort</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>JitNetworkAccessPolicyInitiatePort</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of JitNetworkAccessPolicyInitiatePort.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['allowedSourceAddressPrefix'] && !(typeof data['allowedSourceAddressPrefix'] === 'string' || data['allowedSourceAddressPrefix'] instanceof String)) {
            throw new Error("Expected the field `allowedSourceAddressPrefix` to be a primitive type in the JSON string but got " + data['allowedSourceAddressPrefix']);
        }

        return true;
    }


}

JitNetworkAccessPolicyInitiatePort.RequiredProperties = ["endTimeUtc", "number"];

/**
 * Source of the allowed traffic. If omitted, the request will be for the source IP address of the initiate request.
 * @member {String} allowedSourceAddressPrefix
 */
JitNetworkAccessPolicyInitiatePort.prototype['allowedSourceAddressPrefix'] = undefined;

/**
 * The time to close the request in UTC
 * @member {Date} endTimeUtc
 */
JitNetworkAccessPolicyInitiatePort.prototype['endTimeUtc'] = undefined;

/**
 * @member {Number} number
 */
JitNetworkAccessPolicyInitiatePort.prototype['number'] = undefined;






export default JitNetworkAccessPolicyInitiatePort;

