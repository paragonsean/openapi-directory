/*
 * Security Center
 * API spec for Microsoft.Security (Azure Security Center) resource provider
 *
 * The version of the OpenAPI document: 2015-06-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CloudError;
import org.openapitools.client.model.JitNetworkAccessPoliciesList;
import org.openapitools.client.model.JitNetworkAccessPolicy;
import org.openapitools.client.model.JitNetworkAccessPolicyInitiateRequest;
import org.openapitools.client.model.JitNetworkAccessRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for JitNetworkAccessPoliciesApi
 */
@Disabled
public class JitNetworkAccessPoliciesApiTest {

    private final JitNetworkAccessPoliciesApi api = new JitNetworkAccessPoliciesApi();

    /**
     * Create a policy for protecting resources using Just-in-Time access control
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jitNetworkAccessPoliciesCreateOrUpdateTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String ascLocation = null;
        String jitNetworkAccessPolicyName = null;
        String apiVersion = null;
        JitNetworkAccessPolicy body = null;
        JitNetworkAccessPolicy response = api.jitNetworkAccessPoliciesCreateOrUpdate(subscriptionId, resourceGroupName, ascLocation, jitNetworkAccessPolicyName, apiVersion, body);
        // TODO: test validations
    }

    /**
     * Delete a Just-in-Time access control policy.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jitNetworkAccessPoliciesDeleteTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String ascLocation = null;
        String jitNetworkAccessPolicyName = null;
        String apiVersion = null;
        api.jitNetworkAccessPoliciesDelete(subscriptionId, resourceGroupName, ascLocation, jitNetworkAccessPolicyName, apiVersion);
        // TODO: test validations
    }

    /**
     * Policies for protecting resources using Just-in-Time access control for the subscription, location
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jitNetworkAccessPoliciesGetTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String ascLocation = null;
        String jitNetworkAccessPolicyName = null;
        String apiVersion = null;
        JitNetworkAccessPolicy response = api.jitNetworkAccessPoliciesGet(subscriptionId, resourceGroupName, ascLocation, jitNetworkAccessPolicyName, apiVersion);
        // TODO: test validations
    }

    /**
     * Initiate a JIT access from a specific Just-in-Time policy configuration.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jitNetworkAccessPoliciesInitiateTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String ascLocation = null;
        String jitNetworkAccessPolicyName = null;
        String jitNetworkAccessPolicyInitiateType = null;
        String apiVersion = null;
        JitNetworkAccessPolicyInitiateRequest body = null;
        JitNetworkAccessRequest response = api.jitNetworkAccessPoliciesInitiate(subscriptionId, resourceGroupName, ascLocation, jitNetworkAccessPolicyName, jitNetworkAccessPolicyInitiateType, apiVersion, body);
        // TODO: test validations
    }

    /**
     * Policies for protecting resources using Just-in-Time access control.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jitNetworkAccessPoliciesListTest() throws ApiException {
        String subscriptionId = null;
        String apiVersion = null;
        JitNetworkAccessPoliciesList response = api.jitNetworkAccessPoliciesList(subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Policies for protecting resources using Just-in-Time access control for the subscription, location
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jitNetworkAccessPoliciesListByRegionTest() throws ApiException {
        String subscriptionId = null;
        String ascLocation = null;
        String apiVersion = null;
        JitNetworkAccessPoliciesList response = api.jitNetworkAccessPoliciesListByRegion(subscriptionId, ascLocation, apiVersion);
        // TODO: test validations
    }

    /**
     * Policies for protecting resources using Just-in-Time access control for the subscription, location
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jitNetworkAccessPoliciesListByResourceGroupTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String apiVersion = null;
        JitNetworkAccessPoliciesList response = api.jitNetworkAccessPoliciesListByResourceGroup(subscriptionId, resourceGroupName, apiVersion);
        // TODO: test validations
    }

    /**
     * Policies for protecting resources using Just-in-Time access control for the subscription, location
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jitNetworkAccessPoliciesListByResourceGroupAndRegionTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String ascLocation = null;
        String apiVersion = null;
        JitNetworkAccessPoliciesList response = api.jitNetworkAccessPoliciesListByResourceGroupAndRegion(subscriptionId, resourceGroupName, ascLocation, apiVersion);
        // TODO: test validations
    }

}
