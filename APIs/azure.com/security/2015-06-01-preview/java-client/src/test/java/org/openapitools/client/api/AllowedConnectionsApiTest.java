/*
 * Security Center
 * API spec for Microsoft.Security (Azure Security Center) resource provider
 *
 * The version of the OpenAPI document: 2015-06-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AllowedConnectionsList;
import org.openapitools.client.model.AllowedConnectionsResource;
import org.openapitools.client.model.CloudError;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AllowedConnectionsApi
 */
@Disabled
public class AllowedConnectionsApiTest {

    private final AllowedConnectionsApi api = new AllowedConnectionsApi();

    /**
     * Gets the list of all possible traffic between resources for the subscription and location, based on connection type.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void allowedConnectionsGetTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String ascLocation = null;
        String connectionType = null;
        String apiVersion = null;
        AllowedConnectionsResource response = api.allowedConnectionsGet(subscriptionId, resourceGroupName, ascLocation, connectionType, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets the list of all possible traffic between resources for the subscription
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void allowedConnectionsListTest() throws ApiException {
        String subscriptionId = null;
        String apiVersion = null;
        AllowedConnectionsList response = api.allowedConnectionsList(subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets the list of all possible traffic between resources for the subscription and location.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void allowedConnectionsListByHomeRegionTest() throws ApiException {
        String subscriptionId = null;
        String ascLocation = null;
        String apiVersion = null;
        AllowedConnectionsList response = api.allowedConnectionsListByHomeRegion(subscriptionId, ascLocation, apiVersion);
        // TODO: test validations
    }

}
