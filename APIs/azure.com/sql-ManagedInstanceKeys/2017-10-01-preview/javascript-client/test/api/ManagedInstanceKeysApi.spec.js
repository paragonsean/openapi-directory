/**
 * SqlManagementClient
 * The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.
 *
 * The version of the OpenAPI document: 2017-10-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SqlManagementClient);
  }
}(this, function(expect, SqlManagementClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SqlManagementClient.ManagedInstanceKeysApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ManagedInstanceKeysApi', function() {
    describe('managedInstanceKeysCreateOrUpdate', function() {
      it('should call managedInstanceKeysCreateOrUpdate successfully', function(done) {
        //uncomment below and update the code to test managedInstanceKeysCreateOrUpdate
        //instance.managedInstanceKeysCreateOrUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('managedInstanceKeysDelete', function() {
      it('should call managedInstanceKeysDelete successfully', function(done) {
        //uncomment below and update the code to test managedInstanceKeysDelete
        //instance.managedInstanceKeysDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('managedInstanceKeysGet', function() {
      it('should call managedInstanceKeysGet successfully', function(done) {
        //uncomment below and update the code to test managedInstanceKeysGet
        //instance.managedInstanceKeysGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('managedInstanceKeysListByInstance', function() {
      it('should call managedInstanceKeysListByInstance successfully', function(done) {
        //uncomment below and update the code to test managedInstanceKeysListByInstance
        //instance.managedInstanceKeysListByInstance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
