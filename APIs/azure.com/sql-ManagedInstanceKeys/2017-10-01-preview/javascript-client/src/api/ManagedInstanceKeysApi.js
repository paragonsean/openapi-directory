/**
 * SqlManagementClient
 * The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.
 *
 * The version of the OpenAPI document: 2017-10-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ManagedInstanceKey from '../model/ManagedInstanceKey';
import ManagedInstanceKeyListResult from '../model/ManagedInstanceKeyListResult';

/**
* ManagedInstanceKeys service.
* @module api/ManagedInstanceKeysApi
* @version 2017-10-01-preview
*/
export default class ManagedInstanceKeysApi {

    /**
    * Constructs a new ManagedInstanceKeysApi. 
    * @alias module:api/ManagedInstanceKeysApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the managedInstanceKeysCreateOrUpdate operation.
     * @callback module:api/ManagedInstanceKeysApi~managedInstanceKeysCreateOrUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ManagedInstanceKey} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates or updates a managed instance key.
     * @param {String} resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * @param {String} managedInstanceName The name of the managed instance.
     * @param {String} keyName The name of the managed instance key to be operated on (updated or created).
     * @param {String} subscriptionId The subscription ID that identifies an Azure subscription.
     * @param {String} apiVersion The API version to use for the request.
     * @param {module:model/ManagedInstanceKey} parameters The requested managed instance key resource state.
     * @param {module:api/ManagedInstanceKeysApi~managedInstanceKeysCreateOrUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ManagedInstanceKey}
     */
    managedInstanceKeysCreateOrUpdate(resourceGroupName, managedInstanceName, keyName, subscriptionId, apiVersion, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling managedInstanceKeysCreateOrUpdate");
      }
      // verify the required parameter 'managedInstanceName' is set
      if (managedInstanceName === undefined || managedInstanceName === null) {
        throw new Error("Missing the required parameter 'managedInstanceName' when calling managedInstanceKeysCreateOrUpdate");
      }
      // verify the required parameter 'keyName' is set
      if (keyName === undefined || keyName === null) {
        throw new Error("Missing the required parameter 'keyName' when calling managedInstanceKeysCreateOrUpdate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling managedInstanceKeysCreateOrUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling managedInstanceKeysCreateOrUpdate");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling managedInstanceKeysCreateOrUpdate");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'managedInstanceName': managedInstanceName,
        'keyName': keyName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ManagedInstanceKey;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/keys/{keyName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the managedInstanceKeysDelete operation.
     * @callback module:api/ManagedInstanceKeysApi~managedInstanceKeysDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes the managed instance key with the given name.
     * @param {String} resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * @param {String} managedInstanceName The name of the managed instance.
     * @param {String} keyName The name of the managed instance key to be deleted.
     * @param {String} subscriptionId The subscription ID that identifies an Azure subscription.
     * @param {String} apiVersion The API version to use for the request.
     * @param {module:api/ManagedInstanceKeysApi~managedInstanceKeysDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    managedInstanceKeysDelete(resourceGroupName, managedInstanceName, keyName, subscriptionId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling managedInstanceKeysDelete");
      }
      // verify the required parameter 'managedInstanceName' is set
      if (managedInstanceName === undefined || managedInstanceName === null) {
        throw new Error("Missing the required parameter 'managedInstanceName' when calling managedInstanceKeysDelete");
      }
      // verify the required parameter 'keyName' is set
      if (keyName === undefined || keyName === null) {
        throw new Error("Missing the required parameter 'keyName' when calling managedInstanceKeysDelete");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling managedInstanceKeysDelete");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling managedInstanceKeysDelete");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'managedInstanceName': managedInstanceName,
        'keyName': keyName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/keys/{keyName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the managedInstanceKeysGet operation.
     * @callback module:api/ManagedInstanceKeysApi~managedInstanceKeysGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ManagedInstanceKey} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets a managed instance key.
     * @param {String} resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * @param {String} managedInstanceName The name of the managed instance.
     * @param {String} keyName The name of the managed instance key to be retrieved.
     * @param {String} subscriptionId The subscription ID that identifies an Azure subscription.
     * @param {String} apiVersion The API version to use for the request.
     * @param {module:api/ManagedInstanceKeysApi~managedInstanceKeysGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ManagedInstanceKey}
     */
    managedInstanceKeysGet(resourceGroupName, managedInstanceName, keyName, subscriptionId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling managedInstanceKeysGet");
      }
      // verify the required parameter 'managedInstanceName' is set
      if (managedInstanceName === undefined || managedInstanceName === null) {
        throw new Error("Missing the required parameter 'managedInstanceName' when calling managedInstanceKeysGet");
      }
      // verify the required parameter 'keyName' is set
      if (keyName === undefined || keyName === null) {
        throw new Error("Missing the required parameter 'keyName' when calling managedInstanceKeysGet");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling managedInstanceKeysGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling managedInstanceKeysGet");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'managedInstanceName': managedInstanceName,
        'keyName': keyName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ManagedInstanceKey;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/keys/{keyName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the managedInstanceKeysListByInstance operation.
     * @callback module:api/ManagedInstanceKeysApi~managedInstanceKeysListByInstanceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ManagedInstanceKeyListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets a list of managed instance keys.
     * @param {String} resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * @param {String} managedInstanceName The name of the managed instance.
     * @param {String} subscriptionId The subscription ID that identifies an Azure subscription.
     * @param {String} apiVersion The API version to use for the request.
     * @param {Object} opts Optional parameters
     * @param {String} [filter] An OData filter expression that filters elements in the collection.
     * @param {module:api/ManagedInstanceKeysApi~managedInstanceKeysListByInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ManagedInstanceKeyListResult}
     */
    managedInstanceKeysListByInstance(resourceGroupName, managedInstanceName, subscriptionId, apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling managedInstanceKeysListByInstance");
      }
      // verify the required parameter 'managedInstanceName' is set
      if (managedInstanceName === undefined || managedInstanceName === null) {
        throw new Error("Missing the required parameter 'managedInstanceName' when calling managedInstanceKeysListByInstance");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling managedInstanceKeysListByInstance");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling managedInstanceKeysListByInstance");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'managedInstanceName': managedInstanceName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        '$filter': opts['filter'],
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ManagedInstanceKeyListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/keys', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
