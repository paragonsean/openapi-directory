/*
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-08-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ExpressRouteCircuitAuthorization;
import org.openapitools.client.model.ExpressRouteCircuitConnectionPropertiesFormatExpressRouteCircuitPeering;
import org.openapitools.client.model.ExpressRouteCircuitPeering;
import org.openapitools.client.model.ExpressRouteCircuitServiceProviderProperties;
import org.openapitools.client.model.ServiceProviderProvisioningState;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ExpressRouteCircuitPropertiesFormat
 */
public class ExpressRouteCircuitPropertiesFormatTest {
    private final ExpressRouteCircuitPropertiesFormat model = new ExpressRouteCircuitPropertiesFormat();

    /**
     * Model tests for ExpressRouteCircuitPropertiesFormat
     */
    @Test
    public void testExpressRouteCircuitPropertiesFormat() {
        // TODO: test ExpressRouteCircuitPropertiesFormat
    }

    /**
     * Test the property 'allowClassicOperations'
     */
    @Test
    public void allowClassicOperationsTest() {
        // TODO: test allowClassicOperations
    }

    /**
     * Test the property 'authorizations'
     */
    @Test
    public void authorizationsTest() {
        // TODO: test authorizations
    }

    /**
     * Test the property 'bandwidthInGbps'
     */
    @Test
    public void bandwidthInGbpsTest() {
        // TODO: test bandwidthInGbps
    }

    /**
     * Test the property 'circuitProvisioningState'
     */
    @Test
    public void circuitProvisioningStateTest() {
        // TODO: test circuitProvisioningState
    }

    /**
     * Test the property 'expressRoutePort'
     */
    @Test
    public void expressRoutePortTest() {
        // TODO: test expressRoutePort
    }

    /**
     * Test the property 'gatewayManagerEtag'
     */
    @Test
    public void gatewayManagerEtagTest() {
        // TODO: test gatewayManagerEtag
    }

    /**
     * Test the property 'globalReachEnabled'
     */
    @Test
    public void globalReachEnabledTest() {
        // TODO: test globalReachEnabled
    }

    /**
     * Test the property 'peerings'
     */
    @Test
    public void peeringsTest() {
        // TODO: test peerings
    }

    /**
     * Test the property 'provisioningState'
     */
    @Test
    public void provisioningStateTest() {
        // TODO: test provisioningState
    }

    /**
     * Test the property 'serviceKey'
     */
    @Test
    public void serviceKeyTest() {
        // TODO: test serviceKey
    }

    /**
     * Test the property 'serviceProviderNotes'
     */
    @Test
    public void serviceProviderNotesTest() {
        // TODO: test serviceProviderNotes
    }

    /**
     * Test the property 'serviceProviderProperties'
     */
    @Test
    public void serviceProviderPropertiesTest() {
        // TODO: test serviceProviderProperties
    }

    /**
     * Test the property 'serviceProviderProvisioningState'
     */
    @Test
    public void serviceProviderProvisioningStateTest() {
        // TODO: test serviceProviderProvisioningState
    }

    /**
     * Test the property 'stag'
     */
    @Test
    public void stagTest() {
        // TODO: test stag
    }

}
