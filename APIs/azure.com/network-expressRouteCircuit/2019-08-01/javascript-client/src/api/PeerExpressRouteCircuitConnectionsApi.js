/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-08-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import PeerExpressRouteCircuitConnection from '../model/PeerExpressRouteCircuitConnection';
import PeerExpressRouteCircuitConnectionListResult from '../model/PeerExpressRouteCircuitConnectionListResult';

/**
* PeerExpressRouteCircuitConnections service.
* @module api/PeerExpressRouteCircuitConnectionsApi
* @version 2019-08-01
*/
export default class PeerExpressRouteCircuitConnectionsApi {

    /**
    * Constructs a new PeerExpressRouteCircuitConnectionsApi. 
    * @alias module:api/PeerExpressRouteCircuitConnectionsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the peerExpressRouteCircuitConnectionsGet operation.
     * @callback module:api/PeerExpressRouteCircuitConnectionsApi~peerExpressRouteCircuitConnectionsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PeerExpressRouteCircuitConnection} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the specified Peer Express Route Circuit Connection from the specified express route circuit.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} circuitName The name of the express route circuit.
     * @param {String} peeringName The name of the peering.
     * @param {String} connectionName The name of the peer express route circuit connection.
     * @param {String} apiVersion Client API version.
     * @param {String} subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/PeerExpressRouteCircuitConnectionsApi~peerExpressRouteCircuitConnectionsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PeerExpressRouteCircuitConnection}
     */
    peerExpressRouteCircuitConnectionsGet(resourceGroupName, circuitName, peeringName, connectionName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling peerExpressRouteCircuitConnectionsGet");
      }
      // verify the required parameter 'circuitName' is set
      if (circuitName === undefined || circuitName === null) {
        throw new Error("Missing the required parameter 'circuitName' when calling peerExpressRouteCircuitConnectionsGet");
      }
      // verify the required parameter 'peeringName' is set
      if (peeringName === undefined || peeringName === null) {
        throw new Error("Missing the required parameter 'peeringName' when calling peerExpressRouteCircuitConnectionsGet");
      }
      // verify the required parameter 'connectionName' is set
      if (connectionName === undefined || connectionName === null) {
        throw new Error("Missing the required parameter 'connectionName' when calling peerExpressRouteCircuitConnectionsGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling peerExpressRouteCircuitConnectionsGet");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling peerExpressRouteCircuitConnectionsGet");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'circuitName': circuitName,
        'peeringName': peeringName,
        'connectionName': connectionName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PeerExpressRouteCircuitConnection;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}/peerConnections/{connectionName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the peerExpressRouteCircuitConnectionsList operation.
     * @callback module:api/PeerExpressRouteCircuitConnectionsApi~peerExpressRouteCircuitConnectionsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PeerExpressRouteCircuitConnectionListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets all global reach peer connections associated with a private peering in an express route circuit.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} circuitName The name of the circuit.
     * @param {String} peeringName The name of the peering.
     * @param {String} apiVersion Client API version.
     * @param {String} subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/PeerExpressRouteCircuitConnectionsApi~peerExpressRouteCircuitConnectionsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PeerExpressRouteCircuitConnectionListResult}
     */
    peerExpressRouteCircuitConnectionsList(resourceGroupName, circuitName, peeringName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling peerExpressRouteCircuitConnectionsList");
      }
      // verify the required parameter 'circuitName' is set
      if (circuitName === undefined || circuitName === null) {
        throw new Error("Missing the required parameter 'circuitName' when calling peerExpressRouteCircuitConnectionsList");
      }
      // verify the required parameter 'peeringName' is set
      if (peeringName === undefined || peeringName === null) {
        throw new Error("Missing the required parameter 'peeringName' when calling peerExpressRouteCircuitConnectionsList");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling peerExpressRouteCircuitConnectionsList");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling peerExpressRouteCircuitConnectionsList");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'circuitName': circuitName,
        'peeringName': peeringName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PeerExpressRouteCircuitConnectionListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}/peerConnections', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
