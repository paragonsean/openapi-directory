/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-07-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIExpressRouteCircuitRoutesTable.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIExpressRouteCircuitRoutesTable::OAIExpressRouteCircuitRoutesTable(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIExpressRouteCircuitRoutesTable::OAIExpressRouteCircuitRoutesTable() {
    this->initializeModel();
}

OAIExpressRouteCircuitRoutesTable::~OAIExpressRouteCircuitRoutesTable() {}

void OAIExpressRouteCircuitRoutesTable::initializeModel() {

    m_loc_prf_isSet = false;
    m_loc_prf_isValid = false;

    m_network_isSet = false;
    m_network_isValid = false;

    m_next_hop_isSet = false;
    m_next_hop_isValid = false;

    m_path_isSet = false;
    m_path_isValid = false;

    m_weight_isSet = false;
    m_weight_isValid = false;
}

void OAIExpressRouteCircuitRoutesTable::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIExpressRouteCircuitRoutesTable::fromJsonObject(QJsonObject json) {

    m_loc_prf_isValid = ::OpenAPI::fromJsonValue(m_loc_prf, json[QString("locPrf")]);
    m_loc_prf_isSet = !json[QString("locPrf")].isNull() && m_loc_prf_isValid;

    m_network_isValid = ::OpenAPI::fromJsonValue(m_network, json[QString("network")]);
    m_network_isSet = !json[QString("network")].isNull() && m_network_isValid;

    m_next_hop_isValid = ::OpenAPI::fromJsonValue(m_next_hop, json[QString("nextHop")]);
    m_next_hop_isSet = !json[QString("nextHop")].isNull() && m_next_hop_isValid;

    m_path_isValid = ::OpenAPI::fromJsonValue(m_path, json[QString("path")]);
    m_path_isSet = !json[QString("path")].isNull() && m_path_isValid;

    m_weight_isValid = ::OpenAPI::fromJsonValue(m_weight, json[QString("weight")]);
    m_weight_isSet = !json[QString("weight")].isNull() && m_weight_isValid;
}

QString OAIExpressRouteCircuitRoutesTable::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIExpressRouteCircuitRoutesTable::asJsonObject() const {
    QJsonObject obj;
    if (m_loc_prf_isSet) {
        obj.insert(QString("locPrf"), ::OpenAPI::toJsonValue(m_loc_prf));
    }
    if (m_network_isSet) {
        obj.insert(QString("network"), ::OpenAPI::toJsonValue(m_network));
    }
    if (m_next_hop_isSet) {
        obj.insert(QString("nextHop"), ::OpenAPI::toJsonValue(m_next_hop));
    }
    if (m_path_isSet) {
        obj.insert(QString("path"), ::OpenAPI::toJsonValue(m_path));
    }
    if (m_weight_isSet) {
        obj.insert(QString("weight"), ::OpenAPI::toJsonValue(m_weight));
    }
    return obj;
}

QString OAIExpressRouteCircuitRoutesTable::getLocPrf() const {
    return m_loc_prf;
}
void OAIExpressRouteCircuitRoutesTable::setLocPrf(const QString &loc_prf) {
    m_loc_prf = loc_prf;
    m_loc_prf_isSet = true;
}

bool OAIExpressRouteCircuitRoutesTable::is_loc_prf_Set() const{
    return m_loc_prf_isSet;
}

bool OAIExpressRouteCircuitRoutesTable::is_loc_prf_Valid() const{
    return m_loc_prf_isValid;
}

QString OAIExpressRouteCircuitRoutesTable::getNetwork() const {
    return m_network;
}
void OAIExpressRouteCircuitRoutesTable::setNetwork(const QString &network) {
    m_network = network;
    m_network_isSet = true;
}

bool OAIExpressRouteCircuitRoutesTable::is_network_Set() const{
    return m_network_isSet;
}

bool OAIExpressRouteCircuitRoutesTable::is_network_Valid() const{
    return m_network_isValid;
}

QString OAIExpressRouteCircuitRoutesTable::getNextHop() const {
    return m_next_hop;
}
void OAIExpressRouteCircuitRoutesTable::setNextHop(const QString &next_hop) {
    m_next_hop = next_hop;
    m_next_hop_isSet = true;
}

bool OAIExpressRouteCircuitRoutesTable::is_next_hop_Set() const{
    return m_next_hop_isSet;
}

bool OAIExpressRouteCircuitRoutesTable::is_next_hop_Valid() const{
    return m_next_hop_isValid;
}

QString OAIExpressRouteCircuitRoutesTable::getPath() const {
    return m_path;
}
void OAIExpressRouteCircuitRoutesTable::setPath(const QString &path) {
    m_path = path;
    m_path_isSet = true;
}

bool OAIExpressRouteCircuitRoutesTable::is_path_Set() const{
    return m_path_isSet;
}

bool OAIExpressRouteCircuitRoutesTable::is_path_Valid() const{
    return m_path_isValid;
}

qint32 OAIExpressRouteCircuitRoutesTable::getWeight() const {
    return m_weight;
}
void OAIExpressRouteCircuitRoutesTable::setWeight(const qint32 &weight) {
    m_weight = weight;
    m_weight_isSet = true;
}

bool OAIExpressRouteCircuitRoutesTable::is_weight_Set() const{
    return m_weight_isSet;
}

bool OAIExpressRouteCircuitRoutesTable::is_weight_Valid() const{
    return m_weight_isValid;
}

bool OAIExpressRouteCircuitRoutesTable::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_loc_prf_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_network_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_hop_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_path_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_weight_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIExpressRouteCircuitRoutesTable::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
