/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-07-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIExpressRouteCircuitSku.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIExpressRouteCircuitSku::OAIExpressRouteCircuitSku(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIExpressRouteCircuitSku::OAIExpressRouteCircuitSku() {
    this->initializeModel();
}

OAIExpressRouteCircuitSku::~OAIExpressRouteCircuitSku() {}

void OAIExpressRouteCircuitSku::initializeModel() {

    m_family_isSet = false;
    m_family_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_tier_isSet = false;
    m_tier_isValid = false;
}

void OAIExpressRouteCircuitSku::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIExpressRouteCircuitSku::fromJsonObject(QJsonObject json) {

    m_family_isValid = ::OpenAPI::fromJsonValue(m_family, json[QString("family")]);
    m_family_isSet = !json[QString("family")].isNull() && m_family_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_tier_isValid = ::OpenAPI::fromJsonValue(m_tier, json[QString("tier")]);
    m_tier_isSet = !json[QString("tier")].isNull() && m_tier_isValid;
}

QString OAIExpressRouteCircuitSku::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIExpressRouteCircuitSku::asJsonObject() const {
    QJsonObject obj;
    if (m_family_isSet) {
        obj.insert(QString("family"), ::OpenAPI::toJsonValue(m_family));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_tier_isSet) {
        obj.insert(QString("tier"), ::OpenAPI::toJsonValue(m_tier));
    }
    return obj;
}

QString OAIExpressRouteCircuitSku::getFamily() const {
    return m_family;
}
void OAIExpressRouteCircuitSku::setFamily(const QString &family) {
    m_family = family;
    m_family_isSet = true;
}

bool OAIExpressRouteCircuitSku::is_family_Set() const{
    return m_family_isSet;
}

bool OAIExpressRouteCircuitSku::is_family_Valid() const{
    return m_family_isValid;
}

QString OAIExpressRouteCircuitSku::getName() const {
    return m_name;
}
void OAIExpressRouteCircuitSku::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIExpressRouteCircuitSku::is_name_Set() const{
    return m_name_isSet;
}

bool OAIExpressRouteCircuitSku::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIExpressRouteCircuitSku::getTier() const {
    return m_tier;
}
void OAIExpressRouteCircuitSku::setTier(const QString &tier) {
    m_tier = tier;
    m_tier_isSet = true;
}

bool OAIExpressRouteCircuitSku::is_tier_Set() const{
    return m_tier_isSet;
}

bool OAIExpressRouteCircuitSku::is_tier_Valid() const{
    return m_tier_isValid;
}

bool OAIExpressRouteCircuitSku::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_family_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tier_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIExpressRouteCircuitSku::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
