/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AuthorizationListResult from '../model/AuthorizationListResult';
import ExpressRouteCircuitAuthorization from '../model/ExpressRouteCircuitAuthorization';

/**
* ExpressRouteCircuitAuthorizations service.
* @module api/ExpressRouteCircuitAuthorizationsApi
* @version 2019-06-01
*/
export default class ExpressRouteCircuitAuthorizationsApi {

    /**
    * Constructs a new ExpressRouteCircuitAuthorizationsApi. 
    * @alias module:api/ExpressRouteCircuitAuthorizationsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the expressRouteCircuitAuthorizationsCreateOrUpdate operation.
     * @callback module:api/ExpressRouteCircuitAuthorizationsApi~expressRouteCircuitAuthorizationsCreateOrUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ExpressRouteCircuitAuthorization} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates or updates an authorization in the specified express route circuit.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} circuitName The name of the express route circuit.
     * @param {String} authorizationName The name of the authorization.
     * @param {String} apiVersion Client API version.
     * @param {String} subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:model/ExpressRouteCircuitAuthorization} authorizationParameters Parameters supplied to the create or update express route circuit authorization operation.
     * @param {module:api/ExpressRouteCircuitAuthorizationsApi~expressRouteCircuitAuthorizationsCreateOrUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ExpressRouteCircuitAuthorization}
     */
    expressRouteCircuitAuthorizationsCreateOrUpdate(resourceGroupName, circuitName, authorizationName, apiVersion, subscriptionId, authorizationParameters, callback) {
      let postBody = authorizationParameters;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling expressRouteCircuitAuthorizationsCreateOrUpdate");
      }
      // verify the required parameter 'circuitName' is set
      if (circuitName === undefined || circuitName === null) {
        throw new Error("Missing the required parameter 'circuitName' when calling expressRouteCircuitAuthorizationsCreateOrUpdate");
      }
      // verify the required parameter 'authorizationName' is set
      if (authorizationName === undefined || authorizationName === null) {
        throw new Error("Missing the required parameter 'authorizationName' when calling expressRouteCircuitAuthorizationsCreateOrUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling expressRouteCircuitAuthorizationsCreateOrUpdate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling expressRouteCircuitAuthorizationsCreateOrUpdate");
      }
      // verify the required parameter 'authorizationParameters' is set
      if (authorizationParameters === undefined || authorizationParameters === null) {
        throw new Error("Missing the required parameter 'authorizationParameters' when calling expressRouteCircuitAuthorizationsCreateOrUpdate");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'circuitName': circuitName,
        'authorizationName': authorizationName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ExpressRouteCircuitAuthorization;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/authorizations/{authorizationName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the expressRouteCircuitAuthorizationsDelete operation.
     * @callback module:api/ExpressRouteCircuitAuthorizationsApi~expressRouteCircuitAuthorizationsDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes the specified authorization from the specified express route circuit.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} circuitName The name of the express route circuit.
     * @param {String} authorizationName The name of the authorization.
     * @param {String} apiVersion Client API version.
     * @param {String} subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/ExpressRouteCircuitAuthorizationsApi~expressRouteCircuitAuthorizationsDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    expressRouteCircuitAuthorizationsDelete(resourceGroupName, circuitName, authorizationName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling expressRouteCircuitAuthorizationsDelete");
      }
      // verify the required parameter 'circuitName' is set
      if (circuitName === undefined || circuitName === null) {
        throw new Error("Missing the required parameter 'circuitName' when calling expressRouteCircuitAuthorizationsDelete");
      }
      // verify the required parameter 'authorizationName' is set
      if (authorizationName === undefined || authorizationName === null) {
        throw new Error("Missing the required parameter 'authorizationName' when calling expressRouteCircuitAuthorizationsDelete");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling expressRouteCircuitAuthorizationsDelete");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling expressRouteCircuitAuthorizationsDelete");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'circuitName': circuitName,
        'authorizationName': authorizationName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/authorizations/{authorizationName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the expressRouteCircuitAuthorizationsGet operation.
     * @callback module:api/ExpressRouteCircuitAuthorizationsApi~expressRouteCircuitAuthorizationsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ExpressRouteCircuitAuthorization} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the specified authorization from the specified express route circuit.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} circuitName The name of the express route circuit.
     * @param {String} authorizationName The name of the authorization.
     * @param {String} apiVersion Client API version.
     * @param {String} subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/ExpressRouteCircuitAuthorizationsApi~expressRouteCircuitAuthorizationsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ExpressRouteCircuitAuthorization}
     */
    expressRouteCircuitAuthorizationsGet(resourceGroupName, circuitName, authorizationName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling expressRouteCircuitAuthorizationsGet");
      }
      // verify the required parameter 'circuitName' is set
      if (circuitName === undefined || circuitName === null) {
        throw new Error("Missing the required parameter 'circuitName' when calling expressRouteCircuitAuthorizationsGet");
      }
      // verify the required parameter 'authorizationName' is set
      if (authorizationName === undefined || authorizationName === null) {
        throw new Error("Missing the required parameter 'authorizationName' when calling expressRouteCircuitAuthorizationsGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling expressRouteCircuitAuthorizationsGet");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling expressRouteCircuitAuthorizationsGet");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'circuitName': circuitName,
        'authorizationName': authorizationName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ExpressRouteCircuitAuthorization;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/authorizations/{authorizationName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the expressRouteCircuitAuthorizationsList operation.
     * @callback module:api/ExpressRouteCircuitAuthorizationsApi~expressRouteCircuitAuthorizationsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AuthorizationListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets all authorizations in an express route circuit.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} circuitName The name of the circuit.
     * @param {String} apiVersion Client API version.
     * @param {String} subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/ExpressRouteCircuitAuthorizationsApi~expressRouteCircuitAuthorizationsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AuthorizationListResult}
     */
    expressRouteCircuitAuthorizationsList(resourceGroupName, circuitName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling expressRouteCircuitAuthorizationsList");
      }
      // verify the required parameter 'circuitName' is set
      if (circuitName === undefined || circuitName === null) {
        throw new Error("Missing the required parameter 'circuitName' when calling expressRouteCircuitAuthorizationsList");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling expressRouteCircuitAuthorizationsList");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling expressRouteCircuitAuthorizationsList");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'circuitName': circuitName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AuthorizationListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/authorizations', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
