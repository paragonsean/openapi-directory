# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ExpressRouteCircuitArpTable(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, age: int=None, interface: str=None, ip_address: str=None, mac_address: str=None):
        """ExpressRouteCircuitArpTable - a model defined in OpenAPI

        :param age: The age of this ExpressRouteCircuitArpTable.
        :param interface: The interface of this ExpressRouteCircuitArpTable.
        :param ip_address: The ip_address of this ExpressRouteCircuitArpTable.
        :param mac_address: The mac_address of this ExpressRouteCircuitArpTable.
        """
        self.openapi_types = {
            'age': int,
            'interface': str,
            'ip_address': str,
            'mac_address': str
        }

        self.attribute_map = {
            'age': 'age',
            'interface': 'interface',
            'ip_address': 'ipAddress',
            'mac_address': 'macAddress'
        }

        self._age = age
        self._interface = interface
        self._ip_address = ip_address
        self._mac_address = mac_address

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ExpressRouteCircuitArpTable':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ExpressRouteCircuitArpTable of this ExpressRouteCircuitArpTable.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def age(self):
        """Gets the age of this ExpressRouteCircuitArpTable.

        Entry age in minutes.

        :return: The age of this ExpressRouteCircuitArpTable.
        :rtype: int
        """
        return self._age

    @age.setter
    def age(self, age):
        """Sets the age of this ExpressRouteCircuitArpTable.

        Entry age in minutes.

        :param age: The age of this ExpressRouteCircuitArpTable.
        :type age: int
        """

        self._age = age

    @property
    def interface(self):
        """Gets the interface of this ExpressRouteCircuitArpTable.

        Interface address.

        :return: The interface of this ExpressRouteCircuitArpTable.
        :rtype: str
        """
        return self._interface

    @interface.setter
    def interface(self, interface):
        """Sets the interface of this ExpressRouteCircuitArpTable.

        Interface address.

        :param interface: The interface of this ExpressRouteCircuitArpTable.
        :type interface: str
        """

        self._interface = interface

    @property
    def ip_address(self):
        """Gets the ip_address of this ExpressRouteCircuitArpTable.

        The IP address.

        :return: The ip_address of this ExpressRouteCircuitArpTable.
        :rtype: str
        """
        return self._ip_address

    @ip_address.setter
    def ip_address(self, ip_address):
        """Sets the ip_address of this ExpressRouteCircuitArpTable.

        The IP address.

        :param ip_address: The ip_address of this ExpressRouteCircuitArpTable.
        :type ip_address: str
        """

        self._ip_address = ip_address

    @property
    def mac_address(self):
        """Gets the mac_address of this ExpressRouteCircuitArpTable.

        The MAC address.

        :return: The mac_address of this ExpressRouteCircuitArpTable.
        :rtype: str
        """
        return self._mac_address

    @mac_address.setter
    def mac_address(self, mac_address):
        """Sets the mac_address of this ExpressRouteCircuitArpTable.

        The MAC address.

        :param mac_address: The mac_address of this ExpressRouteCircuitArpTable.
        :type mac_address: str
        """

        self._mac_address = mac_address
