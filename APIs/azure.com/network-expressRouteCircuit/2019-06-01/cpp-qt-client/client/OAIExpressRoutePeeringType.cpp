/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-06-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIExpressRoutePeeringType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIExpressRoutePeeringType::OAIExpressRoutePeeringType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIExpressRoutePeeringType::OAIExpressRoutePeeringType() {
    this->initializeModel();
}

OAIExpressRoutePeeringType::~OAIExpressRoutePeeringType() {}

void OAIExpressRoutePeeringType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIExpressRoutePeeringType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIExpressRoutePeeringType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("AzurePublicPeering", Qt::CaseInsensitive) == 0) {
        m_value = eOAIExpressRoutePeeringType::AZUREPUBLICPEERING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("AzurePrivatePeering", Qt::CaseInsensitive) == 0) {
        m_value = eOAIExpressRoutePeeringType::AZUREPRIVATEPEERING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("MicrosoftPeering", Qt::CaseInsensitive) == 0) {
        m_value = eOAIExpressRoutePeeringType::MICROSOFTPEERING;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIExpressRoutePeeringType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIExpressRoutePeeringType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIExpressRoutePeeringType::AZUREPUBLICPEERING:
            val = "AzurePublicPeering";
            break;
        case eOAIExpressRoutePeeringType::AZUREPRIVATEPEERING:
            val = "AzurePrivatePeering";
            break;
        case eOAIExpressRoutePeeringType::MICROSOFTPEERING:
            val = "MicrosoftPeering";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIExpressRoutePeeringType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIExpressRoutePeeringType::eOAIExpressRoutePeeringType OAIExpressRoutePeeringType::getValue() const {
    return m_value;
}

void OAIExpressRoutePeeringType::setValue(const OAIExpressRoutePeeringType::eOAIExpressRoutePeeringType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIExpressRoutePeeringType::isSet() const {
    
    return m_value_isSet;
}

bool OAIExpressRoutePeeringType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
