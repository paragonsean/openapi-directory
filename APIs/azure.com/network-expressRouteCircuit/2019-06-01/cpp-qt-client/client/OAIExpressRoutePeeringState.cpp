/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-06-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIExpressRoutePeeringState.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIExpressRoutePeeringState::OAIExpressRoutePeeringState(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIExpressRoutePeeringState::OAIExpressRoutePeeringState() {
    this->initializeModel();
}

OAIExpressRoutePeeringState::~OAIExpressRoutePeeringState() {}

void OAIExpressRoutePeeringState::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIExpressRoutePeeringState::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIExpressRoutePeeringState::fromJson(QString jsonString) {
    
    if ( jsonString.compare("Disabled", Qt::CaseInsensitive) == 0) {
        m_value = eOAIExpressRoutePeeringState::DISABLED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Enabled", Qt::CaseInsensitive) == 0) {
        m_value = eOAIExpressRoutePeeringState::ENABLED;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIExpressRoutePeeringState::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIExpressRoutePeeringState::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIExpressRoutePeeringState::DISABLED:
            val = "Disabled";
            break;
        case eOAIExpressRoutePeeringState::ENABLED:
            val = "Enabled";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIExpressRoutePeeringState::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIExpressRoutePeeringState::eOAIExpressRoutePeeringState OAIExpressRoutePeeringState::getValue() const {
    return m_value;
}

void OAIExpressRoutePeeringState::setValue(const OAIExpressRoutePeeringState::eOAIExpressRoutePeeringState& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIExpressRoutePeeringState::isSet() const {
    
    return m_value_isSet;
}

bool OAIExpressRoutePeeringState::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
