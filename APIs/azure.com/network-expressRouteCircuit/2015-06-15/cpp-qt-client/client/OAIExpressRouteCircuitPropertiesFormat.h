/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2015-06-15
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIExpressRouteCircuitPropertiesFormat.h
 *
 * Properties of ExpressRouteCircuit.
 */

#ifndef OAIExpressRouteCircuitPropertiesFormat_H
#define OAIExpressRouteCircuitPropertiesFormat_H

#include <QJsonObject>

#include "OAIExpressRouteCircuitAuthorization.h"
#include "OAIExpressRouteCircuitPeering.h"
#include "OAIExpressRouteCircuitServiceProviderProperties.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIExpressRouteCircuitAuthorization;
class OAIExpressRouteCircuitPeering;
class OAIExpressRouteCircuitServiceProviderProperties;

class OAIExpressRouteCircuitPropertiesFormat : public OAIObject {
public:
    OAIExpressRouteCircuitPropertiesFormat();
    OAIExpressRouteCircuitPropertiesFormat(QString json);
    ~OAIExpressRouteCircuitPropertiesFormat() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIExpressRouteCircuitAuthorization> getAuthorizations() const;
    void setAuthorizations(const QList<OAIExpressRouteCircuitAuthorization> &authorizations);
    bool is_authorizations_Set() const;
    bool is_authorizations_Valid() const;

    QString getCircuitProvisioningState() const;
    void setCircuitProvisioningState(const QString &circuit_provisioning_state);
    bool is_circuit_provisioning_state_Set() const;
    bool is_circuit_provisioning_state_Valid() const;

    QList<OAIExpressRouteCircuitPeering> getPeerings() const;
    void setPeerings(const QList<OAIExpressRouteCircuitPeering> &peerings);
    bool is_peerings_Set() const;
    bool is_peerings_Valid() const;

    QString getProvisioningState() const;
    void setProvisioningState(const QString &provisioning_state);
    bool is_provisioning_state_Set() const;
    bool is_provisioning_state_Valid() const;

    QString getServiceKey() const;
    void setServiceKey(const QString &service_key);
    bool is_service_key_Set() const;
    bool is_service_key_Valid() const;

    QString getServiceProviderNotes() const;
    void setServiceProviderNotes(const QString &service_provider_notes);
    bool is_service_provider_notes_Set() const;
    bool is_service_provider_notes_Valid() const;

    OAIExpressRouteCircuitServiceProviderProperties getServiceProviderProperties() const;
    void setServiceProviderProperties(const OAIExpressRouteCircuitServiceProviderProperties &service_provider_properties);
    bool is_service_provider_properties_Set() const;
    bool is_service_provider_properties_Valid() const;

    QString getServiceProviderProvisioningState() const;
    void setServiceProviderProvisioningState(const QString &service_provider_provisioning_state);
    bool is_service_provider_provisioning_state_Set() const;
    bool is_service_provider_provisioning_state_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIExpressRouteCircuitAuthorization> m_authorizations;
    bool m_authorizations_isSet;
    bool m_authorizations_isValid;

    QString m_circuit_provisioning_state;
    bool m_circuit_provisioning_state_isSet;
    bool m_circuit_provisioning_state_isValid;

    QList<OAIExpressRouteCircuitPeering> m_peerings;
    bool m_peerings_isSet;
    bool m_peerings_isValid;

    QString m_provisioning_state;
    bool m_provisioning_state_isSet;
    bool m_provisioning_state_isValid;

    QString m_service_key;
    bool m_service_key_isSet;
    bool m_service_key_isValid;

    QString m_service_provider_notes;
    bool m_service_provider_notes_isSet;
    bool m_service_provider_notes_isValid;

    OAIExpressRouteCircuitServiceProviderProperties m_service_provider_properties;
    bool m_service_provider_properties_isSet;
    bool m_service_provider_properties_isValid;

    QString m_service_provider_provisioning_state;
    bool m_service_provider_provisioning_state_isSet;
    bool m_service_provider_provisioning_state_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIExpressRouteCircuitPropertiesFormat)

#endif // OAIExpressRouteCircuitPropertiesFormat_H
