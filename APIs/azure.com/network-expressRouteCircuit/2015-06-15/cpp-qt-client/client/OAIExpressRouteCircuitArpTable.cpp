/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2015-06-15
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIExpressRouteCircuitArpTable.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIExpressRouteCircuitArpTable::OAIExpressRouteCircuitArpTable(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIExpressRouteCircuitArpTable::OAIExpressRouteCircuitArpTable() {
    this->initializeModel();
}

OAIExpressRouteCircuitArpTable::~OAIExpressRouteCircuitArpTable() {}

void OAIExpressRouteCircuitArpTable::initializeModel() {

    m_ip_address_isSet = false;
    m_ip_address_isValid = false;

    m_mac_address_isSet = false;
    m_mac_address_isValid = false;
}

void OAIExpressRouteCircuitArpTable::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIExpressRouteCircuitArpTable::fromJsonObject(QJsonObject json) {

    m_ip_address_isValid = ::OpenAPI::fromJsonValue(m_ip_address, json[QString("ipAddress")]);
    m_ip_address_isSet = !json[QString("ipAddress")].isNull() && m_ip_address_isValid;

    m_mac_address_isValid = ::OpenAPI::fromJsonValue(m_mac_address, json[QString("macAddress")]);
    m_mac_address_isSet = !json[QString("macAddress")].isNull() && m_mac_address_isValid;
}

QString OAIExpressRouteCircuitArpTable::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIExpressRouteCircuitArpTable::asJsonObject() const {
    QJsonObject obj;
    if (m_ip_address_isSet) {
        obj.insert(QString("ipAddress"), ::OpenAPI::toJsonValue(m_ip_address));
    }
    if (m_mac_address_isSet) {
        obj.insert(QString("macAddress"), ::OpenAPI::toJsonValue(m_mac_address));
    }
    return obj;
}

QString OAIExpressRouteCircuitArpTable::getIpAddress() const {
    return m_ip_address;
}
void OAIExpressRouteCircuitArpTable::setIpAddress(const QString &ip_address) {
    m_ip_address = ip_address;
    m_ip_address_isSet = true;
}

bool OAIExpressRouteCircuitArpTable::is_ip_address_Set() const{
    return m_ip_address_isSet;
}

bool OAIExpressRouteCircuitArpTable::is_ip_address_Valid() const{
    return m_ip_address_isValid;
}

QString OAIExpressRouteCircuitArpTable::getMacAddress() const {
    return m_mac_address;
}
void OAIExpressRouteCircuitArpTable::setMacAddress(const QString &mac_address) {
    m_mac_address = mac_address;
    m_mac_address_isSet = true;
}

bool OAIExpressRouteCircuitArpTable::is_mac_address_Set() const{
    return m_mac_address_isSet;
}

bool OAIExpressRouteCircuitArpTable::is_mac_address_Valid() const{
    return m_mac_address_isValid;
}

bool OAIExpressRouteCircuitArpTable::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_ip_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mac_address_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIExpressRouteCircuitArpTable::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
