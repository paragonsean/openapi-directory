/*
 * Update Management
 * APIs for managing software update configurations.
 *
 * The version of the OpenAPI document: 2017-05-15-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.SoftareUpdateConfigurationRunTasks;
import org.openapitools.client.model.UpdateConfigurationNavigation;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Software update configuration properties.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:29:50.418580-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class SoftwareUpdateConfigurationRunProperties {
  public static final String SERIALIZED_NAME_COMPUTER_COUNT = "computerCount";
  @SerializedName(SERIALIZED_NAME_COMPUTER_COUNT)
  private Integer computerCount;

  public static final String SERIALIZED_NAME_CONFIGURED_DURATION = "configuredDuration";
  @SerializedName(SERIALIZED_NAME_CONFIGURED_DURATION)
  private String configuredDuration;

  public static final String SERIALIZED_NAME_CREATED_BY = "createdBy";
  @SerializedName(SERIALIZED_NAME_CREATED_BY)
  private String createdBy;

  public static final String SERIALIZED_NAME_CREATION_TIME = "creationTime";
  @SerializedName(SERIALIZED_NAME_CREATION_TIME)
  private OffsetDateTime creationTime;

  public static final String SERIALIZED_NAME_END_TIME = "endTime";
  @SerializedName(SERIALIZED_NAME_END_TIME)
  private OffsetDateTime endTime;

  public static final String SERIALIZED_NAME_FAILED_COUNT = "failedCount";
  @SerializedName(SERIALIZED_NAME_FAILED_COUNT)
  private Integer failedCount;

  public static final String SERIALIZED_NAME_LAST_MODIFIED_BY = "lastModifiedBy";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED_BY)
  private String lastModifiedBy;

  public static final String SERIALIZED_NAME_LAST_MODIFIED_TIME = "lastModifiedTime";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED_TIME)
  private OffsetDateTime lastModifiedTime;

  public static final String SERIALIZED_NAME_OS_TYPE = "osType";
  @SerializedName(SERIALIZED_NAME_OS_TYPE)
  private String osType;

  public static final String SERIALIZED_NAME_SOFTWARE_UPDATE_CONFIGURATION = "softwareUpdateConfiguration";
  @SerializedName(SERIALIZED_NAME_SOFTWARE_UPDATE_CONFIGURATION)
  private UpdateConfigurationNavigation softwareUpdateConfiguration;

  public static final String SERIALIZED_NAME_START_TIME = "startTime";
  @SerializedName(SERIALIZED_NAME_START_TIME)
  private OffsetDateTime startTime;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_TASKS = "tasks";
  @SerializedName(SERIALIZED_NAME_TASKS)
  private SoftareUpdateConfigurationRunTasks tasks;

  public SoftwareUpdateConfigurationRunProperties() {
  }

  public SoftwareUpdateConfigurationRunProperties(
     Integer computerCount, 
     String configuredDuration, 
     String createdBy, 
     OffsetDateTime creationTime, 
     OffsetDateTime endTime, 
     Integer failedCount, 
     String lastModifiedBy, 
     OffsetDateTime lastModifiedTime, 
     String osType, 
     OffsetDateTime startTime, 
     String status
  ) {
    this();
    this.computerCount = computerCount;
    this.configuredDuration = configuredDuration;
    this.createdBy = createdBy;
    this.creationTime = creationTime;
    this.endTime = endTime;
    this.failedCount = failedCount;
    this.lastModifiedBy = lastModifiedBy;
    this.lastModifiedTime = lastModifiedTime;
    this.osType = osType;
    this.startTime = startTime;
    this.status = status;
  }

  /**
   * Number of computers in the software update configuration run.
   * @return computerCount
   */
  @javax.annotation.Nullable
  public Integer getComputerCount() {
    return computerCount;
  }



  /**
   * Configured duration for the software update configuration run.
   * @return configuredDuration
   */
  @javax.annotation.Nullable
  public String getConfiguredDuration() {
    return configuredDuration;
  }



  /**
   * CreatedBy property, which only appears in the response.
   * @return createdBy
   */
  @javax.annotation.Nullable
  public String getCreatedBy() {
    return createdBy;
  }



  /**
   * Creation time of the resource, which only appears in the response.
   * @return creationTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreationTime() {
    return creationTime;
  }



  /**
   * End time of the software update configuration run.
   * @return endTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getEndTime() {
    return endTime;
  }



  /**
   * Number of computers with failed status.
   * @return failedCount
   */
  @javax.annotation.Nullable
  public Integer getFailedCount() {
    return failedCount;
  }



  /**
   * LastModifiedBy property, which only appears in the response.
   * @return lastModifiedBy
   */
  @javax.annotation.Nullable
  public String getLastModifiedBy() {
    return lastModifiedBy;
  }



  /**
   * Last time resource was modified, which only appears in the response.
   * @return lastModifiedTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastModifiedTime() {
    return lastModifiedTime;
  }



  /**
   * Operating system target of the software update configuration triggered this run
   * @return osType
   */
  @javax.annotation.Nullable
  public String getOsType() {
    return osType;
  }



  public SoftwareUpdateConfigurationRunProperties softwareUpdateConfiguration(UpdateConfigurationNavigation softwareUpdateConfiguration) {
    this.softwareUpdateConfiguration = softwareUpdateConfiguration;
    return this;
  }

  /**
   * Get softwareUpdateConfiguration
   * @return softwareUpdateConfiguration
   */
  @javax.annotation.Nullable
  public UpdateConfigurationNavigation getSoftwareUpdateConfiguration() {
    return softwareUpdateConfiguration;
  }

  public void setSoftwareUpdateConfiguration(UpdateConfigurationNavigation softwareUpdateConfiguration) {
    this.softwareUpdateConfiguration = softwareUpdateConfiguration;
  }


  /**
   * Start time of the software update configuration run.
   * @return startTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getStartTime() {
    return startTime;
  }



  /**
   * Status of the software update configuration run.
   * @return status
   */
  @javax.annotation.Nullable
  public String getStatus() {
    return status;
  }



  public SoftwareUpdateConfigurationRunProperties tasks(SoftareUpdateConfigurationRunTasks tasks) {
    this.tasks = tasks;
    return this;
  }

  /**
   * Get tasks
   * @return tasks
   */
  @javax.annotation.Nullable
  public SoftareUpdateConfigurationRunTasks getTasks() {
    return tasks;
  }

  public void setTasks(SoftareUpdateConfigurationRunTasks tasks) {
    this.tasks = tasks;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SoftwareUpdateConfigurationRunProperties softwareUpdateConfigurationRunProperties = (SoftwareUpdateConfigurationRunProperties) o;
    return Objects.equals(this.computerCount, softwareUpdateConfigurationRunProperties.computerCount) &&
        Objects.equals(this.configuredDuration, softwareUpdateConfigurationRunProperties.configuredDuration) &&
        Objects.equals(this.createdBy, softwareUpdateConfigurationRunProperties.createdBy) &&
        Objects.equals(this.creationTime, softwareUpdateConfigurationRunProperties.creationTime) &&
        Objects.equals(this.endTime, softwareUpdateConfigurationRunProperties.endTime) &&
        Objects.equals(this.failedCount, softwareUpdateConfigurationRunProperties.failedCount) &&
        Objects.equals(this.lastModifiedBy, softwareUpdateConfigurationRunProperties.lastModifiedBy) &&
        Objects.equals(this.lastModifiedTime, softwareUpdateConfigurationRunProperties.lastModifiedTime) &&
        Objects.equals(this.osType, softwareUpdateConfigurationRunProperties.osType) &&
        Objects.equals(this.softwareUpdateConfiguration, softwareUpdateConfigurationRunProperties.softwareUpdateConfiguration) &&
        Objects.equals(this.startTime, softwareUpdateConfigurationRunProperties.startTime) &&
        Objects.equals(this.status, softwareUpdateConfigurationRunProperties.status) &&
        Objects.equals(this.tasks, softwareUpdateConfigurationRunProperties.tasks);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(computerCount, configuredDuration, createdBy, creationTime, endTime, failedCount, lastModifiedBy, lastModifiedTime, osType, softwareUpdateConfiguration, startTime, status, tasks);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SoftwareUpdateConfigurationRunProperties {\n");
    sb.append("    computerCount: ").append(toIndentedString(computerCount)).append("\n");
    sb.append("    configuredDuration: ").append(toIndentedString(configuredDuration)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    creationTime: ").append(toIndentedString(creationTime)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    failedCount: ").append(toIndentedString(failedCount)).append("\n");
    sb.append("    lastModifiedBy: ").append(toIndentedString(lastModifiedBy)).append("\n");
    sb.append("    lastModifiedTime: ").append(toIndentedString(lastModifiedTime)).append("\n");
    sb.append("    osType: ").append(toIndentedString(osType)).append("\n");
    sb.append("    softwareUpdateConfiguration: ").append(toIndentedString(softwareUpdateConfiguration)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    tasks: ").append(toIndentedString(tasks)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("computerCount");
    openapiFields.add("configuredDuration");
    openapiFields.add("createdBy");
    openapiFields.add("creationTime");
    openapiFields.add("endTime");
    openapiFields.add("failedCount");
    openapiFields.add("lastModifiedBy");
    openapiFields.add("lastModifiedTime");
    openapiFields.add("osType");
    openapiFields.add("softwareUpdateConfiguration");
    openapiFields.add("startTime");
    openapiFields.add("status");
    openapiFields.add("tasks");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to SoftwareUpdateConfigurationRunProperties
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!SoftwareUpdateConfigurationRunProperties.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SoftwareUpdateConfigurationRunProperties is not found in the empty JSON string", SoftwareUpdateConfigurationRunProperties.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!SoftwareUpdateConfigurationRunProperties.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SoftwareUpdateConfigurationRunProperties` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("configuredDuration") != null && !jsonObj.get("configuredDuration").isJsonNull()) && !jsonObj.get("configuredDuration").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `configuredDuration` to be a primitive type in the JSON string but got `%s`", jsonObj.get("configuredDuration").toString()));
      }
      if ((jsonObj.get("createdBy") != null && !jsonObj.get("createdBy").isJsonNull()) && !jsonObj.get("createdBy").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createdBy` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createdBy").toString()));
      }
      if ((jsonObj.get("lastModifiedBy") != null && !jsonObj.get("lastModifiedBy").isJsonNull()) && !jsonObj.get("lastModifiedBy").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastModifiedBy` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastModifiedBy").toString()));
      }
      if ((jsonObj.get("osType") != null && !jsonObj.get("osType").isJsonNull()) && !jsonObj.get("osType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `osType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("osType").toString()));
      }
      // validate the optional field `softwareUpdateConfiguration`
      if (jsonObj.get("softwareUpdateConfiguration") != null && !jsonObj.get("softwareUpdateConfiguration").isJsonNull()) {
        UpdateConfigurationNavigation.validateJsonElement(jsonObj.get("softwareUpdateConfiguration"));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      // validate the optional field `tasks`
      if (jsonObj.get("tasks") != null && !jsonObj.get("tasks").isJsonNull()) {
        SoftareUpdateConfigurationRunTasks.validateJsonElement(jsonObj.get("tasks"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SoftwareUpdateConfigurationRunProperties.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SoftwareUpdateConfigurationRunProperties' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SoftwareUpdateConfigurationRunProperties> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SoftwareUpdateConfigurationRunProperties.class));

       return (TypeAdapter<T>) new TypeAdapter<SoftwareUpdateConfigurationRunProperties>() {
           @Override
           public void write(JsonWriter out, SoftwareUpdateConfigurationRunProperties value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SoftwareUpdateConfigurationRunProperties read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of SoftwareUpdateConfigurationRunProperties given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of SoftwareUpdateConfigurationRunProperties
   * @throws IOException if the JSON string is invalid with respect to SoftwareUpdateConfigurationRunProperties
   */
  public static SoftwareUpdateConfigurationRunProperties fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SoftwareUpdateConfigurationRunProperties.class);
  }

  /**
   * Convert an instance of SoftwareUpdateConfigurationRunProperties to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

