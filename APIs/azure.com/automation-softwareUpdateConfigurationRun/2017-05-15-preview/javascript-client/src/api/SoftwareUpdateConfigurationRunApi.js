/**
 * Update Management
 * APIs for managing software update configurations.
 *
 * The version of the OpenAPI document: 2017-05-15-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import SoftwareUpdateConfigurationRun from '../model/SoftwareUpdateConfigurationRun';
import SoftwareUpdateConfigurationRunListResult from '../model/SoftwareUpdateConfigurationRunListResult';
import SoftwareUpdateConfigurationRunsListDefaultResponse from '../model/SoftwareUpdateConfigurationRunsListDefaultResponse';

/**
* SoftwareUpdateConfigurationRun service.
* @module api/SoftwareUpdateConfigurationRunApi
* @version 2017-05-15-preview
*/
export default class SoftwareUpdateConfigurationRunApi {

    /**
    * Constructs a new SoftwareUpdateConfigurationRunApi. 
    * @alias module:api/SoftwareUpdateConfigurationRunApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the softwareUpdateConfigurationRunsGetById operation.
     * @callback module:api/SoftwareUpdateConfigurationRunApi~softwareUpdateConfigurationRunsGetByIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SoftwareUpdateConfigurationRun} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a single software update configuration Run by Id.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroupName Name of an Azure Resource group.
     * @param {String} automationAccountName The name of the automation account.
     * @param {String} softwareUpdateConfigurationRunId The Id of the software update configuration run.
     * @param {String} apiVersion Client Api Version.
     * @param {Object} opts Optional parameters
     * @param {String} [clientRequestId] Identifies this specific client request.
     * @param {module:api/SoftwareUpdateConfigurationRunApi~softwareUpdateConfigurationRunsGetByIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SoftwareUpdateConfigurationRun}
     */
    softwareUpdateConfigurationRunsGetById(subscriptionId, resourceGroupName, automationAccountName, softwareUpdateConfigurationRunId, apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling softwareUpdateConfigurationRunsGetById");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling softwareUpdateConfigurationRunsGetById");
      }
      // verify the required parameter 'automationAccountName' is set
      if (automationAccountName === undefined || automationAccountName === null) {
        throw new Error("Missing the required parameter 'automationAccountName' when calling softwareUpdateConfigurationRunsGetById");
      }
      // verify the required parameter 'softwareUpdateConfigurationRunId' is set
      if (softwareUpdateConfigurationRunId === undefined || softwareUpdateConfigurationRunId === null) {
        throw new Error("Missing the required parameter 'softwareUpdateConfigurationRunId' when calling softwareUpdateConfigurationRunsGetById");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling softwareUpdateConfigurationRunsGetById");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'automationAccountName': automationAccountName,
        'softwareUpdateConfigurationRunId': softwareUpdateConfigurationRunId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
        'clientRequestId': opts['clientRequestId']
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = SoftwareUpdateConfigurationRun;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/softwareUpdateConfigurationRuns/{softwareUpdateConfigurationRunId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the softwareUpdateConfigurationRunsList operation.
     * @callback module:api/SoftwareUpdateConfigurationRunApi~softwareUpdateConfigurationRunsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SoftwareUpdateConfigurationRunListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Return list of software update configuration runs
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroupName Name of an Azure Resource group.
     * @param {String} automationAccountName The name of the automation account.
     * @param {String} apiVersion Client Api Version.
     * @param {Object} opts Optional parameters
     * @param {String} [clientRequestId] Identifies this specific client request.
     * @param {String} [filter] The filter to apply on the operation. You can use the following filters: 'properties/osType', 'properties/status', 'properties/startTime', and 'properties/softwareUpdateConfiguration/name'
     * @param {String} [skip] Number of entries you skip before returning results
     * @param {String} [top] Maximum number of entries returned in the results collection
     * @param {module:api/SoftwareUpdateConfigurationRunApi~softwareUpdateConfigurationRunsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SoftwareUpdateConfigurationRunListResult}
     */
    softwareUpdateConfigurationRunsList(subscriptionId, resourceGroupName, automationAccountName, apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling softwareUpdateConfigurationRunsList");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling softwareUpdateConfigurationRunsList");
      }
      // verify the required parameter 'automationAccountName' is set
      if (automationAccountName === undefined || automationAccountName === null) {
        throw new Error("Missing the required parameter 'automationAccountName' when calling softwareUpdateConfigurationRunsList");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling softwareUpdateConfigurationRunsList");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'automationAccountName': automationAccountName
      };
      let queryParams = {
        'api-version': apiVersion,
        '$filter': opts['filter'],
        '$skip': opts['skip'],
        '$top': opts['top']
      };
      let headerParams = {
        'clientRequestId': opts['clientRequestId']
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = SoftwareUpdateConfigurationRunListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/softwareUpdateConfigurationRuns', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
