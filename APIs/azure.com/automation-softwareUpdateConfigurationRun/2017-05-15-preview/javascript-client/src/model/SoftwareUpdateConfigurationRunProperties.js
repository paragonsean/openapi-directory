/**
 * Update Management
 * APIs for managing software update configurations.
 *
 * The version of the OpenAPI document: 2017-05-15-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SoftareUpdateConfigurationRunTasks from './SoftareUpdateConfigurationRunTasks';
import UpdateConfigurationNavigation from './UpdateConfigurationNavigation';

/**
 * The SoftwareUpdateConfigurationRunProperties model module.
 * @module model/SoftwareUpdateConfigurationRunProperties
 * @version 2017-05-15-preview
 */
class SoftwareUpdateConfigurationRunProperties {
    /**
     * Constructs a new <code>SoftwareUpdateConfigurationRunProperties</code>.
     * Software update configuration properties.
     * @alias module:model/SoftwareUpdateConfigurationRunProperties
     */
    constructor() { 
        
        SoftwareUpdateConfigurationRunProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SoftwareUpdateConfigurationRunProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SoftwareUpdateConfigurationRunProperties} obj Optional instance to populate.
     * @return {module:model/SoftwareUpdateConfigurationRunProperties} The populated <code>SoftwareUpdateConfigurationRunProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SoftwareUpdateConfigurationRunProperties();

            if (data.hasOwnProperty('computerCount')) {
                obj['computerCount'] = ApiClient.convertToType(data['computerCount'], 'Number');
            }
            if (data.hasOwnProperty('configuredDuration')) {
                obj['configuredDuration'] = ApiClient.convertToType(data['configuredDuration'], 'String');
            }
            if (data.hasOwnProperty('createdBy')) {
                obj['createdBy'] = ApiClient.convertToType(data['createdBy'], 'String');
            }
            if (data.hasOwnProperty('creationTime')) {
                obj['creationTime'] = ApiClient.convertToType(data['creationTime'], 'Date');
            }
            if (data.hasOwnProperty('endTime')) {
                obj['endTime'] = ApiClient.convertToType(data['endTime'], 'Date');
            }
            if (data.hasOwnProperty('failedCount')) {
                obj['failedCount'] = ApiClient.convertToType(data['failedCount'], 'Number');
            }
            if (data.hasOwnProperty('lastModifiedBy')) {
                obj['lastModifiedBy'] = ApiClient.convertToType(data['lastModifiedBy'], 'String');
            }
            if (data.hasOwnProperty('lastModifiedTime')) {
                obj['lastModifiedTime'] = ApiClient.convertToType(data['lastModifiedTime'], 'Date');
            }
            if (data.hasOwnProperty('osType')) {
                obj['osType'] = ApiClient.convertToType(data['osType'], 'String');
            }
            if (data.hasOwnProperty('softwareUpdateConfiguration')) {
                obj['softwareUpdateConfiguration'] = UpdateConfigurationNavigation.constructFromObject(data['softwareUpdateConfiguration']);
            }
            if (data.hasOwnProperty('startTime')) {
                obj['startTime'] = ApiClient.convertToType(data['startTime'], 'Date');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('tasks')) {
                obj['tasks'] = SoftareUpdateConfigurationRunTasks.constructFromObject(data['tasks']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SoftwareUpdateConfigurationRunProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SoftwareUpdateConfigurationRunProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['configuredDuration'] && !(typeof data['configuredDuration'] === 'string' || data['configuredDuration'] instanceof String)) {
            throw new Error("Expected the field `configuredDuration` to be a primitive type in the JSON string but got " + data['configuredDuration']);
        }
        // ensure the json data is a string
        if (data['createdBy'] && !(typeof data['createdBy'] === 'string' || data['createdBy'] instanceof String)) {
            throw new Error("Expected the field `createdBy` to be a primitive type in the JSON string but got " + data['createdBy']);
        }
        // ensure the json data is a string
        if (data['lastModifiedBy'] && !(typeof data['lastModifiedBy'] === 'string' || data['lastModifiedBy'] instanceof String)) {
            throw new Error("Expected the field `lastModifiedBy` to be a primitive type in the JSON string but got " + data['lastModifiedBy']);
        }
        // ensure the json data is a string
        if (data['osType'] && !(typeof data['osType'] === 'string' || data['osType'] instanceof String)) {
            throw new Error("Expected the field `osType` to be a primitive type in the JSON string but got " + data['osType']);
        }
        // validate the optional field `softwareUpdateConfiguration`
        if (data['softwareUpdateConfiguration']) { // data not null
          UpdateConfigurationNavigation.validateJSON(data['softwareUpdateConfiguration']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // validate the optional field `tasks`
        if (data['tasks']) { // data not null
          SoftareUpdateConfigurationRunTasks.validateJSON(data['tasks']);
        }

        return true;
    }


}



/**
 * Number of computers in the software update configuration run.
 * @member {Number} computerCount
 */
SoftwareUpdateConfigurationRunProperties.prototype['computerCount'] = undefined;

/**
 * Configured duration for the software update configuration run.
 * @member {String} configuredDuration
 */
SoftwareUpdateConfigurationRunProperties.prototype['configuredDuration'] = undefined;

/**
 * CreatedBy property, which only appears in the response.
 * @member {String} createdBy
 */
SoftwareUpdateConfigurationRunProperties.prototype['createdBy'] = undefined;

/**
 * Creation time of the resource, which only appears in the response.
 * @member {Date} creationTime
 */
SoftwareUpdateConfigurationRunProperties.prototype['creationTime'] = undefined;

/**
 * End time of the software update configuration run.
 * @member {Date} endTime
 */
SoftwareUpdateConfigurationRunProperties.prototype['endTime'] = undefined;

/**
 * Number of computers with failed status.
 * @member {Number} failedCount
 */
SoftwareUpdateConfigurationRunProperties.prototype['failedCount'] = undefined;

/**
 * LastModifiedBy property, which only appears in the response.
 * @member {String} lastModifiedBy
 */
SoftwareUpdateConfigurationRunProperties.prototype['lastModifiedBy'] = undefined;

/**
 * Last time resource was modified, which only appears in the response.
 * @member {Date} lastModifiedTime
 */
SoftwareUpdateConfigurationRunProperties.prototype['lastModifiedTime'] = undefined;

/**
 * Operating system target of the software update configuration triggered this run
 * @member {String} osType
 */
SoftwareUpdateConfigurationRunProperties.prototype['osType'] = undefined;

/**
 * @member {module:model/UpdateConfigurationNavigation} softwareUpdateConfiguration
 */
SoftwareUpdateConfigurationRunProperties.prototype['softwareUpdateConfiguration'] = undefined;

/**
 * Start time of the software update configuration run.
 * @member {Date} startTime
 */
SoftwareUpdateConfigurationRunProperties.prototype['startTime'] = undefined;

/**
 * Status of the software update configuration run.
 * @member {String} status
 */
SoftwareUpdateConfigurationRunProperties.prototype['status'] = undefined;

/**
 * @member {module:model/SoftareUpdateConfigurationRunTasks} tasks
 */
SoftwareUpdateConfigurationRunProperties.prototype['tasks'] = undefined;






export default SoftwareUpdateConfigurationRunProperties;

