/**
 * Update Management
 * APIs for managing software update configurations.
 *
 * The version of the OpenAPI document: 2017-05-15-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISoftareUpdateConfigurationRunTaskProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISoftareUpdateConfigurationRunTaskProperties::OAISoftareUpdateConfigurationRunTaskProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISoftareUpdateConfigurationRunTaskProperties::OAISoftareUpdateConfigurationRunTaskProperties() {
    this->initializeModel();
}

OAISoftareUpdateConfigurationRunTaskProperties::~OAISoftareUpdateConfigurationRunTaskProperties() {}

void OAISoftareUpdateConfigurationRunTaskProperties::initializeModel() {

    m_job_id_isSet = false;
    m_job_id_isValid = false;

    m_source_isSet = false;
    m_source_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAISoftareUpdateConfigurationRunTaskProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISoftareUpdateConfigurationRunTaskProperties::fromJsonObject(QJsonObject json) {

    m_job_id_isValid = ::OpenAPI::fromJsonValue(m_job_id, json[QString("jobId")]);
    m_job_id_isSet = !json[QString("jobId")].isNull() && m_job_id_isValid;

    m_source_isValid = ::OpenAPI::fromJsonValue(m_source, json[QString("source")]);
    m_source_isSet = !json[QString("source")].isNull() && m_source_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;
}

QString OAISoftareUpdateConfigurationRunTaskProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISoftareUpdateConfigurationRunTaskProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_job_id_isSet) {
        obj.insert(QString("jobId"), ::OpenAPI::toJsonValue(m_job_id));
    }
    if (m_source_isSet) {
        obj.insert(QString("source"), ::OpenAPI::toJsonValue(m_source));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    return obj;
}

QString OAISoftareUpdateConfigurationRunTaskProperties::getJobId() const {
    return m_job_id;
}
void OAISoftareUpdateConfigurationRunTaskProperties::setJobId(const QString &job_id) {
    m_job_id = job_id;
    m_job_id_isSet = true;
}

bool OAISoftareUpdateConfigurationRunTaskProperties::is_job_id_Set() const{
    return m_job_id_isSet;
}

bool OAISoftareUpdateConfigurationRunTaskProperties::is_job_id_Valid() const{
    return m_job_id_isValid;
}

QString OAISoftareUpdateConfigurationRunTaskProperties::getSource() const {
    return m_source;
}
void OAISoftareUpdateConfigurationRunTaskProperties::setSource(const QString &source) {
    m_source = source;
    m_source_isSet = true;
}

bool OAISoftareUpdateConfigurationRunTaskProperties::is_source_Set() const{
    return m_source_isSet;
}

bool OAISoftareUpdateConfigurationRunTaskProperties::is_source_Valid() const{
    return m_source_isValid;
}

QString OAISoftareUpdateConfigurationRunTaskProperties::getStatus() const {
    return m_status;
}
void OAISoftareUpdateConfigurationRunTaskProperties::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAISoftareUpdateConfigurationRunTaskProperties::is_status_Set() const{
    return m_status_isSet;
}

bool OAISoftareUpdateConfigurationRunTaskProperties::is_status_Valid() const{
    return m_status_isValid;
}

bool OAISoftareUpdateConfigurationRunTaskProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_job_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_source_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISoftareUpdateConfigurationRunTaskProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
