/**
 * PeeringManagementClient
 * APIs to manage Peering resources through the Azure Resource Manager.
 *
 * The version of the OpenAPI document: 2019-08-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DirectPeeringFacility model module.
 * @module model/DirectPeeringFacility
 * @version 2019-08-01-preview
 */
class DirectPeeringFacility {
    /**
     * Constructs a new <code>DirectPeeringFacility</code>.
     * The properties that define a direct peering facility.
     * @alias module:model/DirectPeeringFacility
     */
    constructor() { 
        
        DirectPeeringFacility.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DirectPeeringFacility</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DirectPeeringFacility} obj Optional instance to populate.
     * @return {module:model/DirectPeeringFacility} The populated <code>DirectPeeringFacility</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DirectPeeringFacility();

            if (data.hasOwnProperty('address')) {
                obj['address'] = ApiClient.convertToType(data['address'], 'String');
            }
            if (data.hasOwnProperty('directPeeringType')) {
                obj['directPeeringType'] = ApiClient.convertToType(data['directPeeringType'], 'String');
            }
            if (data.hasOwnProperty('peeringDBFacilityId')) {
                obj['peeringDBFacilityId'] = ApiClient.convertToType(data['peeringDBFacilityId'], 'Number');
            }
            if (data.hasOwnProperty('peeringDBFacilityLink')) {
                obj['peeringDBFacilityLink'] = ApiClient.convertToType(data['peeringDBFacilityLink'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DirectPeeringFacility</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DirectPeeringFacility</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['address'] && !(typeof data['address'] === 'string' || data['address'] instanceof String)) {
            throw new Error("Expected the field `address` to be a primitive type in the JSON string but got " + data['address']);
        }
        // ensure the json data is a string
        if (data['directPeeringType'] && !(typeof data['directPeeringType'] === 'string' || data['directPeeringType'] instanceof String)) {
            throw new Error("Expected the field `directPeeringType` to be a primitive type in the JSON string but got " + data['directPeeringType']);
        }
        // ensure the json data is a string
        if (data['peeringDBFacilityLink'] && !(typeof data['peeringDBFacilityLink'] === 'string' || data['peeringDBFacilityLink'] instanceof String)) {
            throw new Error("Expected the field `peeringDBFacilityLink` to be a primitive type in the JSON string but got " + data['peeringDBFacilityLink']);
        }

        return true;
    }


}



/**
 * The address of the direct peering facility.
 * @member {String} address
 */
DirectPeeringFacility.prototype['address'] = undefined;

/**
 * The type of the direct peering.
 * @member {module:model/DirectPeeringFacility.DirectPeeringTypeEnum} directPeeringType
 */
DirectPeeringFacility.prototype['directPeeringType'] = undefined;

/**
 * The PeeringDB.com ID of the facility.
 * @member {Number} peeringDBFacilityId
 */
DirectPeeringFacility.prototype['peeringDBFacilityId'] = undefined;

/**
 * The PeeringDB.com URL of the facility.
 * @member {String} peeringDBFacilityLink
 */
DirectPeeringFacility.prototype['peeringDBFacilityLink'] = undefined;





/**
 * Allowed values for the <code>directPeeringType</code> property.
 * @enum {String}
 * @readonly
 */
DirectPeeringFacility['DirectPeeringTypeEnum'] = {

    /**
     * value: "Edge"
     * @const
     */
    "Edge": "Edge",

    /**
     * value: "Transit"
     * @const
     */
    "Transit": "Transit",

    /**
     * value: "Cdn"
     * @const
     */
    "Cdn": "Cdn",

    /**
     * value: "Internal"
     * @const
     */
    "Internal": "Internal"
};



export default DirectPeeringFacility;

