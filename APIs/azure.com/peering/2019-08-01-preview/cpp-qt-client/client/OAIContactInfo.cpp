/**
 * PeeringManagementClient
 * APIs to manage Peering resources through the Azure Resource Manager.
 *
 * The version of the OpenAPI document: 2019-08-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIContactInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIContactInfo::OAIContactInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIContactInfo::OAIContactInfo() {
    this->initializeModel();
}

OAIContactInfo::~OAIContactInfo() {}

void OAIContactInfo::initializeModel() {

    m_emails_isSet = false;
    m_emails_isValid = false;

    m_phone_isSet = false;
    m_phone_isValid = false;
}

void OAIContactInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIContactInfo::fromJsonObject(QJsonObject json) {

    m_emails_isValid = ::OpenAPI::fromJsonValue(m_emails, json[QString("emails")]);
    m_emails_isSet = !json[QString("emails")].isNull() && m_emails_isValid;

    m_phone_isValid = ::OpenAPI::fromJsonValue(m_phone, json[QString("phone")]);
    m_phone_isSet = !json[QString("phone")].isNull() && m_phone_isValid;
}

QString OAIContactInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIContactInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_emails.size() > 0) {
        obj.insert(QString("emails"), ::OpenAPI::toJsonValue(m_emails));
    }
    if (m_phone.size() > 0) {
        obj.insert(QString("phone"), ::OpenAPI::toJsonValue(m_phone));
    }
    return obj;
}

QList<QString> OAIContactInfo::getEmails() const {
    return m_emails;
}
void OAIContactInfo::setEmails(const QList<QString> &emails) {
    m_emails = emails;
    m_emails_isSet = true;
}

bool OAIContactInfo::is_emails_Set() const{
    return m_emails_isSet;
}

bool OAIContactInfo::is_emails_Valid() const{
    return m_emails_isValid;
}

QList<QString> OAIContactInfo::getPhone() const {
    return m_phone;
}
void OAIContactInfo::setPhone(const QList<QString> &phone) {
    m_phone = phone;
    m_phone_isSet = true;
}

bool OAIContactInfo::is_phone_Set() const{
    return m_phone_isSet;
}

bool OAIContactInfo::is_phone_Valid() const{
    return m_phone_isValid;
}

bool OAIContactInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_emails.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_phone.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIContactInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
