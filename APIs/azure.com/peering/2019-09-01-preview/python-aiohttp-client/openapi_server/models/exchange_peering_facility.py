# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ExchangePeeringFacility(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bandwidth_in_mbps: int=None, exchange_name: str=None, facility_ipv4_prefix: str=None, facility_ipv6_prefix: str=None, microsoft_ipv4_address: str=None, microsoft_ipv6_address: str=None, peering_db_facility_id: int=None, peering_db_facility_link: str=None):
        """ExchangePeeringFacility - a model defined in OpenAPI

        :param bandwidth_in_mbps: The bandwidth_in_mbps of this ExchangePeeringFacility.
        :param exchange_name: The exchange_name of this ExchangePeeringFacility.
        :param facility_ipv4_prefix: The facility_ipv4_prefix of this ExchangePeeringFacility.
        :param facility_ipv6_prefix: The facility_ipv6_prefix of this ExchangePeeringFacility.
        :param microsoft_ipv4_address: The microsoft_ipv4_address of this ExchangePeeringFacility.
        :param microsoft_ipv6_address: The microsoft_ipv6_address of this ExchangePeeringFacility.
        :param peering_db_facility_id: The peering_db_facility_id of this ExchangePeeringFacility.
        :param peering_db_facility_link: The peering_db_facility_link of this ExchangePeeringFacility.
        """
        self.openapi_types = {
            'bandwidth_in_mbps': int,
            'exchange_name': str,
            'facility_ipv4_prefix': str,
            'facility_ipv6_prefix': str,
            'microsoft_ipv4_address': str,
            'microsoft_ipv6_address': str,
            'peering_db_facility_id': int,
            'peering_db_facility_link': str
        }

        self.attribute_map = {
            'bandwidth_in_mbps': 'bandwidthInMbps',
            'exchange_name': 'exchangeName',
            'facility_ipv4_prefix': 'facilityIPv4Prefix',
            'facility_ipv6_prefix': 'facilityIPv6Prefix',
            'microsoft_ipv4_address': 'microsoftIPv4Address',
            'microsoft_ipv6_address': 'microsoftIPv6Address',
            'peering_db_facility_id': 'peeringDBFacilityId',
            'peering_db_facility_link': 'peeringDBFacilityLink'
        }

        self._bandwidth_in_mbps = bandwidth_in_mbps
        self._exchange_name = exchange_name
        self._facility_ipv4_prefix = facility_ipv4_prefix
        self._facility_ipv6_prefix = facility_ipv6_prefix
        self._microsoft_ipv4_address = microsoft_ipv4_address
        self._microsoft_ipv6_address = microsoft_ipv6_address
        self._peering_db_facility_id = peering_db_facility_id
        self._peering_db_facility_link = peering_db_facility_link

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ExchangePeeringFacility':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ExchangePeeringFacility of this ExchangePeeringFacility.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bandwidth_in_mbps(self):
        """Gets the bandwidth_in_mbps of this ExchangePeeringFacility.

        The bandwidth of the connection between Microsoft and the exchange peering facility.

        :return: The bandwidth_in_mbps of this ExchangePeeringFacility.
        :rtype: int
        """
        return self._bandwidth_in_mbps

    @bandwidth_in_mbps.setter
    def bandwidth_in_mbps(self, bandwidth_in_mbps):
        """Sets the bandwidth_in_mbps of this ExchangePeeringFacility.

        The bandwidth of the connection between Microsoft and the exchange peering facility.

        :param bandwidth_in_mbps: The bandwidth_in_mbps of this ExchangePeeringFacility.
        :type bandwidth_in_mbps: int
        """

        self._bandwidth_in_mbps = bandwidth_in_mbps

    @property
    def exchange_name(self):
        """Gets the exchange_name of this ExchangePeeringFacility.

        The name of the exchange peering facility.

        :return: The exchange_name of this ExchangePeeringFacility.
        :rtype: str
        """
        return self._exchange_name

    @exchange_name.setter
    def exchange_name(self, exchange_name):
        """Sets the exchange_name of this ExchangePeeringFacility.

        The name of the exchange peering facility.

        :param exchange_name: The exchange_name of this ExchangePeeringFacility.
        :type exchange_name: str
        """

        self._exchange_name = exchange_name

    @property
    def facility_ipv4_prefix(self):
        """Gets the facility_ipv4_prefix of this ExchangePeeringFacility.

        The IPv4 prefixes associated with the exchange peering facility.

        :return: The facility_ipv4_prefix of this ExchangePeeringFacility.
        :rtype: str
        """
        return self._facility_ipv4_prefix

    @facility_ipv4_prefix.setter
    def facility_ipv4_prefix(self, facility_ipv4_prefix):
        """Sets the facility_ipv4_prefix of this ExchangePeeringFacility.

        The IPv4 prefixes associated with the exchange peering facility.

        :param facility_ipv4_prefix: The facility_ipv4_prefix of this ExchangePeeringFacility.
        :type facility_ipv4_prefix: str
        """

        self._facility_ipv4_prefix = facility_ipv4_prefix

    @property
    def facility_ipv6_prefix(self):
        """Gets the facility_ipv6_prefix of this ExchangePeeringFacility.

        The IPv6 prefixes associated with the exchange peering facility.

        :return: The facility_ipv6_prefix of this ExchangePeeringFacility.
        :rtype: str
        """
        return self._facility_ipv6_prefix

    @facility_ipv6_prefix.setter
    def facility_ipv6_prefix(self, facility_ipv6_prefix):
        """Sets the facility_ipv6_prefix of this ExchangePeeringFacility.

        The IPv6 prefixes associated with the exchange peering facility.

        :param facility_ipv6_prefix: The facility_ipv6_prefix of this ExchangePeeringFacility.
        :type facility_ipv6_prefix: str
        """

        self._facility_ipv6_prefix = facility_ipv6_prefix

    @property
    def microsoft_ipv4_address(self):
        """Gets the microsoft_ipv4_address of this ExchangePeeringFacility.

        The IPv4 address of Microsoft at the exchange peering facility.

        :return: The microsoft_ipv4_address of this ExchangePeeringFacility.
        :rtype: str
        """
        return self._microsoft_ipv4_address

    @microsoft_ipv4_address.setter
    def microsoft_ipv4_address(self, microsoft_ipv4_address):
        """Sets the microsoft_ipv4_address of this ExchangePeeringFacility.

        The IPv4 address of Microsoft at the exchange peering facility.

        :param microsoft_ipv4_address: The microsoft_ipv4_address of this ExchangePeeringFacility.
        :type microsoft_ipv4_address: str
        """

        self._microsoft_ipv4_address = microsoft_ipv4_address

    @property
    def microsoft_ipv6_address(self):
        """Gets the microsoft_ipv6_address of this ExchangePeeringFacility.

        The IPv6 address of Microsoft at the exchange peering facility.

        :return: The microsoft_ipv6_address of this ExchangePeeringFacility.
        :rtype: str
        """
        return self._microsoft_ipv6_address

    @microsoft_ipv6_address.setter
    def microsoft_ipv6_address(self, microsoft_ipv6_address):
        """Sets the microsoft_ipv6_address of this ExchangePeeringFacility.

        The IPv6 address of Microsoft at the exchange peering facility.

        :param microsoft_ipv6_address: The microsoft_ipv6_address of this ExchangePeeringFacility.
        :type microsoft_ipv6_address: str
        """

        self._microsoft_ipv6_address = microsoft_ipv6_address

    @property
    def peering_db_facility_id(self):
        """Gets the peering_db_facility_id of this ExchangePeeringFacility.

        The PeeringDB.com ID of the facility.

        :return: The peering_db_facility_id of this ExchangePeeringFacility.
        :rtype: int
        """
        return self._peering_db_facility_id

    @peering_db_facility_id.setter
    def peering_db_facility_id(self, peering_db_facility_id):
        """Sets the peering_db_facility_id of this ExchangePeeringFacility.

        The PeeringDB.com ID of the facility.

        :param peering_db_facility_id: The peering_db_facility_id of this ExchangePeeringFacility.
        :type peering_db_facility_id: int
        """

        self._peering_db_facility_id = peering_db_facility_id

    @property
    def peering_db_facility_link(self):
        """Gets the peering_db_facility_link of this ExchangePeeringFacility.

        The PeeringDB.com URL of the facility.

        :return: The peering_db_facility_link of this ExchangePeeringFacility.
        :rtype: str
        """
        return self._peering_db_facility_link

    @peering_db_facility_link.setter
    def peering_db_facility_link(self, peering_db_facility_link):
        """Sets the peering_db_facility_link of this ExchangePeeringFacility.

        The PeeringDB.com URL of the facility.

        :param peering_db_facility_link: The peering_db_facility_link of this ExchangePeeringFacility.
        :type peering_db_facility_link: str
        """

        self._peering_db_facility_link = peering_db_facility_link
