# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.direct_peering_facility import DirectPeeringFacility
from openapi_server.models.peering_bandwidth_offer import PeeringBandwidthOffer
from openapi_server import util


class PeeringLocationPropertiesDirect(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bandwidth_offers: List[PeeringBandwidthOffer]=None, peering_facilities: List[DirectPeeringFacility]=None):
        """PeeringLocationPropertiesDirect - a model defined in OpenAPI

        :param bandwidth_offers: The bandwidth_offers of this PeeringLocationPropertiesDirect.
        :param peering_facilities: The peering_facilities of this PeeringLocationPropertiesDirect.
        """
        self.openapi_types = {
            'bandwidth_offers': List[PeeringBandwidthOffer],
            'peering_facilities': List[DirectPeeringFacility]
        }

        self.attribute_map = {
            'bandwidth_offers': 'bandwidthOffers',
            'peering_facilities': 'peeringFacilities'
        }

        self._bandwidth_offers = bandwidth_offers
        self._peering_facilities = peering_facilities

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PeeringLocationPropertiesDirect':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PeeringLocationPropertiesDirect of this PeeringLocationPropertiesDirect.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bandwidth_offers(self):
        """Gets the bandwidth_offers of this PeeringLocationPropertiesDirect.

        The list of bandwidth offers available at the peering location.

        :return: The bandwidth_offers of this PeeringLocationPropertiesDirect.
        :rtype: List[PeeringBandwidthOffer]
        """
        return self._bandwidth_offers

    @bandwidth_offers.setter
    def bandwidth_offers(self, bandwidth_offers):
        """Sets the bandwidth_offers of this PeeringLocationPropertiesDirect.

        The list of bandwidth offers available at the peering location.

        :param bandwidth_offers: The bandwidth_offers of this PeeringLocationPropertiesDirect.
        :type bandwidth_offers: List[PeeringBandwidthOffer]
        """

        self._bandwidth_offers = bandwidth_offers

    @property
    def peering_facilities(self):
        """Gets the peering_facilities of this PeeringLocationPropertiesDirect.

        The list of direct peering facilities at the peering location.

        :return: The peering_facilities of this PeeringLocationPropertiesDirect.
        :rtype: List[DirectPeeringFacility]
        """
        return self._peering_facilities

    @peering_facilities.setter
    def peering_facilities(self, peering_facilities):
        """Sets the peering_facilities of this PeeringLocationPropertiesDirect.

        The list of direct peering facilities at the peering location.

        :param peering_facilities: The peering_facilities of this PeeringLocationPropertiesDirect.
        :type peering_facilities: List[DirectPeeringFacility]
        """

        self._peering_facilities = peering_facilities
