/**
 * PeeringManagementClient
 * APIs to manage Peering resources through the Azure Resource Manager.
 *
 * The version of the OpenAPI document: 2019-07-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPeeringServicePrefixProperties.h
 *
 * The peering service prefix properties class.
 */

#ifndef OAIPeeringServicePrefixProperties_H
#define OAIPeeringServicePrefixProperties_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPeeringServicePrefixProperties : public OAIObject {
public:
    OAIPeeringServicePrefixProperties();
    OAIPeeringServicePrefixProperties(QString json);
    ~OAIPeeringServicePrefixProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getLearnedType() const;
    void setLearnedType(const QString &learned_type);
    bool is_learned_type_Set() const;
    bool is_learned_type_Valid() const;

    QString getPrefix() const;
    void setPrefix(const QString &prefix);
    bool is_prefix_Set() const;
    bool is_prefix_Valid() const;

    QString getPrefixValidationState() const;
    void setPrefixValidationState(const QString &prefix_validation_state);
    bool is_prefix_validation_state_Set() const;
    bool is_prefix_validation_state_Valid() const;

    QString getProvisioningState() const;
    void setProvisioningState(const QString &provisioning_state);
    bool is_provisioning_state_Set() const;
    bool is_provisioning_state_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_learned_type;
    bool m_learned_type_isSet;
    bool m_learned_type_isValid;

    QString m_prefix;
    bool m_prefix_isSet;
    bool m_prefix_isValid;

    QString m_prefix_validation_state;
    bool m_prefix_validation_state_isSet;
    bool m_prefix_validation_state_isValid;

    QString m_provisioning_state;
    bool m_provisioning_state_isSet;
    bool m_provisioning_state_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPeeringServicePrefixProperties)

#endif // OAIPeeringServicePrefixProperties_H
