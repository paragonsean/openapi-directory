/**
 * PeeringManagementClient
 * APIs to manage Peering resources through the Azure Resource Manager.
 *
 * The version of the OpenAPI document: 2019-07-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDirectPeeringFacility.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDirectPeeringFacility::OAIDirectPeeringFacility(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDirectPeeringFacility::OAIDirectPeeringFacility() {
    this->initializeModel();
}

OAIDirectPeeringFacility::~OAIDirectPeeringFacility() {}

void OAIDirectPeeringFacility::initializeModel() {

    m_address_isSet = false;
    m_address_isValid = false;

    m_peering_db_facility_id_isSet = false;
    m_peering_db_facility_id_isValid = false;

    m_peering_db_facility_link_isSet = false;
    m_peering_db_facility_link_isValid = false;
}

void OAIDirectPeeringFacility::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDirectPeeringFacility::fromJsonObject(QJsonObject json) {

    m_address_isValid = ::OpenAPI::fromJsonValue(m_address, json[QString("address")]);
    m_address_isSet = !json[QString("address")].isNull() && m_address_isValid;

    m_peering_db_facility_id_isValid = ::OpenAPI::fromJsonValue(m_peering_db_facility_id, json[QString("peeringDBFacilityId")]);
    m_peering_db_facility_id_isSet = !json[QString("peeringDBFacilityId")].isNull() && m_peering_db_facility_id_isValid;

    m_peering_db_facility_link_isValid = ::OpenAPI::fromJsonValue(m_peering_db_facility_link, json[QString("peeringDBFacilityLink")]);
    m_peering_db_facility_link_isSet = !json[QString("peeringDBFacilityLink")].isNull() && m_peering_db_facility_link_isValid;
}

QString OAIDirectPeeringFacility::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDirectPeeringFacility::asJsonObject() const {
    QJsonObject obj;
    if (m_address_isSet) {
        obj.insert(QString("address"), ::OpenAPI::toJsonValue(m_address));
    }
    if (m_peering_db_facility_id_isSet) {
        obj.insert(QString("peeringDBFacilityId"), ::OpenAPI::toJsonValue(m_peering_db_facility_id));
    }
    if (m_peering_db_facility_link_isSet) {
        obj.insert(QString("peeringDBFacilityLink"), ::OpenAPI::toJsonValue(m_peering_db_facility_link));
    }
    return obj;
}

QString OAIDirectPeeringFacility::getAddress() const {
    return m_address;
}
void OAIDirectPeeringFacility::setAddress(const QString &address) {
    m_address = address;
    m_address_isSet = true;
}

bool OAIDirectPeeringFacility::is_address_Set() const{
    return m_address_isSet;
}

bool OAIDirectPeeringFacility::is_address_Valid() const{
    return m_address_isValid;
}

qint32 OAIDirectPeeringFacility::getPeeringDbFacilityId() const {
    return m_peering_db_facility_id;
}
void OAIDirectPeeringFacility::setPeeringDbFacilityId(const qint32 &peering_db_facility_id) {
    m_peering_db_facility_id = peering_db_facility_id;
    m_peering_db_facility_id_isSet = true;
}

bool OAIDirectPeeringFacility::is_peering_db_facility_id_Set() const{
    return m_peering_db_facility_id_isSet;
}

bool OAIDirectPeeringFacility::is_peering_db_facility_id_Valid() const{
    return m_peering_db_facility_id_isValid;
}

QString OAIDirectPeeringFacility::getPeeringDbFacilityLink() const {
    return m_peering_db_facility_link;
}
void OAIDirectPeeringFacility::setPeeringDbFacilityLink(const QString &peering_db_facility_link) {
    m_peering_db_facility_link = peering_db_facility_link;
    m_peering_db_facility_link_isSet = true;
}

bool OAIDirectPeeringFacility::is_peering_db_facility_link_Set() const{
    return m_peering_db_facility_link_isSet;
}

bool OAIDirectPeeringFacility::is_peering_db_facility_link_Valid() const{
    return m_peering_db_facility_link_isValid;
}

bool OAIDirectPeeringFacility::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_peering_db_facility_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_peering_db_facility_link_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDirectPeeringFacility::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
