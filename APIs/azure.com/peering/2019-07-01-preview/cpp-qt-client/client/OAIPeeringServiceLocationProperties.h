/**
 * PeeringManagementClient
 * APIs to manage Peering resources through the Azure Resource Manager.
 *
 * The version of the OpenAPI document: 2019-07-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPeeringServiceLocationProperties.h
 *
 * The properties that define connectivity to the Peering Service Location.
 */

#ifndef OAIPeeringServiceLocationProperties_H
#define OAIPeeringServiceLocationProperties_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPeeringServiceLocationProperties : public OAIObject {
public:
    OAIPeeringServiceLocationProperties();
    OAIPeeringServiceLocationProperties(QString json);
    ~OAIPeeringServiceLocationProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAzureRegion() const;
    void setAzureRegion(const QString &azure_region);
    bool is_azure_region_Set() const;
    bool is_azure_region_Valid() const;

    QString getCountry() const;
    void setCountry(const QString &country);
    bool is_country_Set() const;
    bool is_country_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_azure_region;
    bool m_azure_region_isSet;
    bool m_azure_region_isValid;

    QString m_country;
    bool m_country_isSet;
    bool m_country_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPeeringServiceLocationProperties)

#endif // OAIPeeringServiceLocationProperties_H
