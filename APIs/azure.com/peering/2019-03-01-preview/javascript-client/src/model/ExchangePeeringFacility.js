/**
 * PeeringManagementClient
 * APIs to manage Peering resources through the Azure Resource Manager.
 *
 * The version of the OpenAPI document: 2019-03-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ExchangePeeringFacility model module.
 * @module model/ExchangePeeringFacility
 * @version 2019-03-01-preview
 */
class ExchangePeeringFacility {
    /**
     * Constructs a new <code>ExchangePeeringFacility</code>.
     * The properties that define an exchange peering facility.
     * @alias module:model/ExchangePeeringFacility
     */
    constructor() { 
        
        ExchangePeeringFacility.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ExchangePeeringFacility</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ExchangePeeringFacility} obj Optional instance to populate.
     * @return {module:model/ExchangePeeringFacility} The populated <code>ExchangePeeringFacility</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ExchangePeeringFacility();

            if (data.hasOwnProperty('bandwidthInMbps')) {
                obj['bandwidthInMbps'] = ApiClient.convertToType(data['bandwidthInMbps'], 'Number');
            }
            if (data.hasOwnProperty('exchangeName')) {
                obj['exchangeName'] = ApiClient.convertToType(data['exchangeName'], 'String');
            }
            if (data.hasOwnProperty('facilityIPv4Prefix')) {
                obj['facilityIPv4Prefix'] = ApiClient.convertToType(data['facilityIPv4Prefix'], 'String');
            }
            if (data.hasOwnProperty('facilityIPv6Prefix')) {
                obj['facilityIPv6Prefix'] = ApiClient.convertToType(data['facilityIPv6Prefix'], 'String');
            }
            if (data.hasOwnProperty('microsoftIPv4Address')) {
                obj['microsoftIPv4Address'] = ApiClient.convertToType(data['microsoftIPv4Address'], 'String');
            }
            if (data.hasOwnProperty('microsoftIPv6Address')) {
                obj['microsoftIPv6Address'] = ApiClient.convertToType(data['microsoftIPv6Address'], 'String');
            }
            if (data.hasOwnProperty('peeringDBFacilityId')) {
                obj['peeringDBFacilityId'] = ApiClient.convertToType(data['peeringDBFacilityId'], 'Number');
            }
            if (data.hasOwnProperty('peeringDBFacilityLink')) {
                obj['peeringDBFacilityLink'] = ApiClient.convertToType(data['peeringDBFacilityLink'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ExchangePeeringFacility</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ExchangePeeringFacility</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['exchangeName'] && !(typeof data['exchangeName'] === 'string' || data['exchangeName'] instanceof String)) {
            throw new Error("Expected the field `exchangeName` to be a primitive type in the JSON string but got " + data['exchangeName']);
        }
        // ensure the json data is a string
        if (data['facilityIPv4Prefix'] && !(typeof data['facilityIPv4Prefix'] === 'string' || data['facilityIPv4Prefix'] instanceof String)) {
            throw new Error("Expected the field `facilityIPv4Prefix` to be a primitive type in the JSON string but got " + data['facilityIPv4Prefix']);
        }
        // ensure the json data is a string
        if (data['facilityIPv6Prefix'] && !(typeof data['facilityIPv6Prefix'] === 'string' || data['facilityIPv6Prefix'] instanceof String)) {
            throw new Error("Expected the field `facilityIPv6Prefix` to be a primitive type in the JSON string but got " + data['facilityIPv6Prefix']);
        }
        // ensure the json data is a string
        if (data['microsoftIPv4Address'] && !(typeof data['microsoftIPv4Address'] === 'string' || data['microsoftIPv4Address'] instanceof String)) {
            throw new Error("Expected the field `microsoftIPv4Address` to be a primitive type in the JSON string but got " + data['microsoftIPv4Address']);
        }
        // ensure the json data is a string
        if (data['microsoftIPv6Address'] && !(typeof data['microsoftIPv6Address'] === 'string' || data['microsoftIPv6Address'] instanceof String)) {
            throw new Error("Expected the field `microsoftIPv6Address` to be a primitive type in the JSON string but got " + data['microsoftIPv6Address']);
        }
        // ensure the json data is a string
        if (data['peeringDBFacilityLink'] && !(typeof data['peeringDBFacilityLink'] === 'string' || data['peeringDBFacilityLink'] instanceof String)) {
            throw new Error("Expected the field `peeringDBFacilityLink` to be a primitive type in the JSON string but got " + data['peeringDBFacilityLink']);
        }

        return true;
    }


}



/**
 * The bandwidth of the connection between Microsoft and the exchange peering facility.
 * @member {Number} bandwidthInMbps
 */
ExchangePeeringFacility.prototype['bandwidthInMbps'] = undefined;

/**
 * The name of the exchange peering facility.
 * @member {String} exchangeName
 */
ExchangePeeringFacility.prototype['exchangeName'] = undefined;

/**
 * The IPv4 prefixes associated with the exchange peering facility.
 * @member {String} facilityIPv4Prefix
 */
ExchangePeeringFacility.prototype['facilityIPv4Prefix'] = undefined;

/**
 * The IPv6 prefixes associated with the exchange peering facility.
 * @member {String} facilityIPv6Prefix
 */
ExchangePeeringFacility.prototype['facilityIPv6Prefix'] = undefined;

/**
 * The IPv4 address of Microsoft at the exchange peering facility.
 * @member {String} microsoftIPv4Address
 */
ExchangePeeringFacility.prototype['microsoftIPv4Address'] = undefined;

/**
 * The IPv6 address of Microsoft at the exchange peering facility.
 * @member {String} microsoftIPv6Address
 */
ExchangePeeringFacility.prototype['microsoftIPv6Address'] = undefined;

/**
 * The PeeringDB.com ID of the facility.
 * @member {Number} peeringDBFacilityId
 */
ExchangePeeringFacility.prototype['peeringDBFacilityId'] = undefined;

/**
 * The PeeringDB.com URL of the facility.
 * @member {String} peeringDBFacilityLink
 */
ExchangePeeringFacility.prototype['peeringDBFacilityLink'] = undefined;






export default ExchangePeeringFacility;

