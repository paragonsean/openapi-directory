/**
 * PeeringManagementClient
 * APIs to manage Peering resources through the Azure Resource Manager.
 *
 * The version of the OpenAPI document: 2019-03-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPeeringLocationPropertiesDirect.h
 *
 * The properties that define a direct peering location.
 */

#ifndef OAIPeeringLocationPropertiesDirect_H
#define OAIPeeringLocationPropertiesDirect_H

#include <QJsonObject>

#include "OAIDirectPeeringFacility.h"
#include "OAIPeeringBandwidthOffer.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPeeringBandwidthOffer;
class OAIDirectPeeringFacility;

class OAIPeeringLocationPropertiesDirect : public OAIObject {
public:
    OAIPeeringLocationPropertiesDirect();
    OAIPeeringLocationPropertiesDirect(QString json);
    ~OAIPeeringLocationPropertiesDirect() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIPeeringBandwidthOffer> getBandwidthOffers() const;
    void setBandwidthOffers(const QList<OAIPeeringBandwidthOffer> &bandwidth_offers);
    bool is_bandwidth_offers_Set() const;
    bool is_bandwidth_offers_Valid() const;

    QList<OAIDirectPeeringFacility> getPeeringFacilities() const;
    void setPeeringFacilities(const QList<OAIDirectPeeringFacility> &peering_facilities);
    bool is_peering_facilities_Set() const;
    bool is_peering_facilities_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIPeeringBandwidthOffer> m_bandwidth_offers;
    bool m_bandwidth_offers_isSet;
    bool m_bandwidth_offers_isValid;

    QList<OAIDirectPeeringFacility> m_peering_facilities;
    bool m_peering_facilities_isSet;
    bool m_peering_facilities_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPeeringLocationPropertiesDirect)

#endif // OAIPeeringLocationPropertiesDirect_H
