/**
 * PeeringManagementClient
 * APIs to manage Peering resources through the Azure Resource Manager.
 *
 * The version of the OpenAPI document: 2019-03-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPeeringLocationProperties.h
 *
 * The properties that define a peering location.
 */

#ifndef OAIPeeringLocationProperties_H
#define OAIPeeringLocationProperties_H

#include <QJsonObject>

#include "OAIPeeringLocationPropertiesDirect.h"
#include "OAIPeeringLocationPropertiesExchange.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPeeringLocationPropertiesDirect;
class OAIPeeringLocationPropertiesExchange;

class OAIPeeringLocationProperties : public OAIObject {
public:
    OAIPeeringLocationProperties();
    OAIPeeringLocationProperties(QString json);
    ~OAIPeeringLocationProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAzureRegion() const;
    void setAzureRegion(const QString &azure_region);
    bool is_azure_region_Set() const;
    bool is_azure_region_Valid() const;

    QString getCountry() const;
    void setCountry(const QString &country);
    bool is_country_Set() const;
    bool is_country_Valid() const;

    OAIPeeringLocationPropertiesDirect getDirect() const;
    void setDirect(const OAIPeeringLocationPropertiesDirect &direct);
    bool is_direct_Set() const;
    bool is_direct_Valid() const;

    OAIPeeringLocationPropertiesExchange getExchange() const;
    void setExchange(const OAIPeeringLocationPropertiesExchange &exchange);
    bool is_exchange_Set() const;
    bool is_exchange_Valid() const;

    QString getPeeringLocation() const;
    void setPeeringLocation(const QString &peering_location);
    bool is_peering_location_Set() const;
    bool is_peering_location_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_azure_region;
    bool m_azure_region_isSet;
    bool m_azure_region_isValid;

    QString m_country;
    bool m_country_isSet;
    bool m_country_isValid;

    OAIPeeringLocationPropertiesDirect m_direct;
    bool m_direct_isSet;
    bool m_direct_isValid;

    OAIPeeringLocationPropertiesExchange m_exchange;
    bool m_exchange_isSet;
    bool m_exchange_isValid;

    QString m_peering_location;
    bool m_peering_location_isSet;
    bool m_peering_location_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPeeringLocationProperties)

#endif // OAIPeeringLocationProperties_H
