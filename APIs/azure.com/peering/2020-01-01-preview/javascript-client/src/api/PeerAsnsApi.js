/**
 * PeeringManagementClient
 * APIs to manage Peering resources through the Azure Resource Manager.
 *
 * The version of the OpenAPI document: 2020-01-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErrorResponse from '../model/ErrorResponse';
import PeerAsn from '../model/PeerAsn';
import PeerAsnListResult from '../model/PeerAsnListResult';

/**
* PeerAsns service.
* @module api/PeerAsnsApi
* @version 2020-01-01-preview
*/
export default class PeerAsnsApi {

    /**
    * Constructs a new PeerAsnsApi. 
    * @alias module:api/PeerAsnsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the peerAsnsCreateOrUpdate operation.
     * @callback module:api/PeerAsnsApi~peerAsnsCreateOrUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PeerAsn} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a new peer ASN or updates an existing peer ASN with the specified name under the given subscription.
     * @param {String} peerAsnName The peer ASN name.
     * @param {String} subscriptionId The Azure subscription ID.
     * @param {String} apiVersion The client API version.
     * @param {module:model/PeerAsn} peerAsn The peer ASN.
     * @param {module:api/PeerAsnsApi~peerAsnsCreateOrUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PeerAsn}
     */
    peerAsnsCreateOrUpdate(peerAsnName, subscriptionId, apiVersion, peerAsn, callback) {
      let postBody = peerAsn;
      // verify the required parameter 'peerAsnName' is set
      if (peerAsnName === undefined || peerAsnName === null) {
        throw new Error("Missing the required parameter 'peerAsnName' when calling peerAsnsCreateOrUpdate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling peerAsnsCreateOrUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling peerAsnsCreateOrUpdate");
      }
      // verify the required parameter 'peerAsn' is set
      if (peerAsn === undefined || peerAsn === null) {
        throw new Error("Missing the required parameter 'peerAsn' when calling peerAsnsCreateOrUpdate");
      }

      let pathParams = {
        'peerAsnName': peerAsnName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = PeerAsn;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.Peering/peerAsns/{peerAsnName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the peerAsnsDelete operation.
     * @callback module:api/PeerAsnsApi~peerAsnsDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes an existing peer ASN with the specified name under the given subscription.
     * @param {String} peerAsnName The peer ASN name.
     * @param {String} subscriptionId The Azure subscription ID.
     * @param {String} apiVersion The client API version.
     * @param {module:api/PeerAsnsApi~peerAsnsDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    peerAsnsDelete(peerAsnName, subscriptionId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'peerAsnName' is set
      if (peerAsnName === undefined || peerAsnName === null) {
        throw new Error("Missing the required parameter 'peerAsnName' when calling peerAsnsDelete");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling peerAsnsDelete");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling peerAsnsDelete");
      }

      let pathParams = {
        'peerAsnName': peerAsnName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.Peering/peerAsns/{peerAsnName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the peerAsnsGet operation.
     * @callback module:api/PeerAsnsApi~peerAsnsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PeerAsn} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the peer ASN with the specified name under the given subscription.
     * @param {String} peerAsnName The peer ASN name.
     * @param {String} subscriptionId The Azure subscription ID.
     * @param {String} apiVersion The client API version.
     * @param {module:api/PeerAsnsApi~peerAsnsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PeerAsn}
     */
    peerAsnsGet(peerAsnName, subscriptionId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'peerAsnName' is set
      if (peerAsnName === undefined || peerAsnName === null) {
        throw new Error("Missing the required parameter 'peerAsnName' when calling peerAsnsGet");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling peerAsnsGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling peerAsnsGet");
      }

      let pathParams = {
        'peerAsnName': peerAsnName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PeerAsn;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.Peering/peerAsns/{peerAsnName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the peerAsnsListBySubscription operation.
     * @callback module:api/PeerAsnsApi~peerAsnsListBySubscriptionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PeerAsnListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists all of the peer ASNs under the given subscription.
     * @param {String} subscriptionId The Azure subscription ID.
     * @param {String} apiVersion The client API version.
     * @param {module:api/PeerAsnsApi~peerAsnsListBySubscriptionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PeerAsnListResult}
     */
    peerAsnsListBySubscription(subscriptionId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling peerAsnsListBySubscription");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling peerAsnsListBySubscription");
      }

      let pathParams = {
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PeerAsnListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.Peering/peerAsns', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
