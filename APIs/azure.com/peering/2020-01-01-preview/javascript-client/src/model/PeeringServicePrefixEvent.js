/**
 * PeeringManagementClient
 * APIs to manage Peering resources through the Azure Resource Manager.
 *
 * The version of the OpenAPI document: 2020-01-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PeeringServicePrefixEvent model module.
 * @module model/PeeringServicePrefixEvent
 * @version 2020-01-01-preview
 */
class PeeringServicePrefixEvent {
    /**
     * Constructs a new <code>PeeringServicePrefixEvent</code>.
     * The details of the event associated with a prefix.
     * @alias module:model/PeeringServicePrefixEvent
     */
    constructor() { 
        
        PeeringServicePrefixEvent.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PeeringServicePrefixEvent</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PeeringServicePrefixEvent} obj Optional instance to populate.
     * @return {module:model/PeeringServicePrefixEvent} The populated <code>PeeringServicePrefixEvent</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PeeringServicePrefixEvent();

            if (data.hasOwnProperty('eventDescription')) {
                obj['eventDescription'] = ApiClient.convertToType(data['eventDescription'], 'String');
            }
            if (data.hasOwnProperty('eventLevel')) {
                obj['eventLevel'] = ApiClient.convertToType(data['eventLevel'], 'String');
            }
            if (data.hasOwnProperty('eventSummary')) {
                obj['eventSummary'] = ApiClient.convertToType(data['eventSummary'], 'String');
            }
            if (data.hasOwnProperty('eventTimestamp')) {
                obj['eventTimestamp'] = ApiClient.convertToType(data['eventTimestamp'], 'Date');
            }
            if (data.hasOwnProperty('eventType')) {
                obj['eventType'] = ApiClient.convertToType(data['eventType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PeeringServicePrefixEvent</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PeeringServicePrefixEvent</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['eventDescription'] && !(typeof data['eventDescription'] === 'string' || data['eventDescription'] instanceof String)) {
            throw new Error("Expected the field `eventDescription` to be a primitive type in the JSON string but got " + data['eventDescription']);
        }
        // ensure the json data is a string
        if (data['eventLevel'] && !(typeof data['eventLevel'] === 'string' || data['eventLevel'] instanceof String)) {
            throw new Error("Expected the field `eventLevel` to be a primitive type in the JSON string but got " + data['eventLevel']);
        }
        // ensure the json data is a string
        if (data['eventSummary'] && !(typeof data['eventSummary'] === 'string' || data['eventSummary'] instanceof String)) {
            throw new Error("Expected the field `eventSummary` to be a primitive type in the JSON string but got " + data['eventSummary']);
        }
        // ensure the json data is a string
        if (data['eventType'] && !(typeof data['eventType'] === 'string' || data['eventType'] instanceof String)) {
            throw new Error("Expected the field `eventType` to be a primitive type in the JSON string but got " + data['eventType']);
        }

        return true;
    }


}



/**
 * The description of the event associated with a prefix.
 * @member {String} eventDescription
 */
PeeringServicePrefixEvent.prototype['eventDescription'] = undefined;

/**
 * The level of the event associated with a prefix.
 * @member {String} eventLevel
 */
PeeringServicePrefixEvent.prototype['eventLevel'] = undefined;

/**
 * The summary of the event associated with a prefix.
 * @member {String} eventSummary
 */
PeeringServicePrefixEvent.prototype['eventSummary'] = undefined;

/**
 * The timestamp of the event associated with a prefix.
 * @member {Date} eventTimestamp
 */
PeeringServicePrefixEvent.prototype['eventTimestamp'] = undefined;

/**
 * The type of the event associated with a prefix.
 * @member {String} eventType
 */
PeeringServicePrefixEvent.prototype['eventType'] = undefined;






export default PeeringServicePrefixEvent;

