/*
 * PeeringManagementClient
 * APIs to manage Peering resources through the Azure Resource Manager.
 *
 * The version of the OpenAPI document: 2020-01-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ErrorResponse;
import org.openapitools.client.model.PeerAsn;
import org.openapitools.client.model.PeerAsnListResult;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PeerAsnsApi
 */
@Disabled
public class PeerAsnsApiTest {

    private final PeerAsnsApi api = new PeerAsnsApi();

    /**
     * Creates a new peer ASN or updates an existing peer ASN with the specified name under the given subscription.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void peerAsnsCreateOrUpdateTest() throws ApiException {
        String peerAsnName = null;
        String subscriptionId = null;
        String apiVersion = null;
        PeerAsn peerAsn = null;
        PeerAsn response = api.peerAsnsCreateOrUpdate(peerAsnName, subscriptionId, apiVersion, peerAsn);
        // TODO: test validations
    }

    /**
     * Deletes an existing peer ASN with the specified name under the given subscription.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void peerAsnsDeleteTest() throws ApiException {
        String peerAsnName = null;
        String subscriptionId = null;
        String apiVersion = null;
        api.peerAsnsDelete(peerAsnName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets the peer ASN with the specified name under the given subscription.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void peerAsnsGetTest() throws ApiException {
        String peerAsnName = null;
        String subscriptionId = null;
        String apiVersion = null;
        PeerAsn response = api.peerAsnsGet(peerAsnName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Lists all of the peer ASNs under the given subscription.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void peerAsnsListBySubscriptionTest() throws ApiException {
        String subscriptionId = null;
        String apiVersion = null;
        PeerAsnListResult response = api.peerAsnsListBySubscription(subscriptionId, apiVersion);
        // TODO: test validations
    }

}
