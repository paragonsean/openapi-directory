# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DirectPeeringFacility(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, address: str=None, peering_db_facility_id: int=None, peering_db_facility_link: str=None):
        """DirectPeeringFacility - a model defined in OpenAPI

        :param address: The address of this DirectPeeringFacility.
        :param peering_db_facility_id: The peering_db_facility_id of this DirectPeeringFacility.
        :param peering_db_facility_link: The peering_db_facility_link of this DirectPeeringFacility.
        """
        self.openapi_types = {
            'address': str,
            'peering_db_facility_id': int,
            'peering_db_facility_link': str
        }

        self.attribute_map = {
            'address': 'address',
            'peering_db_facility_id': 'peeringDBFacilityId',
            'peering_db_facility_link': 'peeringDBFacilityLink'
        }

        self._address = address
        self._peering_db_facility_id = peering_db_facility_id
        self._peering_db_facility_link = peering_db_facility_link

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DirectPeeringFacility':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DirectPeeringFacility of this DirectPeeringFacility.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def address(self):
        """Gets the address of this DirectPeeringFacility.

        The address of the direct peering facility.

        :return: The address of this DirectPeeringFacility.
        :rtype: str
        """
        return self._address

    @address.setter
    def address(self, address):
        """Sets the address of this DirectPeeringFacility.

        The address of the direct peering facility.

        :param address: The address of this DirectPeeringFacility.
        :type address: str
        """

        self._address = address

    @property
    def peering_db_facility_id(self):
        """Gets the peering_db_facility_id of this DirectPeeringFacility.

        The PeeringDB.com ID of the facility.

        :return: The peering_db_facility_id of this DirectPeeringFacility.
        :rtype: int
        """
        return self._peering_db_facility_id

    @peering_db_facility_id.setter
    def peering_db_facility_id(self, peering_db_facility_id):
        """Sets the peering_db_facility_id of this DirectPeeringFacility.

        The PeeringDB.com ID of the facility.

        :param peering_db_facility_id: The peering_db_facility_id of this DirectPeeringFacility.
        :type peering_db_facility_id: int
        """

        self._peering_db_facility_id = peering_db_facility_id

    @property
    def peering_db_facility_link(self):
        """Gets the peering_db_facility_link of this DirectPeeringFacility.

        The PeeringDB.com URL of the facility.

        :return: The peering_db_facility_link of this DirectPeeringFacility.
        :rtype: str
        """
        return self._peering_db_facility_link

    @peering_db_facility_link.setter
    def peering_db_facility_link(self, peering_db_facility_link):
        """Sets the peering_db_facility_link of this DirectPeeringFacility.

        The PeeringDB.com URL of the facility.

        :param peering_db_facility_link: The peering_db_facility_link of this DirectPeeringFacility.
        :type peering_db_facility_link: str
        """

        self._peering_db_facility_link = peering_db_facility_link
