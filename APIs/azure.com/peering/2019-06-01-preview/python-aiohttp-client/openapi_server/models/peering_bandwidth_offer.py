# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PeeringBandwidthOffer(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, offer_name: str=None, value_in_mbps: int=None):
        """PeeringBandwidthOffer - a model defined in OpenAPI

        :param offer_name: The offer_name of this PeeringBandwidthOffer.
        :param value_in_mbps: The value_in_mbps of this PeeringBandwidthOffer.
        """
        self.openapi_types = {
            'offer_name': str,
            'value_in_mbps': int
        }

        self.attribute_map = {
            'offer_name': 'offerName',
            'value_in_mbps': 'valueInMbps'
        }

        self._offer_name = offer_name
        self._value_in_mbps = value_in_mbps

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PeeringBandwidthOffer':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PeeringBandwidthOffer of this PeeringBandwidthOffer.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def offer_name(self):
        """Gets the offer_name of this PeeringBandwidthOffer.

        The name of the bandwidth offer.

        :return: The offer_name of this PeeringBandwidthOffer.
        :rtype: str
        """
        return self._offer_name

    @offer_name.setter
    def offer_name(self, offer_name):
        """Sets the offer_name of this PeeringBandwidthOffer.

        The name of the bandwidth offer.

        :param offer_name: The offer_name of this PeeringBandwidthOffer.
        :type offer_name: str
        """

        self._offer_name = offer_name

    @property
    def value_in_mbps(self):
        """Gets the value_in_mbps of this PeeringBandwidthOffer.

        The value of the bandwidth offer in Mbps.

        :return: The value_in_mbps of this PeeringBandwidthOffer.
        :rtype: int
        """
        return self._value_in_mbps

    @value_in_mbps.setter
    def value_in_mbps(self, value_in_mbps):
        """Sets the value_in_mbps of this PeeringBandwidthOffer.

        The value of the bandwidth offer in Mbps.

        :param value_in_mbps: The value_in_mbps of this PeeringBandwidthOffer.
        :type value_in_mbps: int
        """

        self._value_in_mbps = value_in_mbps
