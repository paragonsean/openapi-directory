/**
 * Compute Admin Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2015-12-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Quota from '../model/Quota';
import QuotaList from '../model/QuotaList';

/**
* Quotas service.
* @module api/QuotasApi
* @version 2015-12-01-preview
*/
export default class QuotasApi {

    /**
    * Constructs a new QuotasApi. 
    * @alias module:api/QuotasApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the quotasCreateOrUpdate operation.
     * @callback module:api/QuotasApi~quotasCreateOrUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Quota} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates or Updates a Quota.
     * Creates or Updates a Quota.
     * @param {String} subscriptionId Subscription credentials that uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} location Location of the resource.
     * @param {String} quotaName Name of the quota.
     * @param {String} apiVersion Client API Version.
     * @param {module:model/Quota} newQuota New quota to create.
     * @param {module:api/QuotasApi~quotasCreateOrUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Quota}
     */
    quotasCreateOrUpdate(subscriptionId, location, quotaName, apiVersion, newQuota, callback) {
      let postBody = newQuota;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling quotasCreateOrUpdate");
      }
      // verify the required parameter 'location' is set
      if (location === undefined || location === null) {
        throw new Error("Missing the required parameter 'location' when calling quotasCreateOrUpdate");
      }
      // verify the required parameter 'quotaName' is set
      if (quotaName === undefined || quotaName === null) {
        throw new Error("Missing the required parameter 'quotaName' when calling quotasCreateOrUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling quotasCreateOrUpdate");
      }
      // verify the required parameter 'newQuota' is set
      if (newQuota === undefined || newQuota === null) {
        throw new Error("Missing the required parameter 'newQuota' when calling quotasCreateOrUpdate");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'location': location,
        'quotaName': quotaName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Quota;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.Compute.Admin/locations/{location}/quotas/{quotaName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the quotasDelete operation.
     * @callback module:api/QuotasApi~quotasDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes specified quota
     * Delete an existing quota.
     * @param {String} subscriptionId Subscription credentials that uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} location Location of the resource.
     * @param {String} quotaName Name of the quota.
     * @param {String} apiVersion Client API Version.
     * @param {module:api/QuotasApi~quotasDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    quotasDelete(subscriptionId, location, quotaName, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling quotasDelete");
      }
      // verify the required parameter 'location' is set
      if (location === undefined || location === null) {
        throw new Error("Missing the required parameter 'location' when calling quotasDelete");
      }
      // verify the required parameter 'quotaName' is set
      if (quotaName === undefined || quotaName === null) {
        throw new Error("Missing the required parameter 'quotaName' when calling quotasDelete");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling quotasDelete");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'location': location,
        'quotaName': quotaName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.Compute.Admin/locations/{location}/quotas/{quotaName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the quotasGet operation.
     * @callback module:api/QuotasApi~quotasGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Quota} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns the requested quota.
     * Get an existing Quota.
     * @param {String} subscriptionId Subscription credentials that uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} location Location of the resource.
     * @param {String} quotaName Name of the quota.
     * @param {String} apiVersion Client API Version.
     * @param {module:api/QuotasApi~quotasGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Quota}
     */
    quotasGet(subscriptionId, location, quotaName, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling quotasGet");
      }
      // verify the required parameter 'location' is set
      if (location === undefined || location === null) {
        throw new Error("Missing the required parameter 'location' when calling quotasGet");
      }
      // verify the required parameter 'quotaName' is set
      if (quotaName === undefined || quotaName === null) {
        throw new Error("Missing the required parameter 'quotaName' when calling quotasGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling quotasGet");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'location': location,
        'quotaName': quotaName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Quota;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.Compute.Admin/locations/{location}/quotas/{quotaName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the quotasList operation.
     * @callback module:api/QuotasApi~quotasListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/QuotaList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists all quotas.
     * Get a list of existing quotas.
     * @param {String} subscriptionId Subscription credentials that uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} location Location of the resource.
     * @param {String} apiVersion Client API Version.
     * @param {module:api/QuotasApi~quotasListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/QuotaList}
     */
    quotasList(subscriptionId, location, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling quotasList");
      }
      // verify the required parameter 'location' is set
      if (location === undefined || location === null) {
        throw new Error("Missing the required parameter 'location' when calling quotasList");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling quotasList");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'location': location
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = QuotaList;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.Compute.Admin/locations/{location}/quotas', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
