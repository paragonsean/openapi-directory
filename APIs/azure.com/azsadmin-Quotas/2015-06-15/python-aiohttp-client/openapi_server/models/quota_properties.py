# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.migration_phase import MigrationPhase
from openapi_server import util


class QuotaProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, max_load_balancers_per_subscription: int=None, max_nics_per_subscription: int=None, max_public_ips_per_subscription: int=None, max_security_groups_per_subscription: int=None, max_virtual_network_gateway_connections_per_subscription: int=None, max_virtual_network_gateways_per_subscription: int=None, max_vnets_per_subscription: int=None, migration_phase: MigrationPhase=None, provisioning_state: str=None):
        """QuotaProperties - a model defined in OpenAPI

        :param max_load_balancers_per_subscription: The max_load_balancers_per_subscription of this QuotaProperties.
        :param max_nics_per_subscription: The max_nics_per_subscription of this QuotaProperties.
        :param max_public_ips_per_subscription: The max_public_ips_per_subscription of this QuotaProperties.
        :param max_security_groups_per_subscription: The max_security_groups_per_subscription of this QuotaProperties.
        :param max_virtual_network_gateway_connections_per_subscription: The max_virtual_network_gateway_connections_per_subscription of this QuotaProperties.
        :param max_virtual_network_gateways_per_subscription: The max_virtual_network_gateways_per_subscription of this QuotaProperties.
        :param max_vnets_per_subscription: The max_vnets_per_subscription of this QuotaProperties.
        :param migration_phase: The migration_phase of this QuotaProperties.
        :param provisioning_state: The provisioning_state of this QuotaProperties.
        """
        self.openapi_types = {
            'max_load_balancers_per_subscription': int,
            'max_nics_per_subscription': int,
            'max_public_ips_per_subscription': int,
            'max_security_groups_per_subscription': int,
            'max_virtual_network_gateway_connections_per_subscription': int,
            'max_virtual_network_gateways_per_subscription': int,
            'max_vnets_per_subscription': int,
            'migration_phase': MigrationPhase,
            'provisioning_state': str
        }

        self.attribute_map = {
            'max_load_balancers_per_subscription': 'maxLoadBalancersPerSubscription',
            'max_nics_per_subscription': 'maxNicsPerSubscription',
            'max_public_ips_per_subscription': 'maxPublicIpsPerSubscription',
            'max_security_groups_per_subscription': 'maxSecurityGroupsPerSubscription',
            'max_virtual_network_gateway_connections_per_subscription': 'maxVirtualNetworkGatewayConnectionsPerSubscription',
            'max_virtual_network_gateways_per_subscription': 'maxVirtualNetworkGatewaysPerSubscription',
            'max_vnets_per_subscription': 'maxVnetsPerSubscription',
            'migration_phase': 'migrationPhase',
            'provisioning_state': 'provisioningState'
        }

        self._max_load_balancers_per_subscription = max_load_balancers_per_subscription
        self._max_nics_per_subscription = max_nics_per_subscription
        self._max_public_ips_per_subscription = max_public_ips_per_subscription
        self._max_security_groups_per_subscription = max_security_groups_per_subscription
        self._max_virtual_network_gateway_connections_per_subscription = max_virtual_network_gateway_connections_per_subscription
        self._max_virtual_network_gateways_per_subscription = max_virtual_network_gateways_per_subscription
        self._max_vnets_per_subscription = max_vnets_per_subscription
        self._migration_phase = migration_phase
        self._provisioning_state = provisioning_state

    @classmethod
    def from_dict(cls, dikt: dict) -> 'QuotaProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The QuotaProperties of this QuotaProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def max_load_balancers_per_subscription(self):
        """Gets the max_load_balancers_per_subscription of this QuotaProperties.

        Maximum number of load balancers a tenant subscription can provision.

        :return: The max_load_balancers_per_subscription of this QuotaProperties.
        :rtype: int
        """
        return self._max_load_balancers_per_subscription

    @max_load_balancers_per_subscription.setter
    def max_load_balancers_per_subscription(self, max_load_balancers_per_subscription):
        """Sets the max_load_balancers_per_subscription of this QuotaProperties.

        Maximum number of load balancers a tenant subscription can provision.

        :param max_load_balancers_per_subscription: The max_load_balancers_per_subscription of this QuotaProperties.
        :type max_load_balancers_per_subscription: int
        """

        self._max_load_balancers_per_subscription = max_load_balancers_per_subscription

    @property
    def max_nics_per_subscription(self):
        """Gets the max_nics_per_subscription of this QuotaProperties.

        Maximum number of NICs a tenant subscription can provision.

        :return: The max_nics_per_subscription of this QuotaProperties.
        :rtype: int
        """
        return self._max_nics_per_subscription

    @max_nics_per_subscription.setter
    def max_nics_per_subscription(self, max_nics_per_subscription):
        """Sets the max_nics_per_subscription of this QuotaProperties.

        Maximum number of NICs a tenant subscription can provision.

        :param max_nics_per_subscription: The max_nics_per_subscription of this QuotaProperties.
        :type max_nics_per_subscription: int
        """

        self._max_nics_per_subscription = max_nics_per_subscription

    @property
    def max_public_ips_per_subscription(self):
        """Gets the max_public_ips_per_subscription of this QuotaProperties.

        Maximum number of public IP addresses a tenant subscription can provision.

        :return: The max_public_ips_per_subscription of this QuotaProperties.
        :rtype: int
        """
        return self._max_public_ips_per_subscription

    @max_public_ips_per_subscription.setter
    def max_public_ips_per_subscription(self, max_public_ips_per_subscription):
        """Sets the max_public_ips_per_subscription of this QuotaProperties.

        Maximum number of public IP addresses a tenant subscription can provision.

        :param max_public_ips_per_subscription: The max_public_ips_per_subscription of this QuotaProperties.
        :type max_public_ips_per_subscription: int
        """

        self._max_public_ips_per_subscription = max_public_ips_per_subscription

    @property
    def max_security_groups_per_subscription(self):
        """Gets the max_security_groups_per_subscription of this QuotaProperties.

        Maximum number of security groups a tenant subscription can provision.

        :return: The max_security_groups_per_subscription of this QuotaProperties.
        :rtype: int
        """
        return self._max_security_groups_per_subscription

    @max_security_groups_per_subscription.setter
    def max_security_groups_per_subscription(self, max_security_groups_per_subscription):
        """Sets the max_security_groups_per_subscription of this QuotaProperties.

        Maximum number of security groups a tenant subscription can provision.

        :param max_security_groups_per_subscription: The max_security_groups_per_subscription of this QuotaProperties.
        :type max_security_groups_per_subscription: int
        """

        self._max_security_groups_per_subscription = max_security_groups_per_subscription

    @property
    def max_virtual_network_gateway_connections_per_subscription(self):
        """Gets the max_virtual_network_gateway_connections_per_subscription of this QuotaProperties.

        Maximum number of virtual network gateway Connections a tenant subscription can provision.

        :return: The max_virtual_network_gateway_connections_per_subscription of this QuotaProperties.
        :rtype: int
        """
        return self._max_virtual_network_gateway_connections_per_subscription

    @max_virtual_network_gateway_connections_per_subscription.setter
    def max_virtual_network_gateway_connections_per_subscription(self, max_virtual_network_gateway_connections_per_subscription):
        """Sets the max_virtual_network_gateway_connections_per_subscription of this QuotaProperties.

        Maximum number of virtual network gateway Connections a tenant subscription can provision.

        :param max_virtual_network_gateway_connections_per_subscription: The max_virtual_network_gateway_connections_per_subscription of this QuotaProperties.
        :type max_virtual_network_gateway_connections_per_subscription: int
        """

        self._max_virtual_network_gateway_connections_per_subscription = max_virtual_network_gateway_connections_per_subscription

    @property
    def max_virtual_network_gateways_per_subscription(self):
        """Gets the max_virtual_network_gateways_per_subscription of this QuotaProperties.

        Maximum number of virtual network gateways a tenant subscription can provision.

        :return: The max_virtual_network_gateways_per_subscription of this QuotaProperties.
        :rtype: int
        """
        return self._max_virtual_network_gateways_per_subscription

    @max_virtual_network_gateways_per_subscription.setter
    def max_virtual_network_gateways_per_subscription(self, max_virtual_network_gateways_per_subscription):
        """Sets the max_virtual_network_gateways_per_subscription of this QuotaProperties.

        Maximum number of virtual network gateways a tenant subscription can provision.

        :param max_virtual_network_gateways_per_subscription: The max_virtual_network_gateways_per_subscription of this QuotaProperties.
        :type max_virtual_network_gateways_per_subscription: int
        """

        self._max_virtual_network_gateways_per_subscription = max_virtual_network_gateways_per_subscription

    @property
    def max_vnets_per_subscription(self):
        """Gets the max_vnets_per_subscription of this QuotaProperties.

        Maximum number of virtual networks a tenant subscription can provision.

        :return: The max_vnets_per_subscription of this QuotaProperties.
        :rtype: int
        """
        return self._max_vnets_per_subscription

    @max_vnets_per_subscription.setter
    def max_vnets_per_subscription(self, max_vnets_per_subscription):
        """Sets the max_vnets_per_subscription of this QuotaProperties.

        Maximum number of virtual networks a tenant subscription can provision.

        :param max_vnets_per_subscription: The max_vnets_per_subscription of this QuotaProperties.
        :type max_vnets_per_subscription: int
        """

        self._max_vnets_per_subscription = max_vnets_per_subscription

    @property
    def migration_phase(self):
        """Gets the migration_phase of this QuotaProperties.


        :return: The migration_phase of this QuotaProperties.
        :rtype: MigrationPhase
        """
        return self._migration_phase

    @migration_phase.setter
    def migration_phase(self, migration_phase):
        """Sets the migration_phase of this QuotaProperties.


        :param migration_phase: The migration_phase of this QuotaProperties.
        :type migration_phase: MigrationPhase
        """

        self._migration_phase = migration_phase

    @property
    def provisioning_state(self):
        """Gets the provisioning_state of this QuotaProperties.

        The provisioning state.

        :return: The provisioning_state of this QuotaProperties.
        :rtype: str
        """
        return self._provisioning_state

    @provisioning_state.setter
    def provisioning_state(self, provisioning_state):
        """Sets the provisioning_state of this QuotaProperties.

        The provisioning state.

        :param provisioning_state: The provisioning_state of this QuotaProperties.
        :type provisioning_state: str
        """

        self._provisioning_state = provisioning_state
