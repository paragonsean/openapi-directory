/**
 * AdvisorManagementClient
 * REST APIs for Azure Advisor
 *
 * The version of the OpenAPI document: 2020-01-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIConfigDataProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIConfigDataProperties::OAIConfigDataProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIConfigDataProperties::OAIConfigDataProperties() {
    this->initializeModel();
}

OAIConfigDataProperties::~OAIConfigDataProperties() {}

void OAIConfigDataProperties::initializeModel() {

    m_digests_isSet = false;
    m_digests_isValid = false;

    m_exclude_isSet = false;
    m_exclude_isValid = false;

    m_low_cpu_threshold_isSet = false;
    m_low_cpu_threshold_isValid = false;
}

void OAIConfigDataProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIConfigDataProperties::fromJsonObject(QJsonObject json) {

    m_digests_isValid = ::OpenAPI::fromJsonValue(m_digests, json[QString("digests")]);
    m_digests_isSet = !json[QString("digests")].isNull() && m_digests_isValid;

    m_exclude_isValid = ::OpenAPI::fromJsonValue(m_exclude, json[QString("exclude")]);
    m_exclude_isSet = !json[QString("exclude")].isNull() && m_exclude_isValid;

    m_low_cpu_threshold_isValid = ::OpenAPI::fromJsonValue(m_low_cpu_threshold, json[QString("lowCpuThreshold")]);
    m_low_cpu_threshold_isSet = !json[QString("lowCpuThreshold")].isNull() && m_low_cpu_threshold_isValid;
}

QString OAIConfigDataProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIConfigDataProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_digests.size() > 0) {
        obj.insert(QString("digests"), ::OpenAPI::toJsonValue(m_digests));
    }
    if (m_exclude_isSet) {
        obj.insert(QString("exclude"), ::OpenAPI::toJsonValue(m_exclude));
    }
    if (m_low_cpu_threshold_isSet) {
        obj.insert(QString("lowCpuThreshold"), ::OpenAPI::toJsonValue(m_low_cpu_threshold));
    }
    return obj;
}

QList<OAIDigestConfig> OAIConfigDataProperties::getDigests() const {
    return m_digests;
}
void OAIConfigDataProperties::setDigests(const QList<OAIDigestConfig> &digests) {
    m_digests = digests;
    m_digests_isSet = true;
}

bool OAIConfigDataProperties::is_digests_Set() const{
    return m_digests_isSet;
}

bool OAIConfigDataProperties::is_digests_Valid() const{
    return m_digests_isValid;
}

bool OAIConfigDataProperties::isExclude() const {
    return m_exclude;
}
void OAIConfigDataProperties::setExclude(const bool &exclude) {
    m_exclude = exclude;
    m_exclude_isSet = true;
}

bool OAIConfigDataProperties::is_exclude_Set() const{
    return m_exclude_isSet;
}

bool OAIConfigDataProperties::is_exclude_Valid() const{
    return m_exclude_isValid;
}

QString OAIConfigDataProperties::getLowCpuThreshold() const {
    return m_low_cpu_threshold;
}
void OAIConfigDataProperties::setLowCpuThreshold(const QString &low_cpu_threshold) {
    m_low_cpu_threshold = low_cpu_threshold;
    m_low_cpu_threshold_isSet = true;
}

bool OAIConfigDataProperties::is_low_cpu_threshold_Set() const{
    return m_low_cpu_threshold_isSet;
}

bool OAIConfigDataProperties::is_low_cpu_threshold_Valid() const{
    return m_low_cpu_threshold_isValid;
}

bool OAIConfigDataProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_digests.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_exclude_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_low_cpu_threshold_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIConfigDataProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
