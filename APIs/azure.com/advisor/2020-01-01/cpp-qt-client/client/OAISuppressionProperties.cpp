/**
 * AdvisorManagementClient
 * REST APIs for Azure Advisor
 *
 * The version of the OpenAPI document: 2020-01-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISuppressionProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISuppressionProperties::OAISuppressionProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISuppressionProperties::OAISuppressionProperties() {
    this->initializeModel();
}

OAISuppressionProperties::~OAISuppressionProperties() {}

void OAISuppressionProperties::initializeModel() {

    m_suppression_id_isSet = false;
    m_suppression_id_isValid = false;

    m_ttl_isSet = false;
    m_ttl_isValid = false;
}

void OAISuppressionProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISuppressionProperties::fromJsonObject(QJsonObject json) {

    m_suppression_id_isValid = ::OpenAPI::fromJsonValue(m_suppression_id, json[QString("suppressionId")]);
    m_suppression_id_isSet = !json[QString("suppressionId")].isNull() && m_suppression_id_isValid;

    m_ttl_isValid = ::OpenAPI::fromJsonValue(m_ttl, json[QString("ttl")]);
    m_ttl_isSet = !json[QString("ttl")].isNull() && m_ttl_isValid;
}

QString OAISuppressionProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISuppressionProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_suppression_id_isSet) {
        obj.insert(QString("suppressionId"), ::OpenAPI::toJsonValue(m_suppression_id));
    }
    if (m_ttl_isSet) {
        obj.insert(QString("ttl"), ::OpenAPI::toJsonValue(m_ttl));
    }
    return obj;
}

QString OAISuppressionProperties::getSuppressionId() const {
    return m_suppression_id;
}
void OAISuppressionProperties::setSuppressionId(const QString &suppression_id) {
    m_suppression_id = suppression_id;
    m_suppression_id_isSet = true;
}

bool OAISuppressionProperties::is_suppression_id_Set() const{
    return m_suppression_id_isSet;
}

bool OAISuppressionProperties::is_suppression_id_Valid() const{
    return m_suppression_id_isValid;
}

QString OAISuppressionProperties::getTtl() const {
    return m_ttl;
}
void OAISuppressionProperties::setTtl(const QString &ttl) {
    m_ttl = ttl;
    m_ttl_isSet = true;
}

bool OAISuppressionProperties::is_ttl_Set() const{
    return m_ttl_isSet;
}

bool OAISuppressionProperties::is_ttl_Valid() const{
    return m_ttl_isValid;
}

bool OAISuppressionProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_suppression_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ttl_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISuppressionProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
