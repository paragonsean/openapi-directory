/**
 * AdvisorManagementClient
 * REST APIs for Azure Advisor
 *
 * The version of the OpenAPI document: 2020-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DigestConfig from './DigestConfig';

/**
 * The ConfigDataProperties model module.
 * @module model/ConfigDataProperties
 * @version 2020-01-01
 */
class ConfigDataProperties {
    /**
     * Constructs a new <code>ConfigDataProperties</code>.
     * Configuration data properties
     * @alias module:model/ConfigDataProperties
     */
    constructor() { 
        
        ConfigDataProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ConfigDataProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ConfigDataProperties} obj Optional instance to populate.
     * @return {module:model/ConfigDataProperties} The populated <code>ConfigDataProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ConfigDataProperties();

            if (data.hasOwnProperty('digests')) {
                obj['digests'] = ApiClient.convertToType(data['digests'], [DigestConfig]);
            }
            if (data.hasOwnProperty('exclude')) {
                obj['exclude'] = ApiClient.convertToType(data['exclude'], 'Boolean');
            }
            if (data.hasOwnProperty('lowCpuThreshold')) {
                obj['lowCpuThreshold'] = ApiClient.convertToType(data['lowCpuThreshold'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ConfigDataProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ConfigDataProperties</code>.
     */
    static validateJSON(data) {
        if (data['digests']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['digests'])) {
                throw new Error("Expected the field `digests` to be an array in the JSON data but got " + data['digests']);
            }
            // validate the optional field `digests` (array)
            for (const item of data['digests']) {
                DigestConfig.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['lowCpuThreshold'] && !(typeof data['lowCpuThreshold'] === 'string' || data['lowCpuThreshold'] instanceof String)) {
            throw new Error("Expected the field `lowCpuThreshold` to be a primitive type in the JSON string but got " + data['lowCpuThreshold']);
        }

        return true;
    }


}



/**
 * Advisor digest configuration. Valid only for subscriptions
 * @member {Array.<module:model/DigestConfig>} digests
 */
ConfigDataProperties.prototype['digests'] = undefined;

/**
 * Exclude the resource from Advisor evaluations. Valid values: False (default) or True.
 * @member {Boolean} exclude
 */
ConfigDataProperties.prototype['exclude'] = undefined;

/**
 * Minimum percentage threshold for Advisor low CPU utilization evaluation. Valid only for subscriptions. Valid values: 5 (default), 10, 15 or 20.
 * @member {module:model/ConfigDataProperties.LowCpuThresholdEnum} lowCpuThreshold
 */
ConfigDataProperties.prototype['lowCpuThreshold'] = undefined;





/**
 * Allowed values for the <code>lowCpuThreshold</code> property.
 * @enum {String}
 * @readonly
 */
ConfigDataProperties['LowCpuThresholdEnum'] = {

    /**
     * value: "5"
     * @const
     */
    "5": "5",

    /**
     * value: "10"
     * @const
     */
    "10": "10",

    /**
     * value: "15"
     * @const
     */
    "15": "15",

    /**
     * value: "20"
     * @const
     */
    "20": "20"
};



export default ConfigDataProperties;

