/**
 * AdvisorManagementClient
 * REST APIs for Azure Advisor
 *
 * The version of the OpenAPI document: 2020-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ArmErrorResponse from '../model/ArmErrorResponse';
import ConfigData from '../model/ConfigData';
import ConfigurationListResult from '../model/ConfigurationListResult';

/**
* Configurations service.
* @module api/ConfigurationsApi
* @version 2020-01-01
*/
export default class ConfigurationsApi {

    /**
    * Constructs a new ConfigurationsApi. 
    * @alias module:api/ConfigurationsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the configurationsCreateInResourceGroup operation.
     * @callback module:api/ConfigurationsApi~configurationsCreateInResourceGroupCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ConfigData} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create/Overwrite Azure Advisor configuration.
     * @param {String} apiVersion The version of the API to be used with the client request.
     * @param {String} subscriptionId The Azure subscription ID.
     * @param {module:model/String} configurationName Advisor configuration name. Value must be 'default'
     * @param {String} resourceGroup The name of the Azure resource group.
     * @param {module:model/ConfigData} configContract The Azure Advisor configuration data structure.
     * @param {module:api/ConfigurationsApi~configurationsCreateInResourceGroupCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ConfigData}
     */
    configurationsCreateInResourceGroup(apiVersion, subscriptionId, configurationName, resourceGroup, configContract, callback) {
      let postBody = configContract;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling configurationsCreateInResourceGroup");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling configurationsCreateInResourceGroup");
      }
      // verify the required parameter 'configurationName' is set
      if (configurationName === undefined || configurationName === null) {
        throw new Error("Missing the required parameter 'configurationName' when calling configurationsCreateInResourceGroup");
      }
      // verify the required parameter 'resourceGroup' is set
      if (resourceGroup === undefined || resourceGroup === null) {
        throw new Error("Missing the required parameter 'resourceGroup' when calling configurationsCreateInResourceGroup");
      }
      // verify the required parameter 'configContract' is set
      if (configContract === undefined || configContract === null) {
        throw new Error("Missing the required parameter 'configContract' when calling configurationsCreateInResourceGroup");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'configurationName': configurationName,
        'resourceGroup': resourceGroup
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ConfigData;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Advisor/configurations/{configurationName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the configurationsCreateInSubscription operation.
     * @callback module:api/ConfigurationsApi~configurationsCreateInSubscriptionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ConfigData} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create/Overwrite Azure Advisor configuration.
     * Create/Overwrite Azure Advisor configuration and also delete all configurations of contained resource groups.
     * @param {String} apiVersion The version of the API to be used with the client request.
     * @param {String} subscriptionId The Azure subscription ID.
     * @param {module:model/String} configurationName Advisor configuration name. Value must be 'default'
     * @param {module:model/ConfigData} configContract The Azure Advisor configuration data structure.
     * @param {module:api/ConfigurationsApi~configurationsCreateInSubscriptionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ConfigData}
     */
    configurationsCreateInSubscription(apiVersion, subscriptionId, configurationName, configContract, callback) {
      let postBody = configContract;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling configurationsCreateInSubscription");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling configurationsCreateInSubscription");
      }
      // verify the required parameter 'configurationName' is set
      if (configurationName === undefined || configurationName === null) {
        throw new Error("Missing the required parameter 'configurationName' when calling configurationsCreateInSubscription");
      }
      // verify the required parameter 'configContract' is set
      if (configContract === undefined || configContract === null) {
        throw new Error("Missing the required parameter 'configContract' when calling configurationsCreateInSubscription");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'configurationName': configurationName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ConfigData;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.Advisor/configurations/{configurationName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the configurationsListByResourceGroup operation.
     * @callback module:api/ConfigurationsApi~configurationsListByResourceGroupCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ConfigurationListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve Azure Advisor configurations.
     * @param {String} apiVersion The version of the API to be used with the client request.
     * @param {String} subscriptionId The Azure subscription ID.
     * @param {String} resourceGroup The name of the Azure resource group.
     * @param {module:api/ConfigurationsApi~configurationsListByResourceGroupCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ConfigurationListResult}
     */
    configurationsListByResourceGroup(apiVersion, subscriptionId, resourceGroup, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling configurationsListByResourceGroup");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling configurationsListByResourceGroup");
      }
      // verify the required parameter 'resourceGroup' is set
      if (resourceGroup === undefined || resourceGroup === null) {
        throw new Error("Missing the required parameter 'resourceGroup' when calling configurationsListByResourceGroup");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroup': resourceGroup
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ConfigurationListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Advisor/configurations', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the configurationsListBySubscription operation.
     * @callback module:api/ConfigurationsApi~configurationsListBySubscriptionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ConfigurationListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve Azure Advisor configurations.
     * Retrieve Azure Advisor configurations and also retrieve configurations of contained resource groups.
     * @param {String} apiVersion The version of the API to be used with the client request.
     * @param {String} subscriptionId The Azure subscription ID.
     * @param {module:api/ConfigurationsApi~configurationsListBySubscriptionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ConfigurationListResult}
     */
    configurationsListBySubscription(apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling configurationsListBySubscription");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling configurationsListBySubscription");
      }

      let pathParams = {
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ConfigurationListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.Advisor/configurations', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
