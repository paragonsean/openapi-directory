# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ShortDescription(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, problem: str=None, solution: str=None):
        """ShortDescription - a model defined in OpenAPI

        :param problem: The problem of this ShortDescription.
        :param solution: The solution of this ShortDescription.
        """
        self.openapi_types = {
            'problem': str,
            'solution': str
        }

        self.attribute_map = {
            'problem': 'problem',
            'solution': 'solution'
        }

        self._problem = problem
        self._solution = solution

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ShortDescription':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ShortDescription of this ShortDescription.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def problem(self):
        """Gets the problem of this ShortDescription.

        The issue or opportunity identified by the recommendation.

        :return: The problem of this ShortDescription.
        :rtype: str
        """
        return self._problem

    @problem.setter
    def problem(self, problem):
        """Sets the problem of this ShortDescription.

        The issue or opportunity identified by the recommendation.

        :param problem: The problem of this ShortDescription.
        :type problem: str
        """

        self._problem = problem

    @property
    def solution(self):
        """Gets the solution of this ShortDescription.

        The remediation action suggested by the recommendation.

        :return: The solution of this ShortDescription.
        :rtype: str
        """
        return self._solution

    @solution.setter
    def solution(self, solution):
        """Sets the solution of this ShortDescription.

        The remediation action suggested by the recommendation.

        :param solution: The solution of this ShortDescription.
        :type solution: str
        """

        self._solution = solution
