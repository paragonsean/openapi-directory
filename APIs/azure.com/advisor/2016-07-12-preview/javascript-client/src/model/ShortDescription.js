/**
 * AdvisorManagementClient
 * REST APIs for Azure Advisor
 *
 * The version of the OpenAPI document: 2016-07-12-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ShortDescription model module.
 * @module model/ShortDescription
 * @version 2016-07-12-preview
 */
class ShortDescription {
    /**
     * Constructs a new <code>ShortDescription</code>.
     * A summary of the recommendation.
     * @alias module:model/ShortDescription
     */
    constructor() { 
        
        ShortDescription.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ShortDescription</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ShortDescription} obj Optional instance to populate.
     * @return {module:model/ShortDescription} The populated <code>ShortDescription</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ShortDescription();

            if (data.hasOwnProperty('problem')) {
                obj['problem'] = ApiClient.convertToType(data['problem'], 'String');
            }
            if (data.hasOwnProperty('solution')) {
                obj['solution'] = ApiClient.convertToType(data['solution'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ShortDescription</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ShortDescription</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['problem'] && !(typeof data['problem'] === 'string' || data['problem'] instanceof String)) {
            throw new Error("Expected the field `problem` to be a primitive type in the JSON string but got " + data['problem']);
        }
        // ensure the json data is a string
        if (data['solution'] && !(typeof data['solution'] === 'string' || data['solution'] instanceof String)) {
            throw new Error("Expected the field `solution` to be a primitive type in the JSON string but got " + data['solution']);
        }

        return true;
    }


}



/**
 * The issue or opportunity identified by the recommendation.
 * @member {String} problem
 */
ShortDescription.prototype['problem'] = undefined;

/**
 * The remediation action suggested by the recommendation.
 * @member {String} solution
 */
ShortDescription.prototype['solution'] = undefined;






export default ShortDescription;

