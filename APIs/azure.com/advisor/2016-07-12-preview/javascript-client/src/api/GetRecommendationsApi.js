/**
 * AdvisorManagementClient
 * REST APIs for Azure Advisor
 *
 * The version of the OpenAPI document: 2016-07-12-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ResourceRecommendationBase from '../model/ResourceRecommendationBase';
import ResourceRecommendationBaseListResult from '../model/ResourceRecommendationBaseListResult';

/**
* GetRecommendations service.
* @module api/GetRecommendationsApi
* @version 2016-07-12-preview
*/
export default class GetRecommendationsApi {

    /**
    * Constructs a new GetRecommendationsApi. 
    * @alias module:api/GetRecommendationsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the recommendationsGet operation.
     * @callback module:api/GetRecommendationsApi~recommendationsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ResourceRecommendationBase} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Obtains details of a cached recommendation.
     * @param {String} resourceUri The fully qualified Azure Resource Manager identifier of the resource to which the recommendation applies.
     * @param {String} recommendationId The recommendation ID.
     * @param {String} apiVersion The version of the API to be used with the client request.
     * @param {module:api/GetRecommendationsApi~recommendationsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ResourceRecommendationBase}
     */
    recommendationsGet(resourceUri, recommendationId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'resourceUri' is set
      if (resourceUri === undefined || resourceUri === null) {
        throw new Error("Missing the required parameter 'resourceUri' when calling recommendationsGet");
      }
      // verify the required parameter 'recommendationId' is set
      if (recommendationId === undefined || recommendationId === null) {
        throw new Error("Missing the required parameter 'recommendationId' when calling recommendationsGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling recommendationsGet");
      }

      let pathParams = {
        'resourceUri': resourceUri,
        'recommendationId': recommendationId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ResourceRecommendationBase;
      return this.apiClient.callApi(
        '/{resourceUri}/providers/Microsoft.Advisor/recommendations/{recommendationId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the recommendationsList operation.
     * @callback module:api/GetRecommendationsApi~recommendationsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ResourceRecommendationBaseListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Obtains cached recommendations for a subscription. The recommendations are generated or computed by invoking generateRecommendations.
     * @param {String} subscriptionId The Azure subscription ID.
     * @param {String} apiVersion The version of the API to be used with the client request.
     * @param {Object} opts Optional parameters
     * @param {String} [filter] The filter to apply to the recommendations.
     * @param {Number} [top] The number of recommendations per page if a paged version of this API is being used.
     * @param {String} [skipToken] The page-continuation token to use with a paged version of this API.
     * @param {module:api/GetRecommendationsApi~recommendationsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ResourceRecommendationBaseListResult}
     */
    recommendationsList(subscriptionId, apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling recommendationsList");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling recommendationsList");
      }

      let pathParams = {
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion,
        '$filter': opts['filter'],
        '$top': opts['top'],
        '$skipToken': opts['skipToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ResourceRecommendationBaseListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.Advisor/recommendations', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
