/**
 * AdvisorManagementClient
 * REST APIs for Azure Advisor
 *
 * The version of the OpenAPI document: 2016-07-12-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import SuppressionContract from '../model/SuppressionContract';

/**
* Suppressions service.
* @module api/SuppressionsApi
* @version 2016-07-12-preview
*/
export default class SuppressionsApi {

    /**
    * Constructs a new SuppressionsApi. 
    * @alias module:api/SuppressionsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the suppressionsCreate operation.
     * @callback module:api/SuppressionsApi~suppressionsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SuppressionContract} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Enables the snoozed or dismissed attribute of a recommendation. The snoozed or dismissed attribute is referred to as a suppression. Use this API to create or update the snoozed or dismissed status of a recommendation.
     * @param {String} resourceUri The fully qualified Azure Resource Manager identifier of the resource to which the recommendation applies.
     * @param {String} recommendationId The recommendation ID.
     * @param {String} name The name of the suppression.
     * @param {String} apiVersion The version of the API to be used with the client request.
     * @param {module:model/SuppressionContract} suppressionContract The snoozed or dismissed attribute; for example, the snooze duration.
     * @param {module:api/SuppressionsApi~suppressionsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SuppressionContract}
     */
    suppressionsCreate(resourceUri, recommendationId, name, apiVersion, suppressionContract, callback) {
      let postBody = suppressionContract;
      // verify the required parameter 'resourceUri' is set
      if (resourceUri === undefined || resourceUri === null) {
        throw new Error("Missing the required parameter 'resourceUri' when calling suppressionsCreate");
      }
      // verify the required parameter 'recommendationId' is set
      if (recommendationId === undefined || recommendationId === null) {
        throw new Error("Missing the required parameter 'recommendationId' when calling suppressionsCreate");
      }
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling suppressionsCreate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling suppressionsCreate");
      }
      // verify the required parameter 'suppressionContract' is set
      if (suppressionContract === undefined || suppressionContract === null) {
        throw new Error("Missing the required parameter 'suppressionContract' when calling suppressionsCreate");
      }

      let pathParams = {
        'resourceUri': resourceUri,
        'recommendationId': recommendationId,
        'name': name
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = SuppressionContract;
      return this.apiClient.callApi(
        '/{resourceUri}/providers/Microsoft.Advisor/recommendations/{recommendationId}/suppressions/{name}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the suppressionsDelete operation.
     * @callback module:api/SuppressionsApi~suppressionsDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Enables the activation of a snoozed or dismissed recommendation. The snoozed or dismissed attribute of a recommendation is referred to as a suppression.
     * @param {String} resourceUri The fully qualified Azure Resource Manager identifier of the resource to which the recommendation applies.
     * @param {String} recommendationId The recommendation ID.
     * @param {String} name The name of the suppression.
     * @param {String} apiVersion The version of the API to be used with the client request.
     * @param {module:api/SuppressionsApi~suppressionsDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    suppressionsDelete(resourceUri, recommendationId, name, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'resourceUri' is set
      if (resourceUri === undefined || resourceUri === null) {
        throw new Error("Missing the required parameter 'resourceUri' when calling suppressionsDelete");
      }
      // verify the required parameter 'recommendationId' is set
      if (recommendationId === undefined || recommendationId === null) {
        throw new Error("Missing the required parameter 'recommendationId' when calling suppressionsDelete");
      }
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling suppressionsDelete");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling suppressionsDelete");
      }

      let pathParams = {
        'resourceUri': resourceUri,
        'recommendationId': recommendationId,
        'name': name
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/{resourceUri}/providers/Microsoft.Advisor/recommendations/{recommendationId}/suppressions/{name}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the suppressionsGet operation.
     * @callback module:api/SuppressionsApi~suppressionsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SuppressionContract} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Obtains the details of a suppression.
     * @param {String} resourceUri The fully qualified Azure Resource Manager identifier of the resource to which the recommendation applies.
     * @param {String} recommendationId The recommendation ID.
     * @param {String} name The name of the suppression.
     * @param {String} apiVersion The version of the API to be used with the client request.
     * @param {module:api/SuppressionsApi~suppressionsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SuppressionContract}
     */
    suppressionsGet(resourceUri, recommendationId, name, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'resourceUri' is set
      if (resourceUri === undefined || resourceUri === null) {
        throw new Error("Missing the required parameter 'resourceUri' when calling suppressionsGet");
      }
      // verify the required parameter 'recommendationId' is set
      if (recommendationId === undefined || recommendationId === null) {
        throw new Error("Missing the required parameter 'recommendationId' when calling suppressionsGet");
      }
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling suppressionsGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling suppressionsGet");
      }

      let pathParams = {
        'resourceUri': resourceUri,
        'recommendationId': recommendationId,
        'name': name
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = SuppressionContract;
      return this.apiClient.callApi(
        '/{resourceUri}/providers/Microsoft.Advisor/recommendations/{recommendationId}/suppressions/{name}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the suppressionsList operation.
     * @callback module:api/SuppressionsApi~suppressionsListCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/SuppressionContract>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves the list of snoozed or dismissed suppressions for a subscription. The snoozed or dismissed attribute of a recommendation is referred to as a suppression.
     * @param {String} subscriptionId The Azure subscription ID.
     * @param {String} apiVersion The version of the API to be used with the client request.
     * @param {module:api/SuppressionsApi~suppressionsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/SuppressionContract>}
     */
    suppressionsList(subscriptionId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling suppressionsList");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling suppressionsList");
      }

      let pathParams = {
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [SuppressionContract];
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.Advisor/suppressions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
