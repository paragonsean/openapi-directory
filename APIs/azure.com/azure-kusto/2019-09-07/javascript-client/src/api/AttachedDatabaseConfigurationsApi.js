/**
 * KustoManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-09-07
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AttachedDatabaseConfiguration from '../model/AttachedDatabaseConfiguration';
import AttachedDatabaseConfigurationListResult from '../model/AttachedDatabaseConfigurationListResult';
import CloudError from '../model/CloudError';

/**
* AttachedDatabaseConfigurations service.
* @module api/AttachedDatabaseConfigurationsApi
* @version 2019-09-07
*/
export default class AttachedDatabaseConfigurationsApi {

    /**
    * Constructs a new AttachedDatabaseConfigurationsApi. 
    * @alias module:api/AttachedDatabaseConfigurationsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the attachedDatabaseConfigurationsCreateOrUpdate operation.
     * @callback module:api/AttachedDatabaseConfigurationsApi~attachedDatabaseConfigurationsCreateOrUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AttachedDatabaseConfiguration} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates or updates an attached database configuration.
     * @param {String} resourceGroupName The name of the resource group containing the Kusto cluster.
     * @param {String} clusterName The name of the Kusto cluster.
     * @param {String} attachedDatabaseConfigurationName The name of the attached database configuration.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} apiVersion Client API Version.
     * @param {module:model/AttachedDatabaseConfiguration} parameters The database parameters supplied to the CreateOrUpdate operation.
     * @param {module:api/AttachedDatabaseConfigurationsApi~attachedDatabaseConfigurationsCreateOrUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AttachedDatabaseConfiguration}
     */
    attachedDatabaseConfigurationsCreateOrUpdate(resourceGroupName, clusterName, attachedDatabaseConfigurationName, subscriptionId, apiVersion, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling attachedDatabaseConfigurationsCreateOrUpdate");
      }
      // verify the required parameter 'clusterName' is set
      if (clusterName === undefined || clusterName === null) {
        throw new Error("Missing the required parameter 'clusterName' when calling attachedDatabaseConfigurationsCreateOrUpdate");
      }
      // verify the required parameter 'attachedDatabaseConfigurationName' is set
      if (attachedDatabaseConfigurationName === undefined || attachedDatabaseConfigurationName === null) {
        throw new Error("Missing the required parameter 'attachedDatabaseConfigurationName' when calling attachedDatabaseConfigurationsCreateOrUpdate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling attachedDatabaseConfigurationsCreateOrUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling attachedDatabaseConfigurationsCreateOrUpdate");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling attachedDatabaseConfigurationsCreateOrUpdate");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'clusterName': clusterName,
        'attachedDatabaseConfigurationName': attachedDatabaseConfigurationName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = AttachedDatabaseConfiguration;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/attachedDatabaseConfigurations/{attachedDatabaseConfigurationName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the attachedDatabaseConfigurationsDelete operation.
     * @callback module:api/AttachedDatabaseConfigurationsApi~attachedDatabaseConfigurationsDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes the attached database configuration with the given name.
     * @param {String} resourceGroupName The name of the resource group containing the Kusto cluster.
     * @param {String} clusterName The name of the Kusto cluster.
     * @param {String} attachedDatabaseConfigurationName The name of the attached database configuration.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} apiVersion Client API Version.
     * @param {module:api/AttachedDatabaseConfigurationsApi~attachedDatabaseConfigurationsDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    attachedDatabaseConfigurationsDelete(resourceGroupName, clusterName, attachedDatabaseConfigurationName, subscriptionId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling attachedDatabaseConfigurationsDelete");
      }
      // verify the required parameter 'clusterName' is set
      if (clusterName === undefined || clusterName === null) {
        throw new Error("Missing the required parameter 'clusterName' when calling attachedDatabaseConfigurationsDelete");
      }
      // verify the required parameter 'attachedDatabaseConfigurationName' is set
      if (attachedDatabaseConfigurationName === undefined || attachedDatabaseConfigurationName === null) {
        throw new Error("Missing the required parameter 'attachedDatabaseConfigurationName' when calling attachedDatabaseConfigurationsDelete");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling attachedDatabaseConfigurationsDelete");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling attachedDatabaseConfigurationsDelete");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'clusterName': clusterName,
        'attachedDatabaseConfigurationName': attachedDatabaseConfigurationName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/attachedDatabaseConfigurations/{attachedDatabaseConfigurationName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the attachedDatabaseConfigurationsGet operation.
     * @callback module:api/AttachedDatabaseConfigurationsApi~attachedDatabaseConfigurationsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AttachedDatabaseConfiguration} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns an attached database configuration.
     * @param {String} resourceGroupName The name of the resource group containing the Kusto cluster.
     * @param {String} clusterName The name of the Kusto cluster.
     * @param {String} attachedDatabaseConfigurationName The name of the attached database configuration.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} apiVersion Client API Version.
     * @param {module:api/AttachedDatabaseConfigurationsApi~attachedDatabaseConfigurationsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AttachedDatabaseConfiguration}
     */
    attachedDatabaseConfigurationsGet(resourceGroupName, clusterName, attachedDatabaseConfigurationName, subscriptionId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling attachedDatabaseConfigurationsGet");
      }
      // verify the required parameter 'clusterName' is set
      if (clusterName === undefined || clusterName === null) {
        throw new Error("Missing the required parameter 'clusterName' when calling attachedDatabaseConfigurationsGet");
      }
      // verify the required parameter 'attachedDatabaseConfigurationName' is set
      if (attachedDatabaseConfigurationName === undefined || attachedDatabaseConfigurationName === null) {
        throw new Error("Missing the required parameter 'attachedDatabaseConfigurationName' when calling attachedDatabaseConfigurationsGet");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling attachedDatabaseConfigurationsGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling attachedDatabaseConfigurationsGet");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'clusterName': clusterName,
        'attachedDatabaseConfigurationName': attachedDatabaseConfigurationName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AttachedDatabaseConfiguration;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/attachedDatabaseConfigurations/{attachedDatabaseConfigurationName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the attachedDatabaseConfigurationsListByCluster operation.
     * @callback module:api/AttachedDatabaseConfigurationsApi~attachedDatabaseConfigurationsListByClusterCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AttachedDatabaseConfigurationListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns the list of attached database configurations of the given Kusto cluster.
     * @param {String} resourceGroupName The name of the resource group containing the Kusto cluster.
     * @param {String} clusterName The name of the Kusto cluster.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} apiVersion Client API Version.
     * @param {module:api/AttachedDatabaseConfigurationsApi~attachedDatabaseConfigurationsListByClusterCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AttachedDatabaseConfigurationListResult}
     */
    attachedDatabaseConfigurationsListByCluster(resourceGroupName, clusterName, subscriptionId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling attachedDatabaseConfigurationsListByCluster");
      }
      // verify the required parameter 'clusterName' is set
      if (clusterName === undefined || clusterName === null) {
        throw new Error("Missing the required parameter 'clusterName' when calling attachedDatabaseConfigurationsListByCluster");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling attachedDatabaseConfigurationsListByCluster");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling attachedDatabaseConfigurationsListByCluster");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'clusterName': clusterName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AttachedDatabaseConfigurationListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/attachedDatabaseConfigurations', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
