/*
 * KustoManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-09-07
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CheckNameResult;
import org.openapitools.client.model.CloudError;
import org.openapitools.client.model.DataConnection;
import org.openapitools.client.model.DataConnectionCheckNameRequest;
import org.openapitools.client.model.DataConnectionListResult;
import org.openapitools.client.model.DataConnectionValidation;
import org.openapitools.client.model.DataConnectionValidationListResult;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DataConnectionsApi
 */
@Disabled
public class DataConnectionsApiTest {

    private final DataConnectionsApi api = new DataConnectionsApi();

    /**
     * Checks that the data connection name is valid and is not already in use.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dataConnectionsCheckNameAvailabilityTest() throws ApiException {
        String resourceGroupName = null;
        String clusterName = null;
        String databaseName = null;
        String apiVersion = null;
        String subscriptionId = null;
        DataConnectionCheckNameRequest dataConnectionName = null;
        CheckNameResult response = api.dataConnectionsCheckNameAvailability(resourceGroupName, clusterName, databaseName, apiVersion, subscriptionId, dataConnectionName);
        // TODO: test validations
    }

    /**
     * Creates or updates a data connection.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dataConnectionsCreateOrUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String clusterName = null;
        String databaseName = null;
        String dataConnectionName = null;
        String subscriptionId = null;
        String apiVersion = null;
        DataConnection parameters = null;
        DataConnection response = api.dataConnectionsCreateOrUpdate(resourceGroupName, clusterName, databaseName, dataConnectionName, subscriptionId, apiVersion, parameters);
        // TODO: test validations
    }

    /**
     * Checks that the data connection parameters are valid.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dataConnectionsDataConnectionValidationTest() throws ApiException {
        String resourceGroupName = null;
        String clusterName = null;
        String databaseName = null;
        String apiVersion = null;
        String subscriptionId = null;
        DataConnectionValidation parameters = null;
        DataConnectionValidationListResult response = api.dataConnectionsDataConnectionValidation(resourceGroupName, clusterName, databaseName, apiVersion, subscriptionId, parameters);
        // TODO: test validations
    }

    /**
     * Deletes the data connection with the given name.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dataConnectionsDeleteTest() throws ApiException {
        String resourceGroupName = null;
        String clusterName = null;
        String databaseName = null;
        String dataConnectionName = null;
        String subscriptionId = null;
        String apiVersion = null;
        api.dataConnectionsDelete(resourceGroupName, clusterName, databaseName, dataConnectionName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Returns a data connection.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dataConnectionsGetTest() throws ApiException {
        String resourceGroupName = null;
        String clusterName = null;
        String databaseName = null;
        String dataConnectionName = null;
        String subscriptionId = null;
        String apiVersion = null;
        DataConnection response = api.dataConnectionsGet(resourceGroupName, clusterName, databaseName, dataConnectionName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Returns the list of data connections of the given Kusto database.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dataConnectionsListByDatabaseTest() throws ApiException {
        String resourceGroupName = null;
        String clusterName = null;
        String databaseName = null;
        String subscriptionId = null;
        String apiVersion = null;
        DataConnectionListResult response = api.dataConnectionsListByDatabase(resourceGroupName, clusterName, databaseName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Updates a data connection.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dataConnectionsUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String clusterName = null;
        String databaseName = null;
        String dataConnectionName = null;
        String subscriptionId = null;
        String apiVersion = null;
        DataConnection parameters = null;
        DataConnection response = api.dataConnectionsUpdate(resourceGroupName, clusterName, databaseName, dataConnectionName, subscriptionId, apiVersion, parameters);
        // TODO: test validations
    }

}
