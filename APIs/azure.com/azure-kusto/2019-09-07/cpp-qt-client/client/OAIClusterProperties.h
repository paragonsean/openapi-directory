/**
 * KustoManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-09-07
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIClusterProperties.h
 *
 * Class representing the Kusto cluster properties.
 */

#ifndef OAIClusterProperties_H
#define OAIClusterProperties_H

#include <QJsonObject>

#include "OAIKeyVaultProperties.h"
#include "OAIOptimizedAutoscale.h"
#include "OAITrustedExternalTenant.h"
#include "OAIVirtualNetworkConfiguration.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIKeyVaultProperties;
class OAIOptimizedAutoscale;
class OAITrustedExternalTenant;
class OAIVirtualNetworkConfiguration;

class OAIClusterProperties : public OAIObject {
public:
    OAIClusterProperties();
    OAIClusterProperties(QString json);
    ~OAIClusterProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDataIngestionUri() const;
    void setDataIngestionUri(const QString &data_ingestion_uri);
    bool is_data_ingestion_uri_Set() const;
    bool is_data_ingestion_uri_Valid() const;

    bool isEnableDiskEncryption() const;
    void setEnableDiskEncryption(const bool &enable_disk_encryption);
    bool is_enable_disk_encryption_Set() const;
    bool is_enable_disk_encryption_Valid() const;

    bool isEnableStreamingIngest() const;
    void setEnableStreamingIngest(const bool &enable_streaming_ingest);
    bool is_enable_streaming_ingest_Set() const;
    bool is_enable_streaming_ingest_Valid() const;

    OAIKeyVaultProperties getKeyVaultProperties() const;
    void setKeyVaultProperties(const OAIKeyVaultProperties &key_vault_properties);
    bool is_key_vault_properties_Set() const;
    bool is_key_vault_properties_Valid() const;

    OAIOptimizedAutoscale getOptimizedAutoscale() const;
    void setOptimizedAutoscale(const OAIOptimizedAutoscale &optimized_autoscale);
    bool is_optimized_autoscale_Set() const;
    bool is_optimized_autoscale_Valid() const;

    QString getProvisioningState() const;
    void setProvisioningState(const QString &provisioning_state);
    bool is_provisioning_state_Set() const;
    bool is_provisioning_state_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QList<OAITrustedExternalTenant> getTrustedExternalTenants() const;
    void setTrustedExternalTenants(const QList<OAITrustedExternalTenant> &trusted_external_tenants);
    bool is_trusted_external_tenants_Set() const;
    bool is_trusted_external_tenants_Valid() const;

    QString getUri() const;
    void setUri(const QString &uri);
    bool is_uri_Set() const;
    bool is_uri_Valid() const;

    OAIVirtualNetworkConfiguration getVirtualNetworkConfiguration() const;
    void setVirtualNetworkConfiguration(const OAIVirtualNetworkConfiguration &virtual_network_configuration);
    bool is_virtual_network_configuration_Set() const;
    bool is_virtual_network_configuration_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_data_ingestion_uri;
    bool m_data_ingestion_uri_isSet;
    bool m_data_ingestion_uri_isValid;

    bool m_enable_disk_encryption;
    bool m_enable_disk_encryption_isSet;
    bool m_enable_disk_encryption_isValid;

    bool m_enable_streaming_ingest;
    bool m_enable_streaming_ingest_isSet;
    bool m_enable_streaming_ingest_isValid;

    OAIKeyVaultProperties m_key_vault_properties;
    bool m_key_vault_properties_isSet;
    bool m_key_vault_properties_isValid;

    OAIOptimizedAutoscale m_optimized_autoscale;
    bool m_optimized_autoscale_isSet;
    bool m_optimized_autoscale_isValid;

    QString m_provisioning_state;
    bool m_provisioning_state_isSet;
    bool m_provisioning_state_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QList<OAITrustedExternalTenant> m_trusted_external_tenants;
    bool m_trusted_external_tenants_isSet;
    bool m_trusted_external_tenants_isValid;

    QString m_uri;
    bool m_uri_isSet;
    bool m_uri_isValid;

    OAIVirtualNetworkConfiguration m_virtual_network_configuration;
    bool m_virtual_network_configuration_isSet;
    bool m_virtual_network_configuration_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIClusterProperties)

#endif // OAIClusterProperties_H
