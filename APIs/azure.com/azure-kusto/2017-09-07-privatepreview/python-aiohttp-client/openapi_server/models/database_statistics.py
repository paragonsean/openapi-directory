# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DatabaseStatistics(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, size: float=None):
        """DatabaseStatistics - a model defined in OpenAPI

        :param size: The size of this DatabaseStatistics.
        """
        self.openapi_types = {
            'size': float
        }

        self.attribute_map = {
            'size': 'size'
        }

        self._size = size

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DatabaseStatistics':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DatabaseStatistics of this DatabaseStatistics.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def size(self):
        """Gets the size of this DatabaseStatistics.

        The database size - the total size of compressed data and index in bytes.

        :return: The size of this DatabaseStatistics.
        :rtype: float
        """
        return self._size

    @size.setter
    def size(self, size):
        """Sets the size of this DatabaseStatistics.

        The database size - the total size of compressed data and index in bytes.

        :param size: The size of this DatabaseStatistics.
        :type size: float
        """

        self._size = size
