/*
 * KustoManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-09-07-privatepreview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CheckNameResult;
import org.openapitools.client.model.CloudError;
import org.openapitools.client.model.Cluster;
import org.openapitools.client.model.ClusterCheckNameRequest;
import org.openapitools.client.model.ClusterListResult;
import org.openapitools.client.model.ClusterUpdate;
import org.openapitools.client.model.ListResourceSkusResult;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ClustersApi
 */
@Disabled
public class ClustersApiTest {

    private final ClustersApi api = new ClustersApi();

    /**
     * Checks that the cluster name is valid and is not already in use.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void clustersCheckNameAvailabilityTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String location = null;
        ClusterCheckNameRequest clusterName = null;
        CheckNameResult response = api.clustersCheckNameAvailability(apiVersion, subscriptionId, location, clusterName);
        // TODO: test validations
    }

    /**
     * Create or update a Kusto cluster.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void clustersCreateOrUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String clusterName = null;
        String subscriptionId = null;
        String apiVersion = null;
        Cluster parameters = null;
        Cluster response = api.clustersCreateOrUpdate(resourceGroupName, clusterName, subscriptionId, apiVersion, parameters);
        // TODO: test validations
    }

    /**
     * Deletes a Kusto cluster.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void clustersDeleteTest() throws ApiException {
        String resourceGroupName = null;
        String clusterName = null;
        String subscriptionId = null;
        String apiVersion = null;
        api.clustersDelete(resourceGroupName, clusterName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets a Kusto cluster.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void clustersGetTest() throws ApiException {
        String resourceGroupName = null;
        String clusterName = null;
        String subscriptionId = null;
        String apiVersion = null;
        Cluster response = api.clustersGet(resourceGroupName, clusterName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Lists all Kusto clusters within a subscription.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void clustersListTest() throws ApiException {
        String subscriptionId = null;
        String apiVersion = null;
        ClusterListResult response = api.clustersList(subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Lists all Kusto clusters within a resource group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void clustersListByResourceGroupTest() throws ApiException {
        String resourceGroupName = null;
        String subscriptionId = null;
        String apiVersion = null;
        ClusterListResult response = api.clustersListByResourceGroup(resourceGroupName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Returns the SKUs available for the provided resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void clustersListSkusByResourceTest() throws ApiException {
        String resourceGroupName = null;
        String clusterName = null;
        String apiVersion = null;
        String subscriptionId = null;
        ListResourceSkusResult response = api.clustersListSkusByResource(resourceGroupName, clusterName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Starts a Kusto cluster.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void clustersStartTest() throws ApiException {
        String resourceGroupName = null;
        String clusterName = null;
        String subscriptionId = null;
        String apiVersion = null;
        api.clustersStart(resourceGroupName, clusterName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Stops a Kusto cluster.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void clustersStopTest() throws ApiException {
        String resourceGroupName = null;
        String clusterName = null;
        String subscriptionId = null;
        String apiVersion = null;
        api.clustersStop(resourceGroupName, clusterName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Update a Kusto cluster.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void clustersUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String clusterName = null;
        String subscriptionId = null;
        String apiVersion = null;
        ClusterUpdate parameters = null;
        Cluster response = api.clustersUpdate(resourceGroupName, clusterName, subscriptionId, apiVersion, parameters);
        // TODO: test validations
    }

}
