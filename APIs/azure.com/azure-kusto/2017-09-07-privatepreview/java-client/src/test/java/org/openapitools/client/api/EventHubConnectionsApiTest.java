/*
 * KustoManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-09-07-privatepreview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CloudError;
import org.openapitools.client.model.EventHubConnection;
import org.openapitools.client.model.EventHubConnectionListResult;
import org.openapitools.client.model.EventHubConnectionUpdate;
import org.openapitools.client.model.EventHubConnectionValidation;
import org.openapitools.client.model.EventHubConnectionValidationListResult;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for EventHubConnectionsApi
 */
@Disabled
public class EventHubConnectionsApiTest {

    private final EventHubConnectionsApi api = new EventHubConnectionsApi();

    /**
     * Creates or updates a Event Hub connection.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void eventHubConnectionsCreateOrUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String clusterName = null;
        String databaseName = null;
        String eventHubConnectionName = null;
        String subscriptionId = null;
        String apiVersion = null;
        EventHubConnection parameters = null;
        EventHubConnection response = api.eventHubConnectionsCreateOrUpdate(resourceGroupName, clusterName, databaseName, eventHubConnectionName, subscriptionId, apiVersion, parameters);
        // TODO: test validations
    }

    /**
     * Deletes the Event Hub connection with the given name.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void eventHubConnectionsDeleteTest() throws ApiException {
        String resourceGroupName = null;
        String clusterName = null;
        String databaseName = null;
        String eventHubConnectionName = null;
        String subscriptionId = null;
        String apiVersion = null;
        api.eventHubConnectionsDelete(resourceGroupName, clusterName, databaseName, eventHubConnectionName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Checks that the Event Hub data connection parameters are valid.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void eventHubConnectionsEventhubConnectionValidationTest() throws ApiException {
        String resourceGroupName = null;
        String clusterName = null;
        String databaseName = null;
        String apiVersion = null;
        String subscriptionId = null;
        EventHubConnectionValidation parameters = null;
        EventHubConnectionValidationListResult response = api.eventHubConnectionsEventhubConnectionValidation(resourceGroupName, clusterName, databaseName, apiVersion, subscriptionId, parameters);
        // TODO: test validations
    }

    /**
     * Returns an Event Hub connection.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void eventHubConnectionsGetTest() throws ApiException {
        String resourceGroupName = null;
        String clusterName = null;
        String databaseName = null;
        String eventHubConnectionName = null;
        String subscriptionId = null;
        String apiVersion = null;
        EventHubConnection response = api.eventHubConnectionsGet(resourceGroupName, clusterName, databaseName, eventHubConnectionName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Returns the list of Event Hub connections of the given Kusto database.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void eventHubConnectionsListByDatabaseTest() throws ApiException {
        String resourceGroupName = null;
        String clusterName = null;
        String databaseName = null;
        String subscriptionId = null;
        String apiVersion = null;
        EventHubConnectionListResult response = api.eventHubConnectionsListByDatabase(resourceGroupName, clusterName, databaseName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Updates a Event Hub connection.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void eventHubConnectionsUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String clusterName = null;
        String databaseName = null;
        String eventHubConnectionName = null;
        String subscriptionId = null;
        String apiVersion = null;
        EventHubConnectionUpdate parameters = null;
        EventHubConnection response = api.eventHubConnectionsUpdate(resourceGroupName, clusterName, databaseName, eventHubConnectionName, subscriptionId, apiVersion, parameters);
        // TODO: test validations
    }

}
