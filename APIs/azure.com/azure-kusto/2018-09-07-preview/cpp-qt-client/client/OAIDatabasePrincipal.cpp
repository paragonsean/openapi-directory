/**
 * KustoManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-09-07-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDatabasePrincipal.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDatabasePrincipal::OAIDatabasePrincipal(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDatabasePrincipal::OAIDatabasePrincipal() {
    this->initializeModel();
}

OAIDatabasePrincipal::~OAIDatabasePrincipal() {}

void OAIDatabasePrincipal::initializeModel() {

    m_app_id_isSet = false;
    m_app_id_isValid = false;

    m_email_isSet = false;
    m_email_isValid = false;

    m_fqn_isSet = false;
    m_fqn_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_role_isSet = false;
    m_role_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAIDatabasePrincipal::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDatabasePrincipal::fromJsonObject(QJsonObject json) {

    m_app_id_isValid = ::OpenAPI::fromJsonValue(m_app_id, json[QString("appId")]);
    m_app_id_isSet = !json[QString("appId")].isNull() && m_app_id_isValid;

    m_email_isValid = ::OpenAPI::fromJsonValue(m_email, json[QString("email")]);
    m_email_isSet = !json[QString("email")].isNull() && m_email_isValid;

    m_fqn_isValid = ::OpenAPI::fromJsonValue(m_fqn, json[QString("fqn")]);
    m_fqn_isSet = !json[QString("fqn")].isNull() && m_fqn_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_role_isValid = ::OpenAPI::fromJsonValue(m_role, json[QString("role")]);
    m_role_isSet = !json[QString("role")].isNull() && m_role_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAIDatabasePrincipal::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDatabasePrincipal::asJsonObject() const {
    QJsonObject obj;
    if (m_app_id_isSet) {
        obj.insert(QString("appId"), ::OpenAPI::toJsonValue(m_app_id));
    }
    if (m_email_isSet) {
        obj.insert(QString("email"), ::OpenAPI::toJsonValue(m_email));
    }
    if (m_fqn_isSet) {
        obj.insert(QString("fqn"), ::OpenAPI::toJsonValue(m_fqn));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_role_isSet) {
        obj.insert(QString("role"), ::OpenAPI::toJsonValue(m_role));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

QString OAIDatabasePrincipal::getAppId() const {
    return m_app_id;
}
void OAIDatabasePrincipal::setAppId(const QString &app_id) {
    m_app_id = app_id;
    m_app_id_isSet = true;
}

bool OAIDatabasePrincipal::is_app_id_Set() const{
    return m_app_id_isSet;
}

bool OAIDatabasePrincipal::is_app_id_Valid() const{
    return m_app_id_isValid;
}

QString OAIDatabasePrincipal::getEmail() const {
    return m_email;
}
void OAIDatabasePrincipal::setEmail(const QString &email) {
    m_email = email;
    m_email_isSet = true;
}

bool OAIDatabasePrincipal::is_email_Set() const{
    return m_email_isSet;
}

bool OAIDatabasePrincipal::is_email_Valid() const{
    return m_email_isValid;
}

QString OAIDatabasePrincipal::getFqn() const {
    return m_fqn;
}
void OAIDatabasePrincipal::setFqn(const QString &fqn) {
    m_fqn = fqn;
    m_fqn_isSet = true;
}

bool OAIDatabasePrincipal::is_fqn_Set() const{
    return m_fqn_isSet;
}

bool OAIDatabasePrincipal::is_fqn_Valid() const{
    return m_fqn_isValid;
}

QString OAIDatabasePrincipal::getName() const {
    return m_name;
}
void OAIDatabasePrincipal::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIDatabasePrincipal::is_name_Set() const{
    return m_name_isSet;
}

bool OAIDatabasePrincipal::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIDatabasePrincipal::getRole() const {
    return m_role;
}
void OAIDatabasePrincipal::setRole(const QString &role) {
    m_role = role;
    m_role_isSet = true;
}

bool OAIDatabasePrincipal::is_role_Set() const{
    return m_role_isSet;
}

bool OAIDatabasePrincipal::is_role_Valid() const{
    return m_role_isValid;
}

QString OAIDatabasePrincipal::getType() const {
    return m_type;
}
void OAIDatabasePrincipal::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIDatabasePrincipal::is_type_Set() const{
    return m_type_isSet;
}

bool OAIDatabasePrincipal::is_type_Valid() const{
    return m_type_isValid;
}

bool OAIDatabasePrincipal::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_app_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fqn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_role_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDatabasePrincipal::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_name_isValid && m_role_isValid && m_type_isValid && true;
}

} // namespace OpenAPI
