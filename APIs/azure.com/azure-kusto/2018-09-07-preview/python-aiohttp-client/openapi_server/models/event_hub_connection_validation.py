# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.event_hub_connection_properties import EventHubConnectionProperties
from openapi_server import util


class EventHubConnectionValidation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, eventhub_connection_name: str=None, properties: EventHubConnectionProperties=None):
        """EventHubConnectionValidation - a model defined in OpenAPI

        :param eventhub_connection_name: The eventhub_connection_name of this EventHubConnectionValidation.
        :param properties: The properties of this EventHubConnectionValidation.
        """
        self.openapi_types = {
            'eventhub_connection_name': str,
            'properties': EventHubConnectionProperties
        }

        self.attribute_map = {
            'eventhub_connection_name': 'eventhubConnectionName',
            'properties': 'properties'
        }

        self._eventhub_connection_name = eventhub_connection_name
        self._properties = properties

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EventHubConnectionValidation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EventHubConnectionValidation of this EventHubConnectionValidation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def eventhub_connection_name(self):
        """Gets the eventhub_connection_name of this EventHubConnectionValidation.

        The name of the event hub connection.

        :return: The eventhub_connection_name of this EventHubConnectionValidation.
        :rtype: str
        """
        return self._eventhub_connection_name

    @eventhub_connection_name.setter
    def eventhub_connection_name(self, eventhub_connection_name):
        """Sets the eventhub_connection_name of this EventHubConnectionValidation.

        The name of the event hub connection.

        :param eventhub_connection_name: The eventhub_connection_name of this EventHubConnectionValidation.
        :type eventhub_connection_name: str
        """

        self._eventhub_connection_name = eventhub_connection_name

    @property
    def properties(self):
        """Gets the properties of this EventHubConnectionValidation.


        :return: The properties of this EventHubConnectionValidation.
        :rtype: EventHubConnectionProperties
        """
        return self._properties

    @properties.setter
    def properties(self, properties):
        """Sets the properties of this EventHubConnectionValidation.


        :param properties: The properties of this EventHubConnectionValidation.
        :type properties: EventHubConnectionProperties
        """

        self._properties = properties
