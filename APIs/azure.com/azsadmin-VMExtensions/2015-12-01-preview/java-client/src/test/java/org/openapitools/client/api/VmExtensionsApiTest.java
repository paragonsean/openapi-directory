/*
 * Compute Admin Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2015-12-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.VMExtension;
import org.openapitools.client.model.VMExtensionParameters;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for VmExtensionsApi
 */
@Disabled
public class VmExtensionsApiTest {

    private final VmExtensionsApi api = new VmExtensionsApi();

    /**
     * Create a Virtual Machine Extension Image.
     *
     * Create a Virtual Machine Extension Image with publisher, version.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void vMExtensionsCreateTest() throws ApiException {
        String subscriptionId = null;
        String location = null;
        String publisher = null;
        String type = null;
        String version = null;
        String apiVersion = null;
        VMExtensionParameters extension = null;
        VMExtension response = api.vMExtensionsCreate(subscriptionId, location, publisher, type, version, apiVersion, extension);
        // TODO: test validations
    }

    /**
     * Deletes a Virtual Machine Extension Image.
     *
     * Deletes specified Virtual Machine Extension Image.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void vMExtensionsDeleteTest() throws ApiException {
        String subscriptionId = null;
        String location = null;
        String publisher = null;
        String type = null;
        String version = null;
        String apiVersion = null;
        api.vMExtensionsDelete(subscriptionId, location, publisher, type, version, apiVersion);
        // TODO: test validations
    }

    /**
     * Returns requested Virtual Machine Extension Image.
     *
     * Returns requested Virtual Machine Extension Image matching publisher, type, version.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void vMExtensionsGetTest() throws ApiException {
        String subscriptionId = null;
        String location = null;
        String publisher = null;
        String type = null;
        String version = null;
        String apiVersion = null;
        VMExtension response = api.vMExtensionsGet(subscriptionId, location, publisher, type, version, apiVersion);
        // TODO: test validations
    }

    /**
     * Returns a list of all Virtual Machine Extension Images.
     *
     * List of all Virtual Machine Extension Images for the current location are returned.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void vMExtensionsListTest() throws ApiException {
        String subscriptionId = null;
        String location = null;
        String apiVersion = null;
        List<VMExtension> response = api.vMExtensionsList(subscriptionId, location, apiVersion);
        // TODO: test validations
    }

}
