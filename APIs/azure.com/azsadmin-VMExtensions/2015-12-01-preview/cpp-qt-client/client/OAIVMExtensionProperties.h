/**
 * Compute Admin Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2015-12-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVMExtensionProperties.h
 *
 * Properties of a Virtual Machine Extension Image.
 */

#ifndef OAIVMExtensionProperties_H
#define OAIVMExtensionProperties_H

#include <QJsonObject>

#include "OAIAzureBlob.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAzureBlob;

class OAIVMExtensionProperties : public OAIObject {
public:
    OAIVMExtensionProperties();
    OAIVMExtensionProperties(QString json);
    ~OAIVMExtensionProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getComputeRole() const;
    void setComputeRole(const QString &compute_role);
    bool is_compute_role_Set() const;
    bool is_compute_role_Valid() const;

    bool isIsSystemExtension() const;
    void setIsSystemExtension(const bool &is_system_extension);
    bool is_is_system_extension_Set() const;
    bool is_is_system_extension_Valid() const;

    QString getProvisioningState() const;
    void setProvisioningState(const QString &provisioning_state);
    bool is_provisioning_state_Set() const;
    bool is_provisioning_state_Valid() const;

    OAIAzureBlob getSourceBlob() const;
    void setSourceBlob(const OAIAzureBlob &source_blob);
    bool is_source_blob_Set() const;
    bool is_source_blob_Valid() const;

    bool isSupportMultipleExtensions() const;
    void setSupportMultipleExtensions(const bool &support_multiple_extensions);
    bool is_support_multiple_extensions_Set() const;
    bool is_support_multiple_extensions_Valid() const;

    QString getVmOsType() const;
    void setVmOsType(const QString &vm_os_type);
    bool is_vm_os_type_Set() const;
    bool is_vm_os_type_Valid() const;

    bool isVmScaleSetEnabled() const;
    void setVmScaleSetEnabled(const bool &vm_scale_set_enabled);
    bool is_vm_scale_set_enabled_Set() const;
    bool is_vm_scale_set_enabled_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_compute_role;
    bool m_compute_role_isSet;
    bool m_compute_role_isValid;

    bool m_is_system_extension;
    bool m_is_system_extension_isSet;
    bool m_is_system_extension_isValid;

    QString m_provisioning_state;
    bool m_provisioning_state_isSet;
    bool m_provisioning_state_isValid;

    OAIAzureBlob m_source_blob;
    bool m_source_blob_isSet;
    bool m_source_blob_isValid;

    bool m_support_multiple_extensions;
    bool m_support_multiple_extensions_isSet;
    bool m_support_multiple_extensions_isValid;

    QString m_vm_os_type;
    bool m_vm_os_type_isSet;
    bool m_vm_os_type_isValid;

    bool m_vm_scale_set_enabled;
    bool m_vm_scale_set_enabled_isSet;
    bool m_vm_scale_set_enabled_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVMExtensionProperties)

#endif // OAIVMExtensionProperties_H
