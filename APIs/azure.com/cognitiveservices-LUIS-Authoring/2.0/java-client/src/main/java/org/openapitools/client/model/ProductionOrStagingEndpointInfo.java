/*
 * LUIS Authoring Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ProductionOrStagingEndpointInfo
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:11:40.225027-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ProductionOrStagingEndpointInfo {
  public static final String SERIALIZED_NAME_ASSIGNED_ENDPOINT_KEY = "assignedEndpointKey";
  @SerializedName(SERIALIZED_NAME_ASSIGNED_ENDPOINT_KEY)
  private String assignedEndpointKey;

  public static final String SERIALIZED_NAME_ENDPOINT_REGION = "endpointRegion";
  @SerializedName(SERIALIZED_NAME_ENDPOINT_REGION)
  private String endpointRegion;

  public static final String SERIALIZED_NAME_ENDPOINT_URL = "endpointUrl";
  @SerializedName(SERIALIZED_NAME_ENDPOINT_URL)
  private String endpointUrl;

  public static final String SERIALIZED_NAME_FAILED_REGIONS = "failedRegions";
  @SerializedName(SERIALIZED_NAME_FAILED_REGIONS)
  private String failedRegions;

  public static final String SERIALIZED_NAME_IS_STAGING = "isStaging";
  @SerializedName(SERIALIZED_NAME_IS_STAGING)
  private Boolean isStaging;

  public static final String SERIALIZED_NAME_PUBLISHED_DATE_TIME = "publishedDateTime";
  @SerializedName(SERIALIZED_NAME_PUBLISHED_DATE_TIME)
  private String publishedDateTime;

  public static final String SERIALIZED_NAME_REGION = "region";
  @SerializedName(SERIALIZED_NAME_REGION)
  private String region;

  public static final String SERIALIZED_NAME_VERSION_ID = "versionId";
  @SerializedName(SERIALIZED_NAME_VERSION_ID)
  private String versionId;

  public ProductionOrStagingEndpointInfo() {
  }

  public ProductionOrStagingEndpointInfo assignedEndpointKey(String assignedEndpointKey) {
    this.assignedEndpointKey = assignedEndpointKey;
    return this;
  }

  /**
   * The endpoint key.
   * @return assignedEndpointKey
   */
  @javax.annotation.Nullable
  public String getAssignedEndpointKey() {
    return assignedEndpointKey;
  }

  public void setAssignedEndpointKey(String assignedEndpointKey) {
    this.assignedEndpointKey = assignedEndpointKey;
  }


  public ProductionOrStagingEndpointInfo endpointRegion(String endpointRegion) {
    this.endpointRegion = endpointRegion;
    return this;
  }

  /**
   * The endpoint&#39;s region.
   * @return endpointRegion
   */
  @javax.annotation.Nullable
  public String getEndpointRegion() {
    return endpointRegion;
  }

  public void setEndpointRegion(String endpointRegion) {
    this.endpointRegion = endpointRegion;
  }


  public ProductionOrStagingEndpointInfo endpointUrl(String endpointUrl) {
    this.endpointUrl = endpointUrl;
    return this;
  }

  /**
   * The Runtime endpoint URL for this model version.
   * @return endpointUrl
   */
  @javax.annotation.Nullable
  public String getEndpointUrl() {
    return endpointUrl;
  }

  public void setEndpointUrl(String endpointUrl) {
    this.endpointUrl = endpointUrl;
  }


  public ProductionOrStagingEndpointInfo failedRegions(String failedRegions) {
    this.failedRegions = failedRegions;
    return this;
  }

  /**
   * Regions where publishing failed.
   * @return failedRegions
   */
  @javax.annotation.Nullable
  public String getFailedRegions() {
    return failedRegions;
  }

  public void setFailedRegions(String failedRegions) {
    this.failedRegions = failedRegions;
  }


  public ProductionOrStagingEndpointInfo isStaging(Boolean isStaging) {
    this.isStaging = isStaging;
    return this;
  }

  /**
   * Indicates if the staging slot should be used, instead of the Production one.
   * @return isStaging
   */
  @javax.annotation.Nullable
  public Boolean getIsStaging() {
    return isStaging;
  }

  public void setIsStaging(Boolean isStaging) {
    this.isStaging = isStaging;
  }


  public ProductionOrStagingEndpointInfo publishedDateTime(String publishedDateTime) {
    this.publishedDateTime = publishedDateTime;
    return this;
  }

  /**
   * Timestamp when was last published.
   * @return publishedDateTime
   */
  @javax.annotation.Nullable
  public String getPublishedDateTime() {
    return publishedDateTime;
  }

  public void setPublishedDateTime(String publishedDateTime) {
    this.publishedDateTime = publishedDateTime;
  }


  public ProductionOrStagingEndpointInfo region(String region) {
    this.region = region;
    return this;
  }

  /**
   * The target region that the application is published to.
   * @return region
   */
  @javax.annotation.Nullable
  public String getRegion() {
    return region;
  }

  public void setRegion(String region) {
    this.region = region;
  }


  public ProductionOrStagingEndpointInfo versionId(String versionId) {
    this.versionId = versionId;
    return this;
  }

  /**
   * The version ID to publish.
   * @return versionId
   */
  @javax.annotation.Nullable
  public String getVersionId() {
    return versionId;
  }

  public void setVersionId(String versionId) {
    this.versionId = versionId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProductionOrStagingEndpointInfo productionOrStagingEndpointInfo = (ProductionOrStagingEndpointInfo) o;
    return Objects.equals(this.assignedEndpointKey, productionOrStagingEndpointInfo.assignedEndpointKey) &&
        Objects.equals(this.endpointRegion, productionOrStagingEndpointInfo.endpointRegion) &&
        Objects.equals(this.endpointUrl, productionOrStagingEndpointInfo.endpointUrl) &&
        Objects.equals(this.failedRegions, productionOrStagingEndpointInfo.failedRegions) &&
        Objects.equals(this.isStaging, productionOrStagingEndpointInfo.isStaging) &&
        Objects.equals(this.publishedDateTime, productionOrStagingEndpointInfo.publishedDateTime) &&
        Objects.equals(this.region, productionOrStagingEndpointInfo.region) &&
        Objects.equals(this.versionId, productionOrStagingEndpointInfo.versionId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(assignedEndpointKey, endpointRegion, endpointUrl, failedRegions, isStaging, publishedDateTime, region, versionId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProductionOrStagingEndpointInfo {\n");
    sb.append("    assignedEndpointKey: ").append(toIndentedString(assignedEndpointKey)).append("\n");
    sb.append("    endpointRegion: ").append(toIndentedString(endpointRegion)).append("\n");
    sb.append("    endpointUrl: ").append(toIndentedString(endpointUrl)).append("\n");
    sb.append("    failedRegions: ").append(toIndentedString(failedRegions)).append("\n");
    sb.append("    isStaging: ").append(toIndentedString(isStaging)).append("\n");
    sb.append("    publishedDateTime: ").append(toIndentedString(publishedDateTime)).append("\n");
    sb.append("    region: ").append(toIndentedString(region)).append("\n");
    sb.append("    versionId: ").append(toIndentedString(versionId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("assignedEndpointKey");
    openapiFields.add("endpointRegion");
    openapiFields.add("endpointUrl");
    openapiFields.add("failedRegions");
    openapiFields.add("isStaging");
    openapiFields.add("publishedDateTime");
    openapiFields.add("region");
    openapiFields.add("versionId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ProductionOrStagingEndpointInfo
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ProductionOrStagingEndpointInfo.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ProductionOrStagingEndpointInfo is not found in the empty JSON string", ProductionOrStagingEndpointInfo.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ProductionOrStagingEndpointInfo.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ProductionOrStagingEndpointInfo` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("assignedEndpointKey") != null && !jsonObj.get("assignedEndpointKey").isJsonNull()) && !jsonObj.get("assignedEndpointKey").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `assignedEndpointKey` to be a primitive type in the JSON string but got `%s`", jsonObj.get("assignedEndpointKey").toString()));
      }
      if ((jsonObj.get("endpointRegion") != null && !jsonObj.get("endpointRegion").isJsonNull()) && !jsonObj.get("endpointRegion").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `endpointRegion` to be a primitive type in the JSON string but got `%s`", jsonObj.get("endpointRegion").toString()));
      }
      if ((jsonObj.get("endpointUrl") != null && !jsonObj.get("endpointUrl").isJsonNull()) && !jsonObj.get("endpointUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `endpointUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("endpointUrl").toString()));
      }
      if ((jsonObj.get("failedRegions") != null && !jsonObj.get("failedRegions").isJsonNull()) && !jsonObj.get("failedRegions").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `failedRegions` to be a primitive type in the JSON string but got `%s`", jsonObj.get("failedRegions").toString()));
      }
      if ((jsonObj.get("publishedDateTime") != null && !jsonObj.get("publishedDateTime").isJsonNull()) && !jsonObj.get("publishedDateTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `publishedDateTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("publishedDateTime").toString()));
      }
      if ((jsonObj.get("region") != null && !jsonObj.get("region").isJsonNull()) && !jsonObj.get("region").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `region` to be a primitive type in the JSON string but got `%s`", jsonObj.get("region").toString()));
      }
      if ((jsonObj.get("versionId") != null && !jsonObj.get("versionId").isJsonNull()) && !jsonObj.get("versionId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `versionId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("versionId").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ProductionOrStagingEndpointInfo.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ProductionOrStagingEndpointInfo' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ProductionOrStagingEndpointInfo> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ProductionOrStagingEndpointInfo.class));

       return (TypeAdapter<T>) new TypeAdapter<ProductionOrStagingEndpointInfo>() {
           @Override
           public void write(JsonWriter out, ProductionOrStagingEndpointInfo value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ProductionOrStagingEndpointInfo read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ProductionOrStagingEndpointInfo given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ProductionOrStagingEndpointInfo
   * @throws IOException if the JSON string is invalid with respect to ProductionOrStagingEndpointInfo
   */
  public static ProductionOrStagingEndpointInfo fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ProductionOrStagingEndpointInfo.class);
  }

  /**
   * Convert an instance of ProductionOrStagingEndpointInfo to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

