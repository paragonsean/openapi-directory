# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.entity_prediction import EntityPrediction
from openapi_server.models.intent_prediction import IntentPrediction
from openapi_server import util


class IntentsSuggestionExample(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, entity_predictions: List[EntityPrediction]=None, intent_predictions: List[IntentPrediction]=None, text: str=None, tokenized_text: List[str]=None):
        """IntentsSuggestionExample - a model defined in OpenAPI

        :param entity_predictions: The entity_predictions of this IntentsSuggestionExample.
        :param intent_predictions: The intent_predictions of this IntentsSuggestionExample.
        :param text: The text of this IntentsSuggestionExample.
        :param tokenized_text: The tokenized_text of this IntentsSuggestionExample.
        """
        self.openapi_types = {
            'entity_predictions': List[EntityPrediction],
            'intent_predictions': List[IntentPrediction],
            'text': str,
            'tokenized_text': List[str]
        }

        self.attribute_map = {
            'entity_predictions': 'entityPredictions',
            'intent_predictions': 'intentPredictions',
            'text': 'text',
            'tokenized_text': 'tokenizedText'
        }

        self._entity_predictions = entity_predictions
        self._intent_predictions = intent_predictions
        self._text = text
        self._tokenized_text = tokenized_text

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IntentsSuggestionExample':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IntentsSuggestionExample of this IntentsSuggestionExample.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def entity_predictions(self):
        """Gets the entity_predictions of this IntentsSuggestionExample.

        Predicted/suggested entities.

        :return: The entity_predictions of this IntentsSuggestionExample.
        :rtype: List[EntityPrediction]
        """
        return self._entity_predictions

    @entity_predictions.setter
    def entity_predictions(self, entity_predictions):
        """Sets the entity_predictions of this IntentsSuggestionExample.

        Predicted/suggested entities.

        :param entity_predictions: The entity_predictions of this IntentsSuggestionExample.
        :type entity_predictions: List[EntityPrediction]
        """

        self._entity_predictions = entity_predictions

    @property
    def intent_predictions(self):
        """Gets the intent_predictions of this IntentsSuggestionExample.

        Predicted/suggested intents.

        :return: The intent_predictions of this IntentsSuggestionExample.
        :rtype: List[IntentPrediction]
        """
        return self._intent_predictions

    @intent_predictions.setter
    def intent_predictions(self, intent_predictions):
        """Sets the intent_predictions of this IntentsSuggestionExample.

        Predicted/suggested intents.

        :param intent_predictions: The intent_predictions of this IntentsSuggestionExample.
        :type intent_predictions: List[IntentPrediction]
        """

        self._intent_predictions = intent_predictions

    @property
    def text(self):
        """Gets the text of this IntentsSuggestionExample.

        The utterance. For example, \"What's the weather like in seattle?\"

        :return: The text of this IntentsSuggestionExample.
        :rtype: str
        """
        return self._text

    @text.setter
    def text(self, text):
        """Sets the text of this IntentsSuggestionExample.

        The utterance. For example, \"What's the weather like in seattle?\"

        :param text: The text of this IntentsSuggestionExample.
        :type text: str
        """

        self._text = text

    @property
    def tokenized_text(self):
        """Gets the tokenized_text of this IntentsSuggestionExample.

        The tokenized utterance.

        :return: The tokenized_text of this IntentsSuggestionExample.
        :rtype: List[str]
        """
        return self._tokenized_text

    @tokenized_text.setter
    def tokenized_text(self, tokenized_text):
        """Sets the tokenized_text of this IntentsSuggestionExample.

        The tokenized utterance.

        :param tokenized_text: The tokenized_text of this IntentsSuggestionExample.
        :type tokenized_text: List[str]
        """

        self._tokenized_text = tokenized_text
