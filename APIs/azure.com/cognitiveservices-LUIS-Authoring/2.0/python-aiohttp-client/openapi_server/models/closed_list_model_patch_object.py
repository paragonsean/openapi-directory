# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.word_list_object import WordListObject
from openapi_server import util


class ClosedListModelPatchObject(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, sub_lists: List[WordListObject]=None):
        """ClosedListModelPatchObject - a model defined in OpenAPI

        :param sub_lists: The sub_lists of this ClosedListModelPatchObject.
        """
        self.openapi_types = {
            'sub_lists': List[WordListObject]
        }

        self.attribute_map = {
            'sub_lists': 'subLists'
        }

        self._sub_lists = sub_lists

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ClosedListModelPatchObject':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ClosedListModelPatchObject of this ClosedListModelPatchObject.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def sub_lists(self):
        """Gets the sub_lists of this ClosedListModelPatchObject.

        Sublists to add.

        :return: The sub_lists of this ClosedListModelPatchObject.
        :rtype: List[WordListObject]
        """
        return self._sub_lists

    @sub_lists.setter
    def sub_lists(self, sub_lists):
        """Sets the sub_lists of this ClosedListModelPatchObject.

        Sublists to add.

        :param sub_lists: The sub_lists of this ClosedListModelPatchObject.
        :type sub_lists: List[WordListObject]
        """

        self._sub_lists = sub_lists
