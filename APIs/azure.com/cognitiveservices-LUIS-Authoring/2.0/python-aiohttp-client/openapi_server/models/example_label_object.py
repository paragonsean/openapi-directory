# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.entity_label_object import EntityLabelObject
from openapi_server import util


class ExampleLabelObject(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, entity_labels: List[EntityLabelObject]=None, intent_name: str=None, text: str=None):
        """ExampleLabelObject - a model defined in OpenAPI

        :param entity_labels: The entity_labels of this ExampleLabelObject.
        :param intent_name: The intent_name of this ExampleLabelObject.
        :param text: The text of this ExampleLabelObject.
        """
        self.openapi_types = {
            'entity_labels': List[EntityLabelObject],
            'intent_name': str,
            'text': str
        }

        self.attribute_map = {
            'entity_labels': 'entityLabels',
            'intent_name': 'intentName',
            'text': 'text'
        }

        self._entity_labels = entity_labels
        self._intent_name = intent_name
        self._text = text

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ExampleLabelObject':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ExampleLabelObject of this ExampleLabelObject.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def entity_labels(self):
        """Gets the entity_labels of this ExampleLabelObject.

        The identified entities within the example utterance.

        :return: The entity_labels of this ExampleLabelObject.
        :rtype: List[EntityLabelObject]
        """
        return self._entity_labels

    @entity_labels.setter
    def entity_labels(self, entity_labels):
        """Sets the entity_labels of this ExampleLabelObject.

        The identified entities within the example utterance.

        :param entity_labels: The entity_labels of this ExampleLabelObject.
        :type entity_labels: List[EntityLabelObject]
        """

        self._entity_labels = entity_labels

    @property
    def intent_name(self):
        """Gets the intent_name of this ExampleLabelObject.

        The identified intent representing the example utterance.

        :return: The intent_name of this ExampleLabelObject.
        :rtype: str
        """
        return self._intent_name

    @intent_name.setter
    def intent_name(self, intent_name):
        """Sets the intent_name of this ExampleLabelObject.

        The identified intent representing the example utterance.

        :param intent_name: The intent_name of this ExampleLabelObject.
        :type intent_name: str
        """

        self._intent_name = intent_name

    @property
    def text(self):
        """Gets the text of this ExampleLabelObject.

        The example utterance.

        :return: The text of this ExampleLabelObject.
        :rtype: str
        """
        return self._text

    @text.setter
    def text(self, text):
        """Sets the text of this ExampleLabelObject.

        The example utterance.

        :param text: The text of this ExampleLabelObject.
        :type text: str
        """

        self._text = text
