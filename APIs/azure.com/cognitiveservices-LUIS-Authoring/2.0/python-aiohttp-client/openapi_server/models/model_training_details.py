# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.training_status import TrainingStatus
from openapi_server import util


class ModelTrainingDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, example_count: int=None, failure_reason: str=None, status: TrainingStatus=None, status_id: int=None, training_date_time: datetime=None):
        """ModelTrainingDetails - a model defined in OpenAPI

        :param example_count: The example_count of this ModelTrainingDetails.
        :param failure_reason: The failure_reason of this ModelTrainingDetails.
        :param status: The status of this ModelTrainingDetails.
        :param status_id: The status_id of this ModelTrainingDetails.
        :param training_date_time: The training_date_time of this ModelTrainingDetails.
        """
        self.openapi_types = {
            'example_count': int,
            'failure_reason': str,
            'status': TrainingStatus,
            'status_id': int,
            'training_date_time': datetime
        }

        self.attribute_map = {
            'example_count': 'exampleCount',
            'failure_reason': 'failureReason',
            'status': 'status',
            'status_id': 'statusId',
            'training_date_time': 'trainingDateTime'
        }

        self._example_count = example_count
        self._failure_reason = failure_reason
        self._status = status
        self._status_id = status_id
        self._training_date_time = training_date_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ModelTrainingDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ModelTrainingDetails of this ModelTrainingDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def example_count(self):
        """Gets the example_count of this ModelTrainingDetails.

        The count of examples used to train the model.

        :return: The example_count of this ModelTrainingDetails.
        :rtype: int
        """
        return self._example_count

    @example_count.setter
    def example_count(self, example_count):
        """Sets the example_count of this ModelTrainingDetails.

        The count of examples used to train the model.

        :param example_count: The example_count of this ModelTrainingDetails.
        :type example_count: int
        """

        self._example_count = example_count

    @property
    def failure_reason(self):
        """Gets the failure_reason of this ModelTrainingDetails.

        Reason for the training failure.

        :return: The failure_reason of this ModelTrainingDetails.
        :rtype: str
        """
        return self._failure_reason

    @failure_reason.setter
    def failure_reason(self, failure_reason):
        """Sets the failure_reason of this ModelTrainingDetails.

        Reason for the training failure.

        :param failure_reason: The failure_reason of this ModelTrainingDetails.
        :type failure_reason: str
        """

        self._failure_reason = failure_reason

    @property
    def status(self):
        """Gets the status of this ModelTrainingDetails.


        :return: The status of this ModelTrainingDetails.
        :rtype: TrainingStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this ModelTrainingDetails.


        :param status: The status of this ModelTrainingDetails.
        :type status: TrainingStatus
        """

        self._status = status

    @property
    def status_id(self):
        """Gets the status_id of this ModelTrainingDetails.

        The train request status ID.

        :return: The status_id of this ModelTrainingDetails.
        :rtype: int
        """
        return self._status_id

    @status_id.setter
    def status_id(self, status_id):
        """Sets the status_id of this ModelTrainingDetails.

        The train request status ID.

        :param status_id: The status_id of this ModelTrainingDetails.
        :type status_id: int
        """

        self._status_id = status_id

    @property
    def training_date_time(self):
        """Gets the training_date_time of this ModelTrainingDetails.

        When the model was trained.

        :return: The training_date_time of this ModelTrainingDetails.
        :rtype: datetime
        """
        return self._training_date_time

    @training_date_time.setter
    def training_date_time(self, training_date_time):
        """Sets the training_date_time of this ModelTrainingDetails.

        When the model was trained.

        :param training_date_time: The training_date_time of this ModelTrainingDetails.
        :type training_date_time: datetime
        """

        self._training_date_time = training_date_time
