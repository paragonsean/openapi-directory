# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.label_example_response import LabelExampleResponse
from openapi_server.models.operation_status import OperationStatus
from openapi_server import util


class BatchLabelExample(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, error: OperationStatus=None, has_error: bool=None, value: LabelExampleResponse=None):
        """BatchLabelExample - a model defined in OpenAPI

        :param error: The error of this BatchLabelExample.
        :param has_error: The has_error of this BatchLabelExample.
        :param value: The value of this BatchLabelExample.
        """
        self.openapi_types = {
            'error': OperationStatus,
            'has_error': bool,
            'value': LabelExampleResponse
        }

        self.attribute_map = {
            'error': 'error',
            'has_error': 'hasError',
            'value': 'value'
        }

        self._error = error
        self._has_error = has_error
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BatchLabelExample':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BatchLabelExample of this BatchLabelExample.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def error(self):
        """Gets the error of this BatchLabelExample.


        :return: The error of this BatchLabelExample.
        :rtype: OperationStatus
        """
        return self._error

    @error.setter
    def error(self, error):
        """Sets the error of this BatchLabelExample.


        :param error: The error of this BatchLabelExample.
        :type error: OperationStatus
        """

        self._error = error

    @property
    def has_error(self):
        """Gets the has_error of this BatchLabelExample.


        :return: The has_error of this BatchLabelExample.
        :rtype: bool
        """
        return self._has_error

    @has_error.setter
    def has_error(self, has_error):
        """Sets the has_error of this BatchLabelExample.


        :param has_error: The has_error of this BatchLabelExample.
        :type has_error: bool
        """

        self._has_error = has_error

    @property
    def value(self):
        """Gets the value of this BatchLabelExample.


        :return: The value of this BatchLabelExample.
        :rtype: LabelExampleResponse
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this BatchLabelExample.


        :param value: The value of this BatchLabelExample.
        :type value: LabelExampleResponse
        """

        self._value = value
