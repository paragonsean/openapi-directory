# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UserAccessList(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, emails: List[str]=None, owner: str=None):
        """UserAccessList - a model defined in OpenAPI

        :param emails: The emails of this UserAccessList.
        :param owner: The owner of this UserAccessList.
        """
        self.openapi_types = {
            'emails': List[str],
            'owner': str
        }

        self.attribute_map = {
            'emails': 'emails',
            'owner': 'owner'
        }

        self._emails = emails
        self._owner = owner

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UserAccessList':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UserAccessList of this UserAccessList.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def emails(self):
        """Gets the emails of this UserAccessList.


        :return: The emails of this UserAccessList.
        :rtype: List[str]
        """
        return self._emails

    @emails.setter
    def emails(self, emails):
        """Sets the emails of this UserAccessList.


        :param emails: The emails of this UserAccessList.
        :type emails: List[str]
        """

        self._emails = emails

    @property
    def owner(self):
        """Gets the owner of this UserAccessList.

        The email address of owner of the application.

        :return: The owner of this UserAccessList.
        :rtype: str
        """
        return self._owner

    @owner.setter
    def owner(self, owner):
        """Sets the owner of this UserAccessList.

        The email address of owner of the application.

        :param owner: The owner of this UserAccessList.
        :type owner: str
        """

        self._owner = owner
