/**
 * LUIS Authoring Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPatternUpdateObject.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPatternUpdateObject::OAIPatternUpdateObject(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPatternUpdateObject::OAIPatternUpdateObject() {
    this->initializeModel();
}

OAIPatternUpdateObject::~OAIPatternUpdateObject() {}

void OAIPatternUpdateObject::initializeModel() {

    m_is_active_isSet = false;
    m_is_active_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_pattern_isSet = false;
    m_pattern_isValid = false;
}

void OAIPatternUpdateObject::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPatternUpdateObject::fromJsonObject(QJsonObject json) {

    m_is_active_isValid = ::OpenAPI::fromJsonValue(m_is_active, json[QString("isActive")]);
    m_is_active_isSet = !json[QString("isActive")].isNull() && m_is_active_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_pattern_isValid = ::OpenAPI::fromJsonValue(m_pattern, json[QString("pattern")]);
    m_pattern_isSet = !json[QString("pattern")].isNull() && m_pattern_isValid;
}

QString OAIPatternUpdateObject::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPatternUpdateObject::asJsonObject() const {
    QJsonObject obj;
    if (m_is_active_isSet) {
        obj.insert(QString("isActive"), ::OpenAPI::toJsonValue(m_is_active));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_pattern_isSet) {
        obj.insert(QString("pattern"), ::OpenAPI::toJsonValue(m_pattern));
    }
    return obj;
}

bool OAIPatternUpdateObject::isIsActive() const {
    return m_is_active;
}
void OAIPatternUpdateObject::setIsActive(const bool &is_active) {
    m_is_active = is_active;
    m_is_active_isSet = true;
}

bool OAIPatternUpdateObject::is_is_active_Set() const{
    return m_is_active_isSet;
}

bool OAIPatternUpdateObject::is_is_active_Valid() const{
    return m_is_active_isValid;
}

QString OAIPatternUpdateObject::getName() const {
    return m_name;
}
void OAIPatternUpdateObject::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIPatternUpdateObject::is_name_Set() const{
    return m_name_isSet;
}

bool OAIPatternUpdateObject::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIPatternUpdateObject::getPattern() const {
    return m_pattern;
}
void OAIPatternUpdateObject::setPattern(const QString &pattern) {
    m_pattern = pattern;
    m_pattern_isSet = true;
}

bool OAIPatternUpdateObject::is_pattern_Set() const{
    return m_pattern_isSet;
}

bool OAIPatternUpdateObject::is_pattern_Valid() const{
    return m_pattern_isValid;
}

bool OAIPatternUpdateObject::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_is_active_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pattern_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPatternUpdateObject::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
