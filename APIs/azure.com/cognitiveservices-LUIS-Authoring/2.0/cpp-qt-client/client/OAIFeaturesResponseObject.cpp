/**
 * LUIS Authoring Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFeaturesResponseObject.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFeaturesResponseObject::OAIFeaturesResponseObject(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFeaturesResponseObject::OAIFeaturesResponseObject() {
    this->initializeModel();
}

OAIFeaturesResponseObject::~OAIFeaturesResponseObject() {}

void OAIFeaturesResponseObject::initializeModel() {

    m_pattern_features_isSet = false;
    m_pattern_features_isValid = false;

    m_phraselist_features_isSet = false;
    m_phraselist_features_isValid = false;
}

void OAIFeaturesResponseObject::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFeaturesResponseObject::fromJsonObject(QJsonObject json) {

    m_pattern_features_isValid = ::OpenAPI::fromJsonValue(m_pattern_features, json[QString("patternFeatures")]);
    m_pattern_features_isSet = !json[QString("patternFeatures")].isNull() && m_pattern_features_isValid;

    m_phraselist_features_isValid = ::OpenAPI::fromJsonValue(m_phraselist_features, json[QString("phraselistFeatures")]);
    m_phraselist_features_isSet = !json[QString("phraselistFeatures")].isNull() && m_phraselist_features_isValid;
}

QString OAIFeaturesResponseObject::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFeaturesResponseObject::asJsonObject() const {
    QJsonObject obj;
    if (m_pattern_features.size() > 0) {
        obj.insert(QString("patternFeatures"), ::OpenAPI::toJsonValue(m_pattern_features));
    }
    if (m_phraselist_features.size() > 0) {
        obj.insert(QString("phraselistFeatures"), ::OpenAPI::toJsonValue(m_phraselist_features));
    }
    return obj;
}

QList<OAIPatternFeatureInfo> OAIFeaturesResponseObject::getPatternFeatures() const {
    return m_pattern_features;
}
void OAIFeaturesResponseObject::setPatternFeatures(const QList<OAIPatternFeatureInfo> &pattern_features) {
    m_pattern_features = pattern_features;
    m_pattern_features_isSet = true;
}

bool OAIFeaturesResponseObject::is_pattern_features_Set() const{
    return m_pattern_features_isSet;
}

bool OAIFeaturesResponseObject::is_pattern_features_Valid() const{
    return m_pattern_features_isValid;
}

QList<OAIPhraseListFeatureInfo> OAIFeaturesResponseObject::getPhraselistFeatures() const {
    return m_phraselist_features;
}
void OAIFeaturesResponseObject::setPhraselistFeatures(const QList<OAIPhraseListFeatureInfo> &phraselist_features) {
    m_phraselist_features = phraselist_features;
    m_phraselist_features_isSet = true;
}

bool OAIFeaturesResponseObject::is_phraselist_features_Set() const{
    return m_phraselist_features_isSet;
}

bool OAIFeaturesResponseObject::is_phraselist_features_Valid() const{
    return m_phraselist_features_isValid;
}

bool OAIFeaturesResponseObject::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_pattern_features.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_phraselist_features.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFeaturesResponseObject::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
