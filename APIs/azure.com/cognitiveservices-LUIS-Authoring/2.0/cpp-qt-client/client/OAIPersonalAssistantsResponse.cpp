/**
 * LUIS Authoring Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPersonalAssistantsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPersonalAssistantsResponse::OAIPersonalAssistantsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPersonalAssistantsResponse::OAIPersonalAssistantsResponse() {
    this->initializeModel();
}

OAIPersonalAssistantsResponse::~OAIPersonalAssistantsResponse() {}

void OAIPersonalAssistantsResponse::initializeModel() {

    m_endpoint_keys_isSet = false;
    m_endpoint_keys_isValid = false;

    m_endpoint_urls_isSet = false;
    m_endpoint_urls_isValid = false;
}

void OAIPersonalAssistantsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPersonalAssistantsResponse::fromJsonObject(QJsonObject json) {

    m_endpoint_keys_isValid = ::OpenAPI::fromJsonValue(m_endpoint_keys, json[QString("endpointKeys")]);
    m_endpoint_keys_isSet = !json[QString("endpointKeys")].isNull() && m_endpoint_keys_isValid;

    m_endpoint_urls_isValid = ::OpenAPI::fromJsonValue(m_endpoint_urls, json[QString("endpointUrls")]);
    m_endpoint_urls_isSet = !json[QString("endpointUrls")].isNull() && m_endpoint_urls_isValid;
}

QString OAIPersonalAssistantsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPersonalAssistantsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_endpoint_keys.size() > 0) {
        obj.insert(QString("endpointKeys"), ::OpenAPI::toJsonValue(m_endpoint_keys));
    }
    if (m_endpoint_urls.size() > 0) {
        obj.insert(QString("endpointUrls"), ::OpenAPI::toJsonValue(m_endpoint_urls));
    }
    return obj;
}

QList<QString> OAIPersonalAssistantsResponse::getEndpointKeys() const {
    return m_endpoint_keys;
}
void OAIPersonalAssistantsResponse::setEndpointKeys(const QList<QString> &endpoint_keys) {
    m_endpoint_keys = endpoint_keys;
    m_endpoint_keys_isSet = true;
}

bool OAIPersonalAssistantsResponse::is_endpoint_keys_Set() const{
    return m_endpoint_keys_isSet;
}

bool OAIPersonalAssistantsResponse::is_endpoint_keys_Valid() const{
    return m_endpoint_keys_isValid;
}

QMap<QString, QString> OAIPersonalAssistantsResponse::getEndpointUrls() const {
    return m_endpoint_urls;
}
void OAIPersonalAssistantsResponse::setEndpointUrls(const QMap<QString, QString> &endpoint_urls) {
    m_endpoint_urls = endpoint_urls;
    m_endpoint_urls_isSet = true;
}

bool OAIPersonalAssistantsResponse::is_endpoint_urls_Set() const{
    return m_endpoint_urls_isSet;
}

bool OAIPersonalAssistantsResponse::is_endpoint_urls_Valid() const{
    return m_endpoint_urls_isValid;
}

bool OAIPersonalAssistantsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_endpoint_keys.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_endpoint_urls.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPersonalAssistantsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
