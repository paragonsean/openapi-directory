/**
 * LUIS Authoring Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITrainingStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITrainingStatus::OAITrainingStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITrainingStatus::OAITrainingStatus() {
    this->initializeModel();
}

OAITrainingStatus::~OAITrainingStatus() {}

void OAITrainingStatus::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAITrainingStatus::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAITrainingStatus::fromJson(QString jsonString) {
    
    if ( jsonString.compare("Queued", Qt::CaseInsensitive) == 0) {
        m_value = eOAITrainingStatus::QUEUED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("InProgress", Qt::CaseInsensitive) == 0) {
        m_value = eOAITrainingStatus::INPROGRESS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("UpToDate", Qt::CaseInsensitive) == 0) {
        m_value = eOAITrainingStatus::UPTODATE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Fail", Qt::CaseInsensitive) == 0) {
        m_value = eOAITrainingStatus::FAIL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Success", Qt::CaseInsensitive) == 0) {
        m_value = eOAITrainingStatus::SUCCESS;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAITrainingStatus::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAITrainingStatus::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAITrainingStatus::QUEUED:
            val = "Queued";
            break;
        case eOAITrainingStatus::INPROGRESS:
            val = "InProgress";
            break;
        case eOAITrainingStatus::UPTODATE:
            val = "UpToDate";
            break;
        case eOAITrainingStatus::FAIL:
            val = "Fail";
            break;
        case eOAITrainingStatus::SUCCESS:
            val = "Success";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAITrainingStatus::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAITrainingStatus::eOAITrainingStatus OAITrainingStatus::getValue() const {
    return m_value;
}

void OAITrainingStatus::setValue(const OAITrainingStatus::eOAITrainingStatus& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAITrainingStatus::isSet() const {
    
    return m_value_isSet;
}

bool OAITrainingStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
