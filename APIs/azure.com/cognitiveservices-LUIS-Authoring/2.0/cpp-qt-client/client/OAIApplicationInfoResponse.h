/**
 * LUIS Authoring Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIApplicationInfoResponse.h
 *
 * Response containing the Application Info.
 */

#ifndef OAIApplicationInfoResponse_H
#define OAIApplicationInfoResponse_H

#include <QJsonObject>

#include "OAIObject.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIApplicationInfoResponse : public OAIObject {
public:
    OAIApplicationInfoResponse();
    OAIApplicationInfoResponse(QString json);
    ~OAIApplicationInfoResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getActiveVersion() const;
    void setActiveVersion(const QString &active_version);
    bool is_active_version_Set() const;
    bool is_active_version_Valid() const;

    QString getCreatedDateTime() const;
    void setCreatedDateTime(const QString &created_date_time);
    bool is_created_date_time_Set() const;
    bool is_created_date_time_Valid() const;

    QString getCulture() const;
    void setCulture(const QString &culture);
    bool is_culture_Set() const;
    bool is_culture_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getDomain() const;
    void setDomain(const QString &domain);
    bool is_domain_Set() const;
    bool is_domain_Valid() const;

    qint32 getEndpointHitsCount() const;
    void setEndpointHitsCount(const qint32 &endpoint_hits_count);
    bool is_endpoint_hits_count_Set() const;
    bool is_endpoint_hits_count_Valid() const;

    OAIObject getEndpoints() const;
    void setEndpoints(const OAIObject &endpoints);
    bool is_endpoints_Set() const;
    bool is_endpoints_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getUsageScenario() const;
    void setUsageScenario(const QString &usage_scenario);
    bool is_usage_scenario_Set() const;
    bool is_usage_scenario_Valid() const;

    qint32 getVersionsCount() const;
    void setVersionsCount(const qint32 &versions_count);
    bool is_versions_count_Set() const;
    bool is_versions_count_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_active_version;
    bool m_active_version_isSet;
    bool m_active_version_isValid;

    QString m_created_date_time;
    bool m_created_date_time_isSet;
    bool m_created_date_time_isValid;

    QString m_culture;
    bool m_culture_isSet;
    bool m_culture_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_domain;
    bool m_domain_isSet;
    bool m_domain_isValid;

    qint32 m_endpoint_hits_count;
    bool m_endpoint_hits_count_isSet;
    bool m_endpoint_hits_count_isValid;

    OAIObject m_endpoints;
    bool m_endpoints_isSet;
    bool m_endpoints_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_usage_scenario;
    bool m_usage_scenario_isSet;
    bool m_usage_scenario_isValid;

    qint32 m_versions_count;
    bool m_versions_count_isSet;
    bool m_versions_count_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIApplicationInfoResponse)

#endif // OAIApplicationInfoResponse_H
