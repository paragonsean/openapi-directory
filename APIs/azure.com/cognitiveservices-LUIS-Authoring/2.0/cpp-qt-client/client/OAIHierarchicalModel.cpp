/**
 * LUIS Authoring Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIHierarchicalModel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIHierarchicalModel::OAIHierarchicalModel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIHierarchicalModel::OAIHierarchicalModel() {
    this->initializeModel();
}

OAIHierarchicalModel::~OAIHierarchicalModel() {}

void OAIHierarchicalModel::initializeModel() {

    m_children_isSet = false;
    m_children_isValid = false;

    m_inherits_isSet = false;
    m_inherits_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_roles_isSet = false;
    m_roles_isValid = false;
}

void OAIHierarchicalModel::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIHierarchicalModel::fromJsonObject(QJsonObject json) {

    m_children_isValid = ::OpenAPI::fromJsonValue(m_children, json[QString("children")]);
    m_children_isSet = !json[QString("children")].isNull() && m_children_isValid;

    m_inherits_isValid = ::OpenAPI::fromJsonValue(m_inherits, json[QString("inherits")]);
    m_inherits_isSet = !json[QString("inherits")].isNull() && m_inherits_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_roles_isValid = ::OpenAPI::fromJsonValue(m_roles, json[QString("roles")]);
    m_roles_isSet = !json[QString("roles")].isNull() && m_roles_isValid;
}

QString OAIHierarchicalModel::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIHierarchicalModel::asJsonObject() const {
    QJsonObject obj;
    if (m_children.size() > 0) {
        obj.insert(QString("children"), ::OpenAPI::toJsonValue(m_children));
    }
    if (m_inherits.isSet()) {
        obj.insert(QString("inherits"), ::OpenAPI::toJsonValue(m_inherits));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_roles.size() > 0) {
        obj.insert(QString("roles"), ::OpenAPI::toJsonValue(m_roles));
    }
    return obj;
}

QList<QString> OAIHierarchicalModel::getChildren() const {
    return m_children;
}
void OAIHierarchicalModel::setChildren(const QList<QString> &children) {
    m_children = children;
    m_children_isSet = true;
}

bool OAIHierarchicalModel::is_children_Set() const{
    return m_children_isSet;
}

bool OAIHierarchicalModel::is_children_Valid() const{
    return m_children_isValid;
}

OAIPrebuiltDomainObject OAIHierarchicalModel::getInherits() const {
    return m_inherits;
}
void OAIHierarchicalModel::setInherits(const OAIPrebuiltDomainObject &inherits) {
    m_inherits = inherits;
    m_inherits_isSet = true;
}

bool OAIHierarchicalModel::is_inherits_Set() const{
    return m_inherits_isSet;
}

bool OAIHierarchicalModel::is_inherits_Valid() const{
    return m_inherits_isValid;
}

QString OAIHierarchicalModel::getName() const {
    return m_name;
}
void OAIHierarchicalModel::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIHierarchicalModel::is_name_Set() const{
    return m_name_isSet;
}

bool OAIHierarchicalModel::is_name_Valid() const{
    return m_name_isValid;
}

QList<QString> OAIHierarchicalModel::getRoles() const {
    return m_roles;
}
void OAIHierarchicalModel::setRoles(const QList<QString> &roles) {
    m_roles = roles;
    m_roles_isSet = true;
}

bool OAIHierarchicalModel::is_roles_Set() const{
    return m_roles_isSet;
}

bool OAIHierarchicalModel::is_roles_Valid() const{
    return m_roles_isValid;
}

bool OAIHierarchicalModel::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_children.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_inherits.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_roles.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIHierarchicalModel::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
