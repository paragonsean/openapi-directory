/**
 * LUIS Authoring Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EntityLabelObject from './EntityLabelObject';

/**
 * The ExampleLabelObject model module.
 * @module model/ExampleLabelObject
 * @version 2.0
 */
class ExampleLabelObject {
    /**
     * Constructs a new <code>ExampleLabelObject</code>.
     * A labeled example utterance.
     * @alias module:model/ExampleLabelObject
     */
    constructor() { 
        
        ExampleLabelObject.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ExampleLabelObject</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ExampleLabelObject} obj Optional instance to populate.
     * @return {module:model/ExampleLabelObject} The populated <code>ExampleLabelObject</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ExampleLabelObject();

            if (data.hasOwnProperty('entityLabels')) {
                obj['entityLabels'] = ApiClient.convertToType(data['entityLabels'], [EntityLabelObject]);
            }
            if (data.hasOwnProperty('intentName')) {
                obj['intentName'] = ApiClient.convertToType(data['intentName'], 'String');
            }
            if (data.hasOwnProperty('text')) {
                obj['text'] = ApiClient.convertToType(data['text'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ExampleLabelObject</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ExampleLabelObject</code>.
     */
    static validateJSON(data) {
        if (data['entityLabels']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['entityLabels'])) {
                throw new Error("Expected the field `entityLabels` to be an array in the JSON data but got " + data['entityLabels']);
            }
            // validate the optional field `entityLabels` (array)
            for (const item of data['entityLabels']) {
                EntityLabelObject.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['intentName'] && !(typeof data['intentName'] === 'string' || data['intentName'] instanceof String)) {
            throw new Error("Expected the field `intentName` to be a primitive type in the JSON string but got " + data['intentName']);
        }
        // ensure the json data is a string
        if (data['text'] && !(typeof data['text'] === 'string' || data['text'] instanceof String)) {
            throw new Error("Expected the field `text` to be a primitive type in the JSON string but got " + data['text']);
        }

        return true;
    }


}



/**
 * The identified entities within the example utterance.
 * @member {Array.<module:model/EntityLabelObject>} entityLabels
 */
ExampleLabelObject.prototype['entityLabels'] = undefined;

/**
 * The identified intent representing the example utterance.
 * @member {String} intentName
 */
ExampleLabelObject.prototype['intentName'] = undefined;

/**
 * The example utterance.
 * @member {String} text
 */
ExampleLabelObject.prototype['text'] = undefined;






export default ExampleLabelObject;

