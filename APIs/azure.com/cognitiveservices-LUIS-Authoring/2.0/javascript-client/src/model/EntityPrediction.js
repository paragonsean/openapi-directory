/**
 * LUIS Authoring Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The EntityPrediction model module.
 * @module model/EntityPrediction
 * @version 2.0
 */
class EntityPrediction {
    /**
     * Constructs a new <code>EntityPrediction</code>.
     * A suggested entity.
     * @alias module:model/EntityPrediction
     * @param endTokenIndex {Number} The index within the utterance where the extracted entity ends.
     * @param entityName {String} The entity's name
     * @param phrase {String} The actual token(s) that comprise the entity.
     * @param startTokenIndex {Number} The index within the utterance where the extracted entity starts.
     */
    constructor(endTokenIndex, entityName, phrase, startTokenIndex) { 
        
        EntityPrediction.initialize(this, endTokenIndex, entityName, phrase, startTokenIndex);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, endTokenIndex, entityName, phrase, startTokenIndex) { 
        obj['endTokenIndex'] = endTokenIndex;
        obj['entityName'] = entityName;
        obj['phrase'] = phrase;
        obj['startTokenIndex'] = startTokenIndex;
    }

    /**
     * Constructs a <code>EntityPrediction</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EntityPrediction} obj Optional instance to populate.
     * @return {module:model/EntityPrediction} The populated <code>EntityPrediction</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EntityPrediction();

            if (data.hasOwnProperty('endTokenIndex')) {
                obj['endTokenIndex'] = ApiClient.convertToType(data['endTokenIndex'], 'Number');
            }
            if (data.hasOwnProperty('entityName')) {
                obj['entityName'] = ApiClient.convertToType(data['entityName'], 'String');
            }
            if (data.hasOwnProperty('phrase')) {
                obj['phrase'] = ApiClient.convertToType(data['phrase'], 'String');
            }
            if (data.hasOwnProperty('startTokenIndex')) {
                obj['startTokenIndex'] = ApiClient.convertToType(data['startTokenIndex'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EntityPrediction</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EntityPrediction</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of EntityPrediction.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['entityName'] && !(typeof data['entityName'] === 'string' || data['entityName'] instanceof String)) {
            throw new Error("Expected the field `entityName` to be a primitive type in the JSON string but got " + data['entityName']);
        }
        // ensure the json data is a string
        if (data['phrase'] && !(typeof data['phrase'] === 'string' || data['phrase'] instanceof String)) {
            throw new Error("Expected the field `phrase` to be a primitive type in the JSON string but got " + data['phrase']);
        }

        return true;
    }


}

EntityPrediction.RequiredProperties = ["endTokenIndex", "entityName", "phrase", "startTokenIndex"];

/**
 * The index within the utterance where the extracted entity ends.
 * @member {Number} endTokenIndex
 */
EntityPrediction.prototype['endTokenIndex'] = undefined;

/**
 * The entity's name
 * @member {String} entityName
 */
EntityPrediction.prototype['entityName'] = undefined;

/**
 * The actual token(s) that comprise the entity.
 * @member {String} phrase
 */
EntityPrediction.prototype['phrase'] = undefined;

/**
 * The index within the utterance where the extracted entity starts.
 * @member {Number} startTokenIndex
 */
EntityPrediction.prototype['startTokenIndex'] = undefined;






export default EntityPrediction;

