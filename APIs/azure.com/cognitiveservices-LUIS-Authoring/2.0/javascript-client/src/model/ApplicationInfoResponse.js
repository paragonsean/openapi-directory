/**
 * LUIS Authoring Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ApplicationInfoResponse model module.
 * @module model/ApplicationInfoResponse
 * @version 2.0
 */
class ApplicationInfoResponse {
    /**
     * Constructs a new <code>ApplicationInfoResponse</code>.
     * Response containing the Application Info.
     * @alias module:model/ApplicationInfoResponse
     */
    constructor() { 
        
        ApplicationInfoResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ApplicationInfoResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApplicationInfoResponse} obj Optional instance to populate.
     * @return {module:model/ApplicationInfoResponse} The populated <code>ApplicationInfoResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApplicationInfoResponse();

            if (data.hasOwnProperty('activeVersion')) {
                obj['activeVersion'] = ApiClient.convertToType(data['activeVersion'], 'String');
            }
            if (data.hasOwnProperty('createdDateTime')) {
                obj['createdDateTime'] = ApiClient.convertToType(data['createdDateTime'], 'String');
            }
            if (data.hasOwnProperty('culture')) {
                obj['culture'] = ApiClient.convertToType(data['culture'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('domain')) {
                obj['domain'] = ApiClient.convertToType(data['domain'], 'String');
            }
            if (data.hasOwnProperty('endpointHitsCount')) {
                obj['endpointHitsCount'] = ApiClient.convertToType(data['endpointHitsCount'], 'Number');
            }
            if (data.hasOwnProperty('endpoints')) {
                obj['endpoints'] = ApiClient.convertToType(data['endpoints'], Object);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('usageScenario')) {
                obj['usageScenario'] = ApiClient.convertToType(data['usageScenario'], 'String');
            }
            if (data.hasOwnProperty('versionsCount')) {
                obj['versionsCount'] = ApiClient.convertToType(data['versionsCount'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ApplicationInfoResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ApplicationInfoResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['activeVersion'] && !(typeof data['activeVersion'] === 'string' || data['activeVersion'] instanceof String)) {
            throw new Error("Expected the field `activeVersion` to be a primitive type in the JSON string but got " + data['activeVersion']);
        }
        // ensure the json data is a string
        if (data['createdDateTime'] && !(typeof data['createdDateTime'] === 'string' || data['createdDateTime'] instanceof String)) {
            throw new Error("Expected the field `createdDateTime` to be a primitive type in the JSON string but got " + data['createdDateTime']);
        }
        // ensure the json data is a string
        if (data['culture'] && !(typeof data['culture'] === 'string' || data['culture'] instanceof String)) {
            throw new Error("Expected the field `culture` to be a primitive type in the JSON string but got " + data['culture']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['domain'] && !(typeof data['domain'] === 'string' || data['domain'] instanceof String)) {
            throw new Error("Expected the field `domain` to be a primitive type in the JSON string but got " + data['domain']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['usageScenario'] && !(typeof data['usageScenario'] === 'string' || data['usageScenario'] instanceof String)) {
            throw new Error("Expected the field `usageScenario` to be a primitive type in the JSON string but got " + data['usageScenario']);
        }

        return true;
    }


}



/**
 * The version ID currently marked as active.
 * @member {String} activeVersion
 */
ApplicationInfoResponse.prototype['activeVersion'] = undefined;

/**
 * The version's creation timestamp.
 * @member {String} createdDateTime
 */
ApplicationInfoResponse.prototype['createdDateTime'] = undefined;

/**
 * The culture of the application. For example, \"en-us\".
 * @member {String} culture
 */
ApplicationInfoResponse.prototype['culture'] = undefined;

/**
 * The description of the application.
 * @member {String} description
 */
ApplicationInfoResponse.prototype['description'] = undefined;

/**
 * The domain for the new application. Optional. For example, Comics.
 * @member {String} domain
 */
ApplicationInfoResponse.prototype['domain'] = undefined;

/**
 * Number of calls made to this endpoint.
 * @member {Number} endpointHitsCount
 */
ApplicationInfoResponse.prototype['endpointHitsCount'] = undefined;

/**
 * The Runtime endpoint URL for this model version.
 * @member {Object} endpoints
 */
ApplicationInfoResponse.prototype['endpoints'] = undefined;

/**
 * The ID (GUID) of the application.
 * @member {String} id
 */
ApplicationInfoResponse.prototype['id'] = undefined;

/**
 * The name of the application.
 * @member {String} name
 */
ApplicationInfoResponse.prototype['name'] = undefined;

/**
 * Defines the scenario for the new application. Optional. For example, IoT.
 * @member {String} usageScenario
 */
ApplicationInfoResponse.prototype['usageScenario'] = undefined;

/**
 * Amount of model versions within the application.
 * @member {Number} versionsCount
 */
ApplicationInfoResponse.prototype['versionsCount'] = undefined;






export default ApplicationInfoResponse;

