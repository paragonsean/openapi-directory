/**
 * LUIS Authoring Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ApplicationCreateObject model module.
 * @module model/ApplicationCreateObject
 * @version 3.0-preview
 */
class ApplicationCreateObject {
    /**
     * Constructs a new <code>ApplicationCreateObject</code>.
     * Properties for creating a new LUIS Application
     * @alias module:model/ApplicationCreateObject
     * @param culture {String} The culture for the new application. It is the language that your app understands and speaks. E.g.: \"en-us\". Note: the culture cannot be changed after the app is created.
     * @param name {String} The name for the new application.
     */
    constructor(culture, name) { 
        
        ApplicationCreateObject.initialize(this, culture, name);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, culture, name) { 
        obj['culture'] = culture;
        obj['name'] = name;
    }

    /**
     * Constructs a <code>ApplicationCreateObject</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApplicationCreateObject} obj Optional instance to populate.
     * @return {module:model/ApplicationCreateObject} The populated <code>ApplicationCreateObject</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApplicationCreateObject();

            if (data.hasOwnProperty('culture')) {
                obj['culture'] = ApiClient.convertToType(data['culture'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('domain')) {
                obj['domain'] = ApiClient.convertToType(data['domain'], 'String');
            }
            if (data.hasOwnProperty('initialVersionId')) {
                obj['initialVersionId'] = ApiClient.convertToType(data['initialVersionId'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('usageScenario')) {
                obj['usageScenario'] = ApiClient.convertToType(data['usageScenario'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ApplicationCreateObject</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ApplicationCreateObject</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ApplicationCreateObject.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['culture'] && !(typeof data['culture'] === 'string' || data['culture'] instanceof String)) {
            throw new Error("Expected the field `culture` to be a primitive type in the JSON string but got " + data['culture']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['domain'] && !(typeof data['domain'] === 'string' || data['domain'] instanceof String)) {
            throw new Error("Expected the field `domain` to be a primitive type in the JSON string but got " + data['domain']);
        }
        // ensure the json data is a string
        if (data['initialVersionId'] && !(typeof data['initialVersionId'] === 'string' || data['initialVersionId'] instanceof String)) {
            throw new Error("Expected the field `initialVersionId` to be a primitive type in the JSON string but got " + data['initialVersionId']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['usageScenario'] && !(typeof data['usageScenario'] === 'string' || data['usageScenario'] instanceof String)) {
            throw new Error("Expected the field `usageScenario` to be a primitive type in the JSON string but got " + data['usageScenario']);
        }

        return true;
    }


}

ApplicationCreateObject.RequiredProperties = ["culture", "name"];

/**
 * The culture for the new application. It is the language that your app understands and speaks. E.g.: \"en-us\". Note: the culture cannot be changed after the app is created.
 * @member {String} culture
 */
ApplicationCreateObject.prototype['culture'] = undefined;

/**
 * Description of the new application. Optional.
 * @member {String} description
 */
ApplicationCreateObject.prototype['description'] = undefined;

/**
 * The domain for the new application. Optional. E.g.: Comics.
 * @member {String} domain
 */
ApplicationCreateObject.prototype['domain'] = undefined;

/**
 * The initial version ID. Optional. Default value is: \"0.1\"
 * @member {String} initialVersionId
 */
ApplicationCreateObject.prototype['initialVersionId'] = undefined;

/**
 * The name for the new application.
 * @member {String} name
 */
ApplicationCreateObject.prototype['name'] = undefined;

/**
 * Defines the scenario for the new application. Optional. E.g.: IoT.
 * @member {String} usageScenario
 */
ApplicationCreateObject.prototype['usageScenario'] = undefined;






export default ApplicationCreateObject;

