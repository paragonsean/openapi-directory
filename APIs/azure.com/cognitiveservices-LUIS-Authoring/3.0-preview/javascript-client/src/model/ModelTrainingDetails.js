/**
 * LUIS Authoring Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TrainingStatus from './TrainingStatus';

/**
 * The ModelTrainingDetails model module.
 * @module model/ModelTrainingDetails
 * @version 3.0-preview
 */
class ModelTrainingDetails {
    /**
     * Constructs a new <code>ModelTrainingDetails</code>.
     * Model Training Details.
     * @alias module:model/ModelTrainingDetails
     */
    constructor() { 
        
        ModelTrainingDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ModelTrainingDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ModelTrainingDetails} obj Optional instance to populate.
     * @return {module:model/ModelTrainingDetails} The populated <code>ModelTrainingDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ModelTrainingDetails();

            if (data.hasOwnProperty('exampleCount')) {
                obj['exampleCount'] = ApiClient.convertToType(data['exampleCount'], 'Number');
            }
            if (data.hasOwnProperty('failureReason')) {
                obj['failureReason'] = ApiClient.convertToType(data['failureReason'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = TrainingStatus.constructFromObject(data['status']);
            }
            if (data.hasOwnProperty('statusId')) {
                obj['statusId'] = ApiClient.convertToType(data['statusId'], 'Number');
            }
            if (data.hasOwnProperty('trainingDateTime')) {
                obj['trainingDateTime'] = ApiClient.convertToType(data['trainingDateTime'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ModelTrainingDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ModelTrainingDetails</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['failureReason'] && !(typeof data['failureReason'] === 'string' || data['failureReason'] instanceof String)) {
            throw new Error("Expected the field `failureReason` to be a primitive type in the JSON string but got " + data['failureReason']);
        }

        return true;
    }


}



/**
 * The count of examples used to train the model.
 * @member {Number} exampleCount
 */
ModelTrainingDetails.prototype['exampleCount'] = undefined;

/**
 * Reason for the training failure.
 * @member {String} failureReason
 */
ModelTrainingDetails.prototype['failureReason'] = undefined;

/**
 * @member {module:model/TrainingStatus} status
 */
ModelTrainingDetails.prototype['status'] = undefined;

/**
 * The train request status ID.
 * @member {Number} statusId
 */
ModelTrainingDetails.prototype['statusId'] = undefined;

/**
 * When the model was trained.
 * @member {Date} trainingDateTime
 */
ModelTrainingDetails.prototype['trainingDateTime'] = undefined;






export default ModelTrainingDetails;

