/**
 * LUIS Authoring Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIModelTrainingDetails.h
 *
 * Model Training Details.
 */

#ifndef OAIModelTrainingDetails_H
#define OAIModelTrainingDetails_H

#include <QJsonObject>

#include "OAITrainingStatus.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIModelTrainingDetails : public OAIObject {
public:
    OAIModelTrainingDetails();
    OAIModelTrainingDetails(QString json);
    ~OAIModelTrainingDetails() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getExampleCount() const;
    void setExampleCount(const qint32 &example_count);
    bool is_example_count_Set() const;
    bool is_example_count_Valid() const;

    QString getFailureReason() const;
    void setFailureReason(const QString &failure_reason);
    bool is_failure_reason_Set() const;
    bool is_failure_reason_Valid() const;

    OAITrainingStatus getStatus() const;
    void setStatus(const OAITrainingStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    qint32 getStatusId() const;
    void setStatusId(const qint32 &status_id);
    bool is_status_id_Set() const;
    bool is_status_id_Valid() const;

    QDateTime getTrainingDateTime() const;
    void setTrainingDateTime(const QDateTime &training_date_time);
    bool is_training_date_time_Set() const;
    bool is_training_date_time_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_example_count;
    bool m_example_count_isSet;
    bool m_example_count_isValid;

    QString m_failure_reason;
    bool m_failure_reason_isSet;
    bool m_failure_reason_isValid;

    OAITrainingStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    qint32 m_status_id;
    bool m_status_id_isSet;
    bool m_status_id_isValid;

    QDateTime m_training_date_time;
    bool m_training_date_time_isSet;
    bool m_training_date_time_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIModelTrainingDetails)

#endif // OAIModelTrainingDetails_H
