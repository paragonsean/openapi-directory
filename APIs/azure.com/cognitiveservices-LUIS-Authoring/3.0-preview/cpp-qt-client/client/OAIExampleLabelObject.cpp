/**
 * LUIS Authoring Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIExampleLabelObject.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIExampleLabelObject::OAIExampleLabelObject(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIExampleLabelObject::OAIExampleLabelObject() {
    this->initializeModel();
}

OAIExampleLabelObject::~OAIExampleLabelObject() {}

void OAIExampleLabelObject::initializeModel() {

    m_entity_labels_isSet = false;
    m_entity_labels_isValid = false;

    m_intent_name_isSet = false;
    m_intent_name_isValid = false;

    m_text_isSet = false;
    m_text_isValid = false;
}

void OAIExampleLabelObject::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIExampleLabelObject::fromJsonObject(QJsonObject json) {

    m_entity_labels_isValid = ::OpenAPI::fromJsonValue(m_entity_labels, json[QString("entityLabels")]);
    m_entity_labels_isSet = !json[QString("entityLabels")].isNull() && m_entity_labels_isValid;

    m_intent_name_isValid = ::OpenAPI::fromJsonValue(m_intent_name, json[QString("intentName")]);
    m_intent_name_isSet = !json[QString("intentName")].isNull() && m_intent_name_isValid;

    m_text_isValid = ::OpenAPI::fromJsonValue(m_text, json[QString("text")]);
    m_text_isSet = !json[QString("text")].isNull() && m_text_isValid;
}

QString OAIExampleLabelObject::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIExampleLabelObject::asJsonObject() const {
    QJsonObject obj;
    if (m_entity_labels.size() > 0) {
        obj.insert(QString("entityLabels"), ::OpenAPI::toJsonValue(m_entity_labels));
    }
    if (m_intent_name_isSet) {
        obj.insert(QString("intentName"), ::OpenAPI::toJsonValue(m_intent_name));
    }
    if (m_text_isSet) {
        obj.insert(QString("text"), ::OpenAPI::toJsonValue(m_text));
    }
    return obj;
}

QList<OAIEntityLabelObject> OAIExampleLabelObject::getEntityLabels() const {
    return m_entity_labels;
}
void OAIExampleLabelObject::setEntityLabels(const QList<OAIEntityLabelObject> &entity_labels) {
    m_entity_labels = entity_labels;
    m_entity_labels_isSet = true;
}

bool OAIExampleLabelObject::is_entity_labels_Set() const{
    return m_entity_labels_isSet;
}

bool OAIExampleLabelObject::is_entity_labels_Valid() const{
    return m_entity_labels_isValid;
}

QString OAIExampleLabelObject::getIntentName() const {
    return m_intent_name;
}
void OAIExampleLabelObject::setIntentName(const QString &intent_name) {
    m_intent_name = intent_name;
    m_intent_name_isSet = true;
}

bool OAIExampleLabelObject::is_intent_name_Set() const{
    return m_intent_name_isSet;
}

bool OAIExampleLabelObject::is_intent_name_Valid() const{
    return m_intent_name_isValid;
}

QString OAIExampleLabelObject::getText() const {
    return m_text;
}
void OAIExampleLabelObject::setText(const QString &text) {
    m_text = text;
    m_text_isSet = true;
}

bool OAIExampleLabelObject::is_text_Set() const{
    return m_text_isSet;
}

bool OAIExampleLabelObject::is_text_Valid() const{
    return m_text_isValid;
}

bool OAIExampleLabelObject::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_entity_labels.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_intent_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_text_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIExampleLabelObject::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
