/**
 * LUIS Authoring Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEntityLabel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEntityLabel::OAIEntityLabel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEntityLabel::OAIEntityLabel() {
    this->initializeModel();
}

OAIEntityLabel::~OAIEntityLabel() {}

void OAIEntityLabel::initializeModel() {

    m_end_token_index_isSet = false;
    m_end_token_index_isValid = false;

    m_entity_name_isSet = false;
    m_entity_name_isValid = false;

    m_role_isSet = false;
    m_role_isValid = false;

    m_role_id_isSet = false;
    m_role_id_isValid = false;

    m_start_token_index_isSet = false;
    m_start_token_index_isValid = false;
}

void OAIEntityLabel::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEntityLabel::fromJsonObject(QJsonObject json) {

    m_end_token_index_isValid = ::OpenAPI::fromJsonValue(m_end_token_index, json[QString("endTokenIndex")]);
    m_end_token_index_isSet = !json[QString("endTokenIndex")].isNull() && m_end_token_index_isValid;

    m_entity_name_isValid = ::OpenAPI::fromJsonValue(m_entity_name, json[QString("entityName")]);
    m_entity_name_isSet = !json[QString("entityName")].isNull() && m_entity_name_isValid;

    m_role_isValid = ::OpenAPI::fromJsonValue(m_role, json[QString("role")]);
    m_role_isSet = !json[QString("role")].isNull() && m_role_isValid;

    m_role_id_isValid = ::OpenAPI::fromJsonValue(m_role_id, json[QString("roleId")]);
    m_role_id_isSet = !json[QString("roleId")].isNull() && m_role_id_isValid;

    m_start_token_index_isValid = ::OpenAPI::fromJsonValue(m_start_token_index, json[QString("startTokenIndex")]);
    m_start_token_index_isSet = !json[QString("startTokenIndex")].isNull() && m_start_token_index_isValid;
}

QString OAIEntityLabel::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEntityLabel::asJsonObject() const {
    QJsonObject obj;
    if (m_end_token_index_isSet) {
        obj.insert(QString("endTokenIndex"), ::OpenAPI::toJsonValue(m_end_token_index));
    }
    if (m_entity_name_isSet) {
        obj.insert(QString("entityName"), ::OpenAPI::toJsonValue(m_entity_name));
    }
    if (m_role_isSet) {
        obj.insert(QString("role"), ::OpenAPI::toJsonValue(m_role));
    }
    if (m_role_id_isSet) {
        obj.insert(QString("roleId"), ::OpenAPI::toJsonValue(m_role_id));
    }
    if (m_start_token_index_isSet) {
        obj.insert(QString("startTokenIndex"), ::OpenAPI::toJsonValue(m_start_token_index));
    }
    return obj;
}

qint32 OAIEntityLabel::getEndTokenIndex() const {
    return m_end_token_index;
}
void OAIEntityLabel::setEndTokenIndex(const qint32 &end_token_index) {
    m_end_token_index = end_token_index;
    m_end_token_index_isSet = true;
}

bool OAIEntityLabel::is_end_token_index_Set() const{
    return m_end_token_index_isSet;
}

bool OAIEntityLabel::is_end_token_index_Valid() const{
    return m_end_token_index_isValid;
}

QString OAIEntityLabel::getEntityName() const {
    return m_entity_name;
}
void OAIEntityLabel::setEntityName(const QString &entity_name) {
    m_entity_name = entity_name;
    m_entity_name_isSet = true;
}

bool OAIEntityLabel::is_entity_name_Set() const{
    return m_entity_name_isSet;
}

bool OAIEntityLabel::is_entity_name_Valid() const{
    return m_entity_name_isValid;
}

QString OAIEntityLabel::getRole() const {
    return m_role;
}
void OAIEntityLabel::setRole(const QString &role) {
    m_role = role;
    m_role_isSet = true;
}

bool OAIEntityLabel::is_role_Set() const{
    return m_role_isSet;
}

bool OAIEntityLabel::is_role_Valid() const{
    return m_role_isValid;
}

QString OAIEntityLabel::getRoleId() const {
    return m_role_id;
}
void OAIEntityLabel::setRoleId(const QString &role_id) {
    m_role_id = role_id;
    m_role_id_isSet = true;
}

bool OAIEntityLabel::is_role_id_Set() const{
    return m_role_id_isSet;
}

bool OAIEntityLabel::is_role_id_Valid() const{
    return m_role_id_isValid;
}

qint32 OAIEntityLabel::getStartTokenIndex() const {
    return m_start_token_index;
}
void OAIEntityLabel::setStartTokenIndex(const qint32 &start_token_index) {
    m_start_token_index = start_token_index;
    m_start_token_index_isSet = true;
}

bool OAIEntityLabel::is_start_token_index_Set() const{
    return m_start_token_index_isSet;
}

bool OAIEntityLabel::is_start_token_index_Valid() const{
    return m_start_token_index_isValid;
}

bool OAIEntityLabel::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_end_token_index_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_entity_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_role_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_role_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_token_index_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEntityLabel::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_end_token_index_isValid && m_entity_name_isValid && m_start_token_index_isValid && true;
}

} // namespace OpenAPI
