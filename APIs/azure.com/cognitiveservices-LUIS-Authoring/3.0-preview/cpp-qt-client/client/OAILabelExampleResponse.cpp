/**
 * LUIS Authoring Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILabelExampleResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILabelExampleResponse::OAILabelExampleResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILabelExampleResponse::OAILabelExampleResponse() {
    this->initializeModel();
}

OAILabelExampleResponse::~OAILabelExampleResponse() {}

void OAILabelExampleResponse::initializeModel() {

    m_example_id_isSet = false;
    m_example_id_isValid = false;

    m_utterance_text_isSet = false;
    m_utterance_text_isValid = false;
}

void OAILabelExampleResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILabelExampleResponse::fromJsonObject(QJsonObject json) {

    m_example_id_isValid = ::OpenAPI::fromJsonValue(m_example_id, json[QString("ExampleId")]);
    m_example_id_isSet = !json[QString("ExampleId")].isNull() && m_example_id_isValid;

    m_utterance_text_isValid = ::OpenAPI::fromJsonValue(m_utterance_text, json[QString("UtteranceText")]);
    m_utterance_text_isSet = !json[QString("UtteranceText")].isNull() && m_utterance_text_isValid;
}

QString OAILabelExampleResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILabelExampleResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_example_id_isSet) {
        obj.insert(QString("ExampleId"), ::OpenAPI::toJsonValue(m_example_id));
    }
    if (m_utterance_text_isSet) {
        obj.insert(QString("UtteranceText"), ::OpenAPI::toJsonValue(m_utterance_text));
    }
    return obj;
}

qint32 OAILabelExampleResponse::getExampleId() const {
    return m_example_id;
}
void OAILabelExampleResponse::setExampleId(const qint32 &example_id) {
    m_example_id = example_id;
    m_example_id_isSet = true;
}

bool OAILabelExampleResponse::is_example_id_Set() const{
    return m_example_id_isSet;
}

bool OAILabelExampleResponse::is_example_id_Valid() const{
    return m_example_id_isValid;
}

QString OAILabelExampleResponse::getUtteranceText() const {
    return m_utterance_text;
}
void OAILabelExampleResponse::setUtteranceText(const QString &utterance_text) {
    m_utterance_text = utterance_text;
    m_utterance_text_isSet = true;
}

bool OAILabelExampleResponse::is_utterance_text_Set() const{
    return m_utterance_text_isSet;
}

bool OAILabelExampleResponse::is_utterance_text_Valid() const{
    return m_utterance_text_isValid;
}

bool OAILabelExampleResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_example_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_utterance_text_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILabelExampleResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
