/**
 * LUIS Authoring Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVersionInfo.h
 *
 * Object model of an application version.
 */

#ifndef OAIVersionInfo_H
#define OAIVersionInfo_H

#include <QJsonObject>

#include "OAIObject.h"
#include <QDateTime>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIVersionInfo : public OAIObject {
public:
    OAIVersionInfo();
    OAIVersionInfo(QString json);
    ~OAIVersionInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QMap<QString, QString> getAssignedEndpointKey() const;
    void setAssignedEndpointKey(const QMap<QString, QString> &assigned_endpoint_key);
    bool is_assigned_endpoint_key_Set() const;
    bool is_assigned_endpoint_key_Valid() const;

    QDateTime getCreatedDateTime() const;
    void setCreatedDateTime(const QDateTime &created_date_time);
    bool is_created_date_time_Set() const;
    bool is_created_date_time_Valid() const;

    qint32 getEndpointHitsCount() const;
    void setEndpointHitsCount(const qint32 &endpoint_hits_count);
    bool is_endpoint_hits_count_Set() const;
    bool is_endpoint_hits_count_Valid() const;

    QString getEndpointUrl() const;
    void setEndpointUrl(const QString &endpoint_url);
    bool is_endpoint_url_Set() const;
    bool is_endpoint_url_Valid() const;

    qint32 getEntitiesCount() const;
    void setEntitiesCount(const qint32 &entities_count);
    bool is_entities_count_Set() const;
    bool is_entities_count_Valid() const;

    OAIObject getExternalApiKeys() const;
    void setExternalApiKeys(const OAIObject &external_api_keys);
    bool is_external_api_keys_Set() const;
    bool is_external_api_keys_Valid() const;

    qint32 getIntentsCount() const;
    void setIntentsCount(const qint32 &intents_count);
    bool is_intents_count_Set() const;
    bool is_intents_count_Valid() const;

    QDateTime getLastModifiedDateTime() const;
    void setLastModifiedDateTime(const QDateTime &last_modified_date_time);
    bool is_last_modified_date_time_Set() const;
    bool is_last_modified_date_time_Valid() const;

    QDateTime getLastPublishedDateTime() const;
    void setLastPublishedDateTime(const QDateTime &last_published_date_time);
    bool is_last_published_date_time_Set() const;
    bool is_last_published_date_time_Valid() const;

    QDateTime getLastTrainedDateTime() const;
    void setLastTrainedDateTime(const QDateTime &last_trained_date_time);
    bool is_last_trained_date_time_Set() const;
    bool is_last_trained_date_time_Valid() const;

    QString getTrainingStatus() const;
    void setTrainingStatus(const QString &training_status);
    bool is_training_status_Set() const;
    bool is_training_status_Valid() const;

    QString getVersion() const;
    void setVersion(const QString &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QMap<QString, QString> m_assigned_endpoint_key;
    bool m_assigned_endpoint_key_isSet;
    bool m_assigned_endpoint_key_isValid;

    QDateTime m_created_date_time;
    bool m_created_date_time_isSet;
    bool m_created_date_time_isValid;

    qint32 m_endpoint_hits_count;
    bool m_endpoint_hits_count_isSet;
    bool m_endpoint_hits_count_isValid;

    QString m_endpoint_url;
    bool m_endpoint_url_isSet;
    bool m_endpoint_url_isValid;

    qint32 m_entities_count;
    bool m_entities_count_isSet;
    bool m_entities_count_isValid;

    OAIObject m_external_api_keys;
    bool m_external_api_keys_isSet;
    bool m_external_api_keys_isValid;

    qint32 m_intents_count;
    bool m_intents_count_isSet;
    bool m_intents_count_isValid;

    QDateTime m_last_modified_date_time;
    bool m_last_modified_date_time_isSet;
    bool m_last_modified_date_time_isValid;

    QDateTime m_last_published_date_time;
    bool m_last_published_date_time_isSet;
    bool m_last_published_date_time_isValid;

    QDateTime m_last_trained_date_time;
    bool m_last_trained_date_time_isSet;
    bool m_last_trained_date_time_isValid;

    QString m_training_status;
    bool m_training_status_isSet;
    bool m_training_status_isValid;

    QString m_version;
    bool m_version_isSet;
    bool m_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVersionInfo)

#endif // OAIVersionInfo_H
