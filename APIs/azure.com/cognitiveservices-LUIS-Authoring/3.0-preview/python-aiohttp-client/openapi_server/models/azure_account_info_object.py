# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AzureAccountInfoObject(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_name: str=None, azure_subscription_id: str=None, resource_group: str=None):
        """AzureAccountInfoObject - a model defined in OpenAPI

        :param account_name: The account_name of this AzureAccountInfoObject.
        :param azure_subscription_id: The azure_subscription_id of this AzureAccountInfoObject.
        :param resource_group: The resource_group of this AzureAccountInfoObject.
        """
        self.openapi_types = {
            'account_name': str,
            'azure_subscription_id': str,
            'resource_group': str
        }

        self.attribute_map = {
            'account_name': 'accountName',
            'azure_subscription_id': 'azureSubscriptionId',
            'resource_group': 'resourceGroup'
        }

        self._account_name = account_name
        self._azure_subscription_id = azure_subscription_id
        self._resource_group = resource_group

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AzureAccountInfoObject':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AzureAccountInfoObject of this AzureAccountInfoObject.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_name(self):
        """Gets the account_name of this AzureAccountInfoObject.

        The Azure account name.

        :return: The account_name of this AzureAccountInfoObject.
        :rtype: str
        """
        return self._account_name

    @account_name.setter
    def account_name(self, account_name):
        """Sets the account_name of this AzureAccountInfoObject.

        The Azure account name.

        :param account_name: The account_name of this AzureAccountInfoObject.
        :type account_name: str
        """
        if account_name is None:
            raise ValueError("Invalid value for `account_name`, must not be `None`")

        self._account_name = account_name

    @property
    def azure_subscription_id(self):
        """Gets the azure_subscription_id of this AzureAccountInfoObject.

        The id for the Azure subscription.

        :return: The azure_subscription_id of this AzureAccountInfoObject.
        :rtype: str
        """
        return self._azure_subscription_id

    @azure_subscription_id.setter
    def azure_subscription_id(self, azure_subscription_id):
        """Sets the azure_subscription_id of this AzureAccountInfoObject.

        The id for the Azure subscription.

        :param azure_subscription_id: The azure_subscription_id of this AzureAccountInfoObject.
        :type azure_subscription_id: str
        """
        if azure_subscription_id is None:
            raise ValueError("Invalid value for `azure_subscription_id`, must not be `None`")

        self._azure_subscription_id = azure_subscription_id

    @property
    def resource_group(self):
        """Gets the resource_group of this AzureAccountInfoObject.

        The Azure resource group name.

        :return: The resource_group of this AzureAccountInfoObject.
        :rtype: str
        """
        return self._resource_group

    @resource_group.setter
    def resource_group(self, resource_group):
        """Sets the resource_group of this AzureAccountInfoObject.

        The Azure resource group name.

        :param resource_group: The resource_group of this AzureAccountInfoObject.
        :type resource_group: str
        """
        if resource_group is None:
            raise ValueError("Invalid value for `resource_group`, must not be `None`")

        self._resource_group = resource_group
