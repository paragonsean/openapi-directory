# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class JsonModelFeatureInformation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, feature_name: str=None, model_name: str=None):
        """JsonModelFeatureInformation - a model defined in OpenAPI

        :param feature_name: The feature_name of this JsonModelFeatureInformation.
        :param model_name: The model_name of this JsonModelFeatureInformation.
        """
        self.openapi_types = {
            'feature_name': str,
            'model_name': str
        }

        self.attribute_map = {
            'feature_name': 'featureName',
            'model_name': 'modelName'
        }

        self._feature_name = feature_name
        self._model_name = model_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'JsonModelFeatureInformation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The JsonModelFeatureInformation of this JsonModelFeatureInformation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def feature_name(self):
        """Gets the feature_name of this JsonModelFeatureInformation.

        The name of the feature used.

        :return: The feature_name of this JsonModelFeatureInformation.
        :rtype: str
        """
        return self._feature_name

    @feature_name.setter
    def feature_name(self, feature_name):
        """Sets the feature_name of this JsonModelFeatureInformation.

        The name of the feature used.

        :param feature_name: The feature_name of this JsonModelFeatureInformation.
        :type feature_name: str
        """

        self._feature_name = feature_name

    @property
    def model_name(self):
        """Gets the model_name of this JsonModelFeatureInformation.

        The name of the model used.

        :return: The model_name of this JsonModelFeatureInformation.
        :rtype: str
        """
        return self._model_name

    @model_name.setter
    def model_name(self, model_name):
        """Sets the model_name of this JsonModelFeatureInformation.

        The name of the model used.

        :param model_name: The model_name of this JsonModelFeatureInformation.
        :type model_name: str
        """

        self._model_name = model_name
