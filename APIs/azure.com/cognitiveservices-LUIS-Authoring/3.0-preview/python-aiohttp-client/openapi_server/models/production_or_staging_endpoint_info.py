# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ProductionOrStagingEndpointInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, assigned_endpoint_key: str=None, endpoint_region: str=None, endpoint_url: str=None, failed_regions: str=None, is_staging: bool=None, published_date_time: str=None, region: str=None, version_id: str=None):
        """ProductionOrStagingEndpointInfo - a model defined in OpenAPI

        :param assigned_endpoint_key: The assigned_endpoint_key of this ProductionOrStagingEndpointInfo.
        :param endpoint_region: The endpoint_region of this ProductionOrStagingEndpointInfo.
        :param endpoint_url: The endpoint_url of this ProductionOrStagingEndpointInfo.
        :param failed_regions: The failed_regions of this ProductionOrStagingEndpointInfo.
        :param is_staging: The is_staging of this ProductionOrStagingEndpointInfo.
        :param published_date_time: The published_date_time of this ProductionOrStagingEndpointInfo.
        :param region: The region of this ProductionOrStagingEndpointInfo.
        :param version_id: The version_id of this ProductionOrStagingEndpointInfo.
        """
        self.openapi_types = {
            'assigned_endpoint_key': str,
            'endpoint_region': str,
            'endpoint_url': str,
            'failed_regions': str,
            'is_staging': bool,
            'published_date_time': str,
            'region': str,
            'version_id': str
        }

        self.attribute_map = {
            'assigned_endpoint_key': 'assignedEndpointKey',
            'endpoint_region': 'endpointRegion',
            'endpoint_url': 'endpointUrl',
            'failed_regions': 'failedRegions',
            'is_staging': 'isStaging',
            'published_date_time': 'publishedDateTime',
            'region': 'region',
            'version_id': 'versionId'
        }

        self._assigned_endpoint_key = assigned_endpoint_key
        self._endpoint_region = endpoint_region
        self._endpoint_url = endpoint_url
        self._failed_regions = failed_regions
        self._is_staging = is_staging
        self._published_date_time = published_date_time
        self._region = region
        self._version_id = version_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProductionOrStagingEndpointInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProductionOrStagingEndpointInfo of this ProductionOrStagingEndpointInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def assigned_endpoint_key(self):
        """Gets the assigned_endpoint_key of this ProductionOrStagingEndpointInfo.

        The endpoint key.

        :return: The assigned_endpoint_key of this ProductionOrStagingEndpointInfo.
        :rtype: str
        """
        return self._assigned_endpoint_key

    @assigned_endpoint_key.setter
    def assigned_endpoint_key(self, assigned_endpoint_key):
        """Sets the assigned_endpoint_key of this ProductionOrStagingEndpointInfo.

        The endpoint key.

        :param assigned_endpoint_key: The assigned_endpoint_key of this ProductionOrStagingEndpointInfo.
        :type assigned_endpoint_key: str
        """

        self._assigned_endpoint_key = assigned_endpoint_key

    @property
    def endpoint_region(self):
        """Gets the endpoint_region of this ProductionOrStagingEndpointInfo.

        The endpoint's region.

        :return: The endpoint_region of this ProductionOrStagingEndpointInfo.
        :rtype: str
        """
        return self._endpoint_region

    @endpoint_region.setter
    def endpoint_region(self, endpoint_region):
        """Sets the endpoint_region of this ProductionOrStagingEndpointInfo.

        The endpoint's region.

        :param endpoint_region: The endpoint_region of this ProductionOrStagingEndpointInfo.
        :type endpoint_region: str
        """

        self._endpoint_region = endpoint_region

    @property
    def endpoint_url(self):
        """Gets the endpoint_url of this ProductionOrStagingEndpointInfo.

        The Runtime endpoint URL for this model version.

        :return: The endpoint_url of this ProductionOrStagingEndpointInfo.
        :rtype: str
        """
        return self._endpoint_url

    @endpoint_url.setter
    def endpoint_url(self, endpoint_url):
        """Sets the endpoint_url of this ProductionOrStagingEndpointInfo.

        The Runtime endpoint URL for this model version.

        :param endpoint_url: The endpoint_url of this ProductionOrStagingEndpointInfo.
        :type endpoint_url: str
        """

        self._endpoint_url = endpoint_url

    @property
    def failed_regions(self):
        """Gets the failed_regions of this ProductionOrStagingEndpointInfo.

        Regions where publishing failed.

        :return: The failed_regions of this ProductionOrStagingEndpointInfo.
        :rtype: str
        """
        return self._failed_regions

    @failed_regions.setter
    def failed_regions(self, failed_regions):
        """Sets the failed_regions of this ProductionOrStagingEndpointInfo.

        Regions where publishing failed.

        :param failed_regions: The failed_regions of this ProductionOrStagingEndpointInfo.
        :type failed_regions: str
        """

        self._failed_regions = failed_regions

    @property
    def is_staging(self):
        """Gets the is_staging of this ProductionOrStagingEndpointInfo.

        Indicates if the staging slot should be used, instead of the Production one.

        :return: The is_staging of this ProductionOrStagingEndpointInfo.
        :rtype: bool
        """
        return self._is_staging

    @is_staging.setter
    def is_staging(self, is_staging):
        """Sets the is_staging of this ProductionOrStagingEndpointInfo.

        Indicates if the staging slot should be used, instead of the Production one.

        :param is_staging: The is_staging of this ProductionOrStagingEndpointInfo.
        :type is_staging: bool
        """

        self._is_staging = is_staging

    @property
    def published_date_time(self):
        """Gets the published_date_time of this ProductionOrStagingEndpointInfo.

        Timestamp when was last published.

        :return: The published_date_time of this ProductionOrStagingEndpointInfo.
        :rtype: str
        """
        return self._published_date_time

    @published_date_time.setter
    def published_date_time(self, published_date_time):
        """Sets the published_date_time of this ProductionOrStagingEndpointInfo.

        Timestamp when was last published.

        :param published_date_time: The published_date_time of this ProductionOrStagingEndpointInfo.
        :type published_date_time: str
        """

        self._published_date_time = published_date_time

    @property
    def region(self):
        """Gets the region of this ProductionOrStagingEndpointInfo.

        The target region that the application is published to.

        :return: The region of this ProductionOrStagingEndpointInfo.
        :rtype: str
        """
        return self._region

    @region.setter
    def region(self, region):
        """Sets the region of this ProductionOrStagingEndpointInfo.

        The target region that the application is published to.

        :param region: The region of this ProductionOrStagingEndpointInfo.
        :type region: str
        """

        self._region = region

    @property
    def version_id(self):
        """Gets the version_id of this ProductionOrStagingEndpointInfo.

        The version ID to publish.

        :return: The version_id of this ProductionOrStagingEndpointInfo.
        :rtype: str
        """
        return self._version_id

    @version_id.setter
    def version_id(self, version_id):
        """Sets the version_id of this ProductionOrStagingEndpointInfo.

        The version ID to publish.

        :param version_id: The version_id of this ProductionOrStagingEndpointInfo.
        :type version_id: str
        """

        self._version_id = version_id
