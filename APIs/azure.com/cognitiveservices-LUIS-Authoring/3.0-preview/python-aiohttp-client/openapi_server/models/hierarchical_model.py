# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.json_child import JsonChild
from openapi_server.models.json_model_feature_information import JsonModelFeatureInformation
from openapi_server.models.prebuilt_domain_object import PrebuiltDomainObject
from openapi_server import util


class HierarchicalModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, children: List[JsonChild]=None, features: List[JsonModelFeatureInformation]=None, inherits: PrebuiltDomainObject=None, name: str=None, roles: List[str]=None):
        """HierarchicalModel - a model defined in OpenAPI

        :param children: The children of this HierarchicalModel.
        :param features: The features of this HierarchicalModel.
        :param inherits: The inherits of this HierarchicalModel.
        :param name: The name of this HierarchicalModel.
        :param roles: The roles of this HierarchicalModel.
        """
        self.openapi_types = {
            'children': List[JsonChild],
            'features': List[JsonModelFeatureInformation],
            'inherits': PrebuiltDomainObject,
            'name': str,
            'roles': List[str]
        }

        self.attribute_map = {
            'children': 'children',
            'features': 'features',
            'inherits': 'inherits',
            'name': 'name',
            'roles': 'roles'
        }

        self._children = children
        self._features = features
        self._inherits = inherits
        self._name = name
        self._roles = roles

    @classmethod
    def from_dict(cls, dikt: dict) -> 'HierarchicalModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The HierarchicalModel of this HierarchicalModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def children(self):
        """Gets the children of this HierarchicalModel.


        :return: The children of this HierarchicalModel.
        :rtype: List[JsonChild]
        """
        return self._children

    @children.setter
    def children(self, children):
        """Sets the children of this HierarchicalModel.


        :param children: The children of this HierarchicalModel.
        :type children: List[JsonChild]
        """

        self._children = children

    @property
    def features(self):
        """Gets the features of this HierarchicalModel.


        :return: The features of this HierarchicalModel.
        :rtype: List[JsonModelFeatureInformation]
        """
        return self._features

    @features.setter
    def features(self, features):
        """Sets the features of this HierarchicalModel.


        :param features: The features of this HierarchicalModel.
        :type features: List[JsonModelFeatureInformation]
        """

        self._features = features

    @property
    def inherits(self):
        """Gets the inherits of this HierarchicalModel.


        :return: The inherits of this HierarchicalModel.
        :rtype: PrebuiltDomainObject
        """
        return self._inherits

    @inherits.setter
    def inherits(self, inherits):
        """Sets the inherits of this HierarchicalModel.


        :param inherits: The inherits of this HierarchicalModel.
        :type inherits: PrebuiltDomainObject
        """

        self._inherits = inherits

    @property
    def name(self):
        """Gets the name of this HierarchicalModel.


        :return: The name of this HierarchicalModel.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this HierarchicalModel.


        :param name: The name of this HierarchicalModel.
        :type name: str
        """

        self._name = name

    @property
    def roles(self):
        """Gets the roles of this HierarchicalModel.


        :return: The roles of this HierarchicalModel.
        :rtype: List[str]
        """
        return self._roles

    @roles.setter
    def roles(self, roles):
        """Sets the roles of this HierarchicalModel.


        :param roles: The roles of this HierarchicalModel.
        :type roles: List[str]
        """

        self._roles = roles
