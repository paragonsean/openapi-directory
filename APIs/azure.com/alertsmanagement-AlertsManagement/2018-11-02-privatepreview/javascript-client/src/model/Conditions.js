/**
 * Azure Alerts Management Service Resource Provider
 * REST APIs for Azure Alerts Management Service.
 *
 * The version of the OpenAPI document: 2018-11-02-privatepreview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Condition from './Condition';

/**
 * The Conditions model module.
 * @module model/Conditions
 * @version 2018-11-02-privatepreview
 */
class Conditions {
    /**
     * Constructs a new <code>Conditions</code>.
     * Conditions in alert instance to be matched for a given action rule. Default value is all. Multiple values could be provided with comma separation.
     * @alias module:model/Conditions
     */
    constructor() { 
        
        Conditions.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Conditions</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Conditions} obj Optional instance to populate.
     * @return {module:model/Conditions} The populated <code>Conditions</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Conditions();

            if (data.hasOwnProperty('alertRuleId')) {
                obj['alertRuleId'] = Condition.constructFromObject(data['alertRuleId']);
            }
            if (data.hasOwnProperty('applicationInsightsSearchResults')) {
                obj['applicationInsightsSearchResults'] = Condition.constructFromObject(data['applicationInsightsSearchResults']);
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = Condition.constructFromObject(data['description']);
            }
            if (data.hasOwnProperty('logAnalyticsSearchResults')) {
                obj['logAnalyticsSearchResults'] = Condition.constructFromObject(data['logAnalyticsSearchResults']);
            }
            if (data.hasOwnProperty('monitorCondition')) {
                obj['monitorCondition'] = Condition.constructFromObject(data['monitorCondition']);
            }
            if (data.hasOwnProperty('monitorService')) {
                obj['monitorService'] = Condition.constructFromObject(data['monitorService']);
            }
            if (data.hasOwnProperty('severity')) {
                obj['severity'] = Condition.constructFromObject(data['severity']);
            }
            if (data.hasOwnProperty('signalType')) {
                obj['signalType'] = Condition.constructFromObject(data['signalType']);
            }
            if (data.hasOwnProperty('targetResource')) {
                obj['targetResource'] = Condition.constructFromObject(data['targetResource']);
            }
            if (data.hasOwnProperty('targetResourceGroup')) {
                obj['targetResourceGroup'] = Condition.constructFromObject(data['targetResourceGroup']);
            }
            if (data.hasOwnProperty('targetResourceType')) {
                obj['targetResourceType'] = Condition.constructFromObject(data['targetResourceType']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Conditions</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Conditions</code>.
     */
    static validateJSON(data) {
        // validate the optional field `alertRuleId`
        if (data['alertRuleId']) { // data not null
          Condition.validateJSON(data['alertRuleId']);
        }
        // validate the optional field `applicationInsightsSearchResults`
        if (data['applicationInsightsSearchResults']) { // data not null
          Condition.validateJSON(data['applicationInsightsSearchResults']);
        }
        // validate the optional field `description`
        if (data['description']) { // data not null
          Condition.validateJSON(data['description']);
        }
        // validate the optional field `logAnalyticsSearchResults`
        if (data['logAnalyticsSearchResults']) { // data not null
          Condition.validateJSON(data['logAnalyticsSearchResults']);
        }
        // validate the optional field `monitorCondition`
        if (data['monitorCondition']) { // data not null
          Condition.validateJSON(data['monitorCondition']);
        }
        // validate the optional field `monitorService`
        if (data['monitorService']) { // data not null
          Condition.validateJSON(data['monitorService']);
        }
        // validate the optional field `severity`
        if (data['severity']) { // data not null
          Condition.validateJSON(data['severity']);
        }
        // validate the optional field `signalType`
        if (data['signalType']) { // data not null
          Condition.validateJSON(data['signalType']);
        }
        // validate the optional field `targetResource`
        if (data['targetResource']) { // data not null
          Condition.validateJSON(data['targetResource']);
        }
        // validate the optional field `targetResourceGroup`
        if (data['targetResourceGroup']) { // data not null
          Condition.validateJSON(data['targetResourceGroup']);
        }
        // validate the optional field `targetResourceType`
        if (data['targetResourceType']) { // data not null
          Condition.validateJSON(data['targetResourceType']);
        }

        return true;
    }


}



/**
 * @member {module:model/Condition} alertRuleId
 */
Conditions.prototype['alertRuleId'] = undefined;

/**
 * @member {module:model/Condition} applicationInsightsSearchResults
 */
Conditions.prototype['applicationInsightsSearchResults'] = undefined;

/**
 * @member {module:model/Condition} description
 */
Conditions.prototype['description'] = undefined;

/**
 * @member {module:model/Condition} logAnalyticsSearchResults
 */
Conditions.prototype['logAnalyticsSearchResults'] = undefined;

/**
 * @member {module:model/Condition} monitorCondition
 */
Conditions.prototype['monitorCondition'] = undefined;

/**
 * @member {module:model/Condition} monitorService
 */
Conditions.prototype['monitorService'] = undefined;

/**
 * @member {module:model/Condition} severity
 */
Conditions.prototype['severity'] = undefined;

/**
 * @member {module:model/Condition} signalType
 */
Conditions.prototype['signalType'] = undefined;

/**
 * @member {module:model/Condition} targetResource
 */
Conditions.prototype['targetResource'] = undefined;

/**
 * @member {module:model/Condition} targetResourceGroup
 */
Conditions.prototype['targetResourceGroup'] = undefined;

/**
 * @member {module:model/Condition} targetResourceType
 */
Conditions.prototype['targetResourceType'] = undefined;






export default Conditions;

