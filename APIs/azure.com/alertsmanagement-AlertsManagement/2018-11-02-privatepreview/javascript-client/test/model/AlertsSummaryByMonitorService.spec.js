/**
 * Azure Alerts Management Service Resource Provider
 * REST APIs for Azure Alerts Management Service.
 *
 * The version of the OpenAPI document: 2018-11-02-privatepreview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AzureAlertsManagementServiceResourceProvider);
  }
}(this, function(expect, AzureAlertsManagementServiceResourceProvider) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AzureAlertsManagementServiceResourceProvider.AlertsSummaryByMonitorService();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AlertsSummaryByMonitorService', function() {
    it('should create an instance of AlertsSummaryByMonitorService', function() {
      // uncomment below and update the code to test AlertsSummaryByMonitorService
      //var instance = new AzureAlertsManagementServiceResourceProvider.AlertsSummaryByMonitorService();
      //expect(instance).to.be.a(AzureAlertsManagementServiceResourceProvider.AlertsSummaryByMonitorService);
    });

    it('should have the property activityLogAdministrative (base name: "activityLog Administrative")', function() {
      // uncomment below and update the code to test the property activityLogAdministrative
      //var instance = new AzureAlertsManagementServiceResourceProvider.AlertsSummaryByMonitorService();
      //expect(instance).to.be();
    });

    it('should have the property activityLogAutoscale (base name: "activityLog Autoscale")', function() {
      // uncomment below and update the code to test the property activityLogAutoscale
      //var instance = new AzureAlertsManagementServiceResourceProvider.AlertsSummaryByMonitorService();
      //expect(instance).to.be();
    });

    it('should have the property activityLogPolicy (base name: "activityLog Policy")', function() {
      // uncomment below and update the code to test the property activityLogPolicy
      //var instance = new AzureAlertsManagementServiceResourceProvider.AlertsSummaryByMonitorService();
      //expect(instance).to.be();
    });

    it('should have the property activityLogRecommendation (base name: "activityLog Recommendation")', function() {
      // uncomment below and update the code to test the property activityLogRecommendation
      //var instance = new AzureAlertsManagementServiceResourceProvider.AlertsSummaryByMonitorService();
      //expect(instance).to.be();
    });

    it('should have the property activityLogSecurity (base name: "activityLog Security")', function() {
      // uncomment below and update the code to test the property activityLogSecurity
      //var instance = new AzureAlertsManagementServiceResourceProvider.AlertsSummaryByMonitorService();
      //expect(instance).to.be();
    });

    it('should have the property applicationInsights (base name: "application Insights")', function() {
      // uncomment below and update the code to test the property applicationInsights
      //var instance = new AzureAlertsManagementServiceResourceProvider.AlertsSummaryByMonitorService();
      //expect(instance).to.be();
    });

    it('should have the property infrastructureInsights (base name: "infrastructure Insights")', function() {
      // uncomment below and update the code to test the property infrastructureInsights
      //var instance = new AzureAlertsManagementServiceResourceProvider.AlertsSummaryByMonitorService();
      //expect(instance).to.be();
    });

    it('should have the property logAnalytics (base name: "log Analytics")', function() {
      // uncomment below and update the code to test the property logAnalytics
      //var instance = new AzureAlertsManagementServiceResourceProvider.AlertsSummaryByMonitorService();
      //expect(instance).to.be();
    });

    it('should have the property nagios (base name: "nagios")', function() {
      // uncomment below and update the code to test the property nagios
      //var instance = new AzureAlertsManagementServiceResourceProvider.AlertsSummaryByMonitorService();
      //expect(instance).to.be();
    });

    it('should have the property platform (base name: "platform")', function() {
      // uncomment below and update the code to test the property platform
      //var instance = new AzureAlertsManagementServiceResourceProvider.AlertsSummaryByMonitorService();
      //expect(instance).to.be();
    });

    it('should have the property scom (base name: "scom")', function() {
      // uncomment below and update the code to test the property scom
      //var instance = new AzureAlertsManagementServiceResourceProvider.AlertsSummaryByMonitorService();
      //expect(instance).to.be();
    });

    it('should have the property serviceHealth (base name: "serviceHealth")', function() {
      // uncomment below and update the code to test the property serviceHealth
      //var instance = new AzureAlertsManagementServiceResourceProvider.AlertsSummaryByMonitorService();
      //expect(instance).to.be();
    });

    it('should have the property smartDetector (base name: "smartDetector")', function() {
      // uncomment below and update the code to test the property smartDetector
      //var instance = new AzureAlertsManagementServiceResourceProvider.AlertsSummaryByMonitorService();
      //expect(instance).to.be();
    });

    it('should have the property zabbix (base name: "zabbix")', function() {
      // uncomment below and update the code to test the property zabbix
      //var instance = new AzureAlertsManagementServiceResourceProvider.AlertsSummaryByMonitorService();
      //expect(instance).to.be();
    });

  });

}));
