/**
 * Azure Alerts Management Service Resource Provider
 * REST APIs for Azure Alerts Management Service.
 *
 * The version of the OpenAPI document: 2018-11-02-privatepreview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AzureAlertsManagementServiceResourceProvider);
  }
}(this, function(expect, AzureAlertsManagementServiceResourceProvider) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AzureAlertsManagementServiceResourceProvider.DefaultApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DefaultApi', function() {
    describe('actionRulesCreateUpdate', function() {
      it('should call actionRulesCreateUpdate successfully', function(done) {
        //uncomment below and update the code to test actionRulesCreateUpdate
        //instance.actionRulesCreateUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('actionRulesDelete', function() {
      it('should call actionRulesDelete successfully', function(done) {
        //uncomment below and update the code to test actionRulesDelete
        //instance.actionRulesDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('actionRulesGetAllResourceGroup', function() {
      it('should call actionRulesGetAllResourceGroup successfully', function(done) {
        //uncomment below and update the code to test actionRulesGetAllResourceGroup
        //instance.actionRulesGetAllResourceGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('actionRulesGetAllSubscription', function() {
      it('should call actionRulesGetAllSubscription successfully', function(done) {
        //uncomment below and update the code to test actionRulesGetAllSubscription
        //instance.actionRulesGetAllSubscription(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('actionRulesGetByName', function() {
      it('should call actionRulesGetByName successfully', function(done) {
        //uncomment below and update the code to test actionRulesGetByName
        //instance.actionRulesGetByName(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('actionRulesPatch', function() {
      it('should call actionRulesPatch successfully', function(done) {
        //uncomment below and update the code to test actionRulesPatch
        //instance.actionRulesPatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('alertsChangeState', function() {
      it('should call alertsChangeState successfully', function(done) {
        //uncomment below and update the code to test alertsChangeState
        //instance.alertsChangeState(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('alertsGetAll', function() {
      it('should call alertsGetAll successfully', function(done) {
        //uncomment below and update the code to test alertsGetAll
        //instance.alertsGetAll(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('alertsGetById', function() {
      it('should call alertsGetById successfully', function(done) {
        //uncomment below and update the code to test alertsGetById
        //instance.alertsGetById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('alertsGetHistory', function() {
      it('should call alertsGetHistory successfully', function(done) {
        //uncomment below and update the code to test alertsGetHistory
        //instance.alertsGetHistory(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('alertsGetSummary', function() {
      it('should call alertsGetSummary successfully', function(done) {
        //uncomment below and update the code to test alertsGetSummary
        //instance.alertsGetSummary(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('operationsList', function() {
      it('should call operationsList successfully', function(done) {
        //uncomment below and update the code to test operationsList
        //instance.operationsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('smartGroupsChangeState', function() {
      it('should call smartGroupsChangeState successfully', function(done) {
        //uncomment below and update the code to test smartGroupsChangeState
        //instance.smartGroupsChangeState(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('smartGroupsGetAll', function() {
      it('should call smartGroupsGetAll successfully', function(done) {
        //uncomment below and update the code to test smartGroupsGetAll
        //instance.smartGroupsGetAll(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('smartGroupsGetById', function() {
      it('should call smartGroupsGetById successfully', function(done) {
        //uncomment below and update the code to test smartGroupsGetById
        //instance.smartGroupsGetById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('smartGroupsGetHistory', function() {
      it('should call smartGroupsGetHistory successfully', function(done) {
        //uncomment below and update the code to test smartGroupsGetHistory
        //instance.smartGroupsGetHistory(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
