/**
 * Azure Alerts Management Service Resource Provider
 * REST APIs for Azure Alerts Management Service.
 *
 * The version of the OpenAPI document: 2018-11-02-privatepreview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISmartGroupProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISmartGroupProperties::OAISmartGroupProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISmartGroupProperties::OAISmartGroupProperties() {
    this->initializeModel();
}

OAISmartGroupProperties::~OAISmartGroupProperties() {}

void OAISmartGroupProperties::initializeModel() {

    m_alert_severities_isSet = false;
    m_alert_severities_isValid = false;

    m_alert_states_isSet = false;
    m_alert_states_isValid = false;

    m_alerts_count_isSet = false;
    m_alerts_count_isValid = false;

    m_last_modified_date_time_isSet = false;
    m_last_modified_date_time_isValid = false;

    m_last_modified_user_name_isSet = false;
    m_last_modified_user_name_isValid = false;

    m_monitor_conditions_isSet = false;
    m_monitor_conditions_isValid = false;

    m_monitor_services_isSet = false;
    m_monitor_services_isValid = false;

    m_next_link_isSet = false;
    m_next_link_isValid = false;

    m_resource_groups_isSet = false;
    m_resource_groups_isValid = false;

    m_resource_types_isSet = false;
    m_resource_types_isValid = false;

    m_resources_isSet = false;
    m_resources_isValid = false;

    m_severity_isSet = false;
    m_severity_isValid = false;

    m_smart_group_state_isSet = false;
    m_smart_group_state_isValid = false;

    m_start_date_time_isSet = false;
    m_start_date_time_isValid = false;
}

void OAISmartGroupProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISmartGroupProperties::fromJsonObject(QJsonObject json) {

    m_alert_severities_isValid = ::OpenAPI::fromJsonValue(m_alert_severities, json[QString("alertSeverities")]);
    m_alert_severities_isSet = !json[QString("alertSeverities")].isNull() && m_alert_severities_isValid;

    m_alert_states_isValid = ::OpenAPI::fromJsonValue(m_alert_states, json[QString("alertStates")]);
    m_alert_states_isSet = !json[QString("alertStates")].isNull() && m_alert_states_isValid;

    m_alerts_count_isValid = ::OpenAPI::fromJsonValue(m_alerts_count, json[QString("alertsCount")]);
    m_alerts_count_isSet = !json[QString("alertsCount")].isNull() && m_alerts_count_isValid;

    m_last_modified_date_time_isValid = ::OpenAPI::fromJsonValue(m_last_modified_date_time, json[QString("lastModifiedDateTime")]);
    m_last_modified_date_time_isSet = !json[QString("lastModifiedDateTime")].isNull() && m_last_modified_date_time_isValid;

    m_last_modified_user_name_isValid = ::OpenAPI::fromJsonValue(m_last_modified_user_name, json[QString("lastModifiedUserName")]);
    m_last_modified_user_name_isSet = !json[QString("lastModifiedUserName")].isNull() && m_last_modified_user_name_isValid;

    m_monitor_conditions_isValid = ::OpenAPI::fromJsonValue(m_monitor_conditions, json[QString("monitorConditions")]);
    m_monitor_conditions_isSet = !json[QString("monitorConditions")].isNull() && m_monitor_conditions_isValid;

    m_monitor_services_isValid = ::OpenAPI::fromJsonValue(m_monitor_services, json[QString("monitorServices")]);
    m_monitor_services_isSet = !json[QString("monitorServices")].isNull() && m_monitor_services_isValid;

    m_next_link_isValid = ::OpenAPI::fromJsonValue(m_next_link, json[QString("nextLink")]);
    m_next_link_isSet = !json[QString("nextLink")].isNull() && m_next_link_isValid;

    m_resource_groups_isValid = ::OpenAPI::fromJsonValue(m_resource_groups, json[QString("resourceGroups")]);
    m_resource_groups_isSet = !json[QString("resourceGroups")].isNull() && m_resource_groups_isValid;

    m_resource_types_isValid = ::OpenAPI::fromJsonValue(m_resource_types, json[QString("resourceTypes")]);
    m_resource_types_isSet = !json[QString("resourceTypes")].isNull() && m_resource_types_isValid;

    m_resources_isValid = ::OpenAPI::fromJsonValue(m_resources, json[QString("resources")]);
    m_resources_isSet = !json[QString("resources")].isNull() && m_resources_isValid;

    m_severity_isValid = ::OpenAPI::fromJsonValue(m_severity, json[QString("severity")]);
    m_severity_isSet = !json[QString("severity")].isNull() && m_severity_isValid;

    m_smart_group_state_isValid = ::OpenAPI::fromJsonValue(m_smart_group_state, json[QString("smartGroupState")]);
    m_smart_group_state_isSet = !json[QString("smartGroupState")].isNull() && m_smart_group_state_isValid;

    m_start_date_time_isValid = ::OpenAPI::fromJsonValue(m_start_date_time, json[QString("startDateTime")]);
    m_start_date_time_isSet = !json[QString("startDateTime")].isNull() && m_start_date_time_isValid;
}

QString OAISmartGroupProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISmartGroupProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_alert_severities.size() > 0) {
        obj.insert(QString("alertSeverities"), ::OpenAPI::toJsonValue(m_alert_severities));
    }
    if (m_alert_states.size() > 0) {
        obj.insert(QString("alertStates"), ::OpenAPI::toJsonValue(m_alert_states));
    }
    if (m_alerts_count_isSet) {
        obj.insert(QString("alertsCount"), ::OpenAPI::toJsonValue(m_alerts_count));
    }
    if (m_last_modified_date_time_isSet) {
        obj.insert(QString("lastModifiedDateTime"), ::OpenAPI::toJsonValue(m_last_modified_date_time));
    }
    if (m_last_modified_user_name_isSet) {
        obj.insert(QString("lastModifiedUserName"), ::OpenAPI::toJsonValue(m_last_modified_user_name));
    }
    if (m_monitor_conditions.size() > 0) {
        obj.insert(QString("monitorConditions"), ::OpenAPI::toJsonValue(m_monitor_conditions));
    }
    if (m_monitor_services.size() > 0) {
        obj.insert(QString("monitorServices"), ::OpenAPI::toJsonValue(m_monitor_services));
    }
    if (m_next_link_isSet) {
        obj.insert(QString("nextLink"), ::OpenAPI::toJsonValue(m_next_link));
    }
    if (m_resource_groups.size() > 0) {
        obj.insert(QString("resourceGroups"), ::OpenAPI::toJsonValue(m_resource_groups));
    }
    if (m_resource_types.size() > 0) {
        obj.insert(QString("resourceTypes"), ::OpenAPI::toJsonValue(m_resource_types));
    }
    if (m_resources.size() > 0) {
        obj.insert(QString("resources"), ::OpenAPI::toJsonValue(m_resources));
    }
    if (m_severity_isSet) {
        obj.insert(QString("severity"), ::OpenAPI::toJsonValue(m_severity));
    }
    if (m_smart_group_state_isSet) {
        obj.insert(QString("smartGroupState"), ::OpenAPI::toJsonValue(m_smart_group_state));
    }
    if (m_start_date_time_isSet) {
        obj.insert(QString("startDateTime"), ::OpenAPI::toJsonValue(m_start_date_time));
    }
    return obj;
}

QList<OAISmartGroupAggregatedProperty> OAISmartGroupProperties::getAlertSeverities() const {
    return m_alert_severities;
}
void OAISmartGroupProperties::setAlertSeverities(const QList<OAISmartGroupAggregatedProperty> &alert_severities) {
    m_alert_severities = alert_severities;
    m_alert_severities_isSet = true;
}

bool OAISmartGroupProperties::is_alert_severities_Set() const{
    return m_alert_severities_isSet;
}

bool OAISmartGroupProperties::is_alert_severities_Valid() const{
    return m_alert_severities_isValid;
}

QList<OAISmartGroupAggregatedProperty> OAISmartGroupProperties::getAlertStates() const {
    return m_alert_states;
}
void OAISmartGroupProperties::setAlertStates(const QList<OAISmartGroupAggregatedProperty> &alert_states) {
    m_alert_states = alert_states;
    m_alert_states_isSet = true;
}

bool OAISmartGroupProperties::is_alert_states_Set() const{
    return m_alert_states_isSet;
}

bool OAISmartGroupProperties::is_alert_states_Valid() const{
    return m_alert_states_isValid;
}

qint32 OAISmartGroupProperties::getAlertsCount() const {
    return m_alerts_count;
}
void OAISmartGroupProperties::setAlertsCount(const qint32 &alerts_count) {
    m_alerts_count = alerts_count;
    m_alerts_count_isSet = true;
}

bool OAISmartGroupProperties::is_alerts_count_Set() const{
    return m_alerts_count_isSet;
}

bool OAISmartGroupProperties::is_alerts_count_Valid() const{
    return m_alerts_count_isValid;
}

QDateTime OAISmartGroupProperties::getLastModifiedDateTime() const {
    return m_last_modified_date_time;
}
void OAISmartGroupProperties::setLastModifiedDateTime(const QDateTime &last_modified_date_time) {
    m_last_modified_date_time = last_modified_date_time;
    m_last_modified_date_time_isSet = true;
}

bool OAISmartGroupProperties::is_last_modified_date_time_Set() const{
    return m_last_modified_date_time_isSet;
}

bool OAISmartGroupProperties::is_last_modified_date_time_Valid() const{
    return m_last_modified_date_time_isValid;
}

QString OAISmartGroupProperties::getLastModifiedUserName() const {
    return m_last_modified_user_name;
}
void OAISmartGroupProperties::setLastModifiedUserName(const QString &last_modified_user_name) {
    m_last_modified_user_name = last_modified_user_name;
    m_last_modified_user_name_isSet = true;
}

bool OAISmartGroupProperties::is_last_modified_user_name_Set() const{
    return m_last_modified_user_name_isSet;
}

bool OAISmartGroupProperties::is_last_modified_user_name_Valid() const{
    return m_last_modified_user_name_isValid;
}

QList<OAISmartGroupAggregatedProperty> OAISmartGroupProperties::getMonitorConditions() const {
    return m_monitor_conditions;
}
void OAISmartGroupProperties::setMonitorConditions(const QList<OAISmartGroupAggregatedProperty> &monitor_conditions) {
    m_monitor_conditions = monitor_conditions;
    m_monitor_conditions_isSet = true;
}

bool OAISmartGroupProperties::is_monitor_conditions_Set() const{
    return m_monitor_conditions_isSet;
}

bool OAISmartGroupProperties::is_monitor_conditions_Valid() const{
    return m_monitor_conditions_isValid;
}

QList<OAISmartGroupAggregatedProperty> OAISmartGroupProperties::getMonitorServices() const {
    return m_monitor_services;
}
void OAISmartGroupProperties::setMonitorServices(const QList<OAISmartGroupAggregatedProperty> &monitor_services) {
    m_monitor_services = monitor_services;
    m_monitor_services_isSet = true;
}

bool OAISmartGroupProperties::is_monitor_services_Set() const{
    return m_monitor_services_isSet;
}

bool OAISmartGroupProperties::is_monitor_services_Valid() const{
    return m_monitor_services_isValid;
}

QString OAISmartGroupProperties::getNextLink() const {
    return m_next_link;
}
void OAISmartGroupProperties::setNextLink(const QString &next_link) {
    m_next_link = next_link;
    m_next_link_isSet = true;
}

bool OAISmartGroupProperties::is_next_link_Set() const{
    return m_next_link_isSet;
}

bool OAISmartGroupProperties::is_next_link_Valid() const{
    return m_next_link_isValid;
}

QList<OAISmartGroupAggregatedProperty> OAISmartGroupProperties::getResourceGroups() const {
    return m_resource_groups;
}
void OAISmartGroupProperties::setResourceGroups(const QList<OAISmartGroupAggregatedProperty> &resource_groups) {
    m_resource_groups = resource_groups;
    m_resource_groups_isSet = true;
}

bool OAISmartGroupProperties::is_resource_groups_Set() const{
    return m_resource_groups_isSet;
}

bool OAISmartGroupProperties::is_resource_groups_Valid() const{
    return m_resource_groups_isValid;
}

QList<OAISmartGroupAggregatedProperty> OAISmartGroupProperties::getResourceTypes() const {
    return m_resource_types;
}
void OAISmartGroupProperties::setResourceTypes(const QList<OAISmartGroupAggregatedProperty> &resource_types) {
    m_resource_types = resource_types;
    m_resource_types_isSet = true;
}

bool OAISmartGroupProperties::is_resource_types_Set() const{
    return m_resource_types_isSet;
}

bool OAISmartGroupProperties::is_resource_types_Valid() const{
    return m_resource_types_isValid;
}

QList<OAISmartGroupAggregatedProperty> OAISmartGroupProperties::getResources() const {
    return m_resources;
}
void OAISmartGroupProperties::setResources(const QList<OAISmartGroupAggregatedProperty> &resources) {
    m_resources = resources;
    m_resources_isSet = true;
}

bool OAISmartGroupProperties::is_resources_Set() const{
    return m_resources_isSet;
}

bool OAISmartGroupProperties::is_resources_Valid() const{
    return m_resources_isValid;
}

QString OAISmartGroupProperties::getSeverity() const {
    return m_severity;
}
void OAISmartGroupProperties::setSeverity(const QString &severity) {
    m_severity = severity;
    m_severity_isSet = true;
}

bool OAISmartGroupProperties::is_severity_Set() const{
    return m_severity_isSet;
}

bool OAISmartGroupProperties::is_severity_Valid() const{
    return m_severity_isValid;
}

QString OAISmartGroupProperties::getSmartGroupState() const {
    return m_smart_group_state;
}
void OAISmartGroupProperties::setSmartGroupState(const QString &smart_group_state) {
    m_smart_group_state = smart_group_state;
    m_smart_group_state_isSet = true;
}

bool OAISmartGroupProperties::is_smart_group_state_Set() const{
    return m_smart_group_state_isSet;
}

bool OAISmartGroupProperties::is_smart_group_state_Valid() const{
    return m_smart_group_state_isValid;
}

QDateTime OAISmartGroupProperties::getStartDateTime() const {
    return m_start_date_time;
}
void OAISmartGroupProperties::setStartDateTime(const QDateTime &start_date_time) {
    m_start_date_time = start_date_time;
    m_start_date_time_isSet = true;
}

bool OAISmartGroupProperties::is_start_date_time_Set() const{
    return m_start_date_time_isSet;
}

bool OAISmartGroupProperties::is_start_date_time_Valid() const{
    return m_start_date_time_isValid;
}

bool OAISmartGroupProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_alert_severities.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_alert_states.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_alerts_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_date_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_user_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_monitor_conditions.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_monitor_services.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_link_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_groups.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_types.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_resources.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_severity_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_smart_group_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_date_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISmartGroupProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
