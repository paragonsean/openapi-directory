/**
 * Azure Alerts Management Service Resource Provider
 * REST APIs for Azure Alerts Management Service.
 *
 * The version of the OpenAPI document: 2018-11-02-privatepreview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISuppressionConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISuppressionConfig::OAISuppressionConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISuppressionConfig::OAISuppressionConfig() {
    this->initializeModel();
}

OAISuppressionConfig::~OAISuppressionConfig() {}

void OAISuppressionConfig::initializeModel() {

    m_recurrence_type_isSet = false;
    m_recurrence_type_isValid = false;

    m_schedule_isSet = false;
    m_schedule_isValid = false;
}

void OAISuppressionConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISuppressionConfig::fromJsonObject(QJsonObject json) {

    m_recurrence_type_isValid = ::OpenAPI::fromJsonValue(m_recurrence_type, json[QString("recurrenceType")]);
    m_recurrence_type_isSet = !json[QString("recurrenceType")].isNull() && m_recurrence_type_isValid;

    m_schedule_isValid = ::OpenAPI::fromJsonValue(m_schedule, json[QString("schedule")]);
    m_schedule_isSet = !json[QString("schedule")].isNull() && m_schedule_isValid;
}

QString OAISuppressionConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISuppressionConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_recurrence_type_isSet) {
        obj.insert(QString("recurrenceType"), ::OpenAPI::toJsonValue(m_recurrence_type));
    }
    if (m_schedule.isSet()) {
        obj.insert(QString("schedule"), ::OpenAPI::toJsonValue(m_schedule));
    }
    return obj;
}

QString OAISuppressionConfig::getRecurrenceType() const {
    return m_recurrence_type;
}
void OAISuppressionConfig::setRecurrenceType(const QString &recurrence_type) {
    m_recurrence_type = recurrence_type;
    m_recurrence_type_isSet = true;
}

bool OAISuppressionConfig::is_recurrence_type_Set() const{
    return m_recurrence_type_isSet;
}

bool OAISuppressionConfig::is_recurrence_type_Valid() const{
    return m_recurrence_type_isValid;
}

OAISuppressionSchedule OAISuppressionConfig::getSchedule() const {
    return m_schedule;
}
void OAISuppressionConfig::setSchedule(const OAISuppressionSchedule &schedule) {
    m_schedule = schedule;
    m_schedule_isSet = true;
}

bool OAISuppressionConfig::is_schedule_Set() const{
    return m_schedule_isSet;
}

bool OAISuppressionConfig::is_schedule_Valid() const{
    return m_schedule_isValid;
}

bool OAISuppressionConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_recurrence_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_schedule.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISuppressionConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_recurrence_type_isValid && true;
}

} // namespace OpenAPI
