/*
 * Azure Alerts Management Service Resource Provider
 * REST APIs for Azure Alerts Management Service.
 *
 * The version of the OpenAPI document: 2018-11-02-privatepreview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.AlertsSummaryByMonitorCondition;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Summary of the alerts by severity and monitor condition
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:05:29.686007-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AlertsSummaryBySeverityAndMonitorCondition {
  public static final String SERIALIZED_NAME_SEV0 = "sev0";
  @SerializedName(SERIALIZED_NAME_SEV0)
  private AlertsSummaryByMonitorCondition sev0;

  public static final String SERIALIZED_NAME_SEV1 = "sev1";
  @SerializedName(SERIALIZED_NAME_SEV1)
  private AlertsSummaryByMonitorCondition sev1;

  public static final String SERIALIZED_NAME_SEV2 = "sev2";
  @SerializedName(SERIALIZED_NAME_SEV2)
  private AlertsSummaryByMonitorCondition sev2;

  public static final String SERIALIZED_NAME_SEV3 = "sev3";
  @SerializedName(SERIALIZED_NAME_SEV3)
  private AlertsSummaryByMonitorCondition sev3;

  public static final String SERIALIZED_NAME_SEV4 = "sev4";
  @SerializedName(SERIALIZED_NAME_SEV4)
  private AlertsSummaryByMonitorCondition sev4;

  public AlertsSummaryBySeverityAndMonitorCondition() {
  }

  public AlertsSummaryBySeverityAndMonitorCondition sev0(AlertsSummaryByMonitorCondition sev0) {
    this.sev0 = sev0;
    return this;
  }

  /**
   * Summary of alerts by monitor condition with severity &#39;Sev0&#39;
   * @return sev0
   */
  @javax.annotation.Nullable
  public AlertsSummaryByMonitorCondition getSev0() {
    return sev0;
  }

  public void setSev0(AlertsSummaryByMonitorCondition sev0) {
    this.sev0 = sev0;
  }


  public AlertsSummaryBySeverityAndMonitorCondition sev1(AlertsSummaryByMonitorCondition sev1) {
    this.sev1 = sev1;
    return this;
  }

  /**
   * Summary of alerts by monitor condition with severity &#39;Sev1&#39;
   * @return sev1
   */
  @javax.annotation.Nullable
  public AlertsSummaryByMonitorCondition getSev1() {
    return sev1;
  }

  public void setSev1(AlertsSummaryByMonitorCondition sev1) {
    this.sev1 = sev1;
  }


  public AlertsSummaryBySeverityAndMonitorCondition sev2(AlertsSummaryByMonitorCondition sev2) {
    this.sev2 = sev2;
    return this;
  }

  /**
   * Summary of alerts by monitor condition with severity &#39;Sev2&#39;
   * @return sev2
   */
  @javax.annotation.Nullable
  public AlertsSummaryByMonitorCondition getSev2() {
    return sev2;
  }

  public void setSev2(AlertsSummaryByMonitorCondition sev2) {
    this.sev2 = sev2;
  }


  public AlertsSummaryBySeverityAndMonitorCondition sev3(AlertsSummaryByMonitorCondition sev3) {
    this.sev3 = sev3;
    return this;
  }

  /**
   * Summary of alerts by monitor condition with severity &#39;Sev3&#39;
   * @return sev3
   */
  @javax.annotation.Nullable
  public AlertsSummaryByMonitorCondition getSev3() {
    return sev3;
  }

  public void setSev3(AlertsSummaryByMonitorCondition sev3) {
    this.sev3 = sev3;
  }


  public AlertsSummaryBySeverityAndMonitorCondition sev4(AlertsSummaryByMonitorCondition sev4) {
    this.sev4 = sev4;
    return this;
  }

  /**
   * Summary of alerts by monitor condition with severity &#39;Sev4&#39;
   * @return sev4
   */
  @javax.annotation.Nullable
  public AlertsSummaryByMonitorCondition getSev4() {
    return sev4;
  }

  public void setSev4(AlertsSummaryByMonitorCondition sev4) {
    this.sev4 = sev4;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AlertsSummaryBySeverityAndMonitorCondition alertsSummaryBySeverityAndMonitorCondition = (AlertsSummaryBySeverityAndMonitorCondition) o;
    return Objects.equals(this.sev0, alertsSummaryBySeverityAndMonitorCondition.sev0) &&
        Objects.equals(this.sev1, alertsSummaryBySeverityAndMonitorCondition.sev1) &&
        Objects.equals(this.sev2, alertsSummaryBySeverityAndMonitorCondition.sev2) &&
        Objects.equals(this.sev3, alertsSummaryBySeverityAndMonitorCondition.sev3) &&
        Objects.equals(this.sev4, alertsSummaryBySeverityAndMonitorCondition.sev4);
  }

  @Override
  public int hashCode() {
    return Objects.hash(sev0, sev1, sev2, sev3, sev4);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AlertsSummaryBySeverityAndMonitorCondition {\n");
    sb.append("    sev0: ").append(toIndentedString(sev0)).append("\n");
    sb.append("    sev1: ").append(toIndentedString(sev1)).append("\n");
    sb.append("    sev2: ").append(toIndentedString(sev2)).append("\n");
    sb.append("    sev3: ").append(toIndentedString(sev3)).append("\n");
    sb.append("    sev4: ").append(toIndentedString(sev4)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("sev0");
    openapiFields.add("sev1");
    openapiFields.add("sev2");
    openapiFields.add("sev3");
    openapiFields.add("sev4");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AlertsSummaryBySeverityAndMonitorCondition
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AlertsSummaryBySeverityAndMonitorCondition.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AlertsSummaryBySeverityAndMonitorCondition is not found in the empty JSON string", AlertsSummaryBySeverityAndMonitorCondition.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AlertsSummaryBySeverityAndMonitorCondition.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AlertsSummaryBySeverityAndMonitorCondition` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `sev0`
      if (jsonObj.get("sev0") != null && !jsonObj.get("sev0").isJsonNull()) {
        AlertsSummaryByMonitorCondition.validateJsonElement(jsonObj.get("sev0"));
      }
      // validate the optional field `sev1`
      if (jsonObj.get("sev1") != null && !jsonObj.get("sev1").isJsonNull()) {
        AlertsSummaryByMonitorCondition.validateJsonElement(jsonObj.get("sev1"));
      }
      // validate the optional field `sev2`
      if (jsonObj.get("sev2") != null && !jsonObj.get("sev2").isJsonNull()) {
        AlertsSummaryByMonitorCondition.validateJsonElement(jsonObj.get("sev2"));
      }
      // validate the optional field `sev3`
      if (jsonObj.get("sev3") != null && !jsonObj.get("sev3").isJsonNull()) {
        AlertsSummaryByMonitorCondition.validateJsonElement(jsonObj.get("sev3"));
      }
      // validate the optional field `sev4`
      if (jsonObj.get("sev4") != null && !jsonObj.get("sev4").isJsonNull()) {
        AlertsSummaryByMonitorCondition.validateJsonElement(jsonObj.get("sev4"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AlertsSummaryBySeverityAndMonitorCondition.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AlertsSummaryBySeverityAndMonitorCondition' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AlertsSummaryBySeverityAndMonitorCondition> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AlertsSummaryBySeverityAndMonitorCondition.class));

       return (TypeAdapter<T>) new TypeAdapter<AlertsSummaryBySeverityAndMonitorCondition>() {
           @Override
           public void write(JsonWriter out, AlertsSummaryBySeverityAndMonitorCondition value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AlertsSummaryBySeverityAndMonitorCondition read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AlertsSummaryBySeverityAndMonitorCondition given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AlertsSummaryBySeverityAndMonitorCondition
   * @throws IOException if the JSON string is invalid with respect to AlertsSummaryBySeverityAndMonitorCondition
   */
  public static AlertsSummaryBySeverityAndMonitorCondition fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AlertsSummaryBySeverityAndMonitorCondition.class);
  }

  /**
   * Convert an instance of AlertsSummaryBySeverityAndMonitorCondition to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

