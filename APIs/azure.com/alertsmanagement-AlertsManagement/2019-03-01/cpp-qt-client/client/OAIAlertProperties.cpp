/**
 * Azure Alerts Management Service Resource Provider
 * Azure Alerts Management Service provides a single pane of glass of alerts across Azure Monitor.
 *
 * The version of the OpenAPI document: 2019-03-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAlertProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAlertProperties::OAIAlertProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAlertProperties::OAIAlertProperties() {
    this->initializeModel();
}

OAIAlertProperties::~OAIAlertProperties() {}

void OAIAlertProperties::initializeModel() {

    m_context_isSet = false;
    m_context_isValid = false;

    m_egress_config_isSet = false;
    m_egress_config_isValid = false;

    m_essentials_isSet = false;
    m_essentials_isValid = false;
}

void OAIAlertProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAlertProperties::fromJsonObject(QJsonObject json) {

    m_context_isValid = ::OpenAPI::fromJsonValue(m_context, json[QString("context")]);
    m_context_isSet = !json[QString("context")].isNull() && m_context_isValid;

    m_egress_config_isValid = ::OpenAPI::fromJsonValue(m_egress_config, json[QString("egressConfig")]);
    m_egress_config_isSet = !json[QString("egressConfig")].isNull() && m_egress_config_isValid;

    m_essentials_isValid = ::OpenAPI::fromJsonValue(m_essentials, json[QString("essentials")]);
    m_essentials_isSet = !json[QString("essentials")].isNull() && m_essentials_isValid;
}

QString OAIAlertProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAlertProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_context_isSet) {
        obj.insert(QString("context"), ::OpenAPI::toJsonValue(m_context));
    }
    if (m_egress_config_isSet) {
        obj.insert(QString("egressConfig"), ::OpenAPI::toJsonValue(m_egress_config));
    }
    if (m_essentials.isSet()) {
        obj.insert(QString("essentials"), ::OpenAPI::toJsonValue(m_essentials));
    }
    return obj;
}

OAIObject OAIAlertProperties::getContext() const {
    return m_context;
}
void OAIAlertProperties::setContext(const OAIObject &context) {
    m_context = context;
    m_context_isSet = true;
}

bool OAIAlertProperties::is_context_Set() const{
    return m_context_isSet;
}

bool OAIAlertProperties::is_context_Valid() const{
    return m_context_isValid;
}

OAIObject OAIAlertProperties::getEgressConfig() const {
    return m_egress_config;
}
void OAIAlertProperties::setEgressConfig(const OAIObject &egress_config) {
    m_egress_config = egress_config;
    m_egress_config_isSet = true;
}

bool OAIAlertProperties::is_egress_config_Set() const{
    return m_egress_config_isSet;
}

bool OAIAlertProperties::is_egress_config_Valid() const{
    return m_egress_config_isValid;
}

OAIEssentials OAIAlertProperties::getEssentials() const {
    return m_essentials;
}
void OAIAlertProperties::setEssentials(const OAIEssentials &essentials) {
    m_essentials = essentials;
    m_essentials_isSet = true;
}

bool OAIAlertProperties::is_essentials_Set() const{
    return m_essentials_isSet;
}

bool OAIAlertProperties::is_essentials_Valid() const{
    return m_essentials_isValid;
}

bool OAIAlertProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_context_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_egress_config_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_essentials.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAlertProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
