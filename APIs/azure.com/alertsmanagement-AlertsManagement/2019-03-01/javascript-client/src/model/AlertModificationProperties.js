/**
 * Azure Alerts Management Service Resource Provider
 * Azure Alerts Management Service provides a single pane of glass of alerts across Azure Monitor.
 *
 * The version of the OpenAPI document: 2019-03-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AlertModificationItem from './AlertModificationItem';

/**
 * The AlertModificationProperties model module.
 * @module model/AlertModificationProperties
 * @version 2019-03-01
 */
class AlertModificationProperties {
    /**
     * Constructs a new <code>AlertModificationProperties</code>.
     * Properties of the alert modification item.
     * @alias module:model/AlertModificationProperties
     */
    constructor() { 
        
        AlertModificationProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AlertModificationProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AlertModificationProperties} obj Optional instance to populate.
     * @return {module:model/AlertModificationProperties} The populated <code>AlertModificationProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AlertModificationProperties();

            if (data.hasOwnProperty('alertId')) {
                obj['alertId'] = ApiClient.convertToType(data['alertId'], 'String');
            }
            if (data.hasOwnProperty('modifications')) {
                obj['modifications'] = ApiClient.convertToType(data['modifications'], [AlertModificationItem]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AlertModificationProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AlertModificationProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['alertId'] && !(typeof data['alertId'] === 'string' || data['alertId'] instanceof String)) {
            throw new Error("Expected the field `alertId` to be a primitive type in the JSON string but got " + data['alertId']);
        }
        if (data['modifications']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['modifications'])) {
                throw new Error("Expected the field `modifications` to be an array in the JSON data but got " + data['modifications']);
            }
            // validate the optional field `modifications` (array)
            for (const item of data['modifications']) {
                AlertModificationItem.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Unique Id of the alert for which the history is being retrieved
 * @member {String} alertId
 */
AlertModificationProperties.prototype['alertId'] = undefined;

/**
 * Modification details
 * @member {Array.<module:model/AlertModificationItem>} modifications
 */
AlertModificationProperties.prototype['modifications'] = undefined;






export default AlertModificationProperties;

