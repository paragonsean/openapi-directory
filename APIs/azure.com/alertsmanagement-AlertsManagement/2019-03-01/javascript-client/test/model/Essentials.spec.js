/**
 * Azure Alerts Management Service Resource Provider
 * Azure Alerts Management Service provides a single pane of glass of alerts across Azure Monitor.
 *
 * The version of the OpenAPI document: 2019-03-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AzureAlertsManagementServiceResourceProvider);
  }
}(this, function(expect, AzureAlertsManagementServiceResourceProvider) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AzureAlertsManagementServiceResourceProvider.Essentials();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Essentials', function() {
    it('should create an instance of Essentials', function() {
      // uncomment below and update the code to test Essentials
      //var instance = new AzureAlertsManagementServiceResourceProvider.Essentials();
      //expect(instance).to.be.a(AzureAlertsManagementServiceResourceProvider.Essentials);
    });

    it('should have the property alertRule (base name: "alertRule")', function() {
      // uncomment below and update the code to test the property alertRule
      //var instance = new AzureAlertsManagementServiceResourceProvider.Essentials();
      //expect(instance).to.be();
    });

    it('should have the property alertState (base name: "alertState")', function() {
      // uncomment below and update the code to test the property alertState
      //var instance = new AzureAlertsManagementServiceResourceProvider.Essentials();
      //expect(instance).to.be();
    });

    it('should have the property lastModifiedDateTime (base name: "lastModifiedDateTime")', function() {
      // uncomment below and update the code to test the property lastModifiedDateTime
      //var instance = new AzureAlertsManagementServiceResourceProvider.Essentials();
      //expect(instance).to.be();
    });

    it('should have the property lastModifiedUserName (base name: "lastModifiedUserName")', function() {
      // uncomment below and update the code to test the property lastModifiedUserName
      //var instance = new AzureAlertsManagementServiceResourceProvider.Essentials();
      //expect(instance).to.be();
    });

    it('should have the property monitorCondition (base name: "monitorCondition")', function() {
      // uncomment below and update the code to test the property monitorCondition
      //var instance = new AzureAlertsManagementServiceResourceProvider.Essentials();
      //expect(instance).to.be();
    });

    it('should have the property monitorConditionResolvedDateTime (base name: "monitorConditionResolvedDateTime")', function() {
      // uncomment below and update the code to test the property monitorConditionResolvedDateTime
      //var instance = new AzureAlertsManagementServiceResourceProvider.Essentials();
      //expect(instance).to.be();
    });

    it('should have the property monitorService (base name: "monitorService")', function() {
      // uncomment below and update the code to test the property monitorService
      //var instance = new AzureAlertsManagementServiceResourceProvider.Essentials();
      //expect(instance).to.be();
    });

    it('should have the property severity (base name: "severity")', function() {
      // uncomment below and update the code to test the property severity
      //var instance = new AzureAlertsManagementServiceResourceProvider.Essentials();
      //expect(instance).to.be();
    });

    it('should have the property signalType (base name: "signalType")', function() {
      // uncomment below and update the code to test the property signalType
      //var instance = new AzureAlertsManagementServiceResourceProvider.Essentials();
      //expect(instance).to.be();
    });

    it('should have the property smartGroupId (base name: "smartGroupId")', function() {
      // uncomment below and update the code to test the property smartGroupId
      //var instance = new AzureAlertsManagementServiceResourceProvider.Essentials();
      //expect(instance).to.be();
    });

    it('should have the property smartGroupingReason (base name: "smartGroupingReason")', function() {
      // uncomment below and update the code to test the property smartGroupingReason
      //var instance = new AzureAlertsManagementServiceResourceProvider.Essentials();
      //expect(instance).to.be();
    });

    it('should have the property sourceCreatedId (base name: "sourceCreatedId")', function() {
      // uncomment below and update the code to test the property sourceCreatedId
      //var instance = new AzureAlertsManagementServiceResourceProvider.Essentials();
      //expect(instance).to.be();
    });

    it('should have the property startDateTime (base name: "startDateTime")', function() {
      // uncomment below and update the code to test the property startDateTime
      //var instance = new AzureAlertsManagementServiceResourceProvider.Essentials();
      //expect(instance).to.be();
    });

    it('should have the property targetResource (base name: "targetResource")', function() {
      // uncomment below and update the code to test the property targetResource
      //var instance = new AzureAlertsManagementServiceResourceProvider.Essentials();
      //expect(instance).to.be();
    });

    it('should have the property targetResourceGroup (base name: "targetResourceGroup")', function() {
      // uncomment below and update the code to test the property targetResourceGroup
      //var instance = new AzureAlertsManagementServiceResourceProvider.Essentials();
      //expect(instance).to.be();
    });

    it('should have the property targetResourceName (base name: "targetResourceName")', function() {
      // uncomment below and update the code to test the property targetResourceName
      //var instance = new AzureAlertsManagementServiceResourceProvider.Essentials();
      //expect(instance).to.be();
    });

    it('should have the property targetResourceType (base name: "targetResourceType")', function() {
      // uncomment below and update the code to test the property targetResourceType
      //var instance = new AzureAlertsManagementServiceResourceProvider.Essentials();
      //expect(instance).to.be();
    });

  });

}));
