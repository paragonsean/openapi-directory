/**
 * Azure Alerts Management Service Resource Provider
 * REST APIs for Azure Alerts Management Service.
 *
 * The version of the OpenAPI document: 2018-05-05-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SmartGroupModificationItem model module.
 * @module model/SmartGroupModificationItem
 * @version 2018-05-05-preview
 */
class SmartGroupModificationItem {
    /**
     * Constructs a new <code>SmartGroupModificationItem</code>.
     * smartGroup modification item.
     * @alias module:model/SmartGroupModificationItem
     */
    constructor() { 
        
        SmartGroupModificationItem.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SmartGroupModificationItem</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SmartGroupModificationItem} obj Optional instance to populate.
     * @return {module:model/SmartGroupModificationItem} The populated <code>SmartGroupModificationItem</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SmartGroupModificationItem();

            if (data.hasOwnProperty('comments')) {
                obj['comments'] = ApiClient.convertToType(data['comments'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('modificationEvent')) {
                obj['modificationEvent'] = ApiClient.convertToType(data['modificationEvent'], 'String');
            }
            if (data.hasOwnProperty('modifiedAt')) {
                obj['modifiedAt'] = ApiClient.convertToType(data['modifiedAt'], 'String');
            }
            if (data.hasOwnProperty('modifiedBy')) {
                obj['modifiedBy'] = ApiClient.convertToType(data['modifiedBy'], 'String');
            }
            if (data.hasOwnProperty('newValue')) {
                obj['newValue'] = ApiClient.convertToType(data['newValue'], 'String');
            }
            if (data.hasOwnProperty('oldValue')) {
                obj['oldValue'] = ApiClient.convertToType(data['oldValue'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SmartGroupModificationItem</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SmartGroupModificationItem</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['comments'] && !(typeof data['comments'] === 'string' || data['comments'] instanceof String)) {
            throw new Error("Expected the field `comments` to be a primitive type in the JSON string but got " + data['comments']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['modificationEvent'] && !(typeof data['modificationEvent'] === 'string' || data['modificationEvent'] instanceof String)) {
            throw new Error("Expected the field `modificationEvent` to be a primitive type in the JSON string but got " + data['modificationEvent']);
        }
        // ensure the json data is a string
        if (data['modifiedAt'] && !(typeof data['modifiedAt'] === 'string' || data['modifiedAt'] instanceof String)) {
            throw new Error("Expected the field `modifiedAt` to be a primitive type in the JSON string but got " + data['modifiedAt']);
        }
        // ensure the json data is a string
        if (data['modifiedBy'] && !(typeof data['modifiedBy'] === 'string' || data['modifiedBy'] instanceof String)) {
            throw new Error("Expected the field `modifiedBy` to be a primitive type in the JSON string but got " + data['modifiedBy']);
        }
        // ensure the json data is a string
        if (data['newValue'] && !(typeof data['newValue'] === 'string' || data['newValue'] instanceof String)) {
            throw new Error("Expected the field `newValue` to be a primitive type in the JSON string but got " + data['newValue']);
        }
        // ensure the json data is a string
        if (data['oldValue'] && !(typeof data['oldValue'] === 'string' || data['oldValue'] instanceof String)) {
            throw new Error("Expected the field `oldValue` to be a primitive type in the JSON string but got " + data['oldValue']);
        }

        return true;
    }


}



/**
 * Modification comments
 * @member {String} comments
 */
SmartGroupModificationItem.prototype['comments'] = undefined;

/**
 * Description of the modification
 * @member {String} description
 */
SmartGroupModificationItem.prototype['description'] = undefined;

/**
 * Reason for the modification
 * @member {module:model/SmartGroupModificationItem.ModificationEventEnum} modificationEvent
 */
SmartGroupModificationItem.prototype['modificationEvent'] = undefined;

/**
 * Modified date and time
 * @member {String} modifiedAt
 */
SmartGroupModificationItem.prototype['modifiedAt'] = undefined;

/**
 * Modified user details (Principal client name)
 * @member {String} modifiedBy
 */
SmartGroupModificationItem.prototype['modifiedBy'] = undefined;

/**
 * New value
 * @member {String} newValue
 */
SmartGroupModificationItem.prototype['newValue'] = undefined;

/**
 * Old value
 * @member {String} oldValue
 */
SmartGroupModificationItem.prototype['oldValue'] = undefined;





/**
 * Allowed values for the <code>modificationEvent</code> property.
 * @enum {String}
 * @readonly
 */
SmartGroupModificationItem['ModificationEventEnum'] = {

    /**
     * value: "SmartGroupCreated"
     * @const
     */
    "SmartGroupCreated": "SmartGroupCreated",

    /**
     * value: "StateChange"
     * @const
     */
    "StateChange": "StateChange",

    /**
     * value: "AlertAdded"
     * @const
     */
    "AlertAdded": "AlertAdded",

    /**
     * value: "AlertRemoved"
     * @const
     */
    "AlertRemoved": "AlertRemoved"
};



export default SmartGroupModificationItem;

