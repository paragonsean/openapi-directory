# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.alerts_summary_by_monitor_service import AlertsSummaryByMonitorService
from openapi_server.models.alerts_summary_by_severity_and_monitor_condition import AlertsSummaryBySeverityAndMonitorCondition
from openapi_server.models.alerts_summary_by_state import AlertsSummaryByState
from openapi_server.models.alerts_summary_properties_summary_by_severity import AlertsSummaryPropertiesSummaryBySeverity
from openapi_server import util


class AlertsSummaryProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, next_link: str=None, smart_groups_count: int=None, summary_by_monitor_service: AlertsSummaryByMonitorService=None, summary_by_severity: AlertsSummaryPropertiesSummaryBySeverity=None, summary_by_severity_and_monitor_condition: AlertsSummaryBySeverityAndMonitorCondition=None, summary_by_state: AlertsSummaryByState=None, total: int=None):
        """AlertsSummaryProperties - a model defined in OpenAPI

        :param next_link: The next_link of this AlertsSummaryProperties.
        :param smart_groups_count: The smart_groups_count of this AlertsSummaryProperties.
        :param summary_by_monitor_service: The summary_by_monitor_service of this AlertsSummaryProperties.
        :param summary_by_severity: The summary_by_severity of this AlertsSummaryProperties.
        :param summary_by_severity_and_monitor_condition: The summary_by_severity_and_monitor_condition of this AlertsSummaryProperties.
        :param summary_by_state: The summary_by_state of this AlertsSummaryProperties.
        :param total: The total of this AlertsSummaryProperties.
        """
        self.openapi_types = {
            'next_link': str,
            'smart_groups_count': int,
            'summary_by_monitor_service': AlertsSummaryByMonitorService,
            'summary_by_severity': AlertsSummaryPropertiesSummaryBySeverity,
            'summary_by_severity_and_monitor_condition': AlertsSummaryBySeverityAndMonitorCondition,
            'summary_by_state': AlertsSummaryByState,
            'total': int
        }

        self.attribute_map = {
            'next_link': 'nextLink',
            'smart_groups_count': 'smartGroupsCount',
            'summary_by_monitor_service': 'summaryByMonitorService',
            'summary_by_severity': 'summaryBySeverity',
            'summary_by_severity_and_monitor_condition': 'summaryBySeverityAndMonitorCondition',
            'summary_by_state': 'summaryByState',
            'total': 'total'
        }

        self._next_link = next_link
        self._smart_groups_count = smart_groups_count
        self._summary_by_monitor_service = summary_by_monitor_service
        self._summary_by_severity = summary_by_severity
        self._summary_by_severity_and_monitor_condition = summary_by_severity_and_monitor_condition
        self._summary_by_state = summary_by_state
        self._total = total

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AlertsSummaryProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The alertsSummaryProperties of this AlertsSummaryProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def next_link(self):
        """Gets the next_link of this AlertsSummaryProperties.

        URL to fetch the next set of results.

        :return: The next_link of this AlertsSummaryProperties.
        :rtype: str
        """
        return self._next_link

    @next_link.setter
    def next_link(self, next_link):
        """Sets the next_link of this AlertsSummaryProperties.

        URL to fetch the next set of results.

        :param next_link: The next_link of this AlertsSummaryProperties.
        :type next_link: str
        """

        self._next_link = next_link

    @property
    def smart_groups_count(self):
        """Gets the smart_groups_count of this AlertsSummaryProperties.

        Total number of smart groups.

        :return: The smart_groups_count of this AlertsSummaryProperties.
        :rtype: int
        """
        return self._smart_groups_count

    @smart_groups_count.setter
    def smart_groups_count(self, smart_groups_count):
        """Sets the smart_groups_count of this AlertsSummaryProperties.

        Total number of smart groups.

        :param smart_groups_count: The smart_groups_count of this AlertsSummaryProperties.
        :type smart_groups_count: int
        """

        self._smart_groups_count = smart_groups_count

    @property
    def summary_by_monitor_service(self):
        """Gets the summary_by_monitor_service of this AlertsSummaryProperties.

        Summary of alerts by severity

        :return: The summary_by_monitor_service of this AlertsSummaryProperties.
        :rtype: AlertsSummaryByMonitorService
        """
        return self._summary_by_monitor_service

    @summary_by_monitor_service.setter
    def summary_by_monitor_service(self, summary_by_monitor_service):
        """Sets the summary_by_monitor_service of this AlertsSummaryProperties.

        Summary of alerts by severity

        :param summary_by_monitor_service: The summary_by_monitor_service of this AlertsSummaryProperties.
        :type summary_by_monitor_service: AlertsSummaryByMonitorService
        """

        self._summary_by_monitor_service = summary_by_monitor_service

    @property
    def summary_by_severity(self):
        """Gets the summary_by_severity of this AlertsSummaryProperties.


        :return: The summary_by_severity of this AlertsSummaryProperties.
        :rtype: AlertsSummaryPropertiesSummaryBySeverity
        """
        return self._summary_by_severity

    @summary_by_severity.setter
    def summary_by_severity(self, summary_by_severity):
        """Sets the summary_by_severity of this AlertsSummaryProperties.


        :param summary_by_severity: The summary_by_severity of this AlertsSummaryProperties.
        :type summary_by_severity: AlertsSummaryPropertiesSummaryBySeverity
        """

        self._summary_by_severity = summary_by_severity

    @property
    def summary_by_severity_and_monitor_condition(self):
        """Gets the summary_by_severity_and_monitor_condition of this AlertsSummaryProperties.

        Summary of alerts by severity and monitor condition

        :return: The summary_by_severity_and_monitor_condition of this AlertsSummaryProperties.
        :rtype: AlertsSummaryBySeverityAndMonitorCondition
        """
        return self._summary_by_severity_and_monitor_condition

    @summary_by_severity_and_monitor_condition.setter
    def summary_by_severity_and_monitor_condition(self, summary_by_severity_and_monitor_condition):
        """Sets the summary_by_severity_and_monitor_condition of this AlertsSummaryProperties.

        Summary of alerts by severity and monitor condition

        :param summary_by_severity_and_monitor_condition: The summary_by_severity_and_monitor_condition of this AlertsSummaryProperties.
        :type summary_by_severity_and_monitor_condition: AlertsSummaryBySeverityAndMonitorCondition
        """

        self._summary_by_severity_and_monitor_condition = summary_by_severity_and_monitor_condition

    @property
    def summary_by_state(self):
        """Gets the summary_by_state of this AlertsSummaryProperties.

        Summary of alerts by state

        :return: The summary_by_state of this AlertsSummaryProperties.
        :rtype: AlertsSummaryByState
        """
        return self._summary_by_state

    @summary_by_state.setter
    def summary_by_state(self, summary_by_state):
        """Sets the summary_by_state of this AlertsSummaryProperties.

        Summary of alerts by state

        :param summary_by_state: The summary_by_state of this AlertsSummaryProperties.
        :type summary_by_state: AlertsSummaryByState
        """

        self._summary_by_state = summary_by_state

    @property
    def total(self):
        """Gets the total of this AlertsSummaryProperties.

        Total number of alerts.

        :return: The total of this AlertsSummaryProperties.
        :rtype: int
        """
        return self._total

    @total.setter
    def total(self, total):
        """Sets the total of this AlertsSummaryProperties.

        Total number of alerts.

        :param total: The total of this AlertsSummaryProperties.
        :type total: int
        """

        self._total = total
