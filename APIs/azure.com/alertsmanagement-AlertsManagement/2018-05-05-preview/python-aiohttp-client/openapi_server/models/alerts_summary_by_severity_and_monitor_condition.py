# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.alerts_summary_by_monitor_condition import AlertsSummaryByMonitorCondition
from openapi_server import util


class AlertsSummaryBySeverityAndMonitorCondition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, sev0: AlertsSummaryByMonitorCondition=None, sev1: AlertsSummaryByMonitorCondition=None, sev2: AlertsSummaryByMonitorCondition=None, sev3: AlertsSummaryByMonitorCondition=None, sev4: AlertsSummaryByMonitorCondition=None):
        """AlertsSummaryBySeverityAndMonitorCondition - a model defined in OpenAPI

        :param sev0: The sev0 of this AlertsSummaryBySeverityAndMonitorCondition.
        :param sev1: The sev1 of this AlertsSummaryBySeverityAndMonitorCondition.
        :param sev2: The sev2 of this AlertsSummaryBySeverityAndMonitorCondition.
        :param sev3: The sev3 of this AlertsSummaryBySeverityAndMonitorCondition.
        :param sev4: The sev4 of this AlertsSummaryBySeverityAndMonitorCondition.
        """
        self.openapi_types = {
            'sev0': AlertsSummaryByMonitorCondition,
            'sev1': AlertsSummaryByMonitorCondition,
            'sev2': AlertsSummaryByMonitorCondition,
            'sev3': AlertsSummaryByMonitorCondition,
            'sev4': AlertsSummaryByMonitorCondition
        }

        self.attribute_map = {
            'sev0': 'sev0',
            'sev1': 'sev1',
            'sev2': 'sev2',
            'sev3': 'sev3',
            'sev4': 'sev4'
        }

        self._sev0 = sev0
        self._sev1 = sev1
        self._sev2 = sev2
        self._sev3 = sev3
        self._sev4 = sev4

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AlertsSummaryBySeverityAndMonitorCondition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The alertsSummaryBySeverityAndMonitorCondition of this AlertsSummaryBySeverityAndMonitorCondition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def sev0(self):
        """Gets the sev0 of this AlertsSummaryBySeverityAndMonitorCondition.

        Summary of alerts by monitor condition with severity 'Sev0'

        :return: The sev0 of this AlertsSummaryBySeverityAndMonitorCondition.
        :rtype: AlertsSummaryByMonitorCondition
        """
        return self._sev0

    @sev0.setter
    def sev0(self, sev0):
        """Sets the sev0 of this AlertsSummaryBySeverityAndMonitorCondition.

        Summary of alerts by monitor condition with severity 'Sev0'

        :param sev0: The sev0 of this AlertsSummaryBySeverityAndMonitorCondition.
        :type sev0: AlertsSummaryByMonitorCondition
        """

        self._sev0 = sev0

    @property
    def sev1(self):
        """Gets the sev1 of this AlertsSummaryBySeverityAndMonitorCondition.

        Summary of alerts by monitor condition with severity 'Sev1'

        :return: The sev1 of this AlertsSummaryBySeverityAndMonitorCondition.
        :rtype: AlertsSummaryByMonitorCondition
        """
        return self._sev1

    @sev1.setter
    def sev1(self, sev1):
        """Sets the sev1 of this AlertsSummaryBySeverityAndMonitorCondition.

        Summary of alerts by monitor condition with severity 'Sev1'

        :param sev1: The sev1 of this AlertsSummaryBySeverityAndMonitorCondition.
        :type sev1: AlertsSummaryByMonitorCondition
        """

        self._sev1 = sev1

    @property
    def sev2(self):
        """Gets the sev2 of this AlertsSummaryBySeverityAndMonitorCondition.

        Summary of alerts by monitor condition with severity 'Sev2'

        :return: The sev2 of this AlertsSummaryBySeverityAndMonitorCondition.
        :rtype: AlertsSummaryByMonitorCondition
        """
        return self._sev2

    @sev2.setter
    def sev2(self, sev2):
        """Sets the sev2 of this AlertsSummaryBySeverityAndMonitorCondition.

        Summary of alerts by monitor condition with severity 'Sev2'

        :param sev2: The sev2 of this AlertsSummaryBySeverityAndMonitorCondition.
        :type sev2: AlertsSummaryByMonitorCondition
        """

        self._sev2 = sev2

    @property
    def sev3(self):
        """Gets the sev3 of this AlertsSummaryBySeverityAndMonitorCondition.

        Summary of alerts by monitor condition with severity 'Sev3'

        :return: The sev3 of this AlertsSummaryBySeverityAndMonitorCondition.
        :rtype: AlertsSummaryByMonitorCondition
        """
        return self._sev3

    @sev3.setter
    def sev3(self, sev3):
        """Sets the sev3 of this AlertsSummaryBySeverityAndMonitorCondition.

        Summary of alerts by monitor condition with severity 'Sev3'

        :param sev3: The sev3 of this AlertsSummaryBySeverityAndMonitorCondition.
        :type sev3: AlertsSummaryByMonitorCondition
        """

        self._sev3 = sev3

    @property
    def sev4(self):
        """Gets the sev4 of this AlertsSummaryBySeverityAndMonitorCondition.

        Summary of alerts by monitor condition with severity 'Sev4'

        :return: The sev4 of this AlertsSummaryBySeverityAndMonitorCondition.
        :rtype: AlertsSummaryByMonitorCondition
        """
        return self._sev4

    @sev4.setter
    def sev4(self, sev4):
        """Sets the sev4 of this AlertsSummaryBySeverityAndMonitorCondition.

        Summary of alerts by monitor condition with severity 'Sev4'

        :param sev4: The sev4 of this AlertsSummaryBySeverityAndMonitorCondition.
        :type sev4: AlertsSummaryByMonitorCondition
        """

        self._sev4 = sev4
