# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AlertProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, alert_state: str=None, last_modified_date_time: datetime=None, last_modified_user_name: str=None, monitor_condition: str=None, monitor_service: str=None, payload: object=None, severity: str=None, signal_type: str=None, smart_group_id: str=None, smart_grouping_reason: str=None, source_created_id: str=None, start_date_time: datetime=None, target_resource: str=None, target_resource_group: str=None, target_resource_name: str=None, target_resource_type: str=None):
        """AlertProperties - a model defined in OpenAPI

        :param alert_state: The alert_state of this AlertProperties.
        :param last_modified_date_time: The last_modified_date_time of this AlertProperties.
        :param last_modified_user_name: The last_modified_user_name of this AlertProperties.
        :param monitor_condition: The monitor_condition of this AlertProperties.
        :param monitor_service: The monitor_service of this AlertProperties.
        :param payload: The payload of this AlertProperties.
        :param severity: The severity of this AlertProperties.
        :param signal_type: The signal_type of this AlertProperties.
        :param smart_group_id: The smart_group_id of this AlertProperties.
        :param smart_grouping_reason: The smart_grouping_reason of this AlertProperties.
        :param source_created_id: The source_created_id of this AlertProperties.
        :param start_date_time: The start_date_time of this AlertProperties.
        :param target_resource: The target_resource of this AlertProperties.
        :param target_resource_group: The target_resource_group of this AlertProperties.
        :param target_resource_name: The target_resource_name of this AlertProperties.
        :param target_resource_type: The target_resource_type of this AlertProperties.
        """
        self.openapi_types = {
            'alert_state': str,
            'last_modified_date_time': datetime,
            'last_modified_user_name': str,
            'monitor_condition': str,
            'monitor_service': str,
            'payload': object,
            'severity': str,
            'signal_type': str,
            'smart_group_id': str,
            'smart_grouping_reason': str,
            'source_created_id': str,
            'start_date_time': datetime,
            'target_resource': str,
            'target_resource_group': str,
            'target_resource_name': str,
            'target_resource_type': str
        }

        self.attribute_map = {
            'alert_state': 'alertState',
            'last_modified_date_time': 'lastModifiedDateTime',
            'last_modified_user_name': 'lastModifiedUserName',
            'monitor_condition': 'monitorCondition',
            'monitor_service': 'monitorService',
            'payload': 'payload',
            'severity': 'severity',
            'signal_type': 'signalType',
            'smart_group_id': 'smartGroupId',
            'smart_grouping_reason': 'smartGroupingReason',
            'source_created_id': 'sourceCreatedId',
            'start_date_time': 'startDateTime',
            'target_resource': 'targetResource',
            'target_resource_group': 'targetResourceGroup',
            'target_resource_name': 'targetResourceName',
            'target_resource_type': 'targetResourceType'
        }

        self._alert_state = alert_state
        self._last_modified_date_time = last_modified_date_time
        self._last_modified_user_name = last_modified_user_name
        self._monitor_condition = monitor_condition
        self._monitor_service = monitor_service
        self._payload = payload
        self._severity = severity
        self._signal_type = signal_type
        self._smart_group_id = smart_group_id
        self._smart_grouping_reason = smart_grouping_reason
        self._source_created_id = source_created_id
        self._start_date_time = start_date_time
        self._target_resource = target_resource
        self._target_resource_group = target_resource_group
        self._target_resource_name = target_resource_name
        self._target_resource_type = target_resource_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AlertProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The alertProperties of this AlertProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def alert_state(self):
        """Gets the alert_state of this AlertProperties.

        Alert object state

        :return: The alert_state of this AlertProperties.
        :rtype: str
        """
        return self._alert_state

    @alert_state.setter
    def alert_state(self, alert_state):
        """Sets the alert_state of this AlertProperties.

        Alert object state

        :param alert_state: The alert_state of this AlertProperties.
        :type alert_state: str
        """
        allowed_values = ["New", "Acknowledged", "Closed"]  # noqa: E501
        if alert_state not in allowed_values:
            raise ValueError(
                "Invalid value for `alert_state` ({0}), must be one of {1}"
                .format(alert_state, allowed_values)
            )

        self._alert_state = alert_state

    @property
    def last_modified_date_time(self):
        """Gets the last_modified_date_time of this AlertProperties.

        Last modification time(ISO-8601 format).

        :return: The last_modified_date_time of this AlertProperties.
        :rtype: datetime
        """
        return self._last_modified_date_time

    @last_modified_date_time.setter
    def last_modified_date_time(self, last_modified_date_time):
        """Sets the last_modified_date_time of this AlertProperties.

        Last modification time(ISO-8601 format).

        :param last_modified_date_time: The last_modified_date_time of this AlertProperties.
        :type last_modified_date_time: datetime
        """

        self._last_modified_date_time = last_modified_date_time

    @property
    def last_modified_user_name(self):
        """Gets the last_modified_user_name of this AlertProperties.

        User who last modified the alert.

        :return: The last_modified_user_name of this AlertProperties.
        :rtype: str
        """
        return self._last_modified_user_name

    @last_modified_user_name.setter
    def last_modified_user_name(self, last_modified_user_name):
        """Sets the last_modified_user_name of this AlertProperties.

        User who last modified the alert.

        :param last_modified_user_name: The last_modified_user_name of this AlertProperties.
        :type last_modified_user_name: str
        """

        self._last_modified_user_name = last_modified_user_name

    @property
    def monitor_condition(self):
        """Gets the monitor_condition of this AlertProperties.

        Condition of the rule at the monitor service

        :return: The monitor_condition of this AlertProperties.
        :rtype: str
        """
        return self._monitor_condition

    @monitor_condition.setter
    def monitor_condition(self, monitor_condition):
        """Sets the monitor_condition of this AlertProperties.

        Condition of the rule at the monitor service

        :param monitor_condition: The monitor_condition of this AlertProperties.
        :type monitor_condition: str
        """
        allowed_values = ["Fired", "Resolved"]  # noqa: E501
        if monitor_condition not in allowed_values:
            raise ValueError(
                "Invalid value for `monitor_condition` ({0}), must be one of {1}"
                .format(monitor_condition, allowed_values)
            )

        self._monitor_condition = monitor_condition

    @property
    def monitor_service(self):
        """Gets the monitor_service of this AlertProperties.

        Monitor service which is the source of the alert object.

        :return: The monitor_service of this AlertProperties.
        :rtype: str
        """
        return self._monitor_service

    @monitor_service.setter
    def monitor_service(self, monitor_service):
        """Sets the monitor_service of this AlertProperties.

        Monitor service which is the source of the alert object.

        :param monitor_service: The monitor_service of this AlertProperties.
        :type monitor_service: str
        """
        allowed_values = ["Platform", "Application Insights", "Log Analytics", "Infrastructure Insights", "ActivityLog Administrative", "ActivityLog Security", "ActivityLog Recommendation", "ActivityLog Policy", "ActivityLog Autoscale", "ServiceHealth", "SmartDetector", "Zabbix", "SCOM", "Nagios"]  # noqa: E501
        if monitor_service not in allowed_values:
            raise ValueError(
                "Invalid value for `monitor_service` ({0}), must be one of {1}"
                .format(monitor_service, allowed_values)
            )

        self._monitor_service = monitor_service

    @property
    def payload(self):
        """Gets the payload of this AlertProperties.

        More details which are contextual to the monitor service.

        :return: The payload of this AlertProperties.
        :rtype: object
        """
        return self._payload

    @payload.setter
    def payload(self, payload):
        """Sets the payload of this AlertProperties.

        More details which are contextual to the monitor service.

        :param payload: The payload of this AlertProperties.
        :type payload: object
        """

        self._payload = payload

    @property
    def severity(self):
        """Gets the severity of this AlertProperties.

        Severity of alert Sev1 being highest and Sev3 being lowest.

        :return: The severity of this AlertProperties.
        :rtype: str
        """
        return self._severity

    @severity.setter
    def severity(self, severity):
        """Sets the severity of this AlertProperties.

        Severity of alert Sev1 being highest and Sev3 being lowest.

        :param severity: The severity of this AlertProperties.
        :type severity: str
        """
        allowed_values = ["Sev0", "Sev1", "Sev2", "Sev3", "Sev4"]  # noqa: E501
        if severity not in allowed_values:
            raise ValueError(
                "Invalid value for `severity` ({0}), must be one of {1}"
                .format(severity, allowed_values)
            )

        self._severity = severity

    @property
    def signal_type(self):
        """Gets the signal_type of this AlertProperties.

        Log based alert or metric based alert

        :return: The signal_type of this AlertProperties.
        :rtype: str
        """
        return self._signal_type

    @signal_type.setter
    def signal_type(self, signal_type):
        """Sets the signal_type of this AlertProperties.

        Log based alert or metric based alert

        :param signal_type: The signal_type of this AlertProperties.
        :type signal_type: str
        """
        allowed_values = ["Metric", "Log", "Unknown"]  # noqa: E501
        if signal_type not in allowed_values:
            raise ValueError(
                "Invalid value for `signal_type` ({0}), must be one of {1}"
                .format(signal_type, allowed_values)
            )

        self._signal_type = signal_type

    @property
    def smart_group_id(self):
        """Gets the smart_group_id of this AlertProperties.

        Unique Id of the smart group

        :return: The smart_group_id of this AlertProperties.
        :rtype: str
        """
        return self._smart_group_id

    @smart_group_id.setter
    def smart_group_id(self, smart_group_id):
        """Sets the smart_group_id of this AlertProperties.

        Unique Id of the smart group

        :param smart_group_id: The smart_group_id of this AlertProperties.
        :type smart_group_id: str
        """

        self._smart_group_id = smart_group_id

    @property
    def smart_grouping_reason(self):
        """Gets the smart_grouping_reason of this AlertProperties.

        Reason for addition to a smart group

        :return: The smart_grouping_reason of this AlertProperties.
        :rtype: str
        """
        return self._smart_grouping_reason

    @smart_grouping_reason.setter
    def smart_grouping_reason(self, smart_grouping_reason):
        """Sets the smart_grouping_reason of this AlertProperties.

        Reason for addition to a smart group

        :param smart_grouping_reason: The smart_grouping_reason of this AlertProperties.
        :type smart_grouping_reason: str
        """

        self._smart_grouping_reason = smart_grouping_reason

    @property
    def source_created_id(self):
        """Gets the source_created_id of this AlertProperties.

        Unique Id created by monitor service

        :return: The source_created_id of this AlertProperties.
        :rtype: str
        """
        return self._source_created_id

    @source_created_id.setter
    def source_created_id(self, source_created_id):
        """Sets the source_created_id of this AlertProperties.

        Unique Id created by monitor service

        :param source_created_id: The source_created_id of this AlertProperties.
        :type source_created_id: str
        """

        self._source_created_id = source_created_id

    @property
    def start_date_time(self):
        """Gets the start_date_time of this AlertProperties.

        Creation time(ISO-8601 format).

        :return: The start_date_time of this AlertProperties.
        :rtype: datetime
        """
        return self._start_date_time

    @start_date_time.setter
    def start_date_time(self, start_date_time):
        """Sets the start_date_time of this AlertProperties.

        Creation time(ISO-8601 format).

        :param start_date_time: The start_date_time of this AlertProperties.
        :type start_date_time: datetime
        """

        self._start_date_time = start_date_time

    @property
    def target_resource(self):
        """Gets the target_resource of this AlertProperties.

        Target ARM resource, on which alert got created.

        :return: The target_resource of this AlertProperties.
        :rtype: str
        """
        return self._target_resource

    @target_resource.setter
    def target_resource(self, target_resource):
        """Sets the target_resource of this AlertProperties.

        Target ARM resource, on which alert got created.

        :param target_resource: The target_resource of this AlertProperties.
        :type target_resource: str
        """

        self._target_resource = target_resource

    @property
    def target_resource_group(self):
        """Gets the target_resource_group of this AlertProperties.

        Resource group of target ARM resource.

        :return: The target_resource_group of this AlertProperties.
        :rtype: str
        """
        return self._target_resource_group

    @target_resource_group.setter
    def target_resource_group(self, target_resource_group):
        """Sets the target_resource_group of this AlertProperties.

        Resource group of target ARM resource.

        :param target_resource_group: The target_resource_group of this AlertProperties.
        :type target_resource_group: str
        """

        self._target_resource_group = target_resource_group

    @property
    def target_resource_name(self):
        """Gets the target_resource_name of this AlertProperties.

        Target ARM resource name, on which alert got created.

        :return: The target_resource_name of this AlertProperties.
        :rtype: str
        """
        return self._target_resource_name

    @target_resource_name.setter
    def target_resource_name(self, target_resource_name):
        """Sets the target_resource_name of this AlertProperties.

        Target ARM resource name, on which alert got created.

        :param target_resource_name: The target_resource_name of this AlertProperties.
        :type target_resource_name: str
        """

        self._target_resource_name = target_resource_name

    @property
    def target_resource_type(self):
        """Gets the target_resource_type of this AlertProperties.

        Resource type of target ARM resource

        :return: The target_resource_type of this AlertProperties.
        :rtype: str
        """
        return self._target_resource_type

    @target_resource_type.setter
    def target_resource_type(self, target_resource_type):
        """Sets the target_resource_type of this AlertProperties.

        Resource type of target ARM resource

        :param target_resource_type: The target_resource_type of this AlertProperties.
        :type target_resource_type: str
        """

        self._target_resource_type = target_resource_type
