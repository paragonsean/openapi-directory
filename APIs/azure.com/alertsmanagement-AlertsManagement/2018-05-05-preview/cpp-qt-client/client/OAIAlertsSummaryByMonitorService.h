/**
 * Azure Alerts Management Service Resource Provider
 * REST APIs for Azure Alerts Management Service.
 *
 * The version of the OpenAPI document: 2018-05-05-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAlertsSummaryByMonitorService.h
 *
 * Summary of the alerts by monitor service
 */

#ifndef OAIAlertsSummaryByMonitorService_H
#define OAIAlertsSummaryByMonitorService_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAlertsSummaryByMonitorService : public OAIObject {
public:
    OAIAlertsSummaryByMonitorService();
    OAIAlertsSummaryByMonitorService(QString json);
    ~OAIAlertsSummaryByMonitorService() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getActivityLogAdministrative() const;
    void setActivityLogAdministrative(const qint32 &activity_log_administrative);
    bool is_activity_log_administrative_Set() const;
    bool is_activity_log_administrative_Valid() const;

    qint32 getActivityLogAutoscale() const;
    void setActivityLogAutoscale(const qint32 &activity_log_autoscale);
    bool is_activity_log_autoscale_Set() const;
    bool is_activity_log_autoscale_Valid() const;

    qint32 getActivityLogPolicy() const;
    void setActivityLogPolicy(const qint32 &activity_log_policy);
    bool is_activity_log_policy_Set() const;
    bool is_activity_log_policy_Valid() const;

    qint32 getActivityLogRecommendation() const;
    void setActivityLogRecommendation(const qint32 &activity_log_recommendation);
    bool is_activity_log_recommendation_Set() const;
    bool is_activity_log_recommendation_Valid() const;

    qint32 getActivityLogSecurity() const;
    void setActivityLogSecurity(const qint32 &activity_log_security);
    bool is_activity_log_security_Set() const;
    bool is_activity_log_security_Valid() const;

    qint32 getApplicationInsights() const;
    void setApplicationInsights(const qint32 &application_insights);
    bool is_application_insights_Set() const;
    bool is_application_insights_Valid() const;

    qint32 getInfrastructureInsights() const;
    void setInfrastructureInsights(const qint32 &infrastructure_insights);
    bool is_infrastructure_insights_Set() const;
    bool is_infrastructure_insights_Valid() const;

    qint32 getLogAnalytics() const;
    void setLogAnalytics(const qint32 &log_analytics);
    bool is_log_analytics_Set() const;
    bool is_log_analytics_Valid() const;

    qint32 getNagios() const;
    void setNagios(const qint32 &nagios);
    bool is_nagios_Set() const;
    bool is_nagios_Valid() const;

    qint32 getPlatform() const;
    void setPlatform(const qint32 &platform);
    bool is_platform_Set() const;
    bool is_platform_Valid() const;

    qint32 getScom() const;
    void setScom(const qint32 &scom);
    bool is_scom_Set() const;
    bool is_scom_Valid() const;

    qint32 getServiceHealth() const;
    void setServiceHealth(const qint32 &service_health);
    bool is_service_health_Set() const;
    bool is_service_health_Valid() const;

    qint32 getSmartDetector() const;
    void setSmartDetector(const qint32 &smart_detector);
    bool is_smart_detector_Set() const;
    bool is_smart_detector_Valid() const;

    qint32 getZabbix() const;
    void setZabbix(const qint32 &zabbix);
    bool is_zabbix_Set() const;
    bool is_zabbix_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_activity_log_administrative;
    bool m_activity_log_administrative_isSet;
    bool m_activity_log_administrative_isValid;

    qint32 m_activity_log_autoscale;
    bool m_activity_log_autoscale_isSet;
    bool m_activity_log_autoscale_isValid;

    qint32 m_activity_log_policy;
    bool m_activity_log_policy_isSet;
    bool m_activity_log_policy_isValid;

    qint32 m_activity_log_recommendation;
    bool m_activity_log_recommendation_isSet;
    bool m_activity_log_recommendation_isValid;

    qint32 m_activity_log_security;
    bool m_activity_log_security_isSet;
    bool m_activity_log_security_isValid;

    qint32 m_application_insights;
    bool m_application_insights_isSet;
    bool m_application_insights_isValid;

    qint32 m_infrastructure_insights;
    bool m_infrastructure_insights_isSet;
    bool m_infrastructure_insights_isValid;

    qint32 m_log_analytics;
    bool m_log_analytics_isSet;
    bool m_log_analytics_isValid;

    qint32 m_nagios;
    bool m_nagios_isSet;
    bool m_nagios_isValid;

    qint32 m_platform;
    bool m_platform_isSet;
    bool m_platform_isValid;

    qint32 m_scom;
    bool m_scom_isSet;
    bool m_scom_isValid;

    qint32 m_service_health;
    bool m_service_health_isSet;
    bool m_service_health_isValid;

    qint32 m_smart_detector;
    bool m_smart_detector_isSet;
    bool m_smart_detector_isValid;

    qint32 m_zabbix;
    bool m_zabbix_isSet;
    bool m_zabbix_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAlertsSummaryByMonitorService)

#endif // OAIAlertsSummaryByMonitorService_H
