/*
 * Azure Alerts Management Service Resource Provider
 * REST APIs for Azure Alerts Management Service.
 *
 * The version of the OpenAPI document: 2018-05-05-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.AlertsSummaryByMonitorService;
import org.openapitools.client.model.AlertsSummaryBySeverityAndMonitorCondition;
import org.openapitools.client.model.AlertsSummaryByState;
import org.openapitools.client.model.AlertsSummaryPropertiesSummaryBySeverity;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Summary of the alerts
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:05:07.976147-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AlertsSummaryProperties {
  public static final String SERIALIZED_NAME_NEXT_LINK = "nextLink";
  @SerializedName(SERIALIZED_NAME_NEXT_LINK)
  private String nextLink;

  public static final String SERIALIZED_NAME_SMART_GROUPS_COUNT = "smartGroupsCount";
  @SerializedName(SERIALIZED_NAME_SMART_GROUPS_COUNT)
  private Integer smartGroupsCount;

  public static final String SERIALIZED_NAME_SUMMARY_BY_MONITOR_SERVICE = "summaryByMonitorService";
  @SerializedName(SERIALIZED_NAME_SUMMARY_BY_MONITOR_SERVICE)
  private AlertsSummaryByMonitorService summaryByMonitorService;

  public static final String SERIALIZED_NAME_SUMMARY_BY_SEVERITY = "summaryBySeverity";
  @SerializedName(SERIALIZED_NAME_SUMMARY_BY_SEVERITY)
  private AlertsSummaryPropertiesSummaryBySeverity summaryBySeverity;

  public static final String SERIALIZED_NAME_SUMMARY_BY_SEVERITY_AND_MONITOR_CONDITION = "summaryBySeverityAndMonitorCondition";
  @SerializedName(SERIALIZED_NAME_SUMMARY_BY_SEVERITY_AND_MONITOR_CONDITION)
  private AlertsSummaryBySeverityAndMonitorCondition summaryBySeverityAndMonitorCondition;

  public static final String SERIALIZED_NAME_SUMMARY_BY_STATE = "summaryByState";
  @SerializedName(SERIALIZED_NAME_SUMMARY_BY_STATE)
  private AlertsSummaryByState summaryByState;

  public static final String SERIALIZED_NAME_TOTAL = "total";
  @SerializedName(SERIALIZED_NAME_TOTAL)
  private Integer total;

  public AlertsSummaryProperties() {
  }

  public AlertsSummaryProperties nextLink(String nextLink) {
    this.nextLink = nextLink;
    return this;
  }

  /**
   * URL to fetch the next set of results.
   * @return nextLink
   */
  @javax.annotation.Nullable
  public String getNextLink() {
    return nextLink;
  }

  public void setNextLink(String nextLink) {
    this.nextLink = nextLink;
  }


  public AlertsSummaryProperties smartGroupsCount(Integer smartGroupsCount) {
    this.smartGroupsCount = smartGroupsCount;
    return this;
  }

  /**
   * Total number of smart groups.
   * @return smartGroupsCount
   */
  @javax.annotation.Nullable
  public Integer getSmartGroupsCount() {
    return smartGroupsCount;
  }

  public void setSmartGroupsCount(Integer smartGroupsCount) {
    this.smartGroupsCount = smartGroupsCount;
  }


  public AlertsSummaryProperties summaryByMonitorService(AlertsSummaryByMonitorService summaryByMonitorService) {
    this.summaryByMonitorService = summaryByMonitorService;
    return this;
  }

  /**
   * Summary of alerts by severity
   * @return summaryByMonitorService
   */
  @javax.annotation.Nullable
  public AlertsSummaryByMonitorService getSummaryByMonitorService() {
    return summaryByMonitorService;
  }

  public void setSummaryByMonitorService(AlertsSummaryByMonitorService summaryByMonitorService) {
    this.summaryByMonitorService = summaryByMonitorService;
  }


  public AlertsSummaryProperties summaryBySeverity(AlertsSummaryPropertiesSummaryBySeverity summaryBySeverity) {
    this.summaryBySeverity = summaryBySeverity;
    return this;
  }

  /**
   * Get summaryBySeverity
   * @return summaryBySeverity
   */
  @javax.annotation.Nullable
  public AlertsSummaryPropertiesSummaryBySeverity getSummaryBySeverity() {
    return summaryBySeverity;
  }

  public void setSummaryBySeverity(AlertsSummaryPropertiesSummaryBySeverity summaryBySeverity) {
    this.summaryBySeverity = summaryBySeverity;
  }


  public AlertsSummaryProperties summaryBySeverityAndMonitorCondition(AlertsSummaryBySeverityAndMonitorCondition summaryBySeverityAndMonitorCondition) {
    this.summaryBySeverityAndMonitorCondition = summaryBySeverityAndMonitorCondition;
    return this;
  }

  /**
   * Summary of alerts by severity and monitor condition
   * @return summaryBySeverityAndMonitorCondition
   */
  @javax.annotation.Nullable
  public AlertsSummaryBySeverityAndMonitorCondition getSummaryBySeverityAndMonitorCondition() {
    return summaryBySeverityAndMonitorCondition;
  }

  public void setSummaryBySeverityAndMonitorCondition(AlertsSummaryBySeverityAndMonitorCondition summaryBySeverityAndMonitorCondition) {
    this.summaryBySeverityAndMonitorCondition = summaryBySeverityAndMonitorCondition;
  }


  public AlertsSummaryProperties summaryByState(AlertsSummaryByState summaryByState) {
    this.summaryByState = summaryByState;
    return this;
  }

  /**
   * Summary of alerts by state
   * @return summaryByState
   */
  @javax.annotation.Nullable
  public AlertsSummaryByState getSummaryByState() {
    return summaryByState;
  }

  public void setSummaryByState(AlertsSummaryByState summaryByState) {
    this.summaryByState = summaryByState;
  }


  public AlertsSummaryProperties total(Integer total) {
    this.total = total;
    return this;
  }

  /**
   * Total number of alerts.
   * @return total
   */
  @javax.annotation.Nullable
  public Integer getTotal() {
    return total;
  }

  public void setTotal(Integer total) {
    this.total = total;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AlertsSummaryProperties alertsSummaryProperties = (AlertsSummaryProperties) o;
    return Objects.equals(this.nextLink, alertsSummaryProperties.nextLink) &&
        Objects.equals(this.smartGroupsCount, alertsSummaryProperties.smartGroupsCount) &&
        Objects.equals(this.summaryByMonitorService, alertsSummaryProperties.summaryByMonitorService) &&
        Objects.equals(this.summaryBySeverity, alertsSummaryProperties.summaryBySeverity) &&
        Objects.equals(this.summaryBySeverityAndMonitorCondition, alertsSummaryProperties.summaryBySeverityAndMonitorCondition) &&
        Objects.equals(this.summaryByState, alertsSummaryProperties.summaryByState) &&
        Objects.equals(this.total, alertsSummaryProperties.total);
  }

  @Override
  public int hashCode() {
    return Objects.hash(nextLink, smartGroupsCount, summaryByMonitorService, summaryBySeverity, summaryBySeverityAndMonitorCondition, summaryByState, total);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AlertsSummaryProperties {\n");
    sb.append("    nextLink: ").append(toIndentedString(nextLink)).append("\n");
    sb.append("    smartGroupsCount: ").append(toIndentedString(smartGroupsCount)).append("\n");
    sb.append("    summaryByMonitorService: ").append(toIndentedString(summaryByMonitorService)).append("\n");
    sb.append("    summaryBySeverity: ").append(toIndentedString(summaryBySeverity)).append("\n");
    sb.append("    summaryBySeverityAndMonitorCondition: ").append(toIndentedString(summaryBySeverityAndMonitorCondition)).append("\n");
    sb.append("    summaryByState: ").append(toIndentedString(summaryByState)).append("\n");
    sb.append("    total: ").append(toIndentedString(total)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("nextLink");
    openapiFields.add("smartGroupsCount");
    openapiFields.add("summaryByMonitorService");
    openapiFields.add("summaryBySeverity");
    openapiFields.add("summaryBySeverityAndMonitorCondition");
    openapiFields.add("summaryByState");
    openapiFields.add("total");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AlertsSummaryProperties
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AlertsSummaryProperties.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AlertsSummaryProperties is not found in the empty JSON string", AlertsSummaryProperties.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AlertsSummaryProperties.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AlertsSummaryProperties` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("nextLink") != null && !jsonObj.get("nextLink").isJsonNull()) && !jsonObj.get("nextLink").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `nextLink` to be a primitive type in the JSON string but got `%s`", jsonObj.get("nextLink").toString()));
      }
      // validate the optional field `summaryByMonitorService`
      if (jsonObj.get("summaryByMonitorService") != null && !jsonObj.get("summaryByMonitorService").isJsonNull()) {
        AlertsSummaryByMonitorService.validateJsonElement(jsonObj.get("summaryByMonitorService"));
      }
      // validate the optional field `summaryBySeverity`
      if (jsonObj.get("summaryBySeverity") != null && !jsonObj.get("summaryBySeverity").isJsonNull()) {
        AlertsSummaryPropertiesSummaryBySeverity.validateJsonElement(jsonObj.get("summaryBySeverity"));
      }
      // validate the optional field `summaryBySeverityAndMonitorCondition`
      if (jsonObj.get("summaryBySeverityAndMonitorCondition") != null && !jsonObj.get("summaryBySeverityAndMonitorCondition").isJsonNull()) {
        AlertsSummaryBySeverityAndMonitorCondition.validateJsonElement(jsonObj.get("summaryBySeverityAndMonitorCondition"));
      }
      // validate the optional field `summaryByState`
      if (jsonObj.get("summaryByState") != null && !jsonObj.get("summaryByState").isJsonNull()) {
        AlertsSummaryByState.validateJsonElement(jsonObj.get("summaryByState"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AlertsSummaryProperties.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AlertsSummaryProperties' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AlertsSummaryProperties> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AlertsSummaryProperties.class));

       return (TypeAdapter<T>) new TypeAdapter<AlertsSummaryProperties>() {
           @Override
           public void write(JsonWriter out, AlertsSummaryProperties value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AlertsSummaryProperties read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AlertsSummaryProperties given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AlertsSummaryProperties
   * @throws IOException if the JSON string is invalid with respect to AlertsSummaryProperties
   */
  public static AlertsSummaryProperties fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AlertsSummaryProperties.class);
  }

  /**
   * Convert an instance of AlertsSummaryProperties to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

