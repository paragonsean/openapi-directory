/*
 * Azure Alerts Management Service Resource Provider
 * REST APIs for Azure Alerts Management Service.
 *
 * The version of the OpenAPI document: 2018-05-05-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Summary of the alerts by monitor service
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:05:07.976147-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AlertsSummaryByMonitorService {
  public static final String SERIALIZED_NAME_ACTIVITY_LOG_ADMINISTRATIVE = "activityLog Administrative";
  @SerializedName(SERIALIZED_NAME_ACTIVITY_LOG_ADMINISTRATIVE)
  private Integer activityLogAdministrative;

  public static final String SERIALIZED_NAME_ACTIVITY_LOG_AUTOSCALE = "activityLog Autoscale";
  @SerializedName(SERIALIZED_NAME_ACTIVITY_LOG_AUTOSCALE)
  private Integer activityLogAutoscale;

  public static final String SERIALIZED_NAME_ACTIVITY_LOG_POLICY = "activityLog Policy";
  @SerializedName(SERIALIZED_NAME_ACTIVITY_LOG_POLICY)
  private Integer activityLogPolicy;

  public static final String SERIALIZED_NAME_ACTIVITY_LOG_RECOMMENDATION = "activityLog Recommendation";
  @SerializedName(SERIALIZED_NAME_ACTIVITY_LOG_RECOMMENDATION)
  private Integer activityLogRecommendation;

  public static final String SERIALIZED_NAME_ACTIVITY_LOG_SECURITY = "activityLog Security";
  @SerializedName(SERIALIZED_NAME_ACTIVITY_LOG_SECURITY)
  private Integer activityLogSecurity;

  public static final String SERIALIZED_NAME_APPLICATION_INSIGHTS = "application Insights";
  @SerializedName(SERIALIZED_NAME_APPLICATION_INSIGHTS)
  private Integer applicationInsights;

  public static final String SERIALIZED_NAME_INFRASTRUCTURE_INSIGHTS = "infrastructure Insights";
  @SerializedName(SERIALIZED_NAME_INFRASTRUCTURE_INSIGHTS)
  private Integer infrastructureInsights;

  public static final String SERIALIZED_NAME_LOG_ANALYTICS = "log Analytics";
  @SerializedName(SERIALIZED_NAME_LOG_ANALYTICS)
  private Integer logAnalytics;

  public static final String SERIALIZED_NAME_NAGIOS = "nagios";
  @SerializedName(SERIALIZED_NAME_NAGIOS)
  private Integer nagios;

  public static final String SERIALIZED_NAME_PLATFORM = "platform";
  @SerializedName(SERIALIZED_NAME_PLATFORM)
  private Integer platform;

  public static final String SERIALIZED_NAME_SCOM = "scom";
  @SerializedName(SERIALIZED_NAME_SCOM)
  private Integer scom;

  public static final String SERIALIZED_NAME_SERVICE_HEALTH = "serviceHealth";
  @SerializedName(SERIALIZED_NAME_SERVICE_HEALTH)
  private Integer serviceHealth;

  public static final String SERIALIZED_NAME_SMART_DETECTOR = "smartDetector";
  @SerializedName(SERIALIZED_NAME_SMART_DETECTOR)
  private Integer smartDetector;

  public static final String SERIALIZED_NAME_ZABBIX = "zabbix";
  @SerializedName(SERIALIZED_NAME_ZABBIX)
  private Integer zabbix;

  public AlertsSummaryByMonitorService() {
  }

  public AlertsSummaryByMonitorService activityLogAdministrative(Integer activityLogAdministrative) {
    this.activityLogAdministrative = activityLogAdministrative;
    return this;
  }

  /**
   * Count of alerts of \&quot;ActivityLog Administrative\&quot;
   * @return activityLogAdministrative
   */
  @javax.annotation.Nullable
  public Integer getActivityLogAdministrative() {
    return activityLogAdministrative;
  }

  public void setActivityLogAdministrative(Integer activityLogAdministrative) {
    this.activityLogAdministrative = activityLogAdministrative;
  }


  public AlertsSummaryByMonitorService activityLogAutoscale(Integer activityLogAutoscale) {
    this.activityLogAutoscale = activityLogAutoscale;
    return this;
  }

  /**
   * Count of alerts of \&quot;ActivityLog Autoscale\&quot;
   * @return activityLogAutoscale
   */
  @javax.annotation.Nullable
  public Integer getActivityLogAutoscale() {
    return activityLogAutoscale;
  }

  public void setActivityLogAutoscale(Integer activityLogAutoscale) {
    this.activityLogAutoscale = activityLogAutoscale;
  }


  public AlertsSummaryByMonitorService activityLogPolicy(Integer activityLogPolicy) {
    this.activityLogPolicy = activityLogPolicy;
    return this;
  }

  /**
   * Count of alerts of \&quot;ActivityLog Policy\&quot;
   * @return activityLogPolicy
   */
  @javax.annotation.Nullable
  public Integer getActivityLogPolicy() {
    return activityLogPolicy;
  }

  public void setActivityLogPolicy(Integer activityLogPolicy) {
    this.activityLogPolicy = activityLogPolicy;
  }


  public AlertsSummaryByMonitorService activityLogRecommendation(Integer activityLogRecommendation) {
    this.activityLogRecommendation = activityLogRecommendation;
    return this;
  }

  /**
   * Count of alerts of \&quot;ActivityLog Recommendation\&quot;
   * @return activityLogRecommendation
   */
  @javax.annotation.Nullable
  public Integer getActivityLogRecommendation() {
    return activityLogRecommendation;
  }

  public void setActivityLogRecommendation(Integer activityLogRecommendation) {
    this.activityLogRecommendation = activityLogRecommendation;
  }


  public AlertsSummaryByMonitorService activityLogSecurity(Integer activityLogSecurity) {
    this.activityLogSecurity = activityLogSecurity;
    return this;
  }

  /**
   * Count of alerts of \&quot;ActivityLog Security\&quot;
   * @return activityLogSecurity
   */
  @javax.annotation.Nullable
  public Integer getActivityLogSecurity() {
    return activityLogSecurity;
  }

  public void setActivityLogSecurity(Integer activityLogSecurity) {
    this.activityLogSecurity = activityLogSecurity;
  }


  public AlertsSummaryByMonitorService applicationInsights(Integer applicationInsights) {
    this.applicationInsights = applicationInsights;
    return this;
  }

  /**
   * Count of alerts of \&quot;Application Insights\&quot;
   * @return applicationInsights
   */
  @javax.annotation.Nullable
  public Integer getApplicationInsights() {
    return applicationInsights;
  }

  public void setApplicationInsights(Integer applicationInsights) {
    this.applicationInsights = applicationInsights;
  }


  public AlertsSummaryByMonitorService infrastructureInsights(Integer infrastructureInsights) {
    this.infrastructureInsights = infrastructureInsights;
    return this;
  }

  /**
   * Count of alerts of \&quot;Infrastructure Insights\&quot;
   * @return infrastructureInsights
   */
  @javax.annotation.Nullable
  public Integer getInfrastructureInsights() {
    return infrastructureInsights;
  }

  public void setInfrastructureInsights(Integer infrastructureInsights) {
    this.infrastructureInsights = infrastructureInsights;
  }


  public AlertsSummaryByMonitorService logAnalytics(Integer logAnalytics) {
    this.logAnalytics = logAnalytics;
    return this;
  }

  /**
   * Count of alerts of \&quot;Log Analytics\&quot;
   * @return logAnalytics
   */
  @javax.annotation.Nullable
  public Integer getLogAnalytics() {
    return logAnalytics;
  }

  public void setLogAnalytics(Integer logAnalytics) {
    this.logAnalytics = logAnalytics;
  }


  public AlertsSummaryByMonitorService nagios(Integer nagios) {
    this.nagios = nagios;
    return this;
  }

  /**
   * Count of alerts of \&quot;Nagios\&quot;
   * @return nagios
   */
  @javax.annotation.Nullable
  public Integer getNagios() {
    return nagios;
  }

  public void setNagios(Integer nagios) {
    this.nagios = nagios;
  }


  public AlertsSummaryByMonitorService platform(Integer platform) {
    this.platform = platform;
    return this;
  }

  /**
   * Count of alerts of \&quot;Platform\&quot;
   * @return platform
   */
  @javax.annotation.Nullable
  public Integer getPlatform() {
    return platform;
  }

  public void setPlatform(Integer platform) {
    this.platform = platform;
  }


  public AlertsSummaryByMonitorService scom(Integer scom) {
    this.scom = scom;
    return this;
  }

  /**
   * Count of alerts of \&quot;SCOM\&quot;
   * @return scom
   */
  @javax.annotation.Nullable
  public Integer getScom() {
    return scom;
  }

  public void setScom(Integer scom) {
    this.scom = scom;
  }


  public AlertsSummaryByMonitorService serviceHealth(Integer serviceHealth) {
    this.serviceHealth = serviceHealth;
    return this;
  }

  /**
   * Count of alerts of \&quot;ServiceHealth\&quot;
   * @return serviceHealth
   */
  @javax.annotation.Nullable
  public Integer getServiceHealth() {
    return serviceHealth;
  }

  public void setServiceHealth(Integer serviceHealth) {
    this.serviceHealth = serviceHealth;
  }


  public AlertsSummaryByMonitorService smartDetector(Integer smartDetector) {
    this.smartDetector = smartDetector;
    return this;
  }

  /**
   * Count of alerts of \&quot;Smart Detector\&quot;
   * @return smartDetector
   */
  @javax.annotation.Nullable
  public Integer getSmartDetector() {
    return smartDetector;
  }

  public void setSmartDetector(Integer smartDetector) {
    this.smartDetector = smartDetector;
  }


  public AlertsSummaryByMonitorService zabbix(Integer zabbix) {
    this.zabbix = zabbix;
    return this;
  }

  /**
   * Count of alerts of \&quot;Zabbix\&quot;
   * @return zabbix
   */
  @javax.annotation.Nullable
  public Integer getZabbix() {
    return zabbix;
  }

  public void setZabbix(Integer zabbix) {
    this.zabbix = zabbix;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AlertsSummaryByMonitorService alertsSummaryByMonitorService = (AlertsSummaryByMonitorService) o;
    return Objects.equals(this.activityLogAdministrative, alertsSummaryByMonitorService.activityLogAdministrative) &&
        Objects.equals(this.activityLogAutoscale, alertsSummaryByMonitorService.activityLogAutoscale) &&
        Objects.equals(this.activityLogPolicy, alertsSummaryByMonitorService.activityLogPolicy) &&
        Objects.equals(this.activityLogRecommendation, alertsSummaryByMonitorService.activityLogRecommendation) &&
        Objects.equals(this.activityLogSecurity, alertsSummaryByMonitorService.activityLogSecurity) &&
        Objects.equals(this.applicationInsights, alertsSummaryByMonitorService.applicationInsights) &&
        Objects.equals(this.infrastructureInsights, alertsSummaryByMonitorService.infrastructureInsights) &&
        Objects.equals(this.logAnalytics, alertsSummaryByMonitorService.logAnalytics) &&
        Objects.equals(this.nagios, alertsSummaryByMonitorService.nagios) &&
        Objects.equals(this.platform, alertsSummaryByMonitorService.platform) &&
        Objects.equals(this.scom, alertsSummaryByMonitorService.scom) &&
        Objects.equals(this.serviceHealth, alertsSummaryByMonitorService.serviceHealth) &&
        Objects.equals(this.smartDetector, alertsSummaryByMonitorService.smartDetector) &&
        Objects.equals(this.zabbix, alertsSummaryByMonitorService.zabbix);
  }

  @Override
  public int hashCode() {
    return Objects.hash(activityLogAdministrative, activityLogAutoscale, activityLogPolicy, activityLogRecommendation, activityLogSecurity, applicationInsights, infrastructureInsights, logAnalytics, nagios, platform, scom, serviceHealth, smartDetector, zabbix);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AlertsSummaryByMonitorService {\n");
    sb.append("    activityLogAdministrative: ").append(toIndentedString(activityLogAdministrative)).append("\n");
    sb.append("    activityLogAutoscale: ").append(toIndentedString(activityLogAutoscale)).append("\n");
    sb.append("    activityLogPolicy: ").append(toIndentedString(activityLogPolicy)).append("\n");
    sb.append("    activityLogRecommendation: ").append(toIndentedString(activityLogRecommendation)).append("\n");
    sb.append("    activityLogSecurity: ").append(toIndentedString(activityLogSecurity)).append("\n");
    sb.append("    applicationInsights: ").append(toIndentedString(applicationInsights)).append("\n");
    sb.append("    infrastructureInsights: ").append(toIndentedString(infrastructureInsights)).append("\n");
    sb.append("    logAnalytics: ").append(toIndentedString(logAnalytics)).append("\n");
    sb.append("    nagios: ").append(toIndentedString(nagios)).append("\n");
    sb.append("    platform: ").append(toIndentedString(platform)).append("\n");
    sb.append("    scom: ").append(toIndentedString(scom)).append("\n");
    sb.append("    serviceHealth: ").append(toIndentedString(serviceHealth)).append("\n");
    sb.append("    smartDetector: ").append(toIndentedString(smartDetector)).append("\n");
    sb.append("    zabbix: ").append(toIndentedString(zabbix)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("activityLog Administrative");
    openapiFields.add("activityLog Autoscale");
    openapiFields.add("activityLog Policy");
    openapiFields.add("activityLog Recommendation");
    openapiFields.add("activityLog Security");
    openapiFields.add("application Insights");
    openapiFields.add("infrastructure Insights");
    openapiFields.add("log Analytics");
    openapiFields.add("nagios");
    openapiFields.add("platform");
    openapiFields.add("scom");
    openapiFields.add("serviceHealth");
    openapiFields.add("smartDetector");
    openapiFields.add("zabbix");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AlertsSummaryByMonitorService
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AlertsSummaryByMonitorService.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AlertsSummaryByMonitorService is not found in the empty JSON string", AlertsSummaryByMonitorService.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AlertsSummaryByMonitorService.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AlertsSummaryByMonitorService` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AlertsSummaryByMonitorService.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AlertsSummaryByMonitorService' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AlertsSummaryByMonitorService> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AlertsSummaryByMonitorService.class));

       return (TypeAdapter<T>) new TypeAdapter<AlertsSummaryByMonitorService>() {
           @Override
           public void write(JsonWriter out, AlertsSummaryByMonitorService value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AlertsSummaryByMonitorService read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AlertsSummaryByMonitorService given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AlertsSummaryByMonitorService
   * @throws IOException if the JSON string is invalid with respect to AlertsSummaryByMonitorService
   */
  public static AlertsSummaryByMonitorService fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AlertsSummaryByMonitorService.class);
  }

  /**
   * Convert an instance of AlertsSummaryByMonitorService to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

