/**
 * Azure Alerts Management Service Resource Provider
 * Azure Alerts Management Service provides a single pane of glass of alerts across Azure Monitor.
 *
 * The version of the OpenAPI document: 2019-05-05-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SuppressionSchedule from './SuppressionSchedule';

/**
 * The SuppressionConfig model module.
 * @module model/SuppressionConfig
 * @version 2019-05-05-preview
 */
class SuppressionConfig {
    /**
     * Constructs a new <code>SuppressionConfig</code>.
     * Suppression logic for a given action rule
     * @alias module:model/SuppressionConfig
     * @param recurrenceType {module:model/SuppressionConfig.RecurrenceTypeEnum} Specifies when the suppression should be applied
     */
    constructor(recurrenceType) { 
        
        SuppressionConfig.initialize(this, recurrenceType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, recurrenceType) { 
        obj['recurrenceType'] = recurrenceType;
    }

    /**
     * Constructs a <code>SuppressionConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SuppressionConfig} obj Optional instance to populate.
     * @return {module:model/SuppressionConfig} The populated <code>SuppressionConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SuppressionConfig();

            if (data.hasOwnProperty('recurrenceType')) {
                obj['recurrenceType'] = ApiClient.convertToType(data['recurrenceType'], 'String');
            }
            if (data.hasOwnProperty('schedule')) {
                obj['schedule'] = SuppressionSchedule.constructFromObject(data['schedule']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SuppressionConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SuppressionConfig</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SuppressionConfig.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['recurrenceType'] && !(typeof data['recurrenceType'] === 'string' || data['recurrenceType'] instanceof String)) {
            throw new Error("Expected the field `recurrenceType` to be a primitive type in the JSON string but got " + data['recurrenceType']);
        }
        // validate the optional field `schedule`
        if (data['schedule']) { // data not null
          SuppressionSchedule.validateJSON(data['schedule']);
        }

        return true;
    }


}

SuppressionConfig.RequiredProperties = ["recurrenceType"];

/**
 * Specifies when the suppression should be applied
 * @member {module:model/SuppressionConfig.RecurrenceTypeEnum} recurrenceType
 */
SuppressionConfig.prototype['recurrenceType'] = undefined;

/**
 * @member {module:model/SuppressionSchedule} schedule
 */
SuppressionConfig.prototype['schedule'] = undefined;





/**
 * Allowed values for the <code>recurrenceType</code> property.
 * @enum {String}
 * @readonly
 */
SuppressionConfig['RecurrenceTypeEnum'] = {

    /**
     * value: "Always"
     * @const
     */
    "Always": "Always",

    /**
     * value: "Once"
     * @const
     */
    "Once": "Once",

    /**
     * value: "Daily"
     * @const
     */
    "Daily": "Daily",

    /**
     * value: "Weekly"
     * @const
     */
    "Weekly": "Weekly",

    /**
     * value: "Monthly"
     * @const
     */
    "Monthly": "Monthly"
};



export default SuppressionConfig;

