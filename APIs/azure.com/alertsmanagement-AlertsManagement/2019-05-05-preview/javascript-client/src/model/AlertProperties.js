/**
 * Azure Alerts Management Service Resource Provider
 * Azure Alerts Management Service provides a single pane of glass of alerts across Azure Monitor.
 *
 * The version of the OpenAPI document: 2019-05-05-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Essentials from './Essentials';

/**
 * The AlertProperties model module.
 * @module model/AlertProperties
 * @version 2019-05-05-preview
 */
class AlertProperties {
    /**
     * Constructs a new <code>AlertProperties</code>.
     * Alert property bag
     * @alias module:model/AlertProperties
     */
    constructor() { 
        
        AlertProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AlertProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AlertProperties} obj Optional instance to populate.
     * @return {module:model/AlertProperties} The populated <code>AlertProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AlertProperties();

            if (data.hasOwnProperty('context')) {
                obj['context'] = ApiClient.convertToType(data['context'], Object);
            }
            if (data.hasOwnProperty('egressConfig')) {
                obj['egressConfig'] = ApiClient.convertToType(data['egressConfig'], Object);
            }
            if (data.hasOwnProperty('essentials')) {
                obj['essentials'] = Essentials.constructFromObject(data['essentials']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AlertProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AlertProperties</code>.
     */
    static validateJSON(data) {
        // validate the optional field `essentials`
        if (data['essentials']) { // data not null
          Essentials.validateJSON(data['essentials']);
        }

        return true;
    }


}



/**
 * Information specific to the monitor service that gives more contextual details about the alert.
 * @member {Object} context
 */
AlertProperties.prototype['context'] = undefined;

/**
 * Config which would be used for displaying the data in portal.
 * @member {Object} egressConfig
 */
AlertProperties.prototype['egressConfig'] = undefined;

/**
 * @member {module:model/Essentials} essentials
 */
AlertProperties.prototype['essentials'] = undefined;






export default AlertProperties;

