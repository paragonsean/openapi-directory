/**
 * Azure Alerts Management Service Resource Provider
 * Azure Alerts Management Service provides a single pane of glass of alerts across Azure Monitor.
 *
 * The version of the OpenAPI document: 2019-05-05-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIConditions.h
 *
 * Conditions in alert instance to be matched for a given action rule. Default value is all. Multiple values could be provided with comma separation.
 */

#ifndef OAIConditions_H
#define OAIConditions_H

#include <QJsonObject>

#include "OAICondition.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICondition;

class OAIConditions : public OAIObject {
public:
    OAIConditions();
    OAIConditions(QString json);
    ~OAIConditions() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICondition getAlertContext() const;
    void setAlertContext(const OAICondition &alert_context);
    bool is_alert_context_Set() const;
    bool is_alert_context_Valid() const;

    OAICondition getAlertRuleId() const;
    void setAlertRuleId(const OAICondition &alert_rule_id);
    bool is_alert_rule_id_Set() const;
    bool is_alert_rule_id_Valid() const;

    OAICondition getDescription() const;
    void setDescription(const OAICondition &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    OAICondition getMonitorCondition() const;
    void setMonitorCondition(const OAICondition &monitor_condition);
    bool is_monitor_condition_Set() const;
    bool is_monitor_condition_Valid() const;

    OAICondition getMonitorService() const;
    void setMonitorService(const OAICondition &monitor_service);
    bool is_monitor_service_Set() const;
    bool is_monitor_service_Valid() const;

    OAICondition getSeverity() const;
    void setSeverity(const OAICondition &severity);
    bool is_severity_Set() const;
    bool is_severity_Valid() const;

    OAICondition getTargetResourceType() const;
    void setTargetResourceType(const OAICondition &target_resource_type);
    bool is_target_resource_type_Set() const;
    bool is_target_resource_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICondition m_alert_context;
    bool m_alert_context_isSet;
    bool m_alert_context_isValid;

    OAICondition m_alert_rule_id;
    bool m_alert_rule_id_isSet;
    bool m_alert_rule_id_isValid;

    OAICondition m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    OAICondition m_monitor_condition;
    bool m_monitor_condition_isSet;
    bool m_monitor_condition_isValid;

    OAICondition m_monitor_service;
    bool m_monitor_service_isSet;
    bool m_monitor_service_isValid;

    OAICondition m_severity;
    bool m_severity_isSet;
    bool m_severity_isValid;

    OAICondition m_target_resource_type;
    bool m_target_resource_type_isSet;
    bool m_target_resource_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIConditions)

#endif // OAIConditions_H
