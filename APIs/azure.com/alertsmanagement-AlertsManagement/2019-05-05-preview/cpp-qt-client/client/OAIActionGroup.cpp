/**
 * Azure Alerts Management Service Resource Provider
 * Azure Alerts Management Service provides a single pane of glass of alerts across Azure Monitor.
 *
 * The version of the OpenAPI document: 2019-05-05-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIActionGroup.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIActionGroup::OAIActionGroup(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIActionGroup::OAIActionGroup() {
    this->initializeModel();
}

OAIActionGroup::~OAIActionGroup() {}

void OAIActionGroup::initializeModel() {

    m_action_group_id_isSet = false;
    m_action_group_id_isValid = false;

    m_conditions_isSet = false;
    m_conditions_isValid = false;

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_created_by_isSet = false;
    m_created_by_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_last_modified_at_isSet = false;
    m_last_modified_at_isValid = false;

    m_last_modified_by_isSet = false;
    m_last_modified_by_isValid = false;

    m_scope_isSet = false;
    m_scope_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAIActionGroup::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIActionGroup::fromJsonObject(QJsonObject json) {

    m_action_group_id_isValid = ::OpenAPI::fromJsonValue(m_action_group_id, json[QString("actionGroupId")]);
    m_action_group_id_isSet = !json[QString("actionGroupId")].isNull() && m_action_group_id_isValid;

    m_conditions_isValid = ::OpenAPI::fromJsonValue(m_conditions, json[QString("conditions")]);
    m_conditions_isSet = !json[QString("conditions")].isNull() && m_conditions_isValid;

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("createdAt")]);
    m_created_at_isSet = !json[QString("createdAt")].isNull() && m_created_at_isValid;

    m_created_by_isValid = ::OpenAPI::fromJsonValue(m_created_by, json[QString("createdBy")]);
    m_created_by_isSet = !json[QString("createdBy")].isNull() && m_created_by_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_last_modified_at_isValid = ::OpenAPI::fromJsonValue(m_last_modified_at, json[QString("lastModifiedAt")]);
    m_last_modified_at_isSet = !json[QString("lastModifiedAt")].isNull() && m_last_modified_at_isValid;

    m_last_modified_by_isValid = ::OpenAPI::fromJsonValue(m_last_modified_by, json[QString("lastModifiedBy")]);
    m_last_modified_by_isSet = !json[QString("lastModifiedBy")].isNull() && m_last_modified_by_isValid;

    m_scope_isValid = ::OpenAPI::fromJsonValue(m_scope, json[QString("scope")]);
    m_scope_isSet = !json[QString("scope")].isNull() && m_scope_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAIActionGroup::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIActionGroup::asJsonObject() const {
    QJsonObject obj;
    if (m_action_group_id_isSet) {
        obj.insert(QString("actionGroupId"), ::OpenAPI::toJsonValue(m_action_group_id));
    }
    if (m_conditions.isSet()) {
        obj.insert(QString("conditions"), ::OpenAPI::toJsonValue(m_conditions));
    }
    if (m_created_at_isSet) {
        obj.insert(QString("createdAt"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_created_by_isSet) {
        obj.insert(QString("createdBy"), ::OpenAPI::toJsonValue(m_created_by));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_last_modified_at_isSet) {
        obj.insert(QString("lastModifiedAt"), ::OpenAPI::toJsonValue(m_last_modified_at));
    }
    if (m_last_modified_by_isSet) {
        obj.insert(QString("lastModifiedBy"), ::OpenAPI::toJsonValue(m_last_modified_by));
    }
    if (m_scope.isSet()) {
        obj.insert(QString("scope"), ::OpenAPI::toJsonValue(m_scope));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

QString OAIActionGroup::getActionGroupId() const {
    return m_action_group_id;
}
void OAIActionGroup::setActionGroupId(const QString &action_group_id) {
    m_action_group_id = action_group_id;
    m_action_group_id_isSet = true;
}

bool OAIActionGroup::is_action_group_id_Set() const{
    return m_action_group_id_isSet;
}

bool OAIActionGroup::is_action_group_id_Valid() const{
    return m_action_group_id_isValid;
}

OAIConditions OAIActionGroup::getConditions() const {
    return m_conditions;
}
void OAIActionGroup::setConditions(const OAIConditions &conditions) {
    m_conditions = conditions;
    m_conditions_isSet = true;
}

bool OAIActionGroup::is_conditions_Set() const{
    return m_conditions_isSet;
}

bool OAIActionGroup::is_conditions_Valid() const{
    return m_conditions_isValid;
}

QDateTime OAIActionGroup::getCreatedAt() const {
    return m_created_at;
}
void OAIActionGroup::setCreatedAt(const QDateTime &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAIActionGroup::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAIActionGroup::is_created_at_Valid() const{
    return m_created_at_isValid;
}

QString OAIActionGroup::getCreatedBy() const {
    return m_created_by;
}
void OAIActionGroup::setCreatedBy(const QString &created_by) {
    m_created_by = created_by;
    m_created_by_isSet = true;
}

bool OAIActionGroup::is_created_by_Set() const{
    return m_created_by_isSet;
}

bool OAIActionGroup::is_created_by_Valid() const{
    return m_created_by_isValid;
}

QString OAIActionGroup::getDescription() const {
    return m_description;
}
void OAIActionGroup::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIActionGroup::is_description_Set() const{
    return m_description_isSet;
}

bool OAIActionGroup::is_description_Valid() const{
    return m_description_isValid;
}

QDateTime OAIActionGroup::getLastModifiedAt() const {
    return m_last_modified_at;
}
void OAIActionGroup::setLastModifiedAt(const QDateTime &last_modified_at) {
    m_last_modified_at = last_modified_at;
    m_last_modified_at_isSet = true;
}

bool OAIActionGroup::is_last_modified_at_Set() const{
    return m_last_modified_at_isSet;
}

bool OAIActionGroup::is_last_modified_at_Valid() const{
    return m_last_modified_at_isValid;
}

QString OAIActionGroup::getLastModifiedBy() const {
    return m_last_modified_by;
}
void OAIActionGroup::setLastModifiedBy(const QString &last_modified_by) {
    m_last_modified_by = last_modified_by;
    m_last_modified_by_isSet = true;
}

bool OAIActionGroup::is_last_modified_by_Set() const{
    return m_last_modified_by_isSet;
}

bool OAIActionGroup::is_last_modified_by_Valid() const{
    return m_last_modified_by_isValid;
}

OAIScope OAIActionGroup::getScope() const {
    return m_scope;
}
void OAIActionGroup::setScope(const OAIScope &scope) {
    m_scope = scope;
    m_scope_isSet = true;
}

bool OAIActionGroup::is_scope_Set() const{
    return m_scope_isSet;
}

bool OAIActionGroup::is_scope_Valid() const{
    return m_scope_isValid;
}

QString OAIActionGroup::getStatus() const {
    return m_status;
}
void OAIActionGroup::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIActionGroup::is_status_Set() const{
    return m_status_isSet;
}

bool OAIActionGroup::is_status_Valid() const{
    return m_status_isValid;
}

QString OAIActionGroup::getType() const {
    return m_type;
}
void OAIActionGroup::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIActionGroup::is_type_Set() const{
    return m_type_isSet;
}

bool OAIActionGroup::is_type_Valid() const{
    return m_type_isValid;
}

bool OAIActionGroup::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_action_group_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_conditions.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_by_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_by_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_scope.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIActionGroup::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_action_group_id_isValid && m_type_isValid && true;
}

} // namespace OpenAPI
