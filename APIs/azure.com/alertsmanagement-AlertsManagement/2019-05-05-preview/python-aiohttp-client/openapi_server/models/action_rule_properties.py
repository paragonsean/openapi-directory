# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.conditions import Conditions
from openapi_server.models.scope import Scope
from openapi_server import util


class ActionRuleProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, conditions: Conditions=None, created_at: datetime=None, created_by: str=None, description: str=None, last_modified_at: datetime=None, last_modified_by: str=None, scope: Scope=None, status: str=None, type: str=None):
        """ActionRuleProperties - a model defined in OpenAPI

        :param conditions: The conditions of this ActionRuleProperties.
        :param created_at: The created_at of this ActionRuleProperties.
        :param created_by: The created_by of this ActionRuleProperties.
        :param description: The description of this ActionRuleProperties.
        :param last_modified_at: The last_modified_at of this ActionRuleProperties.
        :param last_modified_by: The last_modified_by of this ActionRuleProperties.
        :param scope: The scope of this ActionRuleProperties.
        :param status: The status of this ActionRuleProperties.
        :param type: The type of this ActionRuleProperties.
        """
        self.openapi_types = {
            'conditions': Conditions,
            'created_at': datetime,
            'created_by': str,
            'description': str,
            'last_modified_at': datetime,
            'last_modified_by': str,
            'scope': Scope,
            'status': str,
            'type': str
        }

        self.attribute_map = {
            'conditions': 'conditions',
            'created_at': 'createdAt',
            'created_by': 'createdBy',
            'description': 'description',
            'last_modified_at': 'lastModifiedAt',
            'last_modified_by': 'lastModifiedBy',
            'scope': 'scope',
            'status': 'status',
            'type': 'type'
        }

        self._conditions = conditions
        self._created_at = created_at
        self._created_by = created_by
        self._description = description
        self._last_modified_at = last_modified_at
        self._last_modified_by = last_modified_by
        self._scope = scope
        self._status = status
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ActionRuleProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ActionRuleProperties of this ActionRuleProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def conditions(self):
        """Gets the conditions of this ActionRuleProperties.


        :return: The conditions of this ActionRuleProperties.
        :rtype: Conditions
        """
        return self._conditions

    @conditions.setter
    def conditions(self, conditions):
        """Sets the conditions of this ActionRuleProperties.


        :param conditions: The conditions of this ActionRuleProperties.
        :type conditions: Conditions
        """

        self._conditions = conditions

    @property
    def created_at(self):
        """Gets the created_at of this ActionRuleProperties.

        Creation time of action rule. Date-Time in ISO-8601 format.

        :return: The created_at of this ActionRuleProperties.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this ActionRuleProperties.

        Creation time of action rule. Date-Time in ISO-8601 format.

        :param created_at: The created_at of this ActionRuleProperties.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def created_by(self):
        """Gets the created_by of this ActionRuleProperties.

        Created by user name.

        :return: The created_by of this ActionRuleProperties.
        :rtype: str
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """Sets the created_by of this ActionRuleProperties.

        Created by user name.

        :param created_by: The created_by of this ActionRuleProperties.
        :type created_by: str
        """

        self._created_by = created_by

    @property
    def description(self):
        """Gets the description of this ActionRuleProperties.

        Description of action rule

        :return: The description of this ActionRuleProperties.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ActionRuleProperties.

        Description of action rule

        :param description: The description of this ActionRuleProperties.
        :type description: str
        """

        self._description = description

    @property
    def last_modified_at(self):
        """Gets the last_modified_at of this ActionRuleProperties.

        Last updated time of action rule. Date-Time in ISO-8601 format.

        :return: The last_modified_at of this ActionRuleProperties.
        :rtype: datetime
        """
        return self._last_modified_at

    @last_modified_at.setter
    def last_modified_at(self, last_modified_at):
        """Sets the last_modified_at of this ActionRuleProperties.

        Last updated time of action rule. Date-Time in ISO-8601 format.

        :param last_modified_at: The last_modified_at of this ActionRuleProperties.
        :type last_modified_at: datetime
        """

        self._last_modified_at = last_modified_at

    @property
    def last_modified_by(self):
        """Gets the last_modified_by of this ActionRuleProperties.

        Last modified by user name.

        :return: The last_modified_by of this ActionRuleProperties.
        :rtype: str
        """
        return self._last_modified_by

    @last_modified_by.setter
    def last_modified_by(self, last_modified_by):
        """Sets the last_modified_by of this ActionRuleProperties.

        Last modified by user name.

        :param last_modified_by: The last_modified_by of this ActionRuleProperties.
        :type last_modified_by: str
        """

        self._last_modified_by = last_modified_by

    @property
    def scope(self):
        """Gets the scope of this ActionRuleProperties.


        :return: The scope of this ActionRuleProperties.
        :rtype: Scope
        """
        return self._scope

    @scope.setter
    def scope(self, scope):
        """Sets the scope of this ActionRuleProperties.


        :param scope: The scope of this ActionRuleProperties.
        :type scope: Scope
        """

        self._scope = scope

    @property
    def status(self):
        """Gets the status of this ActionRuleProperties.

        Indicates if the given action rule is enabled or disabled

        :return: The status of this ActionRuleProperties.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this ActionRuleProperties.

        Indicates if the given action rule is enabled or disabled

        :param status: The status of this ActionRuleProperties.
        :type status: str
        """
        allowed_values = ["Enabled", "Disabled"]  # noqa: E501
        if status not in allowed_values:
            raise ValueError(
                "Invalid value for `status` ({0}), must be one of {1}"
                .format(status, allowed_values)
            )

        self._status = status

    @property
    def type(self):
        """Gets the type of this ActionRuleProperties.

        Indicates type of action rule

        :return: The type of this ActionRuleProperties.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this ActionRuleProperties.

        Indicates type of action rule

        :param type: The type of this ActionRuleProperties.
        :type type: str
        """
        allowed_values = ["Suppression", "ActionGroup", "Diagnostics"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"
                .format(type, allowed_values)
            )

        self._type = type
