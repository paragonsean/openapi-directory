# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.smart_group_aggregated_property import SmartGroupAggregatedProperty
from openapi_server import util


class SmartGroupProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, alert_severities: List[SmartGroupAggregatedProperty]=None, alert_states: List[SmartGroupAggregatedProperty]=None, alerts_count: int=None, last_modified_date_time: datetime=None, last_modified_user_name: str=None, monitor_conditions: List[SmartGroupAggregatedProperty]=None, monitor_services: List[SmartGroupAggregatedProperty]=None, next_link: str=None, resource_groups: List[SmartGroupAggregatedProperty]=None, resource_types: List[SmartGroupAggregatedProperty]=None, resources: List[SmartGroupAggregatedProperty]=None, severity: str=None, smart_group_state: str=None, start_date_time: datetime=None):
        """SmartGroupProperties - a model defined in OpenAPI

        :param alert_severities: The alert_severities of this SmartGroupProperties.
        :param alert_states: The alert_states of this SmartGroupProperties.
        :param alerts_count: The alerts_count of this SmartGroupProperties.
        :param last_modified_date_time: The last_modified_date_time of this SmartGroupProperties.
        :param last_modified_user_name: The last_modified_user_name of this SmartGroupProperties.
        :param monitor_conditions: The monitor_conditions of this SmartGroupProperties.
        :param monitor_services: The monitor_services of this SmartGroupProperties.
        :param next_link: The next_link of this SmartGroupProperties.
        :param resource_groups: The resource_groups of this SmartGroupProperties.
        :param resource_types: The resource_types of this SmartGroupProperties.
        :param resources: The resources of this SmartGroupProperties.
        :param severity: The severity of this SmartGroupProperties.
        :param smart_group_state: The smart_group_state of this SmartGroupProperties.
        :param start_date_time: The start_date_time of this SmartGroupProperties.
        """
        self.openapi_types = {
            'alert_severities': List[SmartGroupAggregatedProperty],
            'alert_states': List[SmartGroupAggregatedProperty],
            'alerts_count': int,
            'last_modified_date_time': datetime,
            'last_modified_user_name': str,
            'monitor_conditions': List[SmartGroupAggregatedProperty],
            'monitor_services': List[SmartGroupAggregatedProperty],
            'next_link': str,
            'resource_groups': List[SmartGroupAggregatedProperty],
            'resource_types': List[SmartGroupAggregatedProperty],
            'resources': List[SmartGroupAggregatedProperty],
            'severity': str,
            'smart_group_state': str,
            'start_date_time': datetime
        }

        self.attribute_map = {
            'alert_severities': 'alertSeverities',
            'alert_states': 'alertStates',
            'alerts_count': 'alertsCount',
            'last_modified_date_time': 'lastModifiedDateTime',
            'last_modified_user_name': 'lastModifiedUserName',
            'monitor_conditions': 'monitorConditions',
            'monitor_services': 'monitorServices',
            'next_link': 'nextLink',
            'resource_groups': 'resourceGroups',
            'resource_types': 'resourceTypes',
            'resources': 'resources',
            'severity': 'severity',
            'smart_group_state': 'smartGroupState',
            'start_date_time': 'startDateTime'
        }

        self._alert_severities = alert_severities
        self._alert_states = alert_states
        self._alerts_count = alerts_count
        self._last_modified_date_time = last_modified_date_time
        self._last_modified_user_name = last_modified_user_name
        self._monitor_conditions = monitor_conditions
        self._monitor_services = monitor_services
        self._next_link = next_link
        self._resource_groups = resource_groups
        self._resource_types = resource_types
        self._resources = resources
        self._severity = severity
        self._smart_group_state = smart_group_state
        self._start_date_time = start_date_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SmartGroupProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The smartGroupProperties of this SmartGroupProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def alert_severities(self):
        """Gets the alert_severities of this SmartGroupProperties.

        Summary of alertSeverities in the smart group

        :return: The alert_severities of this SmartGroupProperties.
        :rtype: List[SmartGroupAggregatedProperty]
        """
        return self._alert_severities

    @alert_severities.setter
    def alert_severities(self, alert_severities):
        """Sets the alert_severities of this SmartGroupProperties.

        Summary of alertSeverities in the smart group

        :param alert_severities: The alert_severities of this SmartGroupProperties.
        :type alert_severities: List[SmartGroupAggregatedProperty]
        """

        self._alert_severities = alert_severities

    @property
    def alert_states(self):
        """Gets the alert_states of this SmartGroupProperties.

        Summary of alertStates in the smart group

        :return: The alert_states of this SmartGroupProperties.
        :rtype: List[SmartGroupAggregatedProperty]
        """
        return self._alert_states

    @alert_states.setter
    def alert_states(self, alert_states):
        """Sets the alert_states of this SmartGroupProperties.

        Summary of alertStates in the smart group

        :param alert_states: The alert_states of this SmartGroupProperties.
        :type alert_states: List[SmartGroupAggregatedProperty]
        """

        self._alert_states = alert_states

    @property
    def alerts_count(self):
        """Gets the alerts_count of this SmartGroupProperties.

        Total number of alerts in smart group

        :return: The alerts_count of this SmartGroupProperties.
        :rtype: int
        """
        return self._alerts_count

    @alerts_count.setter
    def alerts_count(self, alerts_count):
        """Sets the alerts_count of this SmartGroupProperties.

        Total number of alerts in smart group

        :param alerts_count: The alerts_count of this SmartGroupProperties.
        :type alerts_count: int
        """

        self._alerts_count = alerts_count

    @property
    def last_modified_date_time(self):
        """Gets the last_modified_date_time of this SmartGroupProperties.

        Last updated time of smart group. Date-Time in ISO-8601 format.

        :return: The last_modified_date_time of this SmartGroupProperties.
        :rtype: datetime
        """
        return self._last_modified_date_time

    @last_modified_date_time.setter
    def last_modified_date_time(self, last_modified_date_time):
        """Sets the last_modified_date_time of this SmartGroupProperties.

        Last updated time of smart group. Date-Time in ISO-8601 format.

        :param last_modified_date_time: The last_modified_date_time of this SmartGroupProperties.
        :type last_modified_date_time: datetime
        """

        self._last_modified_date_time = last_modified_date_time

    @property
    def last_modified_user_name(self):
        """Gets the last_modified_user_name of this SmartGroupProperties.

        Last modified by user name.

        :return: The last_modified_user_name of this SmartGroupProperties.
        :rtype: str
        """
        return self._last_modified_user_name

    @last_modified_user_name.setter
    def last_modified_user_name(self, last_modified_user_name):
        """Sets the last_modified_user_name of this SmartGroupProperties.

        Last modified by user name.

        :param last_modified_user_name: The last_modified_user_name of this SmartGroupProperties.
        :type last_modified_user_name: str
        """

        self._last_modified_user_name = last_modified_user_name

    @property
    def monitor_conditions(self):
        """Gets the monitor_conditions of this SmartGroupProperties.

        Summary of monitorConditions in the smart group

        :return: The monitor_conditions of this SmartGroupProperties.
        :rtype: List[SmartGroupAggregatedProperty]
        """
        return self._monitor_conditions

    @monitor_conditions.setter
    def monitor_conditions(self, monitor_conditions):
        """Sets the monitor_conditions of this SmartGroupProperties.

        Summary of monitorConditions in the smart group

        :param monitor_conditions: The monitor_conditions of this SmartGroupProperties.
        :type monitor_conditions: List[SmartGroupAggregatedProperty]
        """

        self._monitor_conditions = monitor_conditions

    @property
    def monitor_services(self):
        """Gets the monitor_services of this SmartGroupProperties.

        Summary of monitorServices in the smart group

        :return: The monitor_services of this SmartGroupProperties.
        :rtype: List[SmartGroupAggregatedProperty]
        """
        return self._monitor_services

    @monitor_services.setter
    def monitor_services(self, monitor_services):
        """Sets the monitor_services of this SmartGroupProperties.

        Summary of monitorServices in the smart group

        :param monitor_services: The monitor_services of this SmartGroupProperties.
        :type monitor_services: List[SmartGroupAggregatedProperty]
        """

        self._monitor_services = monitor_services

    @property
    def next_link(self):
        """Gets the next_link of this SmartGroupProperties.

        The URI to fetch the next page of alerts. Call ListNext() with this URI to fetch the next page alerts.

        :return: The next_link of this SmartGroupProperties.
        :rtype: str
        """
        return self._next_link

    @next_link.setter
    def next_link(self, next_link):
        """Sets the next_link of this SmartGroupProperties.

        The URI to fetch the next page of alerts. Call ListNext() with this URI to fetch the next page alerts.

        :param next_link: The next_link of this SmartGroupProperties.
        :type next_link: str
        """

        self._next_link = next_link

    @property
    def resource_groups(self):
        """Gets the resource_groups of this SmartGroupProperties.

        Summary of target resource groups in the smart group

        :return: The resource_groups of this SmartGroupProperties.
        :rtype: List[SmartGroupAggregatedProperty]
        """
        return self._resource_groups

    @resource_groups.setter
    def resource_groups(self, resource_groups):
        """Sets the resource_groups of this SmartGroupProperties.

        Summary of target resource groups in the smart group

        :param resource_groups: The resource_groups of this SmartGroupProperties.
        :type resource_groups: List[SmartGroupAggregatedProperty]
        """

        self._resource_groups = resource_groups

    @property
    def resource_types(self):
        """Gets the resource_types of this SmartGroupProperties.

        Summary of target resource types in the smart group

        :return: The resource_types of this SmartGroupProperties.
        :rtype: List[SmartGroupAggregatedProperty]
        """
        return self._resource_types

    @resource_types.setter
    def resource_types(self, resource_types):
        """Sets the resource_types of this SmartGroupProperties.

        Summary of target resource types in the smart group

        :param resource_types: The resource_types of this SmartGroupProperties.
        :type resource_types: List[SmartGroupAggregatedProperty]
        """

        self._resource_types = resource_types

    @property
    def resources(self):
        """Gets the resources of this SmartGroupProperties.

        Summary of target resources in the smart group

        :return: The resources of this SmartGroupProperties.
        :rtype: List[SmartGroupAggregatedProperty]
        """
        return self._resources

    @resources.setter
    def resources(self, resources):
        """Sets the resources of this SmartGroupProperties.

        Summary of target resources in the smart group

        :param resources: The resources of this SmartGroupProperties.
        :type resources: List[SmartGroupAggregatedProperty]
        """

        self._resources = resources

    @property
    def severity(self):
        """Gets the severity of this SmartGroupProperties.

        Severity of smart group is the highest(Sev0 >... > Sev4) severity of all the alerts in the group.

        :return: The severity of this SmartGroupProperties.
        :rtype: str
        """
        return self._severity

    @severity.setter
    def severity(self, severity):
        """Sets the severity of this SmartGroupProperties.

        Severity of smart group is the highest(Sev0 >... > Sev4) severity of all the alerts in the group.

        :param severity: The severity of this SmartGroupProperties.
        :type severity: str
        """
        allowed_values = ["Sev0", "Sev1", "Sev2", "Sev3", "Sev4"]  # noqa: E501
        if severity not in allowed_values:
            raise ValueError(
                "Invalid value for `severity` ({0}), must be one of {1}"
                .format(severity, allowed_values)
            )

        self._severity = severity

    @property
    def smart_group_state(self):
        """Gets the smart_group_state of this SmartGroupProperties.

        Smart group state

        :return: The smart_group_state of this SmartGroupProperties.
        :rtype: str
        """
        return self._smart_group_state

    @smart_group_state.setter
    def smart_group_state(self, smart_group_state):
        """Sets the smart_group_state of this SmartGroupProperties.

        Smart group state

        :param smart_group_state: The smart_group_state of this SmartGroupProperties.
        :type smart_group_state: str
        """
        allowed_values = ["New", "Acknowledged", "Closed"]  # noqa: E501
        if smart_group_state not in allowed_values:
            raise ValueError(
                "Invalid value for `smart_group_state` ({0}), must be one of {1}"
                .format(smart_group_state, allowed_values)
            )

        self._smart_group_state = smart_group_state

    @property
    def start_date_time(self):
        """Gets the start_date_time of this SmartGroupProperties.

        Creation time of smart group. Date-Time in ISO-8601 format.

        :return: The start_date_time of this SmartGroupProperties.
        :rtype: datetime
        """
        return self._start_date_time

    @start_date_time.setter
    def start_date_time(self, start_date_time):
        """Sets the start_date_time of this SmartGroupProperties.

        Creation time of smart group. Date-Time in ISO-8601 format.

        :param start_date_time: The start_date_time of this SmartGroupProperties.
        :type start_date_time: datetime
        """

        self._start_date_time = start_date_time
