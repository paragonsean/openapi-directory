/**
 * Azure Alerts Management Service Resource Provider
 * Azure Alerts Management Service provides a single pane of glass of alerts across Azure Monitor.
 *
 * The version of the OpenAPI document: 2018-05-05
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEssentials.h
 *
 * This object contains consistent fields across different monitor services.
 */

#ifndef OAIEssentials_H
#define OAIEssentials_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIEssentials : public OAIObject {
public:
    OAIEssentials();
    OAIEssentials(QString json);
    ~OAIEssentials() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAlertRule() const;
    void setAlertRule(const QString &alert_rule);
    bool is_alert_rule_Set() const;
    bool is_alert_rule_Valid() const;

    QString getAlertState() const;
    void setAlertState(const QString &alert_state);
    bool is_alert_state_Set() const;
    bool is_alert_state_Valid() const;

    QDateTime getLastModifiedDateTime() const;
    void setLastModifiedDateTime(const QDateTime &last_modified_date_time);
    bool is_last_modified_date_time_Set() const;
    bool is_last_modified_date_time_Valid() const;

    QString getLastModifiedUserName() const;
    void setLastModifiedUserName(const QString &last_modified_user_name);
    bool is_last_modified_user_name_Set() const;
    bool is_last_modified_user_name_Valid() const;

    QString getMonitorCondition() const;
    void setMonitorCondition(const QString &monitor_condition);
    bool is_monitor_condition_Set() const;
    bool is_monitor_condition_Valid() const;

    QDateTime getMonitorConditionResolvedDateTime() const;
    void setMonitorConditionResolvedDateTime(const QDateTime &monitor_condition_resolved_date_time);
    bool is_monitor_condition_resolved_date_time_Set() const;
    bool is_monitor_condition_resolved_date_time_Valid() const;

    QString getMonitorService() const;
    void setMonitorService(const QString &monitor_service);
    bool is_monitor_service_Set() const;
    bool is_monitor_service_Valid() const;

    QString getSeverity() const;
    void setSeverity(const QString &severity);
    bool is_severity_Set() const;
    bool is_severity_Valid() const;

    QString getSignalType() const;
    void setSignalType(const QString &signal_type);
    bool is_signal_type_Set() const;
    bool is_signal_type_Valid() const;

    QString getSmartGroupId() const;
    void setSmartGroupId(const QString &smart_group_id);
    bool is_smart_group_id_Set() const;
    bool is_smart_group_id_Valid() const;

    QString getSmartGroupingReason() const;
    void setSmartGroupingReason(const QString &smart_grouping_reason);
    bool is_smart_grouping_reason_Set() const;
    bool is_smart_grouping_reason_Valid() const;

    QString getSourceCreatedId() const;
    void setSourceCreatedId(const QString &source_created_id);
    bool is_source_created_id_Set() const;
    bool is_source_created_id_Valid() const;

    QDateTime getStartDateTime() const;
    void setStartDateTime(const QDateTime &start_date_time);
    bool is_start_date_time_Set() const;
    bool is_start_date_time_Valid() const;

    QString getTargetResource() const;
    void setTargetResource(const QString &target_resource);
    bool is_target_resource_Set() const;
    bool is_target_resource_Valid() const;

    QString getTargetResourceGroup() const;
    void setTargetResourceGroup(const QString &target_resource_group);
    bool is_target_resource_group_Set() const;
    bool is_target_resource_group_Valid() const;

    QString getTargetResourceName() const;
    void setTargetResourceName(const QString &target_resource_name);
    bool is_target_resource_name_Set() const;
    bool is_target_resource_name_Valid() const;

    QString getTargetResourceType() const;
    void setTargetResourceType(const QString &target_resource_type);
    bool is_target_resource_type_Set() const;
    bool is_target_resource_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_alert_rule;
    bool m_alert_rule_isSet;
    bool m_alert_rule_isValid;

    QString m_alert_state;
    bool m_alert_state_isSet;
    bool m_alert_state_isValid;

    QDateTime m_last_modified_date_time;
    bool m_last_modified_date_time_isSet;
    bool m_last_modified_date_time_isValid;

    QString m_last_modified_user_name;
    bool m_last_modified_user_name_isSet;
    bool m_last_modified_user_name_isValid;

    QString m_monitor_condition;
    bool m_monitor_condition_isSet;
    bool m_monitor_condition_isValid;

    QDateTime m_monitor_condition_resolved_date_time;
    bool m_monitor_condition_resolved_date_time_isSet;
    bool m_monitor_condition_resolved_date_time_isValid;

    QString m_monitor_service;
    bool m_monitor_service_isSet;
    bool m_monitor_service_isValid;

    QString m_severity;
    bool m_severity_isSet;
    bool m_severity_isValid;

    QString m_signal_type;
    bool m_signal_type_isSet;
    bool m_signal_type_isValid;

    QString m_smart_group_id;
    bool m_smart_group_id_isSet;
    bool m_smart_group_id_isValid;

    QString m_smart_grouping_reason;
    bool m_smart_grouping_reason_isSet;
    bool m_smart_grouping_reason_isValid;

    QString m_source_created_id;
    bool m_source_created_id_isSet;
    bool m_source_created_id_isValid;

    QDateTime m_start_date_time;
    bool m_start_date_time_isSet;
    bool m_start_date_time_isValid;

    QString m_target_resource;
    bool m_target_resource_isSet;
    bool m_target_resource_isValid;

    QString m_target_resource_group;
    bool m_target_resource_group_isSet;
    bool m_target_resource_group_isValid;

    QString m_target_resource_name;
    bool m_target_resource_name_isSet;
    bool m_target_resource_name_isValid;

    QString m_target_resource_type;
    bool m_target_resource_type_isSet;
    bool m_target_resource_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEssentials)

#endif // OAIEssentials_H
