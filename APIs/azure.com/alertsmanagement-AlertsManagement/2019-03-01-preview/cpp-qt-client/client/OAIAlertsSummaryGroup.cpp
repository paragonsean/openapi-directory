/**
 * Azure Alerts Management Service Resource Provider
 * Azure Alerts Management Service provides a single pane of glass of alerts across Azure Monitor.
 *
 * The version of the OpenAPI document: 2019-03-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAlertsSummaryGroup.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAlertsSummaryGroup::OAIAlertsSummaryGroup(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAlertsSummaryGroup::OAIAlertsSummaryGroup() {
    this->initializeModel();
}

OAIAlertsSummaryGroup::~OAIAlertsSummaryGroup() {}

void OAIAlertsSummaryGroup::initializeModel() {

    m_groupedby_isSet = false;
    m_groupedby_isValid = false;

    m_smart_groups_count_isSet = false;
    m_smart_groups_count_isValid = false;

    m_total_isSet = false;
    m_total_isValid = false;

    m_values_isSet = false;
    m_values_isValid = false;
}

void OAIAlertsSummaryGroup::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAlertsSummaryGroup::fromJsonObject(QJsonObject json) {

    m_groupedby_isValid = ::OpenAPI::fromJsonValue(m_groupedby, json[QString("groupedby")]);
    m_groupedby_isSet = !json[QString("groupedby")].isNull() && m_groupedby_isValid;

    m_smart_groups_count_isValid = ::OpenAPI::fromJsonValue(m_smart_groups_count, json[QString("smartGroupsCount")]);
    m_smart_groups_count_isSet = !json[QString("smartGroupsCount")].isNull() && m_smart_groups_count_isValid;

    m_total_isValid = ::OpenAPI::fromJsonValue(m_total, json[QString("total")]);
    m_total_isSet = !json[QString("total")].isNull() && m_total_isValid;

    m_values_isValid = ::OpenAPI::fromJsonValue(m_values, json[QString("values")]);
    m_values_isSet = !json[QString("values")].isNull() && m_values_isValid;
}

QString OAIAlertsSummaryGroup::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAlertsSummaryGroup::asJsonObject() const {
    QJsonObject obj;
    if (m_groupedby_isSet) {
        obj.insert(QString("groupedby"), ::OpenAPI::toJsonValue(m_groupedby));
    }
    if (m_smart_groups_count_isSet) {
        obj.insert(QString("smartGroupsCount"), ::OpenAPI::toJsonValue(m_smart_groups_count));
    }
    if (m_total_isSet) {
        obj.insert(QString("total"), ::OpenAPI::toJsonValue(m_total));
    }
    if (m_values.size() > 0) {
        obj.insert(QString("values"), ::OpenAPI::toJsonValue(m_values));
    }
    return obj;
}

QString OAIAlertsSummaryGroup::getGroupedby() const {
    return m_groupedby;
}
void OAIAlertsSummaryGroup::setGroupedby(const QString &groupedby) {
    m_groupedby = groupedby;
    m_groupedby_isSet = true;
}

bool OAIAlertsSummaryGroup::is_groupedby_Set() const{
    return m_groupedby_isSet;
}

bool OAIAlertsSummaryGroup::is_groupedby_Valid() const{
    return m_groupedby_isValid;
}

qint32 OAIAlertsSummaryGroup::getSmartGroupsCount() const {
    return m_smart_groups_count;
}
void OAIAlertsSummaryGroup::setSmartGroupsCount(const qint32 &smart_groups_count) {
    m_smart_groups_count = smart_groups_count;
    m_smart_groups_count_isSet = true;
}

bool OAIAlertsSummaryGroup::is_smart_groups_count_Set() const{
    return m_smart_groups_count_isSet;
}

bool OAIAlertsSummaryGroup::is_smart_groups_count_Valid() const{
    return m_smart_groups_count_isValid;
}

qint32 OAIAlertsSummaryGroup::getTotal() const {
    return m_total;
}
void OAIAlertsSummaryGroup::setTotal(const qint32 &total) {
    m_total = total;
    m_total_isSet = true;
}

bool OAIAlertsSummaryGroup::is_total_Set() const{
    return m_total_isSet;
}

bool OAIAlertsSummaryGroup::is_total_Valid() const{
    return m_total_isValid;
}

QList<OAIAlertsSummaryGroupItem> OAIAlertsSummaryGroup::getValues() const {
    return m_values;
}
void OAIAlertsSummaryGroup::setValues(const QList<OAIAlertsSummaryGroupItem> &values) {
    m_values = values;
    m_values_isSet = true;
}

bool OAIAlertsSummaryGroup::is_values_Set() const{
    return m_values_isSet;
}

bool OAIAlertsSummaryGroup::is_values_Valid() const{
    return m_values_isValid;
}

bool OAIAlertsSummaryGroup::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_groupedby_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_smart_groups_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_values.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAlertsSummaryGroup::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
