/**
 * CostManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-09-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CommonExportProperties from './CommonExportProperties';
import ExportDeliveryInfo from './ExportDeliveryInfo';
import ExportSchedule from './ExportSchedule';
import QueryDefinition from './QueryDefinition';

/**
 * The ExportProperties model module.
 * @module model/ExportProperties
 * @version 2019-09-01
 */
class ExportProperties {
    /**
     * Constructs a new <code>ExportProperties</code>.
     * The properties of the export.
     * @alias module:model/ExportProperties
     * @implements module:model/CommonExportProperties
     * @param definition {module:model/QueryDefinition} 
     * @param deliveryInfo {module:model/ExportDeliveryInfo} 
     */
    constructor(definition, deliveryInfo) { 
        CommonExportProperties.initialize(this, definition, deliveryInfo);
        ExportProperties.initialize(this, definition, deliveryInfo);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, definition, deliveryInfo) { 
        obj['definition'] = definition;
        obj['deliveryInfo'] = deliveryInfo;
    }

    /**
     * Constructs a <code>ExportProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ExportProperties} obj Optional instance to populate.
     * @return {module:model/ExportProperties} The populated <code>ExportProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ExportProperties();
            CommonExportProperties.constructFromObject(data, obj);

            if (data.hasOwnProperty('schedule')) {
                obj['schedule'] = ExportSchedule.constructFromObject(data['schedule']);
            }
            if (data.hasOwnProperty('definition')) {
                obj['definition'] = QueryDefinition.constructFromObject(data['definition']);
            }
            if (data.hasOwnProperty('deliveryInfo')) {
                obj['deliveryInfo'] = ExportDeliveryInfo.constructFromObject(data['deliveryInfo']);
            }
            if (data.hasOwnProperty('format')) {
                obj['format'] = ApiClient.convertToType(data['format'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ExportProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ExportProperties</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ExportProperties.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `schedule`
        if (data['schedule']) { // data not null
          ExportSchedule.validateJSON(data['schedule']);
        }
        // validate the optional field `definition`
        if (data['definition']) { // data not null
          QueryDefinition.validateJSON(data['definition']);
        }
        // validate the optional field `deliveryInfo`
        if (data['deliveryInfo']) { // data not null
          ExportDeliveryInfo.validateJSON(data['deliveryInfo']);
        }
        // ensure the json data is a string
        if (data['format'] && !(typeof data['format'] === 'string' || data['format'] instanceof String)) {
            throw new Error("Expected the field `format` to be a primitive type in the JSON string but got " + data['format']);
        }

        return true;
    }


}

ExportProperties.RequiredProperties = ["definition", "deliveryInfo"];

/**
 * @member {module:model/ExportSchedule} schedule
 */
ExportProperties.prototype['schedule'] = undefined;

/**
 * @member {module:model/QueryDefinition} definition
 */
ExportProperties.prototype['definition'] = undefined;

/**
 * @member {module:model/ExportDeliveryInfo} deliveryInfo
 */
ExportProperties.prototype['deliveryInfo'] = undefined;

/**
 * The format of the export being delivered.
 * @member {module:model/ExportProperties.FormatEnum} format
 */
ExportProperties.prototype['format'] = undefined;


// Implement CommonExportProperties interface:
/**
 * @member {module:model/QueryDefinition} definition
 */
CommonExportProperties.prototype['definition'] = undefined;
/**
 * @member {module:model/ExportDeliveryInfo} deliveryInfo
 */
CommonExportProperties.prototype['deliveryInfo'] = undefined;
/**
 * The format of the export being delivered.
 * @member {module:model/CommonExportProperties.FormatEnum} format
 */
CommonExportProperties.prototype['format'] = undefined;



/**
 * Allowed values for the <code>format</code> property.
 * @enum {String}
 * @readonly
 */
ExportProperties['FormatEnum'] = {

    /**
     * value: "Csv"
     * @const
     */
    "Csv": "Csv"
};



export default ExportProperties;

