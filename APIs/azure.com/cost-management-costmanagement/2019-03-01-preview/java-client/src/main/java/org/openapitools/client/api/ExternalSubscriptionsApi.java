/*
 * CostManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-03-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.ErrorResponse;
import org.openapitools.client.model.ExternalSubscriptionDefinition;
import org.openapitools.client.model.ExternalSubscriptionDefinitionListResult;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ExternalSubscriptionsApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public ExternalSubscriptionsApi() {
        this(Configuration.getDefaultApiClient());
    }

    public ExternalSubscriptionsApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for externalSubscriptionGet
     * @param apiVersion Version of the API to be used with the client request. The current version is 2019-03-01-preview (required)
     * @param externalSubscriptionName External Subscription Name. (eg &#39;aws-{UsageAccountId}&#39;) (required)
     * @param $expand May be used to expand the collectionInfo property. By default, collectionInfo is not included. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public okhttp3.Call externalSubscriptionGetCall(String apiVersion, String externalSubscriptionName, String $expand, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/providers/Microsoft.CostManagement/externalSubscriptions/{externalSubscriptionName}"
            .replace("{" + "externalSubscriptionName" + "}", localVarApiClient.escapeString(externalSubscriptionName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        if ($expand != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$expand", $expand));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call externalSubscriptionGetValidateBeforeCall(String apiVersion, String externalSubscriptionName, String $expand, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling externalSubscriptionGet(Async)");
        }

        // verify the required parameter 'externalSubscriptionName' is set
        if (externalSubscriptionName == null) {
            throw new ApiException("Missing the required parameter 'externalSubscriptionName' when calling externalSubscriptionGet(Async)");
        }

        return externalSubscriptionGetCall(apiVersion, externalSubscriptionName, $expand, _callback);

    }

    /**
     * 
     * Get an ExternalSubscription definition
     * @param apiVersion Version of the API to be used with the client request. The current version is 2019-03-01-preview (required)
     * @param externalSubscriptionName External Subscription Name. (eg &#39;aws-{UsageAccountId}&#39;) (required)
     * @param $expand May be used to expand the collectionInfo property. By default, collectionInfo is not included. (optional)
     * @return ExternalSubscriptionDefinition
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public ExternalSubscriptionDefinition externalSubscriptionGet(String apiVersion, String externalSubscriptionName, String $expand) throws ApiException {
        ApiResponse<ExternalSubscriptionDefinition> localVarResp = externalSubscriptionGetWithHttpInfo(apiVersion, externalSubscriptionName, $expand);
        return localVarResp.getData();
    }

    /**
     * 
     * Get an ExternalSubscription definition
     * @param apiVersion Version of the API to be used with the client request. The current version is 2019-03-01-preview (required)
     * @param externalSubscriptionName External Subscription Name. (eg &#39;aws-{UsageAccountId}&#39;) (required)
     * @param $expand May be used to expand the collectionInfo property. By default, collectionInfo is not included. (optional)
     * @return ApiResponse&lt;ExternalSubscriptionDefinition&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public ApiResponse<ExternalSubscriptionDefinition> externalSubscriptionGetWithHttpInfo(String apiVersion, String externalSubscriptionName, String $expand) throws ApiException {
        okhttp3.Call localVarCall = externalSubscriptionGetValidateBeforeCall(apiVersion, externalSubscriptionName, $expand, null);
        Type localVarReturnType = new TypeToken<ExternalSubscriptionDefinition>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Get an ExternalSubscription definition
     * @param apiVersion Version of the API to be used with the client request. The current version is 2019-03-01-preview (required)
     * @param externalSubscriptionName External Subscription Name. (eg &#39;aws-{UsageAccountId}&#39;) (required)
     * @param $expand May be used to expand the collectionInfo property. By default, collectionInfo is not included. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public okhttp3.Call externalSubscriptionGetAsync(String apiVersion, String externalSubscriptionName, String $expand, final ApiCallback<ExternalSubscriptionDefinition> _callback) throws ApiException {

        okhttp3.Call localVarCall = externalSubscriptionGetValidateBeforeCall(apiVersion, externalSubscriptionName, $expand, _callback);
        Type localVarReturnType = new TypeToken<ExternalSubscriptionDefinition>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for externalSubscriptionList
     * @param apiVersion Version of the API to be used with the client request. The current version is 2019-03-01-preview (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public okhttp3.Call externalSubscriptionListCall(String apiVersion, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/providers/Microsoft.CostManagement/externalSubscriptions";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call externalSubscriptionListValidateBeforeCall(String apiVersion, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling externalSubscriptionList(Async)");
        }

        return externalSubscriptionListCall(apiVersion, _callback);

    }

    /**
     * 
     * List all ExternalSubscription definitions
     * @param apiVersion Version of the API to be used with the client request. The current version is 2019-03-01-preview (required)
     * @return ExternalSubscriptionDefinitionListResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public ExternalSubscriptionDefinitionListResult externalSubscriptionList(String apiVersion) throws ApiException {
        ApiResponse<ExternalSubscriptionDefinitionListResult> localVarResp = externalSubscriptionListWithHttpInfo(apiVersion);
        return localVarResp.getData();
    }

    /**
     * 
     * List all ExternalSubscription definitions
     * @param apiVersion Version of the API to be used with the client request. The current version is 2019-03-01-preview (required)
     * @return ApiResponse&lt;ExternalSubscriptionDefinitionListResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public ApiResponse<ExternalSubscriptionDefinitionListResult> externalSubscriptionListWithHttpInfo(String apiVersion) throws ApiException {
        okhttp3.Call localVarCall = externalSubscriptionListValidateBeforeCall(apiVersion, null);
        Type localVarReturnType = new TypeToken<ExternalSubscriptionDefinitionListResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * List all ExternalSubscription definitions
     * @param apiVersion Version of the API to be used with the client request. The current version is 2019-03-01-preview (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public okhttp3.Call externalSubscriptionListAsync(String apiVersion, final ApiCallback<ExternalSubscriptionDefinitionListResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = externalSubscriptionListValidateBeforeCall(apiVersion, _callback);
        Type localVarReturnType = new TypeToken<ExternalSubscriptionDefinitionListResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for externalSubscriptionListByExternalBillingAccount
     * @param apiVersion Version of the API to be used with the client request. The current version is 2019-03-01-preview (required)
     * @param externalBillingAccountName External Billing Account Name. (eg &#39;aws-{PayerAccountId}&#39;) (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public okhttp3.Call externalSubscriptionListByExternalBillingAccountCall(String apiVersion, String externalBillingAccountName, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/providers/Microsoft.CostManagement/externalBillingAccounts/{externalBillingAccountName}/externalSubscriptions"
            .replace("{" + "externalBillingAccountName" + "}", localVarApiClient.escapeString(externalBillingAccountName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call externalSubscriptionListByExternalBillingAccountValidateBeforeCall(String apiVersion, String externalBillingAccountName, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling externalSubscriptionListByExternalBillingAccount(Async)");
        }

        // verify the required parameter 'externalBillingAccountName' is set
        if (externalBillingAccountName == null) {
            throw new ApiException("Missing the required parameter 'externalBillingAccountName' when calling externalSubscriptionListByExternalBillingAccount(Async)");
        }

        return externalSubscriptionListByExternalBillingAccountCall(apiVersion, externalBillingAccountName, _callback);

    }

    /**
     * 
     * List all ExternalSubscriptions by ExternalBillingAccount definitions
     * @param apiVersion Version of the API to be used with the client request. The current version is 2019-03-01-preview (required)
     * @param externalBillingAccountName External Billing Account Name. (eg &#39;aws-{PayerAccountId}&#39;) (required)
     * @return ExternalSubscriptionDefinitionListResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public ExternalSubscriptionDefinitionListResult externalSubscriptionListByExternalBillingAccount(String apiVersion, String externalBillingAccountName) throws ApiException {
        ApiResponse<ExternalSubscriptionDefinitionListResult> localVarResp = externalSubscriptionListByExternalBillingAccountWithHttpInfo(apiVersion, externalBillingAccountName);
        return localVarResp.getData();
    }

    /**
     * 
     * List all ExternalSubscriptions by ExternalBillingAccount definitions
     * @param apiVersion Version of the API to be used with the client request. The current version is 2019-03-01-preview (required)
     * @param externalBillingAccountName External Billing Account Name. (eg &#39;aws-{PayerAccountId}&#39;) (required)
     * @return ApiResponse&lt;ExternalSubscriptionDefinitionListResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public ApiResponse<ExternalSubscriptionDefinitionListResult> externalSubscriptionListByExternalBillingAccountWithHttpInfo(String apiVersion, String externalBillingAccountName) throws ApiException {
        okhttp3.Call localVarCall = externalSubscriptionListByExternalBillingAccountValidateBeforeCall(apiVersion, externalBillingAccountName, null);
        Type localVarReturnType = new TypeToken<ExternalSubscriptionDefinitionListResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * List all ExternalSubscriptions by ExternalBillingAccount definitions
     * @param apiVersion Version of the API to be used with the client request. The current version is 2019-03-01-preview (required)
     * @param externalBillingAccountName External Billing Account Name. (eg &#39;aws-{PayerAccountId}&#39;) (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public okhttp3.Call externalSubscriptionListByExternalBillingAccountAsync(String apiVersion, String externalBillingAccountName, final ApiCallback<ExternalSubscriptionDefinitionListResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = externalSubscriptionListByExternalBillingAccountValidateBeforeCall(apiVersion, externalBillingAccountName, _callback);
        Type localVarReturnType = new TypeToken<ExternalSubscriptionDefinitionListResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for externalSubscriptionListByManagementGroup
     * @param apiVersion Version of the API to be used with the client request. The current version is 2019-03-01-preview (required)
     * @param managementGroupId ManagementGroup ID (required)
     * @param $recurse The $recurse&#x3D;true query string parameter allows returning externalSubscriptions associated with the specified managementGroup, or any of its descendants. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public okhttp3.Call externalSubscriptionListByManagementGroupCall(String apiVersion, String managementGroupId, Boolean $recurse, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/providers/Microsoft.Management/managementGroups/{managementGroupId}/providers/Microsoft.CostManagement/externalSubscriptions"
            .replace("{" + "managementGroupId" + "}", localVarApiClient.escapeString(managementGroupId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        if ($recurse != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$recurse", $recurse));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call externalSubscriptionListByManagementGroupValidateBeforeCall(String apiVersion, String managementGroupId, Boolean $recurse, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling externalSubscriptionListByManagementGroup(Async)");
        }

        // verify the required parameter 'managementGroupId' is set
        if (managementGroupId == null) {
            throw new ApiException("Missing the required parameter 'managementGroupId' when calling externalSubscriptionListByManagementGroup(Async)");
        }

        return externalSubscriptionListByManagementGroupCall(apiVersion, managementGroupId, $recurse, _callback);

    }

    /**
     * 
     * List all ExternalSubscription definitions for Management Group
     * @param apiVersion Version of the API to be used with the client request. The current version is 2019-03-01-preview (required)
     * @param managementGroupId ManagementGroup ID (required)
     * @param $recurse The $recurse&#x3D;true query string parameter allows returning externalSubscriptions associated with the specified managementGroup, or any of its descendants. (optional)
     * @return ExternalSubscriptionDefinitionListResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public ExternalSubscriptionDefinitionListResult externalSubscriptionListByManagementGroup(String apiVersion, String managementGroupId, Boolean $recurse) throws ApiException {
        ApiResponse<ExternalSubscriptionDefinitionListResult> localVarResp = externalSubscriptionListByManagementGroupWithHttpInfo(apiVersion, managementGroupId, $recurse);
        return localVarResp.getData();
    }

    /**
     * 
     * List all ExternalSubscription definitions for Management Group
     * @param apiVersion Version of the API to be used with the client request. The current version is 2019-03-01-preview (required)
     * @param managementGroupId ManagementGroup ID (required)
     * @param $recurse The $recurse&#x3D;true query string parameter allows returning externalSubscriptions associated with the specified managementGroup, or any of its descendants. (optional)
     * @return ApiResponse&lt;ExternalSubscriptionDefinitionListResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public ApiResponse<ExternalSubscriptionDefinitionListResult> externalSubscriptionListByManagementGroupWithHttpInfo(String apiVersion, String managementGroupId, Boolean $recurse) throws ApiException {
        okhttp3.Call localVarCall = externalSubscriptionListByManagementGroupValidateBeforeCall(apiVersion, managementGroupId, $recurse, null);
        Type localVarReturnType = new TypeToken<ExternalSubscriptionDefinitionListResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * List all ExternalSubscription definitions for Management Group
     * @param apiVersion Version of the API to be used with the client request. The current version is 2019-03-01-preview (required)
     * @param managementGroupId ManagementGroup ID (required)
     * @param $recurse The $recurse&#x3D;true query string parameter allows returning externalSubscriptions associated with the specified managementGroup, or any of its descendants. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public okhttp3.Call externalSubscriptionListByManagementGroupAsync(String apiVersion, String managementGroupId, Boolean $recurse, final ApiCallback<ExternalSubscriptionDefinitionListResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = externalSubscriptionListByManagementGroupValidateBeforeCall(apiVersion, managementGroupId, $recurse, _callback);
        Type localVarReturnType = new TypeToken<ExternalSubscriptionDefinitionListResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for externalSubscriptionUpdateManagementGroup
     * @param apiVersion Version of the API to be used with the client request. The current version is 2019-03-01-preview (required)
     * @param managementGroupId ManagementGroup ID (required)
     * @param externalSubscriptionName External Subscription Name. (eg &#39;aws-{UsageAccountId}&#39;) (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> NoContent </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public okhttp3.Call externalSubscriptionUpdateManagementGroupCall(String apiVersion, String managementGroupId, String externalSubscriptionName, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/providers/Microsoft.Management/managementGroups/{managementGroupId}/providers/Microsoft.CostManagement/externalSubscriptions/{externalSubscriptionName}"
            .replace("{" + "managementGroupId" + "}", localVarApiClient.escapeString(managementGroupId.toString()))
            .replace("{" + "externalSubscriptionName" + "}", localVarApiClient.escapeString(externalSubscriptionName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call externalSubscriptionUpdateManagementGroupValidateBeforeCall(String apiVersion, String managementGroupId, String externalSubscriptionName, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling externalSubscriptionUpdateManagementGroup(Async)");
        }

        // verify the required parameter 'managementGroupId' is set
        if (managementGroupId == null) {
            throw new ApiException("Missing the required parameter 'managementGroupId' when calling externalSubscriptionUpdateManagementGroup(Async)");
        }

        // verify the required parameter 'externalSubscriptionName' is set
        if (externalSubscriptionName == null) {
            throw new ApiException("Missing the required parameter 'externalSubscriptionName' when calling externalSubscriptionUpdateManagementGroup(Async)");
        }

        return externalSubscriptionUpdateManagementGroupCall(apiVersion, managementGroupId, externalSubscriptionName, _callback);

    }

    /**
     * 
     * Updates the management group of an ExternalSubscription
     * @param apiVersion Version of the API to be used with the client request. The current version is 2019-03-01-preview (required)
     * @param managementGroupId ManagementGroup ID (required)
     * @param externalSubscriptionName External Subscription Name. (eg &#39;aws-{UsageAccountId}&#39;) (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> NoContent </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public void externalSubscriptionUpdateManagementGroup(String apiVersion, String managementGroupId, String externalSubscriptionName) throws ApiException {
        externalSubscriptionUpdateManagementGroupWithHttpInfo(apiVersion, managementGroupId, externalSubscriptionName);
    }

    /**
     * 
     * Updates the management group of an ExternalSubscription
     * @param apiVersion Version of the API to be used with the client request. The current version is 2019-03-01-preview (required)
     * @param managementGroupId ManagementGroup ID (required)
     * @param externalSubscriptionName External Subscription Name. (eg &#39;aws-{UsageAccountId}&#39;) (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> NoContent </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public ApiResponse<Void> externalSubscriptionUpdateManagementGroupWithHttpInfo(String apiVersion, String managementGroupId, String externalSubscriptionName) throws ApiException {
        okhttp3.Call localVarCall = externalSubscriptionUpdateManagementGroupValidateBeforeCall(apiVersion, managementGroupId, externalSubscriptionName, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     *  (asynchronously)
     * Updates the management group of an ExternalSubscription
     * @param apiVersion Version of the API to be used with the client request. The current version is 2019-03-01-preview (required)
     * @param managementGroupId ManagementGroup ID (required)
     * @param externalSubscriptionName External Subscription Name. (eg &#39;aws-{UsageAccountId}&#39;) (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> NoContent </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public okhttp3.Call externalSubscriptionUpdateManagementGroupAsync(String apiVersion, String managementGroupId, String externalSubscriptionName, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = externalSubscriptionUpdateManagementGroupValidateBeforeCall(apiVersion, managementGroupId, externalSubscriptionName, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
}
