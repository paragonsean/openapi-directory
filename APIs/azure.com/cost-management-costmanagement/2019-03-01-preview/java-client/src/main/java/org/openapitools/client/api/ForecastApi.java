/*
 * CostManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-03-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.ErrorResponse;
import org.openapitools.client.model.QueryResult;
import org.openapitools.client.model.ReportConfigDefinition;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ForecastApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public ForecastApi() {
        this(Configuration.getDefaultApiClient());
    }

    public ForecastApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for forecastUsageByBillingAccount
     * @param apiVersion Version of the API to be used with the client request. The current version is 2019-03-01-preview (required)
     * @param billingAccountId BillingAccount ID (required)
     * @param parameters Parameters supplied to the CreateOrUpdate Report Config operation. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public okhttp3.Call forecastUsageByBillingAccountCall(String apiVersion, String billingAccountId, ReportConfigDefinition parameters, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = parameters;

        // create path and map variables
        String localVarPath = "/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.CostManagement/Forecast"
            .replace("{" + "billingAccountId" + "}", localVarApiClient.escapeString(billingAccountId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call forecastUsageByBillingAccountValidateBeforeCall(String apiVersion, String billingAccountId, ReportConfigDefinition parameters, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling forecastUsageByBillingAccount(Async)");
        }

        // verify the required parameter 'billingAccountId' is set
        if (billingAccountId == null) {
            throw new ApiException("Missing the required parameter 'billingAccountId' when calling forecastUsageByBillingAccount(Async)");
        }

        // verify the required parameter 'parameters' is set
        if (parameters == null) {
            throw new ApiException("Missing the required parameter 'parameters' when calling forecastUsageByBillingAccount(Async)");
        }

        return forecastUsageByBillingAccountCall(apiVersion, billingAccountId, parameters, _callback);

    }

    /**
     * 
     * Forecast the usage data for billing account.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2019-03-01-preview (required)
     * @param billingAccountId BillingAccount ID (required)
     * @param parameters Parameters supplied to the CreateOrUpdate Report Config operation. (required)
     * @return QueryResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public QueryResult forecastUsageByBillingAccount(String apiVersion, String billingAccountId, ReportConfigDefinition parameters) throws ApiException {
        ApiResponse<QueryResult> localVarResp = forecastUsageByBillingAccountWithHttpInfo(apiVersion, billingAccountId, parameters);
        return localVarResp.getData();
    }

    /**
     * 
     * Forecast the usage data for billing account.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2019-03-01-preview (required)
     * @param billingAccountId BillingAccount ID (required)
     * @param parameters Parameters supplied to the CreateOrUpdate Report Config operation. (required)
     * @return ApiResponse&lt;QueryResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public ApiResponse<QueryResult> forecastUsageByBillingAccountWithHttpInfo(String apiVersion, String billingAccountId, ReportConfigDefinition parameters) throws ApiException {
        okhttp3.Call localVarCall = forecastUsageByBillingAccountValidateBeforeCall(apiVersion, billingAccountId, parameters, null);
        Type localVarReturnType = new TypeToken<QueryResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Forecast the usage data for billing account.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2019-03-01-preview (required)
     * @param billingAccountId BillingAccount ID (required)
     * @param parameters Parameters supplied to the CreateOrUpdate Report Config operation. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public okhttp3.Call forecastUsageByBillingAccountAsync(String apiVersion, String billingAccountId, ReportConfigDefinition parameters, final ApiCallback<QueryResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = forecastUsageByBillingAccountValidateBeforeCall(apiVersion, billingAccountId, parameters, _callback);
        Type localVarReturnType = new TypeToken<QueryResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for forecastUsageByDepartment
     * @param apiVersion Version of the API to be used with the client request. The current version is 2019-03-01-preview (required)
     * @param billingAccountId BillingAccount ID (required)
     * @param departmentId Department ID (required)
     * @param parameters Parameters supplied to the CreateOrUpdate Report Config operation. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public okhttp3.Call forecastUsageByDepartmentCall(String apiVersion, String billingAccountId, String departmentId, ReportConfigDefinition parameters, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = parameters;

        // create path and map variables
        String localVarPath = "/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}/providers/Microsoft.CostManagement/Forecast"
            .replace("{" + "billingAccountId" + "}", localVarApiClient.escapeString(billingAccountId.toString()))
            .replace("{" + "departmentId" + "}", localVarApiClient.escapeString(departmentId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call forecastUsageByDepartmentValidateBeforeCall(String apiVersion, String billingAccountId, String departmentId, ReportConfigDefinition parameters, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling forecastUsageByDepartment(Async)");
        }

        // verify the required parameter 'billingAccountId' is set
        if (billingAccountId == null) {
            throw new ApiException("Missing the required parameter 'billingAccountId' when calling forecastUsageByDepartment(Async)");
        }

        // verify the required parameter 'departmentId' is set
        if (departmentId == null) {
            throw new ApiException("Missing the required parameter 'departmentId' when calling forecastUsageByDepartment(Async)");
        }

        // verify the required parameter 'parameters' is set
        if (parameters == null) {
            throw new ApiException("Missing the required parameter 'parameters' when calling forecastUsageByDepartment(Async)");
        }

        return forecastUsageByDepartmentCall(apiVersion, billingAccountId, departmentId, parameters, _callback);

    }

    /**
     * 
     * Forecast the usage data for department.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2019-03-01-preview (required)
     * @param billingAccountId BillingAccount ID (required)
     * @param departmentId Department ID (required)
     * @param parameters Parameters supplied to the CreateOrUpdate Report Config operation. (required)
     * @return QueryResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public QueryResult forecastUsageByDepartment(String apiVersion, String billingAccountId, String departmentId, ReportConfigDefinition parameters) throws ApiException {
        ApiResponse<QueryResult> localVarResp = forecastUsageByDepartmentWithHttpInfo(apiVersion, billingAccountId, departmentId, parameters);
        return localVarResp.getData();
    }

    /**
     * 
     * Forecast the usage data for department.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2019-03-01-preview (required)
     * @param billingAccountId BillingAccount ID (required)
     * @param departmentId Department ID (required)
     * @param parameters Parameters supplied to the CreateOrUpdate Report Config operation. (required)
     * @return ApiResponse&lt;QueryResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public ApiResponse<QueryResult> forecastUsageByDepartmentWithHttpInfo(String apiVersion, String billingAccountId, String departmentId, ReportConfigDefinition parameters) throws ApiException {
        okhttp3.Call localVarCall = forecastUsageByDepartmentValidateBeforeCall(apiVersion, billingAccountId, departmentId, parameters, null);
        Type localVarReturnType = new TypeToken<QueryResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Forecast the usage data for department.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2019-03-01-preview (required)
     * @param billingAccountId BillingAccount ID (required)
     * @param departmentId Department ID (required)
     * @param parameters Parameters supplied to the CreateOrUpdate Report Config operation. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public okhttp3.Call forecastUsageByDepartmentAsync(String apiVersion, String billingAccountId, String departmentId, ReportConfigDefinition parameters, final ApiCallback<QueryResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = forecastUsageByDepartmentValidateBeforeCall(apiVersion, billingAccountId, departmentId, parameters, _callback);
        Type localVarReturnType = new TypeToken<QueryResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for forecastUsageByEnrollmentAccount
     * @param apiVersion Version of the API to be used with the client request. The current version is 2019-03-01-preview (required)
     * @param billingAccountId BillingAccount ID (required)
     * @param enrollmentAccountId Enrollment Account ID (required)
     * @param parameters Parameters supplied to the CreateOrUpdate Report Config operation. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public okhttp3.Call forecastUsageByEnrollmentAccountCall(String apiVersion, String billingAccountId, String enrollmentAccountId, ReportConfigDefinition parameters, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = parameters;

        // create path and map variables
        String localVarPath = "/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}/providers/Microsoft.CostManagement/Forecast"
            .replace("{" + "billingAccountId" + "}", localVarApiClient.escapeString(billingAccountId.toString()))
            .replace("{" + "enrollmentAccountId" + "}", localVarApiClient.escapeString(enrollmentAccountId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call forecastUsageByEnrollmentAccountValidateBeforeCall(String apiVersion, String billingAccountId, String enrollmentAccountId, ReportConfigDefinition parameters, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling forecastUsageByEnrollmentAccount(Async)");
        }

        // verify the required parameter 'billingAccountId' is set
        if (billingAccountId == null) {
            throw new ApiException("Missing the required parameter 'billingAccountId' when calling forecastUsageByEnrollmentAccount(Async)");
        }

        // verify the required parameter 'enrollmentAccountId' is set
        if (enrollmentAccountId == null) {
            throw new ApiException("Missing the required parameter 'enrollmentAccountId' when calling forecastUsageByEnrollmentAccount(Async)");
        }

        // verify the required parameter 'parameters' is set
        if (parameters == null) {
            throw new ApiException("Missing the required parameter 'parameters' when calling forecastUsageByEnrollmentAccount(Async)");
        }

        return forecastUsageByEnrollmentAccountCall(apiVersion, billingAccountId, enrollmentAccountId, parameters, _callback);

    }

    /**
     * 
     * Forecast the usage data for an enrollment account.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2019-03-01-preview (required)
     * @param billingAccountId BillingAccount ID (required)
     * @param enrollmentAccountId Enrollment Account ID (required)
     * @param parameters Parameters supplied to the CreateOrUpdate Report Config operation. (required)
     * @return QueryResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public QueryResult forecastUsageByEnrollmentAccount(String apiVersion, String billingAccountId, String enrollmentAccountId, ReportConfigDefinition parameters) throws ApiException {
        ApiResponse<QueryResult> localVarResp = forecastUsageByEnrollmentAccountWithHttpInfo(apiVersion, billingAccountId, enrollmentAccountId, parameters);
        return localVarResp.getData();
    }

    /**
     * 
     * Forecast the usage data for an enrollment account.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2019-03-01-preview (required)
     * @param billingAccountId BillingAccount ID (required)
     * @param enrollmentAccountId Enrollment Account ID (required)
     * @param parameters Parameters supplied to the CreateOrUpdate Report Config operation. (required)
     * @return ApiResponse&lt;QueryResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public ApiResponse<QueryResult> forecastUsageByEnrollmentAccountWithHttpInfo(String apiVersion, String billingAccountId, String enrollmentAccountId, ReportConfigDefinition parameters) throws ApiException {
        okhttp3.Call localVarCall = forecastUsageByEnrollmentAccountValidateBeforeCall(apiVersion, billingAccountId, enrollmentAccountId, parameters, null);
        Type localVarReturnType = new TypeToken<QueryResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Forecast the usage data for an enrollment account.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2019-03-01-preview (required)
     * @param billingAccountId BillingAccount ID (required)
     * @param enrollmentAccountId Enrollment Account ID (required)
     * @param parameters Parameters supplied to the CreateOrUpdate Report Config operation. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public okhttp3.Call forecastUsageByEnrollmentAccountAsync(String apiVersion, String billingAccountId, String enrollmentAccountId, ReportConfigDefinition parameters, final ApiCallback<QueryResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = forecastUsageByEnrollmentAccountValidateBeforeCall(apiVersion, billingAccountId, enrollmentAccountId, parameters, _callback);
        Type localVarReturnType = new TypeToken<QueryResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for forecastUsageByExternalBillingAccount
     * @param apiVersion Version of the API to be used with the client request. The current version is 2019-03-01-preview (required)
     * @param externalBillingAccountName External Billing Account Name. (eg &#39;aws-{PayerAccountId}&#39;) (required)
     * @param parameters Parameters supplied to the CreateOrUpdate Report Config operation. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public okhttp3.Call forecastUsageByExternalBillingAccountCall(String apiVersion, String externalBillingAccountName, ReportConfigDefinition parameters, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = parameters;

        // create path and map variables
        String localVarPath = "/providers/Microsoft.CostManagement/externalBillingAccounts/{externalBillingAccountName}/Forecast"
            .replace("{" + "externalBillingAccountName" + "}", localVarApiClient.escapeString(externalBillingAccountName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call forecastUsageByExternalBillingAccountValidateBeforeCall(String apiVersion, String externalBillingAccountName, ReportConfigDefinition parameters, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling forecastUsageByExternalBillingAccount(Async)");
        }

        // verify the required parameter 'externalBillingAccountName' is set
        if (externalBillingAccountName == null) {
            throw new ApiException("Missing the required parameter 'externalBillingAccountName' when calling forecastUsageByExternalBillingAccount(Async)");
        }

        // verify the required parameter 'parameters' is set
        if (parameters == null) {
            throw new ApiException("Missing the required parameter 'parameters' when calling forecastUsageByExternalBillingAccount(Async)");
        }

        return forecastUsageByExternalBillingAccountCall(apiVersion, externalBillingAccountName, parameters, _callback);

    }

    /**
     * 
     * Forecast the usage data for external billing account.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2019-03-01-preview (required)
     * @param externalBillingAccountName External Billing Account Name. (eg &#39;aws-{PayerAccountId}&#39;) (required)
     * @param parameters Parameters supplied to the CreateOrUpdate Report Config operation. (required)
     * @return QueryResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public QueryResult forecastUsageByExternalBillingAccount(String apiVersion, String externalBillingAccountName, ReportConfigDefinition parameters) throws ApiException {
        ApiResponse<QueryResult> localVarResp = forecastUsageByExternalBillingAccountWithHttpInfo(apiVersion, externalBillingAccountName, parameters);
        return localVarResp.getData();
    }

    /**
     * 
     * Forecast the usage data for external billing account.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2019-03-01-preview (required)
     * @param externalBillingAccountName External Billing Account Name. (eg &#39;aws-{PayerAccountId}&#39;) (required)
     * @param parameters Parameters supplied to the CreateOrUpdate Report Config operation. (required)
     * @return ApiResponse&lt;QueryResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public ApiResponse<QueryResult> forecastUsageByExternalBillingAccountWithHttpInfo(String apiVersion, String externalBillingAccountName, ReportConfigDefinition parameters) throws ApiException {
        okhttp3.Call localVarCall = forecastUsageByExternalBillingAccountValidateBeforeCall(apiVersion, externalBillingAccountName, parameters, null);
        Type localVarReturnType = new TypeToken<QueryResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Forecast the usage data for external billing account.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2019-03-01-preview (required)
     * @param externalBillingAccountName External Billing Account Name. (eg &#39;aws-{PayerAccountId}&#39;) (required)
     * @param parameters Parameters supplied to the CreateOrUpdate Report Config operation. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public okhttp3.Call forecastUsageByExternalBillingAccountAsync(String apiVersion, String externalBillingAccountName, ReportConfigDefinition parameters, final ApiCallback<QueryResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = forecastUsageByExternalBillingAccountValidateBeforeCall(apiVersion, externalBillingAccountName, parameters, _callback);
        Type localVarReturnType = new TypeToken<QueryResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for forecastUsageByManagementGroup
     * @param apiVersion Version of the API to be used with the client request. The current version is 2019-03-01-preview (required)
     * @param managementGroupId ManagementGroup ID (required)
     * @param parameters Parameters supplied to the CreateOrUpdate Report Config operation. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public okhttp3.Call forecastUsageByManagementGroupCall(String apiVersion, String managementGroupId, ReportConfigDefinition parameters, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = parameters;

        // create path and map variables
        String localVarPath = "/providers/Microsoft.Management/managementGroups/{managementGroupId}/providers/Microsoft.CostManagement/Forecast"
            .replace("{" + "managementGroupId" + "}", localVarApiClient.escapeString(managementGroupId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call forecastUsageByManagementGroupValidateBeforeCall(String apiVersion, String managementGroupId, ReportConfigDefinition parameters, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling forecastUsageByManagementGroup(Async)");
        }

        // verify the required parameter 'managementGroupId' is set
        if (managementGroupId == null) {
            throw new ApiException("Missing the required parameter 'managementGroupId' when calling forecastUsageByManagementGroup(Async)");
        }

        // verify the required parameter 'parameters' is set
        if (parameters == null) {
            throw new ApiException("Missing the required parameter 'parameters' when calling forecastUsageByManagementGroup(Async)");
        }

        return forecastUsageByManagementGroupCall(apiVersion, managementGroupId, parameters, _callback);

    }

    /**
     * 
     * Lists the usage data for management group.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2019-03-01-preview (required)
     * @param managementGroupId ManagementGroup ID (required)
     * @param parameters Parameters supplied to the CreateOrUpdate Report Config operation. (required)
     * @return QueryResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public QueryResult forecastUsageByManagementGroup(String apiVersion, String managementGroupId, ReportConfigDefinition parameters) throws ApiException {
        ApiResponse<QueryResult> localVarResp = forecastUsageByManagementGroupWithHttpInfo(apiVersion, managementGroupId, parameters);
        return localVarResp.getData();
    }

    /**
     * 
     * Lists the usage data for management group.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2019-03-01-preview (required)
     * @param managementGroupId ManagementGroup ID (required)
     * @param parameters Parameters supplied to the CreateOrUpdate Report Config operation. (required)
     * @return ApiResponse&lt;QueryResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public ApiResponse<QueryResult> forecastUsageByManagementGroupWithHttpInfo(String apiVersion, String managementGroupId, ReportConfigDefinition parameters) throws ApiException {
        okhttp3.Call localVarCall = forecastUsageByManagementGroupValidateBeforeCall(apiVersion, managementGroupId, parameters, null);
        Type localVarReturnType = new TypeToken<QueryResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Lists the usage data for management group.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2019-03-01-preview (required)
     * @param managementGroupId ManagementGroup ID (required)
     * @param parameters Parameters supplied to the CreateOrUpdate Report Config operation. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public okhttp3.Call forecastUsageByManagementGroupAsync(String apiVersion, String managementGroupId, ReportConfigDefinition parameters, final ApiCallback<QueryResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = forecastUsageByManagementGroupValidateBeforeCall(apiVersion, managementGroupId, parameters, _callback);
        Type localVarReturnType = new TypeToken<QueryResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for forecastUsageByResourceGroup
     * @param apiVersion Version of the API to be used with the client request. The current version is 2019-03-01-preview (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param resourceGroupName Azure Resource Group Name. (required)
     * @param parameters Parameters supplied to the CreateOrUpdate Report Config operation. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public okhttp3.Call forecastUsageByResourceGroupCall(String apiVersion, String subscriptionId, String resourceGroupName, ReportConfigDefinition parameters, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = parameters;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.CostManagement/Forecast"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call forecastUsageByResourceGroupValidateBeforeCall(String apiVersion, String subscriptionId, String resourceGroupName, ReportConfigDefinition parameters, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling forecastUsageByResourceGroup(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling forecastUsageByResourceGroup(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling forecastUsageByResourceGroup(Async)");
        }

        // verify the required parameter 'parameters' is set
        if (parameters == null) {
            throw new ApiException("Missing the required parameter 'parameters' when calling forecastUsageByResourceGroup(Async)");
        }

        return forecastUsageByResourceGroupCall(apiVersion, subscriptionId, resourceGroupName, parameters, _callback);

    }

    /**
     * 
     * Forecast the usage data for subscriptionId and resource group.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2019-03-01-preview (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param resourceGroupName Azure Resource Group Name. (required)
     * @param parameters Parameters supplied to the CreateOrUpdate Report Config operation. (required)
     * @return QueryResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public QueryResult forecastUsageByResourceGroup(String apiVersion, String subscriptionId, String resourceGroupName, ReportConfigDefinition parameters) throws ApiException {
        ApiResponse<QueryResult> localVarResp = forecastUsageByResourceGroupWithHttpInfo(apiVersion, subscriptionId, resourceGroupName, parameters);
        return localVarResp.getData();
    }

    /**
     * 
     * Forecast the usage data for subscriptionId and resource group.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2019-03-01-preview (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param resourceGroupName Azure Resource Group Name. (required)
     * @param parameters Parameters supplied to the CreateOrUpdate Report Config operation. (required)
     * @return ApiResponse&lt;QueryResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public ApiResponse<QueryResult> forecastUsageByResourceGroupWithHttpInfo(String apiVersion, String subscriptionId, String resourceGroupName, ReportConfigDefinition parameters) throws ApiException {
        okhttp3.Call localVarCall = forecastUsageByResourceGroupValidateBeforeCall(apiVersion, subscriptionId, resourceGroupName, parameters, null);
        Type localVarReturnType = new TypeToken<QueryResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Forecast the usage data for subscriptionId and resource group.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2019-03-01-preview (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param resourceGroupName Azure Resource Group Name. (required)
     * @param parameters Parameters supplied to the CreateOrUpdate Report Config operation. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public okhttp3.Call forecastUsageByResourceGroupAsync(String apiVersion, String subscriptionId, String resourceGroupName, ReportConfigDefinition parameters, final ApiCallback<QueryResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = forecastUsageByResourceGroupValidateBeforeCall(apiVersion, subscriptionId, resourceGroupName, parameters, _callback);
        Type localVarReturnType = new TypeToken<QueryResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for forecastUsageBySubscription
     * @param apiVersion Version of the API to be used with the client request. The current version is 2019-03-01-preview (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param parameters Parameters supplied to the CreateOrUpdate Report Config operation. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public okhttp3.Call forecastUsageBySubscriptionCall(String apiVersion, String subscriptionId, ReportConfigDefinition parameters, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = parameters;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/providers/Microsoft.CostManagement/Forecast"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call forecastUsageBySubscriptionValidateBeforeCall(String apiVersion, String subscriptionId, ReportConfigDefinition parameters, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling forecastUsageBySubscription(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling forecastUsageBySubscription(Async)");
        }

        // verify the required parameter 'parameters' is set
        if (parameters == null) {
            throw new ApiException("Missing the required parameter 'parameters' when calling forecastUsageBySubscription(Async)");
        }

        return forecastUsageBySubscriptionCall(apiVersion, subscriptionId, parameters, _callback);

    }

    /**
     * 
     * Forecast the usage data for subscriptionId.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2019-03-01-preview (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param parameters Parameters supplied to the CreateOrUpdate Report Config operation. (required)
     * @return QueryResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public QueryResult forecastUsageBySubscription(String apiVersion, String subscriptionId, ReportConfigDefinition parameters) throws ApiException {
        ApiResponse<QueryResult> localVarResp = forecastUsageBySubscriptionWithHttpInfo(apiVersion, subscriptionId, parameters);
        return localVarResp.getData();
    }

    /**
     * 
     * Forecast the usage data for subscriptionId.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2019-03-01-preview (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param parameters Parameters supplied to the CreateOrUpdate Report Config operation. (required)
     * @return ApiResponse&lt;QueryResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public ApiResponse<QueryResult> forecastUsageBySubscriptionWithHttpInfo(String apiVersion, String subscriptionId, ReportConfigDefinition parameters) throws ApiException {
        okhttp3.Call localVarCall = forecastUsageBySubscriptionValidateBeforeCall(apiVersion, subscriptionId, parameters, null);
        Type localVarReturnType = new TypeToken<QueryResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Forecast the usage data for subscriptionId.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2019-03-01-preview (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param parameters Parameters supplied to the CreateOrUpdate Report Config operation. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public okhttp3.Call forecastUsageBySubscriptionAsync(String apiVersion, String subscriptionId, ReportConfigDefinition parameters, final ApiCallback<QueryResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = forecastUsageBySubscriptionValidateBeforeCall(apiVersion, subscriptionId, parameters, _callback);
        Type localVarReturnType = new TypeToken<QueryResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
