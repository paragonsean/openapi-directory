/**
 * CostManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-03-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ConnectorDefinition from '../model/ConnectorDefinition';
import ConnectorDefinitionListResult from '../model/ConnectorDefinitionListResult';
import ErrorResponse from '../model/ErrorResponse';

/**
* CloudConnectors service.
* @module api/CloudConnectorsApi
* @version 2019-03-01-preview
*/
export default class CloudConnectorsApi {

    /**
    * Constructs a new CloudConnectorsApi. 
    * @alias module:api/CloudConnectorsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the cloudConnectorCreateOrUpdate operation.
     * @callback module:api/CloudConnectorsApi~cloudConnectorCreateOrUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ConnectorDefinition} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create or update a cloud connector definition
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2019-03-01-preview
     * @param {String} connectorName Connector Name.
     * @param {module:model/ConnectorDefinition} connector Connector details
     * @param {module:api/CloudConnectorsApi~cloudConnectorCreateOrUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ConnectorDefinition}
     */
    cloudConnectorCreateOrUpdate(apiVersion, connectorName, connector, callback) {
      let postBody = connector;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling cloudConnectorCreateOrUpdate");
      }
      // verify the required parameter 'connectorName' is set
      if (connectorName === undefined || connectorName === null) {
        throw new Error("Missing the required parameter 'connectorName' when calling cloudConnectorCreateOrUpdate");
      }
      // verify the required parameter 'connector' is set
      if (connector === undefined || connector === null) {
        throw new Error("Missing the required parameter 'connector' when calling cloudConnectorCreateOrUpdate");
      }

      let pathParams = {
        'connectorName': connectorName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ConnectorDefinition;
      return this.apiClient.callApi(
        '/providers/Microsoft.CostManagement/cloudConnectors/{connectorName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the cloudConnectorDelete operation.
     * @callback module:api/CloudConnectorsApi~cloudConnectorDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete a cloud connector definition
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2019-03-01-preview
     * @param {String} connectorName Connector Name.
     * @param {module:api/CloudConnectorsApi~cloudConnectorDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    cloudConnectorDelete(apiVersion, connectorName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling cloudConnectorDelete");
      }
      // verify the required parameter 'connectorName' is set
      if (connectorName === undefined || connectorName === null) {
        throw new Error("Missing the required parameter 'connectorName' when calling cloudConnectorDelete");
      }

      let pathParams = {
        'connectorName': connectorName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/providers/Microsoft.CostManagement/cloudConnectors/{connectorName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the cloudConnectorGet operation.
     * @callback module:api/CloudConnectorsApi~cloudConnectorGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ConnectorDefinition} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a cloud connector definition
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2019-03-01-preview
     * @param {String} connectorName Connector Name.
     * @param {Object} opts Optional parameters
     * @param {String} [expand] May be used to expand the collectionInfo property. By default, collectionInfo is not included.
     * @param {module:api/CloudConnectorsApi~cloudConnectorGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ConnectorDefinition}
     */
    cloudConnectorGet(apiVersion, connectorName, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling cloudConnectorGet");
      }
      // verify the required parameter 'connectorName' is set
      if (connectorName === undefined || connectorName === null) {
        throw new Error("Missing the required parameter 'connectorName' when calling cloudConnectorGet");
      }

      let pathParams = {
        'connectorName': connectorName
      };
      let queryParams = {
        'api-version': apiVersion,
        '$expand': opts['expand']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ConnectorDefinition;
      return this.apiClient.callApi(
        '/providers/Microsoft.CostManagement/cloudConnectors/{connectorName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the cloudConnectorList operation.
     * @callback module:api/CloudConnectorsApi~cloudConnectorListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ConnectorDefinitionListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List all cloud connector definitions
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2019-03-01-preview
     * @param {module:api/CloudConnectorsApi~cloudConnectorListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ConnectorDefinitionListResult}
     */
    cloudConnectorList(apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling cloudConnectorList");
      }

      let pathParams = {
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ConnectorDefinitionListResult;
      return this.apiClient.callApi(
        '/providers/Microsoft.CostManagement/cloudConnectors', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the cloudConnectorUpdate operation.
     * @callback module:api/CloudConnectorsApi~cloudConnectorUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ConnectorDefinition} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update a cloud connector definition
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2019-03-01-preview
     * @param {String} connectorName Connector Name.
     * @param {module:model/ConnectorDefinition} connector Connector details
     * @param {module:api/CloudConnectorsApi~cloudConnectorUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ConnectorDefinition}
     */
    cloudConnectorUpdate(apiVersion, connectorName, connector, callback) {
      let postBody = connector;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling cloudConnectorUpdate");
      }
      // verify the required parameter 'connectorName' is set
      if (connectorName === undefined || connectorName === null) {
        throw new Error("Missing the required parameter 'connectorName' when calling cloudConnectorUpdate");
      }
      // verify the required parameter 'connector' is set
      if (connector === undefined || connector === null) {
        throw new Error("Missing the required parameter 'connector' when calling cloudConnectorUpdate");
      }

      let pathParams = {
        'connectorName': connectorName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ConnectorDefinition;
      return this.apiClient.callApi(
        '/providers/Microsoft.CostManagement/cloudConnectors/{connectorName}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
