/**
 * CostManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-03-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErrorResponse from '../model/ErrorResponse';
import ExternalSubscriptionDefinition from '../model/ExternalSubscriptionDefinition';
import ExternalSubscriptionDefinitionListResult from '../model/ExternalSubscriptionDefinitionListResult';

/**
* ExternalSubscriptions service.
* @module api/ExternalSubscriptionsApi
* @version 2019-03-01-preview
*/
export default class ExternalSubscriptionsApi {

    /**
    * Constructs a new ExternalSubscriptionsApi. 
    * @alias module:api/ExternalSubscriptionsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the externalSubscriptionGet operation.
     * @callback module:api/ExternalSubscriptionsApi~externalSubscriptionGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ExternalSubscriptionDefinition} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get an ExternalSubscription definition
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2019-03-01-preview
     * @param {String} externalSubscriptionName External Subscription Name. (eg 'aws-{UsageAccountId}')
     * @param {Object} opts Optional parameters
     * @param {String} [expand] May be used to expand the collectionInfo property. By default, collectionInfo is not included.
     * @param {module:api/ExternalSubscriptionsApi~externalSubscriptionGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ExternalSubscriptionDefinition}
     */
    externalSubscriptionGet(apiVersion, externalSubscriptionName, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling externalSubscriptionGet");
      }
      // verify the required parameter 'externalSubscriptionName' is set
      if (externalSubscriptionName === undefined || externalSubscriptionName === null) {
        throw new Error("Missing the required parameter 'externalSubscriptionName' when calling externalSubscriptionGet");
      }

      let pathParams = {
        'externalSubscriptionName': externalSubscriptionName
      };
      let queryParams = {
        'api-version': apiVersion,
        '$expand': opts['expand']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ExternalSubscriptionDefinition;
      return this.apiClient.callApi(
        '/providers/Microsoft.CostManagement/externalSubscriptions/{externalSubscriptionName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the externalSubscriptionList operation.
     * @callback module:api/ExternalSubscriptionsApi~externalSubscriptionListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ExternalSubscriptionDefinitionListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List all ExternalSubscription definitions
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2019-03-01-preview
     * @param {module:api/ExternalSubscriptionsApi~externalSubscriptionListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ExternalSubscriptionDefinitionListResult}
     */
    externalSubscriptionList(apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling externalSubscriptionList");
      }

      let pathParams = {
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ExternalSubscriptionDefinitionListResult;
      return this.apiClient.callApi(
        '/providers/Microsoft.CostManagement/externalSubscriptions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the externalSubscriptionListByExternalBillingAccount operation.
     * @callback module:api/ExternalSubscriptionsApi~externalSubscriptionListByExternalBillingAccountCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ExternalSubscriptionDefinitionListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List all ExternalSubscriptions by ExternalBillingAccount definitions
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2019-03-01-preview
     * @param {String} externalBillingAccountName External Billing Account Name. (eg 'aws-{PayerAccountId}')
     * @param {module:api/ExternalSubscriptionsApi~externalSubscriptionListByExternalBillingAccountCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ExternalSubscriptionDefinitionListResult}
     */
    externalSubscriptionListByExternalBillingAccount(apiVersion, externalBillingAccountName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling externalSubscriptionListByExternalBillingAccount");
      }
      // verify the required parameter 'externalBillingAccountName' is set
      if (externalBillingAccountName === undefined || externalBillingAccountName === null) {
        throw new Error("Missing the required parameter 'externalBillingAccountName' when calling externalSubscriptionListByExternalBillingAccount");
      }

      let pathParams = {
        'externalBillingAccountName': externalBillingAccountName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ExternalSubscriptionDefinitionListResult;
      return this.apiClient.callApi(
        '/providers/Microsoft.CostManagement/externalBillingAccounts/{externalBillingAccountName}/externalSubscriptions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the externalSubscriptionListByManagementGroup operation.
     * @callback module:api/ExternalSubscriptionsApi~externalSubscriptionListByManagementGroupCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ExternalSubscriptionDefinitionListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List all ExternalSubscription definitions for Management Group
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2019-03-01-preview
     * @param {String} managementGroupId ManagementGroup ID
     * @param {Object} opts Optional parameters
     * @param {Boolean} [recurse] The $recurse=true query string parameter allows returning externalSubscriptions associated with the specified managementGroup, or any of its descendants.
     * @param {module:api/ExternalSubscriptionsApi~externalSubscriptionListByManagementGroupCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ExternalSubscriptionDefinitionListResult}
     */
    externalSubscriptionListByManagementGroup(apiVersion, managementGroupId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling externalSubscriptionListByManagementGroup");
      }
      // verify the required parameter 'managementGroupId' is set
      if (managementGroupId === undefined || managementGroupId === null) {
        throw new Error("Missing the required parameter 'managementGroupId' when calling externalSubscriptionListByManagementGroup");
      }

      let pathParams = {
        'managementGroupId': managementGroupId
      };
      let queryParams = {
        'api-version': apiVersion,
        '$recurse': opts['recurse']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ExternalSubscriptionDefinitionListResult;
      return this.apiClient.callApi(
        '/providers/Microsoft.Management/managementGroups/{managementGroupId}/providers/Microsoft.CostManagement/externalSubscriptions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the externalSubscriptionUpdateManagementGroup operation.
     * @callback module:api/ExternalSubscriptionsApi~externalSubscriptionUpdateManagementGroupCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates the management group of an ExternalSubscription
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2019-03-01-preview
     * @param {String} managementGroupId ManagementGroup ID
     * @param {String} externalSubscriptionName External Subscription Name. (eg 'aws-{UsageAccountId}')
     * @param {module:api/ExternalSubscriptionsApi~externalSubscriptionUpdateManagementGroupCallback} callback The callback function, accepting three arguments: error, data, response
     */
    externalSubscriptionUpdateManagementGroup(apiVersion, managementGroupId, externalSubscriptionName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling externalSubscriptionUpdateManagementGroup");
      }
      // verify the required parameter 'managementGroupId' is set
      if (managementGroupId === undefined || managementGroupId === null) {
        throw new Error("Missing the required parameter 'managementGroupId' when calling externalSubscriptionUpdateManagementGroup");
      }
      // verify the required parameter 'externalSubscriptionName' is set
      if (externalSubscriptionName === undefined || externalSubscriptionName === null) {
        throw new Error("Missing the required parameter 'externalSubscriptionName' when calling externalSubscriptionUpdateManagementGroup");
      }

      let pathParams = {
        'managementGroupId': managementGroupId,
        'externalSubscriptionName': externalSubscriptionName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/providers/Microsoft.Management/managementGroups/{managementGroupId}/providers/Microsoft.CostManagement/externalSubscriptions/{externalSubscriptionName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
