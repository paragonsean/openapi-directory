/**
 * CostManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-03-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErrorResponse from '../model/ErrorResponse';
import QueryResult from '../model/QueryResult';
import ReportConfigDefinition from '../model/ReportConfigDefinition';

/**
* Forecast service.
* @module api/ForecastApi
* @version 2019-03-01-preview
*/
export default class ForecastApi {

    /**
    * Constructs a new ForecastApi. 
    * @alias module:api/ForecastApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the forecastUsageByBillingAccount operation.
     * @callback module:api/ForecastApi~forecastUsageByBillingAccountCallback
     * @param {String} error Error message, if any.
     * @param {module:model/QueryResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Forecast the usage data for billing account.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2019-03-01-preview
     * @param {String} billingAccountId BillingAccount ID
     * @param {module:model/ReportConfigDefinition} parameters Parameters supplied to the CreateOrUpdate Report Config operation.
     * @param {module:api/ForecastApi~forecastUsageByBillingAccountCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/QueryResult}
     */
    forecastUsageByBillingAccount(apiVersion, billingAccountId, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling forecastUsageByBillingAccount");
      }
      // verify the required parameter 'billingAccountId' is set
      if (billingAccountId === undefined || billingAccountId === null) {
        throw new Error("Missing the required parameter 'billingAccountId' when calling forecastUsageByBillingAccount");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling forecastUsageByBillingAccount");
      }

      let pathParams = {
        'billingAccountId': billingAccountId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = QueryResult;
      return this.apiClient.callApi(
        '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.CostManagement/Forecast', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the forecastUsageByDepartment operation.
     * @callback module:api/ForecastApi~forecastUsageByDepartmentCallback
     * @param {String} error Error message, if any.
     * @param {module:model/QueryResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Forecast the usage data for department.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2019-03-01-preview
     * @param {String} billingAccountId BillingAccount ID
     * @param {String} departmentId Department ID
     * @param {module:model/ReportConfigDefinition} parameters Parameters supplied to the CreateOrUpdate Report Config operation.
     * @param {module:api/ForecastApi~forecastUsageByDepartmentCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/QueryResult}
     */
    forecastUsageByDepartment(apiVersion, billingAccountId, departmentId, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling forecastUsageByDepartment");
      }
      // verify the required parameter 'billingAccountId' is set
      if (billingAccountId === undefined || billingAccountId === null) {
        throw new Error("Missing the required parameter 'billingAccountId' when calling forecastUsageByDepartment");
      }
      // verify the required parameter 'departmentId' is set
      if (departmentId === undefined || departmentId === null) {
        throw new Error("Missing the required parameter 'departmentId' when calling forecastUsageByDepartment");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling forecastUsageByDepartment");
      }

      let pathParams = {
        'billingAccountId': billingAccountId,
        'departmentId': departmentId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = QueryResult;
      return this.apiClient.callApi(
        '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}/providers/Microsoft.CostManagement/Forecast', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the forecastUsageByEnrollmentAccount operation.
     * @callback module:api/ForecastApi~forecastUsageByEnrollmentAccountCallback
     * @param {String} error Error message, if any.
     * @param {module:model/QueryResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Forecast the usage data for an enrollment account.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2019-03-01-preview
     * @param {String} billingAccountId BillingAccount ID
     * @param {String} enrollmentAccountId Enrollment Account ID
     * @param {module:model/ReportConfigDefinition} parameters Parameters supplied to the CreateOrUpdate Report Config operation.
     * @param {module:api/ForecastApi~forecastUsageByEnrollmentAccountCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/QueryResult}
     */
    forecastUsageByEnrollmentAccount(apiVersion, billingAccountId, enrollmentAccountId, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling forecastUsageByEnrollmentAccount");
      }
      // verify the required parameter 'billingAccountId' is set
      if (billingAccountId === undefined || billingAccountId === null) {
        throw new Error("Missing the required parameter 'billingAccountId' when calling forecastUsageByEnrollmentAccount");
      }
      // verify the required parameter 'enrollmentAccountId' is set
      if (enrollmentAccountId === undefined || enrollmentAccountId === null) {
        throw new Error("Missing the required parameter 'enrollmentAccountId' when calling forecastUsageByEnrollmentAccount");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling forecastUsageByEnrollmentAccount");
      }

      let pathParams = {
        'billingAccountId': billingAccountId,
        'enrollmentAccountId': enrollmentAccountId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = QueryResult;
      return this.apiClient.callApi(
        '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}/providers/Microsoft.CostManagement/Forecast', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the forecastUsageByExternalBillingAccount operation.
     * @callback module:api/ForecastApi~forecastUsageByExternalBillingAccountCallback
     * @param {String} error Error message, if any.
     * @param {module:model/QueryResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Forecast the usage data for external billing account.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2019-03-01-preview
     * @param {String} externalBillingAccountName External Billing Account Name. (eg 'aws-{PayerAccountId}')
     * @param {module:model/ReportConfigDefinition} parameters Parameters supplied to the CreateOrUpdate Report Config operation.
     * @param {module:api/ForecastApi~forecastUsageByExternalBillingAccountCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/QueryResult}
     */
    forecastUsageByExternalBillingAccount(apiVersion, externalBillingAccountName, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling forecastUsageByExternalBillingAccount");
      }
      // verify the required parameter 'externalBillingAccountName' is set
      if (externalBillingAccountName === undefined || externalBillingAccountName === null) {
        throw new Error("Missing the required parameter 'externalBillingAccountName' when calling forecastUsageByExternalBillingAccount");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling forecastUsageByExternalBillingAccount");
      }

      let pathParams = {
        'externalBillingAccountName': externalBillingAccountName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = QueryResult;
      return this.apiClient.callApi(
        '/providers/Microsoft.CostManagement/externalBillingAccounts/{externalBillingAccountName}/Forecast', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the forecastUsageByManagementGroup operation.
     * @callback module:api/ForecastApi~forecastUsageByManagementGroupCallback
     * @param {String} error Error message, if any.
     * @param {module:model/QueryResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists the usage data for management group.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2019-03-01-preview
     * @param {String} managementGroupId ManagementGroup ID
     * @param {module:model/ReportConfigDefinition} parameters Parameters supplied to the CreateOrUpdate Report Config operation.
     * @param {module:api/ForecastApi~forecastUsageByManagementGroupCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/QueryResult}
     */
    forecastUsageByManagementGroup(apiVersion, managementGroupId, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling forecastUsageByManagementGroup");
      }
      // verify the required parameter 'managementGroupId' is set
      if (managementGroupId === undefined || managementGroupId === null) {
        throw new Error("Missing the required parameter 'managementGroupId' when calling forecastUsageByManagementGroup");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling forecastUsageByManagementGroup");
      }

      let pathParams = {
        'managementGroupId': managementGroupId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = QueryResult;
      return this.apiClient.callApi(
        '/providers/Microsoft.Management/managementGroups/{managementGroupId}/providers/Microsoft.CostManagement/Forecast', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the forecastUsageByResourceGroup operation.
     * @callback module:api/ForecastApi~forecastUsageByResourceGroupCallback
     * @param {String} error Error message, if any.
     * @param {module:model/QueryResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Forecast the usage data for subscriptionId and resource group.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2019-03-01-preview
     * @param {String} subscriptionId Azure Subscription ID.
     * @param {String} resourceGroupName Azure Resource Group Name.
     * @param {module:model/ReportConfigDefinition} parameters Parameters supplied to the CreateOrUpdate Report Config operation.
     * @param {module:api/ForecastApi~forecastUsageByResourceGroupCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/QueryResult}
     */
    forecastUsageByResourceGroup(apiVersion, subscriptionId, resourceGroupName, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling forecastUsageByResourceGroup");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling forecastUsageByResourceGroup");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling forecastUsageByResourceGroup");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling forecastUsageByResourceGroup");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = QueryResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.CostManagement/Forecast', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the forecastUsageBySubscription operation.
     * @callback module:api/ForecastApi~forecastUsageBySubscriptionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/QueryResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Forecast the usage data for subscriptionId.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2019-03-01-preview
     * @param {String} subscriptionId Azure Subscription ID.
     * @param {module:model/ReportConfigDefinition} parameters Parameters supplied to the CreateOrUpdate Report Config operation.
     * @param {module:api/ForecastApi~forecastUsageBySubscriptionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/QueryResult}
     */
    forecastUsageBySubscription(apiVersion, subscriptionId, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling forecastUsageBySubscription");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling forecastUsageBySubscription");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling forecastUsageBySubscription");
      }

      let pathParams = {
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = QueryResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.CostManagement/Forecast', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
