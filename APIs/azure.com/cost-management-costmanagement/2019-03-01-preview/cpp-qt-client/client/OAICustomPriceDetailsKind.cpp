/**
 * CostManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-03-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICustomPriceDetailsKind.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICustomPriceDetailsKind::OAICustomPriceDetailsKind(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICustomPriceDetailsKind::OAICustomPriceDetailsKind() {
    this->initializeModel();
}

OAICustomPriceDetailsKind::~OAICustomPriceDetailsKind() {}

void OAICustomPriceDetailsKind::initializeModel() {

    m_details_isSet = false;
    m_details_isValid = false;

    m_creation_time_isSet = false;
    m_creation_time_isValid = false;

    m_deprecation_time_isSet = false;
    m_deprecation_time_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_modification_time_isSet = false;
    m_modification_time_isValid = false;

    m_rule_type_isSet = false;
    m_rule_type_isValid = false;

    m_scopes_isSet = false;
    m_scopes_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_version_isSet = false;
    m_version_isValid = false;
}

void OAICustomPriceDetailsKind::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICustomPriceDetailsKind::fromJsonObject(QJsonObject json) {

    m_details_isValid = ::OpenAPI::fromJsonValue(m_details, json[QString("details")]);
    m_details_isSet = !json[QString("details")].isNull() && m_details_isValid;

    m_creation_time_isValid = ::OpenAPI::fromJsonValue(m_creation_time, json[QString("creationTime")]);
    m_creation_time_isSet = !json[QString("creationTime")].isNull() && m_creation_time_isValid;

    m_deprecation_time_isValid = ::OpenAPI::fromJsonValue(m_deprecation_time, json[QString("deprecationTime")]);
    m_deprecation_time_isSet = !json[QString("deprecationTime")].isNull() && m_deprecation_time_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_modification_time_isValid = ::OpenAPI::fromJsonValue(m_modification_time, json[QString("modificationTime")]);
    m_modification_time_isSet = !json[QString("modificationTime")].isNull() && m_modification_time_isValid;

    m_rule_type_isValid = ::OpenAPI::fromJsonValue(m_rule_type, json[QString("ruleType")]);
    m_rule_type_isSet = !json[QString("ruleType")].isNull() && m_rule_type_isValid;

    m_scopes_isValid = ::OpenAPI::fromJsonValue(m_scopes, json[QString("scopes")]);
    m_scopes_isSet = !json[QString("scopes")].isNull() && m_scopes_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_version_isValid = ::OpenAPI::fromJsonValue(m_version, json[QString("version")]);
    m_version_isSet = !json[QString("version")].isNull() && m_version_isValid;
}

QString OAICustomPriceDetailsKind::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICustomPriceDetailsKind::asJsonObject() const {
    QJsonObject obj;
    if (m_details.isSet()) {
        obj.insert(QString("details"), ::OpenAPI::toJsonValue(m_details));
    }
    if (m_creation_time_isSet) {
        obj.insert(QString("creationTime"), ::OpenAPI::toJsonValue(m_creation_time));
    }
    if (m_deprecation_time_isSet) {
        obj.insert(QString("deprecationTime"), ::OpenAPI::toJsonValue(m_deprecation_time));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_modification_time_isSet) {
        obj.insert(QString("modificationTime"), ::OpenAPI::toJsonValue(m_modification_time));
    }
    if (m_rule_type_isSet) {
        obj.insert(QString("ruleType"), ::OpenAPI::toJsonValue(m_rule_type));
    }
    if (m_scopes.size() > 0) {
        obj.insert(QString("scopes"), ::OpenAPI::toJsonValue(m_scopes));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_version_isSet) {
        obj.insert(QString("version"), ::OpenAPI::toJsonValue(m_version));
    }
    return obj;
}

OAICustomPriceDetails OAICustomPriceDetailsKind::getDetails() const {
    return m_details;
}
void OAICustomPriceDetailsKind::setDetails(const OAICustomPriceDetails &details) {
    m_details = details;
    m_details_isSet = true;
}

bool OAICustomPriceDetailsKind::is_details_Set() const{
    return m_details_isSet;
}

bool OAICustomPriceDetailsKind::is_details_Valid() const{
    return m_details_isValid;
}

QDateTime OAICustomPriceDetailsKind::getCreationTime() const {
    return m_creation_time;
}
void OAICustomPriceDetailsKind::setCreationTime(const QDateTime &creation_time) {
    m_creation_time = creation_time;
    m_creation_time_isSet = true;
}

bool OAICustomPriceDetailsKind::is_creation_time_Set() const{
    return m_creation_time_isSet;
}

bool OAICustomPriceDetailsKind::is_creation_time_Valid() const{
    return m_creation_time_isValid;
}

QDateTime OAICustomPriceDetailsKind::getDeprecationTime() const {
    return m_deprecation_time;
}
void OAICustomPriceDetailsKind::setDeprecationTime(const QDateTime &deprecation_time) {
    m_deprecation_time = deprecation_time;
    m_deprecation_time_isSet = true;
}

bool OAICustomPriceDetailsKind::is_deprecation_time_Set() const{
    return m_deprecation_time_isSet;
}

bool OAICustomPriceDetailsKind::is_deprecation_time_Valid() const{
    return m_deprecation_time_isValid;
}

QString OAICustomPriceDetailsKind::getDescription() const {
    return m_description;
}
void OAICustomPriceDetailsKind::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAICustomPriceDetailsKind::is_description_Set() const{
    return m_description_isSet;
}

bool OAICustomPriceDetailsKind::is_description_Valid() const{
    return m_description_isValid;
}

QDateTime OAICustomPriceDetailsKind::getModificationTime() const {
    return m_modification_time;
}
void OAICustomPriceDetailsKind::setModificationTime(const QDateTime &modification_time) {
    m_modification_time = modification_time;
    m_modification_time_isSet = true;
}

bool OAICustomPriceDetailsKind::is_modification_time_Set() const{
    return m_modification_time_isSet;
}

bool OAICustomPriceDetailsKind::is_modification_time_Valid() const{
    return m_modification_time_isValid;
}

QString OAICustomPriceDetailsKind::getRuleType() const {
    return m_rule_type;
}
void OAICustomPriceDetailsKind::setRuleType(const QString &rule_type) {
    m_rule_type = rule_type;
    m_rule_type_isSet = true;
}

bool OAICustomPriceDetailsKind::is_rule_type_Set() const{
    return m_rule_type_isSet;
}

bool OAICustomPriceDetailsKind::is_rule_type_Valid() const{
    return m_rule_type_isValid;
}

QList<OAIScope> OAICustomPriceDetailsKind::getScopes() const {
    return m_scopes;
}
void OAICustomPriceDetailsKind::setScopes(const QList<OAIScope> &scopes) {
    m_scopes = scopes;
    m_scopes_isSet = true;
}

bool OAICustomPriceDetailsKind::is_scopes_Set() const{
    return m_scopes_isSet;
}

bool OAICustomPriceDetailsKind::is_scopes_Valid() const{
    return m_scopes_isValid;
}

QString OAICustomPriceDetailsKind::getStatus() const {
    return m_status;
}
void OAICustomPriceDetailsKind::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAICustomPriceDetailsKind::is_status_Set() const{
    return m_status_isSet;
}

bool OAICustomPriceDetailsKind::is_status_Valid() const{
    return m_status_isValid;
}

qint32 OAICustomPriceDetailsKind::getVersion() const {
    return m_version;
}
void OAICustomPriceDetailsKind::setVersion(const qint32 &version) {
    m_version = version;
    m_version_isSet = true;
}

bool OAICustomPriceDetailsKind::is_version_Set() const{
    return m_version_isSet;
}

bool OAICustomPriceDetailsKind::is_version_Valid() const{
    return m_version_isValid;
}

bool OAICustomPriceDetailsKind::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_creation_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_deprecation_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_modification_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rule_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_scopes.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_version_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICustomPriceDetailsKind::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_rule_type_isValid && true;
}

} // namespace OpenAPI
