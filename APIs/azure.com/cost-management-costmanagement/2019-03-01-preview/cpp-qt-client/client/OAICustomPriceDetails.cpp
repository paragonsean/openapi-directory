/**
 * CostManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-03-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICustomPriceDetails.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICustomPriceDetails::OAICustomPriceDetails(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICustomPriceDetails::OAICustomPriceDetails() {
    this->initializeModel();
}

OAICustomPriceDetails::~OAICustomPriceDetails() {}

void OAICustomPriceDetails::initializeModel() {

    m_benefits_isSet = false;
    m_benefits_isValid = false;

    m_markups_isSet = false;
    m_markups_isValid = false;

    m_pricesheet_isSet = false;
    m_pricesheet_isValid = false;
}

void OAICustomPriceDetails::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICustomPriceDetails::fromJsonObject(QJsonObject json) {

    m_benefits_isValid = ::OpenAPI::fromJsonValue(m_benefits, json[QString("benefits")]);
    m_benefits_isSet = !json[QString("benefits")].isNull() && m_benefits_isValid;

    m_markups_isValid = ::OpenAPI::fromJsonValue(m_markups, json[QString("markups")]);
    m_markups_isSet = !json[QString("markups")].isNull() && m_markups_isValid;

    m_pricesheet_isValid = ::OpenAPI::fromJsonValue(m_pricesheet, json[QString("pricesheet")]);
    m_pricesheet_isSet = !json[QString("pricesheet")].isNull() && m_pricesheet_isValid;
}

QString OAICustomPriceDetails::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICustomPriceDetails::asJsonObject() const {
    QJsonObject obj;
    if (m_benefits.size() > 0) {
        obj.insert(QString("benefits"), ::OpenAPI::toJsonValue(m_benefits));
    }
    if (m_markups.size() > 0) {
        obj.insert(QString("markups"), ::OpenAPI::toJsonValue(m_markups));
    }
    if (m_pricesheet_isSet) {
        obj.insert(QString("pricesheet"), ::OpenAPI::toJsonValue(m_pricesheet));
    }
    return obj;
}

QList<QString> OAICustomPriceDetails::getBenefits() const {
    return m_benefits;
}
void OAICustomPriceDetails::setBenefits(const QList<QString> &benefits) {
    m_benefits = benefits;
    m_benefits_isSet = true;
}

bool OAICustomPriceDetails::is_benefits_Set() const{
    return m_benefits_isSet;
}

bool OAICustomPriceDetails::is_benefits_Valid() const{
    return m_benefits_isValid;
}

QList<OAIMarkup> OAICustomPriceDetails::getMarkups() const {
    return m_markups;
}
void OAICustomPriceDetails::setMarkups(const QList<OAIMarkup> &markups) {
    m_markups = markups;
    m_markups_isSet = true;
}

bool OAICustomPriceDetails::is_markups_Set() const{
    return m_markups_isSet;
}

bool OAICustomPriceDetails::is_markups_Valid() const{
    return m_markups_isValid;
}

QString OAICustomPriceDetails::getPricesheet() const {
    return m_pricesheet;
}
void OAICustomPriceDetails::setPricesheet(const QString &pricesheet) {
    m_pricesheet = pricesheet;
    m_pricesheet_isSet = true;
}

bool OAICustomPriceDetails::is_pricesheet_Set() const{
    return m_pricesheet_isSet;
}

bool OAICustomPriceDetails::is_pricesheet_Valid() const{
    return m_pricesheet_isValid;
}

bool OAICustomPriceDetails::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_benefits.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_markups.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_pricesheet_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICustomPriceDetails::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
