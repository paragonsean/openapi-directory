/*
 * CostManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-05-31
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.ErrorResponse;
import org.openapitools.client.model.ReportConfig;
import org.openapitools.client.model.ReportConfigListResult;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ReportsApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public ReportsApi() {
        this(Configuration.getDefaultApiClient());
    }

    public ReportsApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for reportConfigCreateOrUpdate
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-05-31. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param reportConfigName Report Config Name. (required)
     * @param parameters Parameters supplied to the CreateOrUpdate Report Config operation. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Created. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public okhttp3.Call reportConfigCreateOrUpdateCall(String apiVersion, String subscriptionId, String reportConfigName, ReportConfig parameters, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = parameters;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/providers/Microsoft.CostManagement/reportconfigs/{reportConfigName}"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "reportConfigName" + "}", localVarApiClient.escapeString(reportConfigName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call reportConfigCreateOrUpdateValidateBeforeCall(String apiVersion, String subscriptionId, String reportConfigName, ReportConfig parameters, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling reportConfigCreateOrUpdate(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling reportConfigCreateOrUpdate(Async)");
        }

        // verify the required parameter 'reportConfigName' is set
        if (reportConfigName == null) {
            throw new ApiException("Missing the required parameter 'reportConfigName' when calling reportConfigCreateOrUpdate(Async)");
        }

        // verify the required parameter 'parameters' is set
        if (parameters == null) {
            throw new ApiException("Missing the required parameter 'parameters' when calling reportConfigCreateOrUpdate(Async)");
        }

        return reportConfigCreateOrUpdateCall(apiVersion, subscriptionId, reportConfigName, parameters, _callback);

    }

    /**
     * 
     * The operation to create or update a report config. Update operation requires latest eTag to be set in the request mandatorily. You may obtain the latest eTag by performing a get operation. Create operation does not require eTag.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-05-31. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param reportConfigName Report Config Name. (required)
     * @param parameters Parameters supplied to the CreateOrUpdate Report Config operation. (required)
     * @return ReportConfig
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Created. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public ReportConfig reportConfigCreateOrUpdate(String apiVersion, String subscriptionId, String reportConfigName, ReportConfig parameters) throws ApiException {
        ApiResponse<ReportConfig> localVarResp = reportConfigCreateOrUpdateWithHttpInfo(apiVersion, subscriptionId, reportConfigName, parameters);
        return localVarResp.getData();
    }

    /**
     * 
     * The operation to create or update a report config. Update operation requires latest eTag to be set in the request mandatorily. You may obtain the latest eTag by performing a get operation. Create operation does not require eTag.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-05-31. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param reportConfigName Report Config Name. (required)
     * @param parameters Parameters supplied to the CreateOrUpdate Report Config operation. (required)
     * @return ApiResponse&lt;ReportConfig&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Created. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public ApiResponse<ReportConfig> reportConfigCreateOrUpdateWithHttpInfo(String apiVersion, String subscriptionId, String reportConfigName, ReportConfig parameters) throws ApiException {
        okhttp3.Call localVarCall = reportConfigCreateOrUpdateValidateBeforeCall(apiVersion, subscriptionId, reportConfigName, parameters, null);
        Type localVarReturnType = new TypeToken<ReportConfig>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * The operation to create or update a report config. Update operation requires latest eTag to be set in the request mandatorily. You may obtain the latest eTag by performing a get operation. Create operation does not require eTag.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-05-31. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param reportConfigName Report Config Name. (required)
     * @param parameters Parameters supplied to the CreateOrUpdate Report Config operation. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Created. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public okhttp3.Call reportConfigCreateOrUpdateAsync(String apiVersion, String subscriptionId, String reportConfigName, ReportConfig parameters, final ApiCallback<ReportConfig> _callback) throws ApiException {

        okhttp3.Call localVarCall = reportConfigCreateOrUpdateValidateBeforeCall(apiVersion, subscriptionId, reportConfigName, parameters, _callback);
        Type localVarReturnType = new TypeToken<ReportConfig>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for reportConfigCreateOrUpdateByResourceGroupName
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-05-31. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param resourceGroupName Azure Resource Group Name. (required)
     * @param reportConfigName Report Config Name. (required)
     * @param parameters Parameters supplied to the CreateOrUpdate Report Config operation. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Created. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public okhttp3.Call reportConfigCreateOrUpdateByResourceGroupNameCall(String apiVersion, String subscriptionId, String resourceGroupName, String reportConfigName, ReportConfig parameters, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = parameters;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CostManagement/reportconfigs/{reportConfigName}"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "reportConfigName" + "}", localVarApiClient.escapeString(reportConfigName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call reportConfigCreateOrUpdateByResourceGroupNameValidateBeforeCall(String apiVersion, String subscriptionId, String resourceGroupName, String reportConfigName, ReportConfig parameters, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling reportConfigCreateOrUpdateByResourceGroupName(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling reportConfigCreateOrUpdateByResourceGroupName(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling reportConfigCreateOrUpdateByResourceGroupName(Async)");
        }

        // verify the required parameter 'reportConfigName' is set
        if (reportConfigName == null) {
            throw new ApiException("Missing the required parameter 'reportConfigName' when calling reportConfigCreateOrUpdateByResourceGroupName(Async)");
        }

        // verify the required parameter 'parameters' is set
        if (parameters == null) {
            throw new ApiException("Missing the required parameter 'parameters' when calling reportConfigCreateOrUpdateByResourceGroupName(Async)");
        }

        return reportConfigCreateOrUpdateByResourceGroupNameCall(apiVersion, subscriptionId, resourceGroupName, reportConfigName, parameters, _callback);

    }

    /**
     * 
     * The operation to create or update a report config. Update operation requires latest eTag to be set in the request mandatorily. You may obtain the latest eTag by performing a get operation. Create operation does not require eTag.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-05-31. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param resourceGroupName Azure Resource Group Name. (required)
     * @param reportConfigName Report Config Name. (required)
     * @param parameters Parameters supplied to the CreateOrUpdate Report Config operation. (required)
     * @return ReportConfig
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Created. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public ReportConfig reportConfigCreateOrUpdateByResourceGroupName(String apiVersion, String subscriptionId, String resourceGroupName, String reportConfigName, ReportConfig parameters) throws ApiException {
        ApiResponse<ReportConfig> localVarResp = reportConfigCreateOrUpdateByResourceGroupNameWithHttpInfo(apiVersion, subscriptionId, resourceGroupName, reportConfigName, parameters);
        return localVarResp.getData();
    }

    /**
     * 
     * The operation to create or update a report config. Update operation requires latest eTag to be set in the request mandatorily. You may obtain the latest eTag by performing a get operation. Create operation does not require eTag.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-05-31. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param resourceGroupName Azure Resource Group Name. (required)
     * @param reportConfigName Report Config Name. (required)
     * @param parameters Parameters supplied to the CreateOrUpdate Report Config operation. (required)
     * @return ApiResponse&lt;ReportConfig&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Created. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public ApiResponse<ReportConfig> reportConfigCreateOrUpdateByResourceGroupNameWithHttpInfo(String apiVersion, String subscriptionId, String resourceGroupName, String reportConfigName, ReportConfig parameters) throws ApiException {
        okhttp3.Call localVarCall = reportConfigCreateOrUpdateByResourceGroupNameValidateBeforeCall(apiVersion, subscriptionId, resourceGroupName, reportConfigName, parameters, null);
        Type localVarReturnType = new TypeToken<ReportConfig>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * The operation to create or update a report config. Update operation requires latest eTag to be set in the request mandatorily. You may obtain the latest eTag by performing a get operation. Create operation does not require eTag.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-05-31. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param resourceGroupName Azure Resource Group Name. (required)
     * @param reportConfigName Report Config Name. (required)
     * @param parameters Parameters supplied to the CreateOrUpdate Report Config operation. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Created. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public okhttp3.Call reportConfigCreateOrUpdateByResourceGroupNameAsync(String apiVersion, String subscriptionId, String resourceGroupName, String reportConfigName, ReportConfig parameters, final ApiCallback<ReportConfig> _callback) throws ApiException {

        okhttp3.Call localVarCall = reportConfigCreateOrUpdateByResourceGroupNameValidateBeforeCall(apiVersion, subscriptionId, resourceGroupName, reportConfigName, parameters, _callback);
        Type localVarReturnType = new TypeToken<ReportConfig>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for reportConfigDelete
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-05-31. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param reportConfigName Report Config Name. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public okhttp3.Call reportConfigDeleteCall(String apiVersion, String subscriptionId, String reportConfigName, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/providers/Microsoft.CostManagement/reportconfigs/{reportConfigName}"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "reportConfigName" + "}", localVarApiClient.escapeString(reportConfigName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call reportConfigDeleteValidateBeforeCall(String apiVersion, String subscriptionId, String reportConfigName, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling reportConfigDelete(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling reportConfigDelete(Async)");
        }

        // verify the required parameter 'reportConfigName' is set
        if (reportConfigName == null) {
            throw new ApiException("Missing the required parameter 'reportConfigName' when calling reportConfigDelete(Async)");
        }

        return reportConfigDeleteCall(apiVersion, subscriptionId, reportConfigName, _callback);

    }

    /**
     * 
     * The operation to delete a report.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-05-31. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param reportConfigName Report Config Name. (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public void reportConfigDelete(String apiVersion, String subscriptionId, String reportConfigName) throws ApiException {
        reportConfigDeleteWithHttpInfo(apiVersion, subscriptionId, reportConfigName);
    }

    /**
     * 
     * The operation to delete a report.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-05-31. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param reportConfigName Report Config Name. (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public ApiResponse<Void> reportConfigDeleteWithHttpInfo(String apiVersion, String subscriptionId, String reportConfigName) throws ApiException {
        okhttp3.Call localVarCall = reportConfigDeleteValidateBeforeCall(apiVersion, subscriptionId, reportConfigName, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     *  (asynchronously)
     * The operation to delete a report.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-05-31. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param reportConfigName Report Config Name. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public okhttp3.Call reportConfigDeleteAsync(String apiVersion, String subscriptionId, String reportConfigName, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = reportConfigDeleteValidateBeforeCall(apiVersion, subscriptionId, reportConfigName, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for reportConfigDeleteByResourceGroupName
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-05-31. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param resourceGroupName Azure Resource Group Name. (required)
     * @param reportConfigName Report Config Name. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public okhttp3.Call reportConfigDeleteByResourceGroupNameCall(String apiVersion, String subscriptionId, String resourceGroupName, String reportConfigName, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CostManagement/reportconfigs/{reportConfigName}"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "reportConfigName" + "}", localVarApiClient.escapeString(reportConfigName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call reportConfigDeleteByResourceGroupNameValidateBeforeCall(String apiVersion, String subscriptionId, String resourceGroupName, String reportConfigName, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling reportConfigDeleteByResourceGroupName(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling reportConfigDeleteByResourceGroupName(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling reportConfigDeleteByResourceGroupName(Async)");
        }

        // verify the required parameter 'reportConfigName' is set
        if (reportConfigName == null) {
            throw new ApiException("Missing the required parameter 'reportConfigName' when calling reportConfigDeleteByResourceGroupName(Async)");
        }

        return reportConfigDeleteByResourceGroupNameCall(apiVersion, subscriptionId, resourceGroupName, reportConfigName, _callback);

    }

    /**
     * 
     * The operation to delete a report config.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-05-31. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param resourceGroupName Azure Resource Group Name. (required)
     * @param reportConfigName Report Config Name. (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public void reportConfigDeleteByResourceGroupName(String apiVersion, String subscriptionId, String resourceGroupName, String reportConfigName) throws ApiException {
        reportConfigDeleteByResourceGroupNameWithHttpInfo(apiVersion, subscriptionId, resourceGroupName, reportConfigName);
    }

    /**
     * 
     * The operation to delete a report config.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-05-31. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param resourceGroupName Azure Resource Group Name. (required)
     * @param reportConfigName Report Config Name. (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public ApiResponse<Void> reportConfigDeleteByResourceGroupNameWithHttpInfo(String apiVersion, String subscriptionId, String resourceGroupName, String reportConfigName) throws ApiException {
        okhttp3.Call localVarCall = reportConfigDeleteByResourceGroupNameValidateBeforeCall(apiVersion, subscriptionId, resourceGroupName, reportConfigName, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     *  (asynchronously)
     * The operation to delete a report config.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-05-31. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param resourceGroupName Azure Resource Group Name. (required)
     * @param reportConfigName Report Config Name. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public okhttp3.Call reportConfigDeleteByResourceGroupNameAsync(String apiVersion, String subscriptionId, String resourceGroupName, String reportConfigName, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = reportConfigDeleteByResourceGroupNameValidateBeforeCall(apiVersion, subscriptionId, resourceGroupName, reportConfigName, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for reportConfigGet
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-05-31. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param reportConfigName Report Config Name. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public okhttp3.Call reportConfigGetCall(String apiVersion, String subscriptionId, String reportConfigName, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/providers/Microsoft.CostManagement/reportconfigs/{reportConfigName}"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "reportConfigName" + "}", localVarApiClient.escapeString(reportConfigName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call reportConfigGetValidateBeforeCall(String apiVersion, String subscriptionId, String reportConfigName, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling reportConfigGet(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling reportConfigGet(Async)");
        }

        // verify the required parameter 'reportConfigName' is set
        if (reportConfigName == null) {
            throw new ApiException("Missing the required parameter 'reportConfigName' when calling reportConfigGet(Async)");
        }

        return reportConfigGetCall(apiVersion, subscriptionId, reportConfigName, _callback);

    }

    /**
     * 
     * Gets the report config for a subscription by report config name.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-05-31. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param reportConfigName Report Config Name. (required)
     * @return ReportConfig
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public ReportConfig reportConfigGet(String apiVersion, String subscriptionId, String reportConfigName) throws ApiException {
        ApiResponse<ReportConfig> localVarResp = reportConfigGetWithHttpInfo(apiVersion, subscriptionId, reportConfigName);
        return localVarResp.getData();
    }

    /**
     * 
     * Gets the report config for a subscription by report config name.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-05-31. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param reportConfigName Report Config Name. (required)
     * @return ApiResponse&lt;ReportConfig&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public ApiResponse<ReportConfig> reportConfigGetWithHttpInfo(String apiVersion, String subscriptionId, String reportConfigName) throws ApiException {
        okhttp3.Call localVarCall = reportConfigGetValidateBeforeCall(apiVersion, subscriptionId, reportConfigName, null);
        Type localVarReturnType = new TypeToken<ReportConfig>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Gets the report config for a subscription by report config name.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-05-31. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param reportConfigName Report Config Name. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public okhttp3.Call reportConfigGetAsync(String apiVersion, String subscriptionId, String reportConfigName, final ApiCallback<ReportConfig> _callback) throws ApiException {

        okhttp3.Call localVarCall = reportConfigGetValidateBeforeCall(apiVersion, subscriptionId, reportConfigName, _callback);
        Type localVarReturnType = new TypeToken<ReportConfig>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for reportConfigGetByResourceGroupName
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-05-31. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param resourceGroupName Azure Resource Group Name. (required)
     * @param reportConfigName Report Config Name. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public okhttp3.Call reportConfigGetByResourceGroupNameCall(String apiVersion, String subscriptionId, String resourceGroupName, String reportConfigName, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CostManagement/reportconfigs/{reportConfigName}"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "reportConfigName" + "}", localVarApiClient.escapeString(reportConfigName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call reportConfigGetByResourceGroupNameValidateBeforeCall(String apiVersion, String subscriptionId, String resourceGroupName, String reportConfigName, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling reportConfigGetByResourceGroupName(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling reportConfigGetByResourceGroupName(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling reportConfigGetByResourceGroupName(Async)");
        }

        // verify the required parameter 'reportConfigName' is set
        if (reportConfigName == null) {
            throw new ApiException("Missing the required parameter 'reportConfigName' when calling reportConfigGetByResourceGroupName(Async)");
        }

        return reportConfigGetByResourceGroupNameCall(apiVersion, subscriptionId, resourceGroupName, reportConfigName, _callback);

    }

    /**
     * 
     * Gets the report config for a resource group under a subscription by report config name.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-05-31. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param resourceGroupName Azure Resource Group Name. (required)
     * @param reportConfigName Report Config Name. (required)
     * @return ReportConfig
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public ReportConfig reportConfigGetByResourceGroupName(String apiVersion, String subscriptionId, String resourceGroupName, String reportConfigName) throws ApiException {
        ApiResponse<ReportConfig> localVarResp = reportConfigGetByResourceGroupNameWithHttpInfo(apiVersion, subscriptionId, resourceGroupName, reportConfigName);
        return localVarResp.getData();
    }

    /**
     * 
     * Gets the report config for a resource group under a subscription by report config name.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-05-31. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param resourceGroupName Azure Resource Group Name. (required)
     * @param reportConfigName Report Config Name. (required)
     * @return ApiResponse&lt;ReportConfig&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public ApiResponse<ReportConfig> reportConfigGetByResourceGroupNameWithHttpInfo(String apiVersion, String subscriptionId, String resourceGroupName, String reportConfigName) throws ApiException {
        okhttp3.Call localVarCall = reportConfigGetByResourceGroupNameValidateBeforeCall(apiVersion, subscriptionId, resourceGroupName, reportConfigName, null);
        Type localVarReturnType = new TypeToken<ReportConfig>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Gets the report config for a resource group under a subscription by report config name.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-05-31. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param resourceGroupName Azure Resource Group Name. (required)
     * @param reportConfigName Report Config Name. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public okhttp3.Call reportConfigGetByResourceGroupNameAsync(String apiVersion, String subscriptionId, String resourceGroupName, String reportConfigName, final ApiCallback<ReportConfig> _callback) throws ApiException {

        okhttp3.Call localVarCall = reportConfigGetByResourceGroupNameValidateBeforeCall(apiVersion, subscriptionId, resourceGroupName, reportConfigName, _callback);
        Type localVarReturnType = new TypeToken<ReportConfig>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for reportConfigList
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-05-31. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public okhttp3.Call reportConfigListCall(String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/providers/Microsoft.CostManagement/reportconfigs"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call reportConfigListValidateBeforeCall(String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling reportConfigList(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling reportConfigList(Async)");
        }

        return reportConfigListCall(apiVersion, subscriptionId, _callback);

    }

    /**
     * 
     * Lists all report configs for a subscription.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-05-31. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @return ReportConfigListResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public ReportConfigListResult reportConfigList(String apiVersion, String subscriptionId) throws ApiException {
        ApiResponse<ReportConfigListResult> localVarResp = reportConfigListWithHttpInfo(apiVersion, subscriptionId);
        return localVarResp.getData();
    }

    /**
     * 
     * Lists all report configs for a subscription.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-05-31. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @return ApiResponse&lt;ReportConfigListResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public ApiResponse<ReportConfigListResult> reportConfigListWithHttpInfo(String apiVersion, String subscriptionId) throws ApiException {
        okhttp3.Call localVarCall = reportConfigListValidateBeforeCall(apiVersion, subscriptionId, null);
        Type localVarReturnType = new TypeToken<ReportConfigListResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Lists all report configs for a subscription.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-05-31. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public okhttp3.Call reportConfigListAsync(String apiVersion, String subscriptionId, final ApiCallback<ReportConfigListResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = reportConfigListValidateBeforeCall(apiVersion, subscriptionId, _callback);
        Type localVarReturnType = new TypeToken<ReportConfigListResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for reportConfigListByResourceGroupName
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-05-31. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param resourceGroupName Azure Resource Group Name. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public okhttp3.Call reportConfigListByResourceGroupNameCall(String apiVersion, String subscriptionId, String resourceGroupName, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CostManagement/reportconfigs"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call reportConfigListByResourceGroupNameValidateBeforeCall(String apiVersion, String subscriptionId, String resourceGroupName, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling reportConfigListByResourceGroupName(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling reportConfigListByResourceGroupName(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling reportConfigListByResourceGroupName(Async)");
        }

        return reportConfigListByResourceGroupNameCall(apiVersion, subscriptionId, resourceGroupName, _callback);

    }

    /**
     * 
     * Lists all report configs for a resource group under a subscription.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-05-31. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param resourceGroupName Azure Resource Group Name. (required)
     * @return ReportConfigListResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public ReportConfigListResult reportConfigListByResourceGroupName(String apiVersion, String subscriptionId, String resourceGroupName) throws ApiException {
        ApiResponse<ReportConfigListResult> localVarResp = reportConfigListByResourceGroupNameWithHttpInfo(apiVersion, subscriptionId, resourceGroupName);
        return localVarResp.getData();
    }

    /**
     * 
     * Lists all report configs for a resource group under a subscription.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-05-31. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param resourceGroupName Azure Resource Group Name. (required)
     * @return ApiResponse&lt;ReportConfigListResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public ApiResponse<ReportConfigListResult> reportConfigListByResourceGroupNameWithHttpInfo(String apiVersion, String subscriptionId, String resourceGroupName) throws ApiException {
        okhttp3.Call localVarCall = reportConfigListByResourceGroupNameValidateBeforeCall(apiVersion, subscriptionId, resourceGroupName, null);
        Type localVarReturnType = new TypeToken<ReportConfigListResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Lists all report configs for a resource group under a subscription.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-05-31. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param resourceGroupName Azure Resource Group Name. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public okhttp3.Call reportConfigListByResourceGroupNameAsync(String apiVersion, String subscriptionId, String resourceGroupName, final ApiCallback<ReportConfigListResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = reportConfigListByResourceGroupNameValidateBeforeCall(apiVersion, subscriptionId, resourceGroupName, _callback);
        Type localVarReturnType = new TypeToken<ReportConfigListResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
