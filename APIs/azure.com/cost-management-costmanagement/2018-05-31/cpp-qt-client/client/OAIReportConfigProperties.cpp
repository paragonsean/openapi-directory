/**
 * CostManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-05-31
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIReportConfigProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIReportConfigProperties::OAIReportConfigProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIReportConfigProperties::OAIReportConfigProperties() {
    this->initializeModel();
}

OAIReportConfigProperties::~OAIReportConfigProperties() {}

void OAIReportConfigProperties::initializeModel() {

    m_definition_isSet = false;
    m_definition_isValid = false;

    m_delivery_info_isSet = false;
    m_delivery_info_isValid = false;

    m_format_isSet = false;
    m_format_isValid = false;

    m_schedule_isSet = false;
    m_schedule_isValid = false;
}

void OAIReportConfigProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIReportConfigProperties::fromJsonObject(QJsonObject json) {

    m_definition_isValid = ::OpenAPI::fromJsonValue(m_definition, json[QString("definition")]);
    m_definition_isSet = !json[QString("definition")].isNull() && m_definition_isValid;

    m_delivery_info_isValid = ::OpenAPI::fromJsonValue(m_delivery_info, json[QString("deliveryInfo")]);
    m_delivery_info_isSet = !json[QString("deliveryInfo")].isNull() && m_delivery_info_isValid;

    m_format_isValid = ::OpenAPI::fromJsonValue(m_format, json[QString("format")]);
    m_format_isSet = !json[QString("format")].isNull() && m_format_isValid;

    m_schedule_isValid = ::OpenAPI::fromJsonValue(m_schedule, json[QString("schedule")]);
    m_schedule_isSet = !json[QString("schedule")].isNull() && m_schedule_isValid;
}

QString OAIReportConfigProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIReportConfigProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_definition.isSet()) {
        obj.insert(QString("definition"), ::OpenAPI::toJsonValue(m_definition));
    }
    if (m_delivery_info.isSet()) {
        obj.insert(QString("deliveryInfo"), ::OpenAPI::toJsonValue(m_delivery_info));
    }
    if (m_format_isSet) {
        obj.insert(QString("format"), ::OpenAPI::toJsonValue(m_format));
    }
    if (m_schedule.isSet()) {
        obj.insert(QString("schedule"), ::OpenAPI::toJsonValue(m_schedule));
    }
    return obj;
}

OAIReportConfigDefinition OAIReportConfigProperties::getDefinition() const {
    return m_definition;
}
void OAIReportConfigProperties::setDefinition(const OAIReportConfigDefinition &definition) {
    m_definition = definition;
    m_definition_isSet = true;
}

bool OAIReportConfigProperties::is_definition_Set() const{
    return m_definition_isSet;
}

bool OAIReportConfigProperties::is_definition_Valid() const{
    return m_definition_isValid;
}

OAIReportConfigDeliveryInfo OAIReportConfigProperties::getDeliveryInfo() const {
    return m_delivery_info;
}
void OAIReportConfigProperties::setDeliveryInfo(const OAIReportConfigDeliveryInfo &delivery_info) {
    m_delivery_info = delivery_info;
    m_delivery_info_isSet = true;
}

bool OAIReportConfigProperties::is_delivery_info_Set() const{
    return m_delivery_info_isSet;
}

bool OAIReportConfigProperties::is_delivery_info_Valid() const{
    return m_delivery_info_isValid;
}

QString OAIReportConfigProperties::getFormat() const {
    return m_format;
}
void OAIReportConfigProperties::setFormat(const QString &format) {
    m_format = format;
    m_format_isSet = true;
}

bool OAIReportConfigProperties::is_format_Set() const{
    return m_format_isSet;
}

bool OAIReportConfigProperties::is_format_Valid() const{
    return m_format_isValid;
}

OAIReportConfigSchedule OAIReportConfigProperties::getSchedule() const {
    return m_schedule;
}
void OAIReportConfigProperties::setSchedule(const OAIReportConfigSchedule &schedule) {
    m_schedule = schedule;
    m_schedule_isSet = true;
}

bool OAIReportConfigProperties::is_schedule_Set() const{
    return m_schedule_isSet;
}

bool OAIReportConfigProperties::is_schedule_Valid() const{
    return m_schedule_isValid;
}

bool OAIReportConfigProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_definition.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_delivery_info.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_format_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_schedule.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIReportConfigProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_definition_isValid && m_delivery_info_isValid && true;
}

} // namespace OpenAPI
