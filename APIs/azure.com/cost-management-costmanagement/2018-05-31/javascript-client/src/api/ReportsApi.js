/**
 * CostManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-05-31
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErrorResponse from '../model/ErrorResponse';
import ReportConfig from '../model/ReportConfig';
import ReportConfigListResult from '../model/ReportConfigListResult';

/**
* Reports service.
* @module api/ReportsApi
* @version 2018-05-31
*/
export default class ReportsApi {

    /**
    * Constructs a new ReportsApi. 
    * @alias module:api/ReportsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the reportConfigCreateOrUpdate operation.
     * @callback module:api/ReportsApi~reportConfigCreateOrUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ReportConfig} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * The operation to create or update a report config. Update operation requires latest eTag to be set in the request mandatorily. You may obtain the latest eTag by performing a get operation. Create operation does not require eTag.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-05-31.
     * @param {String} subscriptionId Azure Subscription ID.
     * @param {String} reportConfigName Report Config Name.
     * @param {module:model/ReportConfig} parameters Parameters supplied to the CreateOrUpdate Report Config operation.
     * @param {module:api/ReportsApi~reportConfigCreateOrUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ReportConfig}
     */
    reportConfigCreateOrUpdate(apiVersion, subscriptionId, reportConfigName, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling reportConfigCreateOrUpdate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling reportConfigCreateOrUpdate");
      }
      // verify the required parameter 'reportConfigName' is set
      if (reportConfigName === undefined || reportConfigName === null) {
        throw new Error("Missing the required parameter 'reportConfigName' when calling reportConfigCreateOrUpdate");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling reportConfigCreateOrUpdate");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'reportConfigName': reportConfigName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ReportConfig;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.CostManagement/reportconfigs/{reportConfigName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the reportConfigCreateOrUpdateByResourceGroupName operation.
     * @callback module:api/ReportsApi~reportConfigCreateOrUpdateByResourceGroupNameCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ReportConfig} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * The operation to create or update a report config. Update operation requires latest eTag to be set in the request mandatorily. You may obtain the latest eTag by performing a get operation. Create operation does not require eTag.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-05-31.
     * @param {String} subscriptionId Azure Subscription ID.
     * @param {String} resourceGroupName Azure Resource Group Name.
     * @param {String} reportConfigName Report Config Name.
     * @param {module:model/ReportConfig} parameters Parameters supplied to the CreateOrUpdate Report Config operation.
     * @param {module:api/ReportsApi~reportConfigCreateOrUpdateByResourceGroupNameCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ReportConfig}
     */
    reportConfigCreateOrUpdateByResourceGroupName(apiVersion, subscriptionId, resourceGroupName, reportConfigName, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling reportConfigCreateOrUpdateByResourceGroupName");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling reportConfigCreateOrUpdateByResourceGroupName");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling reportConfigCreateOrUpdateByResourceGroupName");
      }
      // verify the required parameter 'reportConfigName' is set
      if (reportConfigName === undefined || reportConfigName === null) {
        throw new Error("Missing the required parameter 'reportConfigName' when calling reportConfigCreateOrUpdateByResourceGroupName");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling reportConfigCreateOrUpdateByResourceGroupName");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'reportConfigName': reportConfigName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ReportConfig;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CostManagement/reportconfigs/{reportConfigName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the reportConfigDelete operation.
     * @callback module:api/ReportsApi~reportConfigDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * The operation to delete a report.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-05-31.
     * @param {String} subscriptionId Azure Subscription ID.
     * @param {String} reportConfigName Report Config Name.
     * @param {module:api/ReportsApi~reportConfigDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    reportConfigDelete(apiVersion, subscriptionId, reportConfigName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling reportConfigDelete");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling reportConfigDelete");
      }
      // verify the required parameter 'reportConfigName' is set
      if (reportConfigName === undefined || reportConfigName === null) {
        throw new Error("Missing the required parameter 'reportConfigName' when calling reportConfigDelete");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'reportConfigName': reportConfigName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.CostManagement/reportconfigs/{reportConfigName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the reportConfigDeleteByResourceGroupName operation.
     * @callback module:api/ReportsApi~reportConfigDeleteByResourceGroupNameCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * The operation to delete a report config.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-05-31.
     * @param {String} subscriptionId Azure Subscription ID.
     * @param {String} resourceGroupName Azure Resource Group Name.
     * @param {String} reportConfigName Report Config Name.
     * @param {module:api/ReportsApi~reportConfigDeleteByResourceGroupNameCallback} callback The callback function, accepting three arguments: error, data, response
     */
    reportConfigDeleteByResourceGroupName(apiVersion, subscriptionId, resourceGroupName, reportConfigName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling reportConfigDeleteByResourceGroupName");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling reportConfigDeleteByResourceGroupName");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling reportConfigDeleteByResourceGroupName");
      }
      // verify the required parameter 'reportConfigName' is set
      if (reportConfigName === undefined || reportConfigName === null) {
        throw new Error("Missing the required parameter 'reportConfigName' when calling reportConfigDeleteByResourceGroupName");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'reportConfigName': reportConfigName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CostManagement/reportconfigs/{reportConfigName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the reportConfigGet operation.
     * @callback module:api/ReportsApi~reportConfigGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ReportConfig} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the report config for a subscription by report config name.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-05-31.
     * @param {String} subscriptionId Azure Subscription ID.
     * @param {String} reportConfigName Report Config Name.
     * @param {module:api/ReportsApi~reportConfigGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ReportConfig}
     */
    reportConfigGet(apiVersion, subscriptionId, reportConfigName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling reportConfigGet");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling reportConfigGet");
      }
      // verify the required parameter 'reportConfigName' is set
      if (reportConfigName === undefined || reportConfigName === null) {
        throw new Error("Missing the required parameter 'reportConfigName' when calling reportConfigGet");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'reportConfigName': reportConfigName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ReportConfig;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.CostManagement/reportconfigs/{reportConfigName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the reportConfigGetByResourceGroupName operation.
     * @callback module:api/ReportsApi~reportConfigGetByResourceGroupNameCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ReportConfig} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the report config for a resource group under a subscription by report config name.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-05-31.
     * @param {String} subscriptionId Azure Subscription ID.
     * @param {String} resourceGroupName Azure Resource Group Name.
     * @param {String} reportConfigName Report Config Name.
     * @param {module:api/ReportsApi~reportConfigGetByResourceGroupNameCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ReportConfig}
     */
    reportConfigGetByResourceGroupName(apiVersion, subscriptionId, resourceGroupName, reportConfigName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling reportConfigGetByResourceGroupName");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling reportConfigGetByResourceGroupName");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling reportConfigGetByResourceGroupName");
      }
      // verify the required parameter 'reportConfigName' is set
      if (reportConfigName === undefined || reportConfigName === null) {
        throw new Error("Missing the required parameter 'reportConfigName' when calling reportConfigGetByResourceGroupName");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'reportConfigName': reportConfigName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ReportConfig;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CostManagement/reportconfigs/{reportConfigName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the reportConfigList operation.
     * @callback module:api/ReportsApi~reportConfigListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ReportConfigListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists all report configs for a subscription.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-05-31.
     * @param {String} subscriptionId Azure Subscription ID.
     * @param {module:api/ReportsApi~reportConfigListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ReportConfigListResult}
     */
    reportConfigList(apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling reportConfigList");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling reportConfigList");
      }

      let pathParams = {
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ReportConfigListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.CostManagement/reportconfigs', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the reportConfigListByResourceGroupName operation.
     * @callback module:api/ReportsApi~reportConfigListByResourceGroupNameCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ReportConfigListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists all report configs for a resource group under a subscription.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-05-31.
     * @param {String} subscriptionId Azure Subscription ID.
     * @param {String} resourceGroupName Azure Resource Group Name.
     * @param {module:api/ReportsApi~reportConfigListByResourceGroupNameCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ReportConfigListResult}
     */
    reportConfigListByResourceGroupName(apiVersion, subscriptionId, resourceGroupName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling reportConfigListByResourceGroupName");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling reportConfigListByResourceGroupName");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling reportConfigListByResourceGroupName");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ReportConfigListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CostManagement/reportconfigs', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
