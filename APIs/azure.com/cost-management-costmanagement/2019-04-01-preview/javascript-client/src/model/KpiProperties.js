/**
 * CostManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-04-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The KpiProperties model module.
 * @module model/KpiProperties
 * @version 2019-04-01-preview
 */
class KpiProperties {
    /**
     * Constructs a new <code>KpiProperties</code>.
     * Each KPI must contain a &#39;type&#39; and &#39;enabled&#39; key.
     * @alias module:model/KpiProperties
     */
    constructor() { 
        
        KpiProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>KpiProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/KpiProperties} obj Optional instance to populate.
     * @return {module:model/KpiProperties} The populated <code>KpiProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new KpiProperties();

            if (data.hasOwnProperty('enabled')) {
                obj['enabled'] = ApiClient.convertToType(data['enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>KpiProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>KpiProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}



/**
 * show the KPI in the UI?
 * @member {Boolean} enabled
 */
KpiProperties.prototype['enabled'] = undefined;

/**
 * ID of resource related to metric (budget).
 * @member {String} id
 */
KpiProperties.prototype['id'] = undefined;

/**
 * KPI type (Forecast, Budget).
 * @member {module:model/KpiProperties.TypeEnum} type
 */
KpiProperties.prototype['type'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
KpiProperties['TypeEnum'] = {

    /**
     * value: "Forecast"
     * @const
     */
    "Forecast": "Forecast",

    /**
     * value: "Budget"
     * @const
     */
    "Budget": "Budget"
};



export default KpiProperties;

