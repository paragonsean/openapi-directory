/**
 * CostManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-04-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import BudgetModel from '../model/BudgetModel';
import BudgetsListResult from '../model/BudgetsListResult';
import ErrorResponse from '../model/ErrorResponse';

/**
* Budgets service.
* @module api/BudgetsApi
* @version 2019-04-01-preview
*/
export default class BudgetsApi {

    /**
    * Constructs a new BudgetsApi. 
    * @alias module:api/BudgetsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the budgetCreateOrUpdate operation.
     * @callback module:api/BudgetsApi~budgetCreateOrUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BudgetModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * The operation to create or update a budget. Update operation requires latest eTag to be set in the request mandatorily. You may obtain the latest eTag by performing a get operation. Create operation does not require eTag.
     * @param {String} scope The scope associated with budget operations. This includes '/subscriptions/{subscriptionId}/' for subscription scope, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for Department scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}' for EnrollmentAccount scope, '/providers/Microsoft.Management/managementGroups/{managementGroupId}' for Management Group scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}' for billingProfile scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}' for invoiceSection scope.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2019-04-01-preview
     * @param {String} budgetName Budget Name.
     * @param {Object} opts Optional parameters
     * @param {module:model/BudgetModel} [parameters] Parameters supplied to the Create Budget operation.
     * @param {module:api/BudgetsApi~budgetCreateOrUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BudgetModel}
     */
    budgetCreateOrUpdate(scope, apiVersion, budgetName, opts, callback) {
      opts = opts || {};
      let postBody = opts['parameters'];
      // verify the required parameter 'scope' is set
      if (scope === undefined || scope === null) {
        throw new Error("Missing the required parameter 'scope' when calling budgetCreateOrUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling budgetCreateOrUpdate");
      }
      // verify the required parameter 'budgetName' is set
      if (budgetName === undefined || budgetName === null) {
        throw new Error("Missing the required parameter 'budgetName' when calling budgetCreateOrUpdate");
      }

      let pathParams = {
        'scope': scope,
        'budgetName': budgetName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = BudgetModel;
      return this.apiClient.callApi(
        '/{scope}/providers/Microsoft.CostManagement/budgets/{budgetName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the budgetDelete operation.
     * @callback module:api/BudgetsApi~budgetDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * The operation to delete a budget.
     * @param {String} scope The scope associated with budget operations. This includes '/subscriptions/{subscriptionId}/' for subscription scope, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for Department scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}' for EnrollmentAccount scope, '/providers/Microsoft.Management/managementGroups/{managementGroupId}' for Management Group scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}' for billingProfile scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}' for invoiceSection scope.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2019-04-01-preview
     * @param {String} budgetName Budget Name.
     * @param {module:api/BudgetsApi~budgetDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    budgetDelete(scope, apiVersion, budgetName, callback) {
      let postBody = null;
      // verify the required parameter 'scope' is set
      if (scope === undefined || scope === null) {
        throw new Error("Missing the required parameter 'scope' when calling budgetDelete");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling budgetDelete");
      }
      // verify the required parameter 'budgetName' is set
      if (budgetName === undefined || budgetName === null) {
        throw new Error("Missing the required parameter 'budgetName' when calling budgetDelete");
      }

      let pathParams = {
        'scope': scope,
        'budgetName': budgetName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/{scope}/providers/Microsoft.CostManagement/budgets/{budgetName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the budgetGet operation.
     * @callback module:api/BudgetsApi~budgetGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BudgetModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the budget for the scope by budget name.
     * @param {String} scope The scope associated with budget operations. This includes '/subscriptions/{subscriptionId}/' for subscription scope, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for Department scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}' for EnrollmentAccount scope, '/providers/Microsoft.Management/managementGroups/{managementGroupId}' for Management Group scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}' for billingProfile scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}' for invoiceSection scope.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2019-04-01-preview
     * @param {String} budgetName Budget Name.
     * @param {module:api/BudgetsApi~budgetGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BudgetModel}
     */
    budgetGet(scope, apiVersion, budgetName, callback) {
      let postBody = null;
      // verify the required parameter 'scope' is set
      if (scope === undefined || scope === null) {
        throw new Error("Missing the required parameter 'scope' when calling budgetGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling budgetGet");
      }
      // verify the required parameter 'budgetName' is set
      if (budgetName === undefined || budgetName === null) {
        throw new Error("Missing the required parameter 'budgetName' when calling budgetGet");
      }

      let pathParams = {
        'scope': scope,
        'budgetName': budgetName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = BudgetModel;
      return this.apiClient.callApi(
        '/{scope}/providers/Microsoft.CostManagement/budgets/{budgetName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the budgetsList operation.
     * @callback module:api/BudgetsApi~budgetsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BudgetsListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists all budgets for the defined scope.
     * @param {String} scope The scope associated with budget operations. This includes '/subscriptions/{subscriptionId}/' for subscription scope, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for Department scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}' for EnrollmentAccount scope, '/providers/Microsoft.Management/managementGroups/{managementGroupId}' for Management Group scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}' for billingProfile scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}' for invoiceSection scope.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2019-04-01-preview
     * @param {module:api/BudgetsApi~budgetsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BudgetsListResult}
     */
    budgetsList(scope, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'scope' is set
      if (scope === undefined || scope === null) {
        throw new Error("Missing the required parameter 'scope' when calling budgetsList");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling budgetsList");
      }

      let pathParams = {
        'scope': scope
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = BudgetsListResult;
      return this.apiClient.callApi(
        '/{scope}/providers/Microsoft.CostManagement/budgets', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
