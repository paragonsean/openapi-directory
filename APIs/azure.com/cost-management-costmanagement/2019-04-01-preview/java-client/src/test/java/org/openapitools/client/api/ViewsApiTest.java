/*
 * CostManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-04-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ErrorResponse;
import org.openapitools.client.model.View;
import org.openapitools.client.model.ViewListResult;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ViewsApi
 */
@Disabled
public class ViewsApiTest {

    private final ViewsApi api = new ViewsApi();

    /**
     * The operation to create or update a view. Update operation requires latest eTag to be set in the request. You may obtain the latest eTag by performing a get operation. Create operation does not require eTag.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void viewsCreateOrUpdateTest() throws ApiException {
        String apiVersion = null;
        String viewName = null;
        View parameters = null;
        View response = api.viewsCreateOrUpdate(apiVersion, viewName, parameters);
        // TODO: test validations
    }

    /**
     * The operation to create or update a view. Update operation requires latest eTag to be set in the request. You may obtain the latest eTag by performing a get operation. Create operation does not require eTag.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void viewsCreateOrUpdateByScopeTest() throws ApiException {
        String scope = null;
        String apiVersion = null;
        String viewName = null;
        View parameters = null;
        View response = api.viewsCreateOrUpdateByScope(scope, apiVersion, viewName, parameters);
        // TODO: test validations
    }

    /**
     * The operation to delete a view.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void viewsDeleteTest() throws ApiException {
        String apiVersion = null;
        String viewName = null;
        api.viewsDelete(apiVersion, viewName);
        // TODO: test validations
    }

    /**
     * The operation to delete a view.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void viewsDeleteByScopeTest() throws ApiException {
        String scope = null;
        String apiVersion = null;
        String viewName = null;
        api.viewsDeleteByScope(scope, apiVersion, viewName);
        // TODO: test validations
    }

    /**
     * Gets the view by view name.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void viewsGetTest() throws ApiException {
        String apiVersion = null;
        String viewName = null;
        View response = api.viewsGet(apiVersion, viewName);
        // TODO: test validations
    }

    /**
     * Gets the view for the defined scope by view name.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void viewsGetByScopeTest() throws ApiException {
        String scope = null;
        String apiVersion = null;
        String viewName = null;
        View response = api.viewsGetByScope(scope, apiVersion, viewName);
        // TODO: test validations
    }

    /**
     * Lists all views by tenant and object.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void viewsListTest() throws ApiException {
        String apiVersion = null;
        ViewListResult response = api.viewsList(apiVersion);
        // TODO: test validations
    }

    /**
     * Lists all views at the given scope.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void viewsListByScopeTest() throws ApiException {
        String scope = null;
        String apiVersion = null;
        ViewListResult response = api.viewsListByScope(scope, apiVersion);
        // TODO: test validations
    }

}
