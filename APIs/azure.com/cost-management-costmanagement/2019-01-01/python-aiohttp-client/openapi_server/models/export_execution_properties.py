# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.common_export_properties import CommonExportProperties
from openapi_server import util


class ExportExecutionProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, execution_type: str=None, file_name: str=None, processing_end_time: datetime=None, processing_start_time: datetime=None, run_settings: CommonExportProperties=None, status: str=None, submitted_by: str=None, submitted_time: datetime=None):
        """ExportExecutionProperties - a model defined in OpenAPI

        :param execution_type: The execution_type of this ExportExecutionProperties.
        :param file_name: The file_name of this ExportExecutionProperties.
        :param processing_end_time: The processing_end_time of this ExportExecutionProperties.
        :param processing_start_time: The processing_start_time of this ExportExecutionProperties.
        :param run_settings: The run_settings of this ExportExecutionProperties.
        :param status: The status of this ExportExecutionProperties.
        :param submitted_by: The submitted_by of this ExportExecutionProperties.
        :param submitted_time: The submitted_time of this ExportExecutionProperties.
        """
        self.openapi_types = {
            'execution_type': str,
            'file_name': str,
            'processing_end_time': datetime,
            'processing_start_time': datetime,
            'run_settings': CommonExportProperties,
            'status': str,
            'submitted_by': str,
            'submitted_time': datetime
        }

        self.attribute_map = {
            'execution_type': 'executionType',
            'file_name': 'fileName',
            'processing_end_time': 'processingEndTime',
            'processing_start_time': 'processingStartTime',
            'run_settings': 'runSettings',
            'status': 'status',
            'submitted_by': 'submittedBy',
            'submitted_time': 'submittedTime'
        }

        self._execution_type = execution_type
        self._file_name = file_name
        self._processing_end_time = processing_end_time
        self._processing_start_time = processing_start_time
        self._run_settings = run_settings
        self._status = status
        self._submitted_by = submitted_by
        self._submitted_time = submitted_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ExportExecutionProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ExportExecutionProperties of this ExportExecutionProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def execution_type(self):
        """Gets the execution_type of this ExportExecutionProperties.

        The type of the export execution.

        :return: The execution_type of this ExportExecutionProperties.
        :rtype: str
        """
        return self._execution_type

    @execution_type.setter
    def execution_type(self, execution_type):
        """Sets the execution_type of this ExportExecutionProperties.

        The type of the export execution.

        :param execution_type: The execution_type of this ExportExecutionProperties.
        :type execution_type: str
        """
        allowed_values = ["OnDemand", "Scheduled"]  # noqa: E501
        if execution_type not in allowed_values:
            raise ValueError(
                "Invalid value for `execution_type` ({0}), must be one of {1}"
                .format(execution_type, allowed_values)
            )

        self._execution_type = execution_type

    @property
    def file_name(self):
        """Gets the file_name of this ExportExecutionProperties.

        The name of the file export got written to.

        :return: The file_name of this ExportExecutionProperties.
        :rtype: str
        """
        return self._file_name

    @file_name.setter
    def file_name(self, file_name):
        """Sets the file_name of this ExportExecutionProperties.

        The name of the file export got written to.

        :param file_name: The file_name of this ExportExecutionProperties.
        :type file_name: str
        """

        self._file_name = file_name

    @property
    def processing_end_time(self):
        """Gets the processing_end_time of this ExportExecutionProperties.

        The time when export execution finished.

        :return: The processing_end_time of this ExportExecutionProperties.
        :rtype: datetime
        """
        return self._processing_end_time

    @processing_end_time.setter
    def processing_end_time(self, processing_end_time):
        """Sets the processing_end_time of this ExportExecutionProperties.

        The time when export execution finished.

        :param processing_end_time: The processing_end_time of this ExportExecutionProperties.
        :type processing_end_time: datetime
        """

        self._processing_end_time = processing_end_time

    @property
    def processing_start_time(self):
        """Gets the processing_start_time of this ExportExecutionProperties.

        The time when export was picked up to be executed.

        :return: The processing_start_time of this ExportExecutionProperties.
        :rtype: datetime
        """
        return self._processing_start_time

    @processing_start_time.setter
    def processing_start_time(self, processing_start_time):
        """Sets the processing_start_time of this ExportExecutionProperties.

        The time when export was picked up to be executed.

        :param processing_start_time: The processing_start_time of this ExportExecutionProperties.
        :type processing_start_time: datetime
        """

        self._processing_start_time = processing_start_time

    @property
    def run_settings(self):
        """Gets the run_settings of this ExportExecutionProperties.


        :return: The run_settings of this ExportExecutionProperties.
        :rtype: CommonExportProperties
        """
        return self._run_settings

    @run_settings.setter
    def run_settings(self, run_settings):
        """Sets the run_settings of this ExportExecutionProperties.


        :param run_settings: The run_settings of this ExportExecutionProperties.
        :type run_settings: CommonExportProperties
        """

        self._run_settings = run_settings

    @property
    def status(self):
        """Gets the status of this ExportExecutionProperties.

        The status of the export execution.

        :return: The status of this ExportExecutionProperties.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this ExportExecutionProperties.

        The status of the export execution.

        :param status: The status of this ExportExecutionProperties.
        :type status: str
        """
        allowed_values = ["Queued", "InProgress", "Completed", "Failed", "Timeout", "NewDataNotAvailable", "DataNotAvailable"]  # noqa: E501
        if status not in allowed_values:
            raise ValueError(
                "Invalid value for `status` ({0}), must be one of {1}"
                .format(status, allowed_values)
            )

        self._status = status

    @property
    def submitted_by(self):
        """Gets the submitted_by of this ExportExecutionProperties.

        The identifier for the entity that executed the export. For OnDemand executions, it is the email id. For Scheduled executions, it is the constant value - System.

        :return: The submitted_by of this ExportExecutionProperties.
        :rtype: str
        """
        return self._submitted_by

    @submitted_by.setter
    def submitted_by(self, submitted_by):
        """Sets the submitted_by of this ExportExecutionProperties.

        The identifier for the entity that executed the export. For OnDemand executions, it is the email id. For Scheduled executions, it is the constant value - System.

        :param submitted_by: The submitted_by of this ExportExecutionProperties.
        :type submitted_by: str
        """

        self._submitted_by = submitted_by

    @property
    def submitted_time(self):
        """Gets the submitted_time of this ExportExecutionProperties.

        The time when export was queued to be executed.

        :return: The submitted_time of this ExportExecutionProperties.
        :rtype: datetime
        """
        return self._submitted_time

    @submitted_time.setter
    def submitted_time(self, submitted_time):
        """Sets the submitted_time of this ExportExecutionProperties.

        The time when export was queued to be executed.

        :param submitted_time: The submitted_time of this ExportExecutionProperties.
        :type submitted_time: datetime
        """

        self._submitted_time = submitted_time
