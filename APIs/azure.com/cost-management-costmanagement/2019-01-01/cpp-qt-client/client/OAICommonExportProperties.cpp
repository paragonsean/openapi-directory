/**
 * CostManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-01-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICommonExportProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICommonExportProperties::OAICommonExportProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICommonExportProperties::OAICommonExportProperties() {
    this->initializeModel();
}

OAICommonExportProperties::~OAICommonExportProperties() {}

void OAICommonExportProperties::initializeModel() {

    m_definition_isSet = false;
    m_definition_isValid = false;

    m_delivery_info_isSet = false;
    m_delivery_info_isValid = false;

    m_format_isSet = false;
    m_format_isValid = false;
}

void OAICommonExportProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICommonExportProperties::fromJsonObject(QJsonObject json) {

    m_definition_isValid = ::OpenAPI::fromJsonValue(m_definition, json[QString("definition")]);
    m_definition_isSet = !json[QString("definition")].isNull() && m_definition_isValid;

    m_delivery_info_isValid = ::OpenAPI::fromJsonValue(m_delivery_info, json[QString("deliveryInfo")]);
    m_delivery_info_isSet = !json[QString("deliveryInfo")].isNull() && m_delivery_info_isValid;

    m_format_isValid = ::OpenAPI::fromJsonValue(m_format, json[QString("format")]);
    m_format_isSet = !json[QString("format")].isNull() && m_format_isValid;
}

QString OAICommonExportProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICommonExportProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_definition.isSet()) {
        obj.insert(QString("definition"), ::OpenAPI::toJsonValue(m_definition));
    }
    if (m_delivery_info.isSet()) {
        obj.insert(QString("deliveryInfo"), ::OpenAPI::toJsonValue(m_delivery_info));
    }
    if (m_format_isSet) {
        obj.insert(QString("format"), ::OpenAPI::toJsonValue(m_format));
    }
    return obj;
}

OAIQueryDefinition OAICommonExportProperties::getDefinition() const {
    return m_definition;
}
void OAICommonExportProperties::setDefinition(const OAIQueryDefinition &definition) {
    m_definition = definition;
    m_definition_isSet = true;
}

bool OAICommonExportProperties::is_definition_Set() const{
    return m_definition_isSet;
}

bool OAICommonExportProperties::is_definition_Valid() const{
    return m_definition_isValid;
}

OAIExportDeliveryInfo OAICommonExportProperties::getDeliveryInfo() const {
    return m_delivery_info;
}
void OAICommonExportProperties::setDeliveryInfo(const OAIExportDeliveryInfo &delivery_info) {
    m_delivery_info = delivery_info;
    m_delivery_info_isSet = true;
}

bool OAICommonExportProperties::is_delivery_info_Set() const{
    return m_delivery_info_isSet;
}

bool OAICommonExportProperties::is_delivery_info_Valid() const{
    return m_delivery_info_isValid;
}

QString OAICommonExportProperties::getFormat() const {
    return m_format;
}
void OAICommonExportProperties::setFormat(const QString &format) {
    m_format = format;
    m_format_isSet = true;
}

bool OAICommonExportProperties::is_format_Set() const{
    return m_format_isSet;
}

bool OAICommonExportProperties::is_format_Valid() const{
    return m_format_isValid;
}

bool OAICommonExportProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_definition.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_delivery_info.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_format_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICommonExportProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_definition_isValid && m_delivery_info_isValid && true;
}

} // namespace OpenAPI
