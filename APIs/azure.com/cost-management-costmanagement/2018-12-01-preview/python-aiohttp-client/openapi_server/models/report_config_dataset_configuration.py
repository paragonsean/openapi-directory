# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ReportConfigDatasetConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, columns: List[str]=None):
        """ReportConfigDatasetConfiguration - a model defined in OpenAPI

        :param columns: The columns of this ReportConfigDatasetConfiguration.
        """
        self.openapi_types = {
            'columns': List[str]
        }

        self.attribute_map = {
            'columns': 'columns'
        }

        self._columns = columns

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReportConfigDatasetConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ReportConfigDatasetConfiguration of this ReportConfigDatasetConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def columns(self):
        """Gets the columns of this ReportConfigDatasetConfiguration.

        Array of column names to be included in the report. Any valid report column name is allowed. If not provided, then report includes all columns.

        :return: The columns of this ReportConfigDatasetConfiguration.
        :rtype: List[str]
        """
        return self._columns

    @columns.setter
    def columns(self, columns):
        """Sets the columns of this ReportConfigDatasetConfiguration.

        Array of column names to be included in the report. Any valid report column name is allowed. If not provided, then report includes all columns.

        :param columns: The columns of this ReportConfigDatasetConfiguration.
        :type columns: List[str]
        """

        self._columns = columns
