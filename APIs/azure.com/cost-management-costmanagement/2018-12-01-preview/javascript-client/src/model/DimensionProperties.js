/**
 * CostManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-12-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DimensionProperties model module.
 * @module model/DimensionProperties
 * @version 2018-12-01-preview
 */
class DimensionProperties {
    /**
     * Constructs a new <code>DimensionProperties</code>.
     * @alias module:model/DimensionProperties
     */
    constructor() { 
        
        DimensionProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DimensionProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DimensionProperties} obj Optional instance to populate.
     * @return {module:model/DimensionProperties} The populated <code>DimensionProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DimensionProperties();

            if (data.hasOwnProperty('category')) {
                obj['category'] = ApiClient.convertToType(data['category'], 'String');
            }
            if (data.hasOwnProperty('data')) {
                obj['data'] = ApiClient.convertToType(data['data'], ['String']);
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('filterEnabled')) {
                obj['filterEnabled'] = ApiClient.convertToType(data['filterEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('groupingEnabled')) {
                obj['groupingEnabled'] = ApiClient.convertToType(data['groupingEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('nextLink')) {
                obj['nextLink'] = ApiClient.convertToType(data['nextLink'], 'String');
            }
            if (data.hasOwnProperty('total')) {
                obj['total'] = ApiClient.convertToType(data['total'], 'Number');
            }
            if (data.hasOwnProperty('usageEnd')) {
                obj['usageEnd'] = ApiClient.convertToType(data['usageEnd'], 'Date');
            }
            if (data.hasOwnProperty('usageStart')) {
                obj['usageStart'] = ApiClient.convertToType(data['usageStart'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DimensionProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DimensionProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['category'] && !(typeof data['category'] === 'string' || data['category'] instanceof String)) {
            throw new Error("Expected the field `category` to be a primitive type in the JSON string but got " + data['category']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['data'])) {
            throw new Error("Expected the field `data` to be an array in the JSON data but got " + data['data']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['nextLink'] && !(typeof data['nextLink'] === 'string' || data['nextLink'] instanceof String)) {
            throw new Error("Expected the field `nextLink` to be a primitive type in the JSON string but got " + data['nextLink']);
        }

        return true;
    }


}



/**
 * @member {String} category
 */
DimensionProperties.prototype['category'] = undefined;

/**
 * @member {Array.<String>} data
 */
DimensionProperties.prototype['data'] = undefined;

/**
 * @member {String} description
 */
DimensionProperties.prototype['description'] = undefined;

/**
 * @member {Boolean} filterEnabled
 */
DimensionProperties.prototype['filterEnabled'] = undefined;

/**
 * @member {Boolean} groupingEnabled
 */
DimensionProperties.prototype['groupingEnabled'] = undefined;

/**
 * @member {String} nextLink
 */
DimensionProperties.prototype['nextLink'] = undefined;

/**
 * @member {Number} total
 */
DimensionProperties.prototype['total'] = undefined;

/**
 * @member {Date} usageEnd
 */
DimensionProperties.prototype['usageEnd'] = undefined;

/**
 * @member {Date} usageStart
 */
DimensionProperties.prototype['usageStart'] = undefined;






export default DimensionProperties;

