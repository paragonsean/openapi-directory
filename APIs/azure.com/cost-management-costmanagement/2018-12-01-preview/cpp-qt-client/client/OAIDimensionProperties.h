/**
 * CostManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-12-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDimensionProperties.h
 *
 * 
 */

#ifndef OAIDimensionProperties_H
#define OAIDimensionProperties_H

#include <QJsonObject>

#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDimensionProperties : public OAIObject {
public:
    OAIDimensionProperties();
    OAIDimensionProperties(QString json);
    ~OAIDimensionProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCategory() const;
    void setCategory(const QString &category);
    bool is_category_Set() const;
    bool is_category_Valid() const;

    QList<QString> getData() const;
    void setData(const QList<QString> &data);
    bool is_data_Set() const;
    bool is_data_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    bool isFilterEnabled() const;
    void setFilterEnabled(const bool &filter_enabled);
    bool is_filter_enabled_Set() const;
    bool is_filter_enabled_Valid() const;

    bool isGroupingEnabled() const;
    void setGroupingEnabled(const bool &grouping_enabled);
    bool is_grouping_enabled_Set() const;
    bool is_grouping_enabled_Valid() const;

    QString getNextLink() const;
    void setNextLink(const QString &next_link);
    bool is_next_link_Set() const;
    bool is_next_link_Valid() const;

    qint32 getTotal() const;
    void setTotal(const qint32 &total);
    bool is_total_Set() const;
    bool is_total_Valid() const;

    QDateTime getUsageEnd() const;
    void setUsageEnd(const QDateTime &usage_end);
    bool is_usage_end_Set() const;
    bool is_usage_end_Valid() const;

    QDateTime getUsageStart() const;
    void setUsageStart(const QDateTime &usage_start);
    bool is_usage_start_Set() const;
    bool is_usage_start_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_category;
    bool m_category_isSet;
    bool m_category_isValid;

    QList<QString> m_data;
    bool m_data_isSet;
    bool m_data_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    bool m_filter_enabled;
    bool m_filter_enabled_isSet;
    bool m_filter_enabled_isValid;

    bool m_grouping_enabled;
    bool m_grouping_enabled_isSet;
    bool m_grouping_enabled_isValid;

    QString m_next_link;
    bool m_next_link_isSet;
    bool m_next_link_isValid;

    qint32 m_total;
    bool m_total_isSet;
    bool m_total_isValid;

    QDateTime m_usage_end;
    bool m_usage_end_isSet;
    bool m_usage_end_isValid;

    QDateTime m_usage_start;
    bool m_usage_start_isSet;
    bool m_usage_start_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDimensionProperties)

#endif // OAIDimensionProperties_H
