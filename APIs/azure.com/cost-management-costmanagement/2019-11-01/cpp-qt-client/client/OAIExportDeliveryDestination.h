/**
 * CostManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-11-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIExportDeliveryDestination.h
 *
 * The destination information for the delivery of the export. To allow access to a storage account, you must register the account&#39;s subscription with the Microsoft.CostManagementExports resource provider. This is required once per subscription. When creating an export in the Azure portal, it is done automatically, however API users need to register the subscription. For more information see https://docs.microsoft.com/en-us/azure/azure-resource-manager/resource-manager-supported-services .
 */

#ifndef OAIExportDeliveryDestination_H
#define OAIExportDeliveryDestination_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIExportDeliveryDestination : public OAIObject {
public:
    OAIExportDeliveryDestination();
    OAIExportDeliveryDestination(QString json);
    ~OAIExportDeliveryDestination() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getContainer() const;
    void setContainer(const QString &container);
    bool is_container_Set() const;
    bool is_container_Valid() const;

    QString getResourceId() const;
    void setResourceId(const QString &resource_id);
    bool is_resource_id_Set() const;
    bool is_resource_id_Valid() const;

    QString getRootFolderPath() const;
    void setRootFolderPath(const QString &root_folder_path);
    bool is_root_folder_path_Set() const;
    bool is_root_folder_path_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_container;
    bool m_container_isSet;
    bool m_container_isValid;

    QString m_resource_id;
    bool m_resource_id_isSet;
    bool m_resource_id_isValid;

    QString m_root_folder_path;
    bool m_root_folder_path_isSet;
    bool m_root_folder_path_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIExportDeliveryDestination)

#endif // OAIExportDeliveryDestination_H
