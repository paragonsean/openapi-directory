/**
 * CostManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-11-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CommonExportProperties from './CommonExportProperties';

/**
 * The ExportExecutionProperties model module.
 * @module model/ExportExecutionProperties
 * @version 2019-11-01
 */
class ExportExecutionProperties {
    /**
     * Constructs a new <code>ExportExecutionProperties</code>.
     * The properties of the export execution.
     * @alias module:model/ExportExecutionProperties
     */
    constructor() { 
        
        ExportExecutionProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ExportExecutionProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ExportExecutionProperties} obj Optional instance to populate.
     * @return {module:model/ExportExecutionProperties} The populated <code>ExportExecutionProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ExportExecutionProperties();

            if (data.hasOwnProperty('executionType')) {
                obj['executionType'] = ApiClient.convertToType(data['executionType'], 'String');
            }
            if (data.hasOwnProperty('fileName')) {
                obj['fileName'] = ApiClient.convertToType(data['fileName'], 'String');
            }
            if (data.hasOwnProperty('processingEndTime')) {
                obj['processingEndTime'] = ApiClient.convertToType(data['processingEndTime'], 'Date');
            }
            if (data.hasOwnProperty('processingStartTime')) {
                obj['processingStartTime'] = ApiClient.convertToType(data['processingStartTime'], 'Date');
            }
            if (data.hasOwnProperty('runSettings')) {
                obj['runSettings'] = CommonExportProperties.constructFromObject(data['runSettings']);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('submittedBy')) {
                obj['submittedBy'] = ApiClient.convertToType(data['submittedBy'], 'String');
            }
            if (data.hasOwnProperty('submittedTime')) {
                obj['submittedTime'] = ApiClient.convertToType(data['submittedTime'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ExportExecutionProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ExportExecutionProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['executionType'] && !(typeof data['executionType'] === 'string' || data['executionType'] instanceof String)) {
            throw new Error("Expected the field `executionType` to be a primitive type in the JSON string but got " + data['executionType']);
        }
        // ensure the json data is a string
        if (data['fileName'] && !(typeof data['fileName'] === 'string' || data['fileName'] instanceof String)) {
            throw new Error("Expected the field `fileName` to be a primitive type in the JSON string but got " + data['fileName']);
        }
        // validate the optional field `runSettings`
        if (data['runSettings']) { // data not null
          CommonExportProperties.validateJSON(data['runSettings']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is a string
        if (data['submittedBy'] && !(typeof data['submittedBy'] === 'string' || data['submittedBy'] instanceof String)) {
            throw new Error("Expected the field `submittedBy` to be a primitive type in the JSON string but got " + data['submittedBy']);
        }

        return true;
    }


}



/**
 * The type of the export execution.
 * @member {module:model/ExportExecutionProperties.ExecutionTypeEnum} executionType
 */
ExportExecutionProperties.prototype['executionType'] = undefined;

/**
 * The name of the file export got written to.
 * @member {String} fileName
 */
ExportExecutionProperties.prototype['fileName'] = undefined;

/**
 * The time when export execution finished.
 * @member {Date} processingEndTime
 */
ExportExecutionProperties.prototype['processingEndTime'] = undefined;

/**
 * The time when export was picked up to be executed.
 * @member {Date} processingStartTime
 */
ExportExecutionProperties.prototype['processingStartTime'] = undefined;

/**
 * @member {module:model/CommonExportProperties} runSettings
 */
ExportExecutionProperties.prototype['runSettings'] = undefined;

/**
 * The status of the export execution.
 * @member {module:model/ExportExecutionProperties.StatusEnum} status
 */
ExportExecutionProperties.prototype['status'] = undefined;

/**
 * The identifier for the entity that executed the export. For OnDemand executions, it is the email id. For Scheduled executions, it is the constant value - System.
 * @member {String} submittedBy
 */
ExportExecutionProperties.prototype['submittedBy'] = undefined;

/**
 * The time when export was queued to be executed.
 * @member {Date} submittedTime
 */
ExportExecutionProperties.prototype['submittedTime'] = undefined;





/**
 * Allowed values for the <code>executionType</code> property.
 * @enum {String}
 * @readonly
 */
ExportExecutionProperties['ExecutionTypeEnum'] = {

    /**
     * value: "OnDemand"
     * @const
     */
    "OnDemand": "OnDemand",

    /**
     * value: "Scheduled"
     * @const
     */
    "Scheduled": "Scheduled"
};


/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
ExportExecutionProperties['StatusEnum'] = {

    /**
     * value: "Queued"
     * @const
     */
    "Queued": "Queued",

    /**
     * value: "InProgress"
     * @const
     */
    "InProgress": "InProgress",

    /**
     * value: "Completed"
     * @const
     */
    "Completed": "Completed",

    /**
     * value: "Failed"
     * @const
     */
    "Failed": "Failed",

    /**
     * value: "Timeout"
     * @const
     */
    "Timeout": "Timeout",

    /**
     * value: "NewDataNotAvailable"
     * @const
     */
    "NewDataNotAvailable": "NewDataNotAvailable",

    /**
     * value: "DataNotAvailable"
     * @const
     */
    "DataNotAvailable": "DataNotAvailable"
};



export default ExportExecutionProperties;

