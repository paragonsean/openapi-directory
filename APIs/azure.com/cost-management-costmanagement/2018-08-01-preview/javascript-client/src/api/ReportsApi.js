/**
 * CostManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-08-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErrorResponse from '../model/ErrorResponse';
import Report from '../model/Report';
import ReportExecutionListResult from '../model/ReportExecutionListResult';
import ReportListResult from '../model/ReportListResult';

/**
* Reports service.
* @module api/ReportsApi
* @version 2018-08-01-preview
*/
export default class ReportsApi {

    /**
    * Constructs a new ReportsApi. 
    * @alias module:api/ReportsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the reportsCreateOrUpdate operation.
     * @callback module:api/ReportsApi~reportsCreateOrUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Report} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * The operation to create or update a report. Update operation requires latest eTag to be set in the request mandatorily. You may obtain the latest eTag by performing a get operation. Create operation does not require eTag.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview.
     * @param {String} subscriptionId Azure Subscription ID.
     * @param {String} reportName Report Name.
     * @param {module:model/Report} parameters Parameters supplied to the CreateOrUpdate Report operation.
     * @param {module:api/ReportsApi~reportsCreateOrUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Report}
     */
    reportsCreateOrUpdate(apiVersion, subscriptionId, reportName, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling reportsCreateOrUpdate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling reportsCreateOrUpdate");
      }
      // verify the required parameter 'reportName' is set
      if (reportName === undefined || reportName === null) {
        throw new Error("Missing the required parameter 'reportName' when calling reportsCreateOrUpdate");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling reportsCreateOrUpdate");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'reportName': reportName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Report;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.CostManagement/reports/{reportName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the reportsCreateOrUpdateByBillingAccount operation.
     * @callback module:api/ReportsApi~reportsCreateOrUpdateByBillingAccountCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Report} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * The operation to create or update a report for billingAccount. Update operation requires latest eTag to be set in the request mandatorily. You may obtain the latest eTag by performing a get operation. Create operation does not require eTag.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview.
     * @param {String} billingAccountId BillingAccount ID
     * @param {String} reportName Report Name.
     * @param {module:model/Report} parameters Parameters supplied to the CreateOrUpdate Report operation.
     * @param {module:api/ReportsApi~reportsCreateOrUpdateByBillingAccountCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Report}
     */
    reportsCreateOrUpdateByBillingAccount(apiVersion, billingAccountId, reportName, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling reportsCreateOrUpdateByBillingAccount");
      }
      // verify the required parameter 'billingAccountId' is set
      if (billingAccountId === undefined || billingAccountId === null) {
        throw new Error("Missing the required parameter 'billingAccountId' when calling reportsCreateOrUpdateByBillingAccount");
      }
      // verify the required parameter 'reportName' is set
      if (reportName === undefined || reportName === null) {
        throw new Error("Missing the required parameter 'reportName' when calling reportsCreateOrUpdateByBillingAccount");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling reportsCreateOrUpdateByBillingAccount");
      }

      let pathParams = {
        'billingAccountId': billingAccountId,
        'reportName': reportName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Report;
      return this.apiClient.callApi(
        '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.CostManagement/reports/{reportName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the reportsCreateOrUpdateByDepartment operation.
     * @callback module:api/ReportsApi~reportsCreateOrUpdateByDepartmentCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Report} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * The operation to create or update a report for department. Update operation requires latest eTag to be set in the request mandatorily. You may obtain the latest eTag by performing a get operation. Create operation does not require eTag.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview.
     * @param {String} departmentId Department ID
     * @param {String} reportName Report Name.
     * @param {module:model/Report} parameters Parameters supplied to the CreateOrUpdate Report operation.
     * @param {module:api/ReportsApi~reportsCreateOrUpdateByDepartmentCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Report}
     */
    reportsCreateOrUpdateByDepartment(apiVersion, departmentId, reportName, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling reportsCreateOrUpdateByDepartment");
      }
      // verify the required parameter 'departmentId' is set
      if (departmentId === undefined || departmentId === null) {
        throw new Error("Missing the required parameter 'departmentId' when calling reportsCreateOrUpdateByDepartment");
      }
      // verify the required parameter 'reportName' is set
      if (reportName === undefined || reportName === null) {
        throw new Error("Missing the required parameter 'reportName' when calling reportsCreateOrUpdateByDepartment");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling reportsCreateOrUpdateByDepartment");
      }

      let pathParams = {
        'departmentId': departmentId,
        'reportName': reportName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Report;
      return this.apiClient.callApi(
        '/providers/Microsoft.Billing/departments/{departmentId}/providers/Microsoft.CostManagement/reports/{reportName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the reportsCreateOrUpdateByResourceGroupName operation.
     * @callback module:api/ReportsApi~reportsCreateOrUpdateByResourceGroupNameCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Report} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * The operation to create or update a report. Update operation requires latest eTag to be set in the request mandatorily. You may obtain the latest eTag by performing a get operation. Create operation does not require eTag.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview.
     * @param {String} subscriptionId Azure Subscription ID.
     * @param {String} resourceGroupName Azure Resource Group Name.
     * @param {String} reportName Report Name.
     * @param {module:model/Report} parameters Parameters supplied to the CreateOrUpdate Report operation.
     * @param {module:api/ReportsApi~reportsCreateOrUpdateByResourceGroupNameCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Report}
     */
    reportsCreateOrUpdateByResourceGroupName(apiVersion, subscriptionId, resourceGroupName, reportName, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling reportsCreateOrUpdateByResourceGroupName");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling reportsCreateOrUpdateByResourceGroupName");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling reportsCreateOrUpdateByResourceGroupName");
      }
      // verify the required parameter 'reportName' is set
      if (reportName === undefined || reportName === null) {
        throw new Error("Missing the required parameter 'reportName' when calling reportsCreateOrUpdateByResourceGroupName");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling reportsCreateOrUpdateByResourceGroupName");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'reportName': reportName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Report;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CostManagement/reports/{reportName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the reportsDelete operation.
     * @callback module:api/ReportsApi~reportsDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * The operation to delete a report.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview.
     * @param {String} subscriptionId Azure Subscription ID.
     * @param {String} reportName Report Name.
     * @param {module:api/ReportsApi~reportsDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    reportsDelete(apiVersion, subscriptionId, reportName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling reportsDelete");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling reportsDelete");
      }
      // verify the required parameter 'reportName' is set
      if (reportName === undefined || reportName === null) {
        throw new Error("Missing the required parameter 'reportName' when calling reportsDelete");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'reportName': reportName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.CostManagement/reports/{reportName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the reportsDeleteByBillingAccount operation.
     * @callback module:api/ReportsApi~reportsDeleteByBillingAccountCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * The operation to delete a report for billing account.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview.
     * @param {String} billingAccountId BillingAccount ID
     * @param {String} reportName Report Name.
     * @param {module:api/ReportsApi~reportsDeleteByBillingAccountCallback} callback The callback function, accepting three arguments: error, data, response
     */
    reportsDeleteByBillingAccount(apiVersion, billingAccountId, reportName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling reportsDeleteByBillingAccount");
      }
      // verify the required parameter 'billingAccountId' is set
      if (billingAccountId === undefined || billingAccountId === null) {
        throw new Error("Missing the required parameter 'billingAccountId' when calling reportsDeleteByBillingAccount");
      }
      // verify the required parameter 'reportName' is set
      if (reportName === undefined || reportName === null) {
        throw new Error("Missing the required parameter 'reportName' when calling reportsDeleteByBillingAccount");
      }

      let pathParams = {
        'billingAccountId': billingAccountId,
        'reportName': reportName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.CostManagement/reports/{reportName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the reportsDeleteByDepartment operation.
     * @callback module:api/ReportsApi~reportsDeleteByDepartmentCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * The operation to delete a report for department.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview.
     * @param {String} departmentId Department ID
     * @param {String} reportName Report Name.
     * @param {module:api/ReportsApi~reportsDeleteByDepartmentCallback} callback The callback function, accepting three arguments: error, data, response
     */
    reportsDeleteByDepartment(apiVersion, departmentId, reportName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling reportsDeleteByDepartment");
      }
      // verify the required parameter 'departmentId' is set
      if (departmentId === undefined || departmentId === null) {
        throw new Error("Missing the required parameter 'departmentId' when calling reportsDeleteByDepartment");
      }
      // verify the required parameter 'reportName' is set
      if (reportName === undefined || reportName === null) {
        throw new Error("Missing the required parameter 'reportName' when calling reportsDeleteByDepartment");
      }

      let pathParams = {
        'departmentId': departmentId,
        'reportName': reportName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/providers/Microsoft.Billing/departments/{departmentId}/providers/Microsoft.CostManagement/reports/{reportName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the reportsDeleteByResourceGroupName operation.
     * @callback module:api/ReportsApi~reportsDeleteByResourceGroupNameCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * The operation to delete a report.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview.
     * @param {String} subscriptionId Azure Subscription ID.
     * @param {String} resourceGroupName Azure Resource Group Name.
     * @param {String} reportName Report Name.
     * @param {module:api/ReportsApi~reportsDeleteByResourceGroupNameCallback} callback The callback function, accepting three arguments: error, data, response
     */
    reportsDeleteByResourceGroupName(apiVersion, subscriptionId, resourceGroupName, reportName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling reportsDeleteByResourceGroupName");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling reportsDeleteByResourceGroupName");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling reportsDeleteByResourceGroupName");
      }
      // verify the required parameter 'reportName' is set
      if (reportName === undefined || reportName === null) {
        throw new Error("Missing the required parameter 'reportName' when calling reportsDeleteByResourceGroupName");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'reportName': reportName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CostManagement/reports/{reportName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the reportsExecute operation.
     * @callback module:api/ReportsApi~reportsExecuteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * The operation to execute a report.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview.
     * @param {String} subscriptionId Azure Subscription ID.
     * @param {String} reportName Report Name.
     * @param {module:api/ReportsApi~reportsExecuteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    reportsExecute(apiVersion, subscriptionId, reportName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling reportsExecute");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling reportsExecute");
      }
      // verify the required parameter 'reportName' is set
      if (reportName === undefined || reportName === null) {
        throw new Error("Missing the required parameter 'reportName' when calling reportsExecute");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'reportName': reportName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.CostManagement/reports/{reportName}/run', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the reportsExecuteByBillingAccount operation.
     * @callback module:api/ReportsApi~reportsExecuteByBillingAccountCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * The operation to execute a report by billing account.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview.
     * @param {String} billingAccountId BillingAccount ID
     * @param {String} reportName Report Name.
     * @param {module:api/ReportsApi~reportsExecuteByBillingAccountCallback} callback The callback function, accepting three arguments: error, data, response
     */
    reportsExecuteByBillingAccount(apiVersion, billingAccountId, reportName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling reportsExecuteByBillingAccount");
      }
      // verify the required parameter 'billingAccountId' is set
      if (billingAccountId === undefined || billingAccountId === null) {
        throw new Error("Missing the required parameter 'billingAccountId' when calling reportsExecuteByBillingAccount");
      }
      // verify the required parameter 'reportName' is set
      if (reportName === undefined || reportName === null) {
        throw new Error("Missing the required parameter 'reportName' when calling reportsExecuteByBillingAccount");
      }

      let pathParams = {
        'billingAccountId': billingAccountId,
        'reportName': reportName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.CostManagement/reports/{reportName}/run', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the reportsExecuteByDepartment operation.
     * @callback module:api/ReportsApi~reportsExecuteByDepartmentCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * The operation to execute a report by department.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview.
     * @param {String} departmentId Department ID
     * @param {String} reportName Report Name.
     * @param {module:api/ReportsApi~reportsExecuteByDepartmentCallback} callback The callback function, accepting three arguments: error, data, response
     */
    reportsExecuteByDepartment(apiVersion, departmentId, reportName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling reportsExecuteByDepartment");
      }
      // verify the required parameter 'departmentId' is set
      if (departmentId === undefined || departmentId === null) {
        throw new Error("Missing the required parameter 'departmentId' when calling reportsExecuteByDepartment");
      }
      // verify the required parameter 'reportName' is set
      if (reportName === undefined || reportName === null) {
        throw new Error("Missing the required parameter 'reportName' when calling reportsExecuteByDepartment");
      }

      let pathParams = {
        'departmentId': departmentId,
        'reportName': reportName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/providers/Microsoft.Billing/departments/{departmentId}/providers/Microsoft.CostManagement/reports/{reportName}/run', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the reportsExecuteByResourceGroupName operation.
     * @callback module:api/ReportsApi~reportsExecuteByResourceGroupNameCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * The operation to execute a report.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview.
     * @param {String} subscriptionId Azure Subscription ID.
     * @param {String} resourceGroupName Azure Resource Group Name.
     * @param {String} reportName Report Name.
     * @param {module:api/ReportsApi~reportsExecuteByResourceGroupNameCallback} callback The callback function, accepting three arguments: error, data, response
     */
    reportsExecuteByResourceGroupName(apiVersion, subscriptionId, resourceGroupName, reportName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling reportsExecuteByResourceGroupName");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling reportsExecuteByResourceGroupName");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling reportsExecuteByResourceGroupName");
      }
      // verify the required parameter 'reportName' is set
      if (reportName === undefined || reportName === null) {
        throw new Error("Missing the required parameter 'reportName' when calling reportsExecuteByResourceGroupName");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'reportName': reportName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CostManagement/reports/{reportName}/run', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the reportsGet operation.
     * @callback module:api/ReportsApi~reportsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Report} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the report for a subscription by report name.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview.
     * @param {String} subscriptionId Azure Subscription ID.
     * @param {String} reportName Report Name.
     * @param {module:api/ReportsApi~reportsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Report}
     */
    reportsGet(apiVersion, subscriptionId, reportName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling reportsGet");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling reportsGet");
      }
      // verify the required parameter 'reportName' is set
      if (reportName === undefined || reportName === null) {
        throw new Error("Missing the required parameter 'reportName' when calling reportsGet");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'reportName': reportName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Report;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.CostManagement/reports/{reportName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the reportsGetByBillingAccount operation.
     * @callback module:api/ReportsApi~reportsGetByBillingAccountCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Report} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the report for a billing account by report name.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview.
     * @param {String} billingAccountId BillingAccount ID
     * @param {String} reportName Report Name.
     * @param {module:api/ReportsApi~reportsGetByBillingAccountCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Report}
     */
    reportsGetByBillingAccount(apiVersion, billingAccountId, reportName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling reportsGetByBillingAccount");
      }
      // verify the required parameter 'billingAccountId' is set
      if (billingAccountId === undefined || billingAccountId === null) {
        throw new Error("Missing the required parameter 'billingAccountId' when calling reportsGetByBillingAccount");
      }
      // verify the required parameter 'reportName' is set
      if (reportName === undefined || reportName === null) {
        throw new Error("Missing the required parameter 'reportName' when calling reportsGetByBillingAccount");
      }

      let pathParams = {
        'billingAccountId': billingAccountId,
        'reportName': reportName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Report;
      return this.apiClient.callApi(
        '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.CostManagement/reports/{reportName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the reportsGetByDepartment operation.
     * @callback module:api/ReportsApi~reportsGetByDepartmentCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Report} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the report for a department by report name.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview.
     * @param {String} departmentId Department ID
     * @param {String} reportName Report Name.
     * @param {module:api/ReportsApi~reportsGetByDepartmentCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Report}
     */
    reportsGetByDepartment(apiVersion, departmentId, reportName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling reportsGetByDepartment");
      }
      // verify the required parameter 'departmentId' is set
      if (departmentId === undefined || departmentId === null) {
        throw new Error("Missing the required parameter 'departmentId' when calling reportsGetByDepartment");
      }
      // verify the required parameter 'reportName' is set
      if (reportName === undefined || reportName === null) {
        throw new Error("Missing the required parameter 'reportName' when calling reportsGetByDepartment");
      }

      let pathParams = {
        'departmentId': departmentId,
        'reportName': reportName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Report;
      return this.apiClient.callApi(
        '/providers/Microsoft.Billing/departments/{departmentId}/providers/Microsoft.CostManagement/reports/{reportName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the reportsGetByResourceGroupName operation.
     * @callback module:api/ReportsApi~reportsGetByResourceGroupNameCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Report} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the report for a resource group under a subscription by report name.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview.
     * @param {String} subscriptionId Azure Subscription ID.
     * @param {String} resourceGroupName Azure Resource Group Name.
     * @param {String} reportName Report Name.
     * @param {module:api/ReportsApi~reportsGetByResourceGroupNameCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Report}
     */
    reportsGetByResourceGroupName(apiVersion, subscriptionId, resourceGroupName, reportName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling reportsGetByResourceGroupName");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling reportsGetByResourceGroupName");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling reportsGetByResourceGroupName");
      }
      // verify the required parameter 'reportName' is set
      if (reportName === undefined || reportName === null) {
        throw new Error("Missing the required parameter 'reportName' when calling reportsGetByResourceGroupName");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'reportName': reportName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Report;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CostManagement/reports/{reportName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the reportsGetExecutionHistory operation.
     * @callback module:api/ReportsApi~reportsGetExecutionHistoryCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ReportExecutionListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the execution history of a report for a subscription by report name.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview.
     * @param {String} subscriptionId Azure Subscription ID.
     * @param {String} reportName Report Name.
     * @param {module:api/ReportsApi~reportsGetExecutionHistoryCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ReportExecutionListResult}
     */
    reportsGetExecutionHistory(apiVersion, subscriptionId, reportName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling reportsGetExecutionHistory");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling reportsGetExecutionHistory");
      }
      // verify the required parameter 'reportName' is set
      if (reportName === undefined || reportName === null) {
        throw new Error("Missing the required parameter 'reportName' when calling reportsGetExecutionHistory");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'reportName': reportName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ReportExecutionListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.CostManagement/reports/{reportName}/runHistory', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the reportsGetExecutionHistoryByBillingAccount operation.
     * @callback module:api/ReportsApi~reportsGetExecutionHistoryByBillingAccountCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ReportExecutionListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the execution history of a report for a billing account by report name.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview.
     * @param {String} billingAccountId BillingAccount ID
     * @param {String} reportName Report Name.
     * @param {module:api/ReportsApi~reportsGetExecutionHistoryByBillingAccountCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ReportExecutionListResult}
     */
    reportsGetExecutionHistoryByBillingAccount(apiVersion, billingAccountId, reportName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling reportsGetExecutionHistoryByBillingAccount");
      }
      // verify the required parameter 'billingAccountId' is set
      if (billingAccountId === undefined || billingAccountId === null) {
        throw new Error("Missing the required parameter 'billingAccountId' when calling reportsGetExecutionHistoryByBillingAccount");
      }
      // verify the required parameter 'reportName' is set
      if (reportName === undefined || reportName === null) {
        throw new Error("Missing the required parameter 'reportName' when calling reportsGetExecutionHistoryByBillingAccount");
      }

      let pathParams = {
        'billingAccountId': billingAccountId,
        'reportName': reportName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ReportExecutionListResult;
      return this.apiClient.callApi(
        '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.CostManagement/reports/{reportName}/runHistory', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the reportsGetExecutionHistoryByDepartment operation.
     * @callback module:api/ReportsApi~reportsGetExecutionHistoryByDepartmentCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ReportExecutionListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the execution history of a report for a department by report name.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview.
     * @param {String} departmentId Department ID
     * @param {String} reportName Report Name.
     * @param {module:api/ReportsApi~reportsGetExecutionHistoryByDepartmentCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ReportExecutionListResult}
     */
    reportsGetExecutionHistoryByDepartment(apiVersion, departmentId, reportName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling reportsGetExecutionHistoryByDepartment");
      }
      // verify the required parameter 'departmentId' is set
      if (departmentId === undefined || departmentId === null) {
        throw new Error("Missing the required parameter 'departmentId' when calling reportsGetExecutionHistoryByDepartment");
      }
      // verify the required parameter 'reportName' is set
      if (reportName === undefined || reportName === null) {
        throw new Error("Missing the required parameter 'reportName' when calling reportsGetExecutionHistoryByDepartment");
      }

      let pathParams = {
        'departmentId': departmentId,
        'reportName': reportName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ReportExecutionListResult;
      return this.apiClient.callApi(
        '/providers/Microsoft.Billing/departments/{departmentId}/providers/Microsoft.CostManagement/reports/{reportName}/runHistory', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the reportsGetExecutionHistoryByResourceGroupName operation.
     * @callback module:api/ReportsApi~reportsGetExecutionHistoryByResourceGroupNameCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ReportExecutionListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the execution history of a report for a resource group by report name.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview.
     * @param {String} subscriptionId Azure Subscription ID.
     * @param {String} resourceGroupName Azure Resource Group Name.
     * @param {String} reportName Report Name.
     * @param {module:api/ReportsApi~reportsGetExecutionHistoryByResourceGroupNameCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ReportExecutionListResult}
     */
    reportsGetExecutionHistoryByResourceGroupName(apiVersion, subscriptionId, resourceGroupName, reportName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling reportsGetExecutionHistoryByResourceGroupName");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling reportsGetExecutionHistoryByResourceGroupName");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling reportsGetExecutionHistoryByResourceGroupName");
      }
      // verify the required parameter 'reportName' is set
      if (reportName === undefined || reportName === null) {
        throw new Error("Missing the required parameter 'reportName' when calling reportsGetExecutionHistoryByResourceGroupName");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'reportName': reportName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ReportExecutionListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CostManagement/reports/{reportName}/runHistory', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the reportsList operation.
     * @callback module:api/ReportsApi~reportsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ReportListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists all reports for a subscription.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview.
     * @param {String} subscriptionId Azure Subscription ID.
     * @param {module:api/ReportsApi~reportsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ReportListResult}
     */
    reportsList(apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling reportsList");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling reportsList");
      }

      let pathParams = {
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ReportListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.CostManagement/reports', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the reportsListByBillingAccount operation.
     * @callback module:api/ReportsApi~reportsListByBillingAccountCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ReportListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists all reports for a billing account.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview.
     * @param {String} billingAccountId BillingAccount ID
     * @param {module:api/ReportsApi~reportsListByBillingAccountCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ReportListResult}
     */
    reportsListByBillingAccount(apiVersion, billingAccountId, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling reportsListByBillingAccount");
      }
      // verify the required parameter 'billingAccountId' is set
      if (billingAccountId === undefined || billingAccountId === null) {
        throw new Error("Missing the required parameter 'billingAccountId' when calling reportsListByBillingAccount");
      }

      let pathParams = {
        'billingAccountId': billingAccountId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ReportListResult;
      return this.apiClient.callApi(
        '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.CostManagement/reports', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the reportsListByDepartment operation.
     * @callback module:api/ReportsApi~reportsListByDepartmentCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ReportListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists all reports for a department.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview.
     * @param {String} departmentId Department ID
     * @param {module:api/ReportsApi~reportsListByDepartmentCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ReportListResult}
     */
    reportsListByDepartment(apiVersion, departmentId, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling reportsListByDepartment");
      }
      // verify the required parameter 'departmentId' is set
      if (departmentId === undefined || departmentId === null) {
        throw new Error("Missing the required parameter 'departmentId' when calling reportsListByDepartment");
      }

      let pathParams = {
        'departmentId': departmentId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ReportListResult;
      return this.apiClient.callApi(
        '/providers/Microsoft.Billing/departments/{departmentId}/providers/Microsoft.CostManagement/reports', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the reportsListByResourceGroupName operation.
     * @callback module:api/ReportsApi~reportsListByResourceGroupNameCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ReportListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists all reports for a resource group under a subscription.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview.
     * @param {String} subscriptionId Azure Subscription ID.
     * @param {String} resourceGroupName Azure Resource Group Name.
     * @param {module:api/ReportsApi~reportsListByResourceGroupNameCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ReportListResult}
     */
    reportsListByResourceGroupName(apiVersion, subscriptionId, resourceGroupName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling reportsListByResourceGroupName");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling reportsListByResourceGroupName");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling reportsListByResourceGroupName");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ReportListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CostManagement/reports', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
