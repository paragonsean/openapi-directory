/**
 * CostManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-08-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Alert from '../model/Alert';
import AlertListResult from '../model/AlertListResult';
import ErrorResponse from '../model/ErrorResponse';

/**
* Alerts service.
* @module api/AlertsApi
* @version 2018-08-01-preview
*/
export default class AlertsApi {

    /**
    * Constructs a new AlertsApi. 
    * @alias module:api/AlertsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the alertsGetAlertByManagementGroups operation.
     * @callback module:api/AlertsApi~alertsGetAlertByManagementGroupsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Alert} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets an alert for Management Groups by alert ID.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview.
     * @param {String} managementGroupId Management Group ID
     * @param {String} alertId Alert ID.
     * @param {module:api/AlertsApi~alertsGetAlertByManagementGroupsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Alert}
     */
    alertsGetAlertByManagementGroups(apiVersion, managementGroupId, alertId, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling alertsGetAlertByManagementGroups");
      }
      // verify the required parameter 'managementGroupId' is set
      if (managementGroupId === undefined || managementGroupId === null) {
        throw new Error("Missing the required parameter 'managementGroupId' when calling alertsGetAlertByManagementGroups");
      }
      // verify the required parameter 'alertId' is set
      if (alertId === undefined || alertId === null) {
        throw new Error("Missing the required parameter 'alertId' when calling alertsGetAlertByManagementGroups");
      }

      let pathParams = {
        'managementGroupId': managementGroupId,
        'alertId': alertId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Alert;
      return this.apiClient.callApi(
        '/providers/Microsoft.Management/managementGroups/{managementGroupId}/providers/Microsoft.CostManagement/alerts/{alertId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the alertsGetByAccount operation.
     * @callback module:api/AlertsApi~alertsGetByAccountCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Alert} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the alert for an account by alert ID.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview.
     * @param {String} billingAccountId BillingAccount ID
     * @param {String} enrollmentAccountId Enrollment Account Id
     * @param {String} alertId Alert ID.
     * @param {module:api/AlertsApi~alertsGetByAccountCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Alert}
     */
    alertsGetByAccount(apiVersion, billingAccountId, enrollmentAccountId, alertId, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling alertsGetByAccount");
      }
      // verify the required parameter 'billingAccountId' is set
      if (billingAccountId === undefined || billingAccountId === null) {
        throw new Error("Missing the required parameter 'billingAccountId' when calling alertsGetByAccount");
      }
      // verify the required parameter 'enrollmentAccountId' is set
      if (enrollmentAccountId === undefined || enrollmentAccountId === null) {
        throw new Error("Missing the required parameter 'enrollmentAccountId' when calling alertsGetByAccount");
      }
      // verify the required parameter 'alertId' is set
      if (alertId === undefined || alertId === null) {
        throw new Error("Missing the required parameter 'alertId' when calling alertsGetByAccount");
      }

      let pathParams = {
        'billingAccountId': billingAccountId,
        'enrollmentAccountId': enrollmentAccountId,
        'alertId': alertId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Alert;
      return this.apiClient.callApi(
        '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}/providers/Microsoft.CostManagement/alerts/{alertId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the alertsGetByDepartment operation.
     * @callback module:api/AlertsApi~alertsGetByDepartmentCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Alert} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the alert for a department by alert ID.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview.
     * @param {String} billingAccountId BillingAccount ID
     * @param {String} departmentId Department ID
     * @param {String} alertId Alert ID.
     * @param {module:api/AlertsApi~alertsGetByDepartmentCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Alert}
     */
    alertsGetByDepartment(apiVersion, billingAccountId, departmentId, alertId, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling alertsGetByDepartment");
      }
      // verify the required parameter 'billingAccountId' is set
      if (billingAccountId === undefined || billingAccountId === null) {
        throw new Error("Missing the required parameter 'billingAccountId' when calling alertsGetByDepartment");
      }
      // verify the required parameter 'departmentId' is set
      if (departmentId === undefined || departmentId === null) {
        throw new Error("Missing the required parameter 'departmentId' when calling alertsGetByDepartment");
      }
      // verify the required parameter 'alertId' is set
      if (alertId === undefined || alertId === null) {
        throw new Error("Missing the required parameter 'alertId' when calling alertsGetByDepartment");
      }

      let pathParams = {
        'billingAccountId': billingAccountId,
        'departmentId': departmentId,
        'alertId': alertId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Alert;
      return this.apiClient.callApi(
        '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}/providers/Microsoft.CostManagement/alerts/{alertId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the alertsGetByEnrollment operation.
     * @callback module:api/AlertsApi~alertsGetByEnrollmentCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Alert} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the alert for an enrollment by alert ID.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview.
     * @param {String} billingAccountId BillingAccount ID
     * @param {String} alertId Alert ID.
     * @param {module:api/AlertsApi~alertsGetByEnrollmentCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Alert}
     */
    alertsGetByEnrollment(apiVersion, billingAccountId, alertId, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling alertsGetByEnrollment");
      }
      // verify the required parameter 'billingAccountId' is set
      if (billingAccountId === undefined || billingAccountId === null) {
        throw new Error("Missing the required parameter 'billingAccountId' when calling alertsGetByEnrollment");
      }
      // verify the required parameter 'alertId' is set
      if (alertId === undefined || alertId === null) {
        throw new Error("Missing the required parameter 'alertId' when calling alertsGetByEnrollment");
      }

      let pathParams = {
        'billingAccountId': billingAccountId,
        'alertId': alertId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Alert;
      return this.apiClient.callApi(
        '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.CostManagement/alerts/{alertId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the alertsGetByResourceGroupName operation.
     * @callback module:api/AlertsApi~alertsGetByResourceGroupNameCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Alert} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the alert for a resource group under a subscription by alert ID.
     * @param {String} subscriptionId Azure Subscription ID.
     * @param {String} resourceGroupName Azure Resource Group Name.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview.
     * @param {String} alertId Alert ID.
     * @param {module:api/AlertsApi~alertsGetByResourceGroupNameCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Alert}
     */
    alertsGetByResourceGroupName(subscriptionId, resourceGroupName, apiVersion, alertId, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling alertsGetByResourceGroupName");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling alertsGetByResourceGroupName");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling alertsGetByResourceGroupName");
      }
      // verify the required parameter 'alertId' is set
      if (alertId === undefined || alertId === null) {
        throw new Error("Missing the required parameter 'alertId' when calling alertsGetByResourceGroupName");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'alertId': alertId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Alert;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CostManagement/alerts/{alertId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the alertsGetBySubscription operation.
     * @callback module:api/AlertsApi~alertsGetBySubscriptionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Alert} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the alert for a subscription by alert ID.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview.
     * @param {String} subscriptionId Azure Subscription ID.
     * @param {String} alertId Alert ID.
     * @param {module:api/AlertsApi~alertsGetBySubscriptionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Alert}
     */
    alertsGetBySubscription(apiVersion, subscriptionId, alertId, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling alertsGetBySubscription");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling alertsGetBySubscription");
      }
      // verify the required parameter 'alertId' is set
      if (alertId === undefined || alertId === null) {
        throw new Error("Missing the required parameter 'alertId' when calling alertsGetBySubscription");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'alertId': alertId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Alert;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.CostManagement/alerts/{alertId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the alertsList operation.
     * @callback module:api/AlertsApi~alertsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AlertListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List all alerts for a subscription.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview.
     * @param {String} subscriptionId Azure Subscription ID.
     * @param {Object} opts Optional parameters
     * @param {String} [filter] May be used to filter alerts by properties/definition/type, properties/definition/category, properties/definition/criteria, properties/costEntityId, properties/creationTime, properties/closeTime, properties/status, properties/source. Supported operators are 'eq','lt', 'gt', 'le', 'ge'.
     * @param {String} [skiptoken] Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls.
     * @param {Number} [top] May be used to limit the number of results to the most recent N alerts.
     * @param {module:api/AlertsApi~alertsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AlertListResult}
     */
    alertsList(apiVersion, subscriptionId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling alertsList");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling alertsList");
      }

      let pathParams = {
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion,
        '$filter': opts['filter'],
        '$skiptoken': opts['skiptoken'],
        '$top': opts['top']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AlertListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.CostManagement/alerts', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the alertsListByAccount operation.
     * @callback module:api/AlertsApi~alertsListByAccountCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AlertListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List all alerts for an account.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview.
     * @param {String} billingAccountId BillingAccount ID
     * @param {String} enrollmentAccountId Enrollment Account Id
     * @param {Object} opts Optional parameters
     * @param {String} [filter] May be used to filter alerts by properties/definition/type, properties/definition/category, properties/definition/criteria, properties/costEntityId, properties/creationTime, properties/closeTime, properties/status, properties/source. Supported operators are 'eq','lt', 'gt', 'le', 'ge'.
     * @param {String} [skiptoken] Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls.
     * @param {Number} [top] May be used to limit the number of results to the most recent N alerts.
     * @param {module:api/AlertsApi~alertsListByAccountCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AlertListResult}
     */
    alertsListByAccount(apiVersion, billingAccountId, enrollmentAccountId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling alertsListByAccount");
      }
      // verify the required parameter 'billingAccountId' is set
      if (billingAccountId === undefined || billingAccountId === null) {
        throw new Error("Missing the required parameter 'billingAccountId' when calling alertsListByAccount");
      }
      // verify the required parameter 'enrollmentAccountId' is set
      if (enrollmentAccountId === undefined || enrollmentAccountId === null) {
        throw new Error("Missing the required parameter 'enrollmentAccountId' when calling alertsListByAccount");
      }

      let pathParams = {
        'billingAccountId': billingAccountId,
        'enrollmentAccountId': enrollmentAccountId
      };
      let queryParams = {
        'api-version': apiVersion,
        '$filter': opts['filter'],
        '$skiptoken': opts['skiptoken'],
        '$top': opts['top']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AlertListResult;
      return this.apiClient.callApi(
        '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}/providers/Microsoft.CostManagement/alerts', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the alertsListByDepartment operation.
     * @callback module:api/AlertsApi~alertsListByDepartmentCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AlertListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List all alerts for a department.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview.
     * @param {String} billingAccountId BillingAccount ID
     * @param {String} departmentId Department ID
     * @param {Object} opts Optional parameters
     * @param {String} [filter] May be used to filter alerts by properties/definition/type, properties/definition/category, properties/definition/criteria, properties/costEntityId, properties/creationTime, properties/closeTime, properties/status, properties/source. Supported operators are 'eq','lt', 'gt', 'le', 'ge'.
     * @param {String} [skiptoken] Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls.
     * @param {Number} [top] May be used to limit the number of results to the most recent N alerts.
     * @param {module:api/AlertsApi~alertsListByDepartmentCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AlertListResult}
     */
    alertsListByDepartment(apiVersion, billingAccountId, departmentId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling alertsListByDepartment");
      }
      // verify the required parameter 'billingAccountId' is set
      if (billingAccountId === undefined || billingAccountId === null) {
        throw new Error("Missing the required parameter 'billingAccountId' when calling alertsListByDepartment");
      }
      // verify the required parameter 'departmentId' is set
      if (departmentId === undefined || departmentId === null) {
        throw new Error("Missing the required parameter 'departmentId' when calling alertsListByDepartment");
      }

      let pathParams = {
        'billingAccountId': billingAccountId,
        'departmentId': departmentId
      };
      let queryParams = {
        'api-version': apiVersion,
        '$filter': opts['filter'],
        '$skiptoken': opts['skiptoken'],
        '$top': opts['top']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AlertListResult;
      return this.apiClient.callApi(
        '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}/providers/Microsoft.CostManagement/alerts', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the alertsListByEnrollment operation.
     * @callback module:api/AlertsApi~alertsListByEnrollmentCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AlertListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List all alerts for an enrollment.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview.
     * @param {String} billingAccountId BillingAccount ID
     * @param {Object} opts Optional parameters
     * @param {String} [filter] May be used to filter alerts by properties/definition/type, properties/definition/category, properties/definition/criteria, properties/costEntityId, properties/creationTime, properties/closeTime, properties/status, properties/source. Supported operators are 'eq','lt', 'gt', 'le', 'ge'.
     * @param {String} [skiptoken] Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls.
     * @param {Number} [top] May be used to limit the number of results to the most recent N alerts.
     * @param {module:api/AlertsApi~alertsListByEnrollmentCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AlertListResult}
     */
    alertsListByEnrollment(apiVersion, billingAccountId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling alertsListByEnrollment");
      }
      // verify the required parameter 'billingAccountId' is set
      if (billingAccountId === undefined || billingAccountId === null) {
        throw new Error("Missing the required parameter 'billingAccountId' when calling alertsListByEnrollment");
      }

      let pathParams = {
        'billingAccountId': billingAccountId
      };
      let queryParams = {
        'api-version': apiVersion,
        '$filter': opts['filter'],
        '$skiptoken': opts['skiptoken'],
        '$top': opts['top']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AlertListResult;
      return this.apiClient.callApi(
        '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.CostManagement/alerts', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the alertsListByManagementGroups operation.
     * @callback module:api/AlertsApi~alertsListByManagementGroupsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AlertListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List all alerts for Management Groups.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview.
     * @param {String} managementGroupId Management Group ID
     * @param {Object} opts Optional parameters
     * @param {String} [filter] May be used to filter alerts by properties/definition/type, properties/definition/category, properties/definition/criteria, properties/costEntityId, properties/creationTime, properties/closeTime, properties/status, properties/source. Supported operators are 'eq','lt', 'gt', 'le', 'ge'.
     * @param {String} [skiptoken] Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls.
     * @param {Number} [top] May be used to limit the number of results to the most recent N alerts.
     * @param {module:api/AlertsApi~alertsListByManagementGroupsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AlertListResult}
     */
    alertsListByManagementGroups(apiVersion, managementGroupId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling alertsListByManagementGroups");
      }
      // verify the required parameter 'managementGroupId' is set
      if (managementGroupId === undefined || managementGroupId === null) {
        throw new Error("Missing the required parameter 'managementGroupId' when calling alertsListByManagementGroups");
      }

      let pathParams = {
        'managementGroupId': managementGroupId
      };
      let queryParams = {
        'api-version': apiVersion,
        '$filter': opts['filter'],
        '$skiptoken': opts['skiptoken'],
        '$top': opts['top']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AlertListResult;
      return this.apiClient.callApi(
        '/providers/Microsoft.Management/managementGroups/{managementGroupId}/providers/Microsoft.CostManagement/alerts', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the alertsListByResourceGroupName operation.
     * @callback module:api/AlertsApi~alertsListByResourceGroupNameCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AlertListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List all alerts for a resource group under a subscription.
     * @param {String} subscriptionId Azure Subscription ID.
     * @param {String} resourceGroupName Azure Resource Group Name.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview.
     * @param {Object} opts Optional parameters
     * @param {String} [filter] May be used to filter alerts by properties/definition/type, properties/definition/category, properties/definition/criteria, properties/costEntityId, properties/creationTime, properties/closeTime, properties/status, properties/source. Supported operators are 'eq','lt', 'gt', 'le', 'ge'.
     * @param {String} [skiptoken] Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls.
     * @param {Number} [top] May be used to limit the number of results to the most recent N alerts.
     * @param {module:api/AlertsApi~alertsListByResourceGroupNameCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AlertListResult}
     */
    alertsListByResourceGroupName(subscriptionId, resourceGroupName, apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling alertsListByResourceGroupName");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling alertsListByResourceGroupName");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling alertsListByResourceGroupName");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName
      };
      let queryParams = {
        'api-version': apiVersion,
        '$filter': opts['filter'],
        '$skiptoken': opts['skiptoken'],
        '$top': opts['top']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AlertListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CostManagement/alerts', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the alertsUpdateBillingAccountAlertStatus operation.
     * @callback module:api/AlertsApi~alertsUpdateBillingAccountAlertStatusCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Alert} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update alerts status for billing account.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview.
     * @param {String} billingAccountId BillingAccount ID
     * @param {String} alertId Alert ID.
     * @param {module:model/Alert} parameters Parameters supplied to the update alerts status operation.
     * @param {module:api/AlertsApi~alertsUpdateBillingAccountAlertStatusCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Alert}
     */
    alertsUpdateBillingAccountAlertStatus(apiVersion, billingAccountId, alertId, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling alertsUpdateBillingAccountAlertStatus");
      }
      // verify the required parameter 'billingAccountId' is set
      if (billingAccountId === undefined || billingAccountId === null) {
        throw new Error("Missing the required parameter 'billingAccountId' when calling alertsUpdateBillingAccountAlertStatus");
      }
      // verify the required parameter 'alertId' is set
      if (alertId === undefined || alertId === null) {
        throw new Error("Missing the required parameter 'alertId' when calling alertsUpdateBillingAccountAlertStatus");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling alertsUpdateBillingAccountAlertStatus");
      }

      let pathParams = {
        'billingAccountId': billingAccountId,
        'alertId': alertId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Alert;
      return this.apiClient.callApi(
        '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.CostManagement/alerts/{alertId}/updateStatus', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the alertsUpdateDepartmentsAlertStatus operation.
     * @callback module:api/AlertsApi~alertsUpdateDepartmentsAlertStatusCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Alert} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update alerts status for a department.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview.
     * @param {String} billingAccountId BillingAccount ID
     * @param {String} departmentId Department ID
     * @param {String} alertId Alert ID.
     * @param {module:model/Alert} parameters Parameters supplied to the update alerts status operation.
     * @param {module:api/AlertsApi~alertsUpdateDepartmentsAlertStatusCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Alert}
     */
    alertsUpdateDepartmentsAlertStatus(apiVersion, billingAccountId, departmentId, alertId, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling alertsUpdateDepartmentsAlertStatus");
      }
      // verify the required parameter 'billingAccountId' is set
      if (billingAccountId === undefined || billingAccountId === null) {
        throw new Error("Missing the required parameter 'billingAccountId' when calling alertsUpdateDepartmentsAlertStatus");
      }
      // verify the required parameter 'departmentId' is set
      if (departmentId === undefined || departmentId === null) {
        throw new Error("Missing the required parameter 'departmentId' when calling alertsUpdateDepartmentsAlertStatus");
      }
      // verify the required parameter 'alertId' is set
      if (alertId === undefined || alertId === null) {
        throw new Error("Missing the required parameter 'alertId' when calling alertsUpdateDepartmentsAlertStatus");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling alertsUpdateDepartmentsAlertStatus");
      }

      let pathParams = {
        'billingAccountId': billingAccountId,
        'departmentId': departmentId,
        'alertId': alertId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Alert;
      return this.apiClient.callApi(
        '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}/providers/Microsoft.CostManagement/alerts/{alertId}/updateStatus', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the alertsUpdateEnrollmentAccountAlertStatus operation.
     * @callback module:api/AlertsApi~alertsUpdateEnrollmentAccountAlertStatusCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Alert} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update alerts status for an enrollment account.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview.
     * @param {String} billingAccountId BillingAccount ID
     * @param {String} enrollmentAccountId Enrollment Account Id
     * @param {String} alertId Alert ID.
     * @param {module:model/Alert} parameters Parameters supplied to the update alerts status operation.
     * @param {module:api/AlertsApi~alertsUpdateEnrollmentAccountAlertStatusCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Alert}
     */
    alertsUpdateEnrollmentAccountAlertStatus(apiVersion, billingAccountId, enrollmentAccountId, alertId, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling alertsUpdateEnrollmentAccountAlertStatus");
      }
      // verify the required parameter 'billingAccountId' is set
      if (billingAccountId === undefined || billingAccountId === null) {
        throw new Error("Missing the required parameter 'billingAccountId' when calling alertsUpdateEnrollmentAccountAlertStatus");
      }
      // verify the required parameter 'enrollmentAccountId' is set
      if (enrollmentAccountId === undefined || enrollmentAccountId === null) {
        throw new Error("Missing the required parameter 'enrollmentAccountId' when calling alertsUpdateEnrollmentAccountAlertStatus");
      }
      // verify the required parameter 'alertId' is set
      if (alertId === undefined || alertId === null) {
        throw new Error("Missing the required parameter 'alertId' when calling alertsUpdateEnrollmentAccountAlertStatus");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling alertsUpdateEnrollmentAccountAlertStatus");
      }

      let pathParams = {
        'billingAccountId': billingAccountId,
        'enrollmentAccountId': enrollmentAccountId,
        'alertId': alertId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Alert;
      return this.apiClient.callApi(
        '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}/providers/Microsoft.CostManagement/alerts/{alertId}/updateStatus', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the alertsUpdateManagementGroupAlertStatus operation.
     * @callback module:api/AlertsApi~alertsUpdateManagementGroupAlertStatusCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Alert} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update alerts status for management group.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview.
     * @param {String} managementGroupId Management Group ID
     * @param {String} alertId Alert ID.
     * @param {module:model/Alert} parameters Parameters supplied to the update alerts status operation.
     * @param {module:api/AlertsApi~alertsUpdateManagementGroupAlertStatusCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Alert}
     */
    alertsUpdateManagementGroupAlertStatus(apiVersion, managementGroupId, alertId, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling alertsUpdateManagementGroupAlertStatus");
      }
      // verify the required parameter 'managementGroupId' is set
      if (managementGroupId === undefined || managementGroupId === null) {
        throw new Error("Missing the required parameter 'managementGroupId' when calling alertsUpdateManagementGroupAlertStatus");
      }
      // verify the required parameter 'alertId' is set
      if (alertId === undefined || alertId === null) {
        throw new Error("Missing the required parameter 'alertId' when calling alertsUpdateManagementGroupAlertStatus");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling alertsUpdateManagementGroupAlertStatus");
      }

      let pathParams = {
        'managementGroupId': managementGroupId,
        'alertId': alertId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Alert;
      return this.apiClient.callApi(
        '/providers/Microsoft.Management/managementGroups/{managementGroupId}/providers/Microsoft.CostManagement/alerts/{alertId}/UpdateStatus', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the alertsUpdateResourceGroupNameAlertStatus operation.
     * @callback module:api/AlertsApi~alertsUpdateResourceGroupNameAlertStatusCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Alert} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update alerts status for a resource group under a subscription.
     * @param {String} subscriptionId Azure Subscription ID.
     * @param {String} resourceGroupName Azure Resource Group Name.
     * @param {String} alertId Alert ID.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview.
     * @param {module:model/Alert} parameters Parameters supplied to the update alerts status operation.
     * @param {module:api/AlertsApi~alertsUpdateResourceGroupNameAlertStatusCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Alert}
     */
    alertsUpdateResourceGroupNameAlertStatus(subscriptionId, resourceGroupName, alertId, apiVersion, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling alertsUpdateResourceGroupNameAlertStatus");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling alertsUpdateResourceGroupNameAlertStatus");
      }
      // verify the required parameter 'alertId' is set
      if (alertId === undefined || alertId === null) {
        throw new Error("Missing the required parameter 'alertId' when calling alertsUpdateResourceGroupNameAlertStatus");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling alertsUpdateResourceGroupNameAlertStatus");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling alertsUpdateResourceGroupNameAlertStatus");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'alertId': alertId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Alert;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CostManagement/alerts/{alertId}/updateStatus', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the alertsUpdateSubscriptionAlertStatus operation.
     * @callback module:api/AlertsApi~alertsUpdateSubscriptionAlertStatusCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Alert} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update alerts status for a subscription.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview.
     * @param {String} subscriptionId Azure Subscription ID.
     * @param {String} alertId Alert ID.
     * @param {module:model/Alert} parameters Parameters supplied to the update alerts status operation.
     * @param {module:api/AlertsApi~alertsUpdateSubscriptionAlertStatusCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Alert}
     */
    alertsUpdateSubscriptionAlertStatus(apiVersion, subscriptionId, alertId, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling alertsUpdateSubscriptionAlertStatus");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling alertsUpdateSubscriptionAlertStatus");
      }
      // verify the required parameter 'alertId' is set
      if (alertId === undefined || alertId === null) {
        throw new Error("Missing the required parameter 'alertId' when calling alertsUpdateSubscriptionAlertStatus");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling alertsUpdateSubscriptionAlertStatus");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'alertId': alertId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Alert;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.CostManagement/alerts/{alertId}/updateStatus', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
