/**
 * CostManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-08-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ConnectorDefinition from '../model/ConnectorDefinition';
import ConnectorDefinitionListResult from '../model/ConnectorDefinitionListResult';
import ErrorResponse from '../model/ErrorResponse';

/**
* Connectors service.
* @module api/ConnectorsApi
* @version 2018-08-01-preview
*/
export default class ConnectorsApi {

    /**
    * Constructs a new ConnectorsApi. 
    * @alias module:api/ConnectorsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the connectorCreateOrUpdate operation.
     * @callback module:api/ConnectorsApi~connectorCreateOrUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ConnectorDefinition} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create or update a connector definition
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview.
     * @param {String} subscriptionId Azure Subscription ID.
     * @param {String} resourceGroupName Azure Resource Group Name.
     * @param {String} connectorName Connector Name.
     * @param {module:model/ConnectorDefinition} connector Connector details
     * @param {module:api/ConnectorsApi~connectorCreateOrUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ConnectorDefinition}
     */
    connectorCreateOrUpdate(apiVersion, subscriptionId, resourceGroupName, connectorName, connector, callback) {
      let postBody = connector;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling connectorCreateOrUpdate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling connectorCreateOrUpdate");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling connectorCreateOrUpdate");
      }
      // verify the required parameter 'connectorName' is set
      if (connectorName === undefined || connectorName === null) {
        throw new Error("Missing the required parameter 'connectorName' when calling connectorCreateOrUpdate");
      }
      // verify the required parameter 'connector' is set
      if (connector === undefined || connector === null) {
        throw new Error("Missing the required parameter 'connector' when calling connectorCreateOrUpdate");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'connectorName': connectorName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ConnectorDefinition;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.CostManagement/connectors/{connectorName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the connectorDelete operation.
     * @callback module:api/ConnectorsApi~connectorDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete a connector definition
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview.
     * @param {String} subscriptionId Azure Subscription ID.
     * @param {String} resourceGroupName Azure Resource Group Name.
     * @param {String} connectorName Connector Name.
     * @param {module:api/ConnectorsApi~connectorDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    connectorDelete(apiVersion, subscriptionId, resourceGroupName, connectorName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling connectorDelete");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling connectorDelete");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling connectorDelete");
      }
      // verify the required parameter 'connectorName' is set
      if (connectorName === undefined || connectorName === null) {
        throw new Error("Missing the required parameter 'connectorName' when calling connectorDelete");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'connectorName': connectorName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.CostManagement/connectors/{connectorName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the connectorGet operation.
     * @callback module:api/ConnectorsApi~connectorGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ConnectorDefinition} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a connector definition
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview.
     * @param {String} subscriptionId Azure Subscription ID.
     * @param {String} resourceGroupName Azure Resource Group Name.
     * @param {String} connectorName Connector Name.
     * @param {module:api/ConnectorsApi~connectorGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ConnectorDefinition}
     */
    connectorGet(apiVersion, subscriptionId, resourceGroupName, connectorName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling connectorGet");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling connectorGet");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling connectorGet");
      }
      // verify the required parameter 'connectorName' is set
      if (connectorName === undefined || connectorName === null) {
        throw new Error("Missing the required parameter 'connectorName' when calling connectorGet");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'connectorName': connectorName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ConnectorDefinition;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.CostManagement/connectors/{connectorName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the connectorList operation.
     * @callback module:api/ConnectorsApi~connectorListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ConnectorDefinitionListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List all connector definitions for a subscription
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview.
     * @param {String} subscriptionId Azure Subscription ID.
     * @param {module:api/ConnectorsApi~connectorListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ConnectorDefinitionListResult}
     */
    connectorList(apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling connectorList");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling connectorList");
      }

      let pathParams = {
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ConnectorDefinitionListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.CostManagement/connectors', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the connectorListByResourceGroupName operation.
     * @callback module:api/ConnectorsApi~connectorListByResourceGroupNameCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ConnectorDefinitionListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List all connector definitions for a resource group under a subscription.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview.
     * @param {String} subscriptionId Azure Subscription ID.
     * @param {String} resourceGroupName Azure Resource Group Name.
     * @param {module:api/ConnectorsApi~connectorListByResourceGroupNameCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ConnectorDefinitionListResult}
     */
    connectorListByResourceGroupName(apiVersion, subscriptionId, resourceGroupName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling connectorListByResourceGroupName");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling connectorListByResourceGroupName");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling connectorListByResourceGroupName");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ConnectorDefinitionListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.CostManagement/connectors', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the connectorUpdate operation.
     * @callback module:api/ConnectorsApi~connectorUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ConnectorDefinition} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update a connector definition
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview.
     * @param {String} subscriptionId Azure Subscription ID.
     * @param {String} resourceGroupName Azure Resource Group Name.
     * @param {String} connectorName Connector Name.
     * @param {module:model/ConnectorDefinition} connector Connector details
     * @param {module:api/ConnectorsApi~connectorUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ConnectorDefinition}
     */
    connectorUpdate(apiVersion, subscriptionId, resourceGroupName, connectorName, connector, callback) {
      let postBody = connector;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling connectorUpdate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling connectorUpdate");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling connectorUpdate");
      }
      // verify the required parameter 'connectorName' is set
      if (connectorName === undefined || connectorName === null) {
        throw new Error("Missing the required parameter 'connectorName' when calling connectorUpdate");
      }
      // verify the required parameter 'connector' is set
      if (connector === undefined || connector === null) {
        throw new Error("Missing the required parameter 'connector' when calling connectorUpdate");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'connectorName': connectorName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ConnectorDefinition;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.CostManagement/connectors/{connectorName}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
