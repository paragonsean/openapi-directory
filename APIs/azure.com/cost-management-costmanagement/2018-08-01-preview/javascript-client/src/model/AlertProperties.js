/**
 * CostManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-08-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AlertDefinition from './AlertDefinition';

/**
 * The AlertProperties model module.
 * @module model/AlertProperties
 * @version 2018-08-01-preview
 */
class AlertProperties {
    /**
     * Constructs a new <code>AlertProperties</code>.
     * The properties of an Alert.
     * @alias module:model/AlertProperties
     */
    constructor() { 
        
        AlertProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AlertProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AlertProperties} obj Optional instance to populate.
     * @return {module:model/AlertProperties} The populated <code>AlertProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AlertProperties();

            if (data.hasOwnProperty('closeTime')) {
                obj['closeTime'] = ApiClient.convertToType(data['closeTime'], 'Date');
            }
            if (data.hasOwnProperty('costEntityId')) {
                obj['costEntityId'] = ApiClient.convertToType(data['costEntityId'], 'String');
            }
            if (data.hasOwnProperty('creationTime')) {
                obj['creationTime'] = ApiClient.convertToType(data['creationTime'], 'Date');
            }
            if (data.hasOwnProperty('definition')) {
                obj['definition'] = AlertDefinition.constructFromObject(data['definition']);
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('details')) {
                obj['details'] = ApiClient.convertToType(data['details'], {'String': 'String'});
            }
            if (data.hasOwnProperty('modificationTime')) {
                obj['modificationTime'] = ApiClient.convertToType(data['modificationTime'], 'Date');
            }
            if (data.hasOwnProperty('modificationUsername')) {
                obj['modificationUsername'] = ApiClient.convertToType(data['modificationUsername'], 'String');
            }
            if (data.hasOwnProperty('scope')) {
                obj['scope'] = ApiClient.convertToType(data['scope'], 'String');
            }
            if (data.hasOwnProperty('source')) {
                obj['source'] = ApiClient.convertToType(data['source'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('statusModificationTime')) {
                obj['statusModificationTime'] = ApiClient.convertToType(data['statusModificationTime'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AlertProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AlertProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['costEntityId'] && !(typeof data['costEntityId'] === 'string' || data['costEntityId'] instanceof String)) {
            throw new Error("Expected the field `costEntityId` to be a primitive type in the JSON string but got " + data['costEntityId']);
        }
        // validate the optional field `definition`
        if (data['definition']) { // data not null
          AlertDefinition.validateJSON(data['definition']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['modificationUsername'] && !(typeof data['modificationUsername'] === 'string' || data['modificationUsername'] instanceof String)) {
            throw new Error("Expected the field `modificationUsername` to be a primitive type in the JSON string but got " + data['modificationUsername']);
        }
        // ensure the json data is a string
        if (data['scope'] && !(typeof data['scope'] === 'string' || data['scope'] instanceof String)) {
            throw new Error("Expected the field `scope` to be a primitive type in the JSON string but got " + data['scope']);
        }
        // ensure the json data is a string
        if (data['source'] && !(typeof data['source'] === 'string' || data['source'] instanceof String)) {
            throw new Error("Expected the field `source` to be a primitive type in the JSON string but got " + data['source']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }

        return true;
    }


}



/**
 * The time when the alert was closed (resolved / overridden).
 * @member {Date} closeTime
 */
AlertProperties.prototype['closeTime'] = undefined;

/**
 * The id of the creating cost-entity (budget, invoice, credit).
 * @member {String} costEntityId
 */
AlertProperties.prototype['costEntityId'] = undefined;

/**
 * The time when the alert was created.
 * @member {Date} creationTime
 */
AlertProperties.prototype['creationTime'] = undefined;

/**
 * @member {module:model/AlertDefinition} definition
 */
AlertProperties.prototype['definition'] = undefined;

/**
 * Description of an alert.
 * @member {String} description
 */
AlertProperties.prototype['description'] = undefined;

/**
 * Specific details of an alert - key-value dictionary.
 * @member {Object.<String, String>} details
 */
AlertProperties.prototype['details'] = undefined;

/**
 * The current status when alert was modified.
 * @member {Date} modificationTime
 */
AlertProperties.prototype['modificationTime'] = undefined;

/**
 * The username who modified the alert.
 * @member {String} modificationUsername
 */
AlertProperties.prototype['modificationUsername'] = undefined;

/**
 * The scope of an alert.
 * @member {String} scope
 */
AlertProperties.prototype['scope'] = undefined;

/**
 * The source of an Alert
 * @member {module:model/AlertProperties.SourceEnum} source
 */
AlertProperties.prototype['source'] = undefined;

/**
 * The current status of the alert.
 * @member {module:model/AlertProperties.StatusEnum} status
 */
AlertProperties.prototype['status'] = undefined;

/**
 * The current status when alert status was modified.
 * @member {Date} statusModificationTime
 */
AlertProperties.prototype['statusModificationTime'] = undefined;





/**
 * Allowed values for the <code>source</code> property.
 * @enum {String}
 * @readonly
 */
AlertProperties['SourceEnum'] = {

    /**
     * value: "Preset"
     * @const
     */
    "Preset": "Preset",

    /**
     * value: "User"
     * @const
     */
    "User": "User"
};


/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
AlertProperties['StatusEnum'] = {

    /**
     * value: "Active"
     * @const
     */
    "Active": "Active",

    /**
     * value: "Overridden"
     * @const
     */
    "Overridden": "Overridden",

    /**
     * value: "Resolved"
     * @const
     */
    "Resolved": "Resolved",

    /**
     * value: "Dismissed"
     * @const
     */
    "Dismissed": "Dismissed"
};



export default AlertProperties;

