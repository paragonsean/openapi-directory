/**
 * CostManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-08-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Alert from './model/Alert';
import AlertDefinition from './model/AlertDefinition';
import AlertListResult from './model/AlertListResult';
import AlertProperties from './model/AlertProperties';
import CommonReportProperties from './model/CommonReportProperties';
import ConnectorCollectionErrorInfo from './model/ConnectorCollectionErrorInfo';
import ConnectorCollectionInfo from './model/ConnectorCollectionInfo';
import ConnectorDefinition from './model/ConnectorDefinition';
import ConnectorDefinitionListResult from './model/ConnectorDefinitionListResult';
import ConnectorProperties from './model/ConnectorProperties';
import Dimension from './model/Dimension';
import DimensionProperties from './model/DimensionProperties';
import DimensionsListResult from './model/DimensionsListResult';
import ErrorBase from './model/ErrorBase';
import ErrorDetails from './model/ErrorDetails';
import ErrorResponse from './model/ErrorResponse';
import Operation from './model/Operation';
import OperationDisplay from './model/OperationDisplay';
import OperationListResult from './model/OperationListResult';
import Query from './model/Query';
import QueryColumn from './model/QueryColumn';
import QueryProperties from './model/QueryProperties';
import QueryResult from './model/QueryResult';
import Report from './model/Report';
import ReportAggregation from './model/ReportAggregation';
import ReportColumnType from './model/ReportColumnType';
import ReportComparisonExpression from './model/ReportComparisonExpression';
import ReportDataset from './model/ReportDataset';
import ReportDatasetConfiguration from './model/ReportDatasetConfiguration';
import ReportDefinition from './model/ReportDefinition';
import ReportDeliveryDestination from './model/ReportDeliveryDestination';
import ReportDeliveryInfo from './model/ReportDeliveryInfo';
import ReportExecution from './model/ReportExecution';
import ReportExecutionListResult from './model/ReportExecutionListResult';
import ReportExecutionProperties from './model/ReportExecutionProperties';
import ReportFilter from './model/ReportFilter';
import ReportGrouping from './model/ReportGrouping';
import ReportListResult from './model/ReportListResult';
import ReportProperties from './model/ReportProperties';
import ReportRecurrencePeriod from './model/ReportRecurrencePeriod';
import ReportSchedule from './model/ReportSchedule';
import ReportTimePeriod from './model/ReportTimePeriod';
import Resource from './model/Resource';
import AlertsApi from './api/AlertsApi';
import ConnectorsApi from './api/ConnectorsApi';
import DimensionsApi from './api/DimensionsApi';
import OperationsApi from './api/OperationsApi';
import QueryApi from './api/QueryApi';
import ReportsApi from './api/ReportsApi';


/**
* JS API client generated by OpenAPI Generator.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var CostManagementClient = require('index'); // See note below*.
* var xxxSvc = new CostManagementClient.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new CostManagementClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new CostManagementClient.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new CostManagementClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2018-08-01-preview
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Alert model constructor.
     * @property {module:model/Alert}
     */
    Alert,

    /**
     * The AlertDefinition model constructor.
     * @property {module:model/AlertDefinition}
     */
    AlertDefinition,

    /**
     * The AlertListResult model constructor.
     * @property {module:model/AlertListResult}
     */
    AlertListResult,

    /**
     * The AlertProperties model constructor.
     * @property {module:model/AlertProperties}
     */
    AlertProperties,

    /**
     * The CommonReportProperties model constructor.
     * @property {module:model/CommonReportProperties}
     */
    CommonReportProperties,

    /**
     * The ConnectorCollectionErrorInfo model constructor.
     * @property {module:model/ConnectorCollectionErrorInfo}
     */
    ConnectorCollectionErrorInfo,

    /**
     * The ConnectorCollectionInfo model constructor.
     * @property {module:model/ConnectorCollectionInfo}
     */
    ConnectorCollectionInfo,

    /**
     * The ConnectorDefinition model constructor.
     * @property {module:model/ConnectorDefinition}
     */
    ConnectorDefinition,

    /**
     * The ConnectorDefinitionListResult model constructor.
     * @property {module:model/ConnectorDefinitionListResult}
     */
    ConnectorDefinitionListResult,

    /**
     * The ConnectorProperties model constructor.
     * @property {module:model/ConnectorProperties}
     */
    ConnectorProperties,

    /**
     * The Dimension model constructor.
     * @property {module:model/Dimension}
     */
    Dimension,

    /**
     * The DimensionProperties model constructor.
     * @property {module:model/DimensionProperties}
     */
    DimensionProperties,

    /**
     * The DimensionsListResult model constructor.
     * @property {module:model/DimensionsListResult}
     */
    DimensionsListResult,

    /**
     * The ErrorBase model constructor.
     * @property {module:model/ErrorBase}
     */
    ErrorBase,

    /**
     * The ErrorDetails model constructor.
     * @property {module:model/ErrorDetails}
     */
    ErrorDetails,

    /**
     * The ErrorResponse model constructor.
     * @property {module:model/ErrorResponse}
     */
    ErrorResponse,

    /**
     * The Operation model constructor.
     * @property {module:model/Operation}
     */
    Operation,

    /**
     * The OperationDisplay model constructor.
     * @property {module:model/OperationDisplay}
     */
    OperationDisplay,

    /**
     * The OperationListResult model constructor.
     * @property {module:model/OperationListResult}
     */
    OperationListResult,

    /**
     * The Query model constructor.
     * @property {module:model/Query}
     */
    Query,

    /**
     * The QueryColumn model constructor.
     * @property {module:model/QueryColumn}
     */
    QueryColumn,

    /**
     * The QueryProperties model constructor.
     * @property {module:model/QueryProperties}
     */
    QueryProperties,

    /**
     * The QueryResult model constructor.
     * @property {module:model/QueryResult}
     */
    QueryResult,

    /**
     * The Report model constructor.
     * @property {module:model/Report}
     */
    Report,

    /**
     * The ReportAggregation model constructor.
     * @property {module:model/ReportAggregation}
     */
    ReportAggregation,

    /**
     * The ReportColumnType model constructor.
     * @property {module:model/ReportColumnType}
     */
    ReportColumnType,

    /**
     * The ReportComparisonExpression model constructor.
     * @property {module:model/ReportComparisonExpression}
     */
    ReportComparisonExpression,

    /**
     * The ReportDataset model constructor.
     * @property {module:model/ReportDataset}
     */
    ReportDataset,

    /**
     * The ReportDatasetConfiguration model constructor.
     * @property {module:model/ReportDatasetConfiguration}
     */
    ReportDatasetConfiguration,

    /**
     * The ReportDefinition model constructor.
     * @property {module:model/ReportDefinition}
     */
    ReportDefinition,

    /**
     * The ReportDeliveryDestination model constructor.
     * @property {module:model/ReportDeliveryDestination}
     */
    ReportDeliveryDestination,

    /**
     * The ReportDeliveryInfo model constructor.
     * @property {module:model/ReportDeliveryInfo}
     */
    ReportDeliveryInfo,

    /**
     * The ReportExecution model constructor.
     * @property {module:model/ReportExecution}
     */
    ReportExecution,

    /**
     * The ReportExecutionListResult model constructor.
     * @property {module:model/ReportExecutionListResult}
     */
    ReportExecutionListResult,

    /**
     * The ReportExecutionProperties model constructor.
     * @property {module:model/ReportExecutionProperties}
     */
    ReportExecutionProperties,

    /**
     * The ReportFilter model constructor.
     * @property {module:model/ReportFilter}
     */
    ReportFilter,

    /**
     * The ReportGrouping model constructor.
     * @property {module:model/ReportGrouping}
     */
    ReportGrouping,

    /**
     * The ReportListResult model constructor.
     * @property {module:model/ReportListResult}
     */
    ReportListResult,

    /**
     * The ReportProperties model constructor.
     * @property {module:model/ReportProperties}
     */
    ReportProperties,

    /**
     * The ReportRecurrencePeriod model constructor.
     * @property {module:model/ReportRecurrencePeriod}
     */
    ReportRecurrencePeriod,

    /**
     * The ReportSchedule model constructor.
     * @property {module:model/ReportSchedule}
     */
    ReportSchedule,

    /**
     * The ReportTimePeriod model constructor.
     * @property {module:model/ReportTimePeriod}
     */
    ReportTimePeriod,

    /**
     * The Resource model constructor.
     * @property {module:model/Resource}
     */
    Resource,

    /**
    * The AlertsApi service constructor.
    * @property {module:api/AlertsApi}
    */
    AlertsApi,

    /**
    * The ConnectorsApi service constructor.
    * @property {module:api/ConnectorsApi}
    */
    ConnectorsApi,

    /**
    * The DimensionsApi service constructor.
    * @property {module:api/DimensionsApi}
    */
    DimensionsApi,

    /**
    * The OperationsApi service constructor.
    * @property {module:api/OperationsApi}
    */
    OperationsApi,

    /**
    * The QueryApi service constructor.
    * @property {module:api/QueryApi}
    */
    QueryApi,

    /**
    * The ReportsApi service constructor.
    * @property {module:api/ReportsApi}
    */
    ReportsApi
};
