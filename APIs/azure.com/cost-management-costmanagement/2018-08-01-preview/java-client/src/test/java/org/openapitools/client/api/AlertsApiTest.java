/*
 * CostManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-08-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Alert;
import org.openapitools.client.model.AlertListResult;
import org.openapitools.client.model.ErrorResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AlertsApi
 */
@Disabled
public class AlertsApiTest {

    private final AlertsApi api = new AlertsApi();

    /**
     * Gets an alert for Management Groups by alert ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void alertsGetAlertByManagementGroupsTest() throws ApiException {
        String apiVersion = null;
        String managementGroupId = null;
        String alertId = null;
        Alert response = api.alertsGetAlertByManagementGroups(apiVersion, managementGroupId, alertId);
        // TODO: test validations
    }

    /**
     * Gets the alert for an account by alert ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void alertsGetByAccountTest() throws ApiException {
        String apiVersion = null;
        String billingAccountId = null;
        String enrollmentAccountId = null;
        String alertId = null;
        Alert response = api.alertsGetByAccount(apiVersion, billingAccountId, enrollmentAccountId, alertId);
        // TODO: test validations
    }

    /**
     * Gets the alert for a department by alert ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void alertsGetByDepartmentTest() throws ApiException {
        String apiVersion = null;
        String billingAccountId = null;
        String departmentId = null;
        String alertId = null;
        Alert response = api.alertsGetByDepartment(apiVersion, billingAccountId, departmentId, alertId);
        // TODO: test validations
    }

    /**
     * Gets the alert for an enrollment by alert ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void alertsGetByEnrollmentTest() throws ApiException {
        String apiVersion = null;
        String billingAccountId = null;
        String alertId = null;
        Alert response = api.alertsGetByEnrollment(apiVersion, billingAccountId, alertId);
        // TODO: test validations
    }

    /**
     * Gets the alert for a resource group under a subscription by alert ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void alertsGetByResourceGroupNameTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String apiVersion = null;
        String alertId = null;
        Alert response = api.alertsGetByResourceGroupName(subscriptionId, resourceGroupName, apiVersion, alertId);
        // TODO: test validations
    }

    /**
     * Gets the alert for a subscription by alert ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void alertsGetBySubscriptionTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String alertId = null;
        Alert response = api.alertsGetBySubscription(apiVersion, subscriptionId, alertId);
        // TODO: test validations
    }

    /**
     * List all alerts for a subscription.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void alertsListTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String $filter = null;
        String $skiptoken = null;
        Integer $top = null;
        AlertListResult response = api.alertsList(apiVersion, subscriptionId, $filter, $skiptoken, $top);
        // TODO: test validations
    }

    /**
     * List all alerts for an account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void alertsListByAccountTest() throws ApiException {
        String apiVersion = null;
        String billingAccountId = null;
        String enrollmentAccountId = null;
        String $filter = null;
        String $skiptoken = null;
        Integer $top = null;
        AlertListResult response = api.alertsListByAccount(apiVersion, billingAccountId, enrollmentAccountId, $filter, $skiptoken, $top);
        // TODO: test validations
    }

    /**
     * List all alerts for a department.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void alertsListByDepartmentTest() throws ApiException {
        String apiVersion = null;
        String billingAccountId = null;
        String departmentId = null;
        String $filter = null;
        String $skiptoken = null;
        Integer $top = null;
        AlertListResult response = api.alertsListByDepartment(apiVersion, billingAccountId, departmentId, $filter, $skiptoken, $top);
        // TODO: test validations
    }

    /**
     * List all alerts for an enrollment.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void alertsListByEnrollmentTest() throws ApiException {
        String apiVersion = null;
        String billingAccountId = null;
        String $filter = null;
        String $skiptoken = null;
        Integer $top = null;
        AlertListResult response = api.alertsListByEnrollment(apiVersion, billingAccountId, $filter, $skiptoken, $top);
        // TODO: test validations
    }

    /**
     * List all alerts for Management Groups.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void alertsListByManagementGroupsTest() throws ApiException {
        String apiVersion = null;
        String managementGroupId = null;
        String $filter = null;
        String $skiptoken = null;
        Integer $top = null;
        AlertListResult response = api.alertsListByManagementGroups(apiVersion, managementGroupId, $filter, $skiptoken, $top);
        // TODO: test validations
    }

    /**
     * List all alerts for a resource group under a subscription.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void alertsListByResourceGroupNameTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String apiVersion = null;
        String $filter = null;
        String $skiptoken = null;
        Integer $top = null;
        AlertListResult response = api.alertsListByResourceGroupName(subscriptionId, resourceGroupName, apiVersion, $filter, $skiptoken, $top);
        // TODO: test validations
    }

    /**
     * Update alerts status for billing account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void alertsUpdateBillingAccountAlertStatusTest() throws ApiException {
        String apiVersion = null;
        String billingAccountId = null;
        String alertId = null;
        Alert parameters = null;
        Alert response = api.alertsUpdateBillingAccountAlertStatus(apiVersion, billingAccountId, alertId, parameters);
        // TODO: test validations
    }

    /**
     * Update alerts status for a department.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void alertsUpdateDepartmentsAlertStatusTest() throws ApiException {
        String apiVersion = null;
        String billingAccountId = null;
        String departmentId = null;
        String alertId = null;
        Alert parameters = null;
        Alert response = api.alertsUpdateDepartmentsAlertStatus(apiVersion, billingAccountId, departmentId, alertId, parameters);
        // TODO: test validations
    }

    /**
     * Update alerts status for an enrollment account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void alertsUpdateEnrollmentAccountAlertStatusTest() throws ApiException {
        String apiVersion = null;
        String billingAccountId = null;
        String enrollmentAccountId = null;
        String alertId = null;
        Alert parameters = null;
        Alert response = api.alertsUpdateEnrollmentAccountAlertStatus(apiVersion, billingAccountId, enrollmentAccountId, alertId, parameters);
        // TODO: test validations
    }

    /**
     * Update alerts status for management group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void alertsUpdateManagementGroupAlertStatusTest() throws ApiException {
        String apiVersion = null;
        String managementGroupId = null;
        String alertId = null;
        Alert parameters = null;
        Alert response = api.alertsUpdateManagementGroupAlertStatus(apiVersion, managementGroupId, alertId, parameters);
        // TODO: test validations
    }

    /**
     * Update alerts status for a resource group under a subscription.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void alertsUpdateResourceGroupNameAlertStatusTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String alertId = null;
        String apiVersion = null;
        Alert parameters = null;
        Alert response = api.alertsUpdateResourceGroupNameAlertStatus(subscriptionId, resourceGroupName, alertId, apiVersion, parameters);
        // TODO: test validations
    }

    /**
     * Update alerts status for a subscription.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void alertsUpdateSubscriptionAlertStatusTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String alertId = null;
        Alert parameters = null;
        Alert response = api.alertsUpdateSubscriptionAlertStatus(apiVersion, subscriptionId, alertId, parameters);
        // TODO: test validations
    }

}
