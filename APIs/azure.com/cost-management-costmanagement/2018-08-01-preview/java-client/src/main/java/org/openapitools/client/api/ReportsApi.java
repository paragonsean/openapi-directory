/*
 * CostManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-08-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.ErrorResponse;
import org.openapitools.client.model.Report;
import org.openapitools.client.model.ReportExecutionListResult;
import org.openapitools.client.model.ReportListResult;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ReportsApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public ReportsApi() {
        this(Configuration.getDefaultApiClient());
    }

    public ReportsApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for reportsCreateOrUpdate
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param reportName Report Name. (required)
     * @param parameters Parameters supplied to the CreateOrUpdate Report operation. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Created. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public okhttp3.Call reportsCreateOrUpdateCall(String apiVersion, String subscriptionId, String reportName, Report parameters, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = parameters;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/providers/Microsoft.CostManagement/reports/{reportName}"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "reportName" + "}", localVarApiClient.escapeString(reportName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call reportsCreateOrUpdateValidateBeforeCall(String apiVersion, String subscriptionId, String reportName, Report parameters, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling reportsCreateOrUpdate(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling reportsCreateOrUpdate(Async)");
        }

        // verify the required parameter 'reportName' is set
        if (reportName == null) {
            throw new ApiException("Missing the required parameter 'reportName' when calling reportsCreateOrUpdate(Async)");
        }

        // verify the required parameter 'parameters' is set
        if (parameters == null) {
            throw new ApiException("Missing the required parameter 'parameters' when calling reportsCreateOrUpdate(Async)");
        }

        return reportsCreateOrUpdateCall(apiVersion, subscriptionId, reportName, parameters, _callback);

    }

    /**
     * 
     * The operation to create or update a report. Update operation requires latest eTag to be set in the request mandatorily. You may obtain the latest eTag by performing a get operation. Create operation does not require eTag.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param reportName Report Name. (required)
     * @param parameters Parameters supplied to the CreateOrUpdate Report operation. (required)
     * @return Report
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Created. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public Report reportsCreateOrUpdate(String apiVersion, String subscriptionId, String reportName, Report parameters) throws ApiException {
        ApiResponse<Report> localVarResp = reportsCreateOrUpdateWithHttpInfo(apiVersion, subscriptionId, reportName, parameters);
        return localVarResp.getData();
    }

    /**
     * 
     * The operation to create or update a report. Update operation requires latest eTag to be set in the request mandatorily. You may obtain the latest eTag by performing a get operation. Create operation does not require eTag.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param reportName Report Name. (required)
     * @param parameters Parameters supplied to the CreateOrUpdate Report operation. (required)
     * @return ApiResponse&lt;Report&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Created. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public ApiResponse<Report> reportsCreateOrUpdateWithHttpInfo(String apiVersion, String subscriptionId, String reportName, Report parameters) throws ApiException {
        okhttp3.Call localVarCall = reportsCreateOrUpdateValidateBeforeCall(apiVersion, subscriptionId, reportName, parameters, null);
        Type localVarReturnType = new TypeToken<Report>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * The operation to create or update a report. Update operation requires latest eTag to be set in the request mandatorily. You may obtain the latest eTag by performing a get operation. Create operation does not require eTag.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param reportName Report Name. (required)
     * @param parameters Parameters supplied to the CreateOrUpdate Report operation. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Created. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public okhttp3.Call reportsCreateOrUpdateAsync(String apiVersion, String subscriptionId, String reportName, Report parameters, final ApiCallback<Report> _callback) throws ApiException {

        okhttp3.Call localVarCall = reportsCreateOrUpdateValidateBeforeCall(apiVersion, subscriptionId, reportName, parameters, _callback);
        Type localVarReturnType = new TypeToken<Report>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for reportsCreateOrUpdateByBillingAccount
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param billingAccountId BillingAccount ID (required)
     * @param reportName Report Name. (required)
     * @param parameters Parameters supplied to the CreateOrUpdate Report operation. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Created. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public okhttp3.Call reportsCreateOrUpdateByBillingAccountCall(String apiVersion, String billingAccountId, String reportName, Report parameters, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = parameters;

        // create path and map variables
        String localVarPath = "/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.CostManagement/reports/{reportName}"
            .replace("{" + "billingAccountId" + "}", localVarApiClient.escapeString(billingAccountId.toString()))
            .replace("{" + "reportName" + "}", localVarApiClient.escapeString(reportName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call reportsCreateOrUpdateByBillingAccountValidateBeforeCall(String apiVersion, String billingAccountId, String reportName, Report parameters, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling reportsCreateOrUpdateByBillingAccount(Async)");
        }

        // verify the required parameter 'billingAccountId' is set
        if (billingAccountId == null) {
            throw new ApiException("Missing the required parameter 'billingAccountId' when calling reportsCreateOrUpdateByBillingAccount(Async)");
        }

        // verify the required parameter 'reportName' is set
        if (reportName == null) {
            throw new ApiException("Missing the required parameter 'reportName' when calling reportsCreateOrUpdateByBillingAccount(Async)");
        }

        // verify the required parameter 'parameters' is set
        if (parameters == null) {
            throw new ApiException("Missing the required parameter 'parameters' when calling reportsCreateOrUpdateByBillingAccount(Async)");
        }

        return reportsCreateOrUpdateByBillingAccountCall(apiVersion, billingAccountId, reportName, parameters, _callback);

    }

    /**
     * 
     * The operation to create or update a report for billingAccount. Update operation requires latest eTag to be set in the request mandatorily. You may obtain the latest eTag by performing a get operation. Create operation does not require eTag.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param billingAccountId BillingAccount ID (required)
     * @param reportName Report Name. (required)
     * @param parameters Parameters supplied to the CreateOrUpdate Report operation. (required)
     * @return Report
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Created. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public Report reportsCreateOrUpdateByBillingAccount(String apiVersion, String billingAccountId, String reportName, Report parameters) throws ApiException {
        ApiResponse<Report> localVarResp = reportsCreateOrUpdateByBillingAccountWithHttpInfo(apiVersion, billingAccountId, reportName, parameters);
        return localVarResp.getData();
    }

    /**
     * 
     * The operation to create or update a report for billingAccount. Update operation requires latest eTag to be set in the request mandatorily. You may obtain the latest eTag by performing a get operation. Create operation does not require eTag.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param billingAccountId BillingAccount ID (required)
     * @param reportName Report Name. (required)
     * @param parameters Parameters supplied to the CreateOrUpdate Report operation. (required)
     * @return ApiResponse&lt;Report&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Created. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public ApiResponse<Report> reportsCreateOrUpdateByBillingAccountWithHttpInfo(String apiVersion, String billingAccountId, String reportName, Report parameters) throws ApiException {
        okhttp3.Call localVarCall = reportsCreateOrUpdateByBillingAccountValidateBeforeCall(apiVersion, billingAccountId, reportName, parameters, null);
        Type localVarReturnType = new TypeToken<Report>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * The operation to create or update a report for billingAccount. Update operation requires latest eTag to be set in the request mandatorily. You may obtain the latest eTag by performing a get operation. Create operation does not require eTag.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param billingAccountId BillingAccount ID (required)
     * @param reportName Report Name. (required)
     * @param parameters Parameters supplied to the CreateOrUpdate Report operation. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Created. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public okhttp3.Call reportsCreateOrUpdateByBillingAccountAsync(String apiVersion, String billingAccountId, String reportName, Report parameters, final ApiCallback<Report> _callback) throws ApiException {

        okhttp3.Call localVarCall = reportsCreateOrUpdateByBillingAccountValidateBeforeCall(apiVersion, billingAccountId, reportName, parameters, _callback);
        Type localVarReturnType = new TypeToken<Report>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for reportsCreateOrUpdateByDepartment
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param departmentId Department ID (required)
     * @param reportName Report Name. (required)
     * @param parameters Parameters supplied to the CreateOrUpdate Report operation. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Created. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public okhttp3.Call reportsCreateOrUpdateByDepartmentCall(String apiVersion, String departmentId, String reportName, Report parameters, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = parameters;

        // create path and map variables
        String localVarPath = "/providers/Microsoft.Billing/departments/{departmentId}/providers/Microsoft.CostManagement/reports/{reportName}"
            .replace("{" + "departmentId" + "}", localVarApiClient.escapeString(departmentId.toString()))
            .replace("{" + "reportName" + "}", localVarApiClient.escapeString(reportName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call reportsCreateOrUpdateByDepartmentValidateBeforeCall(String apiVersion, String departmentId, String reportName, Report parameters, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling reportsCreateOrUpdateByDepartment(Async)");
        }

        // verify the required parameter 'departmentId' is set
        if (departmentId == null) {
            throw new ApiException("Missing the required parameter 'departmentId' when calling reportsCreateOrUpdateByDepartment(Async)");
        }

        // verify the required parameter 'reportName' is set
        if (reportName == null) {
            throw new ApiException("Missing the required parameter 'reportName' when calling reportsCreateOrUpdateByDepartment(Async)");
        }

        // verify the required parameter 'parameters' is set
        if (parameters == null) {
            throw new ApiException("Missing the required parameter 'parameters' when calling reportsCreateOrUpdateByDepartment(Async)");
        }

        return reportsCreateOrUpdateByDepartmentCall(apiVersion, departmentId, reportName, parameters, _callback);

    }

    /**
     * 
     * The operation to create or update a report for department. Update operation requires latest eTag to be set in the request mandatorily. You may obtain the latest eTag by performing a get operation. Create operation does not require eTag.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param departmentId Department ID (required)
     * @param reportName Report Name. (required)
     * @param parameters Parameters supplied to the CreateOrUpdate Report operation. (required)
     * @return Report
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Created. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public Report reportsCreateOrUpdateByDepartment(String apiVersion, String departmentId, String reportName, Report parameters) throws ApiException {
        ApiResponse<Report> localVarResp = reportsCreateOrUpdateByDepartmentWithHttpInfo(apiVersion, departmentId, reportName, parameters);
        return localVarResp.getData();
    }

    /**
     * 
     * The operation to create or update a report for department. Update operation requires latest eTag to be set in the request mandatorily. You may obtain the latest eTag by performing a get operation. Create operation does not require eTag.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param departmentId Department ID (required)
     * @param reportName Report Name. (required)
     * @param parameters Parameters supplied to the CreateOrUpdate Report operation. (required)
     * @return ApiResponse&lt;Report&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Created. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public ApiResponse<Report> reportsCreateOrUpdateByDepartmentWithHttpInfo(String apiVersion, String departmentId, String reportName, Report parameters) throws ApiException {
        okhttp3.Call localVarCall = reportsCreateOrUpdateByDepartmentValidateBeforeCall(apiVersion, departmentId, reportName, parameters, null);
        Type localVarReturnType = new TypeToken<Report>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * The operation to create or update a report for department. Update operation requires latest eTag to be set in the request mandatorily. You may obtain the latest eTag by performing a get operation. Create operation does not require eTag.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param departmentId Department ID (required)
     * @param reportName Report Name. (required)
     * @param parameters Parameters supplied to the CreateOrUpdate Report operation. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Created. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public okhttp3.Call reportsCreateOrUpdateByDepartmentAsync(String apiVersion, String departmentId, String reportName, Report parameters, final ApiCallback<Report> _callback) throws ApiException {

        okhttp3.Call localVarCall = reportsCreateOrUpdateByDepartmentValidateBeforeCall(apiVersion, departmentId, reportName, parameters, _callback);
        Type localVarReturnType = new TypeToken<Report>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for reportsCreateOrUpdateByResourceGroupName
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param resourceGroupName Azure Resource Group Name. (required)
     * @param reportName Report Name. (required)
     * @param parameters Parameters supplied to the CreateOrUpdate Report operation. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Created. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public okhttp3.Call reportsCreateOrUpdateByResourceGroupNameCall(String apiVersion, String subscriptionId, String resourceGroupName, String reportName, Report parameters, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = parameters;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CostManagement/reports/{reportName}"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "reportName" + "}", localVarApiClient.escapeString(reportName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call reportsCreateOrUpdateByResourceGroupNameValidateBeforeCall(String apiVersion, String subscriptionId, String resourceGroupName, String reportName, Report parameters, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling reportsCreateOrUpdateByResourceGroupName(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling reportsCreateOrUpdateByResourceGroupName(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling reportsCreateOrUpdateByResourceGroupName(Async)");
        }

        // verify the required parameter 'reportName' is set
        if (reportName == null) {
            throw new ApiException("Missing the required parameter 'reportName' when calling reportsCreateOrUpdateByResourceGroupName(Async)");
        }

        // verify the required parameter 'parameters' is set
        if (parameters == null) {
            throw new ApiException("Missing the required parameter 'parameters' when calling reportsCreateOrUpdateByResourceGroupName(Async)");
        }

        return reportsCreateOrUpdateByResourceGroupNameCall(apiVersion, subscriptionId, resourceGroupName, reportName, parameters, _callback);

    }

    /**
     * 
     * The operation to create or update a report. Update operation requires latest eTag to be set in the request mandatorily. You may obtain the latest eTag by performing a get operation. Create operation does not require eTag.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param resourceGroupName Azure Resource Group Name. (required)
     * @param reportName Report Name. (required)
     * @param parameters Parameters supplied to the CreateOrUpdate Report operation. (required)
     * @return Report
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Created. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public Report reportsCreateOrUpdateByResourceGroupName(String apiVersion, String subscriptionId, String resourceGroupName, String reportName, Report parameters) throws ApiException {
        ApiResponse<Report> localVarResp = reportsCreateOrUpdateByResourceGroupNameWithHttpInfo(apiVersion, subscriptionId, resourceGroupName, reportName, parameters);
        return localVarResp.getData();
    }

    /**
     * 
     * The operation to create or update a report. Update operation requires latest eTag to be set in the request mandatorily. You may obtain the latest eTag by performing a get operation. Create operation does not require eTag.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param resourceGroupName Azure Resource Group Name. (required)
     * @param reportName Report Name. (required)
     * @param parameters Parameters supplied to the CreateOrUpdate Report operation. (required)
     * @return ApiResponse&lt;Report&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Created. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public ApiResponse<Report> reportsCreateOrUpdateByResourceGroupNameWithHttpInfo(String apiVersion, String subscriptionId, String resourceGroupName, String reportName, Report parameters) throws ApiException {
        okhttp3.Call localVarCall = reportsCreateOrUpdateByResourceGroupNameValidateBeforeCall(apiVersion, subscriptionId, resourceGroupName, reportName, parameters, null);
        Type localVarReturnType = new TypeToken<Report>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * The operation to create or update a report. Update operation requires latest eTag to be set in the request mandatorily. You may obtain the latest eTag by performing a get operation. Create operation does not require eTag.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param resourceGroupName Azure Resource Group Name. (required)
     * @param reportName Report Name. (required)
     * @param parameters Parameters supplied to the CreateOrUpdate Report operation. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Created. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public okhttp3.Call reportsCreateOrUpdateByResourceGroupNameAsync(String apiVersion, String subscriptionId, String resourceGroupName, String reportName, Report parameters, final ApiCallback<Report> _callback) throws ApiException {

        okhttp3.Call localVarCall = reportsCreateOrUpdateByResourceGroupNameValidateBeforeCall(apiVersion, subscriptionId, resourceGroupName, reportName, parameters, _callback);
        Type localVarReturnType = new TypeToken<Report>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for reportsDelete
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param reportName Report Name. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public okhttp3.Call reportsDeleteCall(String apiVersion, String subscriptionId, String reportName, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/providers/Microsoft.CostManagement/reports/{reportName}"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "reportName" + "}", localVarApiClient.escapeString(reportName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call reportsDeleteValidateBeforeCall(String apiVersion, String subscriptionId, String reportName, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling reportsDelete(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling reportsDelete(Async)");
        }

        // verify the required parameter 'reportName' is set
        if (reportName == null) {
            throw new ApiException("Missing the required parameter 'reportName' when calling reportsDelete(Async)");
        }

        return reportsDeleteCall(apiVersion, subscriptionId, reportName, _callback);

    }

    /**
     * 
     * The operation to delete a report.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param reportName Report Name. (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public void reportsDelete(String apiVersion, String subscriptionId, String reportName) throws ApiException {
        reportsDeleteWithHttpInfo(apiVersion, subscriptionId, reportName);
    }

    /**
     * 
     * The operation to delete a report.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param reportName Report Name. (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public ApiResponse<Void> reportsDeleteWithHttpInfo(String apiVersion, String subscriptionId, String reportName) throws ApiException {
        okhttp3.Call localVarCall = reportsDeleteValidateBeforeCall(apiVersion, subscriptionId, reportName, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     *  (asynchronously)
     * The operation to delete a report.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param reportName Report Name. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public okhttp3.Call reportsDeleteAsync(String apiVersion, String subscriptionId, String reportName, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = reportsDeleteValidateBeforeCall(apiVersion, subscriptionId, reportName, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for reportsDeleteByBillingAccount
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param billingAccountId BillingAccount ID (required)
     * @param reportName Report Name. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public okhttp3.Call reportsDeleteByBillingAccountCall(String apiVersion, String billingAccountId, String reportName, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.CostManagement/reports/{reportName}"
            .replace("{" + "billingAccountId" + "}", localVarApiClient.escapeString(billingAccountId.toString()))
            .replace("{" + "reportName" + "}", localVarApiClient.escapeString(reportName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call reportsDeleteByBillingAccountValidateBeforeCall(String apiVersion, String billingAccountId, String reportName, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling reportsDeleteByBillingAccount(Async)");
        }

        // verify the required parameter 'billingAccountId' is set
        if (billingAccountId == null) {
            throw new ApiException("Missing the required parameter 'billingAccountId' when calling reportsDeleteByBillingAccount(Async)");
        }

        // verify the required parameter 'reportName' is set
        if (reportName == null) {
            throw new ApiException("Missing the required parameter 'reportName' when calling reportsDeleteByBillingAccount(Async)");
        }

        return reportsDeleteByBillingAccountCall(apiVersion, billingAccountId, reportName, _callback);

    }

    /**
     * 
     * The operation to delete a report for billing account.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param billingAccountId BillingAccount ID (required)
     * @param reportName Report Name. (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public void reportsDeleteByBillingAccount(String apiVersion, String billingAccountId, String reportName) throws ApiException {
        reportsDeleteByBillingAccountWithHttpInfo(apiVersion, billingAccountId, reportName);
    }

    /**
     * 
     * The operation to delete a report for billing account.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param billingAccountId BillingAccount ID (required)
     * @param reportName Report Name. (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public ApiResponse<Void> reportsDeleteByBillingAccountWithHttpInfo(String apiVersion, String billingAccountId, String reportName) throws ApiException {
        okhttp3.Call localVarCall = reportsDeleteByBillingAccountValidateBeforeCall(apiVersion, billingAccountId, reportName, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     *  (asynchronously)
     * The operation to delete a report for billing account.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param billingAccountId BillingAccount ID (required)
     * @param reportName Report Name. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public okhttp3.Call reportsDeleteByBillingAccountAsync(String apiVersion, String billingAccountId, String reportName, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = reportsDeleteByBillingAccountValidateBeforeCall(apiVersion, billingAccountId, reportName, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for reportsDeleteByDepartment
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param departmentId Department ID (required)
     * @param reportName Report Name. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public okhttp3.Call reportsDeleteByDepartmentCall(String apiVersion, String departmentId, String reportName, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/providers/Microsoft.Billing/departments/{departmentId}/providers/Microsoft.CostManagement/reports/{reportName}"
            .replace("{" + "departmentId" + "}", localVarApiClient.escapeString(departmentId.toString()))
            .replace("{" + "reportName" + "}", localVarApiClient.escapeString(reportName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call reportsDeleteByDepartmentValidateBeforeCall(String apiVersion, String departmentId, String reportName, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling reportsDeleteByDepartment(Async)");
        }

        // verify the required parameter 'departmentId' is set
        if (departmentId == null) {
            throw new ApiException("Missing the required parameter 'departmentId' when calling reportsDeleteByDepartment(Async)");
        }

        // verify the required parameter 'reportName' is set
        if (reportName == null) {
            throw new ApiException("Missing the required parameter 'reportName' when calling reportsDeleteByDepartment(Async)");
        }

        return reportsDeleteByDepartmentCall(apiVersion, departmentId, reportName, _callback);

    }

    /**
     * 
     * The operation to delete a report for department.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param departmentId Department ID (required)
     * @param reportName Report Name. (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public void reportsDeleteByDepartment(String apiVersion, String departmentId, String reportName) throws ApiException {
        reportsDeleteByDepartmentWithHttpInfo(apiVersion, departmentId, reportName);
    }

    /**
     * 
     * The operation to delete a report for department.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param departmentId Department ID (required)
     * @param reportName Report Name. (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public ApiResponse<Void> reportsDeleteByDepartmentWithHttpInfo(String apiVersion, String departmentId, String reportName) throws ApiException {
        okhttp3.Call localVarCall = reportsDeleteByDepartmentValidateBeforeCall(apiVersion, departmentId, reportName, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     *  (asynchronously)
     * The operation to delete a report for department.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param departmentId Department ID (required)
     * @param reportName Report Name. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public okhttp3.Call reportsDeleteByDepartmentAsync(String apiVersion, String departmentId, String reportName, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = reportsDeleteByDepartmentValidateBeforeCall(apiVersion, departmentId, reportName, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for reportsDeleteByResourceGroupName
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param resourceGroupName Azure Resource Group Name. (required)
     * @param reportName Report Name. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public okhttp3.Call reportsDeleteByResourceGroupNameCall(String apiVersion, String subscriptionId, String resourceGroupName, String reportName, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CostManagement/reports/{reportName}"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "reportName" + "}", localVarApiClient.escapeString(reportName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call reportsDeleteByResourceGroupNameValidateBeforeCall(String apiVersion, String subscriptionId, String resourceGroupName, String reportName, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling reportsDeleteByResourceGroupName(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling reportsDeleteByResourceGroupName(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling reportsDeleteByResourceGroupName(Async)");
        }

        // verify the required parameter 'reportName' is set
        if (reportName == null) {
            throw new ApiException("Missing the required parameter 'reportName' when calling reportsDeleteByResourceGroupName(Async)");
        }

        return reportsDeleteByResourceGroupNameCall(apiVersion, subscriptionId, resourceGroupName, reportName, _callback);

    }

    /**
     * 
     * The operation to delete a report.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param resourceGroupName Azure Resource Group Name. (required)
     * @param reportName Report Name. (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public void reportsDeleteByResourceGroupName(String apiVersion, String subscriptionId, String resourceGroupName, String reportName) throws ApiException {
        reportsDeleteByResourceGroupNameWithHttpInfo(apiVersion, subscriptionId, resourceGroupName, reportName);
    }

    /**
     * 
     * The operation to delete a report.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param resourceGroupName Azure Resource Group Name. (required)
     * @param reportName Report Name. (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public ApiResponse<Void> reportsDeleteByResourceGroupNameWithHttpInfo(String apiVersion, String subscriptionId, String resourceGroupName, String reportName) throws ApiException {
        okhttp3.Call localVarCall = reportsDeleteByResourceGroupNameValidateBeforeCall(apiVersion, subscriptionId, resourceGroupName, reportName, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     *  (asynchronously)
     * The operation to delete a report.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param resourceGroupName Azure Resource Group Name. (required)
     * @param reportName Report Name. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public okhttp3.Call reportsDeleteByResourceGroupNameAsync(String apiVersion, String subscriptionId, String resourceGroupName, String reportName, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = reportsDeleteByResourceGroupNameValidateBeforeCall(apiVersion, subscriptionId, resourceGroupName, reportName, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for reportsExecute
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param reportName Report Name. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public okhttp3.Call reportsExecuteCall(String apiVersion, String subscriptionId, String reportName, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/providers/Microsoft.CostManagement/reports/{reportName}/run"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "reportName" + "}", localVarApiClient.escapeString(reportName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call reportsExecuteValidateBeforeCall(String apiVersion, String subscriptionId, String reportName, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling reportsExecute(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling reportsExecute(Async)");
        }

        // verify the required parameter 'reportName' is set
        if (reportName == null) {
            throw new ApiException("Missing the required parameter 'reportName' when calling reportsExecute(Async)");
        }

        return reportsExecuteCall(apiVersion, subscriptionId, reportName, _callback);

    }

    /**
     * 
     * The operation to execute a report.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param reportName Report Name. (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public void reportsExecute(String apiVersion, String subscriptionId, String reportName) throws ApiException {
        reportsExecuteWithHttpInfo(apiVersion, subscriptionId, reportName);
    }

    /**
     * 
     * The operation to execute a report.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param reportName Report Name. (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public ApiResponse<Void> reportsExecuteWithHttpInfo(String apiVersion, String subscriptionId, String reportName) throws ApiException {
        okhttp3.Call localVarCall = reportsExecuteValidateBeforeCall(apiVersion, subscriptionId, reportName, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     *  (asynchronously)
     * The operation to execute a report.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param reportName Report Name. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public okhttp3.Call reportsExecuteAsync(String apiVersion, String subscriptionId, String reportName, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = reportsExecuteValidateBeforeCall(apiVersion, subscriptionId, reportName, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for reportsExecuteByBillingAccount
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param billingAccountId BillingAccount ID (required)
     * @param reportName Report Name. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public okhttp3.Call reportsExecuteByBillingAccountCall(String apiVersion, String billingAccountId, String reportName, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.CostManagement/reports/{reportName}/run"
            .replace("{" + "billingAccountId" + "}", localVarApiClient.escapeString(billingAccountId.toString()))
            .replace("{" + "reportName" + "}", localVarApiClient.escapeString(reportName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call reportsExecuteByBillingAccountValidateBeforeCall(String apiVersion, String billingAccountId, String reportName, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling reportsExecuteByBillingAccount(Async)");
        }

        // verify the required parameter 'billingAccountId' is set
        if (billingAccountId == null) {
            throw new ApiException("Missing the required parameter 'billingAccountId' when calling reportsExecuteByBillingAccount(Async)");
        }

        // verify the required parameter 'reportName' is set
        if (reportName == null) {
            throw new ApiException("Missing the required parameter 'reportName' when calling reportsExecuteByBillingAccount(Async)");
        }

        return reportsExecuteByBillingAccountCall(apiVersion, billingAccountId, reportName, _callback);

    }

    /**
     * 
     * The operation to execute a report by billing account.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param billingAccountId BillingAccount ID (required)
     * @param reportName Report Name. (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public void reportsExecuteByBillingAccount(String apiVersion, String billingAccountId, String reportName) throws ApiException {
        reportsExecuteByBillingAccountWithHttpInfo(apiVersion, billingAccountId, reportName);
    }

    /**
     * 
     * The operation to execute a report by billing account.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param billingAccountId BillingAccount ID (required)
     * @param reportName Report Name. (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public ApiResponse<Void> reportsExecuteByBillingAccountWithHttpInfo(String apiVersion, String billingAccountId, String reportName) throws ApiException {
        okhttp3.Call localVarCall = reportsExecuteByBillingAccountValidateBeforeCall(apiVersion, billingAccountId, reportName, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     *  (asynchronously)
     * The operation to execute a report by billing account.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param billingAccountId BillingAccount ID (required)
     * @param reportName Report Name. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public okhttp3.Call reportsExecuteByBillingAccountAsync(String apiVersion, String billingAccountId, String reportName, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = reportsExecuteByBillingAccountValidateBeforeCall(apiVersion, billingAccountId, reportName, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for reportsExecuteByDepartment
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param departmentId Department ID (required)
     * @param reportName Report Name. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public okhttp3.Call reportsExecuteByDepartmentCall(String apiVersion, String departmentId, String reportName, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/providers/Microsoft.Billing/departments/{departmentId}/providers/Microsoft.CostManagement/reports/{reportName}/run"
            .replace("{" + "departmentId" + "}", localVarApiClient.escapeString(departmentId.toString()))
            .replace("{" + "reportName" + "}", localVarApiClient.escapeString(reportName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call reportsExecuteByDepartmentValidateBeforeCall(String apiVersion, String departmentId, String reportName, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling reportsExecuteByDepartment(Async)");
        }

        // verify the required parameter 'departmentId' is set
        if (departmentId == null) {
            throw new ApiException("Missing the required parameter 'departmentId' when calling reportsExecuteByDepartment(Async)");
        }

        // verify the required parameter 'reportName' is set
        if (reportName == null) {
            throw new ApiException("Missing the required parameter 'reportName' when calling reportsExecuteByDepartment(Async)");
        }

        return reportsExecuteByDepartmentCall(apiVersion, departmentId, reportName, _callback);

    }

    /**
     * 
     * The operation to execute a report by department.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param departmentId Department ID (required)
     * @param reportName Report Name. (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public void reportsExecuteByDepartment(String apiVersion, String departmentId, String reportName) throws ApiException {
        reportsExecuteByDepartmentWithHttpInfo(apiVersion, departmentId, reportName);
    }

    /**
     * 
     * The operation to execute a report by department.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param departmentId Department ID (required)
     * @param reportName Report Name. (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public ApiResponse<Void> reportsExecuteByDepartmentWithHttpInfo(String apiVersion, String departmentId, String reportName) throws ApiException {
        okhttp3.Call localVarCall = reportsExecuteByDepartmentValidateBeforeCall(apiVersion, departmentId, reportName, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     *  (asynchronously)
     * The operation to execute a report by department.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param departmentId Department ID (required)
     * @param reportName Report Name. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public okhttp3.Call reportsExecuteByDepartmentAsync(String apiVersion, String departmentId, String reportName, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = reportsExecuteByDepartmentValidateBeforeCall(apiVersion, departmentId, reportName, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for reportsExecuteByResourceGroupName
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param resourceGroupName Azure Resource Group Name. (required)
     * @param reportName Report Name. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public okhttp3.Call reportsExecuteByResourceGroupNameCall(String apiVersion, String subscriptionId, String resourceGroupName, String reportName, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CostManagement/reports/{reportName}/run"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "reportName" + "}", localVarApiClient.escapeString(reportName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call reportsExecuteByResourceGroupNameValidateBeforeCall(String apiVersion, String subscriptionId, String resourceGroupName, String reportName, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling reportsExecuteByResourceGroupName(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling reportsExecuteByResourceGroupName(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling reportsExecuteByResourceGroupName(Async)");
        }

        // verify the required parameter 'reportName' is set
        if (reportName == null) {
            throw new ApiException("Missing the required parameter 'reportName' when calling reportsExecuteByResourceGroupName(Async)");
        }

        return reportsExecuteByResourceGroupNameCall(apiVersion, subscriptionId, resourceGroupName, reportName, _callback);

    }

    /**
     * 
     * The operation to execute a report.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param resourceGroupName Azure Resource Group Name. (required)
     * @param reportName Report Name. (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public void reportsExecuteByResourceGroupName(String apiVersion, String subscriptionId, String resourceGroupName, String reportName) throws ApiException {
        reportsExecuteByResourceGroupNameWithHttpInfo(apiVersion, subscriptionId, resourceGroupName, reportName);
    }

    /**
     * 
     * The operation to execute a report.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param resourceGroupName Azure Resource Group Name. (required)
     * @param reportName Report Name. (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public ApiResponse<Void> reportsExecuteByResourceGroupNameWithHttpInfo(String apiVersion, String subscriptionId, String resourceGroupName, String reportName) throws ApiException {
        okhttp3.Call localVarCall = reportsExecuteByResourceGroupNameValidateBeforeCall(apiVersion, subscriptionId, resourceGroupName, reportName, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     *  (asynchronously)
     * The operation to execute a report.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param resourceGroupName Azure Resource Group Name. (required)
     * @param reportName Report Name. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public okhttp3.Call reportsExecuteByResourceGroupNameAsync(String apiVersion, String subscriptionId, String resourceGroupName, String reportName, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = reportsExecuteByResourceGroupNameValidateBeforeCall(apiVersion, subscriptionId, resourceGroupName, reportName, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for reportsGet
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param reportName Report Name. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public okhttp3.Call reportsGetCall(String apiVersion, String subscriptionId, String reportName, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/providers/Microsoft.CostManagement/reports/{reportName}"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "reportName" + "}", localVarApiClient.escapeString(reportName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call reportsGetValidateBeforeCall(String apiVersion, String subscriptionId, String reportName, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling reportsGet(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling reportsGet(Async)");
        }

        // verify the required parameter 'reportName' is set
        if (reportName == null) {
            throw new ApiException("Missing the required parameter 'reportName' when calling reportsGet(Async)");
        }

        return reportsGetCall(apiVersion, subscriptionId, reportName, _callback);

    }

    /**
     * 
     * Gets the report for a subscription by report name.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param reportName Report Name. (required)
     * @return Report
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public Report reportsGet(String apiVersion, String subscriptionId, String reportName) throws ApiException {
        ApiResponse<Report> localVarResp = reportsGetWithHttpInfo(apiVersion, subscriptionId, reportName);
        return localVarResp.getData();
    }

    /**
     * 
     * Gets the report for a subscription by report name.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param reportName Report Name. (required)
     * @return ApiResponse&lt;Report&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public ApiResponse<Report> reportsGetWithHttpInfo(String apiVersion, String subscriptionId, String reportName) throws ApiException {
        okhttp3.Call localVarCall = reportsGetValidateBeforeCall(apiVersion, subscriptionId, reportName, null);
        Type localVarReturnType = new TypeToken<Report>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Gets the report for a subscription by report name.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param reportName Report Name. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public okhttp3.Call reportsGetAsync(String apiVersion, String subscriptionId, String reportName, final ApiCallback<Report> _callback) throws ApiException {

        okhttp3.Call localVarCall = reportsGetValidateBeforeCall(apiVersion, subscriptionId, reportName, _callback);
        Type localVarReturnType = new TypeToken<Report>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for reportsGetByBillingAccount
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param billingAccountId BillingAccount ID (required)
     * @param reportName Report Name. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public okhttp3.Call reportsGetByBillingAccountCall(String apiVersion, String billingAccountId, String reportName, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.CostManagement/reports/{reportName}"
            .replace("{" + "billingAccountId" + "}", localVarApiClient.escapeString(billingAccountId.toString()))
            .replace("{" + "reportName" + "}", localVarApiClient.escapeString(reportName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call reportsGetByBillingAccountValidateBeforeCall(String apiVersion, String billingAccountId, String reportName, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling reportsGetByBillingAccount(Async)");
        }

        // verify the required parameter 'billingAccountId' is set
        if (billingAccountId == null) {
            throw new ApiException("Missing the required parameter 'billingAccountId' when calling reportsGetByBillingAccount(Async)");
        }

        // verify the required parameter 'reportName' is set
        if (reportName == null) {
            throw new ApiException("Missing the required parameter 'reportName' when calling reportsGetByBillingAccount(Async)");
        }

        return reportsGetByBillingAccountCall(apiVersion, billingAccountId, reportName, _callback);

    }

    /**
     * 
     * Gets the report for a billing account by report name.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param billingAccountId BillingAccount ID (required)
     * @param reportName Report Name. (required)
     * @return Report
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public Report reportsGetByBillingAccount(String apiVersion, String billingAccountId, String reportName) throws ApiException {
        ApiResponse<Report> localVarResp = reportsGetByBillingAccountWithHttpInfo(apiVersion, billingAccountId, reportName);
        return localVarResp.getData();
    }

    /**
     * 
     * Gets the report for a billing account by report name.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param billingAccountId BillingAccount ID (required)
     * @param reportName Report Name. (required)
     * @return ApiResponse&lt;Report&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public ApiResponse<Report> reportsGetByBillingAccountWithHttpInfo(String apiVersion, String billingAccountId, String reportName) throws ApiException {
        okhttp3.Call localVarCall = reportsGetByBillingAccountValidateBeforeCall(apiVersion, billingAccountId, reportName, null);
        Type localVarReturnType = new TypeToken<Report>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Gets the report for a billing account by report name.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param billingAccountId BillingAccount ID (required)
     * @param reportName Report Name. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public okhttp3.Call reportsGetByBillingAccountAsync(String apiVersion, String billingAccountId, String reportName, final ApiCallback<Report> _callback) throws ApiException {

        okhttp3.Call localVarCall = reportsGetByBillingAccountValidateBeforeCall(apiVersion, billingAccountId, reportName, _callback);
        Type localVarReturnType = new TypeToken<Report>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for reportsGetByDepartment
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param departmentId Department ID (required)
     * @param reportName Report Name. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public okhttp3.Call reportsGetByDepartmentCall(String apiVersion, String departmentId, String reportName, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/providers/Microsoft.Billing/departments/{departmentId}/providers/Microsoft.CostManagement/reports/{reportName}"
            .replace("{" + "departmentId" + "}", localVarApiClient.escapeString(departmentId.toString()))
            .replace("{" + "reportName" + "}", localVarApiClient.escapeString(reportName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call reportsGetByDepartmentValidateBeforeCall(String apiVersion, String departmentId, String reportName, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling reportsGetByDepartment(Async)");
        }

        // verify the required parameter 'departmentId' is set
        if (departmentId == null) {
            throw new ApiException("Missing the required parameter 'departmentId' when calling reportsGetByDepartment(Async)");
        }

        // verify the required parameter 'reportName' is set
        if (reportName == null) {
            throw new ApiException("Missing the required parameter 'reportName' when calling reportsGetByDepartment(Async)");
        }

        return reportsGetByDepartmentCall(apiVersion, departmentId, reportName, _callback);

    }

    /**
     * 
     * Gets the report for a department by report name.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param departmentId Department ID (required)
     * @param reportName Report Name. (required)
     * @return Report
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public Report reportsGetByDepartment(String apiVersion, String departmentId, String reportName) throws ApiException {
        ApiResponse<Report> localVarResp = reportsGetByDepartmentWithHttpInfo(apiVersion, departmentId, reportName);
        return localVarResp.getData();
    }

    /**
     * 
     * Gets the report for a department by report name.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param departmentId Department ID (required)
     * @param reportName Report Name. (required)
     * @return ApiResponse&lt;Report&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public ApiResponse<Report> reportsGetByDepartmentWithHttpInfo(String apiVersion, String departmentId, String reportName) throws ApiException {
        okhttp3.Call localVarCall = reportsGetByDepartmentValidateBeforeCall(apiVersion, departmentId, reportName, null);
        Type localVarReturnType = new TypeToken<Report>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Gets the report for a department by report name.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param departmentId Department ID (required)
     * @param reportName Report Name. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public okhttp3.Call reportsGetByDepartmentAsync(String apiVersion, String departmentId, String reportName, final ApiCallback<Report> _callback) throws ApiException {

        okhttp3.Call localVarCall = reportsGetByDepartmentValidateBeforeCall(apiVersion, departmentId, reportName, _callback);
        Type localVarReturnType = new TypeToken<Report>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for reportsGetByResourceGroupName
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param resourceGroupName Azure Resource Group Name. (required)
     * @param reportName Report Name. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public okhttp3.Call reportsGetByResourceGroupNameCall(String apiVersion, String subscriptionId, String resourceGroupName, String reportName, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CostManagement/reports/{reportName}"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "reportName" + "}", localVarApiClient.escapeString(reportName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call reportsGetByResourceGroupNameValidateBeforeCall(String apiVersion, String subscriptionId, String resourceGroupName, String reportName, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling reportsGetByResourceGroupName(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling reportsGetByResourceGroupName(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling reportsGetByResourceGroupName(Async)");
        }

        // verify the required parameter 'reportName' is set
        if (reportName == null) {
            throw new ApiException("Missing the required parameter 'reportName' when calling reportsGetByResourceGroupName(Async)");
        }

        return reportsGetByResourceGroupNameCall(apiVersion, subscriptionId, resourceGroupName, reportName, _callback);

    }

    /**
     * 
     * Gets the report for a resource group under a subscription by report name.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param resourceGroupName Azure Resource Group Name. (required)
     * @param reportName Report Name. (required)
     * @return Report
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public Report reportsGetByResourceGroupName(String apiVersion, String subscriptionId, String resourceGroupName, String reportName) throws ApiException {
        ApiResponse<Report> localVarResp = reportsGetByResourceGroupNameWithHttpInfo(apiVersion, subscriptionId, resourceGroupName, reportName);
        return localVarResp.getData();
    }

    /**
     * 
     * Gets the report for a resource group under a subscription by report name.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param resourceGroupName Azure Resource Group Name. (required)
     * @param reportName Report Name. (required)
     * @return ApiResponse&lt;Report&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public ApiResponse<Report> reportsGetByResourceGroupNameWithHttpInfo(String apiVersion, String subscriptionId, String resourceGroupName, String reportName) throws ApiException {
        okhttp3.Call localVarCall = reportsGetByResourceGroupNameValidateBeforeCall(apiVersion, subscriptionId, resourceGroupName, reportName, null);
        Type localVarReturnType = new TypeToken<Report>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Gets the report for a resource group under a subscription by report name.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param resourceGroupName Azure Resource Group Name. (required)
     * @param reportName Report Name. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public okhttp3.Call reportsGetByResourceGroupNameAsync(String apiVersion, String subscriptionId, String resourceGroupName, String reportName, final ApiCallback<Report> _callback) throws ApiException {

        okhttp3.Call localVarCall = reportsGetByResourceGroupNameValidateBeforeCall(apiVersion, subscriptionId, resourceGroupName, reportName, _callback);
        Type localVarReturnType = new TypeToken<Report>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for reportsGetExecutionHistory
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param reportName Report Name. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public okhttp3.Call reportsGetExecutionHistoryCall(String apiVersion, String subscriptionId, String reportName, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/providers/Microsoft.CostManagement/reports/{reportName}/runHistory"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "reportName" + "}", localVarApiClient.escapeString(reportName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call reportsGetExecutionHistoryValidateBeforeCall(String apiVersion, String subscriptionId, String reportName, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling reportsGetExecutionHistory(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling reportsGetExecutionHistory(Async)");
        }

        // verify the required parameter 'reportName' is set
        if (reportName == null) {
            throw new ApiException("Missing the required parameter 'reportName' when calling reportsGetExecutionHistory(Async)");
        }

        return reportsGetExecutionHistoryCall(apiVersion, subscriptionId, reportName, _callback);

    }

    /**
     * 
     * Gets the execution history of a report for a subscription by report name.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param reportName Report Name. (required)
     * @return ReportExecutionListResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public ReportExecutionListResult reportsGetExecutionHistory(String apiVersion, String subscriptionId, String reportName) throws ApiException {
        ApiResponse<ReportExecutionListResult> localVarResp = reportsGetExecutionHistoryWithHttpInfo(apiVersion, subscriptionId, reportName);
        return localVarResp.getData();
    }

    /**
     * 
     * Gets the execution history of a report for a subscription by report name.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param reportName Report Name. (required)
     * @return ApiResponse&lt;ReportExecutionListResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public ApiResponse<ReportExecutionListResult> reportsGetExecutionHistoryWithHttpInfo(String apiVersion, String subscriptionId, String reportName) throws ApiException {
        okhttp3.Call localVarCall = reportsGetExecutionHistoryValidateBeforeCall(apiVersion, subscriptionId, reportName, null);
        Type localVarReturnType = new TypeToken<ReportExecutionListResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Gets the execution history of a report for a subscription by report name.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param reportName Report Name. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public okhttp3.Call reportsGetExecutionHistoryAsync(String apiVersion, String subscriptionId, String reportName, final ApiCallback<ReportExecutionListResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = reportsGetExecutionHistoryValidateBeforeCall(apiVersion, subscriptionId, reportName, _callback);
        Type localVarReturnType = new TypeToken<ReportExecutionListResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for reportsGetExecutionHistoryByBillingAccount
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param billingAccountId BillingAccount ID (required)
     * @param reportName Report Name. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public okhttp3.Call reportsGetExecutionHistoryByBillingAccountCall(String apiVersion, String billingAccountId, String reportName, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.CostManagement/reports/{reportName}/runHistory"
            .replace("{" + "billingAccountId" + "}", localVarApiClient.escapeString(billingAccountId.toString()))
            .replace("{" + "reportName" + "}", localVarApiClient.escapeString(reportName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call reportsGetExecutionHistoryByBillingAccountValidateBeforeCall(String apiVersion, String billingAccountId, String reportName, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling reportsGetExecutionHistoryByBillingAccount(Async)");
        }

        // verify the required parameter 'billingAccountId' is set
        if (billingAccountId == null) {
            throw new ApiException("Missing the required parameter 'billingAccountId' when calling reportsGetExecutionHistoryByBillingAccount(Async)");
        }

        // verify the required parameter 'reportName' is set
        if (reportName == null) {
            throw new ApiException("Missing the required parameter 'reportName' when calling reportsGetExecutionHistoryByBillingAccount(Async)");
        }

        return reportsGetExecutionHistoryByBillingAccountCall(apiVersion, billingAccountId, reportName, _callback);

    }

    /**
     * 
     * Gets the execution history of a report for a billing account by report name.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param billingAccountId BillingAccount ID (required)
     * @param reportName Report Name. (required)
     * @return ReportExecutionListResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public ReportExecutionListResult reportsGetExecutionHistoryByBillingAccount(String apiVersion, String billingAccountId, String reportName) throws ApiException {
        ApiResponse<ReportExecutionListResult> localVarResp = reportsGetExecutionHistoryByBillingAccountWithHttpInfo(apiVersion, billingAccountId, reportName);
        return localVarResp.getData();
    }

    /**
     * 
     * Gets the execution history of a report for a billing account by report name.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param billingAccountId BillingAccount ID (required)
     * @param reportName Report Name. (required)
     * @return ApiResponse&lt;ReportExecutionListResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public ApiResponse<ReportExecutionListResult> reportsGetExecutionHistoryByBillingAccountWithHttpInfo(String apiVersion, String billingAccountId, String reportName) throws ApiException {
        okhttp3.Call localVarCall = reportsGetExecutionHistoryByBillingAccountValidateBeforeCall(apiVersion, billingAccountId, reportName, null);
        Type localVarReturnType = new TypeToken<ReportExecutionListResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Gets the execution history of a report for a billing account by report name.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param billingAccountId BillingAccount ID (required)
     * @param reportName Report Name. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public okhttp3.Call reportsGetExecutionHistoryByBillingAccountAsync(String apiVersion, String billingAccountId, String reportName, final ApiCallback<ReportExecutionListResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = reportsGetExecutionHistoryByBillingAccountValidateBeforeCall(apiVersion, billingAccountId, reportName, _callback);
        Type localVarReturnType = new TypeToken<ReportExecutionListResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for reportsGetExecutionHistoryByDepartment
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param departmentId Department ID (required)
     * @param reportName Report Name. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public okhttp3.Call reportsGetExecutionHistoryByDepartmentCall(String apiVersion, String departmentId, String reportName, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/providers/Microsoft.Billing/departments/{departmentId}/providers/Microsoft.CostManagement/reports/{reportName}/runHistory"
            .replace("{" + "departmentId" + "}", localVarApiClient.escapeString(departmentId.toString()))
            .replace("{" + "reportName" + "}", localVarApiClient.escapeString(reportName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call reportsGetExecutionHistoryByDepartmentValidateBeforeCall(String apiVersion, String departmentId, String reportName, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling reportsGetExecutionHistoryByDepartment(Async)");
        }

        // verify the required parameter 'departmentId' is set
        if (departmentId == null) {
            throw new ApiException("Missing the required parameter 'departmentId' when calling reportsGetExecutionHistoryByDepartment(Async)");
        }

        // verify the required parameter 'reportName' is set
        if (reportName == null) {
            throw new ApiException("Missing the required parameter 'reportName' when calling reportsGetExecutionHistoryByDepartment(Async)");
        }

        return reportsGetExecutionHistoryByDepartmentCall(apiVersion, departmentId, reportName, _callback);

    }

    /**
     * 
     * Gets the execution history of a report for a department by report name.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param departmentId Department ID (required)
     * @param reportName Report Name. (required)
     * @return ReportExecutionListResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public ReportExecutionListResult reportsGetExecutionHistoryByDepartment(String apiVersion, String departmentId, String reportName) throws ApiException {
        ApiResponse<ReportExecutionListResult> localVarResp = reportsGetExecutionHistoryByDepartmentWithHttpInfo(apiVersion, departmentId, reportName);
        return localVarResp.getData();
    }

    /**
     * 
     * Gets the execution history of a report for a department by report name.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param departmentId Department ID (required)
     * @param reportName Report Name. (required)
     * @return ApiResponse&lt;ReportExecutionListResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public ApiResponse<ReportExecutionListResult> reportsGetExecutionHistoryByDepartmentWithHttpInfo(String apiVersion, String departmentId, String reportName) throws ApiException {
        okhttp3.Call localVarCall = reportsGetExecutionHistoryByDepartmentValidateBeforeCall(apiVersion, departmentId, reportName, null);
        Type localVarReturnType = new TypeToken<ReportExecutionListResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Gets the execution history of a report for a department by report name.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param departmentId Department ID (required)
     * @param reportName Report Name. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public okhttp3.Call reportsGetExecutionHistoryByDepartmentAsync(String apiVersion, String departmentId, String reportName, final ApiCallback<ReportExecutionListResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = reportsGetExecutionHistoryByDepartmentValidateBeforeCall(apiVersion, departmentId, reportName, _callback);
        Type localVarReturnType = new TypeToken<ReportExecutionListResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for reportsGetExecutionHistoryByResourceGroupName
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param resourceGroupName Azure Resource Group Name. (required)
     * @param reportName Report Name. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public okhttp3.Call reportsGetExecutionHistoryByResourceGroupNameCall(String apiVersion, String subscriptionId, String resourceGroupName, String reportName, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CostManagement/reports/{reportName}/runHistory"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "reportName" + "}", localVarApiClient.escapeString(reportName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call reportsGetExecutionHistoryByResourceGroupNameValidateBeforeCall(String apiVersion, String subscriptionId, String resourceGroupName, String reportName, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling reportsGetExecutionHistoryByResourceGroupName(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling reportsGetExecutionHistoryByResourceGroupName(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling reportsGetExecutionHistoryByResourceGroupName(Async)");
        }

        // verify the required parameter 'reportName' is set
        if (reportName == null) {
            throw new ApiException("Missing the required parameter 'reportName' when calling reportsGetExecutionHistoryByResourceGroupName(Async)");
        }

        return reportsGetExecutionHistoryByResourceGroupNameCall(apiVersion, subscriptionId, resourceGroupName, reportName, _callback);

    }

    /**
     * 
     * Gets the execution history of a report for a resource group by report name.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param resourceGroupName Azure Resource Group Name. (required)
     * @param reportName Report Name. (required)
     * @return ReportExecutionListResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public ReportExecutionListResult reportsGetExecutionHistoryByResourceGroupName(String apiVersion, String subscriptionId, String resourceGroupName, String reportName) throws ApiException {
        ApiResponse<ReportExecutionListResult> localVarResp = reportsGetExecutionHistoryByResourceGroupNameWithHttpInfo(apiVersion, subscriptionId, resourceGroupName, reportName);
        return localVarResp.getData();
    }

    /**
     * 
     * Gets the execution history of a report for a resource group by report name.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param resourceGroupName Azure Resource Group Name. (required)
     * @param reportName Report Name. (required)
     * @return ApiResponse&lt;ReportExecutionListResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public ApiResponse<ReportExecutionListResult> reportsGetExecutionHistoryByResourceGroupNameWithHttpInfo(String apiVersion, String subscriptionId, String resourceGroupName, String reportName) throws ApiException {
        okhttp3.Call localVarCall = reportsGetExecutionHistoryByResourceGroupNameValidateBeforeCall(apiVersion, subscriptionId, resourceGroupName, reportName, null);
        Type localVarReturnType = new TypeToken<ReportExecutionListResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Gets the execution history of a report for a resource group by report name.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param resourceGroupName Azure Resource Group Name. (required)
     * @param reportName Report Name. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public okhttp3.Call reportsGetExecutionHistoryByResourceGroupNameAsync(String apiVersion, String subscriptionId, String resourceGroupName, String reportName, final ApiCallback<ReportExecutionListResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = reportsGetExecutionHistoryByResourceGroupNameValidateBeforeCall(apiVersion, subscriptionId, resourceGroupName, reportName, _callback);
        Type localVarReturnType = new TypeToken<ReportExecutionListResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for reportsList
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public okhttp3.Call reportsListCall(String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/providers/Microsoft.CostManagement/reports"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call reportsListValidateBeforeCall(String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling reportsList(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling reportsList(Async)");
        }

        return reportsListCall(apiVersion, subscriptionId, _callback);

    }

    /**
     * 
     * Lists all reports for a subscription.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @return ReportListResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public ReportListResult reportsList(String apiVersion, String subscriptionId) throws ApiException {
        ApiResponse<ReportListResult> localVarResp = reportsListWithHttpInfo(apiVersion, subscriptionId);
        return localVarResp.getData();
    }

    /**
     * 
     * Lists all reports for a subscription.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @return ApiResponse&lt;ReportListResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public ApiResponse<ReportListResult> reportsListWithHttpInfo(String apiVersion, String subscriptionId) throws ApiException {
        okhttp3.Call localVarCall = reportsListValidateBeforeCall(apiVersion, subscriptionId, null);
        Type localVarReturnType = new TypeToken<ReportListResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Lists all reports for a subscription.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public okhttp3.Call reportsListAsync(String apiVersion, String subscriptionId, final ApiCallback<ReportListResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = reportsListValidateBeforeCall(apiVersion, subscriptionId, _callback);
        Type localVarReturnType = new TypeToken<ReportListResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for reportsListByBillingAccount
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param billingAccountId BillingAccount ID (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public okhttp3.Call reportsListByBillingAccountCall(String apiVersion, String billingAccountId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.CostManagement/reports"
            .replace("{" + "billingAccountId" + "}", localVarApiClient.escapeString(billingAccountId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call reportsListByBillingAccountValidateBeforeCall(String apiVersion, String billingAccountId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling reportsListByBillingAccount(Async)");
        }

        // verify the required parameter 'billingAccountId' is set
        if (billingAccountId == null) {
            throw new ApiException("Missing the required parameter 'billingAccountId' when calling reportsListByBillingAccount(Async)");
        }

        return reportsListByBillingAccountCall(apiVersion, billingAccountId, _callback);

    }

    /**
     * 
     * Lists all reports for a billing account.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param billingAccountId BillingAccount ID (required)
     * @return ReportListResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public ReportListResult reportsListByBillingAccount(String apiVersion, String billingAccountId) throws ApiException {
        ApiResponse<ReportListResult> localVarResp = reportsListByBillingAccountWithHttpInfo(apiVersion, billingAccountId);
        return localVarResp.getData();
    }

    /**
     * 
     * Lists all reports for a billing account.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param billingAccountId BillingAccount ID (required)
     * @return ApiResponse&lt;ReportListResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public ApiResponse<ReportListResult> reportsListByBillingAccountWithHttpInfo(String apiVersion, String billingAccountId) throws ApiException {
        okhttp3.Call localVarCall = reportsListByBillingAccountValidateBeforeCall(apiVersion, billingAccountId, null);
        Type localVarReturnType = new TypeToken<ReportListResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Lists all reports for a billing account.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param billingAccountId BillingAccount ID (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public okhttp3.Call reportsListByBillingAccountAsync(String apiVersion, String billingAccountId, final ApiCallback<ReportListResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = reportsListByBillingAccountValidateBeforeCall(apiVersion, billingAccountId, _callback);
        Type localVarReturnType = new TypeToken<ReportListResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for reportsListByDepartment
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param departmentId Department ID (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public okhttp3.Call reportsListByDepartmentCall(String apiVersion, String departmentId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/providers/Microsoft.Billing/departments/{departmentId}/providers/Microsoft.CostManagement/reports"
            .replace("{" + "departmentId" + "}", localVarApiClient.escapeString(departmentId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call reportsListByDepartmentValidateBeforeCall(String apiVersion, String departmentId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling reportsListByDepartment(Async)");
        }

        // verify the required parameter 'departmentId' is set
        if (departmentId == null) {
            throw new ApiException("Missing the required parameter 'departmentId' when calling reportsListByDepartment(Async)");
        }

        return reportsListByDepartmentCall(apiVersion, departmentId, _callback);

    }

    /**
     * 
     * Lists all reports for a department.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param departmentId Department ID (required)
     * @return ReportListResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public ReportListResult reportsListByDepartment(String apiVersion, String departmentId) throws ApiException {
        ApiResponse<ReportListResult> localVarResp = reportsListByDepartmentWithHttpInfo(apiVersion, departmentId);
        return localVarResp.getData();
    }

    /**
     * 
     * Lists all reports for a department.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param departmentId Department ID (required)
     * @return ApiResponse&lt;ReportListResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public ApiResponse<ReportListResult> reportsListByDepartmentWithHttpInfo(String apiVersion, String departmentId) throws ApiException {
        okhttp3.Call localVarCall = reportsListByDepartmentValidateBeforeCall(apiVersion, departmentId, null);
        Type localVarReturnType = new TypeToken<ReportListResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Lists all reports for a department.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param departmentId Department ID (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public okhttp3.Call reportsListByDepartmentAsync(String apiVersion, String departmentId, final ApiCallback<ReportListResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = reportsListByDepartmentValidateBeforeCall(apiVersion, departmentId, _callback);
        Type localVarReturnType = new TypeToken<ReportListResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for reportsListByResourceGroupName
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param resourceGroupName Azure Resource Group Name. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public okhttp3.Call reportsListByResourceGroupNameCall(String apiVersion, String subscriptionId, String resourceGroupName, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CostManagement/reports"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call reportsListByResourceGroupNameValidateBeforeCall(String apiVersion, String subscriptionId, String resourceGroupName, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling reportsListByResourceGroupName(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling reportsListByResourceGroupName(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling reportsListByResourceGroupName(Async)");
        }

        return reportsListByResourceGroupNameCall(apiVersion, subscriptionId, resourceGroupName, _callback);

    }

    /**
     * 
     * Lists all reports for a resource group under a subscription.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param resourceGroupName Azure Resource Group Name. (required)
     * @return ReportListResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public ReportListResult reportsListByResourceGroupName(String apiVersion, String subscriptionId, String resourceGroupName) throws ApiException {
        ApiResponse<ReportListResult> localVarResp = reportsListByResourceGroupNameWithHttpInfo(apiVersion, subscriptionId, resourceGroupName);
        return localVarResp.getData();
    }

    /**
     * 
     * Lists all reports for a resource group under a subscription.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param resourceGroupName Azure Resource Group Name. (required)
     * @return ApiResponse&lt;ReportListResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public ApiResponse<ReportListResult> reportsListByResourceGroupNameWithHttpInfo(String apiVersion, String subscriptionId, String resourceGroupName) throws ApiException {
        okhttp3.Call localVarCall = reportsListByResourceGroupNameValidateBeforeCall(apiVersion, subscriptionId, resourceGroupName, null);
        Type localVarReturnType = new TypeToken<ReportListResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Lists all reports for a resource group under a subscription.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-08-01-preview. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param resourceGroupName Azure Resource Group Name. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/costmanagement/"> Documentation</a>
     */
    public okhttp3.Call reportsListByResourceGroupNameAsync(String apiVersion, String subscriptionId, String resourceGroupName, final ApiCallback<ReportListResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = reportsListByResourceGroupNameValidateBeforeCall(apiVersion, subscriptionId, resourceGroupName, _callback);
        Type localVarReturnType = new TypeToken<ReportListResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
