/**
 * CostManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-08-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIConnectorProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIConnectorProperties::OAIConnectorProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIConnectorProperties::OAIConnectorProperties() {
    this->initializeModel();
}

OAIConnectorProperties::~OAIConnectorProperties() {}

void OAIConnectorProperties::initializeModel() {

    m_collection_isSet = false;
    m_collection_isValid = false;

    m_created_on_isSet = false;
    m_created_on_isValid = false;

    m_credentials_key_isSet = false;
    m_credentials_key_isValid = false;

    m_credentials_secret_isSet = false;
    m_credentials_secret_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_modified_on_isSet = false;
    m_modified_on_isValid = false;

    m_provider_account_id_isSet = false;
    m_provider_account_id_isValid = false;

    m_report_id_isSet = false;
    m_report_id_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAIConnectorProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIConnectorProperties::fromJsonObject(QJsonObject json) {

    m_collection_isValid = ::OpenAPI::fromJsonValue(m_collection, json[QString("collection")]);
    m_collection_isSet = !json[QString("collection")].isNull() && m_collection_isValid;

    m_created_on_isValid = ::OpenAPI::fromJsonValue(m_created_on, json[QString("createdOn")]);
    m_created_on_isSet = !json[QString("createdOn")].isNull() && m_created_on_isValid;

    m_credentials_key_isValid = ::OpenAPI::fromJsonValue(m_credentials_key, json[QString("credentialsKey")]);
    m_credentials_key_isSet = !json[QString("credentialsKey")].isNull() && m_credentials_key_isValid;

    m_credentials_secret_isValid = ::OpenAPI::fromJsonValue(m_credentials_secret, json[QString("credentialsSecret")]);
    m_credentials_secret_isSet = !json[QString("credentialsSecret")].isNull() && m_credentials_secret_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_modified_on_isValid = ::OpenAPI::fromJsonValue(m_modified_on, json[QString("modifiedOn")]);
    m_modified_on_isSet = !json[QString("modifiedOn")].isNull() && m_modified_on_isValid;

    m_provider_account_id_isValid = ::OpenAPI::fromJsonValue(m_provider_account_id, json[QString("providerAccountId")]);
    m_provider_account_id_isSet = !json[QString("providerAccountId")].isNull() && m_provider_account_id_isValid;

    m_report_id_isValid = ::OpenAPI::fromJsonValue(m_report_id, json[QString("reportId")]);
    m_report_id_isSet = !json[QString("reportId")].isNull() && m_report_id_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;
}

QString OAIConnectorProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIConnectorProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_collection.isSet()) {
        obj.insert(QString("collection"), ::OpenAPI::toJsonValue(m_collection));
    }
    if (m_created_on_isSet) {
        obj.insert(QString("createdOn"), ::OpenAPI::toJsonValue(m_created_on));
    }
    if (m_credentials_key_isSet) {
        obj.insert(QString("credentialsKey"), ::OpenAPI::toJsonValue(m_credentials_key));
    }
    if (m_credentials_secret_isSet) {
        obj.insert(QString("credentialsSecret"), ::OpenAPI::toJsonValue(m_credentials_secret));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_modified_on_isSet) {
        obj.insert(QString("modifiedOn"), ::OpenAPI::toJsonValue(m_modified_on));
    }
    if (m_provider_account_id_isSet) {
        obj.insert(QString("providerAccountId"), ::OpenAPI::toJsonValue(m_provider_account_id));
    }
    if (m_report_id_isSet) {
        obj.insert(QString("reportId"), ::OpenAPI::toJsonValue(m_report_id));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    return obj;
}

OAIConnectorCollectionInfo OAIConnectorProperties::getCollection() const {
    return m_collection;
}
void OAIConnectorProperties::setCollection(const OAIConnectorCollectionInfo &collection) {
    m_collection = collection;
    m_collection_isSet = true;
}

bool OAIConnectorProperties::is_collection_Set() const{
    return m_collection_isSet;
}

bool OAIConnectorProperties::is_collection_Valid() const{
    return m_collection_isValid;
}

QDateTime OAIConnectorProperties::getCreatedOn() const {
    return m_created_on;
}
void OAIConnectorProperties::setCreatedOn(const QDateTime &created_on) {
    m_created_on = created_on;
    m_created_on_isSet = true;
}

bool OAIConnectorProperties::is_created_on_Set() const{
    return m_created_on_isSet;
}

bool OAIConnectorProperties::is_created_on_Valid() const{
    return m_created_on_isValid;
}

QString OAIConnectorProperties::getCredentialsKey() const {
    return m_credentials_key;
}
void OAIConnectorProperties::setCredentialsKey(const QString &credentials_key) {
    m_credentials_key = credentials_key;
    m_credentials_key_isSet = true;
}

bool OAIConnectorProperties::is_credentials_key_Set() const{
    return m_credentials_key_isSet;
}

bool OAIConnectorProperties::is_credentials_key_Valid() const{
    return m_credentials_key_isValid;
}

QString OAIConnectorProperties::getCredentialsSecret() const {
    return m_credentials_secret;
}
void OAIConnectorProperties::setCredentialsSecret(const QString &credentials_secret) {
    m_credentials_secret = credentials_secret;
    m_credentials_secret_isSet = true;
}

bool OAIConnectorProperties::is_credentials_secret_Set() const{
    return m_credentials_secret_isSet;
}

bool OAIConnectorProperties::is_credentials_secret_Valid() const{
    return m_credentials_secret_isValid;
}

QString OAIConnectorProperties::getDisplayName() const {
    return m_display_name;
}
void OAIConnectorProperties::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIConnectorProperties::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIConnectorProperties::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QDateTime OAIConnectorProperties::getModifiedOn() const {
    return m_modified_on;
}
void OAIConnectorProperties::setModifiedOn(const QDateTime &modified_on) {
    m_modified_on = modified_on;
    m_modified_on_isSet = true;
}

bool OAIConnectorProperties::is_modified_on_Set() const{
    return m_modified_on_isSet;
}

bool OAIConnectorProperties::is_modified_on_Valid() const{
    return m_modified_on_isValid;
}

QString OAIConnectorProperties::getProviderAccountId() const {
    return m_provider_account_id;
}
void OAIConnectorProperties::setProviderAccountId(const QString &provider_account_id) {
    m_provider_account_id = provider_account_id;
    m_provider_account_id_isSet = true;
}

bool OAIConnectorProperties::is_provider_account_id_Set() const{
    return m_provider_account_id_isSet;
}

bool OAIConnectorProperties::is_provider_account_id_Valid() const{
    return m_provider_account_id_isValid;
}

QString OAIConnectorProperties::getReportId() const {
    return m_report_id;
}
void OAIConnectorProperties::setReportId(const QString &report_id) {
    m_report_id = report_id;
    m_report_id_isSet = true;
}

bool OAIConnectorProperties::is_report_id_Set() const{
    return m_report_id_isSet;
}

bool OAIConnectorProperties::is_report_id_Valid() const{
    return m_report_id_isValid;
}

QString OAIConnectorProperties::getStatus() const {
    return m_status;
}
void OAIConnectorProperties::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIConnectorProperties::is_status_Set() const{
    return m_status_isSet;
}

bool OAIConnectorProperties::is_status_Valid() const{
    return m_status_isValid;
}

bool OAIConnectorProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_collection.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_on_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_credentials_key_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_credentials_secret_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_modified_on_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_provider_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_report_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIConnectorProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
