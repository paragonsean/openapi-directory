/**
 * CostManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-08-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAlertProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAlertProperties::OAIAlertProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAlertProperties::OAIAlertProperties() {
    this->initializeModel();
}

OAIAlertProperties::~OAIAlertProperties() {}

void OAIAlertProperties::initializeModel() {

    m_close_time_isSet = false;
    m_close_time_isValid = false;

    m_cost_entity_id_isSet = false;
    m_cost_entity_id_isValid = false;

    m_creation_time_isSet = false;
    m_creation_time_isValid = false;

    m_definition_isSet = false;
    m_definition_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_details_isSet = false;
    m_details_isValid = false;

    m_modification_time_isSet = false;
    m_modification_time_isValid = false;

    m_modification_username_isSet = false;
    m_modification_username_isValid = false;

    m_scope_isSet = false;
    m_scope_isValid = false;

    m_source_isSet = false;
    m_source_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_status_modification_time_isSet = false;
    m_status_modification_time_isValid = false;
}

void OAIAlertProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAlertProperties::fromJsonObject(QJsonObject json) {

    m_close_time_isValid = ::OpenAPI::fromJsonValue(m_close_time, json[QString("closeTime")]);
    m_close_time_isSet = !json[QString("closeTime")].isNull() && m_close_time_isValid;

    m_cost_entity_id_isValid = ::OpenAPI::fromJsonValue(m_cost_entity_id, json[QString("costEntityId")]);
    m_cost_entity_id_isSet = !json[QString("costEntityId")].isNull() && m_cost_entity_id_isValid;

    m_creation_time_isValid = ::OpenAPI::fromJsonValue(m_creation_time, json[QString("creationTime")]);
    m_creation_time_isSet = !json[QString("creationTime")].isNull() && m_creation_time_isValid;

    m_definition_isValid = ::OpenAPI::fromJsonValue(m_definition, json[QString("definition")]);
    m_definition_isSet = !json[QString("definition")].isNull() && m_definition_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_details_isValid = ::OpenAPI::fromJsonValue(m_details, json[QString("details")]);
    m_details_isSet = !json[QString("details")].isNull() && m_details_isValid;

    m_modification_time_isValid = ::OpenAPI::fromJsonValue(m_modification_time, json[QString("modificationTime")]);
    m_modification_time_isSet = !json[QString("modificationTime")].isNull() && m_modification_time_isValid;

    m_modification_username_isValid = ::OpenAPI::fromJsonValue(m_modification_username, json[QString("modificationUsername")]);
    m_modification_username_isSet = !json[QString("modificationUsername")].isNull() && m_modification_username_isValid;

    m_scope_isValid = ::OpenAPI::fromJsonValue(m_scope, json[QString("scope")]);
    m_scope_isSet = !json[QString("scope")].isNull() && m_scope_isValid;

    m_source_isValid = ::OpenAPI::fromJsonValue(m_source, json[QString("source")]);
    m_source_isSet = !json[QString("source")].isNull() && m_source_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_status_modification_time_isValid = ::OpenAPI::fromJsonValue(m_status_modification_time, json[QString("statusModificationTime")]);
    m_status_modification_time_isSet = !json[QString("statusModificationTime")].isNull() && m_status_modification_time_isValid;
}

QString OAIAlertProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAlertProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_close_time_isSet) {
        obj.insert(QString("closeTime"), ::OpenAPI::toJsonValue(m_close_time));
    }
    if (m_cost_entity_id_isSet) {
        obj.insert(QString("costEntityId"), ::OpenAPI::toJsonValue(m_cost_entity_id));
    }
    if (m_creation_time_isSet) {
        obj.insert(QString("creationTime"), ::OpenAPI::toJsonValue(m_creation_time));
    }
    if (m_definition.isSet()) {
        obj.insert(QString("definition"), ::OpenAPI::toJsonValue(m_definition));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_details.size() > 0) {
        obj.insert(QString("details"), ::OpenAPI::toJsonValue(m_details));
    }
    if (m_modification_time_isSet) {
        obj.insert(QString("modificationTime"), ::OpenAPI::toJsonValue(m_modification_time));
    }
    if (m_modification_username_isSet) {
        obj.insert(QString("modificationUsername"), ::OpenAPI::toJsonValue(m_modification_username));
    }
    if (m_scope_isSet) {
        obj.insert(QString("scope"), ::OpenAPI::toJsonValue(m_scope));
    }
    if (m_source_isSet) {
        obj.insert(QString("source"), ::OpenAPI::toJsonValue(m_source));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_status_modification_time_isSet) {
        obj.insert(QString("statusModificationTime"), ::OpenAPI::toJsonValue(m_status_modification_time));
    }
    return obj;
}

QDateTime OAIAlertProperties::getCloseTime() const {
    return m_close_time;
}
void OAIAlertProperties::setCloseTime(const QDateTime &close_time) {
    m_close_time = close_time;
    m_close_time_isSet = true;
}

bool OAIAlertProperties::is_close_time_Set() const{
    return m_close_time_isSet;
}

bool OAIAlertProperties::is_close_time_Valid() const{
    return m_close_time_isValid;
}

QString OAIAlertProperties::getCostEntityId() const {
    return m_cost_entity_id;
}
void OAIAlertProperties::setCostEntityId(const QString &cost_entity_id) {
    m_cost_entity_id = cost_entity_id;
    m_cost_entity_id_isSet = true;
}

bool OAIAlertProperties::is_cost_entity_id_Set() const{
    return m_cost_entity_id_isSet;
}

bool OAIAlertProperties::is_cost_entity_id_Valid() const{
    return m_cost_entity_id_isValid;
}

QDateTime OAIAlertProperties::getCreationTime() const {
    return m_creation_time;
}
void OAIAlertProperties::setCreationTime(const QDateTime &creation_time) {
    m_creation_time = creation_time;
    m_creation_time_isSet = true;
}

bool OAIAlertProperties::is_creation_time_Set() const{
    return m_creation_time_isSet;
}

bool OAIAlertProperties::is_creation_time_Valid() const{
    return m_creation_time_isValid;
}

OAIAlertDefinition OAIAlertProperties::getDefinition() const {
    return m_definition;
}
void OAIAlertProperties::setDefinition(const OAIAlertDefinition &definition) {
    m_definition = definition;
    m_definition_isSet = true;
}

bool OAIAlertProperties::is_definition_Set() const{
    return m_definition_isSet;
}

bool OAIAlertProperties::is_definition_Valid() const{
    return m_definition_isValid;
}

QString OAIAlertProperties::getDescription() const {
    return m_description;
}
void OAIAlertProperties::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIAlertProperties::is_description_Set() const{
    return m_description_isSet;
}

bool OAIAlertProperties::is_description_Valid() const{
    return m_description_isValid;
}

QMap<QString, QString> OAIAlertProperties::getDetails() const {
    return m_details;
}
void OAIAlertProperties::setDetails(const QMap<QString, QString> &details) {
    m_details = details;
    m_details_isSet = true;
}

bool OAIAlertProperties::is_details_Set() const{
    return m_details_isSet;
}

bool OAIAlertProperties::is_details_Valid() const{
    return m_details_isValid;
}

QDateTime OAIAlertProperties::getModificationTime() const {
    return m_modification_time;
}
void OAIAlertProperties::setModificationTime(const QDateTime &modification_time) {
    m_modification_time = modification_time;
    m_modification_time_isSet = true;
}

bool OAIAlertProperties::is_modification_time_Set() const{
    return m_modification_time_isSet;
}

bool OAIAlertProperties::is_modification_time_Valid() const{
    return m_modification_time_isValid;
}

QString OAIAlertProperties::getModificationUsername() const {
    return m_modification_username;
}
void OAIAlertProperties::setModificationUsername(const QString &modification_username) {
    m_modification_username = modification_username;
    m_modification_username_isSet = true;
}

bool OAIAlertProperties::is_modification_username_Set() const{
    return m_modification_username_isSet;
}

bool OAIAlertProperties::is_modification_username_Valid() const{
    return m_modification_username_isValid;
}

QString OAIAlertProperties::getScope() const {
    return m_scope;
}
void OAIAlertProperties::setScope(const QString &scope) {
    m_scope = scope;
    m_scope_isSet = true;
}

bool OAIAlertProperties::is_scope_Set() const{
    return m_scope_isSet;
}

bool OAIAlertProperties::is_scope_Valid() const{
    return m_scope_isValid;
}

QString OAIAlertProperties::getSource() const {
    return m_source;
}
void OAIAlertProperties::setSource(const QString &source) {
    m_source = source;
    m_source_isSet = true;
}

bool OAIAlertProperties::is_source_Set() const{
    return m_source_isSet;
}

bool OAIAlertProperties::is_source_Valid() const{
    return m_source_isValid;
}

QString OAIAlertProperties::getStatus() const {
    return m_status;
}
void OAIAlertProperties::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIAlertProperties::is_status_Set() const{
    return m_status_isSet;
}

bool OAIAlertProperties::is_status_Valid() const{
    return m_status_isValid;
}

QDateTime OAIAlertProperties::getStatusModificationTime() const {
    return m_status_modification_time;
}
void OAIAlertProperties::setStatusModificationTime(const QDateTime &status_modification_time) {
    m_status_modification_time = status_modification_time;
    m_status_modification_time_isSet = true;
}

bool OAIAlertProperties::is_status_modification_time_Set() const{
    return m_status_modification_time_isSet;
}

bool OAIAlertProperties::is_status_modification_time_Valid() const{
    return m_status_modification_time_isValid;
}

bool OAIAlertProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_close_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cost_entity_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_creation_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_definition.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_details.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_modification_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_modification_username_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_scope_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_source_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_modification_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAlertProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
