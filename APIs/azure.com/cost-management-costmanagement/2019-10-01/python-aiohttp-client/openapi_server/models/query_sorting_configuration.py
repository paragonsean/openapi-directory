# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class QuerySortingConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, query_sorting_direction: str=None):
        """QuerySortingConfiguration - a model defined in OpenAPI

        :param name: The name of this QuerySortingConfiguration.
        :param query_sorting_direction: The query_sorting_direction of this QuerySortingConfiguration.
        """
        self.openapi_types = {
            'name': str,
            'query_sorting_direction': str
        }

        self.attribute_map = {
            'name': 'name',
            'query_sorting_direction': 'querySortingDirection'
        }

        self._name = name
        self._query_sorting_direction = query_sorting_direction

    @classmethod
    def from_dict(cls, dikt: dict) -> 'QuerySortingConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The QuerySortingConfiguration of this QuerySortingConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this QuerySortingConfiguration.

        The name of the column to use in sorting.

        :return: The name of this QuerySortingConfiguration.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this QuerySortingConfiguration.

        The name of the column to use in sorting.

        :param name: The name of this QuerySortingConfiguration.
        :type name: str
        """

        self._name = name

    @property
    def query_sorting_direction(self):
        """Gets the query_sorting_direction of this QuerySortingConfiguration.

        The sorting direction

        :return: The query_sorting_direction of this QuerySortingConfiguration.
        :rtype: str
        """
        return self._query_sorting_direction

    @query_sorting_direction.setter
    def query_sorting_direction(self, query_sorting_direction):
        """Sets the query_sorting_direction of this QuerySortingConfiguration.

        The sorting direction

        :param query_sorting_direction: The query_sorting_direction of this QuerySortingConfiguration.
        :type query_sorting_direction: str
        """
        allowed_values = ["Ascending", "Descending"]  # noqa: E501
        if query_sorting_direction not in allowed_values:
            raise ValueError(
                "Invalid value for `query_sorting_direction` ({0}), must be one of {1}"
                .format(query_sorting_direction, allowed_values)
            )

        self._query_sorting_direction = query_sorting_direction
