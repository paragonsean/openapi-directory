openapi: 3.0.1
info:
  title: Language Understanding Intelligent Service (LUIS) Endpoint API for running
    predictions and extracting user intentions and entities from utterances.
  version: v2.0 preview
  x-apisguru-categories:
  - cloud
  x-logo:
    url: https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png
  x-origin:
  - format: swagger
    url: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/cognitiveservices/data-plane/LUIS/Runtime/stable/v2.0/LUIS-Runtime.json
    version: "2.0"
  x-preferred: true
  x-providerName: azure.com
  x-serviceName: cognitiveservices-LUIS-Runtime
  x-tags:
  - Azure
  - Microsoft
servers:
- url: https://azure.local/luis/v2.0/apps
security:
- apiKeyHeader: []
paths:
  /{appId}:
    get:
      description: "Gets predictions for a given utterance, in the form of intents\
        \ and entities. The current maximum query size is 500 characters."
      operationId: prediction_resolve2
      parameters:
      - description: The LUIS application ID (guid).
        in: path
        name: appId
        required: true
        schema:
          type: string
      - description: The utterance to predict.
        in: query
        name: q
        required: true
        schema:
          maxLength: 500
          type: string
          x-ms-client-name: query
        x-ms-client-name: query
      - description: The timezone offset for the location of the request.
        in: query
        name: timezoneOffset
        schema:
          type: number
      - description: "If true, return all intents instead of just the top scoring\
          \ intent."
        in: query
        name: verbose
        schema:
          type: boolean
      - description: Use the staging endpoint slot.
        in: query
        name: staging
        schema:
          type: boolean
      - description: Enable spell checking.
        in: query
        name: spellCheck
        schema:
          type: boolean
      - description: The subscription key to use when enabling bing spell check
        in: query
        name: bing-spell-check-subscription-key
        schema:
          type: string
      - description: Log query (default is true)
        in: query
        name: log
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LuisResult'
          description: "Prediction, based on the input query, containing intent(s)\
            \ and entities."
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Error response.
      x-ms-examples:
        Successful Get Predictions From Endpoint Via Get request:
          parameters:
            AzureRegion: westus
            Ocp-Apim-Subscription-Key: "{Subscription Key}"
            appId: "{Application Id}"
            q: forward to frank 30 dollars through HSBC
          responses:
            "200":
              body:
                entities:
                - endIndex: 18
                  entity: "30"
                  resolution:
                    value: "30"
                  startIndex: 17
                  type: builtin.number
                - endIndex: 15
                  entity: frank
                  score: 0.935219169
                  startIndex: 11
                  type: frank
                - endIndex: 26
                  entity: 30 dollars
                  resolution:
                    unit: Dollar
                    value: "30"
                  startIndex: 17
                  type: builtin.currency
                - endIndex: 39
                  entity: hsbc
                  resolution:
                    values:
                    - BankeName
                  startIndex: 36
                  type: Bank
                query: forward to frank 30 dollars through HSBC
                sentimentAnalysis:
                  label: positive
                  score: 0.9163064
                topScoringIntent:
                  intent: give
                  score: 0.3964121
              headers: {}
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: "Gets predictions for a given utterance, in the form of intents\
        \ and entities. The current maximum query size is 500 characters."
      operationId: prediction_resolve
      parameters:
      - description: The LUIS application ID (Guid).
        in: path
        name: appId
        required: true
        schema:
          type: string
      - description: The timezone offset for the location of the request.
        in: query
        name: timezoneOffset
        schema:
          type: number
      - description: "If true, return all intents instead of just the top scoring\
          \ intent."
        in: query
        name: verbose
        schema:
          type: boolean
      - description: Use the staging endpoint slot.
        in: query
        name: staging
        schema:
          type: boolean
      - description: Enable spell checking.
        in: query
        name: spellCheck
        schema:
          type: boolean
      - description: The subscription key to use when enabling bing spell check
        in: query
        name: bing-spell-check-subscription-key
        schema:
          type: string
      - description: Log query (default is true)
        in: query
        name: log
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Q'
        description: The utterance to predict.
        required: true
        x-ms-client-name: query
        x-body-name: q
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LuisResult'
          description: "Prediction, based on the input query, containing intent(s)\
            \ and entities."
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Error response.
      x-ms-examples:
        Successful Get Predictions From Endpoint Via Post request:
          parameters:
            AzureRegion: westus
            Ocp-Apim-Subscription-Key: "{Subscription Key}"
            appId: "{Application Id}"
            q: forward to frank 30 dollars through HSBC
          responses:
            "200":
              body:
                entities:
                - endIndex: 18
                  entity: "30"
                  resolution:
                    value: "30"
                  startIndex: 17
                  type: builtin.number
                - endIndex: 15
                  entity: frank
                  score: 0.935219169
                  startIndex: 11
                  type: frank
                - endIndex: 26
                  entity: 30 dollars
                  resolution:
                    unit: Dollar
                    value: "30"
                  startIndex: 17
                  type: builtin.currency
                - endIndex: 39
                  entity: hsbc
                  resolution:
                    values:
                    - BankeName
                  startIndex: 36
                  type: Bank
                query: forward to frank 30 dollars through HSBC
                sentimentAnalysis:
                  label: positive
                  score: 0.9163064
                topScoringIntent:
                  intent: give
                  score: 0.3964121
              headers: {}
      x-codegen-request-body-name: q
      x-openapi-router-controller: openapi_server.controllers.default_controller
components:
  schemas:
    APIError:
      description: Error information returned by the API
      example:
        message: message
        statusCode: statusCode
      properties:
        message:
          description: Cause of the error.
          title: message
          type: string
        statusCode:
          description: HTTP Status code
          title: statusCode
          type: string
      title: APIError
      type: object
    CompositeChildModel:
      description: Child entity in a LUIS Composite Entity.
      example:
        type: type
        value: value
      properties:
        type:
          description: Type of child entity.
          title: type
          type: string
        value:
          description: Value extracted by LUIS.
          title: value
          type: string
      required:
      - type
      - value
      title: CompositeChildModel
      type: object
    CompositeEntityModel:
      description: LUIS Composite Entity.
      example:
        children:
        - type: type
          value: value
        - type: type
          value: value
        value: value
        parentType: parentType
      properties:
        children:
          description: Child entities.
          items:
            $ref: '#/components/schemas/CompositeChildModel'
          title: children
          type: array
        parentType:
          description: Type/name of parent entity.
          title: parentType
          type: string
        value:
          description: Value for composite entity extracted by LUIS.
          title: value
          type: string
      required:
      - children
      - parentType
      - value
      title: CompositeEntityModel
      type: object
    EntityModel:
      additionalProperties:
        description: "List of additional properties. E.g.: score and resolution values\
          \ for pre-built LUIS entities."
        properties: {}
        type: object
      description: An entity extracted from the utterance.
      example:
        startIndex: 6.027456183070403
        endIndex: 0.8008281904610115
        type: type
        entity: entity
      properties:
        endIndex:
          description: The position of the last character of the matched entity within
            the utterance.
          type: number
        entity:
          description: "Name of the entity, as defined in LUIS."
          type: string
        startIndex:
          description: The position of the first character of the matched entity within
            the utterance.
          type: number
        type:
          description: "Type of the entity, as defined in LUIS."
          type: string
      required:
      - endIndex
      - entity
      - startIndex
      - type
      title: EntityModel
      type: object
    EntityWithResolution:
      allOf:
      - $ref: '#/components/schemas/EntityModel'
      - properties:
          resolution:
            $ref: '#/components/schemas/EntityWithResolution_allOf_resolution'
        required:
        - resolution
        type: object
    EntityWithScore:
      allOf:
      - $ref: '#/components/schemas/EntityModel'
      - properties:
          score:
            description: Associated prediction score for the intent (float).
            maximum: 1
            minimum: 0
            type: number
        required:
        - score
        type: object
    IntentModel:
      description: An intent detected from the utterance.
      example:
        score: 0.14658129805029452
        intent: intent
      properties:
        intent:
          description: "Name of the intent, as defined in LUIS."
          title: intent
          type: string
        score:
          description: Associated prediction score for the intent (float).
          maximum: 1
          minimum: 0
          title: score
          type: number
      title: IntentModel
      type: object
    LuisResult:
      description: "Prediction, based on the input query, containing intent(s) and\
        \ entities."
      example:
        intents:
        - score: 0.14658129805029452
          intent: intent
        - score: 0.14658129805029452
          intent: intent
        sentimentAnalysis:
          score: 5.962133916683182
          label: label
        entities:
        - startIndex: 6.027456183070403
          endIndex: 0.8008281904610115
          type: type
          entity: entity
        - startIndex: 6.027456183070403
          endIndex: 0.8008281904610115
          type: type
          entity: entity
        query: query
        compositeEntities:
        - children:
          - type: type
            value: value
          - type: type
            value: value
          value: value
          parentType: parentType
        - children:
          - type: type
            value: value
          - type: type
            value: value
          value: value
          parentType: parentType
        topScoringIntent:
          score: 0.14658129805029452
          intent: intent
        alteredQuery: alteredQuery
      properties:
        alteredQuery:
          description: The corrected utterance (when spell checking was enabled).
          title: alteredQuery
          type: string
        compositeEntities:
          description: The composite entities extracted from the utterance.
          items:
            $ref: '#/components/schemas/CompositeEntityModel'
          title: compositeEntities
          type: array
        entities:
          description: The entities extracted from the utterance.
          items:
            $ref: '#/components/schemas/EntityModel'
          title: entities
          type: array
        intents:
          description: All the intents (and their score) that were detected from utterance.
          items:
            $ref: '#/components/schemas/IntentModel'
          title: intents
          type: array
        query:
          description: The input utterance that was analized.
          title: query
          type: string
        sentimentAnalysis:
          $ref: '#/components/schemas/Sentiment'
        topScoringIntent:
          $ref: '#/components/schemas/IntentModel'
      title: LuisResult
      type: object
    Q:
      description: The utterance to predict.
      example: '"forward to frank 30 dollars through HSBC"'
      maxLength: 500
      type: string
    Sentiment:
      description: Sentiment of the input utterance.
      example:
        score: 5.962133916683182
        label: label
      properties:
        label:
          description: "The polarity of the sentiment, can be positive, neutral or\
            \ negative."
          title: label
          type: string
        score:
          description: "Score of the sentiment, ranges from 0 (most negative) to 1\
            \ (most positive)."
          title: score
          type: number
      title: Sentiment
      type: object
    EntityWithResolution_allOf_resolution:
      description: Resolution values for pre-built LUIS entities.
      properties: {}
      type: object
  securitySchemes:
    apiKeyHeader:
      in: header
      name: Ocp-Apim-Subscription-Key
      type: apiKey
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_apiKeyHeader
x-ms-parameterized-host:
  hostTemplate: "{AzureRegion}.api.cognitive.microsoft.com"
  parameters:
  - description: Supported Azure regions for Cognitive Services endpoints
    enum:
    - westus
    - westeurope
    - southeastasia
    - eastus2
    - westcentralus
    - westus2
    - eastus
    - southcentralus
    - northeurope
    - eastasia
    - australiaeast
    - brazilsouth
    in: path
    name: AzureRegion
    required: true
    type: string
    x-ms-enum:
      modelAsString: false
      name: AzureRegions
    x-ms-parameter-location: client
    x-ms-skip-url-encoding: true
x-original-swagger-version: "2.0"
