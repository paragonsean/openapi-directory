/**
 * Language Understanding Intelligent Service (LUIS) Endpoint API for running predictions and extracting user intentions and entities from utterances.
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0 preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEntityWithScore.h
 *
 * 
 */

#ifndef OAIEntityWithScore_H
#define OAIEntityWithScore_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIEntityWithScore : public OAIObject {
public:
    OAIEntityWithScore();
    OAIEntityWithScore(QString json);
    ~OAIEntityWithScore() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getEndIndex() const;
    void setEndIndex(const double &end_index);
    bool is_end_index_Set() const;
    bool is_end_index_Valid() const;

    QString getEntity() const;
    void setEntity(const QString &entity);
    bool is_entity_Set() const;
    bool is_entity_Valid() const;

    double getStartIndex() const;
    void setStartIndex(const double &start_index);
    bool is_start_index_Set() const;
    bool is_start_index_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    double getScore() const;
    void setScore(const double &score);
    bool is_score_Set() const;
    bool is_score_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_end_index;
    bool m_end_index_isSet;
    bool m_end_index_isValid;

    QString m_entity;
    bool m_entity_isSet;
    bool m_entity_isValid;

    double m_start_index;
    bool m_start_index_isSet;
    bool m_start_index_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    double m_score;
    bool m_score_isSet;
    bool m_score_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEntityWithScore)

#endif // OAIEntityWithScore_H
