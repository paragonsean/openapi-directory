/**
 * SubscriptionsManagementClient
 * The Admin Subscriptions Management Client.
 *
 * The version of the OpenAPI document: 2015-11-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import PlanAcquisition from '../model/PlanAcquisition';
import PlanAcquisitionList from '../model/PlanAcquisitionList';

/**
* AcquiredPlans service.
* @module api/AcquiredPlansApi
* @version 2015-11-01
*/
export default class AcquiredPlansApi {

    /**
    * Constructs a new AcquiredPlansApi. 
    * @alias module:api/AcquiredPlansApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the acquiredPlansCreate operation.
     * @callback module:api/AcquiredPlansApi~acquiredPlansCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PlanAcquisition} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates an acquired plan.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription.The subscription ID forms part of the URI for every service call.
     * @param {String} targetSubscriptionId The target subscription ID.
     * @param {String} planAcquisitionId The plan acquisition Identifier
     * @param {String} apiVersion Client Api Version.
     * @param {module:model/PlanAcquisition} newAcquiredPlan The new acquired plan.
     * @param {module:api/AcquiredPlansApi~acquiredPlansCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PlanAcquisition}
     */
    acquiredPlansCreate(subscriptionId, targetSubscriptionId, planAcquisitionId, apiVersion, newAcquiredPlan, callback) {
      let postBody = newAcquiredPlan;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling acquiredPlansCreate");
      }
      // verify the required parameter 'targetSubscriptionId' is set
      if (targetSubscriptionId === undefined || targetSubscriptionId === null) {
        throw new Error("Missing the required parameter 'targetSubscriptionId' when calling acquiredPlansCreate");
      }
      // verify the required parameter 'planAcquisitionId' is set
      if (planAcquisitionId === undefined || planAcquisitionId === null) {
        throw new Error("Missing the required parameter 'planAcquisitionId' when calling acquiredPlansCreate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling acquiredPlansCreate");
      }
      // verify the required parameter 'newAcquiredPlan' is set
      if (newAcquiredPlan === undefined || newAcquiredPlan === null) {
        throw new Error("Missing the required parameter 'newAcquiredPlan' when calling acquiredPlansCreate");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'targetSubscriptionId': targetSubscriptionId,
        'planAcquisitionId': planAcquisitionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = PlanAcquisition;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.Subscriptions.Admin/subscriptions/{targetSubscriptionId}/acquiredPlans/{planAcquisitionId}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the acquiredPlansDelete operation.
     * @callback module:api/AcquiredPlansApi~acquiredPlansDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes an acquired plan.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription.The subscription ID forms part of the URI for every service call.
     * @param {String} targetSubscriptionId The target subscription ID.
     * @param {String} planAcquisitionId The plan acquisition Identifier
     * @param {String} apiVersion Client Api Version.
     * @param {module:api/AcquiredPlansApi~acquiredPlansDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    acquiredPlansDelete(subscriptionId, targetSubscriptionId, planAcquisitionId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling acquiredPlansDelete");
      }
      // verify the required parameter 'targetSubscriptionId' is set
      if (targetSubscriptionId === undefined || targetSubscriptionId === null) {
        throw new Error("Missing the required parameter 'targetSubscriptionId' when calling acquiredPlansDelete");
      }
      // verify the required parameter 'planAcquisitionId' is set
      if (planAcquisitionId === undefined || planAcquisitionId === null) {
        throw new Error("Missing the required parameter 'planAcquisitionId' when calling acquiredPlansDelete");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling acquiredPlansDelete");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'targetSubscriptionId': targetSubscriptionId,
        'planAcquisitionId': planAcquisitionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.Subscriptions.Admin/subscriptions/{targetSubscriptionId}/acquiredPlans/{planAcquisitionId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the acquiredPlansGet operation.
     * @callback module:api/AcquiredPlansApi~acquiredPlansGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PlanAcquisition} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the specified plan acquired by a subscription consuming the offer.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription.The subscription ID forms part of the URI for every service call.
     * @param {String} targetSubscriptionId The target subscription ID.
     * @param {String} planAcquisitionId The plan acquisition Identifier
     * @param {String} apiVersion Client Api Version.
     * @param {module:api/AcquiredPlansApi~acquiredPlansGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PlanAcquisition}
     */
    acquiredPlansGet(subscriptionId, targetSubscriptionId, planAcquisitionId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling acquiredPlansGet");
      }
      // verify the required parameter 'targetSubscriptionId' is set
      if (targetSubscriptionId === undefined || targetSubscriptionId === null) {
        throw new Error("Missing the required parameter 'targetSubscriptionId' when calling acquiredPlansGet");
      }
      // verify the required parameter 'planAcquisitionId' is set
      if (planAcquisitionId === undefined || planAcquisitionId === null) {
        throw new Error("Missing the required parameter 'planAcquisitionId' when calling acquiredPlansGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling acquiredPlansGet");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'targetSubscriptionId': targetSubscriptionId,
        'planAcquisitionId': planAcquisitionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PlanAcquisition;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.Subscriptions.Admin/subscriptions/{targetSubscriptionId}/acquiredPlans/{planAcquisitionId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the acquiredPlansList operation.
     * @callback module:api/AcquiredPlansApi~acquiredPlansListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PlanAcquisitionList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a collection of all acquired plans that subscription has access to.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription.The subscription ID forms part of the URI for every service call.
     * @param {String} targetSubscriptionId The target subscription ID.
     * @param {String} apiVersion Client Api Version.
     * @param {module:api/AcquiredPlansApi~acquiredPlansListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PlanAcquisitionList}
     */
    acquiredPlansList(subscriptionId, targetSubscriptionId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling acquiredPlansList");
      }
      // verify the required parameter 'targetSubscriptionId' is set
      if (targetSubscriptionId === undefined || targetSubscriptionId === null) {
        throw new Error("Missing the required parameter 'targetSubscriptionId' when calling acquiredPlansList");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling acquiredPlansList");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'targetSubscriptionId': targetSubscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PlanAcquisitionList;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.Subscriptions.Admin/subscriptions/{targetSubscriptionId}/acquiredPlans', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
