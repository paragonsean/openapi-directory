/*
 * customproviders
 * Allows extension of ARM control plane with custom resource providers.
 *
 * The version of the OpenAPI document: 2018-09-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Association;
import org.openapitools.client.model.AssociationsList;
import org.openapitools.client.model.ErrorResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AssociationsApi
 */
@Disabled
public class AssociationsApiTest {

    private final AssociationsApi api = new AssociationsApi();

    /**
     * Create or update an association.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void associationsCreateOrUpdateTest() throws ApiException {
        String scope = null;
        String associationName = null;
        String apiVersion = null;
        Association association = null;
        Association response = api.associationsCreateOrUpdate(scope, associationName, apiVersion, association);
        // TODO: test validations
    }

    /**
     * Delete an association.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void associationsDeleteTest() throws ApiException {
        String scope = null;
        String associationName = null;
        String apiVersion = null;
        api.associationsDelete(scope, associationName, apiVersion);
        // TODO: test validations
    }

    /**
     * Get an association.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void associationsGetTest() throws ApiException {
        String scope = null;
        String associationName = null;
        String apiVersion = null;
        Association response = api.associationsGet(scope, associationName, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets all association for the given scope.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void associationsListAllTest() throws ApiException {
        String scope = null;
        String apiVersion = null;
        AssociationsList response = api.associationsListAll(scope, apiVersion);
        // TODO: test validations
    }

}
