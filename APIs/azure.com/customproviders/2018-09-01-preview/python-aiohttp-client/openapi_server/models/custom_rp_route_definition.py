# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class CustomRPRouteDefinition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, endpoint: str=None, name: str=None):
        """CustomRPRouteDefinition - a model defined in OpenAPI

        :param endpoint: The endpoint of this CustomRPRouteDefinition.
        :param name: The name of this CustomRPRouteDefinition.
        """
        self.openapi_types = {
            'endpoint': str,
            'name': str
        }

        self.attribute_map = {
            'endpoint': 'endpoint',
            'name': 'name'
        }

        self._endpoint = endpoint
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CustomRPRouteDefinition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CustomRPRouteDefinition of this CustomRPRouteDefinition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def endpoint(self):
        """Gets the endpoint of this CustomRPRouteDefinition.

        The route definition endpoint URI that the custom resource provider will proxy requests to. This can be in the form of a flat URI (e.g. 'https://testendpoint/') or can specify to route via a path (e.g. 'https://testendpoint/{requestPath}')

        :return: The endpoint of this CustomRPRouteDefinition.
        :rtype: str
        """
        return self._endpoint

    @endpoint.setter
    def endpoint(self, endpoint):
        """Sets the endpoint of this CustomRPRouteDefinition.

        The route definition endpoint URI that the custom resource provider will proxy requests to. This can be in the form of a flat URI (e.g. 'https://testendpoint/') or can specify to route via a path (e.g. 'https://testendpoint/{requestPath}')

        :param endpoint: The endpoint of this CustomRPRouteDefinition.
        :type endpoint: str
        """
        if endpoint is None:
            raise ValueError("Invalid value for `endpoint`, must not be `None`")
        if endpoint is not None and not re.search(r'^https:\/\/.+', endpoint):
            raise ValueError("Invalid value for `endpoint`, must be a follow pattern or equal to `/^https:\/\/.+/`")

        self._endpoint = endpoint

    @property
    def name(self):
        """Gets the name of this CustomRPRouteDefinition.

        The name of the route definition. This becomes the name for the ARM extension (e.g. '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomProviders/resourceProviders/{resourceProviderName}/{name}')

        :return: The name of this CustomRPRouteDefinition.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CustomRPRouteDefinition.

        The name of the route definition. This becomes the name for the ARM extension (e.g. '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomProviders/resourceProviders/{resourceProviderName}/{name}')

        :param name: The name of this CustomRPRouteDefinition.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name
