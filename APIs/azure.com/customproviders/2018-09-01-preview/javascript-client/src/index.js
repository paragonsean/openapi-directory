/**
 * customproviders
 * Allows extension of ARM control plane with custom resource providers.
 *
 * The version of the OpenAPI document: 2018-09-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Association from './model/Association';
import AssociationProperties from './model/AssociationProperties';
import AssociationsList from './model/AssociationsList';
import CustomRPActionRouteDefinition from './model/CustomRPActionRouteDefinition';
import CustomRPManifest from './model/CustomRPManifest';
import CustomRPResourceTypeRouteDefinition from './model/CustomRPResourceTypeRouteDefinition';
import CustomRPRouteDefinition from './model/CustomRPRouteDefinition';
import CustomRPValidations from './model/CustomRPValidations';
import ErrorDefinition from './model/ErrorDefinition';
import ErrorResponse from './model/ErrorResponse';
import ListByCustomRPManifest from './model/ListByCustomRPManifest';
import Resource from './model/Resource';
import ResourceProviderOperation from './model/ResourceProviderOperation';
import ResourceProviderOperationDisplay from './model/ResourceProviderOperationDisplay';
import ResourceProviderOperationList from './model/ResourceProviderOperationList';
import ResourceProvidersUpdate from './model/ResourceProvidersUpdate';
import AssociationsApi from './api/AssociationsApi';
import CustomResourceProviderApi from './api/CustomResourceProviderApi';
import OperationsApi from './api/OperationsApi';


/**
* Allows extension of ARM control plane with custom resource providers..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var Customproviders = require('index'); // See note below*.
* var xxxSvc = new Customproviders.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new Customproviders.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new Customproviders.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new Customproviders.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2018-09-01-preview
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Association model constructor.
     * @property {module:model/Association}
     */
    Association,

    /**
     * The AssociationProperties model constructor.
     * @property {module:model/AssociationProperties}
     */
    AssociationProperties,

    /**
     * The AssociationsList model constructor.
     * @property {module:model/AssociationsList}
     */
    AssociationsList,

    /**
     * The CustomRPActionRouteDefinition model constructor.
     * @property {module:model/CustomRPActionRouteDefinition}
     */
    CustomRPActionRouteDefinition,

    /**
     * The CustomRPManifest model constructor.
     * @property {module:model/CustomRPManifest}
     */
    CustomRPManifest,

    /**
     * The CustomRPResourceTypeRouteDefinition model constructor.
     * @property {module:model/CustomRPResourceTypeRouteDefinition}
     */
    CustomRPResourceTypeRouteDefinition,

    /**
     * The CustomRPRouteDefinition model constructor.
     * @property {module:model/CustomRPRouteDefinition}
     */
    CustomRPRouteDefinition,

    /**
     * The CustomRPValidations model constructor.
     * @property {module:model/CustomRPValidations}
     */
    CustomRPValidations,

    /**
     * The ErrorDefinition model constructor.
     * @property {module:model/ErrorDefinition}
     */
    ErrorDefinition,

    /**
     * The ErrorResponse model constructor.
     * @property {module:model/ErrorResponse}
     */
    ErrorResponse,

    /**
     * The ListByCustomRPManifest model constructor.
     * @property {module:model/ListByCustomRPManifest}
     */
    ListByCustomRPManifest,

    /**
     * The Resource model constructor.
     * @property {module:model/Resource}
     */
    Resource,

    /**
     * The ResourceProviderOperation model constructor.
     * @property {module:model/ResourceProviderOperation}
     */
    ResourceProviderOperation,

    /**
     * The ResourceProviderOperationDisplay model constructor.
     * @property {module:model/ResourceProviderOperationDisplay}
     */
    ResourceProviderOperationDisplay,

    /**
     * The ResourceProviderOperationList model constructor.
     * @property {module:model/ResourceProviderOperationList}
     */
    ResourceProviderOperationList,

    /**
     * The ResourceProvidersUpdate model constructor.
     * @property {module:model/ResourceProvidersUpdate}
     */
    ResourceProvidersUpdate,

    /**
    * The AssociationsApi service constructor.
    * @property {module:api/AssociationsApi}
    */
    AssociationsApi,

    /**
    * The CustomResourceProviderApi service constructor.
    * @property {module:api/CustomResourceProviderApi}
    */
    CustomResourceProviderApi,

    /**
    * The OperationsApi service constructor.
    * @property {module:api/OperationsApi}
    */
    OperationsApi
};
