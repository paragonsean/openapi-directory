/**
 * customproviders
 * Allows extension of ARM control plane with custom resource providers.
 *
 * The version of the OpenAPI document: 2018-09-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CustomRPManifest from '../model/CustomRPManifest';
import ErrorResponse from '../model/ErrorResponse';
import ListByCustomRPManifest from '../model/ListByCustomRPManifest';
import ResourceProvidersUpdate from '../model/ResourceProvidersUpdate';

/**
* CustomResourceProvider service.
* @module api/CustomResourceProviderApi
* @version 2018-09-01-preview
*/
export default class CustomResourceProviderApi {

    /**
    * Constructs a new CustomResourceProviderApi. 
    * @alias module:api/CustomResourceProviderApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the customResourceProviderCreateOrUpdate operation.
     * @callback module:api/CustomResourceProviderApi~customResourceProviderCreateOrUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CustomRPManifest} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates or updates the custom resource provider.
     * @param {String} subscriptionId The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} resourceProviderName The name of the resource provider.
     * @param {String} apiVersion The API version to be used with the HTTP request.
     * @param {module:model/CustomRPManifest} resourceProvider The parameters required to create or update a custom resource provider definition.
     * @param {module:api/CustomResourceProviderApi~customResourceProviderCreateOrUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CustomRPManifest}
     */
    customResourceProviderCreateOrUpdate(subscriptionId, resourceGroupName, resourceProviderName, apiVersion, resourceProvider, callback) {
      let postBody = resourceProvider;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling customResourceProviderCreateOrUpdate");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling customResourceProviderCreateOrUpdate");
      }
      // verify the required parameter 'resourceProviderName' is set
      if (resourceProviderName === undefined || resourceProviderName === null) {
        throw new Error("Missing the required parameter 'resourceProviderName' when calling customResourceProviderCreateOrUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling customResourceProviderCreateOrUpdate");
      }
      // verify the required parameter 'resourceProvider' is set
      if (resourceProvider === undefined || resourceProvider === null) {
        throw new Error("Missing the required parameter 'resourceProvider' when calling customResourceProviderCreateOrUpdate");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'resourceProviderName': resourceProviderName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CustomRPManifest;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomProviders/resourceProviders/{resourceProviderName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the customResourceProviderDelete operation.
     * @callback module:api/CustomResourceProviderApi~customResourceProviderDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes the custom resource provider.
     * @param {String} subscriptionId The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} resourceProviderName The name of the resource provider.
     * @param {String} apiVersion The API version to be used with the HTTP request.
     * @param {module:api/CustomResourceProviderApi~customResourceProviderDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    customResourceProviderDelete(subscriptionId, resourceGroupName, resourceProviderName, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling customResourceProviderDelete");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling customResourceProviderDelete");
      }
      // verify the required parameter 'resourceProviderName' is set
      if (resourceProviderName === undefined || resourceProviderName === null) {
        throw new Error("Missing the required parameter 'resourceProviderName' when calling customResourceProviderDelete");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling customResourceProviderDelete");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'resourceProviderName': resourceProviderName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomProviders/resourceProviders/{resourceProviderName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the customResourceProviderGet operation.
     * @callback module:api/CustomResourceProviderApi~customResourceProviderGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CustomRPManifest} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the custom resource provider manifest.
     * @param {String} subscriptionId The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} resourceProviderName The name of the resource provider.
     * @param {String} apiVersion The API version to be used with the HTTP request.
     * @param {module:api/CustomResourceProviderApi~customResourceProviderGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CustomRPManifest}
     */
    customResourceProviderGet(subscriptionId, resourceGroupName, resourceProviderName, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling customResourceProviderGet");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling customResourceProviderGet");
      }
      // verify the required parameter 'resourceProviderName' is set
      if (resourceProviderName === undefined || resourceProviderName === null) {
        throw new Error("Missing the required parameter 'resourceProviderName' when calling customResourceProviderGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling customResourceProviderGet");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'resourceProviderName': resourceProviderName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = CustomRPManifest;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomProviders/resourceProviders/{resourceProviderName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the customResourceProviderListByResourceGroup operation.
     * @callback module:api/CustomResourceProviderApi~customResourceProviderListByResourceGroupCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListByCustomRPManifest} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets all the custom resource providers within a resource group.
     * @param {String} subscriptionId The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} apiVersion The API version to be used with the HTTP request.
     * @param {module:api/CustomResourceProviderApi~customResourceProviderListByResourceGroupCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListByCustomRPManifest}
     */
    customResourceProviderListByResourceGroup(subscriptionId, resourceGroupName, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling customResourceProviderListByResourceGroup");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling customResourceProviderListByResourceGroup");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling customResourceProviderListByResourceGroup");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListByCustomRPManifest;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomProviders/resourceProviders', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the customResourceProviderListBySubscription operation.
     * @callback module:api/CustomResourceProviderApi~customResourceProviderListBySubscriptionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListByCustomRPManifest} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets all the custom resource providers within a subscription.
     * @param {String} subscriptionId The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)
     * @param {String} apiVersion The API version to be used with the HTTP request.
     * @param {module:api/CustomResourceProviderApi~customResourceProviderListBySubscriptionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListByCustomRPManifest}
     */
    customResourceProviderListBySubscription(subscriptionId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling customResourceProviderListBySubscription");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling customResourceProviderListBySubscription");
      }

      let pathParams = {
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListByCustomRPManifest;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.CustomProviders/resourceProviders', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the customResourceProviderUpdate operation.
     * @callback module:api/CustomResourceProviderApi~customResourceProviderUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CustomRPManifest} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates an existing custom resource provider. The only value that can be updated via PATCH currently is the tags.
     * @param {String} subscriptionId The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} resourceProviderName The name of the resource provider.
     * @param {String} apiVersion The API version to be used with the HTTP request.
     * @param {module:model/ResourceProvidersUpdate} patchableResource The updatable fields of a custom resource provider.
     * @param {module:api/CustomResourceProviderApi~customResourceProviderUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CustomRPManifest}
     */
    customResourceProviderUpdate(subscriptionId, resourceGroupName, resourceProviderName, apiVersion, patchableResource, callback) {
      let postBody = patchableResource;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling customResourceProviderUpdate");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling customResourceProviderUpdate");
      }
      // verify the required parameter 'resourceProviderName' is set
      if (resourceProviderName === undefined || resourceProviderName === null) {
        throw new Error("Missing the required parameter 'resourceProviderName' when calling customResourceProviderUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling customResourceProviderUpdate");
      }
      // verify the required parameter 'patchableResource' is set
      if (patchableResource === undefined || patchableResource === null) {
        throw new Error("Missing the required parameter 'patchableResource' when calling customResourceProviderUpdate");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'resourceProviderName': resourceProviderName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CustomRPManifest;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomProviders/resourceProviders/{resourceProviderName}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
