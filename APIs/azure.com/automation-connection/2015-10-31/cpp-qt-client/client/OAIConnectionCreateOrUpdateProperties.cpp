/**
 * AutomationManagement
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2015-10-31
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIConnectionCreateOrUpdateProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIConnectionCreateOrUpdateProperties::OAIConnectionCreateOrUpdateProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIConnectionCreateOrUpdateProperties::OAIConnectionCreateOrUpdateProperties() {
    this->initializeModel();
}

OAIConnectionCreateOrUpdateProperties::~OAIConnectionCreateOrUpdateProperties() {}

void OAIConnectionCreateOrUpdateProperties::initializeModel() {

    m_connection_type_isSet = false;
    m_connection_type_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_field_definition_values_isSet = false;
    m_field_definition_values_isValid = false;
}

void OAIConnectionCreateOrUpdateProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIConnectionCreateOrUpdateProperties::fromJsonObject(QJsonObject json) {

    m_connection_type_isValid = ::OpenAPI::fromJsonValue(m_connection_type, json[QString("connectionType")]);
    m_connection_type_isSet = !json[QString("connectionType")].isNull() && m_connection_type_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_field_definition_values_isValid = ::OpenAPI::fromJsonValue(m_field_definition_values, json[QString("fieldDefinitionValues")]);
    m_field_definition_values_isSet = !json[QString("fieldDefinitionValues")].isNull() && m_field_definition_values_isValid;
}

QString OAIConnectionCreateOrUpdateProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIConnectionCreateOrUpdateProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_connection_type.isSet()) {
        obj.insert(QString("connectionType"), ::OpenAPI::toJsonValue(m_connection_type));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_field_definition_values.size() > 0) {
        obj.insert(QString("fieldDefinitionValues"), ::OpenAPI::toJsonValue(m_field_definition_values));
    }
    return obj;
}

OAIConnectionTypeAssociationProperty OAIConnectionCreateOrUpdateProperties::getConnectionType() const {
    return m_connection_type;
}
void OAIConnectionCreateOrUpdateProperties::setConnectionType(const OAIConnectionTypeAssociationProperty &connection_type) {
    m_connection_type = connection_type;
    m_connection_type_isSet = true;
}

bool OAIConnectionCreateOrUpdateProperties::is_connection_type_Set() const{
    return m_connection_type_isSet;
}

bool OAIConnectionCreateOrUpdateProperties::is_connection_type_Valid() const{
    return m_connection_type_isValid;
}

QString OAIConnectionCreateOrUpdateProperties::getDescription() const {
    return m_description;
}
void OAIConnectionCreateOrUpdateProperties::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIConnectionCreateOrUpdateProperties::is_description_Set() const{
    return m_description_isSet;
}

bool OAIConnectionCreateOrUpdateProperties::is_description_Valid() const{
    return m_description_isValid;
}

QMap<QString, QString> OAIConnectionCreateOrUpdateProperties::getFieldDefinitionValues() const {
    return m_field_definition_values;
}
void OAIConnectionCreateOrUpdateProperties::setFieldDefinitionValues(const QMap<QString, QString> &field_definition_values) {
    m_field_definition_values = field_definition_values;
    m_field_definition_values_isSet = true;
}

bool OAIConnectionCreateOrUpdateProperties::is_field_definition_values_Set() const{
    return m_field_definition_values_isSet;
}

bool OAIConnectionCreateOrUpdateProperties::is_field_definition_values_Valid() const{
    return m_field_definition_values_isValid;
}

bool OAIConnectionCreateOrUpdateProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_connection_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_field_definition_values.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIConnectionCreateOrUpdateProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_connection_type_isValid && true;
}

} // namespace OpenAPI
