/*
 * AutomationManagement
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2015-10-31
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Connection;
import org.openapitools.client.model.ConnectionCreateOrUpdateParameters;
import org.openapitools.client.model.ConnectionListByAutomationAccountDefaultResponse;
import org.openapitools.client.model.ConnectionListResult;
import org.openapitools.client.model.ConnectionUpdateParameters;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ConnectionApi
 */
@Disabled
public class ConnectionApiTest {

    private final ConnectionApi api = new ConnectionApi();

    /**
     * Create or update a connection.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void connectionCreateOrUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String automationAccountName = null;
        String connectionName = null;
        String subscriptionId = null;
        String apiVersion = null;
        ConnectionCreateOrUpdateParameters parameters = null;
        Connection response = api.connectionCreateOrUpdate(resourceGroupName, automationAccountName, connectionName, subscriptionId, apiVersion, parameters);
        // TODO: test validations
    }

    /**
     * Delete the connection.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void connectionDeleteTest() throws ApiException {
        String resourceGroupName = null;
        String automationAccountName = null;
        String connectionName = null;
        String subscriptionId = null;
        String apiVersion = null;
        Connection response = api.connectionDelete(resourceGroupName, automationAccountName, connectionName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Retrieve the connection identified by connection name.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void connectionGetTest() throws ApiException {
        String resourceGroupName = null;
        String automationAccountName = null;
        String connectionName = null;
        String subscriptionId = null;
        String apiVersion = null;
        Connection response = api.connectionGet(resourceGroupName, automationAccountName, connectionName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Retrieve a list of connections.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void connectionListByAutomationAccountTest() throws ApiException {
        String resourceGroupName = null;
        String automationAccountName = null;
        String subscriptionId = null;
        String apiVersion = null;
        ConnectionListResult response = api.connectionListByAutomationAccount(resourceGroupName, automationAccountName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Update a connection.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void connectionUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String automationAccountName = null;
        String connectionName = null;
        String subscriptionId = null;
        String apiVersion = null;
        ConnectionUpdateParameters parameters = null;
        Connection response = api.connectionUpdate(resourceGroupName, automationAccountName, connectionName, subscriptionId, apiVersion, parameters);
        // TODO: test validations
    }

}
