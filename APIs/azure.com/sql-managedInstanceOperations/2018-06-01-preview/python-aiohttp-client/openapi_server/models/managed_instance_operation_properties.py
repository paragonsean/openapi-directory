# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ManagedInstanceOperationProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, error_code: int=None, error_description: str=None, error_severity: int=None, estimated_completion_time: datetime=None, is_cancellable: bool=None, is_user_error: bool=None, managed_instance_name: str=None, operation: str=None, operation_friendly_name: str=None, percent_complete: int=None, start_time: datetime=None, state: str=None):
        """ManagedInstanceOperationProperties - a model defined in OpenAPI

        :param description: The description of this ManagedInstanceOperationProperties.
        :param error_code: The error_code of this ManagedInstanceOperationProperties.
        :param error_description: The error_description of this ManagedInstanceOperationProperties.
        :param error_severity: The error_severity of this ManagedInstanceOperationProperties.
        :param estimated_completion_time: The estimated_completion_time of this ManagedInstanceOperationProperties.
        :param is_cancellable: The is_cancellable of this ManagedInstanceOperationProperties.
        :param is_user_error: The is_user_error of this ManagedInstanceOperationProperties.
        :param managed_instance_name: The managed_instance_name of this ManagedInstanceOperationProperties.
        :param operation: The operation of this ManagedInstanceOperationProperties.
        :param operation_friendly_name: The operation_friendly_name of this ManagedInstanceOperationProperties.
        :param percent_complete: The percent_complete of this ManagedInstanceOperationProperties.
        :param start_time: The start_time of this ManagedInstanceOperationProperties.
        :param state: The state of this ManagedInstanceOperationProperties.
        """
        self.openapi_types = {
            'description': str,
            'error_code': int,
            'error_description': str,
            'error_severity': int,
            'estimated_completion_time': datetime,
            'is_cancellable': bool,
            'is_user_error': bool,
            'managed_instance_name': str,
            'operation': str,
            'operation_friendly_name': str,
            'percent_complete': int,
            'start_time': datetime,
            'state': str
        }

        self.attribute_map = {
            'description': 'description',
            'error_code': 'errorCode',
            'error_description': 'errorDescription',
            'error_severity': 'errorSeverity',
            'estimated_completion_time': 'estimatedCompletionTime',
            'is_cancellable': 'isCancellable',
            'is_user_error': 'isUserError',
            'managed_instance_name': 'managedInstanceName',
            'operation': 'operation',
            'operation_friendly_name': 'operationFriendlyName',
            'percent_complete': 'percentComplete',
            'start_time': 'startTime',
            'state': 'state'
        }

        self._description = description
        self._error_code = error_code
        self._error_description = error_description
        self._error_severity = error_severity
        self._estimated_completion_time = estimated_completion_time
        self._is_cancellable = is_cancellable
        self._is_user_error = is_user_error
        self._managed_instance_name = managed_instance_name
        self._operation = operation
        self._operation_friendly_name = operation_friendly_name
        self._percent_complete = percent_complete
        self._start_time = start_time
        self._state = state

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ManagedInstanceOperationProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ManagedInstanceOperationProperties of this ManagedInstanceOperationProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this ManagedInstanceOperationProperties.

        The operation description.

        :return: The description of this ManagedInstanceOperationProperties.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ManagedInstanceOperationProperties.

        The operation description.

        :param description: The description of this ManagedInstanceOperationProperties.
        :type description: str
        """

        self._description = description

    @property
    def error_code(self):
        """Gets the error_code of this ManagedInstanceOperationProperties.

        The operation error code.

        :return: The error_code of this ManagedInstanceOperationProperties.
        :rtype: int
        """
        return self._error_code

    @error_code.setter
    def error_code(self, error_code):
        """Sets the error_code of this ManagedInstanceOperationProperties.

        The operation error code.

        :param error_code: The error_code of this ManagedInstanceOperationProperties.
        :type error_code: int
        """

        self._error_code = error_code

    @property
    def error_description(self):
        """Gets the error_description of this ManagedInstanceOperationProperties.

        The operation error description.

        :return: The error_description of this ManagedInstanceOperationProperties.
        :rtype: str
        """
        return self._error_description

    @error_description.setter
    def error_description(self, error_description):
        """Sets the error_description of this ManagedInstanceOperationProperties.

        The operation error description.

        :param error_description: The error_description of this ManagedInstanceOperationProperties.
        :type error_description: str
        """

        self._error_description = error_description

    @property
    def error_severity(self):
        """Gets the error_severity of this ManagedInstanceOperationProperties.

        The operation error severity.

        :return: The error_severity of this ManagedInstanceOperationProperties.
        :rtype: int
        """
        return self._error_severity

    @error_severity.setter
    def error_severity(self, error_severity):
        """Sets the error_severity of this ManagedInstanceOperationProperties.

        The operation error severity.

        :param error_severity: The error_severity of this ManagedInstanceOperationProperties.
        :type error_severity: int
        """

        self._error_severity = error_severity

    @property
    def estimated_completion_time(self):
        """Gets the estimated_completion_time of this ManagedInstanceOperationProperties.

        The estimated completion time of the operation.

        :return: The estimated_completion_time of this ManagedInstanceOperationProperties.
        :rtype: datetime
        """
        return self._estimated_completion_time

    @estimated_completion_time.setter
    def estimated_completion_time(self, estimated_completion_time):
        """Sets the estimated_completion_time of this ManagedInstanceOperationProperties.

        The estimated completion time of the operation.

        :param estimated_completion_time: The estimated_completion_time of this ManagedInstanceOperationProperties.
        :type estimated_completion_time: datetime
        """

        self._estimated_completion_time = estimated_completion_time

    @property
    def is_cancellable(self):
        """Gets the is_cancellable of this ManagedInstanceOperationProperties.

        Whether the operation can be cancelled.

        :return: The is_cancellable of this ManagedInstanceOperationProperties.
        :rtype: bool
        """
        return self._is_cancellable

    @is_cancellable.setter
    def is_cancellable(self, is_cancellable):
        """Sets the is_cancellable of this ManagedInstanceOperationProperties.

        Whether the operation can be cancelled.

        :param is_cancellable: The is_cancellable of this ManagedInstanceOperationProperties.
        :type is_cancellable: bool
        """

        self._is_cancellable = is_cancellable

    @property
    def is_user_error(self):
        """Gets the is_user_error of this ManagedInstanceOperationProperties.

        Whether or not the error is a user error.

        :return: The is_user_error of this ManagedInstanceOperationProperties.
        :rtype: bool
        """
        return self._is_user_error

    @is_user_error.setter
    def is_user_error(self, is_user_error):
        """Sets the is_user_error of this ManagedInstanceOperationProperties.

        Whether or not the error is a user error.

        :param is_user_error: The is_user_error of this ManagedInstanceOperationProperties.
        :type is_user_error: bool
        """

        self._is_user_error = is_user_error

    @property
    def managed_instance_name(self):
        """Gets the managed_instance_name of this ManagedInstanceOperationProperties.

        The name of the managed instance the operation is being performed on.

        :return: The managed_instance_name of this ManagedInstanceOperationProperties.
        :rtype: str
        """
        return self._managed_instance_name

    @managed_instance_name.setter
    def managed_instance_name(self, managed_instance_name):
        """Sets the managed_instance_name of this ManagedInstanceOperationProperties.

        The name of the managed instance the operation is being performed on.

        :param managed_instance_name: The managed_instance_name of this ManagedInstanceOperationProperties.
        :type managed_instance_name: str
        """

        self._managed_instance_name = managed_instance_name

    @property
    def operation(self):
        """Gets the operation of this ManagedInstanceOperationProperties.

        The name of operation.

        :return: The operation of this ManagedInstanceOperationProperties.
        :rtype: str
        """
        return self._operation

    @operation.setter
    def operation(self, operation):
        """Sets the operation of this ManagedInstanceOperationProperties.

        The name of operation.

        :param operation: The operation of this ManagedInstanceOperationProperties.
        :type operation: str
        """

        self._operation = operation

    @property
    def operation_friendly_name(self):
        """Gets the operation_friendly_name of this ManagedInstanceOperationProperties.

        The friendly name of operation.

        :return: The operation_friendly_name of this ManagedInstanceOperationProperties.
        :rtype: str
        """
        return self._operation_friendly_name

    @operation_friendly_name.setter
    def operation_friendly_name(self, operation_friendly_name):
        """Sets the operation_friendly_name of this ManagedInstanceOperationProperties.

        The friendly name of operation.

        :param operation_friendly_name: The operation_friendly_name of this ManagedInstanceOperationProperties.
        :type operation_friendly_name: str
        """

        self._operation_friendly_name = operation_friendly_name

    @property
    def percent_complete(self):
        """Gets the percent_complete of this ManagedInstanceOperationProperties.

        The percentage of the operation completed.

        :return: The percent_complete of this ManagedInstanceOperationProperties.
        :rtype: int
        """
        return self._percent_complete

    @percent_complete.setter
    def percent_complete(self, percent_complete):
        """Sets the percent_complete of this ManagedInstanceOperationProperties.

        The percentage of the operation completed.

        :param percent_complete: The percent_complete of this ManagedInstanceOperationProperties.
        :type percent_complete: int
        """

        self._percent_complete = percent_complete

    @property
    def start_time(self):
        """Gets the start_time of this ManagedInstanceOperationProperties.

        The operation start time.

        :return: The start_time of this ManagedInstanceOperationProperties.
        :rtype: datetime
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this ManagedInstanceOperationProperties.

        The operation start time.

        :param start_time: The start_time of this ManagedInstanceOperationProperties.
        :type start_time: datetime
        """

        self._start_time = start_time

    @property
    def state(self):
        """Gets the state of this ManagedInstanceOperationProperties.

        The operation state.

        :return: The state of this ManagedInstanceOperationProperties.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this ManagedInstanceOperationProperties.

        The operation state.

        :param state: The state of this ManagedInstanceOperationProperties.
        :type state: str
        """
        allowed_values = ["Pending", "InProgress", "Succeeded", "Failed", "CancelInProgress", "Cancelled"]  # noqa: E501
        if state not in allowed_values:
            raise ValueError(
                "Invalid value for `state` ({0}), must be one of {1}"
                .format(state, allowed_values)
            )

        self._state = state
